## seq = false
## max_seq_length = 1
## max_nb_layers = 8
## alpha = 10.
## max_nb_parse = 64
## max_parse_dl_factor = 3.
## max_relaxation_level_parse_layers = 16
## def_match_threshold = 1.
## max_nb_diff = 3
## max_nb_grid_reads = 3
## max_expressions = 100000
## max_refinements = 20
## options
alpha = 10.0
mode = training
timeout_build = 60
timeout_prune = 10
timeout_predict = 3

=====================================
[-400] Checking task 007bbfb7.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6565.7 = 6578.3
DL output with Mo: L = 12.6 + 38457.0 = 38469.6
DL input+output M: L = 25.2 + 45022.7 = 45047.9

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = compose(majorityColor(^.grid), ^.grid, ^.grid)
0.548	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.007	
0.003	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 3561.0 = 3599.8
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 64.5 + 3561.0 = 3625.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 38.3 + 0.0 = 38.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=0  (2,0)=0 
   (0.0 bits)
data: 
0 0 0 0 7#7#0 7#7#
0 0 0 7#7#7#7#7#7#
0 0 0 0 7#7#0 7#7#
0 7#7#0 7#7#0 7#7#
7#7#7#7#7#7#7#7#7#
0 7#7#0 7#7#0 7#7#
0 0 0 0 7#7#0 7#7#
0 0 0 7#7#7#7#7#7#
0 0 0 0 7#7#0 7#7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=0  (2,0)=0 
correct output grid

TRAIN 007bbfb7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=4  (0,2)=4  (2,1)=4 
   (0.0 bits)
data: 
4 0 4 0 0 0 4 0 4 
0 0 0 0 0 0 0 0 0 
0 4 0 0 0 0 0 4 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 4 0 4 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 4 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=4  (0,2)=4  (2,1)=4 
correct output grid

TRAIN 007bbfb7.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,2)=2  (2,0)=2  (2,2)=2 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 2 
0 0 0 0 0 0 2 0 2 
0 0 0 0 0 0 0 0 0 
0 0 2 0 0 0 0 0 2 
2 0 2 0 0 0 2 0 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,2)=2  (2,0)=2  (2,2)=2 
correct output grid

TRAIN 007bbfb7.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,2)=0  (1,1)=0  (1,2)=0  (2,0)=0 
   (0.0 bits)
data: 
6 6 0 6 6 0 0 0 0 
6 0 0 6 0 0 0 0 0 
0 6 6 0 6 6 0 0 0 
6 6 0 0 0 0 0 0 0 
6 0 0 0 0 0 0 0 0 
0 6 6 0 0 0 0 0 0 
0 0 0 6 6 0 6 6 0 
0 0 0 6 0 0 6 0 0 
0 0 0 0 6 6 0 6 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,2)=0  (1,1)=0  (1,2)=0  (2,0)=0 
correct output grid

TRAIN 007bbfb7.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (1,0)=0  (1,1)=0  (1,2)=0  (2,0)=0 
   (0.0 bits)
data: 
2 2 2 2 2 2 2 2 2 
0 0 0 0 0 0 0 0 0 
0 2 2 0 2 2 0 2 2 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 2 2 2 2 2 2 
0 0 0 0 0 0 0 0 0 
0 0 0 0 2 2 0 2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (1,0)=0  (1,1)=0  (1,2)=0  (2,0)=0 
correct output grid

TRAIN 007bbfb7.json/5: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,1)=0  (1,1)=0  (2,2)=0 
correct output grid

TEST 007bbfb7.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-399] Checking task 00d62c1b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 54515.3 = 54527.9
DL output with Mo: L = 12.6 + 73361.1 = 73373.8
DL input+output M: L = 25.2 + 127876.5 = 127901.7

# learning a model for train pairs
2.000	
1.255	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.627	OUT ADD ^.layer_0 = ^.layer_0
0.443	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.403	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.387	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.373	OUT SPE ^.size = ^.size
0.367	OUT SPE ^.layer_00.shape.mask = ^.layer_00.shape.mask
0.362	IN  SPE ^.layer_00.shape.color = green
0.357	IN  SPE ^.layer_0.shape.color = green
0.353	OUT SPE ^.layer_01.shape.color = yellow
0.350	OUT SPE ^.layer_00.shape.size.i = ^.layer_00.shape.size.j
0.346	OUT SPE ^.layer_00.pos.j = ^.layer_00.pos.j
0.344	IN  SPE ^.color = black
0.342	OUT SPE ^.layer_01.shape.mask = Full
0.340	OUT SPE ^.color = black
0.115	
0.115	IN  GEN ^.layer_0.shape.color = ?
0.115	IN  GEN ^.layer_00.shape.color = ?
0.115	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (^.layer_00.shape.size.j,?) and color ? and mask ^.layer_00.shape.mask at (?,^.layer_00.pos.j)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 12334.5 = 12405.5
DL output with Mo: L = 80.3 + 8180.8 = 8261.1
DL input+output M: L = 151.3 + 20515.3 = 20666.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (^.layer_00.shape.size.j,?) and color ? and mask ^.layer_00.shape.mask at (?,^.layer_00.pos.j)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 71.7 = 135.9
DL output with Mo: L = 80.3 + 8180.8 = 8261.1
DL input+output M: L = 144.5 + 8252.5 = 8397.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (3,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta: (2,2)=0 
   (3.2 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,3)
diff: 
delta:
   (30.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (2,1)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta: (2,2)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (3,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta: (3,3)=0 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (3,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta: (2,2)=0 
! 8 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta: (1,3)=0 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,6)
diff: 
delta: (2,2)=0 
   (71.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta: (1,3)=0 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (2,3)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta: (2,4)=0 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta: (2,2)=0 
! 7 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,4) and color green and mask Full at (7,4)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta: (7,6)=0 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,2) and color yellow and mask Full at (3,4)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,7)
diff: 
delta:
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,4) and color green and mask Full at (7,4)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta: (7,6)=0 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,7) and color green and mask Full at (2,1)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta: (2,3)=0  (2,6)=0 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,1) and color green and mask Full at (3,3)
  _0: a rectangle with size (4,1) and color green and mask Full at (3,6)
diff: 
delta: (0,5)=3  (1,4)=3  (2,1)=3  (2,2)=3  (2,4)=3  (2,5)=3  (2,7)=3  (3,0)=3  (3,8)=3  (4,7)=3  (7,4)=3  (7,5)=3  (7,7)=3  (8,8)=3 
! 33 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,1) and color green and mask Full at (4,8)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta: (7,8)=0 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,3)
diff: 
delta: (8,4)=4 
   (75.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,1) and color green and mask Full at (3,7)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta: (5,7)=0 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,1) and color green and mask Full at (4,8)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta: (7,8)=0 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (8,1) and color green and mask Full at (1,5)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta: (5,5)=0  (6,5)=0  (7,5)=0 
! 12 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (16,12)=3  (17,13)=3 
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _01: a rectangle with size (4,6) and color yellow and mask Full at (5,9)
diff: 
delta: (2,8)=4  (3,9)=4  (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (12,8)=4  (12,9)=4  (13,8)=4  (13,9)=4  (15,16)=4  (16,12)=3  (17,13)=3 
   (605.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _0: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (16,12)=3  (17,13)=3 
! 93 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (16,12)=3  (17,13)=3 
! 55 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _0: a rectangle with size (3,3) and color green and mask Full at (14,15)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (12,13)=3  (13,14)=3  (13,17)=3  (15,15)=3  (15,16)=0  (15,17)=3  (16,12)=3  (17,13)=3 
! 96 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|.x...x|.x...x|.xxxxx at (15,6)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3 
! 101 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,6) and color green and mask xxxxxx|.x...x|.x...x|.xxxxx at (15,6)
  _0: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3 
! 62 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
  _0: a rectangle with size (1,6) and color green and mask Full at (15,6)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3  (16,7)=3  (16,11)=3  (17,7)=3  (17,11)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3 
! 110 wrong pixels (generated / expected)

TEST 00d62c1b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.7 sec (8.7 sec/task)
bits-train-error = 8180.8 bits (8180.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-398] Checking task 017c7c7b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9744.4 = 9757.0
DL output with Mo: L = 12.6 + 14197.2 = 14209.8
DL input+output M: L = 25.2 + 23941.6 = 23966.8

# learning a model for train pairs
2.000	
1.152	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.350	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.307	OUT SPE ^.layer_0.shape.mask = fillResizeAlike_strict(blue, ^.layer_0.shape.size + (3, 0), ^.layer_0.shape.mask)
0.274	OUT SPE ^.size = ^.size + (3, 0)
0.241	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + (3, 0)
0.221	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.204	IN  SPE ^.layer_0.shape.color = blue
0.192	OUT SPE ^.layer_0.shape.color = red
0.185	IN  SPE ^.color = black
0.180	OUT SPE ^.color = black
0.011	
0.011	IN  GEN ^.layer_0.shape.color = ?
0.011	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size + (3, 0) and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (3, 0) and color red and mask fillResizeAlike_strict(blue, ^.layer_0.shape.size + (3, 0), ^.layer_0.shape.mask) at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1645.4 = 1687.7
DL output with Mo: L = 96.4 + 0.0 = 96.4
DL input+output M: L = 138.7 + 1645.4 = 1784.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size + (3, 0) and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (3, 0) and color red and mask fillResizeAlike_strict(blue, ^.layer_0.shape.size + (3, 0), ^.layer_0.shape.mask) at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 96.4 + 0.0 = 96.4
DL input+output M: L = 135.2 + 0.0 = 135.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask .x.|xx.|.x.|.xx|.x.|xx. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,3) and color red and mask .x.|xx.|.x.|.xx|.x.|xx.|.x.|.xx|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask .x.|xx.|.x.|.xx|.x.|xx. at (0,0)
diff: 
delta:
correct output grid

TRAIN 017c7c7b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,3) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
correct output grid

TRAIN 017c7c7b.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask .x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,2) and color red and mask .x|xx|.x|.x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask .x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
correct output grid

TRAIN 017c7c7b.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask xxx|.x.|.x.|xxx|.x.|.x. at (0,0)
diff: 
delta:
correct output grid

TEST 017c7c7b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-397] Checking task 025d127b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13992.1 = 14004.7
DL output with Mo: L = 12.6 + 13992.1 = 14004.7
DL input+output M: L = 25.2 + 27984.1 = 28009.3

# learning a model for train pairs
2.000	
1.353	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.713	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.674	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.640	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.612	OUT SPE ^.size = ^.size
0.596	OUT SPE ^.layer_0.pos = '(1, 2)
0.588	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.579	OUT SPE ^.layer_0.shape.size.j = average(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
0.571	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.563	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.555	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.233	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,average(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_0.shape.color and mask ? at '(1, 2)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 4505.2 = 4569.5
DL output with Mo: L = 101.6 + 3100.3 = 3201.9
DL input+output M: L = 165.8 + 7605.6 = 7771.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,average(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_0.shape.color and mask ? at '(1, 2)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 101.6 + 3100.3 = 3201.9
DL input+output M: L = 165.8 + 3100.3 = 3266.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
  _01: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xxx..|x..x.|.x..x|..x.x|..xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask Border at (7,3)
diff: 
delta:
   (58.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
  _01: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
  _01: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 025d127b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (5,4)
diff: 
delta: (2,1)=8  (2,6)=8  (3,2)=8  (3,7)=8  (4,3)=8  (4,8)=8 
   (0.0 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,2)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (5,4)
diff: 
delta: (2,2)=8  (2,7)=8  (3,3)=8  (3,8)=8  (4,4)=8  (4,8)=8 
   (251.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (5,4)
diff: 
delta: (2,1)=8  (2,6)=8  (3,2)=8  (3,7)=8  (4,3)=8  (4,8)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (5,4)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (1,1)
diff: 
delta: (2,1)=8  (2,6)=8  (3,2)=8  (3,7)=8  (4,3)=8  (4,8)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (4,8)
diff: 
delta: (2,1)=8  (2,6)=8  (3,2)=8  (3,7)=8  (4,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8 
! 17 wrong pixels (generated / expected)

TRAIN 025d127b.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (5,4)
diff: 
delta: (2,1)=4  (2,7)=4  (3,2)=4  (3,8)=4  (4,3)=4  (4,9)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (5,4)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (1,1)
diff: 
delta: (2,1)=4  (2,7)=4  (3,2)=4  (3,8)=4  (4,3)=4  (4,9)=4 
! 16 wrong pixels (generated / expected)

TEST 025d127b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.1 sec (54.1 sec/task)
bits-train-error = 3100.3 bits (3100.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-396] Checking task 045e512c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13990.9 = 14003.5
DL output with Mo: L = 12.6 + 50279.9 = 50292.6
DL input+output M: L = 25.2 + 64270.8 = 64296.1

# learning a model for train pairs
2.000	
1.552	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.365	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	OUT ADD ^.layer_00 = ^.layer_0
0.911	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.645	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	OUT SPE ^.layer_01.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.589	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.534	OUT SPE ^.layer_0111.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.518	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, ^.layer_011.shape.color)
0.475	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.460	OUT SPE ^.size = ^.size
0.455	IN  SPE ^.color = black
0.451	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.443	OUT SPE ^.layer_011.pos.j = bottom(^.layer_01) + 2
0.439	OUT SPE ^.layer_01111.shape.size.j = 3
0.435	OUT SPE ^.layer_0111.pos.j = right(^.layer_0) + 2
0.432	OUT SPE ^.layer_0.pos.j = bottom(^.layer_01) - 2
0.428	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i + ^.layer_01.pos.i - ^.layer_0.pos.i
0.425	OUT SPE ^.layer_0111.pos.i = max(^.layer_0.pos.i, ^.layer_01.pos.i)
0.422	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i - ^.layer_01.pos.j - ^.layer_0.pos.j
0.419	OUT SPE ^.layer_011111.shape.color = ^.layer_011.shape.color
0.416	OUT SPE ^.layer_0111111.pos.i = ^.layer_011.pos.i - ^.layer_01.pos.j - ^.layer_0.pos.j
0.414	OUT SPE ^.color = black
0.103	
0.103	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: coloring(^.layer_0.shape, ^.layer_011.shape.color) at (?,bottom(^.layer_01) - 2)
  _01: coloring(^.layer_0.shape, ^.layer_01.shape.color) at (^.layer_01.pos.i + ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i - ^.layer_01.pos.j - ^.layer_0.pos.j,bottom(^.layer_01) + 2)
  _0111: coloring(^.layer_0.shape, ^.layer_01.shape.color) at (max(^.layer_0.pos.i, ^.layer_01.pos.i),right(^.layer_0) + 2)
  _01111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i - ^.layer_01.pos.j - ^.layer_0.pos.j,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 4380.0 = 4469.4
DL output with Mo: L = 469.8 + 4318.9 = 4788.8
DL input+output M: L = 559.2 + 8699.0 = 9258.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: coloring(^.layer_0.shape, ^.layer_011.shape.color) at (?,bottom(^.layer_01) - 2)
  _01: coloring(^.layer_0.shape, ^.layer_01.shape.color) at (^.layer_01.pos.i + ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i - ^.layer_01.pos.j - ^.layer_0.pos.j,bottom(^.layer_01) + 2)
  _0111: coloring(^.layer_0.shape, ^.layer_01.shape.color) at (max(^.layer_0.pos.i, ^.layer_01.pos.i),right(^.layer_0) + 2)
  _01111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i - ^.layer_01.pos.j - ^.layer_0.pos.j,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 469.8 + 4318.9 = 4788.8
DL input+output M: L = 559.1 + 4338.9 = 4898.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (3,1) and color green and mask Full at (6,10)
  _011: a rectangle with size (1,3) and color red and mask Full at (10,6)
diff: 
delta:
   (2.0 bits)
data: a background with size (21,21) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _0: a rectangle with size (3,3) and color red and mask Border at (10,6)
  _01: a rectangle with size (3,3) and color green and mask Border at (6,18)
  _011: a rectangle with size (1,7) and color green and mask Full at (6,10)
  _0111: a rectangle with size (3,3) and color green and mask Border at (6,10)
  _01111: a rectangle with size (3,3) and color red and mask Border at (14,6)
  _011111: a rectangle with size (3,3) and color red and mask Border at (18,6)
  _0111111: a rectangle with size (3,3) and color green and mask Border at (6,14)
diff: 
delta: (6,13)=0 
   (170.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,6)
  _011: a rectangle with size (3,1) and color green and mask Full at (6,10)
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (3,1) and color green and mask Full at (6,10)
  _011: a rectangle with size (1,3) and color red and mask Full at (10,6)
diff: 
delta:
! 67 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (10,6)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _011: a rectangle with size (3,1) and color green and mask Full at (6,10)
diff: 
delta:
! 73 wrong pixels (generated / expected)

TRAIN 045e512c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,9)
diff: 
delta: (8,15)=4 
   (0.0 bits)
data: a background with size (21,21) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _0: a rectangle with size (3,3) and color red and mask +-cross at (7,3)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (3,11)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (7,7)
  _0111: a rectangle with size (3,3) and color yellow and mask +-cross at (7,15)
  _01111: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,11)
  _011111: a rectangle with size (3,2) and color red and mask x.|xx|x. at (7,0)
  _0111111: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (7,19)
diff: 
delta:
   (147.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,9)
diff: 
delta: (8,15)=4 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (8,15)
diff: 
delta: (8,9)=2 
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _01: a rectangle with size (1,1) and color red and mask Full at (8,9)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
diff: 
delta: (8,15)=4 
! 55 wrong pixels (generated / expected)

TRAIN 045e512c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (21,21) and color black and layers
  _00: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _0: a rectangle with size (3,3) and color pink and mask xx.|x.x|.xx at (3,10)
  _01: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (15,14)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,14)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (11,10)
  _01111: a rectangle with size (2,3) and color blue and mask xx.|x.x at (19,18)
  _011111: a rectangle with size (1,2) and color pink and mask Full at (1,15)
  _0111111: a rectangle with size (2,1) and color pink and mask Full at (0,16)
diff: 
delta:
   (114.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
diff: 
delta:
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _01: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
diff: 
delta:
! 52 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
  _011: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
diff: 
delta:
! 54 wrong pixels (generated / expected)

TRAIN 045e512c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
  _01: a rectangle with size (1,3) and color green and mask Full at (11,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,10)
diff: 
delta: (4,10)=4  (5,10)=4 
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,10)
  _011: a rectangle with size (1,3) and color green and mask Full at (11,6)
diff: 
delta: (4,10)=4  (5,10)=4 
! 69 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (11,6)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,10)
diff: 
delta: (4,10)=4  (5,10)=4 
! 75 wrong pixels (generated / expected)

TEST 045e512c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 43.6 sec (43.6 sec/task)
bits-train-error = 4318.9 bits (4318.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-395] Checking task 0520fde7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12344.6 = 12357.2
DL output with Mo: L = 12.6 + 2577.6 = 2590.2
DL input+output M: L = 25.2 + 14922.3 = 14947.5

# learning a model for train pairs
2.000	
1.640	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.371	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.182	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.036	OUT SPE ^.size = '(3, 3)
0.932	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	OUT SPE ^.layer_0.shape.color = red
0.832	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.i + 1
0.795	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.729	OUT SPE ^.layer_0.shape.size = span(^.layer_01.pos, ^.layer_0111.pos) - (0, 2)
0.700	OUT SPE ^.color = black
0.676	OUT SPE ^.layer_0.pos.i = bottom(^.layer_011) + ^.layer_011.pos.i - ^.layer_0.pos.i
0.668	IN  SPE ^.layer_0111.shape.mask = Full
0.275	
0.275	IN  GEN ^.layer_0111.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size span(^.layer_01.pos, ^.layer_0111.pos) - (0, 2) and color red and mask ? at (bottom(^.layer_011) + ^.layer_011.pos.i - ^.layer_0.pos.i,^.layer_01.pos.i + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 115.1 + 4893.9 = 5009.1
DL output with Mo: L = 181.2 + 500.0 = 681.2
DL input+output M: L = 296.3 + 5393.9 = 5690.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size span(^.layer_01.pos, ^.layer_0111.pos) - (0, 2) and color red and mask ? at (bottom(^.layer_011) + ^.layer_011.pos.i - ^.layer_0.pos.i,^.layer_01.pos.i + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 181.2 + 500.0 = 681.2
DL input+output M: L = 295.3 + 531.7 = 827.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,4)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,0)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (0,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,4)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,0)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (0,5)
diff: 
delta:
correct output grid

TRAIN 0520fde7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|xx.|..x at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (1,3) and color black and mask Full at (0,4)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,6)
diff: 
delta: (0,5)=1  (2,4)=0 
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Even Checkboard at (0,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,5) and color black and mask Full at (0,2)
  _011: a rectangle with size (1,5) and color black and mask Full at (2,2)
  _0111: a rectangle with size (1,2) and color black and mask Full at (1,0)
diff: 
delta: (0,5)=1  (2,5)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|xx.|..x at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (1,3) and color black and mask Full at (0,4)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,6)
diff: 
delta: (0,5)=1  (2,4)=0 
! 3 wrong pixels (generated / expected)

TRAIN 0520fde7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta: (1,0)=2 
   (39.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,6)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,6)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 0520fde7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color black and mask Full at (2,4)
  _0111: a rectangle with size (2,1) and color black and mask Full at (0,5)
diff: 
delta: (2,6)=0 
! 2 wrong pixels (generated / expected)

TEST 0520fde7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 500.0 bits (500.0 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-394] Checking task 05269061.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12751.5 = 12764.2
DL output with Mo: L = 12.6 + 35817.5 = 35830.1
DL input+output M: L = 25.2 + 48569.1 = 48594.3

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = fillResizeAlike_total(black, ^.size, ^.grid)
0.730	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.377	IN  SPE ^.color = black
0.008	
0.006	IN  DEL ^.layer_011
0.004	IN  DEL ^.layer_01
0.002	IN  DEL ^.layer_0
0.002	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike_total(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 4720.5 = 4809.9
DL output with Mo: L = 22.2 + 0.0 = 22.2
DL input+output M: L = 111.6 + 4720.5 = 4832.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike_total(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 22.2 + 0.0 = 22.2
DL input+output M: L = 34.8 + 0.0 = 34.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=8  (0,2)=3  (1,0)=8  (1,1)=3  (2,0)=3 
   (0.0 bits)
data: 
2 8 3 2 8 3 2 
8 3 2 8 3 2 8 
3 2 8 3 2 8 3 
2 8 3 2 8 3 2 
8 3 2 8 3 2 8 
3 2 8 3 2 8 3 
2 8 3 2 8 3 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=8  (0,2)=3  (1,0)=8  (1,1)=3  (2,0)=3 
correct output grid

TRAIN 05269061.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (2,6)=1  (3,5)=1  (3,6)=2  (4,4)=1  (4,5)=2  (4,6)=4  (5,3)=1  (5,4)=2  (5,5)=4  (6,2)=1  (6,3)=2  (6,4)=4 
   (0.0 bits)
data: 
2 4 1 2 4 1 2 
4 1 2 4 1 2 4 
1 2 4 1 2 4 1 
2 4 1 2 4 1 2 
4 1 2 4 1 2 4 
1 2 4 1 2 4 1 
2 4 1 2 4 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (2,6)=1  (3,5)=1  (3,6)=2  (4,4)=1  (4,5)=2  (4,6)=4  (5,3)=1  (5,4)=2  (5,5)=4  (6,2)=1  (6,3)=2  (6,4)=4 
correct output grid

TRAIN 05269061.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (0,4)=8  (0,5)=3  (1,3)=8  (1,4)=3  (2,2)=8  (2,3)=3  (3,1)=8  (3,2)=3  (3,6)=4  (4,0)=8  (4,1)=3  (4,5)=4  (5,0)=3  (5,4)=4  (6,3)=4 
   (0.0 bits)
data: 
4 8 3 4 8 3 4 
8 3 4 8 3 4 8 
3 4 8 3 4 8 3 
4 8 3 4 8 3 4 
8 3 4 8 3 4 8 
3 4 8 3 4 8 3 
4 8 3 4 8 3 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,4)=8  (0,5)=3  (1,3)=8  (1,4)=3  (2,2)=8  (2,3)=3  (3,1)=8  (3,2)=3  (3,6)=4  (4,0)=8  (4,1)=3  (4,5)=4  (5,0)=3  (5,4)=4  (6,3)=4 
correct output grid

TRAIN 05269061.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,1)=1  (0,6)=2  (1,0)=1  (1,5)=2  (2,4)=2  (3,3)=2  (4,2)=2  (5,1)=2  (5,6)=4  (6,0)=2  (6,5)=4 
correct output grid

TEST 05269061.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-393] Checking task 05f2a901.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14692.8 = 14705.5
DL output with Mo: L = 12.6 + 14692.8 = 14705.5
DL input+output M: L = 25.2 + 29385.7 = 29410.9

# learning a model for train pairs
2.000	
1.458	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.594	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.281	OUT ADD ^.layer_01 = ^.layer_01
0.240	OUT SPE ^.size = ^.size
0.218	OUT SPE ^.layer_0.pos = ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_01)
0.207	IN  SPE ^.layer_0.shape.color = red
0.196	IN  SPE ^.layer_01.shape.color = cyan
0.189	IN  SPE ^.layer_01.shape.mask = Full
0.184	IN  SPE ^.color = black
0.179	OUT SPE ^.color = black
0.009	
0.009	IN  GEN ^.layer_01.shape.color = ?
0.008	IN  GEN ^.layer_0.shape.color = ?
0.008	IN  GEN ^.layer_01.shape.mask = ?
0.008	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_01)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 72.0 + 2501.6 = 2573.6
DL output with Mo: L = 57.7 + 0.0 = 57.7
DL input+output M: L = 129.7 + 2501.6 = 2631.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_01)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 57.7 + 0.0 = 57.7
DL input+output M: L = 121.9 + 0.0 = 121.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (2,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (8,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (2,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
diff: 
delta:
correct output grid

TRAIN 05f2a901.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff: 
delta:
correct output grid

TRAIN 05f2a901.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (6,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (3,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (6,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
diff: 
delta:
correct output grid

TRAIN 05f2a901.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (4,2) and color red and mask x.|xx|xx|.x at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (6,1)
diff: 
delta:
correct output grid

TEST 05f2a901.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-392] Checking task 06df4c85.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 280970.7 = 280983.3
DL output with Mo: L = 12.6 + 280970.7 = 280983.3
DL input+output M: L = 25.2 + 561941.4 = 561966.6

# learning a model for train pairs
2.000	
1.174	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.420	OUT ADD ^.layer_0 = ^.layer_0
0.334	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.270	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.218	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.199	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.196	OUT SPE ^.size = ^.size
0.194	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.193	OUT SPE ^.layer_01111.shape.size = '(2, 2)
0.191	OUT SPE ^.layer_01.pos = '(3, 3)
0.191	OUT SPE ^.layer_011.shape.size.i = 2
0.190	OUT SPE ^.layer_0111.shape.size.i = 2
0.190	OUT SPE ^.layer_01.shape.mask = Full
0.190	OUT SPE ^.layer_011.shape.mask = Full
0.189	OUT SPE ^.layer_0111.shape.mask = Full
0.189	OUT SPE ^.layer_01111.shape.mask = Full
0.188	OUT SPE ^.layer_011111.shape.mask = Full
0.188	IN  SPE ^.color = black
0.175	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.173	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.171	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.168	OUT SPE ^.layer_011 = ^.layer_01
0.166	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.153	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.152	OUT SPE ^.layer_0111.pos.i = ^.layer_0111.pos.i
0.151	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.150	OUT SPE ^.layer_01111.pos = ^.layer_011.pos - translationSym(flipHeight, ^.layer_01111, ^.layer_0111)
0.149	OUT SPE ^.layer_01111.shape = coloring(^.layer_01111.shape, ^.layer_011.shape.color)
0.149	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.148	OUT SPE ^.layer_011111.shape.size.j = 2
0.148	OUT SPE ^.layer_011111.shape.size.i = ^.layer_01.shape.size.j - ^.layer_0111.pos.j - ^.layer_010.pos.j
0.147	OUT SPE ^.layer_01.shape.color = ^.layer_010.shape.color
0.147	IN  SPE ^.layer_01.shape.mask = Full
0.146	IN  SPE ^.layer_01111.shape.mask = Full
0.006	
0.006	IN  GEN ^.layer_01111.shape.mask = ?
0.006	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_010.shape.color and mask Full at '(3, 3)
  _011: ^.layer_01
  _0111: a rectangle with size (2,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_0111.pos
  _01111: coloring(^.layer_01111.shape, ^.layer_011.shape.color) at ^.layer_011.pos - translationSym(flipHeight, ^.layer_01111, ^.layer_0111)
  _011111: a rectangle with size (^.layer_01.shape.size.j - ^.layer_0111.pos.j - ^.layer_010.pos.j,2) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 147.1 + 39364.5 = 39511.6
DL output with Mo: L = 260.0 + 1353.3 = 1613.3
DL input+output M: L = 407.1 + 40717.8 = 41124.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_010.shape.color and mask Full at '(3, 3)
  _011: ^.layer_01
  _0111: a rectangle with size (2,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_0111.pos
  _01111: coloring(^.layer_01111.shape, ^.layer_011.shape.color) at ^.layer_011.pos - translationSym(flipHeight, ^.layer_01111, ^.layer_0111)
  _011111: a rectangle with size (^.layer_01.shape.size.j - ^.layer_0111.pos.j - ^.layer_010.pos.j,2) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 0.0 = 145.1
DL output with Mo: L = 260.0 + 1353.3 = 1613.3
DL input+output M: L = 405.1 + 1353.3 = 1758.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (2,8) and color green and mask Full at (12,3)
  _011: a point with color red at (3,15)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (6,9)
  _01111: a rectangle with size (2,2) and color red and mask Full at (9,15)
diff: 
delta: (3,4)=2  (3,16)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (12,6)=0  (12,7)=0  (13,6)=0  (13,7)=0 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,14) and color red and mask Full at (3,3)
  _011: a rectangle with size (2,8) and color green and mask Full at (12,3)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (6,9)
  _01111: a rectangle with size (2,2) and color red and mask Full at (9,15)
  _011111: a rectangle with size (2,2) and color red and mask Full at (6,15)
diff: 
delta:
   (43.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (2,8) and color green and mask Full at (12,3)
  _011: a point with color red at (3,15)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (6,9)
  _01111: a rectangle with size (2,2) and color red and mask Full at (9,15)
diff: 
delta: (3,4)=2  (3,16)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (12,6)=0  (12,7)=0  (13,6)=0  (13,7)=0 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (2,8) and color green and mask Full at (12,3)
  _011: a point with color red at (3,16)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (6,9)
  _01111: a rectangle with size (2,2) and color red and mask Full at (9,15)
diff: 
delta: (3,4)=2  (3,15)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (12,6)=0  (12,7)=0  (13,6)=0  (13,7)=0 
! 26 wrong pixels (generated / expected)

TRAIN 06df4c85.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (2,11) and color cyan and mask Full at (18,9)
  _011: a point with color yellow at (3,12)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (9,9)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (9,21)
diff: 
delta: (3,4)=2  (3,13)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,12)=0  (18,13)=0  (18,15)=0  (18,16)=0  (19,12)=0  (19,13)=0  (19,15)=0  (19,16)=0 
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (14,2) and color red and mask Full at (3,3)
  _011: a rectangle with size (2,11) and color cyan and mask Full at (18,9)
  _0111: a rectangle with size (2,14) and color brown and mask Full at (9,9)
  _01111: a rectangle with size (2,2) and color yellow and mask Full at (3,12)
  _011111: a rectangle with size (5,2) and color cyan and mask Full at (12,18)
diff: 
delta:
   (49.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (2,11) and color cyan and mask Full at (18,9)
  _011: a point with color yellow at (3,12)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (9,9)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (9,21)
diff: 
delta: (3,4)=2  (3,13)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,12)=0  (18,13)=0  (18,15)=0  (18,16)=0  (19,12)=0  (19,13)=0  (19,15)=0  (19,16)=0 
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (2,11) and color cyan and mask Full at (18,9)
  _011: a point with color yellow at (3,13)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (9,9)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (9,21)
diff: 
delta: (3,4)=2  (3,12)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,12)=0  (18,13)=0  (18,15)=0  (18,16)=0  (19,12)=0  (19,13)=0  (19,15)=0  (19,16)=0 
! 50 wrong pixels (generated / expected)

TRAIN 06df4c85.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _010: a point with color green at (3,3)
  _01: a rectangle with size (2,11) and color red and mask Full at (9,9)
  _011: a point with color red at (3,15)
  _0111: a rectangle with size (2,2) and color green and mask Full at (18,3)
  _01111: a rectangle with size (2,2) and color green and mask Full at (18,15)
diff: 
delta: (3,4)=3  (3,16)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,12)=0  (9,13)=0  (9,15)=0  (9,16)=0  (10,12)=0  (10,13)=0  (10,15)=0  (10,16)=0 
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,3)
  _011: a rectangle with size (2,11) and color red and mask Full at (9,9)
  _0111: a rectangle with size (2,14) and color green and mask Full at (18,3)
  _01111: a rectangle with size (2,2) and color red and mask Full at (3,15)
  _011111: a rectangle with size (11,2) and color green and mask Full at (6,3)
diff: 
delta:
   (43.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _010: a point with color green at (3,3)
  _01: a rectangle with size (2,11) and color red and mask Full at (9,9)
  _011: a point with color red at (3,15)
  _0111: a rectangle with size (2,2) and color green and mask Full at (18,3)
  _01111: a rectangle with size (2,2) and color green and mask Full at (18,15)
diff: 
delta: (3,4)=3  (3,16)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,12)=0  (9,13)=0  (9,15)=0  (9,16)=0  (10,12)=0  (10,13)=0  (10,15)=0  (10,16)=0 
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _010: a point with color green at (3,3)
  _01: a rectangle with size (2,11) and color red and mask Full at (9,9)
  _011: a point with color red at (3,16)
  _0111: a rectangle with size (2,2) and color green and mask Full at (18,3)
  _01111: a rectangle with size (2,2) and color green and mask Full at (18,15)
diff: 
delta: (3,4)=3  (3,15)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,12)=0  (9,13)=0  (9,15)=0  (9,16)=0  (10,12)=0  (10,13)=0  (10,15)=0  (10,16)=0 
! 50 wrong pixels (generated / expected)

TRAIN 06df4c85.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-1,2) and color col10 and mask Full at (0,0)

TEST 06df4c85.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 58.7 sec (58.7 sec/task)
bits-train-error = 1353.3 bits (1353.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-391] Checking task 08ed6ac7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17213.6 = 17226.3
DL output with Mo: L = 12.6 + 17213.6 = 17226.3
DL input+output M: L = 25.2 + 34427.3 = 34452.5

# learning a model for train pairs
2.000	
1.674	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.280	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.954	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.712	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.533	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.430	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.354	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.316	OUT SPE ^.layer_0 = coloring(^.layer_0, blue)
0.278	OUT SPE ^.layer_01 = coloring(^.layer_01, red)
0.241	OUT SPE ^.layer_011 = coloring(^.layer_011, green)
0.207	OUT SPE ^.layer_0111 = coloring(^.layer_0111, yellow)
0.184	OUT SPE ^.size = ^.size
0.178	IN  SPE ^.layer_0.shape.color = grey
0.171	IN  SPE ^.layer_01.shape.color = grey
0.165	IN  SPE ^.layer_011.shape.color = grey
0.159	IN  SPE ^.layer_0111.shape.color = grey
0.155	IN  SPE ^.layer_0.shape.mask = Full
0.151	IN  SPE ^.layer_01.shape.mask = Full
0.147	IN  SPE ^.layer_011.shape.mask = Full
0.143	IN  SPE ^.layer_0111.shape.mask = Full
0.141	IN  SPE ^.color = black
0.138	OUT SPE ^.color = black
0.012	
0.012	IN  GEN ^.layer_0111.shape.color = ?
0.011	IN  GEN ^.layer_011.shape.color = ?
0.011	IN  GEN ^.layer_01.shape.color = ?
0.011	IN  GEN ^.layer_0.shape.color = ?
0.011	IN  GEN ^.layer_0111.shape.mask = ?
0.011	IN  GEN ^.layer_011.shape.mask = ?
0.011	IN  GEN ^.layer_01.shape.mask = ?
0.011	IN  GEN ^.layer_0.shape.mask = ?
0.011	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, blue)
  _01: coloring(^.layer_01, red)
  _011: coloring(^.layer_011, green)
  _0111: coloring(^.layer_0111, yellow)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 131.6 + 2169.9 = 2301.5
DL output with Mo: L = 71.3 + 0.0 = 71.3
DL input+output M: L = 202.9 + 2169.9 = 2372.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, blue)
  _01: coloring(^.layer_01, red)
  _011: coloring(^.layer_011, green)
  _0111: coloring(^.layer_0111, yellow)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 71.3 + 0.0 = 71.3
DL input+output M: L = 185.4 + 0.0 = 185.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color green and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (6,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,7)
diff: 
delta:
correct output grid

TRAIN 08ed6ac7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color red and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color green and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
correct output grid

TRAIN 08ed6ac7.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color grey and mask Full at (4,7)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,3)
diff: 
delta:
correct output grid

TEST 08ed6ac7.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 7.4 sec (7.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-390] Checking task 09629e4f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 123057.1 = 123069.7
DL output with Mo: L = 12.6 + 115297.5 = 115310.2
DL input+output M: L = 25.2 + 238354.7 = 238379.9

# learning a model for train pairs
2.000	
1.534	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.132	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	OUT ADD ^.layer_01 = ^.layer_0
0.867	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.761	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.653	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.616	IN  SPE ^.layer_0.shape.mask = ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.602	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.593	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	OUT SPE ^.layer_0111.shape = scaleTo(^.layer_011.shape, '(3, 3))
0.578	OUT SPE ^.layer_011.shape = scaleTo(^.layer_01.shape, '(3, 3))
0.571	OUT SPE ^.size = ^.size
0.564	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.555	OUT SPE ^.layer_01111.shape.size = '(3, 3)
0.552	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.545	IN  ADD ^.layer_01101 = a point with color ? at (?,?)
0.543	OUT SPE ^.layer_01111.shape = ^.layer_01101.shape * '3
0.541	IN  SPE ^.layer_0.shape.color = grey
0.540	OUT SPE ^.layer_0.shape.mask = Full
0.539	IN  SPE ^.layer_01.shape.mask = Full
0.538	IN  SPE ^.layer_011.shape.mask = Full
0.537	IN  SPE ^.layer_0111.shape.mask = Full
0.536	OUT SPE ^.color = black
0.535	IN  SPE ^.color = black
0.022	
0.022	IN  DEL ^.layer_0111
0.021	IN  GEN ^.layer_0.shape.mask = ?
0.021	IN  GEN ^.layer_0.shape.color = ?
0.021	IN  GEN ^.layer_011.shape.mask = ?
0.021	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: scaleTo(^.layer_01.shape, '(3, 3)) at (?,?)
  _0111: scaleTo(^.layer_011.shape, '(3, 3)) at (?,?)
  _01111: ^.layer_01101.shape * '3 at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 267.7 + 63150.8 = 63418.6
DL output with Mo: L = 185.4 + 2075.8 = 2261.1
DL input+output M: L = 453.1 + 65226.6 = 65679.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: scaleTo(^.layer_01.shape, '(3, 3)) at (?,?)
  _0111: scaleTo(^.layer_011.shape, '(3, 3)) at (?,?)
  _01111: ^.layer_01101.shape * '3 at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 120.4 + 20.0 = 140.4
DL output with Mo: L = 185.4 + 2075.8 = 2261.1
DL input+output M: L = 305.8 + 2095.8 = 2401.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (1,1)
  _0110: a point with color red at (0,0)
  _01101: a point with color pink at (0,5)
  _011: a rectangle with size (1,5) and color green and mask Full at (10,5)
diff: 
delta: (0,6)=2  (0,10)=4  (1,2)=3  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,6)=0  (10,8)=2  (10,10)=4 
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (4,4)
  _0111: a rectangle with size (3,3) and color green and mask Full at (4,8)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (8,0)
diff: 
delta:
   (51.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (1,1)
  _0110: a point with color red at (0,0)
  _01101: a point with color pink at (0,5)
  _011: a rectangle with size (1,5) and color green and mask Full at (10,5)
diff: 
delta: (0,6)=2  (0,10)=4  (1,2)=3  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,6)=0  (10,8)=2  (10,10)=4 
! 36 wrong pixels (generated / expected)

TRAIN 09629e4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (10,6)
  _0110: a point with color red at (0,0)
  _01101: a point with color green at (0,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,9)=4 
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,8)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color pink and mask Full at (8,8)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (8,0)
  _01111: a rectangle with size (3,3) and color green and mask Full at (4,4)
diff: 
delta:
   (51.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (10,6)
  _0110: a point with color red at (0,0)
  _01101: a point with color green at (0,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,9)=4 
! 45 wrong pixels (generated / expected)

TRAIN 09629e4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (4,6)
  _0110: a point with color green at (0,1)
  _01101: a point with color pink at (0,5)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,1)
diff: 
delta: (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,4)=4  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (4,8)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color green and mask Full at (0,4)
  _0111: a rectangle with size (3,3) and color red and mask Full at (8,0)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (4,4)
diff: 
delta:
   (51.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (4,6)
  _0110: a point with color green at (0,1)
  _01101: a point with color pink at (0,5)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,1)
diff: 
delta: (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,4)=4  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
! 45 wrong pixels (generated / expected)

TRAIN 09629e4f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color pink and mask Full at (8,1)
  _0110: a point with color cyan at (0,1)
  _01101: a point with color green at (0,0)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (0,2)
diff: 
delta: (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,2)=0  (8,5)=2  (8,6)=0  (8,8)=3  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
   (2.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (4,4)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color pink and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (0,4)
  _01111: a rectangle with size (3,3) and color green and mask Full at (8,4)
diff: 
delta:
   (51.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color pink and mask Full at (8,1)
  _0110: a point with color green at (0,0)
  _01101: a point with color cyan at (0,1)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (0,2)
diff: 
delta: (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,2)=0  (8,5)=2  (8,6)=0  (8,8)=3  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
! 45 wrong pixels (generated / expected)

TRAIN 09629e4f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,5)
  _0110: a point with color pink at (0,0)
  _01101: a point with color yellow at (0,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,0)
diff: 
delta: (0,5)=3  (0,9)=4  (1,2)=3  (1,4)=2  (1,6)=6  (1,10)=2  (2,2)=8  (2,4)=4  (2,8)=6  (2,9)=3  (4,5)=3  (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,4)=8  (5,5)=4  (5,6)=2  (5,10)=4  (6,1)=8  (6,6)=6  (6,8)=8  (8,1)=2  (8,2)=4  (8,5)=6  (8,6)=4  (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,6)=3  (9,8)=4  (9,10)=6  (10,4)=2  (10,6)=8  (10,8)=3 
! 45 wrong pixels (generated / expected)

TEST 09629e4f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.4 sec (16.4 sec/task)
bits-train-error = 2075.8 bits (2075.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-389] Checking task 0962bcdd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8149.4 = 8162.0
DL output with Mo: L = 12.6 + 26317.6 = 26330.2
DL input+output M: L = 25.2 + 34467.0 = 34492.2

# learning a model for train pairs
2.000	
1.724	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.445	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.218	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.992	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.541	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.488	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.470	IN  SPE ^.layer_0.shape.mask = Odd Checkboard
0.452	IN  SPE ^.layer_01.shape.mask = Odd Checkboard
0.436	OUT SPE ^.size = ^.size
0.424	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size + (2, 2)
0.413	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + (2, 2)
0.401	OUT SPE ^.layer_011.shape.size = ^.layer_01.shape.size + (2, 2)
0.390	OUT SPE ^.layer_0111.shape.size = ^.layer_01.shape.size + (2, 2)
0.381	OUT SPE ^.layer_01.pos = ^.layer_01.pos - (1, 1)
0.373	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (1, 1)
0.364	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos - (2, 2)
0.356	OUT SPE ^.layer_011.pos = ^.layer_011.pos - (2, 2)
0.350	IN  SPE ^.color = black
0.344	OUT SPE ^.layer_0.shape.mask = x-cross
0.338	OUT SPE ^.layer_01.shape.mask = x-cross
0.333	OUT SPE ^.layer_011.shape.mask = +-cross
0.327	OUT SPE ^.layer_0111.shape.mask = +-cross
0.323	OUT SPE ^.layer_011.shape.color = ^.layer_01.shape.color
0.319	OUT SPE ^.layer_0111.shape.color = ^.layer_01.shape.color
0.316	OUT SPE ^.layer_01.shape.color = ^.layer_011.shape.color
0.312	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.310	OUT SPE ^.color = black
0.024	
0.023	IN  GEN ^.layer_01.shape.mask = ?
0.023	IN  GEN ^.layer_0.shape.mask = ?
0.022	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (2, 2) and color ^.layer_011.shape.color and mask x-cross at ^.layer_0.pos - (1, 1)
  _01: a rectangle with size ^.layer_01.shape.size + (2, 2) and color ^.layer_011.shape.color and mask x-cross at ^.layer_01.pos - (1, 1)
  _011: a rectangle with size ^.layer_01.shape.size + (2, 2) and color ^.layer_01.shape.color and mask +-cross at ^.layer_011.pos - (2, 2)
  _0111: a rectangle with size ^.layer_01.shape.size + (2, 2) and color ^.layer_01.shape.color and mask +-cross at ^.layer_0111.pos - (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 106.3 + 2335.6 = 2442.0
DL output with Mo: L = 283.8 + 0.0 = 283.8
DL input+output M: L = 390.2 + 2335.6 = 2725.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (2, 2) and color ^.layer_011.shape.color and mask x-cross at ^.layer_0.pos - (1, 1)
  _01: a rectangle with size ^.layer_01.shape.size + (2, 2) and color ^.layer_011.shape.color and mask x-cross at ^.layer_01.pos - (1, 1)
  _011: a rectangle with size ^.layer_01.shape.size + (2, 2) and color ^.layer_01.shape.color and mask +-cross at ^.layer_011.pos - (2, 2)
  _0111: a rectangle with size ^.layer_01.shape.size + (2, 2) and color ^.layer_01.shape.color and mask +-cross at ^.layer_0111.pos - (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 95.6 + 0.0 = 95.6
DL output with Mo: L = 283.8 + 0.0 = 283.8
DL input+output M: L = 379.4 + 0.0 = 379.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,7)
  _011: a point with color red at (3,2)
  _0111: a point with color red at (7,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x-cross at (1,0)
  _01: a rectangle with size (5,5) and color red and mask x-cross at (5,6)
  _011: a rectangle with size (5,5) and color orange and mask +-cross at (1,0)
  _0111: a rectangle with size (5,5) and color orange and mask +-cross at (5,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,7)
  _011: a point with color red at (3,2)
  _0111: a point with color red at (7,8)
diff: 
delta:
correct output grid

TRAIN 0962bcdd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (8,7)
  _011: a point with color pink at (3,3)
  _0111: a point with color pink at (9,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask x-cross at (1,1)
  _01: a rectangle with size (5,5) and color pink and mask x-cross at (7,6)
  _011: a rectangle with size (5,5) and color cyan and mask +-cross at (1,1)
  _0111: a rectangle with size (5,5) and color cyan and mask +-cross at (7,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (8,7)
  _011: a point with color pink at (3,3)
  _0111: a point with color pink at (9,8)
diff: 
delta:
correct output grid

TRAIN 0962bcdd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,7)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (6,1)
  _011: a point with color yellow at (2,8)
  _0111: a point with color yellow at (7,2)
diff: 
delta:
correct output grid

TEST 0962bcdd.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 12.6 sec (12.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-388] Checking task 0a938d79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4154.6 = 4167.2
DL output with Mo: L = 12.6 + 102032.2 = 102044.8
DL input+output M: L = 25.2 + 106186.8 = 106212.0

# learning a model for train pairs
2.000	
1.798	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.589	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.475	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.361	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.247	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.133	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.995	IN  SPE ^.color = black
0.986	OUT SPE ^.size = ^.size
0.981	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.979	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.977	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.975	OUT SPE ^.layer_0111.shape.color = ^.layer_01.shape.color
0.973	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.971	OUT SPE ^.layer_01111.shape.color = ^.layer_0.shape.color
0.969	OUT SPE ^.layer_0.shape.mask = Full
0.968	OUT SPE ^.layer_01.shape.mask = Full
0.967	OUT SPE ^.layer_011.shape.mask = Full
0.965	OUT SPE ^.layer_0111.shape.mask = Full
0.964	OUT SPE ^.layer_01111.shape.mask = Full
0.963	OUT SPE ^.color = black
0.409	
0.409	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 2309.2 = 2355.0
DL output with Mo: L = 170.5 + 40445.7 = 40616.2
DL input+output M: L = 216.3 + 42754.9 = 42971.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 170.5 + 40445.7 = 40616.2
DL input+output M: L = 216.1 + 40445.7 = 40661.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,25) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color cyan at (9,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,25) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,7)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (10,1) and color cyan and mask Full at (0,11)
  _01111: a rectangle with size (10,1) and color red and mask Full at (0,13)
diff: 
delta: (0,15)=8  (0,17)=2  (0,19)=8  (0,21)=2  (0,23)=8  (1,15)=8  (1,17)=2  (1,19)=8  (1,21)=2  (1,23)=8  (2,15)=8  (2,17)=2  (2,19)=8  (2,21)=2  (2,23)=8  (3,15)=8  (3,17)=2  (3,19)=8  (3,21)=2  (3,23)=8  (4,15)=8  (4,17)=2  (4,19)=8  (4,21)=2  (4,23)=8  (5,15)=8  (5,17)=2  (5,19)=8  (5,21)=2  (5,23)=8  (6,15)=8  (6,17)=2  (6,19)=8  (6,21)=2  (6,23)=8  (7,15)=8  (7,17)=2  (7,19)=8  (7,21)=2  (7,23)=8  (8,15)=8  (8,17)=2  (8,19)=8  (8,21)=2  (8,23)=8  (9,15)=8  (9,17)=2  (9,19)=8  (9,21)=2  (9,23)=8 
   (2053.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,25) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color cyan at (9,7)
diff: 
delta:
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,25) and color black and layers
  _0: a point with color cyan at (9,7)
  _01: a point with color red at (0,5)
diff: 
delta:
! 104 wrong pixels (generated / expected)

TRAIN 0a938d79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,23) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color green at (6,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,23) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,8)
  _011: a rectangle with size (7,1) and color blue and mask Full at (0,11)
  _0111: a rectangle with size (7,1) and color green and mask Full at (0,14)
  _01111: a rectangle with size (7,1) and color blue and mask Full at (0,17)
diff: 
delta: (0,20)=3  (1,20)=3  (2,20)=3  (3,20)=3  (4,20)=3  (5,20)=3  (6,20)=3 
   (380.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,23) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color green at (6,8)
diff: 
delta:
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,23) and color black and layers
  _0: a point with color green at (6,8)
  _01: a point with color blue at (0,5)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 0a938d79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (22,9) and color black and layers
  _0: a point with color red at (5,0)
  _01: a point with color green at (7,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (22,9) and color black and layers
  _0: a rectangle with size (1,9) and color red and mask Full at (5,0)
  _01: a rectangle with size (1,9) and color green and mask Full at (7,0)
  _011: a rectangle with size (1,9) and color red and mask Full at (9,0)
  _0111: a rectangle with size (1,9) and color green and mask Full at (11,0)
  _01111: a rectangle with size (1,9) and color red and mask Full at (13,0)
diff: 
delta: (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (17,0)=2  (17,1)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,5)=2  (17,6)=2  (17,7)=2  (17,8)=2  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,6)=3  (19,7)=3  (19,8)=3  (21,0)=2  (21,1)=2  (21,2)=2  (21,3)=2  (21,4)=2  (21,5)=2  (21,6)=2  (21,7)=2  (21,8)=2 
   (1498.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,9) and color black and layers
  _0: a point with color red at (5,0)
  _01: a point with color green at (7,8)
diff: 
delta:
! 85 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,9) and color black and layers
  _0: a point with color green at (7,8)
  _01: a point with color red at (5,0)
diff: 
delta:
! 85 wrong pixels (generated / expected)

TRAIN 0a938d79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (24,8) and color black and layers
  _0: a point with color yellow at (7,0)
  _01: a point with color blue at (11,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (24,8) and color black and layers
  _0: a rectangle with size (1,8) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (1,8) and color blue and mask Full at (11,0)
  _011: a rectangle with size (1,8) and color yellow and mask Full at (15,0)
  _0111: a rectangle with size (1,8) and color blue and mask Full at (19,0)
  _01111: a rectangle with size (1,8) and color yellow and mask Full at (23,0)
diff: 
delta:
   (112.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,8) and color black and layers
  _0: a point with color yellow at (7,0)
  _01: a point with color blue at (11,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,8) and color black and layers
  _0: a point with color blue at (11,0)
  _01: a point with color yellow at (7,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN 0a938d79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,27) and color black and layers
  _0: a point with color green at (0,5)
  _01: a point with color yellow at (10,10)
diff: 
delta:
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,27) and color black and layers
  _0: a point with color yellow at (10,10)
  _01: a point with color green at (0,5)
diff: 
delta:
! 59 wrong pixels (generated / expected)

TEST 0a938d79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.0 sec (18.0 sec/task)
bits-train-error = 40445.7 bits (40445.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-387] Checking task 0b148d64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 197492.2 = 197504.8
DL output with Mo: L = 12.6 + 28646.1 = 28658.7
DL input+output M: L = 25.2 + 226138.2 = 226163.5

# learning a model for train pairs
2.000	
1.165	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.603	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.410	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.241	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.230	OUT SPE ^.layer_0.pos = '(0, 0)
0.220	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.210	OUT SPE ^.size.i = ^.layer_0.shape.size.i
0.208	OUT SPE ^.color = black
0.207	IN  SPE ^.color = black
0.132	
0.132	IN  DEL ^.layer_0111
0.132	IN  DEL ^.layer_011
0.132	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i,?) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 14827.1 = 14941.4
DL output with Mo: L = 52.6 + 3715.9 = 3768.5
DL input+output M: L = 166.9 + 18543.0 = 18709.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i,?) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 0.0 = 39.0
DL output with Mo: L = 52.6 + 3715.9 = 3768.5
DL input+output M: L = 91.6 + 3715.9 = 3807.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,19)=8  (0,20)=8  (1,0)=8  (1,3)=8  (1,5)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,20)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,14)=8  (2,15)=8  (2,17)=8  (2,18)=8  (2,19)=8  (2,20)=8  (3,0)=8  (3,1)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,8)=8  (3,9)=8  (3,14)=8  (3,15)=8  (3,19)=8  (3,20)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,5)=8  (4,6)=8  (4,8)=8  (4,9)=8  (4,14)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,20)=8  (5,3)=8  (5,4)=8  (5,6)=8  (5,9)=8  (5,14)=8  (5,18)=8  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,6)=8  (6,8)=8  (6,14)=8  (6,15)=8  (6,16)=8  (6,18)=8  (6,19)=8  (6,20)=8  (7,0)=8  (7,3)=8  (7,6)=8  (7,7)=8  (7,9)=8  (7,14)=8  (7,16)=8  (7,17)=8  (7,18)=8  (7,19)=8  (7,20)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,7)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (11,14)=8  (11,15)=8  (11,17)=8  (11,18)=8  (11,20)=8  (12,14)=8  (12,15)=8  (12,16)=8  (12,17)=8  (12,19)=8  (13,14)=8  (13,15)=8  (13,16)=8  (13,20)=8  (14,14)=8  (14,15)=8  (14,17)=8  (14,18)=8  (14,19)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=8  (16,14)=8  (16,16)=8  (16,18)=8  (16,19)=8  (16,20)=8  (17,14)=8  (17,15)=8  (17,17)=8  (17,20)=8  (18,14)=8  (18,18)=8  (18,19)=8  (19,15)=8  (19,16)=8  (19,19)=8  (19,20)=8  (20,14)=8  (20,15)=8  (20,16)=8  (20,18)=8  (20,19)=8  (20,20)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (0,0)
diff: 
delta:
   (118.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,19)=8  (0,20)=8  (1,0)=8  (1,3)=8  (1,5)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,20)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,14)=8  (2,15)=8  (2,17)=8  (2,18)=8  (2,19)=8  (2,20)=8  (3,0)=8  (3,1)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,8)=8  (3,9)=8  (3,14)=8  (3,15)=8  (3,19)=8  (3,20)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,5)=8  (4,6)=8  (4,8)=8  (4,9)=8  (4,14)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,20)=8  (5,3)=8  (5,4)=8  (5,6)=8  (5,9)=8  (5,14)=8  (5,18)=8  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,6)=8  (6,8)=8  (6,14)=8  (6,15)=8  (6,16)=8  (6,18)=8  (6,19)=8  (6,20)=8  (7,0)=8  (7,3)=8  (7,6)=8  (7,7)=8  (7,9)=8  (7,14)=8  (7,16)=8  (7,17)=8  (7,18)=8  (7,19)=8  (7,20)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,7)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (11,14)=8  (11,15)=8  (11,17)=8  (11,18)=8  (11,20)=8  (12,14)=8  (12,15)=8  (12,16)=8  (12,17)=8  (12,19)=8  (13,14)=8  (13,15)=8  (13,16)=8  (13,20)=8  (14,14)=8  (14,15)=8  (14,17)=8  (14,18)=8  (14,19)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=8  (16,14)=8  (16,16)=8  (16,18)=8  (16,19)=8  (16,20)=8  (17,14)=8  (17,15)=8  (17,17)=8  (17,20)=8  (18,14)=8  (18,18)=8  (18,19)=8  (19,15)=8  (19,16)=8  (19,19)=8  (19,20)=8  (20,14)=8  (20,15)=8  (20,16)=8  (20,18)=8  (20,19)=8  (20,20)=8 
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
diff: 
delta: (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,19)=8  (0,20)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,20)=8  (2,14)=8  (2,15)=8  (2,17)=8  (2,18)=8  (2,19)=8  (2,20)=8  (3,14)=8  (3,15)=8  (3,19)=8  (3,20)=8  (4,14)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,20)=8  (5,14)=8  (5,18)=8  (6,14)=8  (6,15)=8  (6,16)=8  (6,18)=8  (6,19)=8  (6,20)=8  (7,14)=8  (7,16)=8  (7,17)=8  (7,18)=8  (7,19)=8  (7,20)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (11,1)=2  (11,2)=2  (11,3)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,14)=8  (11,15)=8  (11,17)=8  (11,18)=8  (11,20)=8  (12,0)=2  (12,2)=2  (12,3)=2  (12,4)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,14)=8  (12,15)=8  (12,16)=8  (12,17)=8  (12,19)=8  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,8)=2  (13,14)=8  (13,15)=8  (13,16)=8  (13,20)=8  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,14)=8  (14,15)=8  (14,17)=8  (14,18)=8  (14,19)=8  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=2  (15,5)=2  (15,7)=2  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=8  (16,0)=2  (16,1)=2  (16,2)=2  (16,3)=2  (16,4)=2  (16,6)=2  (16,8)=2  (16,9)=2  (16,14)=8  (16,16)=8  (16,18)=8  (16,19)=8  (16,20)=8  (17,0)=2  (17,1)=2  (17,3)=2  (17,4)=2  (17,14)=8  (17,15)=8  (17,17)=8  (17,20)=8  (18,1)=2  (18,2)=2  (18,5)=2  (18,6)=2  (18,9)=2  (18,14)=8  (18,18)=8  (18,19)=8  (19,0)=2  (19,1)=2  (19,2)=2  (19,3)=2  (19,4)=2  (19,5)=2  (19,6)=2  (19,7)=2  (19,8)=2  (19,9)=2  (19,15)=8  (19,16)=8  (19,19)=8  (19,20)=8  (20,0)=2  (20,2)=2  (20,3)=2  (20,5)=2  (20,6)=2  (20,7)=2  (20,8)=2  (20,9)=2  (20,14)=8  (20,15)=8  (20,16)=8  (20,18)=8  (20,19)=8  (20,20)=8 
! size mismatch, 9x10 instead of 10x10

TRAIN 0b148d64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
diff: 
delta: (0,0)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,10)=2  (0,12)=2  (0,13)=2  (0,14)=2  (0,15)=2  (0,18)=2  (1,0)=2  (1,1)=2  (1,2)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,11)=2  (1,12)=2  (1,13)=2  (1,14)=2  (1,15)=2  (2,2)=2  (2,3)=2  (2,5)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,14)=2  (2,15)=2  (2,16)=2  (2,17)=2  (2,18)=2  (3,0)=2  (3,2)=2  (3,4)=2  (3,5)=2  (3,11)=2  (3,12)=2  (3,13)=2  (3,14)=2  (3,15)=2  (3,16)=2  (4,1)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,13)=2  (4,14)=2  (4,16)=2  (4,17)=2  (4,18)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,4)=2  (5,6)=2  (5,10)=2  (5,12)=2  (5,13)=2  (5,14)=2  (5,15)=2  (5,17)=2  (11,0)=2  (11,2)=2  (11,6)=2  (12,1)=2  (12,2)=2  (12,5)=2  (12,6)=2  (13,1)=2  (13,2)=2  (13,5)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,5)=2  (14,6)=2  (15,0)=2  (15,3)=2  (15,4)=2  (15,5)=2  (16,0)=2  (16,2)=2  (16,6)=2  (17,1)=2  (17,2)=2  (17,4)=2  (17,5)=2 
   (0.0 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (0,0)
diff: 
delta:
   (94.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
diff: 
delta: (0,0)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,10)=2  (0,12)=2  (0,13)=2  (0,14)=2  (0,15)=2  (0,18)=2  (1,0)=2  (1,1)=2  (1,2)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,11)=2  (1,12)=2  (1,13)=2  (1,14)=2  (1,15)=2  (2,2)=2  (2,3)=2  (2,5)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,14)=2  (2,15)=2  (2,16)=2  (2,17)=2  (2,18)=2  (3,0)=2  (3,2)=2  (3,4)=2  (3,5)=2  (3,11)=2  (3,12)=2  (3,13)=2  (3,14)=2  (3,15)=2  (3,16)=2  (4,1)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,13)=2  (4,14)=2  (4,16)=2  (4,17)=2  (4,18)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,4)=2  (5,6)=2  (5,10)=2  (5,12)=2  (5,13)=2  (5,14)=2  (5,15)=2  (5,17)=2  (11,0)=2  (11,2)=2  (11,6)=2  (12,1)=2  (12,2)=2  (12,5)=2  (12,6)=2  (13,1)=2  (13,2)=2  (13,5)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,5)=2  (14,6)=2  (15,0)=2  (15,3)=2  (15,4)=2  (15,5)=2  (16,0)=2  (16,2)=2  (16,6)=2  (17,1)=2  (17,2)=2  (17,4)=2  (17,5)=2 
! size mismatch, 7x10 instead of 7x9
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
diff: 
delta: (0,0)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,18)=2  (1,0)=2  (1,1)=2  (1,2)=2  (1,3)=2  (1,5)=2  (1,6)=2  (2,2)=2  (2,3)=2  (2,5)=2  (3,0)=2  (3,2)=2  (3,4)=2  (3,5)=2  (4,1)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,4)=2  (5,6)=2  (5,10)=2  (11,0)=2  (11,2)=2  (11,6)=2  (11,11)=3  (11,12)=3  (11,13)=3  (11,14)=3  (11,15)=3  (11,17)=3  (11,18)=3  (12,1)=2  (12,2)=2  (12,5)=2  (12,6)=2  (12,10)=3  (12,11)=3  (12,12)=3  (12,16)=3  (12,17)=3  (13,1)=2  (13,2)=2  (13,5)=2  (13,10)=3  (13,11)=3  (13,12)=3  (13,14)=3  (13,16)=3  (14,0)=2  (14,1)=2  (14,2)=2  (14,5)=2  (14,6)=2  (14,10)=3  (14,11)=3  (14,15)=3  (14,16)=3  (14,17)=3  (14,18)=3  (15,0)=2  (15,3)=2  (15,4)=2  (15,5)=2  (15,10)=3  (15,14)=3  (15,16)=3  (15,18)=3  (16,0)=2  (16,2)=2  (16,6)=2  (16,11)=3  (16,12)=3  (16,14)=3  (16,15)=3  (16,16)=3  (16,18)=3  (17,1)=2  (17,2)=2  (17,4)=2  (17,5)=2  (17,11)=3  (17,12)=3  (17,15)=3  (17,17)=3 
! size mismatch, 6x10 instead of 7x9

TRAIN 0b148d64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
diff: 
delta: (0,1)=1  (0,3)=1  (0,4)=1  (0,5)=1  (0,8)=1  (0,9)=1  (0,11)=1  (1,0)=1  (1,2)=1  (1,8)=1  (1,9)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=1  (1,15)=1  (1,16)=1  (2,0)=1  (2,1)=1  (2,3)=1  (2,4)=1  (2,8)=1  (2,9)=1  (2,10)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=1  (2,16)=1  (3,0)=1  (3,1)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,11)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,8)=1  (4,9)=1  (4,13)=1  (4,14)=1  (4,15)=1  (5,0)=1  (5,3)=1  (5,8)=1  (5,9)=1  (5,12)=1  (5,13)=1  (5,14)=1  (5,15)=1  (5,16)=1  (6,3)=1  (6,4)=1  (6,8)=1  (6,9)=1  (6,10)=1  (6,13)=1  (6,16)=1  (10,0)=4  (10,3)=4  (10,5)=4  (11,0)=4  (11,1)=4  (11,2)=4  (11,3)=4  (11,5)=4  (12,0)=4  (12,2)=4  (12,5)=4  (13,1)=4  (13,2)=4  (13,3)=4  (13,4)=4  (14,0)=4  (14,1)=4  (14,2)=4  (14,4)=4  (14,5)=4  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (16,1)=4  (16,2)=4  (16,3)=4  (16,5)=4  (17,1)=4  (18,0)=4  (18,1)=4  (18,3)=4  (18,5)=4 
   (0.0 bits)
data: a background with size (9,6) and color black and layers
  _0: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (0,0)
diff: 
delta: (8,3)=4  (8,5)=4 
   (158.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
diff: 
delta: (0,1)=1  (0,3)=1  (0,4)=1  (0,5)=1  (0,8)=1  (0,9)=1  (0,11)=1  (1,0)=1  (1,2)=1  (1,8)=1  (1,9)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=1  (1,15)=1  (1,16)=1  (2,0)=1  (2,1)=1  (2,3)=1  (2,4)=1  (2,8)=1  (2,9)=1  (2,10)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=1  (2,16)=1  (3,0)=1  (3,1)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,11)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,8)=1  (4,9)=1  (4,13)=1  (4,14)=1  (4,15)=1  (5,0)=1  (5,3)=1  (5,8)=1  (5,9)=1  (5,12)=1  (5,13)=1  (5,14)=1  (5,15)=1  (5,16)=1  (6,3)=1  (6,4)=1  (6,8)=1  (6,9)=1  (6,10)=1  (6,13)=1  (6,16)=1  (10,0)=4  (10,3)=4  (10,5)=4  (11,0)=4  (11,1)=4  (11,2)=4  (11,3)=4  (11,5)=4  (12,0)=4  (12,2)=4  (12,5)=4  (13,1)=4  (13,2)=4  (13,3)=4  (13,4)=4  (14,0)=4  (14,1)=4  (14,2)=4  (14,4)=4  (14,5)=4  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (16,1)=4  (16,2)=4  (16,3)=4  (16,5)=4  (17,1)=4  (18,0)=4  (18,1)=4  (18,3)=4  (18,5)=4 
! size mismatch, 9x10 instead of 9x6
>> Trial 2
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
diff: 
delta: (0,1)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,0)=1  (1,2)=1  (2,0)=1  (2,1)=1  (2,3)=1  (2,4)=1  (3,0)=1  (3,1)=1  (3,4)=1  (3,5)=1  (4,1)=1  (4,2)=1  (4,3)=1  (5,0)=1  (5,3)=1  (6,3)=1  (6,4)=1  (10,0)=4  (10,3)=4  (10,5)=4  (10,8)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,0)=4  (11,1)=4  (11,2)=4  (11,3)=4  (11,5)=4  (11,8)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (12,0)=4  (12,2)=4  (12,5)=4  (12,9)=1  (12,12)=1  (12,13)=1  (12,14)=1  (12,15)=1  (12,16)=1  (13,1)=4  (13,2)=4  (13,3)=4  (13,4)=4  (13,8)=1  (13,9)=1  (13,12)=1  (13,14)=1  (13,16)=1  (14,0)=4  (14,1)=4  (14,2)=4  (14,4)=4  (14,5)=4  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=1  (14,12)=1  (14,13)=1  (14,14)=1  (14,15)=1  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (15,9)=1  (15,14)=1  (15,15)=1  (15,16)=1  (16,1)=4  (16,2)=4  (16,3)=4  (16,5)=4  (16,9)=1  (16,11)=1  (16,13)=1  (16,14)=1  (16,15)=1  (17,1)=4  (17,8)=1  (17,10)=1  (17,11)=1  (17,12)=1  (17,14)=1  (17,16)=1  (18,0)=4  (18,1)=4  (18,3)=4  (18,5)=4  (18,8)=1  (18,9)=1  (18,10)=1  (18,13)=1  (18,14)=1  (18,15)=1 
! size mismatch, 7x10 instead of 9x6

TRAIN 0b148d64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask xxxx.x|x.x.xx|xx.xx.|...xxx|xxxxxx|xxxxxx at (0,0)
diff: 
delta: (0,8)=3  (0,10)=3  (0,11)=3  (0,12)=3  (0,13)=3  (0,14)=3  (0,15)=3  (1,9)=3  (1,11)=3  (1,12)=3  (1,13)=3  (2,11)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,8)=3  (3,9)=3  (3,11)=3  (3,12)=3  (3,14)=3  (4,9)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,15)=3  (4,16)=3  (5,8)=3  (5,9)=3  (5,13)=3  (5,16)=3  (10,0)=3  (10,5)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,12)=3  (10,14)=3  (10,16)=3  (11,1)=3  (11,2)=3  (11,5)=3  (11,9)=3  (11,11)=3  (11,12)=3  (11,13)=3  (12,0)=3  (12,1)=3  (12,2)=3  (12,3)=3  (12,4)=3  (12,8)=3  (12,12)=3  (12,16)=3  (13,0)=3  (13,2)=3  (13,4)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3  (13,14)=3  (13,16)=3  (14,1)=3  (14,2)=3  (14,10)=3  (14,11)=3  (14,12)=3  (14,14)=3  (14,15)=3 
! size mismatch, 6x10 instead of 6x6
>> Trial 2
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (5,9) and color green and mask xxx.x.x..|.x.xxx...|x...x...x|.xxxxxx.x|..xxx.xx. at (10,8)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,5)=1  (0,8)=3  (0,10)=3  (0,11)=3  (0,12)=3  (0,13)=3  (0,14)=3  (0,15)=3  (1,0)=1  (1,2)=1  (1,4)=1  (1,5)=1  (1,9)=3  (1,11)=3  (1,12)=3  (1,13)=3  (2,0)=1  (2,1)=1  (2,3)=1  (2,4)=1  (2,11)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=3  (3,9)=3  (3,11)=3  (3,12)=3  (3,14)=3  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,9)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,15)=3  (4,16)=3  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,8)=3  (5,9)=3  (5,13)=3  (5,16)=3  (10,0)=3  (10,5)=3  (10,16)=3  (11,1)=3  (11,2)=3  (11,5)=3  (12,0)=3  (12,1)=3  (12,2)=3  (12,3)=3  (12,4)=3  (13,0)=3  (13,2)=3  (13,4)=3  (14,1)=3  (14,2)=3 
! size mismatch, 5x10 instead of 6x6

TEST 0b148d64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.3 sec (8.3 sec/task)
bits-train-error = 3715.9 bits (3715.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-386] Checking task 0ca9ddb6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4465.0 = 4477.6
DL output with Mo: L = 12.6 + 16373.6 = 16386.2
DL input+output M: L = 25.2 + 20838.5 = 20863.7

# learning a model for train pairs
2.000	
1.798	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.660	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.520	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.440	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	OUT ADD ^.layer_00 = ^.layer_0
1.305	OUT ADD ^.layer_011 = ^.layer_01
1.268	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.230	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.192	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.155	IN  SPE ^.layer_0.shape.color = red
1.118	IN  SPE ^.layer_01.shape.color = blue
1.082	OUT SPE ^.size = ^.size
1.059	OUT SPE ^.layer_0.shape.size = '(3, 3)
1.040	OUT SPE ^.layer_0.pos = ^.layer_01.pos - (1, 1)
1.023	IN  SPE ^.color = black
1.010	OUT SPE ^.layer_0.shape.mask = Odd Checkboard
1.000	OUT SPE ^.layer_0.shape.color = orange
0.982	OUT SPE ^.layer_011111.pos = ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
0.963	OUT SPE ^.layer_0111.pos = ^.layer_0.pos - (1, 1)
0.953	OUT SPE ^.layer_0111.shape.color = yellow
0.942	OUT SPE ^.layer_011111.shape.color = yellow
0.932	OUT SPE ^.layer_01111.shape.color = yellow
0.923	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j - 1
0.914	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.j + 1
0.905	OUT SPE ^.layer_01111.pos.i = ^.layer_0.pos.i - 1
0.901	OUT SPE ^.color = black
0.281	
0.281	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size '(3, 3) and color orange and mask Odd Checkboard at ^.layer_01.pos - (1, 1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j - 1)
  _011: ^.layer_01
  _0111: a point with color yellow at ^.layer_0.pos - (1, 1)
  _01111: a point with color yellow at (^.layer_0.pos.i - 1,^.layer_0.pos.j + 1)
  _011111: a point with color yellow at ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 52.4 + 2774.0 = 2826.4
DL output with Mo: L = 277.2 + 4142.4 = 4419.6
DL input+output M: L = 329.6 + 6916.3 = 7246.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size '(3, 3) and color orange and mask Odd Checkboard at ^.layer_01.pos - (1, 1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j - 1)
  _011: ^.layer_01
  _0111: a point with color yellow at ^.layer_0.pos - (1, 1)
  _01111: a point with color yellow at (^.layer_0.pos.i - 1,^.layer_0.pos.j + 1)
  _011111: a point with color yellow at ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color red at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 52.3 + 0.0 = 52.3
DL output with Mo: L = 277.2 + 4142.4 = 4419.6
DL input+output M: L = 329.5 + 4142.4 = 4471.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (6,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (3,2)
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,1)
  _011: a point with color blue at (6,6)
  _0111: a point with color yellow at (2,1)
  _01111: a point with color yellow at (2,3)
  _011111: a point with color yellow at (4,3)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (6,6)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,6)
  _01: a point with color red at (3,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,6)
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,5)
  _011: a point with color blue at (3,2)
  _0111: a point with color yellow at (1,5)
  _01111: a point with color yellow at (1,7)
  _011111: a point with color yellow at (3,5)
diff: 
delta: (0,3)=8  (3,7)=4  (6,0)=4  (6,2)=4  (6,6)=1  (7,1)=2  (8,0)=4  (8,2)=4 
   (333.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (6,6)
diff: 
delta: (0,3)=8  (3,2)=1  (7,1)=2 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (2,6)=2  (6,6)=1 
! 17 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color blue at (7,3)
diff: 
delta: (5,6)=6 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,2)
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,1)
  _011: a point with color blue at (7,3)
  _0111: a point with color yellow at (1,1)
  _01111: a point with color yellow at (1,3)
  _011111: a point with color yellow at (3,3)
diff: 
delta: (5,6)=6 
   (60.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color blue at (7,3)
diff: 
delta: (5,6)=6 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color pink at (5,6)
diff:   ^.layer_01.shape.color
delta: (7,3)=1 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color pink at (5,6)
  _01: a point with color blue at (7,3)
diff:   ^.layer_0.shape.color
delta: (2,2)=2 
! 12 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (2,6)
diff: 
delta: (5,5)=8  (7,1)=6  (7,7)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (7,7)
  _01: a point with color blue at (2,6)
diff: 
delta: (3,2)=2  (5,5)=8  (7,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color cyan at (5,5)
diff:   ^.layer_01.shape.color
delta: (2,6)=1  (7,1)=6  (7,7)=2 
! 20 wrong pixels (generated / expected)

TEST 0ca9ddb6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.5 sec (12.5 sec/task)
bits-train-error = 4142.4 bits (4142.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-385] Checking task 0d3d703e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9193.2 = 9205.8
DL output with Mo: L = 12.6 + 9193.2 = 9205.8
DL input+output M: L = 25.2 + 18386.5 = 18411.7

# learning a model for train pairs
2.000	
1.672	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.333	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.005	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.667	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.610	OUT SPE ^.size = ^.size
0.567	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.524	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.490	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.456	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.441	IN  SPE ^.layer_0.shape.mask = Full
0.427	OUT SPE ^.layer_0.shape.mask = Full
0.413	OUT SPE ^.layer_01.shape.mask = Full
0.398	IN  SPE ^.layer_01.shape.mask = Full
0.101	
0.101	IN  GEN ^.layer_01.shape.mask = ?
0.100	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.2 + 2739.7 = 2805.9
DL output with Mo: L = 50.1 + 810.1 = 860.2
DL input+output M: L = 116.3 + 3549.8 = 3666.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 50.1 + 810.1 = 860.2
DL input+output M: L = 114.3 + 810.1 = 924.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color brown and mask Full at (0,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 0d3d703e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 50.8 sec (50.8 sec/task)
bits-train-error = 810.1 bits (810.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-384] Checking task 0dfd9992.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 419930.7 = 419943.3
DL output with Mo: L = 12.6 + 407343.8 = 407356.4
DL input+output M: L = 25.2 + 827274.5 = 827299.7

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.946	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.899	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.847	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.802	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.778	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.774	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.761	IN  SPE ^.layer_011.shape.color = black
0.761	IN  SPE ^.layer_0.shape.color = black
0.760	IN  SPE ^.layer_01.shape.color = black
0.760	IN  SPE ^.layer_01111.shape.mask = Full
0.760	IN  SPE ^.layer_011.shape.mask = Full
0.760	IN  SPE ^.layer_0111.shape.mask = Full
0.759	IN  SPE ^.layer_0111111.shape.mask = Full
0.759	IN  SPE ^.layer_01111111.shape.mask = Full
0.759	IN  SPE ^.layer_01.shape.mask = Full
0.001	
0.001	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0
0.000	IN  DEL ^.layer_01111111
0.000	IN  DEL ^.layer_0111111
0.000	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011111

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 228.7 + 318475.0 = 318703.7
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 249.9 + 318475.0 = 318724.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (21,21) and color grey and layers
diff: 
delta: (0,0)=3  (0,1)=6  (0,3)=6  (0,4)=3  (0,5)=2  (0,6)=3  (0,7)=6  (0,9)=6  (0,10)=3  (0,11)=2  (0,12)=3  (0,13)=6  (0,15)=6  (0,16)=3  (0,17)=2  (0,18)=3  (0,19)=6  (1,0)=6  (1,1)=3  (1,2)=2  (1,3)=3  (1,4)=6  (1,6)=6  (1,7)=3  (1,8)=2  (1,9)=3  (1,10)=6  (1,12)=6  (1,13)=3  (1,14)=2  (1,15)=3  (1,16)=6  (1,18)=6  (1,19)=3  (1,20)=2  (2,1)=2  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=2  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=6  (3,6)=6  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=6  (3,12)=6  (3,13)=3  (3,14)=2  (3,15)=3  (3,16)=6  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=3  (4,1)=6  (4,3)=6  (4,4)=3  (4,5)=2  (4,6)=3  (4,7)=6  (4,9)=6  (4,10)=3  (4,11)=2  (4,12)=3  (4,13)=6  (4,15)=0  (4,16)=0  (4,17)=0  (4,18)=0  (4,19)=0  (5,0)=2  (5,2)=4  (5,4)=2  (5,5)=1  (5,6)=2  (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=1  (5,12)=2  (5,14)=4  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=0  (5,19)=0  (5,20)=4  (6,0)=3  (6,1)=6  (6,3)=6  (6,4)=3  (6,5)=2  (6,6)=3  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=2  (6,12)=3  (6,13)=6  (6,15)=0  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (7,0)=6  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=6  (7,6)=6  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,12)=6  (7,13)=3  (7,14)=2  (7,15)=3  (7,16)=6  (7,18)=6  (7,19)=3  (7,20)=2  (8,1)=2  (8,2)=1  (8,3)=2  (8,5)=4  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=4  (8,13)=2  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=2  (8,20)=1  (9,0)=6  (9,1)=3  (9,2)=2  (9,3)=3  (9,4)=6  (9,6)=6  (9,7)=3  (9,8)=0  (9,9)=0  (9,10)=6  (9,12)=6  (9,13)=3  (9,14)=2  (9,15)=3  (9,16)=6  (9,18)=6  (9,19)=3  (9,20)=2  (10,0)=3  (10,1)=6  (10,3)=6  (10,4)=3  (10,5)=2  (10,6)=3  (10,7)=6  (10,9)=6  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,15)=6  (10,16)=3  (10,17)=2  (10,18)=3  (10,19)=6  (11,0)=2  (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,20)=4  (12,0)=3  (12,1)=6  (12,3)=0  (12,4)=0  (12,5)=2  (12,6)=3  (12,7)=6  (12,9)=6  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,15)=6  (12,16)=3  (12,17)=2  (12,18)=3  (12,19)=6  (13,0)=6  (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,6)=6  (13,7)=3  (13,8)=2  (13,9)=3  (13,10)=6  (13,12)=6  (13,13)=3  (13,14)=2  (13,15)=3  (13,16)=6  (13,18)=6  (13,19)=3  (13,20)=2  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=2  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=2  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=2  (14,20)=1  (15,0)=6  (15,1)=3  (15,2)=2  (15,3)=3  (15,4)=6  (15,6)=6  (15,7)=3  (15,8)=2  (15,9)=3  (15,10)=6  (15,12)=6  (15,13)=3  (15,14)=2  (15,15)=3  (15,16)=6  (15,18)=6  (15,19)=3  (15,20)=2  (16,0)=3  (16,1)=6  (16,3)=6  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,9)=6  (16,10)=3  (16,11)=2  (16,12)=3  (16,13)=6  (16,15)=6  (16,16)=3  (16,17)=2  (16,18)=3  (16,19)=6  (17,0)=2  (17,2)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,20)=4  (18,0)=3  (18,1)=6  (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=6  (18,9)=6  (18,10)=3  (18,11)=2  (18,12)=3  (18,13)=6  (18,15)=6  (18,16)=3  (18,17)=2  (18,18)=3  (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=6  (19,6)=6  (19,7)=3  (19,8)=2  (19,9)=3  (19,10)=6  (19,12)=6  (19,13)=3  (19,14)=2  (19,15)=3  (19,16)=6  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=2  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=2  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=2  (20,20)=1 
   (0.0 bits)
data: 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 
3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#
6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 3 6 5#6 3 2 
5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 2 5#4 5#2 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
diff: 
delta: (0,0)=3  (0,1)=6  (0,3)=6  (0,4)=3  (0,5)=2  (0,6)=3  (0,7)=6  (0,9)=6  (0,10)=3  (0,11)=2  (0,12)=3  (0,13)=6  (0,15)=6  (0,16)=3  (0,17)=2  (0,18)=3  (0,19)=6  (1,0)=6  (1,1)=3  (1,2)=2  (1,3)=3  (1,4)=6  (1,6)=6  (1,7)=3  (1,8)=2  (1,9)=3  (1,10)=6  (1,12)=6  (1,13)=3  (1,14)=2  (1,15)=3  (1,16)=6  (1,18)=6  (1,19)=3  (1,20)=2  (2,1)=2  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=2  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=6  (3,6)=6  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=6  (3,12)=6  (3,13)=3  (3,14)=2  (3,15)=3  (3,16)=6  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=3  (4,1)=6  (4,3)=6  (4,4)=3  (4,5)=2  (4,6)=3  (4,7)=6  (4,9)=6  (4,10)=3  (4,11)=2  (4,12)=3  (4,13)=6  (4,15)=0  (4,16)=0  (4,17)=0  (4,18)=0  (4,19)=0  (5,0)=2  (5,2)=4  (5,4)=2  (5,5)=1  (5,6)=2  (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=1  (5,12)=2  (5,14)=4  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=0  (5,19)=0  (5,20)=4  (6,0)=3  (6,1)=6  (6,3)=6  (6,4)=3  (6,5)=2  (6,6)=3  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=2  (6,12)=3  (6,13)=6  (6,15)=0  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (7,0)=6  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=6  (7,6)=6  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,12)=6  (7,13)=3  (7,14)=2  (7,15)=3  (7,16)=6  (7,18)=6  (7,19)=3  (7,20)=2  (8,1)=2  (8,2)=1  (8,3)=2  (8,5)=4  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=4  (8,13)=2  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=2  (8,20)=1  (9,0)=6  (9,1)=3  (9,2)=2  (9,3)=3  (9,4)=6  (9,6)=6  (9,7)=3  (9,8)=0  (9,9)=0  (9,10)=6  (9,12)=6  (9,13)=3  (9,14)=2  (9,15)=3  (9,16)=6  (9,18)=6  (9,19)=3  (9,20)=2  (10,0)=3  (10,1)=6  (10,3)=6  (10,4)=3  (10,5)=2  (10,6)=3  (10,7)=6  (10,9)=6  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,15)=6  (10,16)=3  (10,17)=2  (10,18)=3  (10,19)=6  (11,0)=2  (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,20)=4  (12,0)=3  (12,1)=6  (12,3)=0  (12,4)=0  (12,5)=2  (12,6)=3  (12,7)=6  (12,9)=6  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,15)=6  (12,16)=3  (12,17)=2  (12,18)=3  (12,19)=6  (13,0)=6  (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,6)=6  (13,7)=3  (13,8)=2  (13,9)=3  (13,10)=6  (13,12)=6  (13,13)=3  (13,14)=2  (13,15)=3  (13,16)=6  (13,18)=6  (13,19)=3  (13,20)=2  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=2  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=2  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=2  (14,20)=1  (15,0)=6  (15,1)=3  (15,2)=2  (15,3)=3  (15,4)=6  (15,6)=6  (15,7)=3  (15,8)=2  (15,9)=3  (15,10)=6  (15,12)=6  (15,13)=3  (15,14)=2  (15,15)=3  (15,16)=6  (15,18)=6  (15,19)=3  (15,20)=2  (16,0)=3  (16,1)=6  (16,3)=6  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,9)=6  (16,10)=3  (16,11)=2  (16,12)=3  (16,13)=6  (16,15)=6  (16,16)=3  (16,17)=2  (16,18)=3  (16,19)=6  (17,0)=2  (17,2)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,20)=4  (18,0)=3  (18,1)=6  (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=6  (18,9)=6  (18,10)=3  (18,11)=2  (18,12)=3  (18,13)=6  (18,15)=6  (18,16)=3  (18,17)=2  (18,18)=3  (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=6  (19,6)=6  (19,7)=3  (19,8)=2  (19,9)=3  (19,10)=6  (19,12)=6  (19,13)=3  (19,14)=2  (19,15)=3  (19,16)=6  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=2  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=2  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=2  (20,20)=1 
correct output grid

TRAIN 0dfd9992.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (21,21) and color green and layers
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=7# (0,3)=2  (0,4)=6  (0,5)=5# (0,6)=6  (0,7)=2  (0,8)=7# (0,9)=7# (0,10)=2  (0,11)=6  (0,12)=5# (0,13)=6  (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,18)=6  (0,19)=5# (0,20)=6  (1,0)=7# (1,1)=5# (1,2)=5# (1,3)=7# (1,4)=4  (1,6)=4  (1,7)=7# (1,8)=5# (1,9)=5# (1,10)=7# (1,11)=4  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,20)=4  (2,0)=7# (2,1)=5# (2,2)=5# (2,3)=7# (2,4)=4  (2,6)=4  (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=7# (2,11)=4  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,20)=4  (3,0)=2  (3,1)=7# (3,2)=7# (3,3)=2  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=7# (3,10)=2  (3,11)=6  (3,12)=5# (3,13)=6  (3,14)=2  (3,15)=7# (3,16)=0  (3,17)=0  (3,18)=6  (3,19)=5# (3,20)=6  (4,0)=6  (4,1)=4  (4,2)=4  (4,3)=6  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,10)=6  (4,12)=2  (4,14)=6  (4,15)=4  (4,16)=0  (4,17)=0  (4,19)=2  (5,0)=5# (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,16)=0  (5,17)=0  (5,18)=2  (5,19)=1  (5,20)=2  (6,0)=6  (6,1)=4  (6,2)=4  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,10)=6  (6,12)=2  (6,14)=6  (6,15)=4  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=2  (7,8)=7# (7,9)=7# (7,10)=2  (7,11)=6  (7,12)=5# (7,13)=6  (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=0  (7,18)=0  (7,19)=0  (7,20)=6  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=0  (8,18)=0  (8,19)=0  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=5# (10,6)=6  (10,7)=2  (10,8)=7# (10,9)=7# (10,10)=2  (10,11)=6  (10,12)=5# (10,13)=6  (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,18)=6  (10,19)=5# (10,20)=6  (11,0)=6  (11,1)=4  (11,2)=4  (11,3)=6  (11,5)=2  (11,7)=6  (11,8)=4  (11,9)=4  (11,10)=6  (11,12)=2  (11,14)=6  (11,15)=4  (11,16)=4  (11,17)=6  (11,19)=2  (12,0)=5# (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,0)=6  (13,1)=4  (13,2)=4  (13,3)=6  (13,5)=2  (13,7)=6  (13,8)=4  (13,9)=4  (13,10)=6  (13,12)=2  (13,14)=6  (13,15)=4  (13,16)=0  (13,17)=0  (13,19)=2  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,4)=6  (14,5)=5# (14,6)=6  (14,7)=2  (14,8)=7# (14,9)=7# (14,10)=2  (14,11)=6  (14,12)=5# (14,13)=6  (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,18)=6  (14,19)=5# (14,20)=6  (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,4)=6  (17,5)=5# (17,6)=6  (17,7)=2  (17,8)=7# (17,9)=7# (17,10)=2  (17,11)=6  (17,12)=5# (17,13)=6  (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,18)=6  (17,19)=5# (17,20)=6  (18,0)=6  (18,1)=4  (18,2)=4  (18,3)=6  (18,5)=2  (18,7)=6  (18,8)=4  (18,9)=4  (18,10)=6  (18,12)=2  (18,14)=6  (18,15)=4  (18,16)=4  (18,17)=6  (18,19)=2  (19,0)=5# (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,0)=6  (20,1)=4  (20,2)=4  (20,3)=6  (20,5)=2  (20,7)=6  (20,8)=4  (20,9)=4  (20,10)=6  (20,12)=2  (20,14)=6  (20,15)=4  (20,16)=4  (20,17)=6  (20,19)=2 
   (0.0 bits)
data: 
2 7#7#2 6 5#6 2 7#7#2 6 5#6 2 7#7#2 6 5#6 
7#5#5#7#4 3 4 7#5#5#7#4 3 4 7#5#5#7#4 3 4 
7#5#5#7#4 3 4 7#5#5#7#4 3 4 7#5#5#7#4 3 4 
2 7#7#2 6 5#6 2 7#7#2 6 5#6 2 7#7#2 6 5#6 
6 4 4 6 3 2 3 6 4 4 6 3 2 3 6 4 4 6 3 2 3 
5#3 3 5#2 1 2 5#3 3 5#2 1 2 5#3 3 5#2 1 2 
6 4 4 6 3 2 3 6 4 4 6 3 2 3 6 4 4 6 3 2 3 
2 7#7#2 6 5#6 2 7#7#2 6 5#6 2 7#7#2 6 5#6 
7#5#5#7#4 3 4 7#5#5#7#4 3 4 7#5#5#7#4 3 4 
7#5#5#7#4 3 4 7#5#5#7#4 3 4 7#5#5#7#4 3 4 
2 7#7#2 6 5#6 2 7#7#2 6 5#6 2 7#7#2 6 5#6 
6 4 4 6 3 2 3 6 4 4 6 3 2 3 6 4 4 6 3 2 3 
5#3 3 5#2 1 2 5#3 3 5#2 1 2 5#3 3 5#2 1 2 
6 4 4 6 3 2 3 6 4 4 6 3 2 3 6 4 4 6 3 2 3 
2 7#7#2 6 5#6 2 7#7#2 6 5#6 2 7#7#2 6 5#6 
7#5#5#7#4 3 4 7#5#5#7#4 3 4 7#5#5#7#4 3 4 
7#5#5#7#4 3 4 7#5#5#7#4 3 4 7#5#5#7#4 3 4 
2 7#7#2 6 5#6 2 7#7#2 6 5#6 2 7#7#2 6 5#6 
6 4 4 6 3 2 3 6 4 4 6 3 2 3 6 4 4 6 3 2 3 
5#3 3 5#2 1 2 5#3 3 5#2 1 2 5#3 3 5#2 1 2 
6 4 4 6 3 2 3 6 4 4 6 3 2 3 6 4 4 6 3 2 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=7# (0,3)=2  (0,4)=6  (0,5)=5# (0,6)=6  (0,7)=2  (0,8)=7# (0,9)=7# (0,10)=2  (0,11)=6  (0,12)=5# (0,13)=6  (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,18)=6  (0,19)=5# (0,20)=6  (1,0)=7# (1,1)=5# (1,2)=5# (1,3)=7# (1,4)=4  (1,6)=4  (1,7)=7# (1,8)=5# (1,9)=5# (1,10)=7# (1,11)=4  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,20)=4  (2,0)=7# (2,1)=5# (2,2)=5# (2,3)=7# (2,4)=4  (2,6)=4  (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=7# (2,11)=4  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,20)=4  (3,0)=2  (3,1)=7# (3,2)=7# (3,3)=2  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=7# (3,10)=2  (3,11)=6  (3,12)=5# (3,13)=6  (3,14)=2  (3,15)=7# (3,16)=0  (3,17)=0  (3,18)=6  (3,19)=5# (3,20)=6  (4,0)=6  (4,1)=4  (4,2)=4  (4,3)=6  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,10)=6  (4,12)=2  (4,14)=6  (4,15)=4  (4,16)=0  (4,17)=0  (4,19)=2  (5,0)=5# (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,16)=0  (5,17)=0  (5,18)=2  (5,19)=1  (5,20)=2  (6,0)=6  (6,1)=4  (6,2)=4  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,10)=6  (6,12)=2  (6,14)=6  (6,15)=4  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=2  (7,8)=7# (7,9)=7# (7,10)=2  (7,11)=6  (7,12)=5# (7,13)=6  (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=0  (7,18)=0  (7,19)=0  (7,20)=6  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=0  (8,18)=0  (8,19)=0  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=5# (10,6)=6  (10,7)=2  (10,8)=7# (10,9)=7# (10,10)=2  (10,11)=6  (10,12)=5# (10,13)=6  (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,18)=6  (10,19)=5# (10,20)=6  (11,0)=6  (11,1)=4  (11,2)=4  (11,3)=6  (11,5)=2  (11,7)=6  (11,8)=4  (11,9)=4  (11,10)=6  (11,12)=2  (11,14)=6  (11,15)=4  (11,16)=4  (11,17)=6  (11,19)=2  (12,0)=5# (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,0)=6  (13,1)=4  (13,2)=4  (13,3)=6  (13,5)=2  (13,7)=6  (13,8)=4  (13,9)=4  (13,10)=6  (13,12)=2  (13,14)=6  (13,15)=4  (13,16)=0  (13,17)=0  (13,19)=2  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,4)=6  (14,5)=5# (14,6)=6  (14,7)=2  (14,8)=7# (14,9)=7# (14,10)=2  (14,11)=6  (14,12)=5# (14,13)=6  (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,18)=6  (14,19)=5# (14,20)=6  (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,4)=6  (17,5)=5# (17,6)=6  (17,7)=2  (17,8)=7# (17,9)=7# (17,10)=2  (17,11)=6  (17,12)=5# (17,13)=6  (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,18)=6  (17,19)=5# (17,20)=6  (18,0)=6  (18,1)=4  (18,2)=4  (18,3)=6  (18,5)=2  (18,7)=6  (18,8)=4  (18,9)=4  (18,10)=6  (18,12)=2  (18,14)=6  (18,15)=4  (18,16)=4  (18,17)=6  (18,19)=2  (19,0)=5# (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,0)=6  (20,1)=4  (20,2)=4  (20,3)=6  (20,5)=2  (20,7)=6  (20,8)=4  (20,9)=4  (20,10)=6  (20,12)=2  (20,14)=6  (20,15)=4  (20,16)=4  (20,17)=6  (20,19)=2 
correct output grid

TRAIN 0dfd9992.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (21,21) and color green and layers
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,0)=2  (1,1)=1  (1,2)=2  (1,3)=5# (1,4)=2  (1,5)=1  (1,6)=2  (1,7)=5# (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=5# (1,12)=2  (1,13)=1  (1,14)=2  (1,15)=5# (1,16)=2  (1,17)=1  (1,18)=2  (1,19)=5# (1,20)=2  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=0  (17,2)=0  (17,3)=0  (17,4)=0  (17,5)=0  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (0.0 bits)
data: 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 1 2 5#2 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 
6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 5#6 1 6 
3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 2 3 6 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,0)=2  (1,1)=1  (1,2)=2  (1,3)=5# (1,4)=2  (1,5)=1  (1,6)=2  (1,7)=5# (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=5# (1,12)=2  (1,13)=1  (1,14)=2  (1,15)=5# (1,16)=2  (1,17)=1  (1,18)=2  (1,19)=5# (1,20)=2  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=0  (17,2)=0  (17,3)=0  (17,4)=0  (17,5)=0  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
correct output grid

TRAIN 0dfd9992.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color red and layers
diff: 
delta: (0,0)=9# (0,1)=6  (0,2)=5# (0,3)=6  (0,4)=9# (0,5)=5# (0,6)=3  (0,7)=3  (0,8)=5# (0,9)=9# (0,10)=6  (0,11)=5# (0,12)=6  (0,13)=9# (0,14)=5# (0,15)=3  (0,16)=3  (0,17)=5# (0,18)=9# (0,19)=6  (0,20)=5# (1,0)=6  (1,1)=3  (1,3)=3  (1,4)=6  (1,6)=9# (1,7)=9# (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,15)=9# (1,16)=9# (1,18)=6  (1,19)=3  (2,0)=5# (2,2)=1  (2,4)=5# (2,5)=1  (2,6)=8  (2,7)=8  (2,8)=1  (2,9)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,14)=1  (2,15)=8  (2,16)=8  (2,17)=1  (2,18)=5# (2,20)=1  (3,0)=6  (3,1)=3  (3,3)=3  (3,4)=6  (3,6)=9# (3,7)=9# (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (3,13)=0  (3,15)=9# (3,16)=9# (3,18)=6  (3,19)=3  (4,0)=9# (4,1)=6  (4,2)=5# (4,3)=6  (4,4)=9# (4,5)=5# (4,6)=3  (4,7)=3  (4,8)=5# (4,9)=9# (4,10)=6  (4,11)=5# (4,12)=6  (4,13)=9# (4,14)=5# (4,15)=3  (4,16)=3  (4,17)=5# (4,18)=9# (4,19)=6  (4,20)=5# (5,0)=5# (5,2)=1  (5,4)=5# (5,5)=1  (5,6)=8  (5,7)=8  (5,8)=1  (5,9)=5# (5,11)=1  (5,13)=5# (5,14)=1  (5,15)=8  (5,16)=8  (5,17)=1  (5,18)=5# (5,20)=1  (6,0)=3  (6,1)=9# (6,2)=8  (6,3)=9# (6,4)=3  (6,5)=8  (6,6)=6  (6,7)=6  (6,8)=8  (6,9)=3  (6,10)=9# (6,11)=8  (6,12)=9# (6,13)=3  (6,14)=8  (6,15)=6  (6,16)=6  (6,17)=8  (6,18)=3  (6,19)=9# (6,20)=8  (7,0)=3  (7,1)=9# (7,2)=8  (7,3)=9# (7,4)=3  (7,5)=8  (7,6)=6  (7,7)=6  (7,8)=8  (7,9)=3  (7,10)=9# (7,11)=8  (7,12)=9# (7,13)=3  (7,14)=8  (7,15)=6  (7,16)=6  (7,17)=8  (7,18)=3  (7,19)=9# (7,20)=8  (8,0)=5# (8,2)=1  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,9)=5# (8,11)=1  (8,13)=5# (8,14)=1  (8,15)=8  (8,16)=8  (8,17)=1  (8,18)=5# (8,20)=1  (9,0)=9# (9,1)=6  (9,2)=5# (9,3)=6  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=5# (9,9)=9# (9,10)=6  (9,11)=5# (9,12)=6  (9,13)=9# (9,14)=5# (9,15)=3  (9,16)=3  (9,17)=5# (9,18)=9# (9,19)=6  (9,20)=5# (10,0)=6  (10,1)=3  (10,3)=3  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=6  (10,10)=3  (10,12)=3  (10,13)=6  (10,15)=9# (10,16)=9# (10,18)=6  (10,19)=3  (11,0)=5# (11,2)=1  (11,4)=5# (11,5)=1  (11,6)=8  (11,7)=8  (11,8)=1  (11,9)=5# (11,11)=1  (11,13)=5# (11,14)=1  (11,15)=8  (11,16)=8  (11,17)=1  (11,18)=5# (11,20)=1  (12,0)=6  (12,1)=3  (12,3)=3  (12,4)=6  (12,6)=9# (12,7)=9# (12,9)=6  (12,10)=3  (12,12)=3  (12,13)=6  (12,14)=0  (12,15)=0  (12,16)=9# (12,18)=6  (12,19)=3  (13,0)=9# (13,1)=6  (13,2)=5# (13,3)=6  (13,4)=9# (13,5)=5# (13,6)=3  (13,7)=3  (13,8)=5# (13,9)=9# (13,10)=6  (13,11)=5# (13,12)=6  (13,13)=9# (13,14)=0  (13,15)=0  (13,16)=3  (13,17)=5# (13,18)=9# (13,19)=6  (13,20)=5# (14,0)=5# (14,2)=1  (14,4)=5# (14,5)=1  (14,6)=8  (14,7)=8  (14,8)=1  (14,9)=5# (14,11)=1  (14,13)=5# (14,14)=0  (14,15)=0  (14,16)=8  (14,17)=1  (14,18)=5# (14,20)=1  (15,0)=0  (15,1)=0  (15,2)=8  (15,3)=9# (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=6  (15,8)=8  (15,9)=3  (15,10)=9# (15,11)=8  (15,12)=9# (15,13)=3  (15,14)=0  (15,15)=0  (15,16)=6  (15,17)=8  (15,18)=3  (15,19)=9# (15,20)=8  (16,0)=0  (16,1)=0  (16,2)=8  (16,3)=9# (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,8)=8  (16,9)=3  (16,10)=9# (16,11)=8  (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=6  (16,16)=6  (16,17)=8  (16,18)=3  (16,19)=9# (16,20)=8  (17,0)=5# (17,2)=1  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=8  (17,8)=1  (17,9)=5# (17,11)=1  (17,13)=5# (17,14)=1  (17,15)=8  (17,16)=8  (17,17)=1  (17,18)=5# (17,20)=1  (18,0)=9# (18,1)=6  (18,2)=5# (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=3  (18,8)=5# (18,9)=9# (18,10)=6  (18,11)=5# (18,12)=6  (18,13)=9# (18,14)=5# (18,15)=3  (18,16)=3  (18,17)=5# (18,18)=9# (18,19)=6  (18,20)=5# (19,0)=6  (19,1)=3  (19,3)=3  (19,4)=0  (19,5)=0  (19,6)=0  (19,7)=9# (19,9)=6  (19,10)=3  (19,12)=3  (19,13)=6  (19,15)=9# (19,16)=9# (19,18)=6  (19,19)=3  (20,0)=5# (20,2)=1  (20,4)=5# (20,5)=1  (20,6)=8  (20,7)=8  (20,8)=1  (20,9)=5# (20,11)=1  (20,13)=5# (20,14)=1  (20,15)=8  (20,16)=8  (20,17)=1  (20,18)=5# (20,20)=1 
correct output grid

TEST 0dfd9992.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 11.0 sec (11.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-383] Checking task 0e206a2e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19418.4 = 19431.0
DL output with Mo: L = 12.6 + 14786.5 = 14799.1
DL input+output M: L = 25.2 + 34204.9 = 34230.1

# learning a model for train pairs
2.000	
1.584	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.268	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.116	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	OUT SPE ^.size = ^.size
1.026	OUT SPE ^.layer_01.shape = applySym(flipDiag1, ^.layer_01.shape)
0.411	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: applySym(flipDiag1, ^.layer_01.shape) at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 11957.2 = 12021.4
DL output with Mo: L = 58.6 + 5973.0 = 6031.6
DL input+output M: L = 122.8 + 17930.2 = 18053.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: applySym(flipDiag1, ^.layer_01.shape) at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 58.6 + 5973.0 = 6031.6
DL input+output M: L = 122.8 + 5973.0 = 6095.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
   (0.0 bits)
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.x.|xxx at (2,14)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (9,1)
diff: 
delta: (2,15)=4  (4,13)=3  (4,17)=1  (9,2)=1  (10,3)=4  (11,2)=3 
   (297.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,2)=8  (3,3)=4  (3,4)=8  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 20 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,4)
diff: 
delta: (4,3)=4  (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
   (0.0 bits)
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask x....|.xxxx|x...x at (10,9)
  _01: a rectangle with size (1,1) and color red and mask Full at (11,14)
diff: 
delta: (10,13)=4  (11,9)=1 
   (148.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,4)
diff: 
delta: (4,3)=4  (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
! 14 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,9)
diff: 
delta: (4,5)=1  (4,9)=2  (11,1)=1  (11,5)=2  (13,5)=4 
   (0.0 bits)
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask ....x.|.xxx.x|x...x. at (10,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (13,5)
diff: 
delta: (11,1)=1  (11,5)=2 
   (151.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,9)
diff: 
delta: (4,5)=1  (4,9)=2  (11,1)=1  (11,5)=2  (13,5)=4 
! 14 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|x.xx.|.x..x|xxx.. at (3,6)
  _01: a rectangle with size (3,4) and color grey and mask x...|.x.x|..x. at (9,10)
diff: 
delta: (4,7)=1  (4,10)=4  (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask x...|.x.x|..x. at (9,10)
  _01: a rectangle with size (4,5) and color grey and mask .x...|x.xx.|.x..x|xxx.. at (3,6)
diff: 
delta: (4,7)=1  (4,10)=4  (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|x.xx.|.x..x|xxx.. at (3,6)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,7)
diff: 
delta: (4,10)=4  (6,5)=2  (9,10)=5# (9,11)=2  (10,11)=5# (10,13)=5# (11,11)=4  (11,12)=5# (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 23 wrong pixels (generated / expected)

TEST 0e206a2e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.0 sec (56.0 sec/task)
bits-train-error = 5973.0 bits (5973.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-382] Checking task 10fcaaa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2809.6 = 2822.2
DL output with Mo: L = 12.6 + 34525.7 = 34538.3
DL input+output M: L = 25.2 + 37335.3 = 37360.6

# learning a model for train pairs
2.000	
1.696	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.407	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.280	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.245	IN  SPE ^.color = black
1.213	OUT ADD ^.layer_00 = ^.layer_0
1.183	OUT ADD ^.layer_010 = ^.layer_0.shape at (?,?)
1.159	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.135	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.120	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.099	OUT SPE ^.size = tiling(^.size, 2, 2)
1.093	OUT SPE ^.layer_0.shape.color = cyan
1.087	OUT SPE ^.layer_0.pos.j = '0
1.082	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.j + 3
1.076	OUT SPE ^.layer_0111.pos.j = 2
1.069	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j - 1
1.065	OUT SPE ^.layer_011.shape.size.i = 1
1.062	OUT SPE ^.layer_011.shape.mask = Full
1.059	OUT SPE ^.layer_010.pos = ^.layer_0.pos + projJ(^.size)
1.056	OUT SPE ^.color = black
0.405	
0.404	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,'0)
  _010: ^.layer_0.shape at ^.layer_0.pos + projJ(^.size)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,^.layer_0.pos.j - 1)
  _0111: a point with color ? at (?,2)
  _01111: a point with color ? at (?,^.layer_0.pos.j + 3)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1837.8 = 1867.4
DL output with Mo: L = 257.2 + 13351.1 = 13608.3
DL input+output M: L = 286.8 + 15188.9 = 15475.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,'0)
  _010: ^.layer_0.shape at ^.layer_0.pos + projJ(^.size)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,^.layer_0.pos.j - 1)
  _0111: a point with color ? at (?,2)
  _01111: a point with color ? at (?,^.layer_0.pos.j + 3)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 257.2 + 13351.1 = 13608.3
DL input+output M: L = 286.7 + 13351.1 = 13637.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (2,4) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,8) and color black and layers
  _00: a point with color grey at (1,1)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _010: a point with color grey at (1,5)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
  _0111: a point with color cyan at (2,2)
  _01111: a point with color cyan at (0,4)
  _011111: a point with color cyan at (0,6)
diff: 
delta: (2,4)=8  (2,6)=8  (3,1)=5# (3,5)=5#
   (234.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,4) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (0,2)
diff: 
delta: (2,1)=6 
   (0.0 bits)
data: a background with size (6,8) and color black and layers
  _00: a point with color pink at (0,2)
  _0: a rectangle with size (4,8) and color cyan and mask xxxxxxxx|...x...x|x...x...|xxxxxxxx at (1,0)
  _010: a point with color pink at (0,6)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (2,5)
  _011: a rectangle with size (1,1) and color pink and mask Full at (2,1)
  _0111: a point with color pink at (3,2)
  _01111: a point with color pink at (5,5)
  _011111: a point with color pink at (5,1)
diff: 
delta:
   (144.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (0,2)
diff: 
delta: (2,1)=6 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (2,1)
diff: 
delta: (0,2)=6 
! 27 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,1)
diff: 
delta: (4,0)=4 
   (0.0 bits)
data: a background with size (10,6) and color black and layers
  _00: a point with color yellow at (1,1)
  _0: a rectangle with size (2,6) and color cyan and mask x.xx.x|.xx.x. at (2,0)
  _010: a point with color yellow at (1,4)
  _01: a rectangle with size (2,6) and color cyan and mask x.xx.x|.xx.x. at (7,0)
  _011: a rectangle with size (1,6) and color cyan and mask Full at (5,0)
  _0111: a point with color cyan at (0,2)
  _01111: a point with color yellow at (6,4)
  _011111: a point with color cyan at (0,0)
diff: 
delta: (0,3)=8  (0,5)=8  (4,0)=4  (4,3)=4  (6,1)=4  (9,0)=4  (9,3)=4 
   (405.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,1)
diff: 
delta: (4,0)=4 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (4,0)
diff: 
delta: (1,1)=4 
! 31 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,4) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (1,7) and color cyan and mask Full at (0,0)
  _010: a point with color red at (1,5)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (4,0)
  _0111: a point with color cyan at (4,2)
  _01111: a point with color cyan at (4,4)
  _011111: a point with color cyan at (4,6)
diff: 
delta: (0,1)=0  (0,3)=0  (0,5)=0  (2,1)=0  (2,3)=0  (2,5)=0  (5,1)=2  (5,5)=2  (6,0)=8  (6,2)=8  (6,4)=8  (6,6)=8 
   (551.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,5) and color black and layers
  _0: a point with color green at (0,1)
diff: 
delta: (3,3)=3  (5,1)=3 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,5) and color black and layers
  _0: a point with color green at (3,3)
diff: 
delta: (0,1)=3  (5,1)=3 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,5) and color black and layers
  _0: a point with color green at (5,1)
diff: 
delta: (0,1)=3  (3,3)=3 
! 49 wrong pixels (generated / expected)

TEST 10fcaaa3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.7 sec (19.7 sec/task)
bits-train-error = 13351.1 bits (13351.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-381] Checking task 11852cab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12034.8 = 12047.4
DL output with Mo: L = 12.6 + 15402.3 = 15414.9
DL input+output M: L = 25.2 + 27437.1 = 27462.3

# learning a model for train pairs
2.000	
1.860	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.690	OUT ADD ^.layer_0 = ^.layer_0
1.640	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.568	OUT ADD ^.layer_01 = ^.layer_01
1.518	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.445	OUT ADD ^.layer_011 = ^.layer_011
1.395	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
1.345	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
1.295	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
1.245	OUT ADD ^.layer_0101 = ^.layer_01.shape at (?,?)
1.195	OUT ADD ^.layer_0100 = ^.layer_01.shape at (?,?)
1.151	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.100	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.048	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.009	OUT SPE ^.size = ^.size
0.987	OUT SPE ^.layer_0111 = ^.layer_01111
0.965	OUT SPE ^.layer_0110 = ^.layer_011111
0.944	OUT SPE ^.layer_010.pos = ^.layer_0.pos + (3, 3)
0.924	OUT SPE ^.layer_0100.pos = corner(^.layer_01.pos, ^.layer_0.pos) + (0, 3)
0.904	OUT SPE ^.layer_0101.pos = corner(^.layer_0.pos, ^.layer_01.pos) + (3, 0)
0.898	IN  SPE ^.color = black
0.894	OUT SPE ^.color = black
0.296	
0.295	IN  DEL ^.layer_0111
0.295	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: ^.layer_01.shape at corner(^.layer_01.pos, ^.layer_0.pos) + (0, 3)
  _010: ^.layer_01.shape at ^.layer_0.pos + (3, 3)
  _0101: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos) + (3, 0)
  _01: ^.layer_01
  _0110: ^.layer_011111
  _011: ^.layer_011
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 117.2 + 7197.0 = 7314.3
DL output with Mo: L = 201.4 + 4213.8 = 4415.2
DL input+output M: L = 318.7 + 11410.8 = 11729.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: ^.layer_01.shape at corner(^.layer_01.pos, ^.layer_0.pos) + (0, 3)
  _010: ^.layer_01.shape at ^.layer_0.pos + (3, 3)
  _0101: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos) + (3, 0)
  _01: ^.layer_01
  _0110: ^.layer_011111
  _011: ^.layer_011
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 0.0 = 101.7
DL output with Mo: L = 201.4 + 4213.8 = 4415.2
DL input+output M: L = 303.2 + 4213.8 = 4516.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,3)
  _01: a point with color green at (1,2)
  _011: a point with color cyan at (1,4)
  _01111: a point with color cyan at (3,2)
  _011111: a point with color green at (3,4)
diff: 
delta: (2,4)=0  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,3)
  _0100: a point with color green at (1,6)
  _010: a point with color green at (5,6)
  _0101: a point with color green at (5,2)
  _01: a point with color green at (1,2)
  _0110: a point with color green at (3,4)
  _011: a point with color cyan at (1,4)
  _0111: a point with color cyan at (3,2)
diff: 
delta: (2,4)=0  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
   (191.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,3)
  _01: a point with color green at (1,2)
  _011: a point with color cyan at (1,4)
  _01111: a point with color cyan at (3,2)
  _011111: a point with color green at (3,4)
diff: 
delta: (2,4)=0  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,3)
  _01: a point with color green at (1,2)
  _011: a point with color cyan at (1,4)
  _01111: a point with color cyan at (3,2)
  _011111: a point with color cyan at (3,6)
diff: 
delta: (2,4)=0  (3,4)=3  (4,3)=2  (4,5)=2  (5,4)=8 
! 5 wrong pixels (generated / expected)

TRAIN 11852cab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _01: a point with color red at (2,2)
  _011: a point with color green at (2,4)
  _01111: a point with color green at (4,2)
  _011111: a point with color green at (4,6)
diff: 
delta: (6,4)=3 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _0100: a point with color red at (2,6)
  _010: a point with color red at (6,6)
  _0101: a point with color red at (6,2)
  _01: a point with color red at (2,2)
  _0110: a point with color green at (4,6)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (4,2)
diff: 
delta: (6,4)=3 
   (39.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _01: a point with color red at (2,2)
  _011: a point with color green at (2,4)
  _01111: a point with color green at (4,2)
  _011111: a point with color green at (4,6)
diff: 
delta: (6,4)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _01: a point with color red at (2,2)
  _011: a point with color green at (2,4)
  _01111: a point with color green at (4,2)
  _011111: a point with color green at (6,4)
diff: 
delta: (4,6)=3 
! 1 wrong pixels (generated / expected)

TRAIN 11852cab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,3)
  _01: a point with color yellow at (2,4)
  _011: a point with color cyan at (3,3)
  _01111: a point with color blue at (3,5)
  _011111: a point with color cyan at (3,7)
diff: 
delta: (1,4)=0  (1,6)=0  (5,3)=8  (5,5)=8  (5,7)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,3)
  _0100: a point with color yellow at (2,6)
  _010: a point with color yellow at (4,6)
  _0101: a point with color yellow at (4,4)
  _01: a point with color yellow at (2,4)
  _0110: a point with color cyan at (3,7)
  _011: a point with color cyan at (3,3)
  _0111: a point with color blue at (3,5)
diff: 
delta: (1,4)=0  (1,6)=0  (5,3)=8  (5,5)=8  (5,7)=8 
   (191.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,3)
  _01: a point with color yellow at (2,4)
  _011: a point with color cyan at (3,3)
  _01111: a point with color blue at (3,5)
  _011111: a point with color cyan at (3,7)
diff: 
delta: (1,4)=0  (1,6)=0  (5,3)=8  (5,5)=8  (5,7)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,3)
  _01: a point with color yellow at (2,4)
  _011: a point with color cyan at (3,3)
  _01111: a point with color blue at (3,5)
  _011111: a point with color cyan at (5,3)
diff: 
delta: (1,4)=0  (1,6)=0  (3,7)=8  (5,5)=8  (5,7)=8 
! 5 wrong pixels (generated / expected)

TRAIN 11852cab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,2)
  _01: a point with color blue at (2,1)
  _011: a point with color yellow at (2,3)
  _01111: a point with color blue at (2,5)
  _011111: a point with color blue at (4,3)
diff: 
delta: (3,3)=0  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,2)
  _01: a point with color blue at (2,1)
  _011: a point with color yellow at (2,3)
  _01111: a point with color blue at (2,5)
  _011111: a point with color red at (5,2)
diff: 
delta: (3,3)=0  (4,3)=1  (5,4)=2  (6,1)=1  (6,5)=1 
! 6 wrong pixels (generated / expected)

TEST 11852cab.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.7 sec (14.7 sec/task)
bits-train-error = 4213.8 bits (4213.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-380] Checking task 1190e5a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 124115.1 = 124127.7
DL output with Mo: L = 12.6 + 678.1 = 690.7
DL input+output M: L = 25.2 + 124793.2 = 124818.5

# learning a model for train pairs
2.000	
1.095	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.708	OUT SPE ^.color = ^.color
0.613	
0.613	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 11748.0 = 11786.8
DL output with Mo: L = 14.0 + 409.2 = 423.2
DL input+output M: L = 52.9 + 12157.2 = 12210.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.0 + 409.2 = 423.2
DL input+output M: L = 26.6 + 409.2 = 435.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color green and layers
diff: 
delta: (0,1)=7# (0,10)=7# (0,13)=7# (1,1)=7# (1,10)=7# (1,13)=7# (2,0)=7# (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=7# (2,5)=7# (2,6)=7# (2,7)=7# (2,8)=7# (2,9)=7# (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=7# (3,1)=7# (3,10)=7# (3,13)=7# (4,1)=7# (4,10)=7# (4,13)=7# (5,1)=7# (5,10)=7# (5,13)=7# (6,1)=7# (6,10)=7# (6,13)=7# (7,1)=7# (7,10)=7# (7,13)=7# (8,1)=7# (8,10)=7# (8,13)=7# (9,1)=7# (9,10)=7# (9,13)=7# (10,1)=7# (10,10)=7# (10,13)=7# (11,1)=7# (11,10)=7# (11,13)=7# (12,1)=7# (12,10)=7# (12,13)=7# (13,1)=7# (13,10)=7# (13,13)=7# (14,1)=7# (14,10)=7# (14,13)=7#
   (0.0 bits)
data: a background with size (2,4) and color green and layers
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color green and layers
diff: 
delta: (0,1)=7# (0,10)=7# (0,13)=7# (1,1)=7# (1,10)=7# (1,13)=7# (2,0)=7# (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=7# (2,5)=7# (2,6)=7# (2,7)=7# (2,8)=7# (2,9)=7# (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=7# (3,1)=7# (3,10)=7# (3,13)=7# (4,1)=7# (4,10)=7# (4,13)=7# (5,1)=7# (5,10)=7# (5,13)=7# (6,1)=7# (6,10)=7# (6,13)=7# (7,1)=7# (7,10)=7# (7,13)=7# (8,1)=7# (8,10)=7# (8,13)=7# (9,1)=7# (9,10)=7# (9,13)=7# (10,1)=7# (10,10)=7# (10,13)=7# (11,1)=7# (11,10)=7# (11,13)=7# (12,1)=7# (12,10)=7# (12,13)=7# (13,1)=7# (13,10)=7# (13,13)=7# (14,1)=7# (14,10)=7# (14,13)=7#
! size mismatch, 10x10 instead of 2x4
>> Trial 2
data: a background with size (15,15) and color orange and layers
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,8)=3  (0,9)=3  (0,11)=3  (0,12)=3  (0,14)=3  (1,0)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=3  (1,8)=3  (1,9)=3  (1,11)=3  (1,12)=3  (1,14)=3  (3,0)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,11)=3  (3,12)=3  (3,14)=3  (4,0)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,11)=3  (4,12)=3  (4,14)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,11)=3  (5,12)=3  (5,14)=3  (6,0)=3  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,11)=3  (6,12)=3  (6,14)=3  (7,0)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,11)=3  (7,12)=3  (7,14)=3  (8,0)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=3  (8,11)=3  (8,12)=3  (8,14)=3  (9,0)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,11)=3  (9,12)=3  (9,14)=3  (10,0)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,11)=3  (10,12)=3  (10,14)=3  (11,0)=3  (11,2)=3  (11,3)=3  (11,4)=3  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,12)=3  (11,14)=3  (12,0)=3  (12,2)=3  (12,3)=3  (12,4)=3  (12,5)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,11)=3  (12,12)=3  (12,14)=3  (13,0)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,11)=3  (13,12)=3  (13,14)=3  (14,0)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,11)=3  (14,12)=3  (14,14)=3 
! size mismatch, 10x10 instead of 2x4

TRAIN 1190e5a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color blue and layers
diff: 
delta: (0,4)=8  (1,4)=8  (2,4)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (4,4)=8  (5,4)=8  (6,4)=8  (7,4)=8  (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (9,8)=8  (9,9)=8  (9,10)=8  (10,4)=8 
   (0.0 bits)
data: a background with size (3,2) and color blue and layers
diff: 
delta:
   (11.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color blue and layers
diff: 
delta: (0,4)=8  (1,4)=8  (2,4)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (4,4)=8  (5,4)=8  (6,4)=8  (7,4)=8  (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (9,8)=8  (9,9)=8  (9,10)=8  (10,4)=8 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (11,11) and color cyan and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,5)=1  (0,6)=1  (0,7)=1  (0,8)=1  (0,9)=1  (0,10)=1  (1,0)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,5)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (1,10)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,10)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (6,0)=1  (6,1)=1  (6,2)=1  (6,3)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (7,9)=1  (7,10)=1  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=1  (8,5)=1  (8,6)=1  (8,7)=1  (8,8)=1  (8,9)=1  (8,10)=1  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=1 
! size mismatch, 10x10 instead of 3x2

TRAIN 1190e5a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (27,27) and color green and layers
diff: 
delta: (0,6)=1  (0,21)=1  (0,23)=1  (0,25)=1  (1,6)=1  (1,21)=1  (1,23)=1  (1,25)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=1  (2,24)=1  (2,25)=1  (2,26)=1  (3,6)=1  (3,21)=1  (3,23)=1  (3,25)=1  (4,6)=1  (4,21)=1  (4,23)=1  (4,25)=1  (5,6)=1  (5,21)=1  (5,23)=1  (5,25)=1  (6,6)=1  (6,21)=1  (6,23)=1  (6,25)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (7,21)=1  (7,22)=1  (7,23)=1  (7,24)=1  (7,25)=1  (7,26)=1  (8,6)=1  (8,21)=1  (8,23)=1  (8,25)=1  (9,6)=1  (9,21)=1  (9,23)=1  (9,25)=1  (10,6)=1  (10,21)=1  (10,23)=1  (10,25)=1  (11,6)=1  (11,21)=1  (11,23)=1  (11,25)=1  (12,6)=1  (12,21)=1  (12,23)=1  (12,25)=1  (13,6)=1  (13,21)=1  (13,23)=1  (13,25)=1  (14,6)=1  (14,21)=1  (14,23)=1  (14,25)=1  (15,6)=1  (15,21)=1  (15,23)=1  (15,25)=1  (16,0)=1  (16,1)=1  (16,2)=1  (16,3)=1  (16,4)=1  (16,5)=1  (16,6)=1  (16,7)=1  (16,8)=1  (16,9)=1  (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (16,15)=1  (16,16)=1  (16,17)=1  (16,18)=1  (16,19)=1  (16,20)=1  (16,21)=1  (16,22)=1  (16,23)=1  (16,24)=1  (16,25)=1  (16,26)=1  (17,6)=1  (17,21)=1  (17,23)=1  (17,25)=1  (18,6)=1  (18,21)=1  (18,23)=1  (18,25)=1  (19,6)=1  (19,21)=1  (19,23)=1  (19,25)=1  (20,6)=1  (20,21)=1  (20,23)=1  (20,25)=1  (21,0)=1  (21,1)=1  (21,2)=1  (21,3)=1  (21,4)=1  (21,5)=1  (21,6)=1  (21,7)=1  (21,8)=1  (21,9)=1  (21,10)=1  (21,11)=1  (21,12)=1  (21,13)=1  (21,14)=1  (21,15)=1  (21,16)=1  (21,17)=1  (21,18)=1  (21,19)=1  (21,20)=1  (21,21)=1  (21,22)=1  (21,23)=1  (21,24)=1  (21,25)=1  (21,26)=1  (22,6)=1  (22,21)=1  (22,23)=1  (22,25)=1  (23,0)=1  (23,1)=1  (23,2)=1  (23,3)=1  (23,4)=1  (23,5)=1  (23,6)=1  (23,7)=1  (23,8)=1  (23,9)=1  (23,10)=1  (23,11)=1  (23,12)=1  (23,13)=1  (23,14)=1  (23,15)=1  (23,16)=1  (23,17)=1  (23,18)=1  (23,19)=1  (23,20)=1  (23,21)=1  (23,22)=1  (23,23)=1  (23,24)=1  (23,25)=1  (23,26)=1  (24,6)=1  (24,21)=1  (24,23)=1  (24,25)=1  (25,6)=1  (25,21)=1  (25,23)=1  (25,25)=1  (26,6)=1  (26,21)=1  (26,23)=1  (26,25)=1 
   (0.0 bits)
data: a background with size (6,5) and color green and layers
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color green and layers
diff: 
delta: (0,6)=1  (0,21)=1  (0,23)=1  (0,25)=1  (1,6)=1  (1,21)=1  (1,23)=1  (1,25)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=1  (2,24)=1  (2,25)=1  (2,26)=1  (3,6)=1  (3,21)=1  (3,23)=1  (3,25)=1  (4,6)=1  (4,21)=1  (4,23)=1  (4,25)=1  (5,6)=1  (5,21)=1  (5,23)=1  (5,25)=1  (6,6)=1  (6,21)=1  (6,23)=1  (6,25)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (7,21)=1  (7,22)=1  (7,23)=1  (7,24)=1  (7,25)=1  (7,26)=1  (8,6)=1  (8,21)=1  (8,23)=1  (8,25)=1  (9,6)=1  (9,21)=1  (9,23)=1  (9,25)=1  (10,6)=1  (10,21)=1  (10,23)=1  (10,25)=1  (11,6)=1  (11,21)=1  (11,23)=1  (11,25)=1  (12,6)=1  (12,21)=1  (12,23)=1  (12,25)=1  (13,6)=1  (13,21)=1  (13,23)=1  (13,25)=1  (14,6)=1  (14,21)=1  (14,23)=1  (14,25)=1  (15,6)=1  (15,21)=1  (15,23)=1  (15,25)=1  (16,0)=1  (16,1)=1  (16,2)=1  (16,3)=1  (16,4)=1  (16,5)=1  (16,6)=1  (16,7)=1  (16,8)=1  (16,9)=1  (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (16,15)=1  (16,16)=1  (16,17)=1  (16,18)=1  (16,19)=1  (16,20)=1  (16,21)=1  (16,22)=1  (16,23)=1  (16,24)=1  (16,25)=1  (16,26)=1  (17,6)=1  (17,21)=1  (17,23)=1  (17,25)=1  (18,6)=1  (18,21)=1  (18,23)=1  (18,25)=1  (19,6)=1  (19,21)=1  (19,23)=1  (19,25)=1  (20,6)=1  (20,21)=1  (20,23)=1  (20,25)=1  (21,0)=1  (21,1)=1  (21,2)=1  (21,3)=1  (21,4)=1  (21,5)=1  (21,6)=1  (21,7)=1  (21,8)=1  (21,9)=1  (21,10)=1  (21,11)=1  (21,12)=1  (21,13)=1  (21,14)=1  (21,15)=1  (21,16)=1  (21,17)=1  (21,18)=1  (21,19)=1  (21,20)=1  (21,21)=1  (21,22)=1  (21,23)=1  (21,24)=1  (21,25)=1  (21,26)=1  (22,6)=1  (22,21)=1  (22,23)=1  (22,25)=1  (23,0)=1  (23,1)=1  (23,2)=1  (23,3)=1  (23,4)=1  (23,5)=1  (23,6)=1  (23,7)=1  (23,8)=1  (23,9)=1  (23,10)=1  (23,11)=1  (23,12)=1  (23,13)=1  (23,14)=1  (23,15)=1  (23,16)=1  (23,17)=1  (23,18)=1  (23,19)=1  (23,20)=1  (23,21)=1  (23,22)=1  (23,23)=1  (23,24)=1  (23,25)=1  (23,26)=1  (24,6)=1  (24,21)=1  (24,23)=1  (24,25)=1  (25,6)=1  (25,21)=1  (25,23)=1  (25,25)=1  (26,6)=1  (26,21)=1  (26,23)=1  (26,25)=1 
! size mismatch, 10x10 instead of 6x5
>> Trial 2
data: a background with size (27,27) and color blue and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,7)=3  (0,8)=3  (0,9)=3  (0,10)=3  (0,11)=3  (0,12)=3  (0,13)=3  (0,14)=3  (0,15)=3  (0,16)=3  (0,17)=3  (0,18)=3  (0,19)=3  (0,20)=3  (0,22)=3  (0,24)=3  (0,26)=3  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,7)=3  (1,8)=3  (1,9)=3  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=3  (1,14)=3  (1,15)=3  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=3  (1,20)=3  (1,22)=3  (1,24)=3  (1,26)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (3,13)=3  (3,14)=3  (3,15)=3  (3,16)=3  (3,17)=3  (3,18)=3  (3,19)=3  (3,20)=3  (3,22)=3  (3,24)=3  (3,26)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (4,16)=3  (4,17)=3  (4,18)=3  (4,19)=3  (4,20)=3  (4,22)=3  (4,24)=3  (4,26)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=3  (5,18)=3  (5,19)=3  (5,20)=3  (5,22)=3  (5,24)=3  (5,26)=3  (6,0)=3  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (6,16)=3  (6,17)=3  (6,18)=3  (6,19)=3  (6,20)=3  (6,22)=3  (6,24)=3  (6,26)=3  (8,0)=3  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,7)=3  (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (8,14)=3  (8,15)=3  (8,16)=3  (8,17)=3  (8,18)=3  (8,19)=3  (8,20)=3  (8,22)=3  (8,24)=3  (8,26)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,17)=3  (9,18)=3  (9,19)=3  (9,20)=3  (9,22)=3  (9,24)=3  (9,26)=3  (10,0)=3  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=3  (10,14)=3  (10,15)=3  (10,16)=3  (10,17)=3  (10,18)=3  (10,19)=3  (10,20)=3  (10,22)=3  (10,24)=3  (10,26)=3  (11,0)=3  (11,1)=3  (11,2)=3  (11,3)=3  (11,4)=3  (11,5)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (11,14)=3  (11,15)=3  (11,16)=3  (11,17)=3  (11,18)=3  (11,19)=3  (11,20)=3  (11,22)=3  (11,24)=3  (11,26)=3  (12,0)=3  (12,1)=3  (12,2)=3  (12,3)=3  (12,4)=3  (12,5)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=3  (12,14)=3  (12,15)=3  (12,16)=3  (12,17)=3  (12,18)=3  (12,19)=3  (12,20)=3  (12,22)=3  (12,24)=3  (12,26)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3  (13,14)=3  (13,15)=3  (13,16)=3  (13,17)=3  (13,18)=3  (13,19)=3  (13,20)=3  (13,22)=3  (13,24)=3  (13,26)=3  (14,0)=3  (14,1)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,5)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,11)=3  (14,12)=3  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=3  (14,17)=3  (14,18)=3  (14,19)=3  (14,20)=3  (14,22)=3  (14,24)=3  (14,26)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=3  (15,11)=3  (15,12)=3  (15,13)=3  (15,14)=3  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (15,19)=3  (15,20)=3  (15,22)=3  (15,24)=3  (15,26)=3  (17,0)=3  (17,1)=3  (17,2)=3  (17,3)=3  (17,4)=3  (17,5)=3  (17,7)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=3  (17,12)=3  (17,13)=3  (17,14)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (17,20)=3  (17,22)=3  (17,24)=3  (17,26)=3  (18,0)=3  (18,1)=3  (18,2)=3  (18,3)=3  (18,4)=3  (18,5)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (18,20)=3  (18,22)=3  (18,24)=3  (18,26)=3  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,11)=3  (19,12)=3  (19,13)=3  (19,14)=3  (19,15)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3  (19,20)=3  (19,22)=3  (19,24)=3  (19,26)=3  (20,0)=3  (20,1)=3  (20,2)=3  (20,3)=3  (20,4)=3  (20,5)=3  (20,7)=3  (20,8)=3  (20,9)=3  (20,10)=3  (20,11)=3  (20,12)=3  (20,13)=3  (20,14)=3  (20,15)=3  (20,16)=3  (20,17)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,22)=3  (20,24)=3  (20,26)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,7)=3  (22,8)=3  (22,9)=3  (22,10)=3  (22,11)=3  (22,12)=3  (22,13)=3  (22,14)=3  (22,15)=3  (22,16)=3  (22,17)=3  (22,18)=3  (22,19)=3  (22,20)=3  (22,22)=3  (22,24)=3  (22,26)=3  (24,0)=3  (24,1)=3  (24,2)=3  (24,3)=3  (24,4)=3  (24,5)=3  (24,7)=3  (24,8)=3  (24,9)=3  (24,10)=3  (24,11)=3  (24,12)=3  (24,13)=3  (24,14)=3  (24,15)=3  (24,16)=3  (24,17)=3  (24,18)=3  (24,19)=3  (24,20)=3  (24,22)=3  (24,24)=3  (24,26)=3  (25,0)=3  (25,1)=3  (25,2)=3  (25,3)=3  (25,4)=3  (25,5)=3  (25,7)=3  (25,8)=3  (25,9)=3  (25,10)=3  (25,11)=3  (25,12)=3  (25,13)=3  (25,14)=3  (25,15)=3  (25,16)=3  (25,17)=3  (25,18)=3  (25,19)=3  (25,20)=3  (25,22)=3  (25,24)=3  (25,26)=3  (26,0)=3  (26,1)=3  (26,2)=3  (26,3)=3  (26,4)=3  (26,5)=3  (26,7)=3  (26,8)=3  (26,9)=3  (26,10)=3  (26,11)=3  (26,12)=3  (26,13)=3  (26,14)=3  (26,15)=3  (26,16)=3  (26,17)=3  (26,18)=3  (26,19)=3  (26,20)=3  (26,22)=3  (26,24)=3  (26,26)=3 
! size mismatch, 10x10 instead of 6x5

TRAIN 1190e5a7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color blue and layers
diff: 
delta: (0,15)=5# (0,20)=5# (1,15)=5# (1,20)=5# (2,0)=5# (2,1)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (2,10)=5# (2,11)=5# (2,12)=5# (2,13)=5# (2,14)=5# (2,15)=5# (2,16)=5# (2,17)=5# (2,18)=5# (2,19)=5# (2,20)=5# (2,21)=5# (3,15)=5# (3,20)=5# (4,15)=5# (4,20)=5# (5,15)=5# (5,20)=5# (6,15)=5# (6,20)=5# (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (7,11)=5# (7,12)=5# (7,13)=5# (7,14)=5# (7,15)=5# (7,16)=5# (7,17)=5# (7,18)=5# (7,19)=5# (7,20)=5# (7,21)=5# (8,15)=5# (8,20)=5# (9,15)=5# (9,20)=5# (10,15)=5# (10,20)=5# (11,15)=5# (11,20)=5# (12,0)=5# (12,1)=5# (12,2)=5# (12,3)=5# (12,4)=5# (12,5)=5# (12,6)=5# (12,7)=5# (12,8)=5# (12,9)=5# (12,10)=5# (12,11)=5# (12,12)=5# (12,13)=5# (12,14)=5# (12,15)=5# (12,16)=5# (12,17)=5# (12,18)=5# (12,19)=5# (12,20)=5# (12,21)=5# (13,15)=5# (13,20)=5# (14,15)=5# (14,20)=5# (15,15)=5# (15,20)=5# (16,15)=5# (16,20)=5# (17,0)=5# (17,1)=5# (17,2)=5# (17,3)=5# (17,4)=5# (17,5)=5# (17,6)=5# (17,7)=5# (17,8)=5# (17,9)=5# (17,10)=5# (17,11)=5# (17,12)=5# (17,13)=5# (17,14)=5# (17,15)=5# (17,16)=5# (17,17)=5# (17,18)=5# (17,19)=5# (17,20)=5# (17,21)=5# (18,15)=5# (18,20)=5# (19,15)=5# (19,20)=5# (20,15)=5# (20,20)=5# (21,15)=5# (21,20)=5#
! size mismatch, 10x10 instead of 5x3
>> Trial 2
data: a background with size (22,22) and color grey and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (0,6)=1  (0,7)=1  (0,8)=1  (0,9)=1  (0,10)=1  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=1  (0,16)=1  (0,17)=1  (0,18)=1  (0,19)=1  (0,21)=1  (1,0)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=1  (1,14)=1  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=1  (1,21)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=1  (3,8)=1  (3,9)=1  (3,10)=1  (3,11)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (3,17)=1  (3,18)=1  (3,19)=1  (3,21)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,10)=1  (4,11)=1  (4,12)=1  (4,13)=1  (4,14)=1  (4,16)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,21)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,13)=1  (5,14)=1  (5,16)=1  (5,17)=1  (5,18)=1  (5,19)=1  (5,21)=1  (6,0)=1  (6,1)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,16)=1  (6,17)=1  (6,18)=1  (6,19)=1  (6,21)=1  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,5)=1  (8,6)=1  (8,7)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,21)=1  (9,0)=1  (9,1)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,21)=1  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,21)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,3)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (11,17)=1  (11,18)=1  (11,19)=1  (11,21)=1  (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,14)=1  (13,16)=1  (13,17)=1  (13,18)=1  (13,19)=1  (13,21)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (14,4)=1  (14,5)=1  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=1  (14,12)=1  (14,13)=1  (14,14)=1  (14,16)=1  (14,17)=1  (14,18)=1  (14,19)=1  (14,21)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,11)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1  (15,17)=1  (15,18)=1  (15,19)=1  (15,21)=1  (16,0)=1  (16,1)=1  (16,2)=1  (16,3)=1  (16,4)=1  (16,5)=1  (16,6)=1  (16,7)=1  (16,8)=1  (16,9)=1  (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (16,16)=1  (16,17)=1  (16,18)=1  (16,19)=1  (16,21)=1  (18,0)=1  (18,1)=1  (18,2)=1  (18,3)=1  (18,4)=1  (18,5)=1  (18,6)=1  (18,7)=1  (18,8)=1  (18,9)=1  (18,10)=1  (18,11)=1  (18,12)=1  (18,13)=1  (18,14)=1  (18,16)=1  (18,17)=1  (18,18)=1  (18,19)=1  (18,21)=1  (19,0)=1  (19,1)=1  (19,2)=1  (19,3)=1  (19,4)=1  (19,5)=1  (19,6)=1  (19,7)=1  (19,8)=1  (19,9)=1  (19,10)=1  (19,11)=1  (19,12)=1  (19,13)=1  (19,14)=1  (19,16)=1  (19,17)=1  (19,18)=1  (19,19)=1  (19,21)=1  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=1  (20,4)=1  (20,5)=1  (20,6)=1  (20,7)=1  (20,8)=1  (20,9)=1  (20,10)=1  (20,11)=1  (20,12)=1  (20,13)=1  (20,14)=1  (20,16)=1  (20,17)=1  (20,18)=1  (20,19)=1  (20,21)=1  (21,0)=1  (21,1)=1  (21,2)=1  (21,3)=1  (21,4)=1  (21,5)=1  (21,6)=1  (21,7)=1  (21,8)=1  (21,9)=1  (21,10)=1  (21,11)=1  (21,12)=1  (21,13)=1  (21,14)=1  (21,16)=1  (21,17)=1  (21,18)=1  (21,19)=1  (21,21)=1 
! size mismatch, 10x10 instead of 5x3

TEST 1190e5a7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 409.2 bits (409.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-379] Checking task 137eaa0f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12510.4 = 12523.1
DL output with Mo: L = 12.6 + 7170.8 = 7183.4
DL input+output M: L = 25.2 + 19681.3 = 19706.5

# learning a model for train pairs
2.000	
1.824	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.648	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.489	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.319	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
1.210	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.977	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.924	OUT SPE ^.size = '(3, 3)
0.875	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.812	OUT SPE ^.layer_01.shape = scaleTo(^.layer_011.shape, '(1, 1))
0.762	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.711	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.682	OUT SPE ^.layer_0.shape = ^.layer_010.shape
0.666	OUT SPE ^.layer_00.pos.j = '0
0.653	IN  SPE ^.layer_0111.shape.color = grey
0.639	IN  SPE ^.layer_01111.shape.color = grey
0.626	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i - ^.layer_01.shape.size.i
0.616	OUT SPE ^.color = black
0.606	OUT SPE ^.layer_01.pos.j = ^.layer_0111.pos.j / '3
0.595	OUT SPE ^.layer_01.pos.i = ^.layer_0111.pos.j / '3
0.585	OUT SPE ^.layer_011.pos.j = span(^.layer_011.pos.j, ^.layer_010.pos.j) / '3
0.578	IN  SPE ^.layer_010.shape.mask = Full
0.570	IN  SPE ^.layer_01.shape.mask = Full
0.562	OUT SPE ^.layer_0.pos.i = span(^.layer_011.pos.j, ^.layer_010.pos.j) / '3
0.556	IN  SPE ^.color = black
0.554	OUT SPE ^.layer_0.pos.j = max(^.layer_011.pos.j, ^.layer_010.pos.j) - ^.layer_01111.pos.i - ^.layer_0.pos.i
0.141	
0.141	IN  GEN ^.layer_01111.shape.color = ?
0.141	IN  GEN ^.layer_0111.shape.color = ?
0.141	IN  GEN ^.layer_01.shape.mask = ?
0.141	IN  GEN ^.layer_010.shape.mask = ?
0.141	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _00: ^.layer_0.shape at (?,'0)
  _0: ^.layer_010.shape at (span(^.layer_011.pos.j, ^.layer_010.pos.j) / '3,max(^.layer_011.pos.j, ^.layer_010.pos.j) - ^.layer_01111.pos.i - ^.layer_0.pos.i)
  _01: scaleTo(^.layer_011.shape, '(1, 1)) at (^.layer_0111.pos.j / '3,^.layer_0111.pos.j / '3)
  _011: ^.layer_01.shape at (^.layer_011.pos.i - ^.layer_01.shape.size.i,span(^.layer_011.pos.j, ^.layer_010.pos.j) / '3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a point with color grey at (?,?)

DL input  with Mi: L = 144.5 + 5222.5 = 5366.9
DL output with Mo: L = 427.6 + 474.3 = 901.9
DL input+output M: L = 572.1 + 5696.8 = 6268.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _00: ^.layer_0.shape at (?,'0)
  _0: ^.layer_010.shape at (span(^.layer_011.pos.j, ^.layer_010.pos.j) / '3,max(^.layer_011.pos.j, ^.layer_010.pos.j) - ^.layer_01111.pos.i - ^.layer_0.pos.i)
  _01: scaleTo(^.layer_011.shape, '(1, 1)) at (^.layer_0111.pos.j / '3,^.layer_0111.pos.j / '3)
  _011: ^.layer_01.shape at (^.layer_011.pos.i - ^.layer_01.shape.size.i,span(^.layer_011.pos.j, ^.layer_010.pos.j) / '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 51.7 = 187.4
DL output with Mo: L = 427.6 + 474.3 = 901.9
DL input+output M: L = 563.3 + 526.0 = 1089.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
  _011: a point with color grey at (2,7)
  _0111: a point with color grey at (2,3)
  _01111: a point with color grey at (8,5)
diff: 
delta:
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,2) and color pink and mask Full at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (3.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
  _011: a point with color grey at (2,3)
  _0111: a point with color grey at (8,5)
  _01111: a point with color grey at (2,7)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
  _011: a point with color grey at (2,7)
  _0111: a point with color grey at (2,3)
  _01111: a point with color grey at (8,5)
diff: 
delta:
correct output grid

TRAIN 137eaa0f.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
  _011: a point with color pink at (2,1)
  _0111: a point with color grey at (3,2)
  _01111: a point with color grey at (9,2)
diff: 
delta: (3,5)=5# (7,7)=5#
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _0: a rectangle with size (1,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _011: a rectangle with size (1,3) and color orange and mask Full at (1,0)
diff: 
delta: (1,1)=5#
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
  _011: a point with color pink at (2,1)
  _0111: a point with color grey at (3,2)
  _01111: a point with color grey at (7,7)
diff: 
delta: (3,5)=5# (9,2)=5#
! 7 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.. at (2,0)
  _010: a rectangle with size (1,2) and color brown and mask Full at (9,6)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (4,5)
  _01111: a point with color grey at (8,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (2,3) and color blue and mask .xx|x.. at (0,0)
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta:
   (3.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.. at (2,0)
  _010: a rectangle with size (1,2) and color brown and mask Full at (9,6)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (4,5)
  _01111: a point with color grey at (8,7)
diff: 
delta:
correct output grid

TRAIN 137eaa0f.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 137eaa0f.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 17.3 sec (17.3 sec/task)
bits-train-error = 474.3 bits (474.3 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-378] Checking task 150deff5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21598.6 = 21611.2
DL output with Mo: L = 12.6 + 21598.6 = 21611.2
DL input+output M: L = 25.2 + 43197.3 = 43222.5

# learning a model for train pairs
2.000	
1.132	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.749	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.552	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.420	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.363	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.336	OUT SPE ^.size = ^.size
0.322	OUT SPE ^.layer_0111.shape.size = '(3, 1)
0.307	OUT SPE ^.layer_01.pos = ^.layer_0.pos
0.300	IN  SPE ^.layer_0.shape.color = grey
0.292	OUT SPE ^.layer_0111.shape.color = red
0.285	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j
0.278	OUT SPE ^.layer_011.pos.j = bottom(^.layer_0) - 1
0.271	OUT SPE ^.layer_0.shape.size.j = ^.size.i / '3
0.265	OUT SPE ^.layer_011.shape.size.j = ^.size.i / '3
0.260	OUT SPE ^.layer_011.shape.mask = Full
0.256	OUT SPE ^.layer_0111.shape.mask = Full
0.252	IN  SPE ^.color = black
0.249	OUT SPE ^.color = black
0.130	
0.130	IN  GEN ^.layer_0.shape.color = ?
0.130	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.i / '3) and color ? and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _011: a rectangle with size (?,^.size.i / '3) and color ? and mask Full at (?,bottom(^.layer_0) - 1)
  _0111: a rectangle with size '(3, 1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2571.0 = 2613.3
DL output with Mo: L = 213.9 + 2550.3 = 2764.3
DL input+output M: L = 256.2 + 5121.3 = 5377.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.i / '3) and color ? and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _011: a rectangle with size (?,^.size.i / '3) and color ? and mask Full at (?,bottom(^.layer_0) - 1)
  _0111: a rectangle with size '(3, 1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 213.9 + 2550.3 = 2764.3
DL input+output M: L = 252.7 + 2550.3 = 2803.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xx....|xxxxx.|.xxx..|.xxxxx|.x..xx|...xxx at (1,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (5,6) and color cyan and mask xx....|xx....|..xx..|..xxxx|....xx at (1,2)
  _011: a rectangle with size (1,3) and color red and mask Full at (6,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (3,3)
diff: 
delta:
   (101.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xx....|xxxxx.|.xxx..|.xxxxx|.x..xx|...xxx at (1,2)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 150deff5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|xxxxxx|..x..x|...xxx|...xxx|...x.. at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask x.|x.|x.|.x|.x|.x at (1,3)
  _01: a rectangle with size (2,5) and color cyan and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (1,6)
diff: 
delta:
   (87.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|xxxxxx|..x..x|...xxx|...xxx|...x.. at (1,1)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 150deff5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|...xx|..x..|..xxx|..xxx at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _0111: a rectangle with size (3,1) and color red and mask Full at (3,3)
diff: 
delta:
   (65.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|...xx|..x..|..xxx|..xxx at (1,1)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 150deff5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask .xx.xxx|.xx..x.|xxxxxx.|...xxx.|..xxx..|....xx.|....xx. at (0,1)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TEST 150deff5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 2550.3 bits (2550.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-377] Checking task 178fcbfb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5247.1 = 5259.8
DL output with Mo: L = 12.6 + 39157.1 = 39169.7
DL input+output M: L = 25.2 + 44404.2 = 44429.4

# learning a model for train pairs
2.000	
1.761	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.521	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.298	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.182	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.065	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.944	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.834	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	IN  SPE ^.layer_01.shape.color = green
0.726	IN  SPE ^.layer_011.shape.color = red
0.694	IN  SPE ^.layer_0.shape.color = blue
0.679	OUT SPE ^.size = ^.size
0.665	IN  SPE ^.color = black
0.655	OUT SPE ^.layer_0.shape.size = projJ(^.size) + (1, 0)
0.646	OUT SPE ^.layer_01.shape.size = projJ(^.size) + (1, 0)
0.638	OUT SPE ^.layer_0111.pos = projJ(^.layer_011.pos)
0.629	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos)
0.621	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos)
0.614	OUT SPE ^.layer_0.shape = scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0))
0.607	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0))
0.603	OUT SPE ^.layer_0111.shape.color = red
0.599	OUT SPE ^.layer_01111.shape.color = red
0.595	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j - 1
0.591	OUT SPE ^.layer_011.pos.i = ^.layer_01.pos.i + 3
0.589	OUT SPE ^.layer_011.shape.mask = Full
0.586	OUT SPE ^.layer_0111.shape.size.j = 1
0.584	OUT SPE ^.layer_0111.shape.mask = Full
0.581	OUT SPE ^.layer_01111.shape.size.j = 1
0.578	OUT SPE ^.layer_01111.shape.mask = Full
0.577	OUT SPE ^.color = black
0.053	
0.052	IN  GEN ^.layer_01.shape.color = ?
0.052	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0)) at projI(^.layer_0.pos)
  _01: scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0)) at projI(^.layer_01.pos)
  _011: a rectangle with size (?,?) and color ? and mask Full at (^.layer_01.pos.i + 3,^.layer_0.pos.j - 1)
  _0111: a rectangle with size (?,1) and color red and mask Full at projJ(^.layer_011.pos)
  _01111: a rectangle with size (?,1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color red at (?,?)

DL input  with Mi: L = 71.5 + 2756.2 = 2827.7
DL output with Mo: L = 243.0 + 1283.8 = 1526.7
DL input+output M: L = 314.5 + 4040.0 = 4354.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0)) at projI(^.layer_0.pos)
  _01: scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0)) at projI(^.layer_01.pos)
  _011: a rectangle with size (?,?) and color ? and mask Full at (^.layer_01.pos.i + 3,^.layer_0.pos.j - 1)
  _0111: a rectangle with size (?,1) and color red and mask Full at projJ(^.layer_011.pos)
  _01111: a rectangle with size (?,1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color red at (?,?)

DL input  with Mi: L = 68.0 + 0.0 = 68.0
DL output with Mo: L = 243.0 + 1283.8 = 1526.7
DL input+output M: L = 311.0 + 1283.8 = 1594.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,3)
  _01: a point with color green at (4,7)
  _011: a point with color red at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (6,0)
  _01: a rectangle with size (1,9) and color green and mask Full at (4,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (7,2)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,2)
  _01111: a rectangle with size (1,1) and color red and mask Full at (5,2)
diff: 
delta:
   (35.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,3)
  _01: a point with color green at (4,7)
  _011: a point with color red at (2,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color green at (4,7)
  _01: a point with color blue at (6,3)
  _011: a point with color red at (2,2)
diff:   ^.layer_0.shape.color
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,3)
  _01: a point with color red at (2,2)
  _011: a point with color green at (4,7)
diff:   ^.layer_011.shape.color
delta:
! 28 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,8) and color black and layers
  _0: a point with color blue at (6,1)
  _01: a point with color green at (1,1)
  _011: a point with color red at (7,5)
diff: 
delta: (4,3)=3 
   (0.0 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (6,0)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,8) and color green and mask Full at (4,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,5)
  _01111: a rectangle with size (8,1) and color red and mask Full at (2,5)
diff: 
delta:
   (41.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a point with color blue at (6,1)
  _01: a point with color green at (1,1)
  _011: a point with color red at (7,5)
diff: 
delta: (4,3)=3 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a point with color blue at (6,1)
  _01: a point with color green at (4,3)
  _011: a point with color red at (7,5)
diff: 
delta: (1,1)=3 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,3)
  _011: a point with color red at (7,5)
diff:   ^.layer_0.shape.color
delta: (6,1)=1 
! 19 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (3,8)
  _011: a point with color red at (8,3)
diff: 
delta: (6,2)=3  (9,9)=2 
   (0.0 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,11) and color green and mask Full at (6,0)
  _0111: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _01111: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (3,8)
  _011: a point with color red at (8,3)
diff: 
delta: (6,2)=3  (9,9)=2 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (3,8)
  _011: a point with color red at (9,9)
diff: 
delta: (6,2)=3  (8,3)=2 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (6,2)
  _011: a point with color red at (8,3)
diff: 
delta: (3,8)=3  (9,9)=2 
! 27 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color blue at (7,1)
  _01: a point with color green at (0,3)
  _011: a point with color red at (1,9)
diff: 
delta: (3,5)=3  (5,4)=2  (9,8)=1 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  _0: a point with color blue at (7,1)
  _01: a point with color green at (0,3)
  _011: a point with color red at (5,4)
diff: 
delta: (1,9)=2  (3,5)=3  (9,8)=1 
! 40 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,11) and color black and layers
  _0: a point with color blue at (7,1)
  _01: a point with color red at (1,9)
  _011: a point with color red at (5,4)
diff: 
delta: (0,3)=3  (3,5)=3  (9,8)=1 
! 60 wrong pixels (generated / expected)

TEST 178fcbfb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.8 sec (12.8 sec/task)
bits-train-error = 1283.8 bits (1283.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-376] Checking task 1a07d186.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 38107.6 = 38120.2
DL output with Mo: L = 12.6 + 36562.2 = 36574.8
DL input+output M: L = 25.2 + 74669.9 = 74695.1

# learning a model for train pairs
2.000	
1.475	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.017	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.682	OUT ADD ^.layer_01 = ^.layer_0
0.373	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.354	OUT SPE ^.size = ^.size
0.337	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.319	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.089	
0.088	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 8804.4 = 8868.6
DL output with Mo: L = 75.0 + 3091.0 = 3166.0
DL input+output M: L = 139.2 + 11895.4 = 12034.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 20.0 = 58.8
DL output with Mo: L = 75.0 + 3091.0 = 3166.0
DL input+output M: L = 113.8 + 3111.0 = 3224.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,1) and color green and mask Full at (0,3)
diff: 
delta: (0,12)=4  (1,12)=4  (2,12)=4  (3,1)=4  (3,6)=3  (3,12)=4  (4,12)=4  (5,12)=4  (6,12)=4  (7,9)=4  (7,12)=4  (8,12)=4  (9,12)=4  (10,7)=2  (10,12)=4  (11,12)=4  (11,16)=3  (12,12)=4  (13,12)=4  (14,12)=4  (15,12)=4  (16,12)=4  (17,12)=4 
   (0.0 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,2) and color yellow and mask .x|.x|.x|xx|.x|.x|.x|xx|.x|.x|.x|.x|.x|.x|.x|.x|.x|.x at (0,11)
  _01: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _011: a point with color green at (3,4)
  _0111: a point with color green at (11,4)
diff: 
delta:
   (118.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,1) and color green and mask Full at (0,3)
diff: 
delta: (0,12)=4  (1,12)=4  (2,12)=4  (3,1)=4  (3,6)=3  (3,12)=4  (4,12)=4  (5,12)=4  (6,12)=4  (7,9)=4  (7,12)=4  (8,12)=4  (9,12)=4  (10,7)=2  (10,12)=4  (11,12)=4  (11,16)=3  (12,12)=4  (13,12)=4  (14,12)=4  (15,12)=4  (16,12)=4  (17,12)=4 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
diff: 
delta: (0,3)=3  (1,3)=3  (2,3)=3  (3,1)=4  (3,3)=3  (3,6)=3  (4,3)=3  (5,3)=3  (6,3)=3  (7,3)=3  (7,9)=4  (8,3)=3  (9,3)=3  (10,3)=3  (10,7)=2  (11,3)=3  (11,16)=3  (12,3)=3  (13,3)=3  (14,3)=3  (15,3)=3  (16,3)=3  (17,3)=3 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,1)
diff: 
delta: (0,3)=3  (0,12)=4  (1,3)=3  (1,12)=4  (2,3)=3  (2,12)=4  (3,3)=3  (3,6)=3  (3,12)=4  (4,3)=3  (4,12)=4  (5,3)=3  (5,12)=4  (6,3)=3  (6,12)=4  (7,3)=3  (7,9)=4  (7,12)=4  (8,3)=3  (8,12)=4  (9,3)=3  (9,12)=4  (10,3)=3  (10,7)=2  (10,12)=4  (11,3)=3  (11,12)=4  (11,16)=3  (12,3)=3  (12,12)=4  (13,3)=3  (13,12)=4  (14,3)=3  (14,12)=4  (15,3)=3  (15,12)=4  (16,3)=3  (16,12)=4  (17,3)=3  (17,12)=4 
! 45 wrong pixels (generated / expected)

TRAIN 1a07d186.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (1,14) and color blue and mask Full at (10,0)
diff: 
delta: (0,3)=2  (1,9)=4  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (5,10)=1  (7,6)=2  (13,2)=1  (13,10)=2 
   (2.0 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,14) and color red and mask ...x..........|xxxxxxxxxxxxxx|......x...x... at (2,0)
  _01: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _011: a point with color blue at (9,10)
  _0111: a point with color blue at (11,2)
diff: 
delta:
   (121.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (1,14) and color red and mask Full at (3,0)
diff: 
delta: (0,3)=2  (1,9)=4  (5,10)=1  (7,6)=2  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,2)=1  (13,10)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (1,14) and color blue and mask Full at (10,0)
diff: 
delta: (0,3)=2  (1,9)=4  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (5,10)=1  (7,6)=2  (13,2)=1  (13,10)=2 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,3)
diff: 
delta: (1,9)=4  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (5,10)=1  (7,6)=2  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,2)=1  (13,10)=2 
! 38 wrong pixels (generated / expected)

TRAIN 1a07d186.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
diff: 
delta: (1,3)=1  (1,7)=8  (8,11)=8  (12,3)=8  (13,12)=1 
   (0.0 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (4,7)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _011: a point with color cyan at (6,3)
  _0111: a point with color cyan at (6,11)
diff: 
delta:
   (69.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
diff: 
delta: (1,3)=1  (1,7)=8  (8,11)=8  (12,3)=8  (13,12)=1 
! 7 wrong pixels (generated / expected)

TRAIN 1a07d186.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,26) and color black and layers
  _0: a rectangle with size (19,1) and color red and mask Full at (0,4)
diff: 
delta: (0,11)=3  (0,20)=4  (1,11)=3  (1,20)=4  (2,11)=3  (2,16)=2  (2,20)=4  (3,11)=3  (3,20)=4  (4,11)=3  (4,20)=4  (4,24)=8  (5,9)=8  (5,11)=3  (5,20)=4  (6,11)=3  (6,20)=4  (7,6)=4  (7,11)=3  (7,20)=4  (8,11)=3  (8,20)=4  (9,11)=3  (9,13)=3  (9,20)=4  (10,1)=2  (10,11)=3  (10,20)=4  (11,11)=3  (11,17)=8  (11,20)=4  (12,11)=3  (12,20)=4  (13,11)=3  (13,20)=4  (14,11)=3  (14,20)=4  (15,0)=8  (15,8)=3  (15,11)=3  (15,20)=4  (15,24)=4  (16,11)=3  (16,20)=4  (17,11)=3  (17,20)=4  (17,22)=3  (18,11)=3  (18,20)=4 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,26) and color black and layers
  _0: a rectangle with size (19,1) and color green and mask Full at (0,11)
diff: 
delta: (0,4)=2  (0,20)=4  (1,4)=2  (1,20)=4  (2,4)=2  (2,16)=2  (2,20)=4  (3,4)=2  (3,20)=4  (4,4)=2  (4,20)=4  (4,24)=8  (5,4)=2  (5,9)=8  (5,20)=4  (6,4)=2  (6,20)=4  (7,4)=2  (7,6)=4  (7,20)=4  (8,4)=2  (8,20)=4  (9,4)=2  (9,13)=3  (9,20)=4  (10,1)=2  (10,4)=2  (10,20)=4  (11,4)=2  (11,17)=8  (11,20)=4  (12,4)=2  (12,20)=4  (13,4)=2  (13,20)=4  (14,4)=2  (14,20)=4  (15,0)=8  (15,4)=2  (15,8)=3  (15,20)=4  (15,24)=4  (16,4)=2  (16,20)=4  (17,4)=2  (17,20)=4  (17,22)=3  (18,4)=2  (18,20)=4 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,26) and color black and layers
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,20)
diff: 
delta: (0,4)=2  (0,11)=3  (1,4)=2  (1,11)=3  (2,4)=2  (2,11)=3  (2,16)=2  (3,4)=2  (3,11)=3  (4,4)=2  (4,11)=3  (4,24)=8  (5,4)=2  (5,9)=8  (5,11)=3  (6,4)=2  (6,11)=3  (7,4)=2  (7,6)=4  (7,11)=3  (8,4)=2  (8,11)=3  (9,4)=2  (9,11)=3  (9,13)=3  (10,1)=2  (10,4)=2  (10,11)=3  (11,4)=2  (11,11)=3  (11,17)=8  (12,4)=2  (12,11)=3  (13,4)=2  (13,11)=3  (14,4)=2  (14,11)=3  (15,0)=8  (15,4)=2  (15,8)=3  (15,11)=3  (15,24)=4  (16,4)=2  (16,11)=3  (17,4)=2  (17,11)=3  (17,22)=3  (18,4)=2  (18,11)=3 
! 49 wrong pixels (generated / expected)

TEST 1a07d186.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.7 sec (55.7 sec/task)
bits-train-error = 3091.0 bits (3091.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-375] Checking task 1b2d62fb.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 32616.3 = 32628.9
DL output with Mo: L = 12.6 + 7253.8 = 7266.4
DL input+output M: L = 25.2 + 39870.1 = 39895.3

# learning a model for train pairs
2.000	
1.448	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.107	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.873	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.723	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	OUT SPE ^.size = projI(^.size) + (0, 3)
0.587	OUT SPE ^.layer_0.shape.color = cyan
0.551	OUT SPE ^.layer_0.shape.size.j = ^.layer_011.shape.size.j
0.530	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j - ^.layer_011.shape.size.j
0.513	OUT SPE ^.color = black
0.503	IN  SPE ^.layer_01.shape.color = blue
0.498	IN  SPE ^.layer_01.shape.mask = Full
0.240	
0.240	IN  GEN ^.layer_01.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + (0, 3) and color black and layers
  _0: a rectangle with size (?,^.layer_011.shape.size.j) and color cyan and mask ? at (?,^.layer_01.pos.j - ^.layer_011.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 93.6 + 8415.8 = 8509.4
DL output with Mo: L = 117.1 + 1606.8 = 1723.9
DL input+output M: L = 210.7 + 10022.6 = 10233.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + (0, 3) and color black and layers
  _0: a rectangle with size (?,^.layer_011.shape.size.j) and color cyan and mask ? at (?,^.layer_01.pos.j - ^.layer_011.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 0.0 = 90.3
DL output with Mo: L = 117.1 + 1606.8 = 1723.9
DL input+output M: L = 207.4 + 1606.8 = 1814.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _01: a rectangle with size (3,1) and color black and mask Full at (1,6)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,5)=0 
! 2 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color black and mask Full at (0,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color black and mask Full at (0,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _01: a rectangle with size (1,2) and color black and mask Full at (0,5)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color black and mask Full at (0,5)
  _011: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask .x.|..x|.xx|x..|x.. at (0,0)
diff: 
delta:
   (33.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color brown and mask Full at (0,0)
diff: 
delta: (3,1)=9# (3,2)=9# (4,2)=9#
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
diff: 
delta: (0,6)=9# (4,4)=9#
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (3,0)
diff: 
delta: (1,1)=8  (1,2)=8 
   (93.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
diff: 
delta: (0,6)=9# (4,4)=9#
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (1,3) and color brown and mask Full at (2,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,4)=9# (0,6)=9# (1,4)=9# (4,4)=9#
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color black and mask Full at (3,1)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color black and mask Full at (3,1)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _01: a rectangle with size (1,2) and color black and mask Full at (3,1)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
! 4 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x.x|xxx|x.x|.x.|x.. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color black and mask Full at (0,2)
diff: 
delta: (1,0)=0  (2,2)=0  (4,0)=0 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x.x|xxx|x.x|.x.|x.. at (0,4)
  _01: a rectangle with size (1,1) and color black and mask Full at (0,2)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (1,0)=0  (2,2)=0  (4,0)=0 
! 6 wrong pixels (generated / expected)

TEST 1b2d62fb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.8 sec (23.8 sec/task)
bits-train-error = 1606.8 bits (1606.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-374] Checking task 1b60fb0c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 34433.7 = 34446.3
DL output with Mo: L = 12.6 + 44867.9 = 44880.6
DL input+output M: L = 25.2 + 79301.6 = 79326.8

# learning a model for train pairs
2.000	
1.108	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	OUT ADD ^.layer_0 = ^.layer_0
0.160	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.146	OUT SPE ^.size = ^.size
0.141	IN  SPE ^.layer_0.shape.color = blue
0.137	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j - 3
0.133	OUT SPE ^.layer_01.shape.color = red
0.130	OUT SPE ^.layer_01.pos.j = 1
0.128	IN  SPE ^.color = black
0.126	OUT SPE ^.color = black
0.026	
0.026	IN  GEN ^.layer_0.shape.color = ?
0.026	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 3) and color red and mask ? at (?,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 3429.7 = 3472.0
DL output with Mo: L = 70.6 + 1061.8 = 1132.4
DL input+output M: L = 112.9 + 4491.5 = 4604.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 3) and color red and mask ? at (?,1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 70.6 + 1061.8 = 1132.4
DL input+output M: L = 109.4 + 1061.8 = 1171.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
  _01: a rectangle with size (3,3) and color red and mask xx.|xxx|x.. at (4,1)
diff: 
delta:
   (26.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
  _01: a rectangle with size (5,4) and color red and mask xx..|xx..|xxxx|xx..|xx.. at (3,1)
diff: 
delta:
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
  _01: a rectangle with size (5,4) and color red and mask x...|x.x.|xxxx|x.x.|x... at (3,1)
diff: 
delta:
   (40.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,8) and color blue and mask ..x.....|xxxxx...|..xx..x.|..x...x.|..xxxxxx|..xx.xx.|...x..x.|..xx....|.xxxxx..|...x.... at (0,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 1b60fb0c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 1061.8 bits (1061.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-373] Checking task 1bfc4729.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1998.6 = 2011.2
DL output with Mo: L = 12.6 + 39349.4 = 39362.0
DL input+output M: L = 25.2 + 41348.0 = 41373.2

# learning a model for train pairs
2.000	
1.555	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.107	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.902	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.689	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.661	OUT SPE ^.layer_0.shape.mask = xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x
0.633	OUT SPE ^.layer_01.shape.mask = x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx
0.609	IN  SPE ^.color = black
0.599	OUT SPE ^.size = ^.size
0.590	OUT SPE ^.layer_0.shape.size = tiling(^.size / '2, 1, 2)
0.582	OUT SPE ^.layer_01.shape.size = tiling(^.size / '2, 1, 2)
0.576	OUT SPE ^.layer_0.pos = '(0, 0)
0.571	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos) - (2, 0)
0.568	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.565	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.564	OUT SPE ^.color = black
0.029	
0.029	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size tiling(^.size / '2, 1, 2) and color ^.layer_0.shape.color and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at '(0, 0)
  _01: a rectangle with size tiling(^.size / '2, 1, 2) and color ^.layer_01.shape.color and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at projI(^.layer_01.pos) - (2, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 1075.9 = 1121.7
DL output with Mo: L = 251.1 + 0.0 = 251.1
DL input+output M: L = 296.9 + 1075.9 = 1372.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size tiling(^.size / '2, 1, 2) and color ^.layer_0.shape.color and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at '(0, 0)
  _01: a rectangle with size tiling(^.size / '2, 1, 2) and color ^.layer_01.shape.color and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at projI(^.layer_01.pos) - (2, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 251.1 + 0.0 = 251.1
DL input+output M: L = 296.8 + 0.0 = 296.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (2,2)
  _01: a point with color orange at (7,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,10) and color pink and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at (0,0)
  _01: a rectangle with size (5,10) and color orange and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (2,2)
  _01: a point with color orange at (7,7)
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,6)
  _01: a point with color yellow at (7,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,10) and color blue and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at (0,0)
  _01: a rectangle with size (5,10) and color yellow and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,6)
  _01: a point with color yellow at (7,5)
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (2,4)
  _01: a point with color cyan at (7,6)
diff: 
delta:
correct output grid

TEST 1bfc4729.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.4 sec (2.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-372] Checking task 1c786137.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 271733.4 = 271746.0
DL output with Mo: L = 12.6 + 35764.1 = 35776.8
DL input+output M: L = 25.2 + 307497.5 = 307522.8

# learning a model for train pairs
2.000	
1.795	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.668	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.874	OUT SPE ^ = crop(^.grid, ^.layer_0)
0.809	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.751	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.727	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.703	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.683	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.667	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.666	IN  SPE ^.layer_0.shape.mask = Border
0.666	IN  SPE ^.color = black
0.001	
0.001	IN  DEL ^.layer_01111111
0.001	IN  DEL ^.layer_0111111
0.001	IN  DEL ^.layer_011111
0.001	IN  DEL ^.layer_01111
0.001	IN  DEL ^.layer_0111
0.001	IN  DEL ^.layer_011
0.001	IN  DEL ^.layer_01
0.001	IN  GEN ^.layer_0.shape.mask = ?
0.001	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
crop(^.grid, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 216.2 + 180572.3 = 180788.5
DL output with Mo: L = 18.6 + 0.0 = 18.6
DL input+output M: L = 234.8 + 180572.3 = 180807.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
crop(^.grid, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 18.6 + 0.0 = 18.6
DL input+output M: L = 57.4 + 0.0 = 57.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (23,21) and color black and layers
  _0: a rectangle with size (8,10) and color red and mask Border at (3,4)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,9)=3  (5,11)=3  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,8)=3  (6,9)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,10)=3  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,10)=3  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,9)=3  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,0)=3  (11,1)=3  (11,2)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,3)=3  (12,4)=3  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,1)=1  (13,2)=5# (13,3)=1  (13,4)=8  (13,5)=3  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,0)=1  (14,1)=3  (14,2)=1  (14,4)=1  (14,5)=3  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,1)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,0)=3  (16,1)=1  (16,2)=3  (16,3)=3  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,1)=3  (17,2)=8  (17,3)=3  (17,4)=3  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,0)=3  (18,1)=8  (18,2)=3  (18,4)=1  (18,5)=3  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,0)=1  (19,1)=5# (19,2)=1  (19,3)=3  (19,4)=3  (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,0)=1  (20,1)=3  (20,3)=1  (20,4)=3  (20,5)=3  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,1)=1  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,2)=1  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
   (0.0 bits)
data: 
0 0 8 0 3 3 3 3 
1 0 0 0 3 0 3 1 
3 3 0 3 3 0 8 1 
3 3 5#1 0 3 0 0 
5#1 3 0 1 3 1 1 
5#0 8 0 3 0 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,21) and color black and layers
  _0: a rectangle with size (8,10) and color red and mask Border at (3,4)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,9)=3  (5,11)=3  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,8)=3  (6,9)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,10)=3  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,10)=3  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,9)=3  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,0)=3  (11,1)=3  (11,2)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,3)=3  (12,4)=3  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,1)=1  (13,2)=5# (13,3)=1  (13,4)=8  (13,5)=3  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,0)=1  (14,1)=3  (14,2)=1  (14,4)=1  (14,5)=3  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,1)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,0)=3  (16,1)=1  (16,2)=3  (16,3)=3  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,1)=3  (17,2)=8  (17,3)=3  (17,4)=3  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,0)=3  (18,1)=8  (18,2)=3  (18,4)=1  (18,5)=3  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,0)=1  (19,1)=5# (19,2)=1  (19,3)=3  (19,4)=3  (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,0)=1  (20,1)=3  (20,3)=1  (20,4)=3  (20,5)=3  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,1)=1  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,2)=1  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
correct output grid

TRAIN 1c786137.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (7,5) and color yellow and mask Border at (6,2)
diff: 
delta: (0,1)=6  (0,2)=9# (0,3)=6  (0,4)=6  (0,6)=6  (0,7)=3  (0,8)=6  (0,9)=9# (0,10)=6  (0,11)=6  (0,12)=6  (0,13)=9# (0,14)=9# (1,0)=9# (1,1)=9# (1,3)=6  (1,4)=6  (1,7)=9# (1,8)=3  (1,9)=6  (1,10)=6  (1,11)=6  (1,12)=9# (1,13)=9# (1,15)=6  (2,0)=6  (2,2)=9# (2,5)=6  (2,7)=6  (2,8)=6  (2,10)=3  (2,13)=6  (3,0)=9# (3,1)=6  (3,2)=6  (3,3)=9# (3,4)=9# (3,5)=9# (3,6)=6  (3,7)=3  (3,8)=6  (3,9)=9# (3,10)=9# (3,11)=6  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=6  (4,0)=6  (4,1)=6  (4,4)=6  (4,5)=6  (4,6)=9# (4,9)=3  (4,15)=9# (5,0)=9# (5,1)=9# (5,2)=6  (5,5)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,1)=6  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
   (0.0 bits)
data: 
3 3 0 
9#3 9#
6 6 0 
9#0 0 
6 3 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (7,5) and color yellow and mask Border at (6,2)
diff: 
delta: (0,1)=6  (0,2)=9# (0,3)=6  (0,4)=6  (0,6)=6  (0,7)=3  (0,8)=6  (0,9)=9# (0,10)=6  (0,11)=6  (0,12)=6  (0,13)=9# (0,14)=9# (1,0)=9# (1,1)=9# (1,3)=6  (1,4)=6  (1,7)=9# (1,8)=3  (1,9)=6  (1,10)=6  (1,11)=6  (1,12)=9# (1,13)=9# (1,15)=6  (2,0)=6  (2,2)=9# (2,5)=6  (2,7)=6  (2,8)=6  (2,10)=3  (2,13)=6  (3,0)=9# (3,1)=6  (3,2)=6  (3,3)=9# (3,4)=9# (3,5)=9# (3,6)=6  (3,7)=3  (3,8)=6  (3,9)=9# (3,10)=9# (3,11)=6  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=6  (4,0)=6  (4,1)=6  (4,4)=6  (4,5)=6  (4,6)=9# (4,9)=3  (4,15)=9# (5,0)=9# (5,1)=9# (5,2)=6  (5,5)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,1)=6  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
correct output grid

TRAIN 1c786137.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (10,12) and color cyan and mask Border at (2,3)
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,7)=2  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,12)=5# (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,5)=5# (5,7)=2  (5,9)=3  (5,11)=5# (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,6)=5# (6,7)=5# (6,9)=5# (6,10)=3  (6,12)=5# (7,4)=5# (7,5)=2  (7,6)=5# (7,7)=2  (7,8)=5# (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,5)=5# (8,6)=2  (8,7)=5# (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,0)=2  (13,1)=5# (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=2  (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
   (0.0 bits)
data: 
0 0 5#3 3 3 2 2 5#0 
3 0 0 5#5#5#5#2 0 5#
3 5#0 2 0 3 0 5#3 0 
3 2 5#5#0 5#3 0 5#0 
5#2 5#2 5#0 2 2 2 2 
0 5#2 5#0 0 0 0 3 3 
2 3 2 3 0 0 5#0 5#0 
3 2 5#0 5#0 0 0 5#5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (10,12) and color cyan and mask Border at (2,3)
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,7)=2  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,12)=5# (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,5)=5# (5,7)=2  (5,9)=3  (5,11)=5# (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,6)=5# (6,7)=5# (6,9)=5# (6,10)=3  (6,12)=5# (7,4)=5# (7,5)=2  (7,6)=5# (7,7)=2  (7,8)=5# (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,5)=5# (8,6)=2  (8,7)=5# (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,0)=2  (13,1)=5# (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=2  (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
correct output grid

TRAIN 1c786137.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color cyan and layers
  _0: a rectangle with size (10,11) and color green and mask Border at (4,3)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,4)=1  (0,5)=1  (0,7)=0  (0,8)=0  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=0  (1,0)=0  (1,1)=1  (1,2)=0  (1,5)=1  (1,6)=0  (1,7)=1  (1,8)=1  (1,9)=2  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=0  (1,15)=2  (2,0)=0  (2,1)=0  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,11)=0  (2,13)=0  (2,14)=0  (2,15)=1  (3,0)=1  (3,1)=0  (3,2)=1  (3,3)=0  (3,5)=0  (3,6)=1  (3,8)=1  (3,9)=0  (3,10)=1  (3,11)=1  (3,15)=0  (4,1)=0  (4,14)=0  (4,15)=2  (5,0)=1  (5,1)=0  (5,4)=2  (5,5)=0  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=0  (5,11)=1  (5,12)=0  (5,14)=0  (5,15)=0  (6,0)=0  (6,5)=1  (6,6)=0  (6,8)=2  (6,10)=1  (6,11)=2  (6,14)=1  (7,0)=1  (7,1)=0  (7,5)=2  (7,6)=0  (7,7)=2  (7,8)=0  (7,9)=1  (7,10)=1  (7,12)=1  (8,0)=0  (8,2)=0  (8,4)=0  (8,5)=1  (8,8)=1  (8,9)=1  (8,11)=1  (8,14)=2  (8,15)=1  (9,0)=1  (9,1)=0  (9,2)=0  (9,4)=0  (9,5)=1  (9,8)=0  (9,10)=0  (9,11)=2  (9,12)=0  (9,15)=1  (10,0)=0  (10,4)=0  (10,7)=2  (11,0)=1  (11,1)=1  (11,2)=1  (11,5)=0  (11,6)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=0  (11,15)=0  (12,0)=1  (12,2)=0  (12,4)=0  (12,5)=2  (12,8)=1  (12,9)=2  (12,10)=0  (12,11)=0  (12,12)=2  (12,15)=1  (13,1)=1  (13,2)=1  (13,14)=0  (13,15)=2  (14,1)=1  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,8)=0  (14,9)=1  (14,10)=2  (14,14)=1  (15,1)=1  (15,2)=0  (15,3)=0  (15,4)=1  (15,5)=1  (15,7)=0  (15,8)=1  (15,9)=2  (15,11)=1  (15,12)=0  (15,13)=1  (15,14)=2  (15,15)=0  (16,1)=0  (16,3)=2  (16,5)=0  (16,7)=2  (16,8)=0  (16,9)=1  (16,11)=1  (16,13)=1 
correct output grid

TEST 1c786137.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.1 sec (5.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-371] Checking task 1caeab9d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14053.4 = 14066.0
DL output with Mo: L = 12.6 + 14053.4 = 14066.0
DL input+output M: L = 25.2 + 28106.8 = 28132.1

# learning a model for train pairs
2.000	
1.751	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.441	OUT ADD ^.layer_0 = ^.layer_0
1.186	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.894	OUT ADD ^.layer_00 = ^.layer_00.shape at (?,?)
0.637	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.298	OUT SPE ^.size = ^.size
0.276	OUT SPE ^.layer_01.pos = corner(^.layer_0.pos, ^.layer_01.pos)
0.255	OUT SPE ^.layer_00.pos = corner(^.layer_0.pos, ^.layer_00.pos)
0.241	IN  SPE ^.layer_0.shape.color = blue
0.229	IN  SPE ^.layer_00.shape.color = red
0.218	IN  SPE ^.layer_01.shape.color = yellow
0.211	IN  SPE ^.layer_00.shape.mask = Full
0.204	IN  SPE ^.layer_0.shape.mask = Full
0.197	IN  SPE ^.layer_01.shape.mask = Full
0.191	IN  SPE ^.color = black
0.186	OUT SPE ^.color = black
0.012	
0.012	IN  GEN ^.layer_01.shape.color = ?
0.012	IN  GEN ^.layer_00.shape.color = ?
0.012	IN  GEN ^.layer_01.shape.mask = ?
0.012	IN  GEN ^.layer_0.shape.mask = ?
0.012	IN  GEN ^.layer_00.shape.mask = ?
0.012	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00.shape at corner(^.layer_0.pos, ^.layer_00.pos)
  _0: ^.layer_0
  _01: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 102.4 + 2446.9 = 2549.3
DL output with Mo: L = 69.4 + 0.0 = 69.4
DL input+output M: L = 171.8 + 2446.9 = 2618.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00.shape at corner(^.layer_0.pos, ^.layer_00.pos)
  _0: ^.layer_0
  _01: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 0.0 = 92.6
DL output with Mo: L = 69.4 + 0.0 = 69.4
DL input+output M: L = 162.0 + 0.0 = 162.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,3) and color yellow and mask Full at (0,7)
  _0: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _01: a rectangle with size (2,3) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,3) and color yellow and mask Full at (5,7)
  _0: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _01: a rectangle with size (2,3) and color red and mask Full at (5,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,3) and color yellow and mask Full at (0,7)
  _0: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _01: a rectangle with size (2,3) and color red and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (3,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (2,3)
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (3,6)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask .xx|.xx|x.. at (0,7)
  _0: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (2,0)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|.xx|x.. at (5,3)
diff: 
delta:
correct output grid

TEST 1caeab9d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-370] Checking task 1cf80156.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10282.8 = 10295.4
DL output with Mo: L = 12.6 + 8125.2 = 8137.8
DL input+output M: L = 25.2 + 18408.0 = 18433.2

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = strip(^.grid)
0.229	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.221	IN  SPE ^.color = black
0.005	
0.003	IN  DEL ^.layer_0
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
strip(^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2225.7 = 2264.7
DL output with Mo: L = 11.9 + 0.0 = 11.9
DL input+output M: L = 50.8 + 2225.7 = 2276.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
strip(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 11.9 + 0.0 = 11.9
DL input+output M: L = 24.5 + 0.0 = 24.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,12) and color black and layers
diff: 
delta: (2,4)=2  (2,5)=2  (2,6)=2  (3,5)=2  (4,3)=2  (4,4)=2  (4,5)=2  (5,3)=2  (5,5)=2 
   (0.0 bits)
data: 
0 2 2 2 
0 0 2 0 
2 2 2 0 
2 0 2 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
diff: 
delta: (2,4)=2  (2,5)=2  (2,6)=2  (3,5)=2  (4,3)=2  (4,4)=2  (4,5)=2  (5,3)=2  (5,5)=2 
correct output grid

TRAIN 1cf80156.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (11,12) and color black and layers
diff: 
delta: (1,2)=1  (2,2)=1  (2,3)=1  (3,3)=1  (4,2)=1  (4,3)=1  (4,4)=1  (5,4)=1 
   (0.0 bits)
data: 
1 0 0 
1 1 0 
0 1 0 
1 1 1 
0 0 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
diff: 
delta: (1,2)=1  (2,2)=1  (2,3)=1  (3,3)=1  (4,2)=1  (4,3)=1  (4,4)=1  (5,4)=1 
correct output grid

TRAIN 1cf80156.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
diff: 
delta: (3,4)=8  (3,6)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (5,6)=8  (5,7)=8 
   (0.0 bits)
data: 
0 8 0 8 0 
8 8 8 8 0 
0 0 0 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
diff: 
delta: (3,4)=8  (3,6)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (5,6)=8  (5,7)=8 
correct output grid

TRAIN 1cf80156.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
diff: 
delta: (4,4)=6  (4,5)=6  (4,6)=6  (4,7)=6  (5,4)=6  (6,2)=6  (6,4)=6  (7,2)=6  (7,3)=6  (7,4)=6  (7,5)=6 
correct output grid

TEST 1cf80156.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-369] Checking task 1e0a9b12.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7771.3 = 7783.9
DL output with Mo: L = 12.6 + 7771.3 = 7783.9
DL input+output M: L = 25.2 + 15542.7 = 15567.9

# learning a model for train pairs
2.000	
1.743	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.573	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.447	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.361	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.277	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.195	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.116	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.036	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.953	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.891	OUT SPE ^.size = ^.size
0.830	OUT SPE ^.layer_01.shape = coloring(^.layer_01.shape, ^.layer_0111.shape.color)
0.797	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.780	OUT SPE ^.layer_0.pos.i = 3
0.767	OUT SPE ^.layer_011.pos.i = ^.layer_0111.pos.i
0.754	IN  SPE ^.layer_0.shape.mask = Full
0.741	IN  SPE ^.layer_01.shape.mask = Full
0.729	OUT SPE ^.layer_0.shape.mask = Full
0.713	OUT SPE ^.layer_0111.pos.j = bottom(^.layer_01)
0.697	OUT SPE ^.layer_01.pos.j = ^.layer_0111.pos.j
0.681	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j * '3
0.669	OUT SPE ^.layer_011.shape.size.j = 1
0.656	OUT SPE ^.layer_011.shape.mask = Full
0.642	OUT SPE ^.layer_011.pos.j = average(^.layer_01.pos.i, ^.layer_011.pos.i)
0.629	OUT SPE ^.layer_01.pos.i = center(^.layer_0) + ^.layer_0.shape.size.i
0.617	OUT SPE ^.layer_0111.pos.i = average(^.layer_0111.pos.j, ^.layer_01111.pos.j) + 2
0.151	
0.151	IN  GEN ^.layer_01.shape.mask = ?
0.151	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at (3,^.layer_0.pos.j * '3)
  _01: coloring(^.layer_01.shape, ^.layer_0111.shape.color) at (center(^.layer_0) + ^.layer_0.shape.size.i,^.layer_0111.pos.j)
  _011: a rectangle with size (?,1) and color ? and mask Full at (^.layer_0111.pos.i,average(^.layer_01.pos.i, ^.layer_011.pos.i))
  _0111: a point with color ? at (average(^.layer_0111.pos.j, ^.layer_01111.pos.j) + 2,bottom(^.layer_01))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 113.0 + 3645.4 = 3758.4
DL output with Mo: L = 288.8 + 753.0 = 1041.8
DL input+output M: L = 401.8 + 4398.4 = 4800.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at (3,^.layer_0.pos.j * '3)
  _01: coloring(^.layer_01.shape, ^.layer_0111.shape.color) at (center(^.layer_0) + ^.layer_0.shape.size.i,^.layer_0111.pos.j)
  _011: a rectangle with size (?,1) and color ? and mask Full at (^.layer_0111.pos.i,average(^.layer_01.pos.i, ^.layer_011.pos.i))
  _0111: a point with color ? at (average(^.layer_0111.pos.j, ^.layer_01111.pos.j) + 2,bottom(^.layer_01))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 20.0 = 131.0
DL output with Mo: L = 288.8 + 753.0 = 1041.8
DL input+output M: L = 399.8 + 773.0 = 1172.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color brown and mask Full at (0,3)
  _011: a point with color yellow at (2,1)
  _0111: a point with color pink at (2,2)
  _01111: a point with color blue at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color pink and mask Full at (3,2)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,1)
  _0111: a point with color blue at (3,0)
diff: 
delta:
   (24.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color brown and mask Full at (0,3)
  _011: a point with color yellow at (2,1)
  _0111: a point with color pink at (2,2)
  _01111: a point with color blue at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color brown and mask Full at (0,3)
  _011: a point with color yellow at (2,1)
  _0111: a point with color blue at (3,0)
  _01111: a point with color pink at (2,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color orange and mask Full at (4,2)
  _011: a point with color brown at (0,5)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (1,3)
diff: 
delta:
   (2.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (4,3)
  _011: a rectangle with size (2,1) and color orange and mask Full at (4,2)
  _0111: a point with color brown at (5,5)
diff: 
delta:
   (24.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color orange and mask Full at (4,2)
  _011: a point with color brown at (0,5)
  _0111: a point with color cyan at (1,3)
  _01111: a point with color cyan at (4,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color orange and mask Full at (4,2)
  _011: a point with color brown at (0,5)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (1,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (2,4)
  _01111: a point with color pink at (3,0)
diff: 
delta: (4,1)=3 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,4)
  _011: a rectangle with size (3,1) and color green and mask Full at (2,1)
  _0111: a point with color pink at (4,0)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (2,4)
  _01111: a point with color pink at (3,0)
diff: 
delta: (4,1)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color pink at (3,0)
  _01111: a point with color red at (2,4)
diff: 
delta: (4,1)=3 
! 6 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (3,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _011: a point with color yellow at (0,3)
  _0111: a point with color green at (0,4)
  _01111: a point with color grey at (1,0)
diff: 
delta: (2,2)=6  (3,1)=2  (3,3)=4 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (3,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _011: a point with color yellow at (0,3)
  _0111: a point with color grey at (1,0)
  _01111: a point with color green at (0,4)
diff: 
delta: (2,2)=6  (3,1)=2  (3,3)=4 
! 10 wrong pixels (generated / expected)

TEST 1e0a9b12.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.5 sec (56.5 sec/task)
bits-train-error = 753.0 bits (753.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-368] Checking task 1e32b0e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 92900.0 = 92912.6
DL output with Mo: L = 12.6 + 138231.3 = 138243.9
DL input+output M: L = 25.2 + 231131.3 = 231156.5

# learning a model for train pairs
2.000	
1.286	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT ADD ^.layer_0 = ^.layer_0
0.676	IN  SPE ^.layer_0.shape.mask = .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....
0.613	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.558	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.507	OUT ADD ^.layer_011 = ^.layer_01
0.460	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.395	OUT ADD ^.layer_010 = ^.layer_011
0.367	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.344	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.320	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.294	OUT ADD ^.layer_011110 = ^.layer_0111
0.289	OUT SPE ^.layer_0111.shape = coloring(^.layer_011.shape, ^.layer_0.shape.color)
0.279	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.274	OUT SPE ^.size = ^.size
0.264	OUT SPE ^.layer_00.shape.color = ^.layer_0.shape.color
0.254	OUT SPE ^.layer_00.shape.size.j = 3
0.251	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.249	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i
0.248	OUT SPE ^.layer_01111.pos.j = ^.layer_01111.pos.j
0.247	OUT SPE ^.layer_00.shape.size.i = 3
0.171	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (3,3) and color ^.layer_0.shape.color and mask ? at (?,?)
  _0: ^.layer_0
  _010: ^.layer_011
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _011: ^.layer_01
  _0111: coloring(^.layer_011.shape, ^.layer_0.shape.color) at (?,?)
  _011110: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 365.5 + 7099.3 = 7464.8
DL output with Mo: L = 187.3 + 22799.9 = 22987.2
DL input+output M: L = 552.8 + 29899.2 = 30452.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (3,3) and color ^.layer_0.shape.color and mask ? at (?,?)
  _0: ^.layer_0
  _010: ^.layer_011
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _011: ^.layer_01
  _0111: coloring(^.layer_011.shape, ^.layer_0.shape.color) at (?,?)
  _011110: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 365.5 + 31.7 = 397.2
DL output with Mo: L = 187.3 + 22799.9 = 22987.2
DL input+output M: L = 552.8 + 22831.6 = 23384.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
  _0111: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,7)
  _01111: a rectangle with size (1,3) and color red and mask Full at (2,13)
diff: 
delta:
   (0.0 bits)
data: a background with size (17,17) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask +-cross at (1,7)
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
  _01: a rectangle with size (3,3) and color cyan and mask +-cross at (7,1)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _0111: a rectangle with size (3,3) and color cyan and mask +-cross at (7,13)
  _011110: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,7)
  _01111: a rectangle with size (3,3) and color cyan and mask +-cross at (13,13)
diff: 
delta: (1,14)=8  (2,13)=2  (2,14)=2  (2,15)=2  (3,14)=8  (8,8)=8  (13,8)=8  (14,7)=8  (14,8)=8  (14,9)=8  (15,8)=8 
   (528.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
  _0111: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,7)
  _01111: a rectangle with size (1,3) and color red and mask Full at (2,13)
diff: 
delta:
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
  _0111: a rectangle with size (1,3) and color red and mask Full at (2,13)
  _01111: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,7)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN 1e32b0e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (1,14)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (2,7)
diff: 
delta: (8,14)=1 
   (3.2 bits)
data: a background with size (17,17) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (13,1)
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (3,15) and color red and mask Full at (7,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _0111: a rectangle with size (3,3) and color red and mask Full at (13,13)
  _011110: a rectangle with size (1,2) and color blue and mask Full at (1,14)
  _01111: a rectangle with size (3,9) and color red and mask Full at (1,7)
diff: 
delta: (1,10)=0  (1,12)=0  (2,7)=1  (2,8)=1  (2,10)=0  (2,12)=0  (3,10)=0  (3,12)=0  (7,4)=0  (7,6)=0  (7,10)=0  (7,12)=0  (8,4)=0  (8,6)=0  (8,10)=0  (8,12)=0  (8,14)=1  (9,4)=0  (9,6)=0  (9,10)=0  (9,12)=0  (13,7)=2  (13,9)=2  (14,8)=2  (15,7)=2  (15,9)=2 
   (1106.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (1,14)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (2,7)
diff: 
delta: (8,14)=1 
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (1,14)
diff: 
delta: (8,14)=1 
! 77 wrong pixels (generated / expected)

TRAIN 1e32b0e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (14,14)
  _01111: a rectangle with size (1,1) and color green and mask Full at (2,7)
diff: 
delta: (2,15)=3 
   (0.0 bits)
data: a background with size (17,17) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (7,7)
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (7,13)
  _011: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _0111: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (8,2)
  _011110: a rectangle with size (2,2) and color green and mask Odd Checkboard at (14,14)
  _01111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
diff: 
delta: (1,8)=1  (1,14)=1  (2,7)=3  (2,9)=1  (2,13)=1  (2,15)=3  (3,8)=1  (3,14)=1  (13,2)=1  (13,14)=1  (14,1)=1  (14,3)=1  (14,13)=1  (15,2)=1 
   (645.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (14,14)
  _01111: a rectangle with size (1,1) and color green and mask Full at (2,7)
diff: 
delta: (2,15)=3 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (14,14)
  _01111: a rectangle with size (1,1) and color green and mask Full at (2,15)
diff: 
delta: (2,7)=3 
! 41 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (2,7)
  _01111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (14,14)
diff: 
delta: (2,15)=3 
! 41 wrong pixels (generated / expected)

TRAIN 1e32b0e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (1,7)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (9,7)
diff: 
delta: (14,7)=4  (14,9)=4 
! 69 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (9,7)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (1,7)
diff: 
delta: (14,7)=4  (14,9)=4 
! 69 wrong pixels (generated / expected)

TEST 1e32b0e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 22799.9 bits (22799.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-367] Checking task 1f0c79e5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6958.0 = 6970.6
DL output with Mo: L = 12.6 + 35905.3 = 35917.9
DL input+output M: L = 25.2 + 42863.3 = 42888.5

# learning a model for train pairs
2.000	
1.141	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.731	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.600	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.579	OUT SPE ^.size = ^.size
0.560	IN  SPE ^.layer_0.shape.mask = Full
0.546	IN  SPE ^.color = black
0.543	OUT SPE ^.color = black
0.124	
0.120	IN  DEL ^.layer_0
0.118	IN  DEL ^.layer_00
0.118	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 56.1 + 2917.7 = 2973.8
DL output with Mo: L = 35.7 + 4139.0 = 4174.7
DL input+output M: L = 91.8 + 7056.7 = 7148.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 35.7 + 4139.0 = 4174.7
DL input+output M: L = 48.3 + 4139.0 = 4187.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (4,2)=4  (4,3)=2  (5,2)=4  (5,3)=4 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,7) and color yellow and mask ....xxx|...xxx.|..xxx..|.xxx...|xxx....|xx..... at (0,2)
diff: 
delta:
   (82.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (4,2)=4  (4,3)=2  (5,2)=4  (5,3)=4 
! 21 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=3  (1,3)=3  (2,2)=3  (2,3)=2 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,7) and color green and mask xx.....|xxx....|.xxx...|..xxx..|...xxx.|....xxx|.....xx|......x at (1,2)
diff: 
delta:
   (94.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=3  (1,3)=3  (2,2)=3  (2,3)=2 
! 24 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (3,3)=6  (3,4)=2  (4,3)=2  (4,4)=6 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color pink and mask ......xxx|.....xxx.|....xxx..|...xxx...|..xxx....|.xxx.....|xxx......|xx.......|x........ at (0,0)
diff: 
delta:
   (114.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (3,3)=6  (3,4)=2  (4,3)=2  (4,4)=6 
! 28 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=7#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask xx....xxx|xxx..xxx.|.xxxxxx..|..xxxx...|..xxx....|.xxx.....|xxx......|xx.......|x........ at (0,0)
diff: 
delta:
   (122.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=7#
! 33 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (2,5)=2  (2,6)=2  (3,5)=8  (3,6)=2 
! 28 wrong pixels (generated / expected)

TEST 1f0c79e5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 4139.0 bits (4139.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-366] Checking task 1f642eb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20256.7 = 20269.3
DL output with Mo: L = 12.6 + 20256.7 = 20269.3
DL input+output M: L = 25.2 + 40513.3 = 40538.5

# learning a model for train pairs
2.000	
1.350	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.958	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.928	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.873	OUT ADD ^.layer_01 = ^.layer_01
0.835	OUT ADD ^.layer_00 = ^.layer_01.shape at (?,?)
0.805	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.750	OUT ADD ^.layer_011 = ^.layer_011
0.712	OUT ADD ^.layer_001 = ^.layer_011.shape at (?,?)
0.681	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.625	OUT ADD ^.layer_0111 = ^.layer_0111
0.587	OUT ADD ^.layer_000 = ^.layer_0111.shape at (?,?)
0.557	OUT SPE ^.size = ^.size
0.540	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.525	OUT SPE ^.layer_00.pos = ^.layer_01.pos + (3, 0)
0.511	OUT SPE ^.layer_000.pos = corner(^.layer_0111.pos, ^.layer_0.pos)
0.503	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.494	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.486	IN  SPE ^.layer_0.shape.color = cyan
0.481	IN  SPE ^.layer_0.shape.mask = Full
0.476	OUT SPE ^.layer_0.shape.mask = Full
0.470	OUT SPE ^.layer_001.pos.i = average(^.layer_0.pos.i, ^.layer_011.pos.i)
0.466	IN  SPE ^.color = black
0.463	OUT SPE ^.color = black
0.226	
0.225	IN  GEN ^.layer_0.shape.color = ?
0.225	IN  GEN ^.layer_0.shape.mask = ?
0.225	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: ^.layer_0111.shape at corner(^.layer_0111.pos, ^.layer_0.pos)
  _00: ^.layer_01.shape at ^.layer_01.pos + (3, 0)
  _001: ^.layer_011.shape at (average(^.layer_0.pos.i, ^.layer_011.pos.i),?)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 90.7 + 4847.0 = 4937.7
DL output with Mo: L = 225.6 + 4214.6 = 4440.3
DL input+output M: L = 316.4 + 9061.6 = 9378.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: ^.layer_0111.shape at corner(^.layer_0111.pos, ^.layer_0.pos)
  _00: ^.layer_01.shape at ^.layer_01.pos + (3, 0)
  _001: ^.layer_011.shape at (average(^.layer_0.pos.i, ^.layer_011.pos.i),?)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 86.3 + 40.0 = 126.3
DL output with Mo: L = 225.6 + 4214.6 = 4440.3
DL input+output M: L = 311.9 + 4254.6 = 4566.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color yellow at (9,5)
  _0111: a point with color pink at (6,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _000: a point with color pink at (6,4)
  _00: a point with color brown at (3,4)
  _001: a point with color yellow at (6,5)
  _0: a rectangle with size (3,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color yellow at (9,5)
  _0111: a point with color pink at (6,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color yellow at (9,5)
  _0111: a point with color pink at (6,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color pink at (3,0)
  _0111: a point with color green at (7,0)
diff: 
delta: (5,9)=2  (9,5)=1 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _000: a point with color green at (7,3)
  _00: a point with color orange at (3,4)
  _001: a point with color pink at (3,3)
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color pink at (3,0)
  _0111: a point with color green at (7,0)
diff: 
delta: (5,5)=2  (5,9)=2  (7,5)=1  (9,5)=1 
   (167.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color pink at (3,0)
  _0111: a point with color red at (5,9)
diff: 
delta: (7,0)=3  (9,5)=1 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color pink at (3,0)
  _0111: a point with color green at (7,0)
diff: 
delta: (5,9)=2  (9,5)=1 
! 11 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color pink at (3,9)
  _0111: a point with color green at (4,0)
diff: 
delta: (6,0)=2  (7,9)=2  (9,3)=7#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _000: a point with color green at (4,3)
  _00: a point with color yellow at (3,3)
  _001: a point with color pink at (3,5)
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color pink at (3,9)
  _0111: a point with color green at (4,0)
diff: 
delta: (6,0)=2  (6,3)=2  (7,3)=7# (7,5)=2  (7,9)=2  (9,3)=7#
   (242.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color pink at (3,9)
  _0111: a point with color green at (4,0)
diff: 
delta: (6,0)=2  (7,9)=2  (9,3)=7#
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color pink at (3,9)
  _0111: a point with color red at (6,0)
diff: 
delta: (4,0)=3  (7,9)=2  (9,3)=7#
! 14 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,2)
  _01: a point with color pink at (0,3)
  _011: a point with color brown at (3,0)
  _0111: a point with color red at (0,5)
diff: 
delta: (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 16 wrong pixels (generated / expected)

TEST 1f642eb9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 4214.6 bits (4214.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-365] Checking task 1f85a75f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 62564.9 = 62577.5
DL output with Mo: L = 12.6 + 2578.5 = 2591.1
DL input+output M: L = 25.2 + 65143.4 = 65168.6

# learning a model for train pairs
2.000	
1.474	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.374	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.994	OUT SPE ^.size = ^.layer_0.shape.size
0.932	OUT SPE ^.layer_0.pos = '(0, 0)
0.912	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.893	OUT SPE ^.color = black
0.878	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.853	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.844	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.836	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.821	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.820	IN  SPE ^.layer_01.shape.mask = Full
0.819	IN  SPE ^.layer_011.shape.mask = Full
0.818	IN  SPE ^.layer_0111.shape.mask = Full
0.817	IN  SPE ^.layer_01111.shape.mask = Full
0.816	IN  SPE ^.layer_011111.shape.mask = Full
0.815	IN  SPE ^.layer_0111111.shape.mask = Full
0.814	IN  SPE ^.color = black
0.016	
0.016	IN  DEL ^.layer_0111111
0.015	IN  DEL ^.layer_011111
0.015	IN  DEL ^.layer_01111
0.015	IN  DEL ^.layer_0111
0.014	IN  DEL ^.layer_011
0.014	IN  DEL ^.layer_01
0.013	IN  DEL ^.layer_01111111
0.013	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 218.8 + 49945.9 = 50164.8
DL output with Mo: L = 33.1 + 0.0 = 33.1
DL input+output M: L = 252.0 + 49945.9 = 50197.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 33.1 + 0.0 = 33.1
DL input+output M: L = 72.0 + 0.0 = 72.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (10,17)
diff: 
delta: (0,0)=1  (0,5)=1  (0,22)=5# (1,15)=5# (2,10)=5# (2,26)=1  (3,8)=5# (3,15)=5# (3,22)=1  (4,3)=5# (4,4)=1  (4,8)=5# (4,12)=1  (4,13)=1  (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,4)=5# (6,7)=1  (7,4)=5# (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,0)=5# (11,2)=5# (11,5)=1  (11,13)=1  (11,14)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,20)=1  (25,22)=1  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,7)=1  (27,8)=1  (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (10,17)
diff: 
delta: (0,0)=1  (0,5)=1  (0,22)=5# (1,15)=5# (2,10)=5# (2,26)=1  (3,8)=5# (3,15)=5# (3,22)=1  (4,3)=5# (4,4)=1  (4,8)=5# (4,12)=1  (4,13)=1  (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,4)=5# (6,7)=1  (7,4)=5# (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,0)=5# (11,2)=5# (11,5)=1  (11,13)=1  (11,14)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,20)=1  (25,22)=1  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,7)=1  (27,8)=1  (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
correct output grid

TRAIN 1f85a75f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (9,11)
diff: 
delta: (0,10)=2  (0,11)=2  (0,23)=2  (1,6)=2  (2,0)=2  (2,7)=2  (2,10)=2  (3,0)=2  (3,2)=2  (3,7)=2  (3,27)=2  (4,13)=2  (5,2)=2  (5,7)=2  (6,7)=2  (7,20)=2  (7,27)=2  (8,20)=2  (9,7)=2  (9,23)=2  (10,22)=2  (11,3)=2  (12,6)=2  (12,29)=2  (13,29)=2  (14,8)=2  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,17)=2  (27,18)=2  (27,21)=2  (28,27)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (9,11)
diff: 
delta: (0,10)=2  (0,11)=2  (0,23)=2  (1,6)=2  (2,0)=2  (2,7)=2  (2,10)=2  (3,0)=2  (3,2)=2  (3,7)=2  (3,27)=2  (4,13)=2  (5,2)=2  (5,7)=2  (6,7)=2  (7,20)=2  (7,27)=2  (8,20)=2  (9,7)=2  (9,23)=2  (10,22)=2  (11,3)=2  (12,6)=2  (12,29)=2  (13,29)=2  (14,8)=2  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,17)=2  (27,18)=2  (27,21)=2  (28,27)=2 
correct output grid

TRAIN 1f85a75f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|xx.x|xx.x|.xxx at (12,19)
diff: 
delta: (0,2)=1  (0,4)=3  (0,6)=8  (0,19)=3  (0,21)=8  (1,2)=8  (1,3)=3  (1,17)=8  (1,20)=8  (1,27)=1  (1,28)=1  (2,0)=1  (2,19)=8  (2,20)=8  (2,21)=8  (2,22)=1  (2,23)=3  (3,2)=8  (3,9)=8  (3,12)=1  (3,16)=8  (3,20)=3  (3,23)=3  (3,29)=8  (4,0)=1  (4,16)=3  (4,23)=1  (4,24)=8  (4,26)=8  (4,29)=3  (5,17)=8  (5,29)=8  (6,1)=8  (6,3)=1  (6,8)=1  (6,9)=1  (6,22)=8  (6,26)=8  (6,27)=8  (6,29)=3  (7,3)=1  (7,4)=8  (7,18)=3  (7,19)=1  (7,22)=8  (8,11)=1  (8,16)=8  (8,18)=3  (8,22)=8  (8,25)=3  (10,5)=1  (10,20)=8  (11,1)=1  (11,2)=8  (11,5)=3  (11,10)=8  (11,11)=3  (11,17)=8  (12,3)=1  (12,6)=1  (12,10)=3  (12,12)=3  (13,2)=1  (13,10)=8  (13,26)=1  (14,8)=1  (15,3)=3  (15,12)=1  (15,17)=3  (15,24)=8  (15,25)=3  (16,0)=1  (16,13)=3  (16,15)=8  (17,10)=1  (17,11)=1  (18,4)=8  (18,9)=3  (18,17)=8  (19,2)=8  (19,8)=3  (19,17)=8  (19,18)=3  (19,22)=3  (19,29)=3  (20,17)=1  (20,19)=3  (21,8)=3  (21,17)=1  (21,25)=1  (22,6)=8  (22,12)=3  (22,14)=1  (22,29)=3  (23,10)=1  (23,14)=3  (23,16)=3  (23,18)=1  (23,21)=3  (23,26)=8  (24,6)=8  (24,8)=8  (24,11)=1  (24,12)=1  (24,13)=1  (24,17)=8  (24,25)=1  (25,1)=8  (25,12)=8  (25,16)=8  (25,20)=1  (25,23)=8  (25,25)=3  (25,27)=3  (26,2)=1  (26,5)=3  (26,7)=1  (27,5)=3  (27,14)=1  (27,17)=8  (27,19)=3  (27,20)=1  (27,22)=1  (28,16)=3  (28,21)=3  (29,2)=8  (29,7)=8  (29,17)=3  (29,21)=3  (29,29)=3 
correct output grid

TEST 1f85a75f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 6.9 sec (6.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-364] Checking task 1f876c06.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9035.3 = 9048.0
DL output with Mo: L = 12.6 + 19511.8 = 19524.4
DL input+output M: L = 25.2 + 28547.1 = 28572.3

# learning a model for train pairs
2.000	
1.787	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.589	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.436	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.369	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.302	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.235	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.168	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.099	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.030	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.967	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	OUT SPE ^.layer_01.shape.mask = x....|.x...|..x..|...x.|....x
0.899	OUT SPE ^.size = ^.size
0.876	OUT SPE ^.layer_01.shape.size = ^.size / '2
0.860	OUT SPE ^.layer_0111.pos = min(^.layer_0.pos, ^.layer_0111.pos)
0.843	OUT SPE ^.layer_0.pos = ^.layer_01.pos
0.834	OUT SPE ^.layer_0111.shape.color = ^.layer_0.shape.color
0.826	IN  SPE ^.color = black
0.818	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.812	OUT SPE ^.layer_011.pos.j = span(^.layer_01.pos.j, ^.layer_011111.pos.j) - 2
0.806	OUT SPE ^.layer_01.pos.i = min(^.layer_0111.pos.j, ^.layer_01111.pos.j) + 2
0.801	OUT SPE ^.layer_01.shape.color = ^.layer_011111.shape.color
0.796	OUT SPE ^.layer_01.pos.j = span(^.layer_01111.pos.i, ^.layer_011111.pos.i) - ^.layer_011111.pos.j - ^.layer_01.pos.j
0.793	OUT SPE ^.color = black
0.218	
0.218	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
  _01: a rectangle with size ^.size / '2 and color ^.layer_011111.shape.color and mask x....|.x...|..x..|...x.|....x at (min(^.layer_0111.pos.j, ^.layer_01111.pos.j) + 2,span(^.layer_01111.pos.i, ^.layer_011111.pos.i) - ^.layer_011111.pos.j - ^.layer_01.pos.j)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,span(^.layer_01.pos.j, ^.layer_011111.pos.j) - 2)
  _0111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at min(^.layer_0.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 107.9 + 5216.4 = 5324.4
DL output with Mo: L = 408.3 + 3578.0 = 3986.4
DL input+output M: L = 516.3 + 8794.4 = 9310.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
  _01: a rectangle with size ^.size / '2 and color ^.layer_011111.shape.color and mask x....|.x...|..x..|...x.|....x at (min(^.layer_0111.pos.j, ^.layer_01111.pos.j) + 2,span(^.layer_01111.pos.i, ^.layer_011111.pos.i) - ^.layer_011111.pos.j - ^.layer_01.pos.j)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,span(^.layer_01.pos.j, ^.layer_011111.pos.j) - 2)
  _0111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at min(^.layer_0.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 107.8 + 20.0 = 127.8
DL output with Mo: L = 408.3 + 3578.0 = 3986.4
DL input+output M: L = 516.2 + 3598.0 = 4114.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,2)
  _01: a point with color pink at (0,5)
  _011: a point with color red at (2,0)
  _0111: a point with color pink at (4,9)
  _01111: a point with color yellow at (5,3)
  _011111: a point with color yellow at (9,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (5,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,2)
diff: 
delta: (2,0)=2 
   (111.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,2)
  _01: a point with color pink at (0,5)
  _011: a point with color red at (2,0)
  _0111: a point with color pink at (4,9)
  _01111: a point with color yellow at (5,3)
  _011111: a point with color yellow at (9,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,2)
  _01: a point with color pink at (0,5)
  _011: a point with color red at (2,0)
  _0111: a point with color pink at (4,9)
  _01111: a point with color yellow at (9,7)
  _011111: a point with color yellow at (5,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,2)
  _01: a point with color pink at (0,5)
  _011: a point with color red at (2,0)
  _0111: a point with color yellow at (5,3)
  _01111: a point with color pink at (4,9)
  _011111: a point with color yellow at (9,7)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 1f876c06.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,7)
  _011: a point with color cyan at (2,6)
  _0111: a point with color green at (2,9)
  _01111: a point with color brown at (3,3)
  _011111: a point with color orange at (5,5)
diff: 
delta: (7,1)=8  (9,9)=7#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (0,7)
  _01: a rectangle with size (5,5) and color orange and mask x....|.x...|..x..|...x.|....x at (5,5)
  _011: a rectangle with size (6,6) and color cyan and mask .....x|....x.|...x..|..x...|.x....|x..... at (2,1)
  _0111: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (0,0)
diff: 
delta:
   (120.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,7)
  _011: a point with color cyan at (2,6)
  _0111: a point with color green at (2,9)
  _01111: a point with color brown at (3,3)
  _011111: a point with color orange at (5,5)
diff: 
delta: (7,1)=8  (9,9)=7#
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,7)
  _011: a point with color cyan at (2,6)
  _0111: a point with color green at (2,9)
  _01111: a point with color brown at (3,3)
  _011111: a point with color cyan at (7,1)
diff: 
delta: (5,5)=7# (9,9)=7#
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,7)
  _011: a point with color cyan at (2,6)
  _0111: a point with color green at (2,9)
  _01111: a point with color orange at (5,5)
  _011111: a point with color brown at (3,3)
diff: 
delta: (7,1)=8  (9,9)=7#
! 22 wrong pixels (generated / expected)

TRAIN 1f876c06.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (0,3)
  _01: a point with color cyan at (0,5)
  _011: a point with color yellow at (2,2)
  _0111: a point with color pink at (3,0)
  _01111: a point with color cyan at (4,9)
  _011111: a point with color yellow at (6,6)
diff: 
delta: (5,4)=9# (9,0)=9#
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (2,2)
  _011: a rectangle with size (5,5) and color brown and mask ....x|...x.|..x..|.x...|x.... at (5,0)
  _0111: a rectangle with size (4,4) and color pink and mask ...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (126.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (0,3)
  _01: a point with color cyan at (0,5)
  _011: a point with color yellow at (2,2)
  _0111: a point with color pink at (3,0)
  _01111: a point with color cyan at (4,9)
  _011111: a point with color brown at (5,4)
diff: 
delta: (6,6)=4  (9,0)=9#
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (0,3)
  _01: a point with color cyan at (0,5)
  _011: a point with color yellow at (2,2)
  _0111: a point with color pink at (3,0)
  _01111: a point with color cyan at (4,9)
  _011111: a point with color yellow at (6,6)
diff: 
delta: (5,4)=9# (9,0)=9#
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (0,3)
  _01: a point with color cyan at (0,5)
  _011: a point with color yellow at (2,2)
  _0111: a point with color pink at (3,0)
  _01111: a point with color brown at (5,4)
  _011111: a point with color cyan at (4,9)
diff: 
delta: (6,6)=4  (9,0)=9#
! 29 wrong pixels (generated / expected)

TRAIN 1f876c06.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color brown at (0,9)
  _011: a point with color orange at (1,0)
  _0111: a point with color green at (3,3)
  _01111: a point with color brown at (3,6)
  _011111: a point with color pink at (4,0)
diff: 
delta: (5,9)=4  (7,3)=6  (7,6)=7# (9,5)=4 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color brown at (0,9)
  _011: a point with color orange at (1,0)
  _0111: a point with color green at (3,3)
  _01111: a point with color pink at (4,0)
  _011111: a point with color brown at (3,6)
diff: 
delta: (5,9)=4  (7,3)=6  (7,6)=7# (9,5)=4 
! 33 wrong pixels (generated / expected)

TEST 1f876c06.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.5 sec (38.5 sec/task)
bits-train-error = 3578.0 bits (3578.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-363] Checking task 1fad071e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 32664.0 = 32676.6
DL output with Mo: L = 12.6 + 1928.8 = 1941.4
DL input+output M: L = 25.2 + 34592.8 = 34618.0

# learning a model for train pairs
2.000	
1.633	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.526	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	OUT SPE ^.size = projJ(^.layer_0.shape.size) + (1, 3)
1.257	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.150	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.043	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.935	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.860	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.818	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.692	OUT SPE ^.layer_0.pos = '(0, 0)
0.607	OUT SPE ^.layer_0.shape.color = blue
0.556	OUT SPE ^.layer_0.shape.size.i = 1
0.505	OUT SPE ^.layer_0.shape.mask = Full
0.422	OUT SPE ^.layer_0.shape.size.j = ^.layer_011111.shape.size.j * '2
0.384	OUT SPE ^.color = black
0.379	IN  SPE ^.layer_01.shape.color = blue
0.374	IN  SPE ^.layer_0111.shape.color = red
0.369	IN  SPE ^.layer_011111.shape.color = blue
0.365	IN  SPE ^.layer_0.shape.mask = Full
0.362	IN  SPE ^.layer_01.shape.mask = Full
0.359	IN  SPE ^.layer_011.shape.mask = Full
0.356	IN  SPE ^.layer_0111.shape.mask = Full
0.353	IN  SPE ^.layer_01111.shape.mask = Full
0.350	IN  SPE ^.layer_011111.shape.mask = Full
0.347	IN  SPE ^.layer_0111111.shape.mask = Full
0.345	IN  SPE ^.color = black
0.063	
0.062	IN  DEL ^.layer_0111111
0.061	IN  DEL ^.layer_01111111
0.061	IN  GEN ^.layer_011111.shape.color = ?
0.061	IN  GEN ^.layer_0111.shape.color = ?
0.061	IN  GEN ^.layer_01.shape.color = ?
0.061	IN  GEN ^.layer_011111.shape.mask = ?
0.061	IN  GEN ^.layer_01111.shape.mask = ?
0.061	IN  GEN ^.layer_0111.shape.mask = ?
0.061	IN  GEN ^.layer_011.shape.mask = ?
0.061	IN  GEN ^.layer_01.shape.mask = ?
0.061	IN  GEN ^.layer_0.shape.mask = ?
0.061	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projJ(^.layer_0.shape.size) + (1, 3) and color black and layers
  _0: a rectangle with size (1,^.layer_011111.shape.size.j * '2) and color blue and mask Full at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 220.5 + 9234.5 = 9455.0
DL output with Mo: L = 108.3 + 0.0 = 108.3
DL input+output M: L = 328.8 + 9234.5 = 9563.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projJ(^.layer_0.shape.size) + (1, 3) and color black and layers
  _0: a rectangle with size (1,^.layer_011111.shape.size.j * '2) and color blue and mask Full at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 0.0 = 163.5
DL output with Mo: L = 108.3 + 0.0 = 108.3
DL input+output M: L = 271.8 + 0.0 = 271.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (0,8)
diff: 
delta: (4,0)=1  (8,1)=1  (8,8)=1 
   (0.0 bits)
data: a background with size (1,5) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (0,8)
diff: 
delta: (4,0)=1  (8,1)=1  (8,8)=1 
correct output grid

TRAIN 1fad071e.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff: 
delta: (0,3)=2  (0,8)=2  (2,3)=2  (3,8)=1  (5,8)=2  (8,1)=1 
   (0.0 bits)
data: a background with size (1,5) and color black and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff: 
delta: (0,3)=2  (0,8)=2  (2,3)=2  (3,8)=1  (5,8)=2  (8,1)=1 
correct output grid

TRAIN 1fad071e.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (4,4)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
diff: 
delta: (2,0)=1  (4,7)=1  (6,4)=2  (7,7)=2  (7,8)=2  (8,5)=1  (8,7)=2  (8,8)=2 
   (0.0 bits)
data: a background with size (1,5) and color black and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (4,4)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
diff: 
delta: (2,0)=1  (4,7)=1  (6,4)=2  (7,7)=2  (7,8)=2  (8,5)=1  (8,7)=2  (8,8)=2 
correct output grid

TRAIN 1fad071e.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (3,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,1)
  _01111: a rectangle with size (2,2) and color red and mask Full at (6,6)
  _011111: a rectangle with size (2,2) and color red and mask Full at (7,0)
diff: 
delta: (0,8)=1  (1,3)=1  (6,0)=1  (7,3)=1  (7,4)=1  (8,3)=1  (8,4)=1 
! 1 wrong pixels (generated / expected)

TEST 1fad071e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.4 sec (19.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-362] Checking task 2013d3e2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16989.9 = 17002.6
DL output with Mo: L = 12.6 + 4124.9 = 4137.5
DL input+output M: L = 25.2 + 21114.8 = 21140.1

# learning a model for train pairs
2.000	
1.788	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.680	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.564	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.479	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.386	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.306	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, min(^.layer_0.shape.size, ^.layer_01.shape.size))
1.207	OUT ADD ^.layer_010 = a point with color ? at (?,?)
1.106	OUT ADD ^.layer_00 = a point with color ? at (?,?)
1.032	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	OUT SPE ^.size = '(3, 3)
0.929	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.893	OUT SPE ^.layer_00.pos = '(1, 1)
0.857	OUT SPE ^.layer_010.pos = '(2, 2)
0.822	OUT SPE ^.layer_01.pos = ^.layer_01.pos / '2
0.791	OUT SPE ^.layer_0.shape.size = '(1, 1)
0.764	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.740	OUT SPE ^.layer_010.shape.color = ^.layer_0.shape.color
0.722	OUT SPE ^.layer_0.pos.i = 2
0.704	OUT SPE ^.layer_011.pos.j = 2
0.688	OUT SPE ^.layer_0.shape.mask = Full
0.674	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.j - 2
0.661	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.j - 2
0.131	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _00: a point with color ? at '(1, 1)
  _0: a rectangle with size '(1, 1) and color ? and mask Full at (2,^.layer_011.pos.j - 2)
  _010: a point with color ^.layer_0.shape.color at '(2, 2)
  _01: scaleTo(^.layer_01.shape, min(^.layer_0.shape.size, ^.layer_01.shape.size)) at ^.layer_01.pos / '2
  _011: a point with color ^.layer_011.shape.color at (^.layer_011.pos.j - 2,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 9013.0 = 9127.2
DL output with Mo: L = 238.0 + 274.9 = 512.9
DL input+output M: L = 352.1 + 9287.9 = 9640.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _00: a point with color ? at '(1, 1)
  _0: a rectangle with size '(1, 1) and color ? and mask Full at (2,^.layer_011.pos.j - 2)
  _010: a point with color ^.layer_0.shape.color at '(2, 2)
  _01: scaleTo(^.layer_01.shape, min(^.layer_0.shape.size, ^.layer_01.shape.size)) at ^.layer_01.pos / '2
  _011: a point with color ^.layer_011.shape.color at (^.layer_011.pos.j - 2,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 238.0 + 274.9 = 512.9
DL input+output M: L = 352.1 + 274.9 = 627.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (2,6) and color orange and mask Full at (4,2)
  _0111: a rectangle with size (6,2) and color orange and mask Full at (2,4)
diff: 
delta: (3,3)=6  (3,6)=6  (6,3)=6  (6,6)=6 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color pink at (1,1)
  _0: a rectangle with size (1,1) and color orange and mask Full at (2,0)
  _010: a point with color yellow at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
  _011: a point with color orange at (0,2)
diff: 
delta:
   (13.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (2,6) and color orange and mask Full at (4,2)
  _0111: a rectangle with size (6,2) and color orange and mask Full at (2,4)
diff: 
delta: (3,3)=6  (3,6)=6  (6,3)=6  (6,6)=6 
! 2 wrong pixels (generated / expected)

TRAIN 2013d3e2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,6)=1  (2,4)=5# (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (1,1)
  _0: a rectangle with size (1,1) and color grey and mask Full at (2,1)
  _010: a point with color red at (2,2)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _011: a point with color pink at (1,2)
diff: 
delta:
   (13.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,6)=1  (2,4)=5# (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (2,4)
  _0111: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,6)=1  (2,3)=6  (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! 4 wrong pixels (generated / expected)

TRAIN 2013d3e2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
diff: 
delta: (2,5)=8  (3,5)=8  (3,6)=4  (4,6)=4  (5,3)=4  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff: 
delta: (2,5)=8  (3,5)=8  (3,6)=4  (4,6)=4  (5,3)=4  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! 3 wrong pixels (generated / expected)

TEST 2013d3e2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.0 sec (57.0 sec/task)
bits-train-error = 274.9 bits (274.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-361] Checking task 2204b7a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 28469.4 = 28482.1
DL output with Mo: L = 12.6 + 28469.4 = 28482.1
DL input+output M: L = 25.2 + 56938.9 = 56964.1

# learning a model for train pairs
2.000	
1.643	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.250	OUT ADD ^.layer_0 = ^.layer_0
0.891	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	OUT ADD ^.layer_01 = ^.layer_01
0.475	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.454	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.432	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.410	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.389	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.367	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.346	OUT SPE ^.size = ^.size
0.328	OUT SPE ^.layer_0111 = coloring(^.layer_0111, ^.layer_0.shape.color)
0.310	OUT SPE ^.layer_01111 = coloring(^.layer_01111, ^.layer_0.shape.color)
0.298	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.293	IN  SPE ^.layer_011.shape.color = green
0.287	IN  SPE ^.layer_0111.shape.color = green
0.281	IN  SPE ^.layer_01111.shape.color = green
0.277	IN  SPE ^.layer_0.shape.mask = Full
0.274	IN  SPE ^.layer_01.shape.mask = Full
0.271	OUT SPE ^.color = black
0.269	IN  SPE ^.color = black
0.081	
0.081	IN  GEN ^.layer_01111.shape.color = ?
0.080	IN  GEN ^.layer_0111.shape.color = ?
0.080	IN  GEN ^.layer_011.shape.color = ?
0.080	IN  GEN ^.layer_01.shape.mask = ?
0.080	IN  GEN ^.layer_0.shape.mask = ?
0.080	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a point with color ? at ^.layer_011.pos
  _0111: coloring(^.layer_0111, ^.layer_0.shape.color)
  _01111: coloring(^.layer_01111, ^.layer_0.shape.color)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color green at (?,?)

DL input  with Mi: L = 123.1 + 5358.0 = 5481.1
DL output with Mo: L = 74.8 + 2100.3 = 2175.0
DL input+output M: L = 197.9 + 7458.2 = 7656.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a point with color ? at ^.layer_011.pos
  _0111: coloring(^.layer_0111, ^.layer_0.shape.color)
  _01111: coloring(^.layer_01111, ^.layer_0.shape.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 0.0 = 111.0
DL output with Mo: L = 74.8 + 2100.3 = 2175.0
DL input+output M: L = 185.8 + 2100.3 = 2286.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (6,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color red at (1,6)
  _0111: a point with color blue at (4,4)
  _01111: a point with color blue at (6,2)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (6,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (4,4)
  _0111: a point with color green at (1,6)
  _01111: a point with color green at (6,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (2,7)
  _01111: a point with color green at (3,3)
diff: 
delta: (6,4)=3  (7,8)=3 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color yellow at (2,1)
  _0111: a point with color yellow at (2,7)
  _01111: a point with color yellow at (3,3)
diff: 
delta: (6,4)=7# (7,8)=7#
   (83.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (2,7)
  _01111: a point with color green at (3,3)
diff: 
delta: (6,4)=3  (7,8)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (2,7)
  _01111: a point with color green at (6,4)
diff: 
delta: (3,3)=3  (7,8)=3 
! 4 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
  _01111: a point with color green at (3,7)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color cyan at (2,4)
  _0111: a point with color cyan at (3,1)
  _01111: a point with color cyan at (3,7)
diff: 
delta: (6,1)=9# (6,6)=9# (7,3)=9#
   (121.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
  _01111: a point with color green at (3,7)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
  _01111: a point with color green at (6,1)
diff: 
delta: (3,7)=3  (6,6)=3  (7,3)=3 
! 5 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,5)
  _01111: a point with color green at (1,8)
diff: 
delta: (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,5)
  _01111: a point with color green at (3,3)
diff: 
delta: (1,8)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 8 wrong pixels (generated / expected)

TEST 2204b7a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.6 sec (5.6 sec/task)
bits-train-error = 2100.3 bits (2100.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-360] Checking task 22168020.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17269.0 = 17281.6
DL output with Mo: L = 12.6 + 32942.7 = 32955.3
DL input+output M: L = 25.2 + 50211.7 = 50236.9

# learning a model for train pairs
2.000	
1.410	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.924	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.685	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.507	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	OUT SPE ^.size = ^.size
0.480	OUT SPE ^.layer_01.pos = min(^.layer_0.pos, ^.layer_01.pos)
0.474	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.470	IN  SPE ^.color = black
0.466	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.461	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.459	OUT SPE ^.color = black
0.131	
0.131	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at min(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 5708.5 = 5772.8
DL output with Mo: L = 81.4 + 4025.1 = 4106.5
DL input+output M: L = 145.8 + 9733.5 = 9879.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at min(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 81.4 + 4025.1 = 4106.5
DL input+output M: L = 145.7 + 4065.1 = 4210.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,8)
diff: 
delta: (1,1)=3  (2,2)=3  (2,7)=3  (3,3)=3  (3,6)=3 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color green and mask Full at (1,2)
  _01: a rectangle with size (5,2) and color green and mask Full at (1,4)
diff: 
delta: (1,1)=3  (1,8)=3  (3,3)=3  (3,6)=3 
   (193.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta: (1,8)=3  (2,2)=3  (2,7)=3  (3,3)=3  (3,6)=3 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,8)
diff: 
delta: (1,1)=3  (2,2)=3  (2,7)=3  (3,3)=3  (3,6)=3 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,2)
diff: 
delta: (1,1)=3  (1,8)=3  (2,7)=3  (3,3)=3  (3,6)=3 
! 22 wrong pixels (generated / expected)

TRAIN 22168020.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
  _01: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|.xxxx.|..xx..|..xx.. at (6,4)
  _01: a rectangle with size (4,6) and color blue and mask xxxxxx|.xxxx.|..xx..|..xx.. at (2,0)
diff: 
delta:
   (96.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
  _01: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 22168020.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask xxxxxxxx|.xxxxxx.|..xxxx..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask xxxxxx|.xxxx.|..xx..|..xx.. at (0,0)
diff: 
delta:
   (113.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
diff: 
delta:
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
  _01: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (2,2) and color pink and mask Full at (2,2)
diff: 
delta: (0,0)=6  (0,5)=6  (1,1)=6  (1,4)=6 
! 41 wrong pixels (generated / expected)

TRAIN 22168020.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
  _01: a rectangle with size (4,6) and color green and mask x....x|.x..x.|..xx..|..xx.. at (6,1)
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask x....x|.x..x.|..xx..|..xx.. at (6,1)
  _01: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 40 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
  _01: a rectangle with size (3,4) and color yellow and mask x..x|.xx.|.xx. at (1,0)
diff: 
delta: (6,1)=3  (6,6)=3  (7,2)=3  (7,5)=3  (8,3)=3  (8,4)=3  (9,3)=3  (9,4)=3 
! 40 wrong pixels (generated / expected)

TEST 22168020.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.4 sec (6.4 sec/task)
bits-train-error = 4025.1 bits (4025.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-359] Checking task 22233c11.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6019.1 = 6031.7
DL output with Mo: L = 12.6 + 10527.8 = 10540.4
DL input+output M: L = 25.2 + 16546.9 = 16572.1

# learning a model for train pairs
2.000	
1.453	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.026	OUT ADD ^.layer_0 = ^.layer_0
0.865	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.742	OUT SPE ^.size = ^.size
0.715	IN  SPE ^.layer_0.shape.color = green
0.694	OUT SPE ^.layer_011.shape.size = ^.layer_0.shape.size / '2
0.678	OUT SPE ^.layer_011.shape.color = cyan
0.664	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0) + 1
0.652	IN  SPE ^.color = black
0.643	OUT SPE ^.layer_011.shape.mask = Full
0.636	OUT SPE ^.color = black
0.230	
0.229	IN  GEN ^.layer_0.shape.color = ?
0.229	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size ^.layer_0.shape.size / '2 and color cyan and mask Full at (bottom(^.layer_0) + 1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2448.2 = 2490.5
DL output with Mo: L = 112.7 + 2235.0 = 2347.7
DL input+output M: L = 155.0 + 4683.3 = 4838.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size ^.layer_0.shape.size / '2 and color cyan and mask Full at (bottom(^.layer_0) + 1,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 112.7 + 2235.0 = 2347.7
DL input+output M: L = 151.5 + 2235.0 = 2386.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
diff: 
delta: (6,7)=3  (7,6)=3 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (6,6)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (5,1)
diff: 
delta: (2,4)=8  (5,5)=8  (8,8)=8 
   (156.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
diff: 
delta: (6,7)=3  (7,6)=3 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (6,6)
diff: 
delta: (3,2)=3  (4,3)=3 
! 11 wrong pixels (generated / expected)

TRAIN 22233c11.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (7,5)
diff: 
delta:
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,3)
diff: 
delta: (5,1)=3  (5,2)=3  (6,1)=3  (6,2)=3 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (5,1)
diff: 
delta: (3,3)=3  (3,4)=3  (4,3)=3  (4,4)=3 
! 14 wrong pixels (generated / expected)

TRAIN 22233c11.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,5)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (5,2)
diff: 
delta:
   (32.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 22233c11.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask ...xxx|...xxx|...xxx|xxx...|xxx...|xxx... at (2,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 22233c11.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.6 sec (6.6 sec/task)
bits-train-error = 2235.0 bits (2235.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-358] Checking task 2281f1f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8658.7 = 8671.3
DL output with Mo: L = 12.6 + 22867.2 = 22879.8
DL input+output M: L = 25.2 + 31525.8 = 31551.1

# learning a model for train pairs
2.000	
1.845	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.739	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.641	OUT ADD ^.layer_01 = ^.layer_0
1.565	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.495	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.423	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.358	OUT ADD ^.layer_011 = ^.layer_01
1.309	OUT ADD ^.layer_0111 = ^.layer_0111
1.260	OUT ADD ^.layer_0110 = ^.layer_011
1.202	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.161	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.138	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.073	OUT ADD ^.layer_011110 = ^.layer_01111
1.046	OUT SPE ^.size = ^.size
1.027	IN  SPE ^.layer_0.shape.color = grey
1.008	IN  SPE ^.layer_01.shape.color = grey
0.989	IN  SPE ^.layer_011.shape.color = grey
0.970	IN  SPE ^.layer_0111.shape.color = grey
0.951	IN  SPE ^.layer_01111.shape.color = grey
0.939	IN  SPE ^.layer_0.shape.mask = Full
0.928	IN  SPE ^.layer_01.shape.mask = Full
0.896	OUT SPE ^.layer_011111.pos = corner(^.layer_0111.pos, ^.layer_0.pos)
0.882	OUT SPE ^.layer_01111.pos = corner(^.layer_01111.pos, ^.layer_0.pos)
0.871	IN  SPE ^.layer_01111.shape.mask = Full
0.862	IN  SPE ^.color = black
0.855	OUT SPE ^.layer_0.shape.color = red
0.848	OUT SPE ^.layer_01111.shape.color = red
0.840	OUT SPE ^.layer_011111.shape.color = red
0.835	OUT SPE ^.layer_01111.shape.size.i = ^.layer_01111.shape.size.i
0.831	OUT SPE ^.layer_0.shape.size.i = 1
0.827	OUT SPE ^.layer_0.shape.mask = Full
0.822	OUT SPE ^.layer_01111.shape.mask = Full
0.818	OUT SPE ^.layer_011111.shape.size.i = 1
0.814	OUT SPE ^.layer_011111.shape.mask = Full
0.381	
0.380	IN  GEN ^.layer_01111.shape.color = ?
0.380	IN  GEN ^.layer_0111.shape.color = ?
0.380	IN  GEN ^.layer_011.shape.color = ?
0.379	IN  GEN ^.layer_01.shape.color = ?
0.379	IN  GEN ^.layer_0.shape.color = ?
0.379	IN  GEN ^.layer_01111.shape.mask = ?
0.379	IN  GEN ^.layer_01.shape.mask = ?
0.379	IN  GEN ^.layer_0.shape.mask = ?
0.379	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (1,?) and color red and mask Full at (?,?)
  _01: ^.layer_0
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _011110: ^.layer_01111
  _01111: a rectangle with size (^.layer_01111.shape.size.i,?) and color red and mask Full at corner(^.layer_01111.pos, ^.layer_0.pos)
  _011111: a rectangle with size (1,?) and color red and mask Full at corner(^.layer_0111.pos, ^.layer_0.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 140.0 + 3752.8 = 3892.8
DL output with Mo: L = 172.7 + 8171.4 = 8344.1
DL input+output M: L = 312.7 + 11924.1 = 12236.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (1,?) and color red and mask Full at (?,?)
  _01: ^.layer_0
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _011110: ^.layer_01111
  _01111: a rectangle with size (^.layer_01111.shape.size.i,?) and color red and mask Full at corner(^.layer_01111.pos, ^.layer_0.pos)
  _011111: a rectangle with size (1,?) and color red and mask Full at corner(^.layer_0111.pos, ^.layer_0.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 120.3 + 0.0 = 120.3
DL output with Mo: L = 172.7 + 8171.4 = 8344.1
DL input+output M: L = 293.0 + 8171.4 = 8464.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,3)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (3,9)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (7,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _0110: a point with color grey at (0,7)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,3)
  _0111: a point with color grey at (3,9)
  _011110: a rectangle with size (1,1) and color grey and mask Full at (7,9)
  _01111: a rectangle with size (1,1) and color red and mask Full at (7,0)
  _011111: a rectangle with size (1,1) and color red and mask Full at (3,0)
diff: 
delta: (3,7)=2  (7,3)=2  (7,7)=2 
   (139.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,3)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (3,9)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (7,9)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (2,9)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,9)
diff: 
delta: (7,9)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (7,3)
  _01: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _0110: a point with color grey at (0,7)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _0111: a point with color grey at (2,9)
  _011110: a rectangle with size (1,1) and color grey and mask Full at (4,9)
  _01111: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _011111: a rectangle with size (1,2) and color red and mask Full at (2,3)
diff: 
delta: (2,1)=2  (2,7)=2  (4,1)=2  (4,7)=2  (7,1)=2  (7,7)=2  (7,9)=5#
   (296.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (2,9)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,9)
diff: 
delta: (7,9)=5#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (2,9)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (7,9)
diff: 
delta: (4,9)=5#
! 11 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _01: a rectangle with size (1,2) and color grey and mask Full at (0,7)
  _011: a point with color grey at (0,5)
  _0111: a point with color grey at (6,9)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (2,9)
diff: 
delta: (8,9)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (8,2)
  _01: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _0110: a point with color grey at (0,5)
  _011: a rectangle with size (1,2) and color grey and mask Full at (0,7)
  _0111: a point with color grey at (6,9)
  _011110: a rectangle with size (2,1) and color grey and mask Full at (2,9)
  _01111: a rectangle with size (2,7) and color red and mask Full at (2,2)
  _011111: a rectangle with size (1,7) and color red and mask Full at (6,2)
diff: 
delta: (2,4)=0  (2,6)=0  (3,4)=0  (3,6)=0  (6,4)=0  (6,6)=0  (8,4)=0  (8,6)=0  (8,9)=5#
   (381.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _01: a rectangle with size (1,2) and color grey and mask Full at (0,7)
  _011: a point with color grey at (0,5)
  _0111: a point with color grey at (6,9)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (2,9)
diff: 
delta: (8,9)=5#
! 17 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (2,9)
  _01: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _011: a point with color grey at (0,0)
  _0111: a point with color grey at (0,6)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (0,8)
diff: 
delta: (4,9)=0  (6,9)=0  (8,9)=0 
! 31 wrong pixels (generated / expected)

TEST 2281f1f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 8171.4 bits (8171.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-357] Checking task 228f6490.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 57906.5 = 57919.1
DL output with Mo: L = 12.6 + 57906.5 = 57919.1
DL input+output M: L = 25.2 + 115813.0 = 115838.3

# learning a model for train pairs
2.000	
1.467	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.055	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.721	OUT ADD ^.layer_01 = ^.layer_0
0.611	OUT ADD ^.layer_00 = ^.layer_01
0.519	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.411	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.369	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.329	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.290	OUT ADD ^.layer_01111 = ^.layer_01111
0.267	IN  ADD ^.layer_011110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.251	OUT ADD ^.layer_011110 = ^.layer_011110.shape at (?,?)
0.240	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.227	OUT ADD ^.layer_01110 = ^.layer_011111
0.216	OUT SPE ^.size = ^.size
0.210	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.204	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.198	OUT SPE ^.layer_0.shape.size = ^.layer_0111.shape.size
0.195	OUT SPE ^.layer_0111.shape.size = projI(^.layer_01111.shape.size) + (0, 1)
0.192	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.189	IN  SPE ^.layer_0.shape.color = grey
0.186	IN  SPE ^.layer_01.shape.color = grey
0.184	OUT SPE ^.layer_0111.shape.color = ^.layer_0111111.shape.color
0.181	OUT SPE ^.layer_0.shape.color = ^.layer_0111.shape.color
0.179	OUT SPE ^.layer_011110.pos.j = right(^.layer_011110) - 1
0.176	OUT SPE ^.layer_011110.pos.i = ^.layer_011110.pos.j + ^.layer_011110.shape.size.i
0.174	OUT SPE ^.layer_011.pos.i = bottom(^.layer_01111) + 2
0.172	OUT SPE ^.layer_0111.pos.j = span(^.layer_0111111.pos.j, ^.layer_011110.pos.j)
0.170	OUT SPE ^.layer_0.pos.j = min(^.layer_0111.pos.j, ^.layer_011111.pos.j)
0.168	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i + ^.layer_01111.pos.j - ^.layer_011.pos.j
0.166	OUT SPE ^.layer_0.pos.i = ^.layer_0111.pos.i - ^.layer_0111111.pos.i - ^.layer_01.pos.i
0.164	OUT SPE ^.layer_0.shape.mask = Full
0.162	OUT SPE ^.layer_011.shape.mask = Full
0.161	OUT SPE ^.layer_0111.shape.mask = Full
0.159	IN  SPE ^.color = black
0.158	OUT SPE ^.color = black
0.015	
0.015	IN  GEN ^.layer_01.shape.color = ?
0.015	IN  GEN ^.layer_0.shape.color = ?
0.015	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: a rectangle with size ^.layer_0111.shape.size and color ^.layer_0111.shape.color and mask Full at (^.layer_0111.pos.i - ^.layer_0111111.pos.i - ^.layer_01.pos.i,min(^.layer_0111.pos.j, ^.layer_011111.pos.j))
  _01: ^.layer_0
  _011: a rectangle with size ^.layer_011.shape.size and color ^.layer_011.shape.color and mask Full at (bottom(^.layer_01111) + 2,?)
  _01110: ^.layer_011111
  _0111: a rectangle with size projI(^.layer_01111.shape.size) + (0, 1) and color ^.layer_0111111.shape.color and mask Full at (^.layer_011.pos.i + ^.layer_01111.pos.j - ^.layer_011.pos.j,span(^.layer_0111111.pos.j, ^.layer_011110.pos.j))
  _011110: ^.layer_011110.shape at (^.layer_011110.pos.j + ^.layer_011110.shape.size.i,right(^.layer_011110) - 1)
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 200.9 + 8281.8 = 8482.7
DL output with Mo: L = 508.3 + 169.3 = 677.6
DL input+output M: L = 709.2 + 8451.1 = 9160.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: a rectangle with size ^.layer_0111.shape.size and color ^.layer_0111.shape.color and mask Full at (^.layer_0111.pos.i - ^.layer_0111111.pos.i - ^.layer_01.pos.i,min(^.layer_0111.pos.j, ^.layer_011111.pos.j))
  _01: ^.layer_0
  _011: a rectangle with size ^.layer_011.shape.size and color ^.layer_011.shape.color and mask Full at (bottom(^.layer_01111) + 2,?)
  _01110: ^.layer_011111
  _0111: a rectangle with size projI(^.layer_01111.shape.size) + (0, 1) and color ^.layer_0111111.shape.color and mask Full at (^.layer_011.pos.i + ^.layer_01111.pos.j - ^.layer_011.pos.j,span(^.layer_0111111.pos.j, ^.layer_011110.pos.j))
  _011110: ^.layer_011110.shape at (^.layer_011110.pos.j + ^.layer_011110.shape.size.i,right(^.layer_011110) - 1)
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 194.1 + 0.0 = 194.1
DL output with Mo: L = 508.3 + 169.3 = 677.6
DL input+output M: L = 702.4 + 169.3 = 871.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _011110: a rectangle with size (1,2) and color pink and mask Full at (2,7)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _011111: a point with color orange at (5,8)
  _0111111: a point with color orange at (7,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _01: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01110: a point with color orange at (5,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (7,4)
  _011110: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _011110: a rectangle with size (1,2) and color pink and mask Full at (2,7)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _011111: a point with color orange at (5,8)
  _0111111: a point with color orange at (7,4)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _011110: a rectangle with size (1,2) and color pink and mask Full at (2,7)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _011111: a point with color orange at (7,4)
  _0111111: a point with color orange at (5,8)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _011110: a rectangle with size (1,2) and color pink and mask Full at (2,7)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (5,8)
  _011111: a point with color orange at (0,0)
  _0111111: a point with color orange at (7,4)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 228f6490.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full at (1,6)
  _0111: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _011110: a rectangle with size (1,3) and color green and mask Full at (5,0)
  _01111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
  _011111: a point with color pink at (4,9)
  _0111111: a point with color green at (6,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _0: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _01: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _011: a rectangle with size (2,4) and color brown and mask Full at (7,4)
  _01110: a point with color pink at (4,9)
  _0111: a rectangle with size (2,1) and color green and mask Full at (1,3)
  _011110: a rectangle with size (1,3) and color green and mask Full at (1,1)
  _01111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full at (1,6)
  _0111: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _011110: a rectangle with size (1,3) and color green and mask Full at (5,0)
  _01111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
  _011111: a point with color pink at (4,9)
  _0111111: a point with color green at (6,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full at (1,6)
  _0111: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _011110: a rectangle with size (1,3) and color green and mask Full at (5,0)
  _01111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
  _011111: a point with color green at (6,2)
  _0111111: a point with color pink at (4,9)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _0111: a rectangle with size (2,4) and color brown and mask Full at (1,6)
  _011110: a rectangle with size (1,3) and color green and mask Full at (5,0)
  _01111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
  _011111: a point with color pink at (4,9)
  _0111111: a point with color green at (6,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 228f6490.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _0111: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _011110: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011111: a point with color yellow at (4,5)
  _0111111: a point with color yellow at (7,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _0: a rectangle with size (2,4) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _011: a rectangle with size (2,3) and color red and mask Full at (7,1)
  _01110: a point with color yellow at (4,5)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (7,9)
  _011110: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _0111: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _011110: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011111: a point with color yellow at (4,5)
  _0111111: a point with color yellow at (7,9)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _0111: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _011110: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011111: a point with color yellow at (7,9)
  _0111111: a point with color yellow at (4,5)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _01: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _011: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _0111: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _011110: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011111: a point with color yellow at (4,5)
  _0111111: a point with color yellow at (7,9)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 228f6490.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x...x|xx.xx|xxxxx|xxxxx at (0,2)
  _01: a rectangle with size (3,7) and color grey and mask xxxxxxx|x...xxx|xxxxxxx at (7,3)
  _011: a rectangle with size (2,3) and color orange and mask xxx|.x. at (5,0)
  _0111: a rectangle with size (1,3) and color yellow and mask Full at (2,7)
  _011110: a rectangle with size (1,3) and color red and mask Full at (5,5)
  _01111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,0)
  _011111: a point with color red at (0,9)
  _0111111: a point with color red at (1,0)
diff: 
delta: (4,9)=2  (5,6)=0 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x...x|xx.xx|xxxxx|xxxxx at (0,2)
  _01: a rectangle with size (3,7) and color grey and mask xxxxxxx|x...xxx|xxxxxxx at (7,3)
  _011: a rectangle with size (2,3) and color orange and mask Full at (5,0)
  _0111: a rectangle with size (1,3) and color yellow and mask Full at (2,7)
  _011110: a rectangle with size (1,3) and color red and mask Full at (5,5)
  _01111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,0)
  _011111: a point with color red at (0,9)
  _0111111: a point with color red at (4,9)
diff: 
delta: (1,0)=2  (5,6)=0  (6,0)=0  (6,2)=0 
! 16 wrong pixels (generated / expected)

TEST 228f6490.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.7 sec (54.7 sec/task)
bits-train-error = 169.3 bits (169.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-356] Checking task 22eb0ac0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10535.8 = 10548.4
DL output with Mo: L = 12.6 + 19504.5 = 19517.1
DL input+output M: L = 25.2 + 30040.3 = 30065.5

# learning a model for train pairs
2.000	
1.647	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.463	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.406	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.349	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.292	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.234	OUT ADD ^.layer_011 = ^.layer_011
1.176	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.119	OUT ADD ^.layer_0111 = ^.layer_0111
1.061	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.003	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.944	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.883	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.827	OUT ADD ^.layer_01111 = ^.layer_01111111
0.772	OUT ADD ^.layer_011111 = ^.layer_011111
0.739	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.709	OUT SPE ^.size = ^.size
0.691	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.675	OUT SPE ^.layer_01.pos = projI(^.layer_0111111.pos)
0.659	OUT SPE ^.layer_0111111.pos = projI(^.layer_0111111.pos) - ^.layer_011111.pos - ^.layer_0111.pos
0.651	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.643	OUT SPE ^.layer_01.shape.color = ^.layer_0111111.shape.color
0.636	IN  SPE ^.color = black
0.631	OUT SPE ^.layer_0.shape.size.i = 1
0.626	OUT SPE ^.layer_0.shape.size.j = ^.size.j - ^.layer_01111111.pos.j - ^.layer_0.pos.j
0.621	OUT SPE ^.layer_0.shape.mask = Full
0.616	OUT SPE ^.layer_01.shape.size.i = 1
0.608	OUT SPE ^.layer_01.shape.size.j = ^.size.j - ^.layer_01111111.pos.j - ^.layer_0111111.pos.j
0.603	OUT SPE ^.layer_01.shape.mask = Full
0.599	OUT SPE ^.color = black
0.083	
0.083	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.j - ^.layer_01111111.pos.j - ^.layer_0.pos.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.size.j - ^.layer_01111111.pos.j - ^.layer_0111111.pos.j) and color ^.layer_0111111.shape.color and mask Full at projI(^.layer_0111111.pos)
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111111
  _011111: ^.layer_011111
  _0111111: a point with color ? at projI(^.layer_0111111.pos) - ^.layer_011111.pos - ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.5 + 5488.6 = 5627.2
DL output with Mo: L = 323.9 + 953.0 = 1276.9
DL input+output M: L = 462.4 + 6441.6 = 6904.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.j - ^.layer_01111111.pos.j - ^.layer_0.pos.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.size.j - ^.layer_01111111.pos.j - ^.layer_0111111.pos.j) and color ^.layer_0111111.shape.color and mask Full at projI(^.layer_0111111.pos)
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111111
  _011111: ^.layer_011111
  _0111111: a point with color ? at projI(^.layer_0111111.pos) - ^.layer_011111.pos - ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.4 + 51.7 = 190.1
DL output with Mo: L = 323.9 + 953.0 = 1276.9
DL input+output M: L = 462.3 + 1004.7 = 1467.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (1,0)
  _01: a point with color pink at (1,9)
  _011: a point with color cyan at (3,0)
  _0111: a point with color brown at (3,9)
  _01111: a point with color yellow at (5,0)
  _011111: a point with color pink at (7,0)
  _0111111: a point with color yellow at (5,9)
  _01111111: a point with color cyan at (7,9)
diff: 
delta:
   (3.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (1,0)
  _01: a rectangle with size (1,10) and color yellow and mask Full at (5,0)
  _011: a point with color cyan at (3,0)
  _0111: a point with color brown at (3,9)
  _01111: a point with color cyan at (7,9)
  _011111: a point with color pink at (7,0)
  _0111111: a point with color pink at (1,9)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (1,0)
  _01: a point with color pink at (1,9)
  _011: a point with color cyan at (3,0)
  _0111: a point with color brown at (3,9)
  _01111: a point with color yellow at (5,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color pink at (7,0)
  _01111111: a point with color cyan at (7,9)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (1,0)
  _01: a point with color pink at (1,9)
  _011: a point with color cyan at (3,0)
  _0111: a point with color brown at (3,9)
  _01111: a point with color yellow at (5,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color cyan at (7,9)
  _01111111: a point with color pink at (7,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (1,0)
  _01: a point with color pink at (1,9)
  _011: a point with color cyan at (3,0)
  _0111: a point with color brown at (3,9)
  _01111: a point with color yellow at (5,0)
  _011111: a point with color pink at (7,0)
  _0111111: a point with color yellow at (5,9)
  _01111111: a point with color cyan at (7,9)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color yellow at (3,0)
  _0111: a point with color red at (3,9)
  _01111: a point with color green at (5,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color blue at (7,0)
  _01111111: a point with color red at (9,0)
diff: 
delta: (7,9)=1  (9,9)=3 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,10) and color blue and mask Full at (7,0)
  _011: a point with color yellow at (3,0)
  _0111: a point with color red at (3,9)
  _01111: a point with color red at (9,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color green at (5,0)
diff: 
delta: (9,9)=3 
   (44.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color yellow at (3,0)
  _0111: a point with color red at (3,9)
  _01111: a point with color green at (5,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color blue at (7,0)
  _01111111: a point with color blue at (7,9)
diff: 
delta: (9,0)=2  (9,9)=3 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color yellow at (3,0)
  _0111: a point with color red at (3,9)
  _01111: a point with color green at (5,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color blue at (7,0)
  _01111111: a point with color red at (9,0)
diff: 
delta: (7,9)=1  (9,9)=3 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color yellow at (3,0)
  _0111: a point with color red at (3,9)
  _01111: a point with color green at (5,0)
  _011111: a point with color yellow at (5,9)
  _0111111: a point with color blue at (7,9)
  _01111111: a point with color blue at (7,0)
diff: 
delta: (9,0)=2  (9,9)=3 
! 3 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color yellow at (3,9)
  _01111: a point with color grey at (5,0)
  _011111: a point with color green at (5,9)
  _0111111: a point with color cyan at (7,0)
  _01111111: a point with color red at (7,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (7,0)
  _011: a point with color green at (3,0)
  _0111: a point with color yellow at (3,9)
  _01111: a point with color red at (7,9)
  _011111: a point with color green at (5,9)
  _0111111: a point with color grey at (5,0)
diff: 
delta: (1,9)=8 
   (44.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color yellow at (3,9)
  _01111: a point with color grey at (5,0)
  _011111: a point with color green at (5,9)
  _0111111: a point with color cyan at (7,0)
  _01111111: a point with color red at (7,9)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color yellow at (3,9)
  _01111: a point with color grey at (5,0)
  _011111: a point with color green at (5,9)
  _0111111: a point with color red at (7,9)
  _01111111: a point with color cyan at (7,0)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,0)
  _01: a point with color cyan at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color yellow at (3,9)
  _01111: a point with color grey at (5,0)
  _011111: a point with color cyan at (7,0)
  _0111111: a point with color green at (5,9)
  _01111111: a point with color red at (7,9)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color red at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color green at (3,9)
  _01111: a point with color red at (5,0)
  _011111: a point with color brown at (5,9)
  _0111111: a point with color pink at (7,0)
  _01111111: a point with color pink at (7,9)
diff: 
delta: (9,0)=9# (9,9)=4 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color red at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color green at (3,9)
  _01111: a point with color red at (5,0)
  _011111: a point with color brown at (5,9)
  _0111111: a point with color pink at (7,0)
  _01111111: a point with color brown at (9,0)
diff: 
delta: (7,9)=6  (9,9)=4 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color red at (1,9)
  _011: a point with color green at (3,0)
  _0111: a point with color green at (3,9)
  _01111: a point with color red at (5,0)
  _011111: a point with color brown at (5,9)
  _0111111: a point with color pink at (7,9)
  _01111111: a point with color pink at (7,0)
diff: 
delta: (9,0)=9# (9,9)=4 
! 20 wrong pixels (generated / expected)

TEST 22eb0ac0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.9 sec (21.9 sec/task)
bits-train-error = 953.0 bits (953.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-355] Checking task 234bbc79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15963.3 = 15975.9
DL output with Mo: L = 12.6 + 15788.4 = 15801.0
DL input+output M: L = 25.2 + 31751.7 = 31776.9

# learning a model for train pairs
2.000	
1.649	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.417	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.230	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.102	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.991	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.889	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.837	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.784	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.730	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.714	OUT SPE ^.size.i = ^.size.i
0.692	OUT SPE ^.size.j = ^.size.j - area(^.layer_01.shape)
0.677	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.658	OUT SPE ^.layer_01.pos = ^.layer_01111.pos - (1, 2)
0.641	IN  SPE ^.layer_0111.shape.color = grey
0.628	OUT SPE ^.layer_01.shape.size.i = 2
0.616	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j - 3
0.607	OUT SPE ^.layer_0.shape.size.i = ^.size.i - ^.layer_0.shape.size.i
0.597	OUT SPE ^.layer_011.pos.i = ^.layer_01.pos.i
0.587	OUT SPE ^.layer_011.shape.size.j = ^.size.i - ^.layer_0111.pos.i - ^.layer_01.pos.i
0.578	OUT SPE ^.layer_011.shape.size.i = ^.layer_011.shape.size.j - 1
0.572	OUT SPE ^.color = black
0.566	IN  SPE ^.color = black
0.560	OUT SPE ^.layer_0.pos.i = min(^.layer_01111.pos.j, ^.layer_0110.pos.j) / '2
0.164	
0.164	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j - area(^.layer_01.shape)) and color black and layers
  _0: a rectangle with size (^.size.i - ^.layer_0.shape.size.i,^.layer_0.shape.size.j) and color ? and mask ? at (min(^.layer_01111.pos.j, ^.layer_0110.pos.j) / '2,?)
  _01: a rectangle with size (2,?) and color ? and mask ? at ^.layer_01111.pos - (1, 2)
  _011: a rectangle with size (^.layer_011.shape.size.j - 1,^.size.i - ^.layer_0111.pos.i - ^.layer_01.pos.i) and color ? and mask ? at (^.layer_01.pos.i,^.layer_011.pos.j - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 139.1 + 6341.0 = 6480.1
DL output with Mo: L = 339.9 + 2100.5 = 2440.4
DL input+output M: L = 479.0 + 8441.5 = 8920.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j - area(^.layer_01.shape)) and color black and layers
  _0: a rectangle with size (^.size.i - ^.layer_0.shape.size.i,^.layer_0.shape.size.j) and color ? and mask ? at (min(^.layer_01111.pos.j, ^.layer_0110.pos.j) / '2,?)
  _01: a rectangle with size (2,?) and color ? and mask ? at ^.layer_01111.pos - (1, 2)
  _011: a rectangle with size (^.layer_011.shape.size.j - 1,^.size.i - ^.layer_0111.pos.i - ^.layer_01.pos.i) and color ? and mask ? at (^.layer_01.pos.i,^.layer_011.pos.j - 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 139.0 + 20.0 = 159.0
DL output with Mo: L = 339.9 + 2100.5 = 2440.4
DL input+output M: L = 478.9 + 2120.5 = 2599.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,3)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _0111: a point with color grey at (1,6)
  _01111: a point with color blue at (1,4)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask xx|.x at (0,2)
  _011: a rectangle with size (1,3) and color red and mask Full at (1,4)
diff: 
delta:
   (48.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,3)
  _0111: a point with color grey at (1,6)
  _01111: a point with color blue at (1,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,3)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _0111: a point with color grey at (1,6)
  _01111: a point with color blue at (1,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 234bbc79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,3)
  _0111: a point with color grey at (2,1)
  _01111: a point with color grey at (2,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,2)
  _01: a rectangle with size (2,4) and color green and mask .xxx|xx.. at (1,5)
  _011: a rectangle with size (2,2) and color red and mask xx|.x at (1,0)
diff: 
delta:
   (55.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,3)
  _0111: a point with color grey at (2,1)
  _01111: a point with color grey at (2,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,3)
  _0111: a point with color grey at (2,7)
  _01111: a point with color grey at (2,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 234bbc79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (1,2) and color pink and mask Full at (2,9)
  _0111: a point with color grey at (1,4)
  _01111: a point with color grey at (2,2)
diff: 
delta: (2,8)=5#
   (0.0 bits)
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask ..x|xxx at (1,3)
  _01: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _011: a rectangle with size (1,3) and color pink and mask Full at (1,6)
diff: 
delta:
   (54.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (1,2) and color pink and mask Full at (2,9)
  _0111: a point with color grey at (1,4)
  _01111: a point with color grey at (2,2)
diff: 
delta: (2,8)=5#
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (1,2) and color pink and mask Full at (2,9)
  _0111: a point with color grey at (1,4)
  _01111: a point with color grey at (2,8)
diff: 
delta: (2,2)=5#
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (1,2) and color pink and mask Full at (2,9)
  _0111: a point with color grey at (2,2)
  _01111: a point with color grey at (1,4)
diff: 
delta: (2,8)=5#
! 16 wrong pixels (generated / expected)

TRAIN 234bbc79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _0110: a point with color grey at (0,2)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,4)
  _0111: a point with color grey at (1,7)
  _01111: a point with color red at (1,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,8) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,0)
  _01: a rectangle with size (2,5) and color red and mask xx.xx|.xxx. at (0,3)
  _011: a rectangle with size (1,2) and color blue and mask Full at (0,1)
diff: 
delta:
   (51.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _0110: a point with color grey at (0,2)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,4)
  _0111: a point with color grey at (1,7)
  _01111: a point with color red at (1,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _0110: a point with color red at (1,5)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,4)
  _0111: a point with color grey at (0,2)
  _01111: a point with color grey at (1,7)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _0110: a point with color grey at (1,7)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,4)
  _0111: a point with color grey at (0,2)
  _01111: a point with color red at (1,5)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 234bbc79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,3) and color col10 and mask Full at (0,7)

TEST 234bbc79.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 19.9 sec (19.9 sec/task)
bits-train-error = 2100.5 bits (2100.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-354] Checking task 23581191.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1974.3 = 1986.9
DL output with Mo: L = 12.6 + 24241.3 = 24253.9
DL input+output M: L = 25.2 + 26215.6 = 26240.8

# learning a model for train pairs
2.000	
1.712	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.437	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.229	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.013	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.886	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	IN  SPE ^.layer_0.shape.color = cyan
0.661	IN  SPE ^.layer_01.shape.color = orange
0.637	IN  SPE ^.color = black
0.619	OUT SPE ^.layer_0.shape = scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0))
0.602	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0))
0.585	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.568	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.551	OUT SPE ^.layer_011.shape = scaleTo(^.layer_0.shape, projI(^.size) + (0, 1))
0.534	OUT SPE ^.layer_0111.shape = scaleTo(^.layer_01.shape, projI(^.size) + (0, 1))
0.518	OUT SPE ^.size = ^.size
0.509	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos)
0.500	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos)
0.491	OUT SPE ^.layer_0111.pos = projJ(^.layer_01.pos)
0.482	OUT SPE ^.layer_011.pos = projJ(^.layer_0.pos)
0.474	OUT SPE ^.layer_010.pos = corner(^.layer_01.pos, ^.layer_0.pos)
0.466	OUT SPE ^.layer_00.pos = corner(^.layer_0.pos, ^.layer_01.pos)
0.462	OUT SPE ^.layer_00.shape.color = red
0.457	OUT SPE ^.layer_010.shape.color = red
0.455	OUT SPE ^.color = black
0.040	
0.038	IN  GEN ^.layer_01.shape.color = ?
0.036	IN  GEN ^.layer_0.shape.color = ?
0.036	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color red at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0)) at projI(^.layer_0.pos)
  _010: a point with color red at corner(^.layer_01.pos, ^.layer_0.pos)
  _01: scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0)) at projI(^.layer_01.pos)
  _011: scaleTo(^.layer_0.shape, projI(^.size) + (0, 1)) at projJ(^.layer_0.pos)
  _0111: scaleTo(^.layer_01.shape, projI(^.size) + (0, 1)) at projJ(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color orange at (?,?)

DL input  with Mi: L = 52.4 + 825.8 = 878.2
DL output with Mo: L = 319.4 + 0.0 = 319.4
DL input+output M: L = 371.8 + 825.8 = 1197.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color red at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0)) at projI(^.layer_0.pos)
  _010: a point with color red at corner(^.layer_01.pos, ^.layer_0.pos)
  _01: scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0)) at projI(^.layer_01.pos)
  _011: scaleTo(^.layer_0.shape, projI(^.size) + (0, 1)) at projJ(^.layer_0.pos)
  _0111: scaleTo(^.layer_01.shape, projI(^.size) + (0, 1)) at projJ(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 319.4 + 0.0 = 319.4
DL input+output M: L = 365.0 + 0.0 = 365.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (2,2)
  _01: a point with color orange at (6,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,6)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _010: a point with color red at (6,2)
  _01: a rectangle with size (1,9) and color orange and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (9,1) and color orange and mask Full at (0,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (2,2)
  _01: a point with color orange at (6,6)
diff: 
delta:
correct output grid

TRAIN 23581191.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,3)
  _01: a point with color orange at (7,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (1,6)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (1,0)
  _010: a point with color red at (7,3)
  _01: a rectangle with size (1,9) and color orange and mask Full at (7,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,3)
  _0111: a rectangle with size (9,1) and color orange and mask Full at (0,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,3)
  _01: a point with color orange at (7,6)
diff: 
delta:
correct output grid

TRAIN 23581191.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,4)
  _01: a point with color orange at (6,1)
diff: 
delta:
correct output grid

TEST 23581191.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-353] Checking task 239be575.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41375.6 = 41388.2
DL output with Mo: L = 12.6 + 741.3 = 754.0
DL input+output M: L = 25.2 + 42116.9 = 42142.1

# learning a model for train pairs
2.000	
1.478	OUT SPE ^.size = '(1, 1)
1.178	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.111	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.993	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.911	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.847	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.839	IN  SPE ^.layer_01111.shape.color = cyan
0.831	IN  SPE ^.layer_011111.shape.color = cyan
0.823	IN  SPE ^.layer_01.shape.color = red
0.815	IN  SPE ^.layer_0111.shape.color = cyan
0.810	IN  SPE ^.layer_01.shape.mask = Full
0.806	IN  SPE ^.color = black
0.483	
0.482	IN  DEL ^.layer_01
0.481	IN  DEL ^.layer_01111
0.481	IN  DEL ^.layer_0111
0.480	IN  DEL ^.layer_011
0.479	IN  DEL ^.layer_0
0.479	IN  DEL ^.layer_011111
0.479	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011111: a point with color cyan at (?,?)

DL input  with Mi: L = 168.7 + 13402.4 = 13571.1
DL output with Mo: L = 18.1 + 342.7 = 360.8
DL input+output M: L = 186.7 + 13745.1 = 13931.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 18.1 + 342.7 = 360.8
DL input+output M: L = 30.7 + 342.7 = 373.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,2)=8  (0,4)=8  (1,0)=2  (1,1)=2  (1,2)=8  (2,0)=2  (2,1)=2  (2,4)=8  (3,3)=2  (3,4)=2  (4,0)=8  (4,1)=8  (4,3)=2  (4,4)=2 
   (0.0 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (2.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,2)=8  (0,4)=8  (1,0)=2  (1,1)=2  (1,2)=8  (2,0)=2  (2,1)=2  (2,4)=8  (3,3)=2  (3,4)=2  (4,0)=8  (4,1)=8  (4,3)=2  (4,4)=2 
correct output grid

TRAIN 239be575.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,7) and color black and layers
diff: 
delta: (0,1)=8  (1,0)=2  (1,1)=2  (1,3)=8  (1,4)=8  (1,5)=8  (2,0)=2  (2,1)=2  (2,2)=8  (2,3)=8  (2,5)=2  (2,6)=2  (3,2)=8  (3,5)=2  (3,6)=2  (4,1)=8  (4,4)=8 
   (0.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
diff: 
delta: (0,1)=8  (1,0)=2  (1,1)=2  (1,3)=8  (1,4)=8  (1,5)=8  (2,0)=2  (2,1)=2  (2,2)=8  (2,3)=8  (2,5)=2  (2,6)=2  (3,2)=8  (3,5)=2  (3,6)=2  (4,1)=8  (4,4)=8 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,7) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=2  (0,2)=2  (0,3)=8  (0,4)=8  (1,1)=2  (1,2)=2  (1,6)=8  (2,1)=8  (2,2)=8  (2,5)=8  (3,2)=8  (3,6)=8  (4,0)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=2  (4,6)=2  (5,0)=8  (5,5)=2  (5,6)=2 
   (0.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=2  (0,2)=2  (0,3)=8  (0,4)=8  (1,1)=2  (1,2)=2  (1,6)=8  (2,1)=8  (2,2)=8  (2,5)=8  (3,2)=8  (3,6)=8  (4,0)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=2  (4,6)=2  (5,0)=8  (5,5)=2  (5,6)=2 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (6,7) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=8  (0,4)=2  (0,5)=2  (1,1)=8  (1,2)=8  (1,4)=2  (1,5)=2  (1,6)=8  (2,3)=8  (2,5)=8  (3,0)=8  (4,1)=2  (4,2)=2  (4,4)=8  (4,6)=8  (5,1)=2  (5,2)=2  (5,3)=8  (5,4)=8  (5,6)=8 
   (0.0 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (2.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=8  (0,4)=2  (0,5)=2  (1,1)=8  (1,2)=8  (1,4)=2  (1,5)=2  (1,6)=8  (2,3)=8  (2,5)=8  (3,0)=8  (4,1)=2  (4,2)=2  (4,4)=8  (4,6)=8  (5,1)=2  (5,2)=2  (5,3)=8  (5,4)=8  (5,6)=8 
correct output grid

TRAIN 239be575.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:

data: a background with size (6,7) and color black and layers
diff: 
delta: (0,0)=8  (0,5)=8  (1,2)=2  (1,3)=2  (1,5)=8  (2,0)=8  (2,2)=2  (2,3)=2  (3,2)=8  (3,5)=8  (4,2)=8  (4,3)=2  (4,4)=2  (4,6)=8  (5,0)=8  (5,3)=2  (5,4)=2  (5,5)=8 
   (0.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
diff: 
delta: (0,0)=8  (0,5)=8  (1,2)=2  (1,3)=2  (1,5)=8  (2,0)=8  (2,2)=2  (2,3)=2  (3,2)=8  (3,5)=8  (4,2)=8  (4,3)=2  (4,4)=2  (4,6)=8  (5,0)=8  (5,3)=2  (5,4)=2  (5,5)=8 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (6,6) and color black and layers
diff: 
delta: (0,0)=8  (0,3)=2  (0,4)=2  (0,5)=8  (1,0)=8  (1,2)=8  (1,3)=2  (1,4)=2  (2,4)=8  (3,0)=2  (3,1)=2  (3,2)=8  (3,4)=8  (4,0)=2  (4,1)=2  (4,5)=8  (5,1)=8  (5,2)=8  (5,4)=8 
   (0.0 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (2.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta: (0,0)=8  (0,3)=2  (0,4)=2  (0,5)=8  (1,0)=8  (1,2)=8  (1,3)=2  (1,4)=2  (2,4)=8  (3,0)=2  (3,1)=2  (3,2)=8  (3,4)=8  (4,0)=2  (4,1)=2  (4,5)=8  (5,1)=8  (5,2)=8  (5,4)=8 
correct output grid

TRAIN 239be575.json/6: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=8  (0,3)=8  (0,5)=8  (1,0)=2  (1,1)=2  (1,3)=8  (2,0)=8  (2,1)=8  (2,5)=8  (3,1)=8  (3,2)=8  (3,3)=8  (4,0)=8  (4,2)=8  (4,5)=8  (5,2)=8  (5,3)=2  (5,4)=2  (6,0)=8  (6,3)=2  (6,4)=2  (7,1)=8  (7,5)=8 
! 1 wrong pixels (generated / expected)

TEST 239be575.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
diff: 
delta: (0,1)=8  (1,3)=8  (1,4)=2  (1,5)=2  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=2  (2,5)=2  (3,1)=8  (3,5)=8  (4,3)=8  (5,0)=8  (5,1)=2  (5,2)=2  (5,5)=8  (6,1)=2  (6,2)=2  (7,1)=8  (7,3)=8  (7,4)=8 
correct output grid

TEST 239be575.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 8.0 sec (8.0 sec/task)
bits-train-error = 342.7 bits (342.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.50 tasks (50.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.50

=====================================
[-352] Checking task 23b5c85d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 172364.7 = 172377.3
DL output with Mo: L = 12.6 + 1059.0 = 1071.6
DL input+output M: L = 25.2 + 173423.7 = 173448.9

# learning a model for train pairs
2.000	
1.452	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.228	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.123	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.119	IN  SPE ^.layer_011.shape.mask = Full
1.118	IN  SPE ^.layer_01.shape.mask = Full
1.001	
1.000	IN  DEL ^.layer_011
1.000	IN  DEL ^.layer_01
1.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 91.3 + 20267.3 = 20358.6
DL output with Mo: L = 12.6 + 1059.0 = 1071.6
DL input+output M: L = 103.9 + 21326.3 = 21430.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 12.6 + 1059.0 = 1071.6
DL input+output M: L = 25.2 + 1059.0 = 1084.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (2,1)=2  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,1)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,1)=2  (5,2)=2  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=2  (6,1)=2  (6,2)=2  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=2  (7,3)=8  (7,4)=8  (7,5)=8 
   (0.0 bits)
data: a background with size (3,3) and color cyan and layers
diff: 
delta:
   (21.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (2,1)=2  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,1)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,1)=2  (5,2)=2  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=2  (6,1)=2  (6,2)=2  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=2  (7,3)=8  (7,4)=8  (7,5)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN 23b5c85d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
diff: 
delta: (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (3,16)=8  (3,17)=8  (3,18)=8  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (4,16)=8  (4,17)=8  (4,18)=8  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (5,16)=8  (5,17)=8  (5,18)=8  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (6,16)=8  (6,17)=8  (6,18)=8  (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=8  (7,17)=8  (7,18)=8  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,12)=8  (8,13)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (11,1)=3  (11,2)=3  (11,3)=3  (11,4)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (12,4)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (14,4)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
   (0.0 bits)
data: a background with size (2,3) and color blue and layers
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
diff: 
delta: (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (3,16)=8  (3,17)=8  (3,18)=8  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (4,16)=8  (4,17)=8  (4,18)=8  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (5,16)=8  (5,17)=8  (5,18)=8  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (6,16)=8  (6,17)=8  (6,18)=8  (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=8  (7,17)=8  (7,18)=8  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,12)=8  (8,13)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (11,1)=3  (11,2)=3  (11,3)=3  (11,4)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (12,4)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (14,4)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 2x3

TRAIN 23b5c85d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,15) and color black and layers
diff: 
delta: (0,9)=2  (0,10)=2  (0,11)=2  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,9)=2  (1,10)=2  (1,11)=2  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,9)=2  (2,10)=2  (2,11)=2  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,9)=2  (3,10)=2  (3,11)=2  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=6  (5,6)=6  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=6  (6,6)=6  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=6  (7,6)=6  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3 
   (0.0 bits)
data: a background with size (3,2) and color pink and layers
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
diff: 
delta: (0,9)=2  (0,10)=2  (0,11)=2  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,9)=2  (1,10)=2  (1,11)=2  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,9)=2  (2,10)=2  (2,11)=2  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,9)=2  (3,10)=2  (3,11)=2  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=6  (5,6)=6  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=6  (6,6)=6  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=6  (7,6)=6  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3 
! size mismatch, 10x10 instead of 3x2

TRAIN 23b5c85d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (13,15) and color red and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,3)=0  (0,4)=0  (0,5)=0  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,14)=0  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,14)=0  (2,0)=0  (2,14)=0  (3,0)=0  (3,14)=0  (4,0)=0  (4,3)=7# (4,4)=7# (4,5)=7# (4,6)=7# (4,14)=0  (5,0)=0  (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (5,14)=0  (6,0)=0  (6,3)=7# (6,4)=7# (6,5)=7# (6,6)=7# (6,14)=0  (7,0)=0  (7,14)=0  (8,0)=0  (8,14)=0  (9,0)=0  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,14)=0  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=0  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=0  (10,14)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,4)=0  (11,5)=0  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=0  (11,14)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=0  (12,14)=0 
   (0.0 bits)
data: a background with size (3,4) and color orange and layers
diff: 
delta:
   (22.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color red and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,3)=0  (0,4)=0  (0,5)=0  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,14)=0  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,14)=0  (2,0)=0  (2,14)=0  (3,0)=0  (3,14)=0  (4,0)=0  (4,3)=7# (4,4)=7# (4,5)=7# (4,6)=7# (4,14)=0  (5,0)=0  (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (5,14)=0  (6,0)=0  (6,3)=7# (6,4)=7# (6,5)=7# (6,6)=7# (6,14)=0  (7,0)=0  (7,14)=0  (8,0)=0  (8,14)=0  (9,0)=0  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,14)=0  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=0  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=0  (10,14)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,4)=0  (11,5)=0  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=0  (11,14)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=0  (12,14)=0 
! size mismatch, 10x10 instead of 3x4

TRAIN 23b5c85d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (18,15) and color black and layers
diff: 
delta: (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=1  (3,8)=1  (3,11)=4  (3,12)=4  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,11)=4  (4,12)=4  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (6,1)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (8,1)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,5)=1  (8,6)=1  (8,7)=1  (8,8)=1  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,9)=6  (11,10)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,10)=6  (14,4)=6  (14,5)=6  (14,6)=6  (14,7)=6  (14,8)=6  (14,9)=6  (14,10)=6 
   (0.0 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
diff: 
delta: (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=1  (3,8)=1  (3,11)=4  (3,12)=4  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,11)=4  (4,12)=4  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (6,1)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (8,1)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,5)=1  (8,6)=1  (8,7)=1  (8,8)=1  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,9)=6  (11,10)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,10)=6  (14,4)=6  (14,5)=6  (14,6)=6  (14,7)=6  (14,8)=6  (14,9)=6  (14,10)=6 
! size mismatch, 10x10 instead of 2x2

TRAIN 23b5c85d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
diff: 
delta: (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=1  (3,9)=4  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (3,16)=4  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,9)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (4,16)=4  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,9)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (5,16)=4  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,9)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (6,16)=4  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=4  (7,16)=4  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=4  (8,16)=4  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=4  (9,16)=4  (10,7)=6  (10,8)=6  (10,9)=6  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=4  (10,16)=4  (11,7)=6  (11,8)=6  (11,9)=6  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (11,15)=4  (11,16)=4  (12,9)=4  (12,10)=4  (12,11)=4  (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=4  (12,16)=4  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,6)=3  (13,9)=4  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,15)=4  (13,16)=4  (14,2)=3  (14,3)=3  (14,4)=3  (14,5)=3  (14,6)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,6)=3  (16,2)=3  (16,3)=3  (16,4)=3  (16,5)=3  (16,6)=3 
! size mismatch, 10x10 instead of 3x3

TEST 23b5c85d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 1059.0 bits (1059.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-351] Checking task 253bf280.json: 8 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10426.4 = 10439.1
DL output with Mo: L = 12.6 + 26949.7 = 26962.4
DL input+output M: L = 25.2 + 37376.2 = 37401.4

# learning a model for train pairs
2.000	
1.590	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.429	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.375	OUT SPE ^.size = ^.size
1.332	IN  SPE ^.layer_0.shape.color = cyan
1.313	IN  SPE ^.color = black
1.303	OUT SPE ^.layer_0.shape.mask = Full
1.296	OUT SPE ^.color = black
0.522	
0.520	IN  DEL ^.layer_0
0.520	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)

DL input  with Mi: L = 33.0 + 8076.5 = 8109.5
DL output with Mo: L = 36.7 + 13953.3 = 13990.0
DL input+output M: L = 69.7 + 22029.8 = 22099.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 36.7 + 13953.3 = 13990.0
DL input+output M: L = 49.3 + 13953.3 = 14002.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,13) and color black and layers
diff: 
delta: (3,2)=8  (3,9)=8 
   (0.0 bits)
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (3,3)
diff: 
delta: (3,2)=8  (3,9)=8 
   (105.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
diff: 
delta: (3,2)=8  (3,9)=8 
! 12 wrong pixels (generated / expected)

TRAIN 253bf280.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,11) and color black and layers
diff: 
delta: (1,4)=8  (2,8)=8  (6,8)=8  (7,4)=8 
   (0.0 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (2,4)
diff: 
delta: (1,4)=8  (2,8)=8  (3,8)=3  (4,8)=3  (5,8)=3  (6,8)=8  (7,4)=8 
   (295.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
diff: 
delta: (1,4)=8  (2,8)=8  (6,8)=8  (7,4)=8 
! 16 wrong pixels (generated / expected)

TRAIN 253bf280.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,11) and color black and layers
diff: 
delta: (1,1)=8  (1,9)=8  (8,2)=8  (8,7)=8 
   (0.0 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,7) and color green and mask Full at (1,2)
diff: 
delta: (1,1)=8  (1,9)=8  (8,2)=8  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=8 
   (336.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
diff: 
delta: (1,1)=8  (1,9)=8  (8,2)=8  (8,7)=8 
! 18 wrong pixels (generated / expected)

TRAIN 253bf280.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,6) and color black and layers
diff: 
delta: (1,2)=8  (7,2)=8 
   (0.0 bits)
data: a background with size (9,6) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (2,2)
diff: 
delta: (1,2)=8  (7,2)=8 
   (103.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,6) and color black and layers
diff: 
delta: (1,2)=8  (7,2)=8 
! 11 wrong pixels (generated / expected)

TRAIN 253bf280.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,1)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta:
   (20.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,1)=8 
! 4 wrong pixels (generated / expected)

TRAIN 253bf280.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (5,6) and color black and layers
diff: 
delta: (1,1)=8  (3,4)=8 
   (0.0 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta: (3,4)=8 
   (59.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta: (1,1)=8  (3,4)=8 
! 5 wrong pixels (generated / expected)

TRAIN 253bf280.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:

data: a background with size (7,6) and color black and layers
diff: 
delta: (1,3)=8  (3,1)=8  (6,3)=8 
   (0.0 bits)
data: a background with size (7,6) and color black and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (2,3)
diff: 
delta: (1,3)=8  (3,1)=8  (6,3)=8 
   (138.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
diff: 
delta: (1,3)=8  (3,1)=8  (6,3)=8 
! 11 wrong pixels (generated / expected)

TRAIN 253bf280.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:

data: a background with size (12,11) and color black and layers
diff: 
delta: (1,3)=8  (4,6)=8  (4,10)=8  (5,1)=8  (9,3)=8 
   (0.0 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (7,1) and color green and mask Full at (2,3)
diff: 
delta: (1,3)=8  (4,6)=8  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=8  (5,1)=8  (9,3)=8 
   (336.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
diff: 
delta: (1,3)=8  (4,6)=8  (4,10)=8  (5,1)=8  (9,3)=8 
! 19 wrong pixels (generated / expected)

TRAIN 253bf280.json/8: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
diff: 
delta: (1,2)=8  (1,10)=8  (5,6)=8  (5,12)=8  (7,1)=8  (9,8)=8  (10,1)=8 
! 25 wrong pixels (generated / expected)

TEST 253bf280.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.6 sec (2.6 sec/task)
bits-train-error = 13953.3 bits (13953.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-350] Checking task 25d487eb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13781.6 = 13794.2
DL output with Mo: L = 12.6 + 22915.7 = 22928.3
DL input+output M: L = 25.2 + 36697.2 = 36722.5

# learning a model for train pairs
2.000	
1.268	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.732	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.346	OUT ADD ^.layer_00 = ^.layer_0
0.299	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.271	OUT SPE ^.size = ^.size
0.264	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j
0.257	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.252	IN  SPE ^.color = black
0.247	OUT SPE ^.layer_0.shape.mask = Full
0.244	OUT SPE ^.color = black
0.033	
0.033	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.1 + 2917.2 = 2972.3
DL output with Mo: L = 71.8 + 586.2 = 658.1
DL input+output M: L = 126.9 + 3503.4 = 3630.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 0.0 = 54.9
DL output with Mo: L = 71.8 + 586.2 = 658.1
DL input+output M: L = 126.8 + 586.2 = 713.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a point with color blue at (4,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _0: a rectangle with size (1,12) and color blue and mask Full at (4,3)
diff: 
delta:
   (19.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a point with color blue at (4,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _01: a point with color red at (3,4)
diff: 
delta: (4,3)=1  (4,4)=2  (4,5)=2  (5,4)=2 
! 18 wrong pixels (generated / expected)

TRAIN 25d487eb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a point with color green at (8,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _0: a rectangle with size (9,1) and color green and mask Full at (0,6)
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a point with color green at (8,6)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 25d487eb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a point with color red at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,12) and color black and layers
  _00: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _0: a rectangle with size (13,1) and color red and mask Full at (2,4)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a point with color red at (2,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,2)
  _01: a point with color green at (3,3)
diff: 
delta: (2,4)=2  (3,4)=3  (3,5)=3  (4,4)=3 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,2)
  _01: a point with color green at (3,4)
diff: 
delta: (2,4)=2  (3,3)=3  (3,5)=3  (4,4)=3 
! 19 wrong pixels (generated / expected)

TRAIN 25d487eb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (11,1)
  _01: a point with color cyan at (14,4)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST 25d487eb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.8 sec (6.8 sec/task)
bits-train-error = 586.2 bits (586.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-349] Checking task 25d8a9c8.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8510.1 = 8522.7
DL output with Mo: L = 12.6 + 4888.1 = 4900.7
DL input+output M: L = 25.2 + 13398.2 = 13423.4

# learning a model for train pairs
2.000	
1.355	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.000	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.800	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.693	OUT SPE ^.size = ^.size
0.622	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.590	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.563	OUT SPE ^.layer_0.shape.mask = Full
0.548	IN  SPE ^.layer_0.shape.mask = Full
0.126	
0.123	IN  DEL ^.layer_01
0.123	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 65.2 + 3594.1 = 3659.4
DL output with Mo: L = 34.8 + 545.4 = 580.2
DL input+output M: L = 100.0 + 4139.6 = 4239.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 34.8 + 545.4 = 580.2
DL input+output M: L = 73.6 + 545.4 = 619.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
diff: 
delta: (1,1)=3  (2,1)=3  (2,2)=3 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
diff: 
delta: (1,1)=3  (2,1)=3  (2,2)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color green and mask x.|xx at (1,1)
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4 
! 5 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
diff: 
delta: (0,0)=7# (2,1)=7# (2,2)=7#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
diff: 
delta: (0,0)=7# (2,1)=7# (2,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (2,1)
diff: 
delta: (0,0)=7# (1,0)=6  (1,1)=6  (1,2)=6 
! 5 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,2)=2 
   (0.0 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,3) and color black and mask Full at (0,0)
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2  (1,0)=4  (1,1)=4  (1,2)=4 
! 7 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta: (0,2)=4  (1,2)=4 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (2,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta: (0,2)=4  (1,2)=4 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=4  (1,2)=4 
! 7 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
diff: 
delta: (1,0)=3  (1,1)=2  (1,2)=3 
! 6 wrong pixels (generated / expected)

TEST 25d8a9c8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 52.2 sec (52.2 sec/task)
bits-train-error = 545.4 bits (545.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-348] Checking task 25ff71a9.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4823.0 = 4835.6
DL output with Mo: L = 12.6 + 4823.0 = 4835.6
DL input+output M: L = 25.2 + 9646.0 = 9671.2

# learning a model for train pairs
2.000	
1.382	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.580	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.472	OUT SPE ^.size = ^.size
0.408	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 0)
0.388	IN  SPE ^.color = black
0.368	OUT SPE ^.color = black
0.015	
0.015	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 1708.0 = 1746.9
DL output with Mo: L = 31.7 + 0.0 = 31.7
DL input+output M: L = 70.7 + 1708.0 = 1778.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 31.7 + 0.0 = 31.7
DL input+output M: L = 70.6 + 0.0 = 70.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,1)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
correct output grid

TEST 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
diff: 
delta:
correct output grid

TEST 25ff71a9.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-347] Checking task 264363fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 506016.8 = 506029.4
DL output with Mo: L = 12.6 + 492697.4 = 492710.0
DL input+output M: L = 25.2 + 998714.2 = 998739.4

# learning a model for train pairs
2.000	
1.093	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.329	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.328	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.262	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.201	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.193	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.187	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.183	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.091	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 46781.9 = 46820.8
DL output with Mo: L = 184.9 + 44508.1 = 44693.1
DL input+output M: L = 223.7 + 91290.1 = 91513.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 184.9 + 44508.1 = 44693.1
DL input+output M: L = 223.7 + 44508.1 = 44731.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxx.xxxx|xx.................xxxxx...xxx|xx.................xxxx.....xx|xx.................xxxxx...xxx|xx.................xxxxxx.xxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (2,25)=2  (3,24)=3  (3,25)=2  (3,26)=3  (4,23)=2  (4,24)=2  (4,25)=3  (4,26)=2  (4,27)=2  (5,5)=3  (5,24)=3  (5,25)=2  (5,26)=3  (6,25)=2  (25,17)=3 
   (0.0 bits)
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (1,18) and color red and mask Full at (25,8)
  _011: a rectangle with size (1,17) and color red and mask Full at (5,2)
  _0111: a rectangle with size (15,1) and color red and mask Full at (1,5)
  _01111: a rectangle with size (9,1) and color red and mask Full at (18,17)
  _011111: a rectangle with size (3,3) and color green and mask Full at (4,4)
  _0111111: a rectangle with size (3,3) and color green and mask Full at (24,16)
diff: 
delta: (5,5)=3  (25,17)=3 
   (1268.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxx.xxxx|xx.................xxxxx...xxx|xx.................xxxx.....xx|xx.................xxxxx...xxx|xx.................xxxxxx.xxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (2,25)=2  (3,24)=3  (3,25)=2  (3,26)=3  (4,23)=2  (4,24)=2  (4,25)=3  (4,26)=2  (4,27)=2  (5,5)=3  (5,24)=3  (5,25)=2  (5,26)=3  (6,25)=2  (25,17)=3 
! size mismatch, 10x10 instead of 30x30

TRAIN 264363fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (30,30) and color red and layers
  _0: a rectangle with size (30,30) and color blue and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|x.................xxxx.....xxx|x.................xxxxxx.xxxxx|x.................xxxxxx.xxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (3,24)=3  (4,24)=3  (5,22)=3  (5,23)=3  (5,24)=4  (5,25)=3  (5,26)=3  (6,24)=3  (7,14)=4  (7,24)=3  (10,5)=4  (24,16)=4 
   (0.0 bits)
data: a background with size (30,30) and color red and layers
  _0: a rectangle with size (30,30) and color blue and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (9,17) and color green and mask ....x........x...|....x........x...|xxxxxxxxxxxxx.xxx|....x........x...|....x........x...|xxxx.xxxxxxxxxxxx|....x........x...|....x........x...|....x........x... at (5,1)
  _011: a rectangle with size (1,18) and color green and mask Full at (24,6)
  _0111: a rectangle with size (9,1) and color green and mask Full at (15,16)
  _01111: a rectangle with size (3,1) and color green and mask Full at (25,16)
  _011111: a rectangle with size (1,1) and color yellow and mask Full at (7,14)
  _0111111: a rectangle with size (1,1) and color yellow and mask Full at (10,5)
diff: 
delta: (24,16)=4 
   (1346.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color red and layers
  _0: a rectangle with size (30,30) and color blue and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|x.................xxxx.....xxx|x.................xxxxxx.xxxxx|x.................xxxxxx.xxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (3,24)=3  (4,24)=3  (5,22)=3  (5,23)=3  (5,24)=4  (5,25)=3  (5,26)=3  (6,24)=3  (7,14)=4  (7,24)=3  (10,5)=4  (24,16)=4 
! size mismatch, 10x10 instead of 30x30

TRAIN 264363fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (6,23)=4  (10,15)=4  (12,4)=4  (20,18)=4  (24,24)=5# (25,23)=6  (25,24)=5# (25,25)=6  (26,23)=6  (26,24)=4  (26,25)=6  (27,23)=6  (27,24)=5# (27,25)=6  (28,24)=5#
   (0.0 bits)
data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (15,1) and color grey and mask Full at (9,4)
  _011: a rectangle with size (13,1) and color grey and mask Full at (2,15)
  _0111: a rectangle with size (13,1) and color grey and mask Full at (2,23)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (5,22)
  _011111: a rectangle with size (3,3) and color pink and mask Full at (9,14)
  _0111111: a rectangle with size (7,1) and color grey and mask Full at (16,18)
diff: 
delta: (6,23)=4  (10,15)=4  (11,3)=6  (11,5)=6  (12,3)=6  (12,4)=4  (12,5)=6  (13,3)=6  (13,5)=6  (19,17)=6  (19,19)=6  (20,17)=6  (20,18)=4  (20,19)=6  (21,17)=6  (21,19)=6 
   (1835.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (6,23)=4  (10,15)=4  (12,4)=4  (20,18)=4  (24,24)=5# (25,23)=6  (25,24)=5# (25,25)=6  (26,23)=6  (26,24)=4  (26,25)=6  (27,23)=6  (27,24)=5# (27,25)=6  (28,24)=5#
! size mismatch, 10x10 instead of 30x30

TRAIN 264363fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color yellow and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xx...xxxxxxx.................x|x.....xxxxxx.................x|xx...xxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (9,6)=2  (17,23)=2  (22,2)=3  (22,3)=3  (22,4)=3  (23,1)=8  (23,2)=8  (23,3)=2  (23,4)=8  (23,5)=8  (24,2)=3  (24,3)=3  (24,4)=3  (24,18)=2 
! size mismatch, 10x10 instead of 30x30

TEST 264363fd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.3 sec (59.3 sec/task)
bits-train-error = 44508.1 bits (44508.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-346] Checking task 272f95fa.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 46213.0 = 46225.6
DL output with Mo: L = 12.6 + 128125.3 = 128137.9
DL input+output M: L = 25.2 + 174338.3 = 174363.5

# learning a model for train pairs
2.000	
1.118	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.763	OUT ADD ^.layer_0 = ^.layer_0
0.516	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.365	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.262	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.195	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.152	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.148	OUT SPE ^.size = ^.size
0.146	IN  SPE ^.layer_0.shape.color = cyan
0.143	OUT SPE ^.layer_0111.shape.size = tiling('(2, 3), 2, 2)
0.142	IN  SPE ^.color = black
0.141	OUT SPE ^.layer_01111.shape.size.j = ^.size.i / '3
0.140	OUT SPE ^.layer_011111.pos.j = '0
0.138	OUT SPE ^.layer_011.shape.size = tiling('(2, 3), 1, 2)
0.138	OUT SPE ^.layer_011111.shape.color = yellow
0.137	OUT SPE ^.layer_011.pos.j = bottom(^.layer_0) / '3
0.136	OUT SPE ^.layer_0111.pos.j = bottom(^.layer_0) / '3
0.135	OUT SPE ^.layer_01111.pos.i = bottom(^.layer_0) / '2
0.135	OUT SPE ^.layer_01.shape.mask = Full
0.134	OUT SPE ^.layer_011.shape.mask = Full
0.134	OUT SPE ^.layer_0111.shape.mask = Full
0.133	OUT SPE ^.layer_01111.shape.mask = Full
0.133	OUT SPE ^.layer_011111.shape.mask = Full
0.132	OUT SPE ^.color = black
0.018	
0.018	IN  GEN ^.layer_0.shape.color = ?
0.018	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size tiling('(2, 3), 1, 2) and color ? and mask Full at (?,bottom(^.layer_0) / '3)
  _0111: a rectangle with size tiling('(2, 3), 2, 2) and color ? and mask Full at (?,bottom(^.layer_0) / '3)
  _01111: a rectangle with size (?,^.size.i / '3) and color ? and mask Full at (bottom(^.layer_0) / '2,?)
  _011111: a rectangle with size (?,?) and color yellow and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 5266.6 = 5308.9
DL output with Mo: L = 317.2 + 1927.9 = 2245.1
DL input+output M: L = 359.5 + 7194.5 = 7554.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size tiling('(2, 3), 1, 2) and color ? and mask Full at (?,bottom(^.layer_0) / '3)
  _0111: a rectangle with size tiling('(2, 3), 2, 2) and color ? and mask Full at (?,bottom(^.layer_0) / '3)
  _01111: a rectangle with size (?,^.size.i / '3) and color ? and mask Full at (bottom(^.layer_0) / '2,?)
  _011111: a rectangle with size (?,?) and color yellow and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 317.2 + 1927.9 = 2245.1
DL input+output M: L = 356.0 + 1927.9 = 2283.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
  _01: a rectangle with size (4,7) and color green and mask Full at (3,12)
  _011: a rectangle with size (2,6) and color red and mask Full at (0,5)
  _0111: a rectangle with size (4,6) and color pink and mask Full at (3,5)
  _01111: a rectangle with size (10,6) and color blue and mask Full at (8,5)
  _011111: a rectangle with size (4,4) and color yellow and mask Full at (3,0)
diff: 
delta:
   (102.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
diff: 
delta:
! 152 wrong pixels (generated / expected)

TRAIN 272f95fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
  _01: a rectangle with size (4,6) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,6) and color pink and mask Full at (5,3)
  _0111: a rectangle with size (4,6) and color blue and mask Full at (8,3)
  _01111: a rectangle with size (2,4) and color green and mask Full at (5,10)
  _011111: a rectangle with size (2,2) and color yellow and mask Full at (5,0)
diff: 
delta:
   (90.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
diff: 
delta:
! 76 wrong pixels (generated / expected)

TRAIN 272f95fa.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 272f95fa.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.4 sec (7.4 sec/task)
bits-train-error = 1927.9 bits (1927.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-345] Checking task 27a28665.json: 7 train, 3 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11300.7 = 11313.3
DL output with Mo: L = 12.6 + 1092.7 = 1105.3
DL input+output M: L = 25.2 + 12393.3 = 12418.5

# learning a model for train pairs
2.000	
1.336	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.920	OUT SPE ^.size = '(1, 1)
0.905	IN  SPE ^.color = black
0.588	
0.585	IN  DEL ^.layer_0
0.585	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 3586.3 = 3625.2
DL output with Mo: L = 18.1 + 627.6 = 645.7
DL input+output M: L = 57.0 + 4213.9 = 4270.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 18.1 + 627.6 = 645.7
DL input+output M: L = 30.7 + 627.6 = 658.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,2)=0  (1,1)=0  (2,0)=0  (2,2)=0 
   (0.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,2)=0  (1,1)=0  (2,0)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
   (0.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
   (0.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=0  (1,0)=0  (2,1)=0  (2,2)=0 
   (0.0 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=0  (1,0)=0  (2,1)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,0)=0  (1,0)=0  (2,1)=0  (2,2)=0 
   (0.0 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,0)=0  (1,0)=0  (2,1)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,2)=0  (1,1)=0  (2,0)=0  (2,2)=0 
   (0.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,2)=0  (1,1)=0  (2,0)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=0  (0,2)=0  (2,0)=0  (2,2)=0 
   (0.0 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=0  (0,2)=0  (2,0)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,0)=0  (0,2)=0  (2,0)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,2)=0  (1,1)=0  (2,0)=0  (2,2)=0 
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/3: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 627.6 bits (627.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-344] Checking task 28bf18c6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6638.4 = 6651.0
DL output with Mo: L = 12.6 + 7771.3 = 7783.9
DL input+output M: L = 25.2 + 14409.7 = 14434.9

# learning a model for train pairs
2.000	
1.276	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.575	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.404	OUT SPE ^.layer_0.shape = tiling(^.layer_0.shape, 1, 2)
0.349	OUT SPE ^.size = tiling(^.layer_0.shape.size, 1, 2)
0.315	OUT SPE ^.layer_0.pos = '(0, 0)
0.304	IN  SPE ^.color = black
0.294	OUT SPE ^.color = black
0.013	
0.013	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.layer_0.shape.size, 1, 2) and color black and layers
  _0: tiling(^.layer_0.shape, 1, 2) at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 1872.3 = 1911.3
DL output with Mo: L = 53.3 + 0.0 = 53.3
DL input+output M: L = 92.3 + 1872.3 = 1964.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.layer_0.shape.size, 1, 2) and color black and layers
  _0: tiling(^.layer_0.shape, 1, 2) at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 53.3 + 0.0 = 53.3
DL input+output M: L = 92.2 + 0.0 = 92.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|.x.|xxx at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xx.xx.|.x..x.|xxxxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|.x.|xxx at (1,1)
diff: 
delta:
correct output grid

TRAIN 28bf18c6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (5,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color red and mask .x..x.|xxxxxx|xx.xx. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (5,2)
diff: 
delta:
correct output grid

TRAIN 28bf18c6.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x..|.x. at (1,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask .xx.xx|x..x..|.x..x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x..|.x. at (1,4)
diff: 
delta:
correct output grid

TRAIN 28bf18c6.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|x.. at (4,1)
diff: 
delta:
correct output grid

TEST 28bf18c6.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-343] Checking task 28e73c20.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1115.7 = 1128.3
DL output with Mo: L = 12.6 + 94806.9 = 94819.5
DL input+output M: L = 25.2 + 95922.6 = 95947.8

# learning a model for train pairs
2.000	
1.085	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.976	IN  SPE ^.color = black
0.966	OUT SPE ^.size = ^.size
0.956	OUT SPE ^.layer_0.shape.size = ^.size - (2, 1)
0.950	OUT SPE ^.layer_0.pos = '(1, 0)
0.946	OUT SPE ^.color = green
0.943	OUT SPE ^.layer_0.shape.color = black
0.063	
0.063	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size ^.size - (2, 1) and color black and mask ? at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 12.7 + 992.8 = 1005.5
DL output with Mo: L = 65.5 + 4817.7 = 4883.2
DL input+output M: L = 78.3 + 5810.5 = 5888.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size ^.size - (2, 1) and color black and mask ? at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 65.5 + 4817.7 = 4883.2
DL input+output M: L = 78.1 + 4817.7 = 4895.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|....x|.x..x|.xxxx at (1,0)
diff: 
delta:
   (26.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 28e73c20.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (6,7) and color black and mask xxxxxxx|......x|.xxxx.x|.x..x.x|.x....x|.xxxxxx at (1,0)
diff: 
delta:
   (48.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 28e73c20.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (13,14) and color black and mask xxxxxxxxxxxxxx|.............x|.xxxxxxxxxxx.x|.x.........x.x|.x.xxxxxxx.x.x|.x.x.....x.x.x|.x.x.xxx.x.x.x|.x.x.x...x.x.x|.x.x.xxxxx.x.x|.x.x.......x.x|.x.xxxxxxxxx.x|.x...........x|.xxxxxxxxxxxxx at (1,0)
diff: 
delta:
   (189.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
diff: 
delta:
! 84 wrong pixels (generated / expected)

TRAIN 28e73c20.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (13,13) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (13,13) and color green and layers
  _0: a rectangle with size (11,12) and color black and mask xxxxxxxxxxxx|...........x|.xxxxxxxxx.x|.x.......x.x|.x.xxxxx.x.x|.x.x...x.x.x|.x.x.xxx.x.x|.x.x.....x.x|.x.xxxxxxx.x|.x.........x|.xxxxxxxxxxx at (1,0)
diff: 
delta:
   (139.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
diff: 
delta:
! 60 wrong pixels (generated / expected)

TRAIN 28e73c20.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (10,10) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (8,9) and color black and mask xxxxxxxxx|........x|.xxxxxx.x|.x....x.x|.x.x..x.x|.x.xxxx.x|.x......x|.xxxxxxxx at (1,0)
diff: 
delta:
   (78.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 28e73c20.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
diff: 
delta:
! 128 wrong pixels (generated / expected)

TEST 28e73c20.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 4817.7 bits (4817.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-342] Checking task 29623171.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 57218.6 = 57231.2
DL output with Mo: L = 12.6 + 59469.3 = 59481.9
DL input+output M: L = 25.2 + 116687.9 = 116713.1

# learning a model for train pairs
2.000	
1.295	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.537	OUT ADD ^.layer_0 = ^.layer_0
0.382	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.321	IN  SPE ^.layer_0.shape.mask = ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.293	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.282	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.271	OUT SPE ^.layer_01.shape = scaleTo(^.layer_011.shape, '(3, 3))
0.261	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.250	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.239	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.229	OUT SPE ^.size = ^.size
0.225	IN  ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.213	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.210	IN  SPE ^.layer_0.shape.color = grey
0.207	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i + 3
0.206	OUT SPE ^.layer_01.pos.j = ^.layer_01111.pos.i - ^.layer_0111.pos.j - ^.layer_0.pos.j
0.204	IN  SPE ^.layer_0100.shape.mask = Full
0.202	IN  SPE ^.layer_011.shape.mask = Full
0.201	IN  SPE ^.color = black
0.200	OUT SPE ^.color = black
0.065	
0.065	IN  GEN ^.layer_0.shape.color = ?
0.065	IN  GEN ^.layer_011.shape.mask = ?
0.065	IN  GEN ^.layer_0100.shape.mask = ?
0.065	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: scaleTo(^.layer_011.shape, '(3, 3)) at (^.layer_01.pos.i + 3,^.layer_01111.pos.i - ^.layer_0111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 306.6 + 7680.3 = 7986.9
DL output with Mo: L = 135.8 + 3437.8 = 3573.7
DL input+output M: L = 442.4 + 11118.2 = 11560.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: scaleTo(^.layer_011.shape, '(3, 3)) at (^.layer_01.pos.i + 3,^.layer_01111.pos.i - ^.layer_0111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 301.1 + 0.0 = 301.1
DL output with Mo: L = 135.8 + 3437.8 = 3573.7
DL input+output M: L = 437.0 + 3437.8 = 3874.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,1) and color blue and mask Full at (1,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _010: a point with color blue at (1,9)
  _01: a rectangle with size (1,1) and color blue and mask Full at (5,9)
  _011: a rectangle with size (1,1) and color blue and mask Full at (8,8)
  _0111: a point with color blue at (9,1)
  _01111: a point with color blue at (9,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (8,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,1) and color blue and mask Full at (1,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _010: a point with color blue at (1,9)
  _01: a rectangle with size (1,1) and color blue and mask Full at (5,9)
  _011: a rectangle with size (1,1) and color blue and mask Full at (8,8)
  _0111: a point with color blue at (9,1)
  _01111: a point with color blue at (9,10)
diff: 
delta:
correct output grid

TRAIN 29623171.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (1,4) and color red and mask Full at (0,5)
  _010: a point with color red at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,10)
  _011: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _0111: a point with color red at (6,9)
  _01111: a point with color red at (9,0)
diff: 
delta: (0,6)=0  (9,6)=2  (9,10)=2 
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (4,0)
diff: 
delta: (0,8)=2  (0,9)=2  (0,10)=2  (1,8)=2  (1,9)=2  (1,10)=2  (2,8)=2  (2,9)=2  (2,10)=2 
   (343.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (1,4) and color red and mask Full at (0,5)
  _010: a point with color red at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,10)
  _011: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _0111: a point with color red at (6,9)
  _01111: a point with color red at (9,0)
diff: 
delta: (0,6)=0  (9,6)=2  (9,10)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (1,4) and color red and mask Full at (0,5)
  _010: a point with color red at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,10)
  _0111: a point with color red at (6,9)
  _01111: a point with color red at (9,0)
diff: 
delta: (0,6)=0  (9,6)=2  (9,10)=2 
! 27 wrong pixels (generated / expected)

TRAIN 29623171.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _010: a point with color green at (5,1)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (5,4)
  _011: a rectangle with size (1,1) and color green and mask Full at (1,9)
  _0111: a point with color green at (9,1)
  _01111: a point with color green at (9,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Full at (8,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0100: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _010: a point with color green at (5,1)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (5,4)
  _011: a rectangle with size (1,1) and color green and mask Full at (1,9)
  _0111: a point with color green at (9,1)
  _01111: a point with color green at (9,4)
diff: 
delta:
correct output grid

TRAIN 29623171.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
Arc_common.Undefined_result("Grid.Trans.scale_to: invalid scaling vector")

TEST 29623171.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 5.5 sec (5.5 sec/task)
bits-train-error = 3437.8 bits (3437.8 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-341] Checking task 29c11459.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1929.6 = 1942.2
DL output with Mo: L = 12.6 + 8547.7 = 8560.3
DL input+output M: L = 25.2 + 10477.2 = 10502.5

# learning a model for train pairs
2.000	
1.647	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.289	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.077	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.856	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.806	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.763	OUT SPE ^.size = ^.size
0.738	IN  SPE ^.color = black
0.713	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.696	OUT SPE ^.layer_0.shape.size.j = ^.size.i
0.674	OUT SPE ^.layer_011.pos = average(^.layer_0.pos, ^.layer_01.pos)
0.657	OUT SPE ^.layer_01.shape.size.j = ^.size.i
0.644	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.622	OUT SPE ^.layer_01.pos = average(^.layer_0.pos, ^.layer_01.pos) + (0, 1)
0.609	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.597	OUT SPE ^.layer_011.shape.color = grey
0.589	OUT SPE ^.layer_0.shape.size.i = 1
0.581	OUT SPE ^.layer_0.shape.mask = Full
0.574	OUT SPE ^.layer_01.shape.size.i = 1
0.566	OUT SPE ^.layer_01.shape.mask = Full
0.560	OUT SPE ^.color = black
0.042	
0.042	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.i) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.size.i) and color ^.layer_01.shape.color and mask Full at average(^.layer_0.pos, ^.layer_01.pos) + (0, 1)
  _011: a point with color grey at average(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 1006.9 = 1052.7
DL output with Mo: L = 156.4 + 0.0 = 156.4
DL input+output M: L = 202.2 + 1006.9 = 1209.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.i) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.size.i) and color ^.layer_01.shape.color and mask Full at average(^.layer_0.pos, ^.layer_01.pos) + (0, 1)
  _011: a point with color grey at average(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 156.4 + 0.0 = 156.4
DL input+output M: L = 202.1 + 0.0 = 202.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,11) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (1,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (1,6)
  _011: a point with color grey at (1,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (1,10)
diff: 
delta:
correct output grid

TRAIN 29c11459.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,11) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color orange at (3,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (3,0)
  _01: a rectangle with size (1,5) and color orange and mask Full at (3,6)
  _011: a point with color grey at (3,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color orange at (3,10)
diff: 
delta:
correct output grid

TRAIN 29c11459.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color cyan at (1,10)
diff: 
delta: (4,0)=6  (4,10)=9#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,11) and color black and layers
  _0: a point with color cyan at (1,10)
  _01: a point with color yellow at (1,0)
diff: 
delta: (4,0)=6  (4,10)=9#
! 20 wrong pixels (generated / expected)

TEST 29c11459.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-340] Checking task 29ec7d0e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 342123.1 = 342135.7
DL output with Mo: L = 12.6 + 318786.2 = 318798.8
DL input+output M: L = 25.2 + 660909.2 = 660934.5

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.892	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.873	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.846	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.839	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.823	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.812	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	IN  SPE ^.layer_01111111.shape.mask = Full
0.809	IN  SPE ^.color = blue
0.809	IN  SPE ^.layer_0.shape.color = black
0.808	IN  SPE ^.layer_01.shape.mask = Full
0.808	IN  SPE ^.layer_011.shape.mask = Full
0.808	IN  SPE ^.layer_0111.shape.mask = Full
0.807	IN  SPE ^.layer_011111.shape.mask = Full
0.807	IN  SPE ^.layer_0111111.shape.mask = Full
0.001	
0.001	IN  DEL ^.layer_0
0.001	IN  DEL ^.layer_01111111
0.001	IN  DEL ^.layer_0111111
0.000	IN  DEL ^.layer_011111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_01111
0.000	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 228.7 + 275766.4 = 275995.1
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 249.9 + 275766.4 = 276016.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,18) and color blue and layers
diff: 
delta: (0,3)=0  (0,4)=0  (1,1)=2  (1,2)=3  (1,3)=0  (1,4)=0  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,11)=2  (1,12)=3  (1,13)=4  (1,14)=5# (1,16)=2  (1,17)=3  (2,1)=3  (2,2)=5# (2,3)=0  (2,4)=0  (2,6)=3  (2,7)=5# (2,8)=2  (2,9)=4  (2,10)=0  (2,11)=0  (2,12)=5# (2,13)=2  (2,14)=4  (2,16)=3  (2,17)=5# (3,1)=4  (3,2)=2  (3,3)=5# (3,4)=3  (3,6)=4  (3,7)=2  (3,8)=5# (3,9)=3  (3,10)=0  (3,11)=0  (3,12)=2  (3,13)=5# (3,14)=3  (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=0  (4,7)=0  (4,8)=3  (4,9)=2  (4,11)=5# (4,12)=4  (4,13)=3  (4,14)=2  (4,16)=5# (4,17)=4  (5,6)=0  (5,7)=0  (5,11)=0  (5,12)=0  (5,13)=0  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,6)=2  (6,7)=3  (6,8)=4  (6,9)=5# (6,11)=0  (6,12)=0  (6,13)=0  (6,14)=5# (6,16)=2  (6,17)=3  (7,1)=3  (7,2)=5# (7,3)=2  (7,4)=4  (7,6)=3  (7,7)=5# (7,8)=2  (7,9)=4  (7,11)=3  (7,12)=5# (7,13)=2  (7,14)=4  (7,16)=3  (7,17)=5# (8,1)=4  (8,2)=2  (8,3)=5# (8,4)=3  (8,6)=4  (8,7)=2  (8,8)=5# (8,9)=3  (8,11)=4  (8,12)=2  (8,13)=5# (8,14)=3  (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,3)=3  (9,4)=2  (9,6)=5# (9,7)=4  (9,8)=3  (9,9)=2  (9,11)=5# (9,12)=4  (9,13)=3  (9,14)=2  (9,16)=5# (9,17)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,4)=5# (11,6)=2  (11,7)=3  (11,8)=4  (11,9)=5# (11,11)=2  (11,12)=3  (11,13)=4  (11,14)=5# (11,16)=2  (11,17)=3  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=4  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=4  (12,11)=3  (12,12)=5# (12,13)=2  (12,14)=4  (12,16)=3  (12,17)=5# (13,1)=4  (13,2)=2  (13,3)=5# (13,4)=3  (13,6)=4  (13,7)=2  (13,8)=5# (13,9)=3  (13,11)=4  (13,12)=2  (13,13)=5# (13,14)=3  (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,3)=3  (14,4)=2  (14,6)=5# (14,7)=4  (14,8)=3  (14,9)=2  (14,11)=5# (14,12)=4  (14,13)=3  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,4)=5# (16,6)=2  (16,7)=3  (16,8)=4  (16,9)=5# (16,11)=2  (16,12)=3  (16,13)=4  (16,14)=5# (16,16)=2  (16,17)=3  (17,1)=3  (17,2)=5# (17,3)=2  (17,4)=4  (17,6)=3  (17,7)=5# (17,8)=2  (17,9)=4  (17,11)=3  (17,12)=5# (17,13)=2  (17,14)=4  (17,16)=3  (17,17)=5#
   (0.0 bits)
data: 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
1 3 5#2 4 1 3 5#2 4 1 3 5#2 4 1 3 5#
1 4 2 5#3 1 4 2 5#3 1 4 2 5#3 1 4 2 
1 5#4 3 2 1 5#4 3 2 1 5#4 3 2 1 5#4 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
1 3 5#2 4 1 3 5#2 4 1 3 5#2 4 1 3 5#
1 4 2 5#3 1 4 2 5#3 1 4 2 5#3 1 4 2 
1 5#4 3 2 1 5#4 3 2 1 5#4 3 2 1 5#4 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
1 3 5#2 4 1 3 5#2 4 1 3 5#2 4 1 3 5#
1 4 2 5#3 1 4 2 5#3 1 4 2 5#3 1 4 2 
1 5#4 3 2 1 5#4 3 2 1 5#4 3 2 1 5#4 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
1 3 5#2 4 1 3 5#2 4 1 3 5#2 4 1 3 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
diff: 
delta: (0,3)=0  (0,4)=0  (1,1)=2  (1,2)=3  (1,3)=0  (1,4)=0  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,11)=2  (1,12)=3  (1,13)=4  (1,14)=5# (1,16)=2  (1,17)=3  (2,1)=3  (2,2)=5# (2,3)=0  (2,4)=0  (2,6)=3  (2,7)=5# (2,8)=2  (2,9)=4  (2,10)=0  (2,11)=0  (2,12)=5# (2,13)=2  (2,14)=4  (2,16)=3  (2,17)=5# (3,1)=4  (3,2)=2  (3,3)=5# (3,4)=3  (3,6)=4  (3,7)=2  (3,8)=5# (3,9)=3  (3,10)=0  (3,11)=0  (3,12)=2  (3,13)=5# (3,14)=3  (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=0  (4,7)=0  (4,8)=3  (4,9)=2  (4,11)=5# (4,12)=4  (4,13)=3  (4,14)=2  (4,16)=5# (4,17)=4  (5,6)=0  (5,7)=0  (5,11)=0  (5,12)=0  (5,13)=0  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,6)=2  (6,7)=3  (6,8)=4  (6,9)=5# (6,11)=0  (6,12)=0  (6,13)=0  (6,14)=5# (6,16)=2  (6,17)=3  (7,1)=3  (7,2)=5# (7,3)=2  (7,4)=4  (7,6)=3  (7,7)=5# (7,8)=2  (7,9)=4  (7,11)=3  (7,12)=5# (7,13)=2  (7,14)=4  (7,16)=3  (7,17)=5# (8,1)=4  (8,2)=2  (8,3)=5# (8,4)=3  (8,6)=4  (8,7)=2  (8,8)=5# (8,9)=3  (8,11)=4  (8,12)=2  (8,13)=5# (8,14)=3  (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,3)=3  (9,4)=2  (9,6)=5# (9,7)=4  (9,8)=3  (9,9)=2  (9,11)=5# (9,12)=4  (9,13)=3  (9,14)=2  (9,16)=5# (9,17)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,4)=5# (11,6)=2  (11,7)=3  (11,8)=4  (11,9)=5# (11,11)=2  (11,12)=3  (11,13)=4  (11,14)=5# (11,16)=2  (11,17)=3  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=4  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=4  (12,11)=3  (12,12)=5# (12,13)=2  (12,14)=4  (12,16)=3  (12,17)=5# (13,1)=4  (13,2)=2  (13,3)=5# (13,4)=3  (13,6)=4  (13,7)=2  (13,8)=5# (13,9)=3  (13,11)=4  (13,12)=2  (13,13)=5# (13,14)=3  (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,3)=3  (14,4)=2  (14,6)=5# (14,7)=4  (14,8)=3  (14,9)=2  (14,11)=5# (14,12)=4  (14,13)=3  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,4)=5# (16,6)=2  (16,7)=3  (16,8)=4  (16,9)=5# (16,11)=2  (16,12)=3  (16,13)=4  (16,14)=5# (16,16)=2  (16,17)=3  (17,1)=3  (17,2)=5# (17,3)=2  (17,4)=4  (17,6)=3  (17,7)=5# (17,8)=2  (17,9)=4  (17,11)=3  (17,12)=5# (17,13)=2  (17,14)=4  (17,16)=3  (17,17)=5#
correct output grid

TRAIN 29ec7d0e.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (18,18) and color blue and layers
diff: 
delta: (0,7)=0  (0,8)=0  (0,9)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,5)=4  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (7,1)=2  (7,2)=3  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,1)=4  (9,3)=4  (9,5)=4  (9,7)=4  (9,9)=4  (9,11)=4  (9,13)=4  (9,15)=4  (9,17)=4  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=3  (11,11)=2  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=3  (11,17)=2  (12,7)=0  (12,8)=0  (12,9)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=5# (13,11)=6  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
   (0.0 bits)
data: 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 
1 3 5#1 3 5#1 3 5#1 3 5#1 3 5#1 3 5#
1 4 1 4 1 4 1 4 1 4 1 4 1 4 1 4 1 4 
1 5#3 1 5#3 1 5#3 1 5#3 1 5#3 1 5#3 
1 6 5#4 3 2 1 6 5#4 3 2 1 6 5#4 3 2 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 
1 3 5#1 3 5#1 3 5#1 3 5#1 3 5#1 3 5#
1 4 1 4 1 4 1 4 1 4 1 4 1 4 1 4 1 4 
1 5#3 1 5#3 1 5#3 1 5#3 1 5#3 1 5#3 
1 6 5#4 3 2 1 6 5#4 3 2 1 6 5#4 3 2 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 
1 3 5#1 3 5#1 3 5#1 3 5#1 3 5#1 3 5#
1 4 1 4 1 4 1 4 1 4 1 4 1 4 1 4 1 4 
1 5#3 1 5#3 1 5#3 1 5#3 1 5#3 1 5#3 
1 6 5#4 3 2 1 6 5#4 3 2 1 6 5#4 3 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
diff: 
delta: (0,7)=0  (0,8)=0  (0,9)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,5)=4  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (7,1)=2  (7,2)=3  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,1)=4  (9,3)=4  (9,5)=4  (9,7)=4  (9,9)=4  (9,11)=4  (9,13)=4  (9,15)=4  (9,17)=4  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=3  (11,11)=2  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=3  (11,17)=2  (12,7)=0  (12,8)=0  (12,9)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=5# (13,11)=6  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
correct output grid

TRAIN 29ec7d0e.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (18,18) and color blue and layers
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,6)=6  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,12)=0  (2,13)=0  (2,14)=0  (2,15)=0  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (3,13)=0  (3,14)=0  (3,15)=0  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=0  (4,15)=0  (4,16)=2  (4,17)=6  (5,1)=0  (5,2)=0  (5,3)=2  (5,4)=7# (5,5)=5# (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=7# (5,12)=0  (5,13)=0  (5,14)=0  (5,15)=0  (5,16)=4  (5,17)=2  (6,1)=0  (6,2)=0  (6,3)=5# (6,4)=4  (6,5)=3  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=5# (6,11)=4  (6,12)=3  (6,13)=0  (6,14)=0  (6,15)=0  (6,16)=6  (6,17)=5# (7,1)=0  (7,2)=0  (7,13)=0  (7,14)=0  (7,15)=0  (8,1)=0  (8,2)=0  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
   (0.0 bits)
data: 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 
1 3 5#7#2 4 6 1 3 5#7#2 4 6 1 3 5#7#
1 4 7#3 6 2 5#1 4 7#3 6 2 5#1 4 7#3 
1 5#2 6 3 7#4 1 5#2 6 3 7#4 1 5#2 6 
1 6 4 2 7#5#3 1 6 4 2 7#5#3 1 6 4 2 
1 7#6 5#4 3 2 1 7#6 5#4 3 2 1 7#6 5#
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 
1 3 5#7#2 4 6 1 3 5#7#2 4 6 1 3 5#7#
1 4 7#3 6 2 5#1 4 7#3 6 2 5#1 4 7#3 
1 5#2 6 3 7#4 1 5#2 6 3 7#4 1 5#2 6 
1 6 4 2 7#5#3 1 6 4 2 7#5#3 1 6 4 2 
1 7#6 5#4 3 2 1 7#6 5#4 3 2 1 7#6 5#
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 
1 3 5#7#2 4 6 1 3 5#7#2 4 6 1 3 5#7#
1 4 7#3 6 2 5#1 4 7#3 6 2 5#1 4 7#3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,6)=6  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,12)=0  (2,13)=0  (2,14)=0  (2,15)=0  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (3,13)=0  (3,14)=0  (3,15)=0  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=0  (4,15)=0  (4,16)=2  (4,17)=6  (5,1)=0  (5,2)=0  (5,3)=2  (5,4)=7# (5,5)=5# (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=7# (5,12)=0  (5,13)=0  (5,14)=0  (5,15)=0  (5,16)=4  (5,17)=2  (6,1)=0  (6,2)=0  (6,3)=5# (6,4)=4  (6,5)=3  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=5# (6,11)=4  (6,12)=3  (6,13)=0  (6,14)=0  (6,15)=0  (6,16)=6  (6,17)=5# (7,1)=0  (7,2)=0  (7,13)=0  (7,14)=0  (7,15)=0  (8,1)=0  (8,2)=0  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
correct output grid

TRAIN 29ec7d0e.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (18,18) and color blue and layers
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,12)=5# (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,2)=5# (2,3)=7# (2,5)=3  (2,6)=5# (2,7)=7# (2,9)=3  (2,10)=5# (2,11)=7# (2,13)=3  (2,14)=5# (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,4)=5# (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,12)=5# (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,1)=5# (4,3)=5# (4,5)=5# (4,7)=5# (4,9)=5# (4,11)=5# (4,13)=5# (4,14)=0  (4,15)=0  (4,17)=5# (5,1)=6  (5,2)=3  (5,3)=8  (5,4)=5# (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,12)=5# (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,2)=5# (6,3)=3  (6,5)=7# (6,6)=5# (6,7)=3  (6,9)=7# (6,10)=5# (6,11)=3  (6,13)=7# (6,14)=5# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,4)=5# (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,12)=5# (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (9,1)=2  (9,2)=3  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=2  (9,10)=3  (9,11)=4  (9,12)=5# (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,2)=5# (10,3)=7# (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=3  (10,10)=5# (10,11)=7# (10,13)=3  (10,14)=5# (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,4)=5# (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,12)=5# (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,1)=5# (12,3)=5# (12,5)=5# (12,7)=5# (12,9)=5# (12,11)=5# (12,13)=5# (12,15)=5# (12,17)=5# (13,1)=6  (13,2)=3  (13,3)=8  (13,4)=5# (13,5)=2  (13,6)=0  (13,7)=0  (13,9)=6  (13,10)=3  (13,11)=8  (13,12)=5# (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,2)=5# (14,3)=3  (14,5)=7# (14,6)=0  (14,7)=0  (14,9)=7# (14,10)=5# (14,11)=3  (14,13)=7# (14,14)=5# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=0  (15,5)=0  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,12)=5# (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,4)=0  (16,5)=0  (17,1)=2  (17,2)=3  (17,3)=4  (17,4)=5# (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,12)=5# (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
   (0.0 bits)
data: 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 7#8 1 2 3 4 5#6 7#8 1 2 
1 3 5#7#1 3 5#7#1 3 5#7#1 3 5#7#1 3 
1 4 7#2 5#8 3 6 1 4 7#2 5#8 3 6 1 4 
1 5#1 5#1 5#1 5#1 5#1 5#1 5#1 5#1 5#
1 6 3 8 5#2 7#4 1 6 3 8 5#2 7#4 1 6 
1 7#5#3 1 7#5#3 1 7#5#3 1 7#5#3 1 7#
1 8 7#6 5#4 3 2 1 8 7#6 5#4 3 2 1 8 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 7#8 1 2 3 4 5#6 7#8 1 2 
1 3 5#7#1 3 5#7#1 3 5#7#1 3 5#7#1 3 
1 4 7#2 5#8 3 6 1 4 7#2 5#8 3 6 1 4 
1 5#1 5#1 5#1 5#1 5#1 5#1 5#1 5#1 5#
1 6 3 8 5#2 7#4 1 6 3 8 5#2 7#4 1 6 
1 7#5#3 1 7#5#3 1 7#5#3 1 7#5#3 1 7#
1 8 7#6 5#4 3 2 1 8 7#6 5#4 3 2 1 8 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 2 3 4 5#6 7#8 1 2 3 4 5#6 7#8 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,12)=5# (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,2)=5# (2,3)=7# (2,5)=3  (2,6)=5# (2,7)=7# (2,9)=3  (2,10)=5# (2,11)=7# (2,13)=3  (2,14)=5# (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,4)=5# (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,12)=5# (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,1)=5# (4,3)=5# (4,5)=5# (4,7)=5# (4,9)=5# (4,11)=5# (4,13)=5# (4,14)=0  (4,15)=0  (4,17)=5# (5,1)=6  (5,2)=3  (5,3)=8  (5,4)=5# (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,12)=5# (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,2)=5# (6,3)=3  (6,5)=7# (6,6)=5# (6,7)=3  (6,9)=7# (6,10)=5# (6,11)=3  (6,13)=7# (6,14)=5# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,4)=5# (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,12)=5# (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (9,1)=2  (9,2)=3  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=2  (9,10)=3  (9,11)=4  (9,12)=5# (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,2)=5# (10,3)=7# (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=3  (10,10)=5# (10,11)=7# (10,13)=3  (10,14)=5# (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,4)=5# (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,12)=5# (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,1)=5# (12,3)=5# (12,5)=5# (12,7)=5# (12,9)=5# (12,11)=5# (12,13)=5# (12,15)=5# (12,17)=5# (13,1)=6  (13,2)=3  (13,3)=8  (13,4)=5# (13,5)=2  (13,6)=0  (13,7)=0  (13,9)=6  (13,10)=3  (13,11)=8  (13,12)=5# (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,2)=5# (14,3)=3  (14,5)=7# (14,6)=0  (14,7)=0  (14,9)=7# (14,10)=5# (14,11)=3  (14,13)=7# (14,14)=5# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=0  (15,5)=0  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,12)=5# (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,4)=0  (16,5)=0  (17,1)=2  (17,2)=3  (17,3)=4  (17,4)=5# (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,12)=5# (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
correct output grid

TRAIN 29ec7d0e.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
diff: 
delta: (0,13)=0  (0,14)=0  (0,15)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,8)=9# (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=0  (1,14)=0  (1,15)=0  (1,16)=8  (1,17)=9# (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=9# (2,5)=2  (2,6)=4  (2,7)=6  (2,8)=8  (2,10)=3  (2,11)=5# (2,12)=7# (2,13)=0  (2,14)=0  (2,15)=0  (2,16)=6  (2,17)=8  (3,1)=4  (3,2)=7# (3,4)=4  (3,5)=7# (3,7)=4  (3,8)=7# (3,10)=4  (3,11)=7# (3,13)=4  (3,14)=7# (3,16)=4  (3,17)=7# (4,1)=5# (4,2)=9# (4,3)=4  (4,4)=8  (4,5)=3  (4,6)=7# (4,7)=2  (4,8)=6  (4,10)=5# (4,11)=9# (4,12)=4  (4,13)=8  (4,14)=3  (4,15)=7# (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=2  (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=4  (5,7)=9# (5,8)=5# (5,10)=6  (5,11)=2  (5,12)=7# (5,13)=0  (5,14)=0  (5,15)=0  (5,16)=9# (5,17)=5# (6,1)=7# (6,2)=4  (6,3)=0  (6,4)=0  (6,5)=0  (6,7)=7# (6,8)=4  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=0  (6,14)=0  (6,15)=0  (6,16)=7# (6,17)=4  (7,1)=8  (7,2)=6  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=7# (7,7)=5# (7,8)=3  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=2  (7,14)=9# (7,15)=7# (7,16)=5# (7,17)=3  (8,1)=9# (8,2)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=4  (8,7)=3  (8,8)=2  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=5# (8,15)=4  (8,16)=3  (8,17)=2  (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,5)=6  (10,6)=7# (10,7)=8  (10,8)=9# (10,10)=2  (10,11)=3  (10,12)=4  (10,13)=5# (10,14)=6  (10,15)=7# (10,16)=8  (10,17)=9# (11,1)=3  (11,2)=5# (11,3)=7# (11,4)=9# (11,5)=2  (11,6)=4  (11,7)=6  (11,8)=8  (11,10)=3  (11,11)=5# (11,12)=7# (11,13)=9# (11,14)=2  (11,15)=4  (11,16)=6  (11,17)=8  (12,1)=4  (12,2)=7# (12,4)=4  (12,5)=7# (12,7)=4  (12,8)=7# (12,10)=4  (12,11)=7# (12,13)=4  (12,14)=7# (12,16)=4  (12,17)=7# (13,1)=0  (13,2)=0  (13,3)=0  (13,4)=8  (13,5)=3  (13,6)=7# (13,7)=2  (13,8)=6  (13,10)=5# (13,11)=9# (13,12)=4  (13,13)=8  (13,14)=3  (13,15)=7# (13,16)=2  (13,17)=6  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=3  (14,5)=8  (14,6)=4  (14,7)=9# (14,8)=5# (14,10)=6  (14,11)=2  (14,12)=7# (14,13)=3  (14,14)=8  (14,15)=4  (14,16)=9# (14,17)=5# (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=7# (15,5)=4  (15,7)=7# (15,8)=4  (15,10)=7# (15,11)=4  (15,13)=7# (15,14)=4  (15,16)=7# (15,17)=4  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=2  (16,5)=9# (16,6)=7# (16,7)=5# (16,8)=3  (16,10)=8  (16,11)=6  (16,12)=4  (16,13)=2  (16,14)=9# (16,15)=7# (16,16)=5# (16,17)=3  (17,1)=9# (17,2)=8  (17,3)=7# (17,4)=6  (17,5)=5# (17,6)=4  (17,7)=3  (17,8)=2  (17,10)=9# (17,11)=8  (17,12)=7# (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
correct output grid

TEST 29ec7d0e.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 9.8 sec (9.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-339] Checking task 2bcee788.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10418.6 = 10431.3
DL output with Mo: L = 12.6 + 14056.7 = 14069.3
DL input+output M: L = 25.2 + 24475.4 = 24500.6

# learning a model for train pairs
2.000	
1.217	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.763	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.578	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.521	OUT SPE ^.size = ^.size
0.496	OUT SPE ^.color = green
0.475	IN  SPE ^.layer_01.shape.color = red
0.459	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.446	IN  SPE ^.layer_01.shape.mask = Full
0.437	IN  SPE ^.color = black
0.126	
0.123	IN  DEL ^.layer_01
0.123	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 68.7 + 3246.2 = 3314.9
DL output with Mo: L = 43.7 + 1632.1 = 1675.7
DL input+output M: L = 112.3 + 4878.3 = 4990.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 43.7 + 1632.1 = 1675.7
DL input+output M: L = 82.5 + 1632.1 = 1714.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
diff: 
delta: (3,5)=2  (4,5)=2  (5,5)=2 
   (0.0 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (3,6) and color yellow and mask +-cross at (3,2)
diff: 
delta:
   (33.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
diff: 
delta: (3,5)=2  (4,5)=2  (5,5)=2 
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
diff: 
delta: (3,3)=2  (3,4)=2 
   (0.0 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (6,3) and color pink and mask .xx|.x.|xx.|xx.|.x.|.xx at (1,3)
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
diff: 
delta: (3,3)=2  (3,4)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,3)
diff: 
delta: (4,3)=6  (4,4)=6  (5,4)=6  (6,4)=6  (6,5)=6 
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (4,4)
diff: 
delta: (4,3)=2  (5,3)=2 
   (0.0 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (2,4) and color orange and mask .xx.|xxxx at (4,2)
diff: 
delta:
   (36.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (4,4)
diff: 
delta: (4,3)=2  (5,3)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (4,3)
diff: 
delta: (4,4)=7# (5,4)=7# (5,5)=7#
! 10 wrong pixels (generated / expected)

TRAIN 2bcee788.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
diff: 
delta: (6,5)=2 
   (0.0 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|..x|..x|xxx at (4,3)
diff: 
delta:
   (42.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
diff: 
delta: (6,5)=2 
! 12 wrong pixels (generated / expected)

TRAIN 2bcee788.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|xx|.x at (3,4)
diff: 
delta: (4,6)=2  (5,6)=2 
! 12 wrong pixels (generated / expected)

TEST 2bcee788.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 1632.1 bits (1632.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-338] Checking task 2bee17df.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 67894.4 = 67907.0
DL output with Mo: L = 12.6 + 95854.8 = 95867.4
DL input+output M: L = 25.2 + 163749.2 = 163774.4

# learning a model for train pairs
2.000	
1.524	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.131	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.754	OUT ADD ^.layer_0 = ^.layer_0
0.440	OUT ADD ^.layer_01 = ^.layer_01
0.178	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.172	OUT SPE ^.size = ^.size
0.166	OUT SPE ^.layer_011.shape.size = ^.size - (2, 2)
0.162	OUT SPE ^.layer_011.pos = '(1, 1)
0.160	IN  SPE ^.layer_0.shape.color = red
0.158	IN  SPE ^.layer_01.shape.color = cyan
0.156	OUT SPE ^.layer_011.shape.color = green
0.155	IN  SPE ^.color = black
0.154	OUT SPE ^.color = black
0.030	
0.030	IN  GEN ^.layer_01.shape.color = ?
0.030	IN  GEN ^.layer_0.shape.color = ?
0.030	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.size - (2, 2) and color green and mask ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 8414.0 = 8485.0
DL output with Mo: L = 72.8 + 2707.6 = 2780.5
DL input+output M: L = 143.8 + 11121.6 = 11265.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.size - (2, 2) and color green and mask ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 72.8 + 2707.6 = 2780.5
DL input+output M: L = 137.0 + 2707.6 = 2844.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
  _011: a rectangle with size (10,10) and color green and mask ..x.......|..x.......|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|..x.......|..x....... at (1,1)
diff: 
delta:
   (102.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (2,8) and color red and mask Full at (0,4)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,6)=2  (1,6)=0  (2,5)=2  (2,8)=2  (2,9)=2  (2,11)=2  (3,11)=2  (4,11)=2  (5,11)=2  (6,11)=2 
! 30 wrong pixels (generated / expected)

TRAIN 2bee17df.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
  _011: a rectangle with size (10,10) and color green and mask ...xx.....|...xx.....|...xx.....|xxxxxxxxxx|...xx.....|...xx.....|...xx.....|xxxxxxxxxx|...xx.....|...xx..... at (1,1)
diff: 
delta:
   (102.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (0,0)
diff: 
delta: (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (2,7)=8  (2,8)=8  (2,11)=8  (3,7)=8  (3,11)=8  (4,11)=8  (5,11)=8  (6,11)=8  (7,11)=8  (8,11)=8 
! 61 wrong pixels (generated / expected)

TRAIN 2bee17df.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
  _011: a rectangle with size (8,8) and color green and mask ..x.....|..x.....|..x.....|..x.....|xxxxxxxx|xxxxxxxx|..x.....|..x..... at (1,1)
diff: 
delta:
   (66.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (1,1)=8  (1,2)=8  (1,4)=8  (1,5)=8  (1,7)=8  (2,1)=8  (2,4)=8  (3,1)=8 
! 41 wrong pixels (generated / expected)

TRAIN 2bee17df.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|x............. at (0,0)
  _01: a rectangle with size (13,13) and color red and mask ...........xx|............x|............x|...........xx|..........xxx|............x|............x|............x|............x|............x|...........xx|..x.xx....xxx|xxxxxxxxxxxxx at (1,1)
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|x............. at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (13,1)
diff: 
delta: (1,12)=2  (1,13)=2  (2,13)=2  (3,13)=2  (4,12)=2  (4,13)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,13)=2  (7,13)=2  (8,13)=2  (9,13)=2  (10,13)=2  (11,12)=2  (11,13)=2  (12,3)=2  (12,5)=2  (12,6)=2  (12,11)=2  (12,12)=2  (12,13)=2 
! 76 wrong pixels (generated / expected)

TEST 2bee17df.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 2707.6 bits (2707.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-337] Checking task 2c608aff.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27336.0 = 27348.7
DL output with Mo: L = 12.6 + 35337.9 = 35350.5
DL input+output M: L = 25.2 + 62674.0 = 62699.2

# learning a model for train pairs
2.000	
1.255	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.640	OUT ADD ^.layer_0 = ^.layer_0
0.482	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.419	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.388	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.364	OUT SPE ^.size = ^.size
0.358	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.352	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.347	IN  SPE ^.layer_0.shape.mask = Full
0.343	OUT SPE ^.layer_01.shape.size.j = 1
0.339	OUT SPE ^.layer_01.shape.mask = Full
0.336	OUT SPE ^.layer_011.shape.mask = Full
0.118	
0.118	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.9 + 5966.5 = 6022.4
DL output with Mo: L = 71.4 + 4005.5 = 4076.9
DL input+output M: L = 127.3 + 9971.9 = 10099.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 20.0 = 74.9
DL output with Mo: L = 71.4 + 4005.5 = 4076.9
DL input+output M: L = 126.3 + 4025.5 = 4151.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a point with color yellow at (7,7)
diff: 
delta: (3,9)=4 
   (2.0 bits)
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (7,7)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (3,5)
diff: 
delta:
   (46.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a point with color yellow at (3,9)
diff: 
delta: (7,7)=4 
! 96 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a point with color yellow at (7,7)
diff: 
delta: (3,9)=4 
! 96 wrong pixels (generated / expected)

TRAIN 2c608aff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,12) and color red and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _01: a point with color cyan at (8,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _01: a rectangle with size (4,1) and color cyan and mask Full at (5,3)
  _011: a rectangle with size (10,12) and color red and mask Full at (0,0)
diff: 
delta:
   (53.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color red and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _01: a point with color cyan at (8,3)
diff: 
delta:
! 111 wrong pixels (generated / expected)

TRAIN 2c608aff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (0,4)
diff: 
delta: (6,10)=2  (11,1)=2 
   (0.0 bits)
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (1,4) and color red and mask Full at (6,7)
diff: 
delta: (11,1)=2 
   (90.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (0,4)
diff: 
delta: (6,10)=2  (11,1)=2 
! 150 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (6,10)
diff: 
delta: (0,4)=2  (11,1)=2 
! 152 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (11,1)
diff: 
delta: (0,4)=2  (6,10)=2 
! 152 wrong pixels (generated / expected)

TRAIN 2c608aff.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (1,8)
diff: 
delta: (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
   (0.0 bits)
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (1,8)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (5,2)
diff: 
delta: (3,11)=4  (4,11)=4  (4,15)=4  (11,13)=4 
   (210.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (1,8)
diff: 
delta: (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 231 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (3,11)
diff: 
delta: (1,8)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 232 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (4,15)
diff: 
delta: (1,8)=4  (3,11)=4  (5,2)=4  (11,13)=4 
! 232 wrong pixels (generated / expected)

TRAIN 2c608aff.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color red and layers
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
  _01: a point with color blue at (1,9)
diff: 
delta: (2,2)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 350 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,21) and color red and layers
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
  _01: a point with color blue at (2,2)
diff: 
delta: (1,9)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 351 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,21) and color red and layers
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
  _01: a point with color blue at (2,17)
diff: 
delta: (1,9)=1  (2,2)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 351 wrong pixels (generated / expected)

TEST 2c608aff.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.2 sec (56.2 sec/task)
bits-train-error = 4005.5 bits (4005.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-336] Checking task 2dc579da.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17871.2 = 17883.8
DL output with Mo: L = 12.6 + 1738.9 = 1751.5
DL input+output M: L = 25.2 + 19610.1 = 19635.3

# learning a model for train pairs
2.000	
1.182	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.592	OUT SPE ^.size = ^.size / '2
0.440	OUT SPE ^.color = ^.color
0.403	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.311	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.299	IN  SPE ^.layer_0.shape.mask = +-cross
0.169	
0.167	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ^.color and layers
  _0: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask +-cross at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 60.3 + 2315.5 = 2375.8
DL output with Mo: L = 52.8 + 237.5 = 290.3
DL input+output M: L = 113.1 + 2553.0 = 2666.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ^.color and layers
  _0: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 52.8 + 237.5 = 290.3
DL input+output M: L = 82.4 + 237.5 = 319.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color cyan and layers
  _01: a point with color yellow at (4,0)
diff: 
delta: (0,2)=3  (1,2)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (3,2)=3  (4,2)=3 
   (0.0 bits)
data: a background with size (2,2) and color cyan and layers
  _0: a point with color yellow at (1,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _01: a point with color yellow at (4,0)
diff: 
delta: (0,2)=3  (1,2)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (3,2)=3  (4,2)=3 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color green and layers
  _01: a point with color cyan at (0,0)
diff: 
delta: (0,1)=8  (0,3)=8  (0,4)=8  (1,0)=8  (1,1)=8  (1,3)=8  (1,4)=8  (3,0)=8  (3,1)=8  (3,3)=8  (3,4)=8  (4,0)=4  (4,1)=8  (4,3)=8  (4,4)=8 
! 3 wrong pixels (generated / expected)

TRAIN 2dc579da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,7) and color yellow and layers
  _01: a point with color blue at (1,5)
diff: 
delta: (0,3)=2  (1,3)=2  (2,3)=2  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,3)=2  (5,3)=2  (6,3)=2 
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a point with color blue at (1,1)
diff: 
delta:
   (7.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  _01: a point with color blue at (1,5)
diff: 
delta: (0,3)=2  (1,3)=2  (2,3)=2  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,3)=2  (5,3)=2  (6,3)=2 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color red and layers
  _01: a point with color yellow at (0,4)
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,5)=4  (0,6)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,4)=4  (1,5)=1  (1,6)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,5)=4  (2,6)=4  (4,0)=4  (4,1)=4  (4,2)=4  (4,4)=4  (4,5)=4  (4,6)=4  (5,0)=4  (5,1)=4  (5,2)=4  (5,4)=4  (5,5)=4  (5,6)=4  (6,0)=4  (6,1)=4  (6,2)=4  (6,4)=4  (6,5)=4  (6,6)=4 
! 8 wrong pixels (generated / expected)

TRAIN 2dc579da.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color green and layers
  _01: a point with color cyan at (2,1)
diff: 
delta: (0,5)=1  (1,5)=1  (2,5)=1  (3,5)=1  (4,5)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (6,5)=1  (7,5)=1  (8,5)=1  (9,5)=1  (10,5)=1 
   (0.0 bits)
data: a background with size (5,5) and color green and layers
  _0: a point with color cyan at (2,1)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  _01: a point with color cyan at (2,1)
diff: 
delta: (0,5)=1  (1,5)=1  (2,5)=1  (3,5)=1  (4,5)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (6,5)=1  (7,5)=1  (8,5)=1  (9,5)=1  (10,5)=1 
! 2 wrong pixels (generated / expected)

TRAIN 2dc579da.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color blue and layers
  _01: a point with color red at (3,8)
diff: 
delta: (0,6)=0  (1,6)=0  (2,6)=0  (3,6)=0  (4,6)=0  (5,6)=0  (6,0)=0  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (7,6)=0  (8,6)=0  (9,6)=0  (10,6)=0  (11,6)=0  (12,6)=0 
! 2 wrong pixels (generated / expected)

TEST 2dc579da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 237.5 bits (237.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-335] Checking task 2dd70a9a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 80976.8 = 80989.4
DL output with Mo: L = 12.6 + 97990.4 = 98003.0
DL input+output M: L = 25.2 + 178967.2 = 178992.4

# learning a model for train pairs
2.000	
1.600	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.230	OUT ADD ^.layer_0 = ^.layer_0
1.064	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.840	OUT ADD ^.layer_011 = ^.layer_01
0.748	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.554	OUT ADD ^.layer_0110 = ^.layer_011
0.503	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.447	OUT ADD ^.layer_01111 = ^.layer_0111
0.435	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.415	OUT ADD ^.layer_011111 = ^.layer_01111
0.404	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.394	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.387	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
0.379	OUT SPE ^.layer_0111.shape.mask = ^.layer_010.shape.mask
0.373	OUT SPE ^.size = ^.size
0.370	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.i
0.368	IN  SPE ^.layer_0.shape.color = cyan
0.366	IN  SPE ^.layer_011.shape.color = cyan
0.364	IN  SPE ^.layer_0111.shape.color = cyan
0.362	IN  SPE ^.layer_011110.shape.color = cyan
0.360	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.358	OUT SPE ^.layer_0111.shape.size.j = ^.layer_010.shape.size.j
0.357	OUT SPE ^.layer_0111.pos.i = ^.layer_010.pos.i
0.355	OUT SPE ^.layer_01.pos.j = ^.layer_011111.pos.j
0.353	OUT SPE ^.layer_01.shape.color = green
0.351	OUT SPE ^.layer_0111111.shape.color = cyan
0.350	OUT SPE ^.layer_0111.shape.size.i = area(^.layer_01.shape) / '2
0.348	OUT SPE ^.layer_01.pos = projJ(^.layer_011111.pos) + projI(^.layer_0111.shape.size)
0.347	OUT SPE ^.layer_0111111.pos.i = max(^.layer_0.pos.j, ^.layer_0111.pos.j)
0.345	OUT SPE ^.layer_0111111.pos.j = bottom(^.layer_0111) + ^.layer_011111.pos.j - ^.layer_0.pos.j
0.344	OUT SPE ^.layer_0111.pos.j = center(^.layer_01) + ^.layer_011110.pos.j - ^.layer_011.pos.j
0.343	OUT SPE ^.layer_0111111.shape.size.i = area(^.layer_011111.shape)
0.342	OUT SPE ^.layer_0111111.shape.size.j = area(^.layer_011111.shape)
0.340	IN  SPE ^.layer_01111.shape.mask = Full
0.339	IN  SPE ^.layer_011111.shape.mask = Full
0.338	IN  SPE ^.color = black
0.337	OUT SPE ^.color = black
0.100	
0.100	IN  GEN ^.layer_011110.shape.color = ?
0.100	IN  GEN ^.layer_0111.shape.color = ?
0.100	IN  GEN ^.layer_011.shape.color = ?
0.100	IN  GEN ^.layer_0.shape.color = ?
0.100	IN  GEN ^.layer_011111.shape.mask = ?
0.100	IN  GEN ^.layer_01111.shape.mask = ?
0.100	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color green and mask ? at projJ(^.layer_011111.pos) + projI(^.layer_0111.shape.size)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size (area(^.layer_01.shape) / '2,^.layer_010.shape.size.j) and color ^.layer_0111.shape.color and mask ^.layer_010.shape.mask at (^.layer_010.pos.i,center(^.layer_01) + ^.layer_011110.pos.j - ^.layer_011.pos.j)
  _01111: ^.layer_0111
  _011111: ^.layer_01111
  _0111111: a rectangle with size (area(^.layer_011111.shape),area(^.layer_011111.shape)) and color cyan and mask ? at (max(^.layer_0.pos.j, ^.layer_0111.pos.j),bottom(^.layer_0111) + ^.layer_011111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011110: a point with color cyan at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 218.8 + 19248.8 = 19467.7
DL output with Mo: L = 448.1 + 9067.3 = 9515.4
DL input+output M: L = 666.9 + 28316.1 = 28983.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color green and mask ? at projJ(^.layer_011111.pos) + projI(^.layer_0111.shape.size)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size (area(^.layer_01.shape) / '2,^.layer_010.shape.size.j) and color ^.layer_0111.shape.color and mask ^.layer_010.shape.mask at (^.layer_010.pos.i,center(^.layer_01) + ^.layer_011110.pos.j - ^.layer_011.pos.j)
  _01111: ^.layer_0111
  _011111: ^.layer_01111
  _0111111: a rectangle with size (area(^.layer_011111.shape),area(^.layer_011111.shape)) and color cyan and mask ? at (max(^.layer_0.pos.j, ^.layer_0111.pos.j),bottom(^.layer_0111) + ^.layer_011111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 203.4 + 20.0 = 223.4
DL output with Mo: L = 448.1 + 9067.3 = 9515.4
DL input+output M: L = 651.5 + 9087.3 = 9738.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
  _011110: a point with color cyan at (0,11)
  _01111: a rectangle with size (2,1) and color red and mask Full at (2,17)
  _011111: a rectangle with size (2,1) and color green and mask Full at (14,3)
diff: 
delta: (0,17)=8  (0,19)=8  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (16,1)=8  (18,9)=8  (19,10)=8 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _01: a rectangle with size (12,15) and color green and mask ..............x|..............x|xxxxxxxxxxxxxxx|x..............|x..............|x..............|x..............|x..............|x..............|x..............|x..............|x.............. at (4,3)
  _0110: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _011: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _0111: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
  _011111: a rectangle with size (2,1) and color red and mask Full at (2,17)
  _0111111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (18,9)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (16,1)=8 
   (493.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
  _011110: a point with color cyan at (0,11)
  _01111: a rectangle with size (2,1) and color red and mask Full at (2,17)
  _011111: a rectangle with size (2,1) and color green and mask Full at (14,3)
diff: 
delta: (0,17)=8  (0,19)=8  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (16,1)=8  (18,9)=8  (19,10)=8 
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
  _011110: a point with color cyan at (0,11)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (0,17)
  _011111: a rectangle with size (2,1) and color red and mask Full at (2,17)
diff: 
delta: (0,18)=0  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! 52 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
  _011110: a point with color cyan at (0,11)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (0,17)
  _011111: a rectangle with size (2,1) and color green and mask Full at (14,3)
diff: 
delta: (0,18)=0  (2,17)=2  (3,17)=2  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (16,1)=8  (18,9)=8  (19,10)=8 
! 40 wrong pixels (generated / expected)

TRAIN 2dd70a9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _011110: a point with color cyan at (1,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (3,9)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (4,1)
diff: 
delta: (9,0)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _01: a rectangle with size (5,5) and color green and mask x....|x....|xxxxx|....x|....x at (1,1)
  _0110: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _011: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (3,9)
  _0111111: a rectangle with size (1,1) and color cyan and mask Full at (9,0)
diff: 
delta: (4,1)=8 
   (80.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _011110: a point with color cyan at (1,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (3,9)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (4,1)
diff: 
delta: (9,0)=8 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _011110: a point with color cyan at (1,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (3,9)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (9,0)
diff: 
delta: (4,1)=8 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _011110: a point with color cyan at (1,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (4,1)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (3,9)
diff: 
delta: (9,0)=8 
! 16 wrong pixels (generated / expected)

TRAIN 2dd70a9a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _0111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
  _011110: a point with color cyan at (2,0)
  _01111: a rectangle with size (1,2) and color red and mask Full at (9,1)
  _011111: a rectangle with size (1,2) and color green and mask Full at (5,1)
diff: 
delta: (4,9)=8  (5,8)=8  (7,5)=8  (7,8)=8  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
   (2.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _01: a rectangle with size (5,7) and color green and mask xxxxxxx|......x|......x|......x|..xxxxx at (5,1)
  _0110: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _011: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _0111: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
  _011111: a rectangle with size (1,2) and color red and mask Full at (9,1)
  _0111111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (4,8)
diff: 
delta: (2,0)=8  (7,5)=8  (7,8)=8  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
   (332.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _0111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
  _011110: a point with color cyan at (2,0)
  _01111: a rectangle with size (1,2) and color green and mask Full at (5,1)
  _011111: a rectangle with size (1,2) and color red and mask Full at (9,1)
diff: 
delta: (4,9)=8  (5,8)=8  (7,5)=8  (7,8)=8  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _0111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
  _011110: a point with color cyan at (4,9)
  _01111: a rectangle with size (1,2) and color green and mask Full at (5,1)
  _011111: a rectangle with size (1,2) and color red and mask Full at (9,1)
diff: 
delta: (2,0)=8  (5,8)=8  (7,5)=8  (7,8)=8  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! 43 wrong pixels (generated / expected)

TRAIN 2dd70a9a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask xxxx|x...|.x..|..x.|..x.|...x at (0,0)
  _010: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (8,5)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (5,10)
  _0111: a rectangle with size (2,2) and color cyan and mask .x|xx at (1,4)
  _011110: a point with color cyan at (0,9)
  _01111: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,1)
  _011111: a rectangle with size (1,2) and color red and mask Full at (1,6)
diff: 
delta: (0,10)=8  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (7,3)=3  (7,4)=3  (12,11)=8 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask xxxx|x...|.x..|..x.|..x.|...x at (0,0)
  _010: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (8,5)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (5,10)
  _0111: a rectangle with size (2,2) and color cyan and mask .x|xx at (1,4)
  _011110: a point with color cyan at (0,9)
  _01111: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,1)
  _011111: a rectangle with size (1,2) and color green and mask Full at (7,3)
diff: 
delta: (0,10)=8  (1,6)=2  (1,7)=2  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (12,11)=8 
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask xxxx|x...|.x..|..x.|..x.|...x at (0,0)
  _010: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (8,5)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (5,10)
  _0111: a rectangle with size (2,2) and color cyan and mask .x|xx at (1,4)
  _011110: a point with color cyan at (0,9)
  _01111: a rectangle with size (1,2) and color red and mask Full at (1,6)
  _011111: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,1)
diff: 
delta: (0,10)=8  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (7,3)=3  (7,4)=3  (12,11)=8 
! 47 wrong pixels (generated / expected)

TEST 2dd70a9a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 48.8 sec (48.8 sec/task)
bits-train-error = 9067.3 bits (9067.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-334] Checking task 2dee498d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20204.6 = 20217.2
DL output with Mo: L = 12.6 + 6883.0 = 6895.6
DL input+output M: L = 25.2 + 27087.5 = 27112.8

# learning a model for train pairs
2.000	
1.805	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.615	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.473	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.338	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.124	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT SPE ^.layer_0.pos = ^.layer_0.pos
1.057	OUT SPE ^.layer_01.pos = '(0, 0)
1.029	OUT SPE ^.size.i = ^.size.i
1.003	OUT SPE ^.size.j = ^.size.i
0.976	OUT SPE ^.layer_01.shape.size.i = ^.size.i
0.953	OUT SPE ^.layer_01.shape.color = majorityColor(^.grid)
0.930	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.i
0.915	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.i
0.900	OUT SPE ^.layer_011.shape.mask = Full
0.887	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j / '2
0.239	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.size.i,^.layer_0.shape.size.i) and color majorityColor(^.grid) and mask ? at '(0, 0)
  _011: a rectangle with size (^.layer_01.shape.size.i,?) and color ? and mask Full at (?,^.layer_01.pos.j / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 13107.9 = 13172.1
DL output with Mo: L = 168.7 + 1458.4 = 1627.1
DL input+output M: L = 232.9 + 14566.3 = 14799.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.size.i,^.layer_0.shape.size.i) and color majorityColor(^.grid) and mask ? at '(0, 0)
  _011: a rectangle with size (^.layer_01.shape.size.i,?) and color ? and mask Full at (?,^.layer_01.pos.j / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 168.7 + 1458.4 = 1627.1
DL input+output M: L = 232.9 + 1458.4 = 1691.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,9) and color blue and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,5)
diff: 
delta: (0,0)=4  (2,2)=4  (2,3)=4  (2,8)=4 
   (0.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
diff: 
delta:
   (45.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color blue and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,5)
diff: 
delta: (0,0)=4  (2,2)=4  (2,3)=4  (2,8)=4 
! 7 wrong pixels (generated / expected)

TRAIN 2dee498d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,1)=2  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,2)=2  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,3)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask x-cross at (0,0)
  _011: a rectangle with size (2,4) and color yellow and mask Full at (1,0)
diff: 
delta:
   (67.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,1)=2  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,2)=2  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,3)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,4)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,3)=1  (0,4)=2  (0,8)=2  (0,11)=1  (1,1)=2  (1,2)=1  (1,5)=2  (1,9)=2  (1,10)=1  (2,1)=1  (2,2)=2  (2,6)=2  (2,9)=1  (2,10)=2  (3,0)=1  (3,3)=2  (3,7)=2  (3,8)=1  (3,11)=2 
! 12 wrong pixels (generated / expected)

TRAIN 2dee498d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,5)=1  (1,1)=3  (1,3)=3  (1,5)=3 
   (0.0 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta:
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,5)=1  (1,1)=3  (1,3)=3  (1,5)=3 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,1)
diff: 
delta: (0,5)=1  (1,1)=3  (1,3)=3  (1,5)=3 
! 2 wrong pixels (generated / expected)

TRAIN 2dee498d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (0,3)
  _01: a rectangle with size (2,7) and color yellow and mask Full at (0,8)
diff: 
delta: (0,0)=0  (0,2)=0  (0,5)=0  (0,7)=0  (0,10)=0  (0,11)=2  (0,12)=0  (1,2)=0  (1,7)=0  (1,10)=2  (1,11)=2  (1,12)=0  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,0)=1  (3,1)=1  (3,2)=0  (3,5)=1  (3,6)=1  (3,7)=0  (3,10)=1  (3,11)=1  (3,12)=0  (4,0)=1  (4,1)=1  (4,2)=0  (4,4)=0  (4,5)=1  (4,6)=1  (4,7)=0  (4,9)=0  (4,10)=1  (4,11)=1  (4,12)=0  (4,14)=0 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (0,13)
  _01: a rectangle with size (2,7) and color yellow and mask Full at (0,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,5)=0  (0,6)=2  (0,7)=0  (0,10)=0  (0,12)=0  (1,2)=0  (1,5)=2  (1,6)=2  (1,7)=0  (1,12)=0  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,0)=1  (3,1)=1  (3,2)=0  (3,5)=1  (3,6)=1  (3,7)=0  (3,10)=1  (3,11)=1  (3,12)=0  (4,0)=1  (4,1)=1  (4,2)=0  (4,4)=0  (4,5)=1  (4,6)=1  (4,7)=0  (4,9)=0  (4,10)=1  (4,11)=1  (4,12)=0  (4,14)=0 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color red and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (3,0)
  _01: a rectangle with size (2,7) and color blue and mask Full at (3,5)
diff: 
delta: (0,0)=0  (0,2)=0  (0,3)=4  (0,4)=4  (0,5)=0  (0,7)=0  (0,8)=4  (0,9)=4  (0,10)=0  (0,12)=0  (0,13)=4  (0,14)=4  (1,2)=0  (1,3)=4  (1,4)=4  (1,7)=0  (1,8)=4  (1,9)=4  (1,12)=0  (1,13)=4  (1,14)=4  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,2)=0  (3,7)=0  (3,8)=2  (3,9)=2  (3,12)=0  (4,2)=0  (4,4)=0  (4,7)=0  (4,8)=2  (4,9)=0  (4,12)=0  (4,14)=0 
! 17 wrong pixels (generated / expected)

TEST 2dee498d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.4 sec (54.4 sec/task)
bits-train-error = 1458.4 bits (1458.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-333] Checking task 31aa019c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23990.4 = 24003.0
DL output with Mo: L = 12.6 + 10911.0 = 10923.6
DL input+output M: L = 25.2 + 34901.4 = 34926.6

# learning a model for train pairs
2.000	
1.264	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.204	OUT ADD ^.layer_00 = a point with color ? at (?,?)
1.148	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT SPE ^.layer_0.shape = scaleTo(coloring(^.layer_0.shape, red), '(3, 3))
1.035	OUT SPE ^.size = ^.size
0.981	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.955	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.905	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.880	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.855	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.830	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.818	OUT SPE ^.layer_00.pos.i = span(^.layer_0.pos.j, ^.layer_01.pos.j)
0.809	OUT SPE ^.layer_00.pos.j = average(^.layer_01111.pos.j, ^.layer_01111111.pos.j)
0.802	OUT SPE ^.color = black
0.798	IN  SPE ^.layer_0.shape.mask = Full
0.794	IN  SPE ^.layer_011.shape.mask = Full
0.790	IN  SPE ^.color = black
0.070	
0.069	IN  GEN ^.layer_011.shape.mask = ?
0.069	IN  GEN ^.layer_0.shape.mask = ?
0.069	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color ? at (span(^.layer_0.pos.j, ^.layer_01.pos.j),average(^.layer_01111.pos.j, ^.layer_01111111.pos.j))
  _0: scaleTo(coloring(^.layer_0.shape, red), '(3, 3)) at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 168.4 + 17324.8 = 17493.2
DL output with Mo: L = 165.9 + 507.9 = 673.8
DL input+output M: L = 334.3 + 17832.8 = 18167.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color ? at (span(^.layer_0.pos.j, ^.layer_01.pos.j),average(^.layer_01111.pos.j, ^.layer_01111111.pos.j))
  _0: scaleTo(coloring(^.layer_0.shape, red), '(3, 3)) at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 166.3 + 20.0 = 186.3
DL output with Mo: L = 165.9 + 507.9 = 673.8
DL input+output M: L = 332.2 + 527.9 = 860.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _01111111: a point with color blue at (3,2)
diff: 
delta: (3,9)=5# (4,2)=8  (6,1)=4  (7,1)=5# (7,4)=1  (8,1)=8  (8,6)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (6,1)
  _0: a rectangle with size (3,3) and color red and mask Full at (5,0)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _01111111: a point with color blue at (3,2)
diff: 
delta: (3,9)=5# (4,2)=8  (6,1)=4  (7,1)=5# (7,4)=1  (8,1)=8  (8,6)=1 
! 18 wrong pixels (generated / expected)

TRAIN 31aa019c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,3)
  _0111: a point with color red at (0,0)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color green at (1,8)
  _01111111: a point with color orange at (1,9)
diff: 
delta: (1,3)=9# (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (2,7)
  _0: a rectangle with size (3,3) and color red and mask Full at (1,6)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,3)
  _0111: a point with color red at (0,0)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color green at (1,8)
  _01111111: a point with color orange at (1,9)
diff: 
delta: (1,3)=9# (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,8)
  _0111: a point with color red at (0,0)
  _01111: a point with color blue at (0,3)
  _011111: a point with color green at (0,5)
  _0111111: a point with color brown at (1,3)
  _01111111: a point with color orange at (1,9)
diff: 
delta: (2,3)=1  (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,8)
  _0111: a point with color red at (0,0)
  _01111: a point with color blue at (0,3)
  _011111: a point with color green at (0,5)
  _0111111: a point with color brown at (1,3)
  _01111111: a point with color blue at (2,3)
diff: 
delta: (1,9)=7# (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 19 wrong pixels (generated / expected)

TRAIN 31aa019c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _01111111: a point with color blue at (3,3)
diff: 
delta: (2,6)=5# (4,9)=1  (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (8,6)
  _0: a rectangle with size (3,3) and color red and mask Full at (7,5)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _01111111: a point with color blue at (3,3)
diff: 
delta: (2,6)=5# (4,9)=1  (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
! 18 wrong pixels (generated / expected)

TRAIN 31aa019c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Span: same int

TEST 31aa019c.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 4.1 sec (4.1 sec/task)
bits-train-error = 507.9 bits (507.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-332] Checking task 321b1fc6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14004.0 = 14016.6
DL output with Mo: L = 12.6 + 10641.8 = 10654.4
DL input+output M: L = 25.2 + 24645.8 = 24671.0

# learning a model for train pairs
2.000	
1.811	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.622	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.432	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.348	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.263	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.028	OUT ADD ^.layer_0111 = ^.layer_0111.shape at (?,?)
0.944	OUT ADD ^.layer_01111 = ^.layer_0111.shape at (?,?)
0.858	OUT ADD ^.layer_01110 = ^.layer_0111.shape at (?,?)
0.817	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.779	OUT SPE ^.size = ^.size
0.748	OUT SPE ^.layer_01.shape = ^.layer_01111.shape
0.717	OUT SPE ^.layer_0.shape = ^.layer_01111.shape
0.689	OUT SPE ^.layer_011.shape = coloring(^.layer_01111.shape, pink)
0.668	OUT SPE ^.layer_0111.pos = ^.layer_011.pos
0.647	OUT SPE ^.layer_01111.pos = ^.layer_01.pos
0.626	OUT SPE ^.layer_01110.pos = ^.layer_0.pos
0.607	OUT SPE ^.layer_01.pos = ^.layer_01.pos + (1, 0)
0.587	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 0)
0.576	OUT SPE ^.layer_011.pos.j = 3
0.567	IN  SPE ^.layer_0111.shape.color = orange
0.558	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
0.550	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.542	IN  SPE ^.layer_0.shape.color = cyan
0.535	IN  SPE ^.layer_01.shape.color = cyan
0.260	
0.259	IN  DEL ^.layer_011111
0.259	IN  GEN ^.layer_01.shape.color = ?
0.259	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_01111.shape at ^.layer_0.pos + (1, 0)
  _01: ^.layer_01111.shape at ^.layer_01.pos + (1, 0)
  _011: coloring(^.layer_01111.shape, pink) at (?,3)
  _01110: ^.layer_0111.shape at ^.layer_0.pos
  _0111: ^.layer_0111.shape at ^.layer_011.pos
  _01111: ^.layer_0111.shape at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 179.5 + 3843.0 = 4022.5
DL output with Mo: L = 188.6 + 2449.3 = 2637.9
DL input+output M: L = 368.1 + 6292.3 = 6660.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_01111.shape at ^.layer_0.pos + (1, 0)
  _01: ^.layer_01111.shape at ^.layer_01.pos + (1, 0)
  _011: coloring(^.layer_01111.shape, pink) at (?,3)
  _01110: ^.layer_0111.shape at ^.layer_0.pos
  _0111: ^.layer_0111.shape at ^.layer_011.pos
  _01111: ^.layer_0111.shape at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 157.6 + 0.0 = 157.6
DL output with Mo: L = 188.6 + 2449.3 = 2637.9
DL input+output M: L = 346.2 + 2449.3 = 2795.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _011110: a point with color pink at (1,2)
  _01111: a rectangle with size (1,1) and color brown and mask Full at (2,1)
diff: 
delta: (2,2)=4 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (5,5)
  _01: a rectangle with size (1,1) and color brown and mask Full at (8,2)
  _011: a rectangle with size (1,1) and color pink and mask Full at (7,3)
  _01110: a rectangle with size (1,1) and color orange and mask Full at (4,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (8,8)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (7,2)
diff: 
delta: (4,6)=6  (5,6)=4  (8,3)=4  (8,9)=6  (9,8)=9# (9,9)=4 
   (236.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _011110: a point with color pink at (1,2)
  _01111: a rectangle with size (1,1) and color brown and mask Full at (2,1)
diff: 
delta: (2,2)=4 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _011110: a point with color pink at (1,2)
  _01111: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
diff: 
delta: (2,1)=9#
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _011110: a point with color brown at (2,1)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (1,2)
diff: 
delta: (2,2)=4 
! 10 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (2,6)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (7,3)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (5,5)
  _011110: a point with color cyan at (8,5)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (2,1)
  _01: a rectangle with size (1,3) and color pink and mask Full at (3,6)
  _011: a rectangle with size (1,3) and color pink and mask Full at (8,3)
  _01110: a rectangle with size (1,2) and color orange and mask Full at (1,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (7,3)
  _01111: a rectangle with size (1,2) and color orange and mask Full at (2,6)
diff: 
delta:
   (8.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (2,6)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (7,3)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (5,5)
  _011110: a point with color cyan at (8,5)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (7,3)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (2,6)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (5,5)
  _011110: a point with color cyan at (3,8)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (2,7) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (1,4) and color green and mask Full at (6,0)
  _011110: a point with color cyan at (3,2)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,1)
diff:   ^.layer_0111.shape.color
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,7)=8  (6,1)=4  (7,2)=3 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (2,7) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (1,4) and color green and mask Full at (6,0)
  _011110: a point with color cyan at (3,2)
  _01111: a rectangle with size (2,2) and color yellow and mask Full at (5,1)
diff:   ^.layer_0111.shape.color
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,7)=8  (6,1)=4  (7,2)=3 
! 29 wrong pixels (generated / expected)

TEST 321b1fc6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 2449.3 bits (2449.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-331] Checking task 32597951.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 151855.8 = 151868.4
DL output with Mo: L = 12.6 + 154502.2 = 154514.8
DL input+output M: L = 25.2 + 306358.0 = 306383.2

# learning a model for train pairs
2.000	
1.550	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT ADD ^.layer_0 = ^.layer_0
0.957	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.767	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.720	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.682	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.648	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	OUT ADD ^.layer_01100 = ^.layer_0110
0.590	OUT ADD ^.layer_011001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.562	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.224	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: ^.layer_0110
  _011001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 51518.3 = 51632.5
DL output with Mo: L = 145.2 + 34236.9 = 34382.1
DL input+output M: L = 259.3 + 85755.2 = 86014.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: ^.layer_0110
  _011001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 51.7 = 165.8
DL output with Mo: L = 145.2 + 34236.9 = 34382.1
DL input+output M: L = 259.3 + 34288.6 = 34547.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (3.2 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (7,0)
  _01100: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _011001: a rectangle with size (1,17) and color blue and mask Full at (9,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (11,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (13,0)
  _0111: a rectangle with size (1,17) and color blue and mask Full at (15,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=3  (3,6)=3  (3,8)=3  (3,9)=3  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,3)=0  (7,7)=0  (7,11)=0  (7,15)=0  (9,2)=0  (9,6)=0  (9,10)=0  (9,14)=0  (11,3)=0  (11,7)=0  (11,11)=0  (11,15)=0  (13,2)=0  (13,6)=0  (13,10)=0  (13,14)=0  (15,3)=0  (15,7)=0  (15,11)=0  (15,15)=0 
   (2131.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (5,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (3,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _0110: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
  _011: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
   (2.0 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (7,14) and color blue and mask .......x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (10,1)
  _01100: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
  _011001: a rectangle with size (2,4) and color green and mask xxx.|xx.x at (8,4)
  _0110: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (3,2) and color green and mask Full at (7,1)
  _0111: a rectangle with size (3,2) and color blue and mask x.|xx|.x at (10,15)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (8,1)=8  (10,1)=1  (10,4)=1  (11,1)=1  (12,0)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
   (1034.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _0110: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _0110: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
  _011: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _01: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _0110: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
   (0.0 bits)
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _01100: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _011001: a rectangle with size (5,2) and color green and mask Full at (3,5)
  _0110: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
  _011: a rectangle with size (5,1) and color green and mask Full at (3,8)
  _0111: a rectangle with size (3,1) and color green and mask Full at (4,4)
diff: 
delta: (4,7)=3  (6,7)=3 
   (257.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _0110: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (3,1) and color cyan and mask Full at (4,8)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (5,5)=1  (5,6)=1  (5,8)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask x................|.x...............|..x..............|...x.............|....x............|.....x...........|......x..........|.......x.........|........x........|.........x.......|..........x......|...........x.....|............x....|.............x...|..............x..|...............x.|................x at (0,0)
  _01: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (3,0)
  _0110: a rectangle with size (4,6) and color cyan and mask Full at (11,7)
  _011: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (0,3)
diff: 
delta: (0,6)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,7)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,8)=1  (2,11)=1  (2,14)=1  (3,9)=1  (3,12)=1  (3,15)=1  (4,10)=1  (4,13)=1  (4,16)=1  (5,11)=1  (5,14)=1  (6,0)=1  (6,12)=1  (6,15)=1  (7,1)=1  (7,13)=1  (7,16)=1  (8,2)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,15)=1  (10,1)=1  (10,4)=1  (10,16)=1  (11,2)=1  (11,5)=1  (12,0)=1  (12,3)=1  (12,6)=1  (13,1)=1  (13,4)=1  (13,7)=1  (14,2)=1  (14,5)=1  (14,8)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask x................|.x...............|..x..............|...x.............|....x............|.....x...........|......x..........|.......x.........|........x........|.........x.......|..........x......|...........x.....|............x....|.............x...|..............x..|...............x.|................x at (0,0)
  _01: a rectangle with size (4,6) and color cyan and mask x.xx.x|xx.xx.|.xx.xx|x.xx.x at (11,7)
  _0110: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (0,3)
  _011: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (3,0)
diff: 
delta: (0,6)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,7)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,8)=1  (2,11)=1  (2,14)=1  (3,9)=1  (3,12)=1  (3,15)=1  (4,10)=1  (4,13)=1  (4,16)=1  (5,11)=1  (5,14)=1  (6,0)=1  (6,12)=1  (6,15)=1  (7,1)=1  (7,13)=1  (7,16)=1  (8,2)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,15)=1  (10,1)=1  (10,4)=1  (10,16)=1  (11,2)=1  (11,5)=1  (12,0)=1  (12,3)=1  (12,6)=1  (13,1)=1  (13,4)=1  (13,7)=1  (14,2)=1  (14,5)=1  (14,8)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask x................|.x...............|..x..............|...x.............|....x............|.....x...........|......x..........|.......x.........|........x........|.........x.......|..........x......|...........x.....|............x....|.............x...|..............x..|...............x.|................x at (0,0)
  _01: a rectangle with size (4,6) and color cyan and mask x.xx.x|xx.xx.|.xx.xx|x.xx.x at (11,7)
  _0110: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (3,0)
  _011: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (0,3)
diff: 
delta: (0,6)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,7)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,8)=1  (2,11)=1  (2,14)=1  (3,9)=1  (3,12)=1  (3,15)=1  (4,10)=1  (4,13)=1  (4,16)=1  (5,11)=1  (5,14)=1  (6,0)=1  (6,12)=1  (6,15)=1  (7,1)=1  (7,13)=1  (7,16)=1  (8,2)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,15)=1  (10,1)=1  (10,4)=1  (10,16)=1  (11,2)=1  (11,5)=1  (12,0)=1  (12,3)=1  (12,6)=1  (13,1)=1  (13,4)=1  (13,7)=1  (14,2)=1  (14,5)=1  (14,8)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1 
! size mismatch, 10x10 instead of 17x17

TEST 32597951.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 34236.9 bits (34236.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-330] Checking task 3345333e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 32320.9 = 32333.5
DL output with Mo: L = 12.6 + 26142.1 = 26154.7
DL input+output M: L = 25.2 + 58463.0 = 58488.2

# learning a model for train pairs
2.000	
1.099	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.539	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.224	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.207	OUT SPE ^.size = ^.size
0.197	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.190	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.184	OUT SPE ^.layer_0.shape.size.j = ^.layer_01.shape.size.i * '2
0.180	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.178	IN  SPE ^.layer_01.shape.mask = Full
0.176	OUT SPE ^.color = black
0.174	IN  SPE ^.color = black
0.055	
0.055	IN  GEN ^.layer_01.shape.mask = ?
0.055	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_01.shape.size.i * '2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.4 + 3867.6 = 3932.9
DL output with Mo: L = 69.1 + 1309.7 = 1378.8
DL input+output M: L = 134.4 + 5177.3 = 5311.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_01.shape.size.i * '2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 69.1 + 1309.7 = 1378.8
DL input+output M: L = 133.3 + 1309.7 = 1443.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (3,4) and color blue and mask Full at (3,6)
diff: 
delta: (2,7)=6  (2,8)=6 
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,6) and color pink and mask xx..xx|xx..xx|.xxxx.|..xx..|..xx..|.xxxx.|.x..x.|.xxxx.|..xx.. at (2,3)
diff: 
delta:
   (61.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (3,4) and color blue and mask Full at (3,6)
diff: 
delta: (2,7)=6  (2,8)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Full at (3,6)
  _01: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
diff: 
delta: (2,7)=6  (2,8)=6 
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,7)
diff: 
delta: (3,6)=1  (3,7)=1  (3,8)=1  (3,9)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1 
! 30 wrong pixels (generated / expected)

TRAIN 3345333e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (4,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|.xxxxxx.|xxxxxxxx|.x.xx.x.|.x....x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
diff: 
delta:
   (69.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (4,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Full at (4,0)
  _01: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
diff: 
delta:
! 82 wrong pixels (generated / expected)

TRAIN 3345333e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color grey and mask .x...x..|..xxx.x.|......xx|..xxxxxx|...x....|..xxxxxx|xx.x.xx.|.x...x.. at (5,6)
  _01: a rectangle with size (5,4) and color cyan and mask Full at (6,4)
diff: 
delta:
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Full at (6,4)
  _01: a rectangle with size (8,8) and color grey and mask .x...x..|..xxx.x.|......xx|..xxxxxx|...x....|..xxxxxx|xx.x.xx.|.x...x.. at (5,6)
diff: 
delta:
! 69 wrong pixels (generated / expected)

TEST 3345333e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 1309.7 bits (1309.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-329] Checking task 3428a4f5.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 45981.5 = 45994.1
DL output with Mo: L = 12.6 + 18909.4 = 18922.0
DL input+output M: L = 25.2 + 64890.9 = 64916.1

# learning a model for train pairs
2.000	
1.279	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.909	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.575	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.537	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.503	OUT SPE ^.size = ^.layer_0.shape.size
0.485	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.466	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.447	OUT SPE ^.layer_0.pos = '(0, 0)
0.437	OUT SPE ^.layer_0.shape.size.j = area(^.layer_011.shape) - ^.layer_0.pos.j - ^.layer_01.pos.j
0.181	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (^.layer_0.shape.size.i,area(^.layer_011.shape) - ^.layer_0.pos.j - ^.layer_01.pos.j) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 11828.3 = 11942.4
DL output with Mo: L = 140.6 + 3212.1 = 3352.8
DL input+output M: L = 254.8 + 15040.4 = 15295.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (^.layer_0.shape.size.i,area(^.layer_011.shape) - ^.layer_0.pos.j - ^.layer_01.pos.j) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 60.0 = 174.1
DL output with Mo: L = 140.6 + 3212.1 = 3352.8
DL input+output M: L = 254.8 + 3272.1 = 3526.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _01: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _011: a rectangle with size (2,2) and color red and mask x.|xx at (2,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (5,1)=2  (12,0)=2 
   (2.0 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (5,0)
  _0: a rectangle with size (6,5) and color green and mask x..xx|xxx.x|..xxx|xxx.x|...x.|...x. at (0,0)
diff: 
delta:
   (72.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _01: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color red and mask x.|xx at (2,0)
diff: 
delta: (5,1)=2  (12,0)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _01: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color red and mask x.|xx at (2,0)
diff: 
delta: (5,1)=2  (12,0)=2 
! size mismatch, 5x3 instead of 6x5

TRAIN 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (8,2)=2  (9,0)=2 
   (2.0 bits)
data: a background with size (6,5) and color green and layers
  _00: a rectangle with size (4,2) and color black and mask x.|.x|xx|xx at (1,3)
  _0: a rectangle with size (6,2) and color black and mask x.|xx|xx|xx|.x|.x at (0,0)
diff: 
delta:
   (70.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta: (8,2)=2  (9,0)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (8,2)=2  (9,0)=2 
! 24 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .xx..|xx.x.|..xxx|xx.x.|x.x..|x..x. at (7,0)
  _01: a rectangle with size (6,5) and color black and mask ..x..|.x...|.xxxx|x.x.x|...x.|...xx at (0,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (1,1) and color black and mask Full at (5,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,3)
  _0: a rectangle with size (6,5) and color green and mask .x...|x....|.x...|.xxxx|x.xx.|xx..x at (0,0)
diff: 
delta:
   (69.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .xx..|xx.x.|..xxx|xx.x.|x.x..|x..x. at (7,0)
  _01: a rectangle with size (6,5) and color black and mask ..x..|.x...|.xxxx|x.x.x|...x.|...xx at (0,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (1,1) and color black and mask Full at (5,1)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .xx..|xx.x.|..xxx|xx.x.|x.x..|x..x. at (7,0)
  _01: a rectangle with size (6,5) and color black and mask ..x..|.x...|.xxxx|x.x.x|...x.|...xx at (0,0)
  _011: a rectangle with size (1,1) and color black and mask Full at (5,1)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
   (2.0 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (5,1) and color green and mask Full at (0,2)
  _0: a rectangle with size (6,5) and color green and mask xxx.x|x.xxx|xx.xx|xxx.x|x.x.x|...xx at (0,0)
diff: 
delta: (2,2)=0 
   (108.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _011: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _01: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _011: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
! size mismatch, 1x5 instead of 6x5

TRAIN 3428a4f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask xxx..|.xxx.|...x.|...xx|....x at (7,0)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _011: a rectangle with size (3,4) and color black and mask x...|xx..|..xx at (0,1)
  _0111: a rectangle with size (3,2) and color black and mask x.|.x|.x at (10,0)
diff: 
delta: (0,4)=0  (4,0)=0  (4,3)=0  (4,4)=0 
! size mismatch, 5x5 instead of 6x5
>> Trial 2
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _01: a rectangle with size (5,5) and color black and mask xxx..|.xxx.|...x.|...xx|....x at (7,0)
  _011: a rectangle with size (3,4) and color black and mask x...|xx..|..xx at (0,1)
  _0111: a rectangle with size (3,2) and color black and mask x.|.x|.x at (10,0)
diff: 
delta: (0,4)=0  (4,0)=0  (4,3)=0  (4,4)=0 
! size mismatch, 1x5 instead of 6x5

TEST 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask ..x.x|..x.x|...x.|.xxx.|x.xx.|xxx.x at (0,0)
  _01: a rectangle with size (6,5) and color red and mask xx...|.xxxx|..xx.|.x...|.xx..|x.... at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (11,4)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask ..x.x|..x.x|...x.|.xxx.|x.xx.|xxx.x at (0,0)
  _01: a rectangle with size (6,5) and color red and mask xx...|.xxxx|..xx.|.x...|.xx..|x.... at (7,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (11,4)=2 
! 22 wrong pixels (generated / expected)

TEST 3428a4f5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 35.9 sec (35.9 sec/task)
bits-train-error = 3212.1 bits (3212.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-328] Checking task 3618c87e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9540.8 = 9553.4
DL output with Mo: L = 12.6 + 7764.8 = 7777.5
DL input+output M: L = 25.2 + 17305.7 = 17330.9

# learning a model for train pairs
2.000	
1.391	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.864	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.736	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.662	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.529	OUT SPE ^.size = ^.size
0.479	OUT SPE ^.layer_0.shape.size = projJ(^.layer_0.shape.size) + (2, 0)
0.444	OUT SPE ^.layer_0.pos = '(3, 0)
0.410	OUT SPE ^.layer_01.pos = ^.layer_01.pos + (2, 0)
0.388	OUT SPE ^.layer_0.shape.color = grey
0.370	IN  SPE ^.color = grey
0.353	IN  SPE ^.layer_0.shape.color = black
0.335	IN  SPE ^.layer_01.shape.color = blue
0.325	IN  SPE ^.layer_01.shape.mask = Full
0.315	OUT SPE ^.color = black
0.070	
0.069	IN  GEN ^.color = ?
0.069	IN  GEN ^.layer_01.shape.color = ?
0.069	IN  GEN ^.layer_0.shape.color = ?
0.068	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size projJ(^.layer_0.shape.size) + (2, 0) and color grey and mask ? at '(3, 0)
  _01: ^.layer_01.shape at ^.layer_01.pos + (2, 0)
WHERE (Mi)
a background with size (?,?) and color grey and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 78.5 + 2344.7 = 2423.2
DL output with Mo: L = 81.8 + 398.1 = 479.9
DL input+output M: L = 160.3 + 2742.8 = 2903.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size projJ(^.layer_0.shape.size) + (2, 0) and color grey and mask ? at '(3, 0)
  _01: ^.layer_01.shape at ^.layer_01.pos + (2, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 81.8 + 398.1 = 479.9
DL input+output M: L = 146.0 + 398.1 = 544.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta:
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 3618c87e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|x.x.x|x.x.x at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|x.x.x|x.x.x at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 3618c87e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|x.xx.|x.xx. at (0,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|x.xx. at (3,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (4,1)
diff: 
delta:
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|x.xx.|x.xx. at (0,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (2,1)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 3618c87e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|xx.x.|xx.x. at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TEST 3618c87e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 398.1 bits (398.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-327] Checking task 3631a71a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 742773.2 = 742785.8
DL output with Mo: L = 12.6 + 681422.3 = 681434.9
DL input+output M: L = 25.2 + 1424195.5 = 1424220.7

# learning a model for train pairs
2.000	
1.907	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.826	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.762	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.719	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.681	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.646	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.621	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.596	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.573	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.542	OUT ADD ^.layer_0111 = ^.layer_011111
0.819	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 536880.8 = 537044.4
DL output with Mo: L = 103.2 + 558062.4 = 558165.6
DL input+output M: L = 266.8 + 1094943.3 = 1095210.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 0.0 = 163.5
DL output with Mo: L = 103.2 + 558062.4 = 558165.6
DL input+output M: L = 266.8 + 558062.4 = 558329.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
  _01111: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
  _011111: a rectangle with size (4,4) and color grey and mask xx..|.x..|..xx|...x at (0,20)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.xx..xx.|xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (12,12)
  _01: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
  _011: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (8,0)
  _0111: a rectangle with size (4,4) and color grey and mask xx..|.x..|..xx|...x at (0,20)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (5,23)=1  (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (6,25)=3  (6,28)=7# (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (7,22)=7# (7,29)=7# (8,0)=6  (8,1)=6  (8,5)=1  (8,10)=4  (8,21)=4  (8,26)=1  (8,28)=5# (8,29)=5# (9,0)=6  (9,1)=6  (9,4)=1  (9,7)=7# (9,9)=8  (9,22)=8  (9,24)=7# (9,27)=1  (9,29)=5# (10,2)=4  (10,8)=4  (10,11)=5# (10,15)=7# (10,16)=7# (10,20)=5# (10,23)=4  (10,29)=4  (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,14)=7# (11,17)=7# (11,21)=5# (11,24)=2  (11,26)=7# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,12)=1  (12,19)=1  (12,25)=4  (12,27)=7# (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (9872.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
  _01111: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
  _011111: a rectangle with size (4,4) and color grey and mask xx..|.x..|..xx|...x at (0,20)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
  _01111: a rectangle with size (4,4) and color grey and mask xx..|.x..|..xx|...x at (0,20)
  _011111: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01111: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
  _011111: a rectangle with size (6,6) and color blue and mask ..xxx.|..xx.x|xx....|xx....|x.....|.x.... at (4,4)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
  _011: a rectangle with size (8,4) and color orange and mask ..x.|...x|x..x|.xx.|.xx.|x..x|...x|..x. at (12,8)
  _0111: a rectangle with size (6,6) and color blue and mask ..xxx.|..xx.x|xx....|xx....|x.....|.x.... at (4,4)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (1,21)=3  (1,23)=8  (1,24)=3  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,21)=4  (2,22)=3  (2,23)=3  (2,25)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,21)=4  (3,23)=3  (3,26)=3  (3,29)=7# (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (4,21)=8  (4,23)=1  (4,24)=1  (4,25)=1  (5,3)=3  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,13)=5# (19,18)=5# (19,21)=7# (19,22)=5# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=2  (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,20)=6  (25,21)=6  (25,23)=8  (25,24)=2  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,22)=1  (26,24)=1  (26,25)=1  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,17)=6  (28,21)=4  (28,23)=3  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,17)=6  (29,19)=8  (29,20)=4  (29,21)=4  (29,22)=3  (29,23)=3  (29,25)=4  (29,28)=7# (29,29)=7#
   (15320.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01111: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
  _011111: a rectangle with size (6,6) and color blue and mask ..xxx.|..xx.x|xx....|xx....|x.....|.x.... at (4,4)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01111: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
  _011111: a rectangle with size (6,6) and color blue and mask .x....|x.....|xx....|xx....|..xx.x|..xxx. at (22,4)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,13)=3  (26,18)=3  (26,28)=3  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (7,4) and color brown and mask Full at (0,17)
  _01: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _011: a rectangle with size (7,3) and color brown and mask Full at (7,0)
  _0111: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
  _01111: a rectangle with size (12,6) and color cyan and mask ....xx|....x.|..xx..|..xx..|xx....|x.....|x.....|xx....|..xx..|..xx..|....x.|....xx at (10,2)
  _011111: a rectangle with size (12,6) and color cyan and mask xx....|.x....|..xx..|..xx..|....xx|.....x|.....x|....xx|..xx..|..xx..|.x....|xx.... at (10,24)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,29)=2  (11,5)=3  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,26)=3  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (13,3)=3  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,28)=3  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (15,1)=3  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (16,1)=3  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (18,0)=4  (18,1)=4  (18,3)=3  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,28)=3  (19,0)=4  (19,1)=4  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (20,0)=4  (20,1)=4  (20,5)=3  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,26)=3  (21,1)=4  (21,2)=2  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _01: a rectangle with size (6,12) and color cyan and mask ....xxxx....|....x..x....|..xx....xx..|..xx....xx..|xx........xx|x..........x at (2,10)
  _011: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
  _0111: a rectangle with size (12,6) and color cyan and mask xx....|.x....|..xx..|..xx..|....xx|.....x|.....x|....xx|..xx..|..xx..|.x....|xx.... at (10,24)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,18)=4  (0,19)=4  (0,20)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,18)=4  (1,19)=4  (1,20)=4  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,18)=3  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,14)=7# (5,15)=7# (5,16)=7# (5,17)=7# (5,20)=3  (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,13)=7# (6,15)=5# (6,16)=5# (6,18)=7# (6,25)=1  (6,28)=4  (6,29)=4  (7,2)=4  (7,7)=1  (7,9)=3  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,22)=3  (7,24)=1  (7,29)=4  (8,0)=8  (8,1)=8  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,0)=8  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,1)=4  (10,2)=2  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,29)=2  (11,0)=4  (11,1)=4  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,26)=3  (12,0)=4  (12,1)=4  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (13,0)=4  (13,1)=4  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (15344.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (7,4) and color brown and mask Full at (0,17)
  _01: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _011: a rectangle with size (7,3) and color brown and mask Full at (7,0)
  _0111: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
  _01111: a rectangle with size (12,6) and color cyan and mask ....xx|....x.|..xx..|..xx..|xx....|x.....|x.....|xx....|..xx..|..xx..|....x.|....xx at (10,2)
  _011111: a rectangle with size (12,6) and color cyan and mask xx....|.x....|..xx..|..xx..|....xx|.....x|.....x|....xx|..xx..|..xx..|.x....|xx.... at (10,24)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,29)=2  (11,5)=3  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,26)=3  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (13,3)=3  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,28)=3  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (15,1)=3  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (16,1)=3  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (18,0)=4  (18,1)=4  (18,3)=3  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,28)=3  (19,0)=4  (19,1)=4  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (20,0)=4  (20,1)=4  (20,5)=3  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,26)=3  (21,1)=4  (21,2)=2  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|.....x....xx....|.....x.xx.x.x...|......xxxx.xxx..|.....x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (7,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxx.....|xxx..... at (11,5)
  _011: a rectangle with size (20,9) and color red and mask ......x..|.......xx|.......x.|......x..|.....x...|....x....|...x.....|..x......|.x.......|x........|x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|.......xx|......x.. at (6,0)
  _0111: a rectangle with size (14,18) and color red and mask ...xx.............|..x..x............|.x....x...........|x......x..........|........x.........|.........x........|..........x..x....|...........xx.....|............x.....|.............x....|..............x...|...............x..|................x.|.................x at (0,12)
  _01111: a rectangle with size (7,2) and color brown and mask Full at (23,9)
  _011111: a rectangle with size (12,12) and color red and mask ...........x|..........x.|.........x..|........x...|.......x....|......x.....|.....xx.....|....x..x....|...x........|..x.........|.x..........|x........... at (18,18)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,27)=9# (7,28)=9# (7,29)=9# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=9# (8,28)=9# (8,29)=9# (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=9# (9,28)=9# (9,29)=9# (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,27)=9# (10,28)=9# (10,29)=9# (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,26)=3  (23,27)=3  (23,28)=6  (24,15)=4  (24,16)=4  (24,21)=7# (25,0)=6  (25,4)=6  (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x.x.xx.x.x...|..xxx.xxxx.xxx..|.x...x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (30,30) and color red and mask ...............xx.............|..............x..x............|.............x....x...........|............x......x..........|...........x........x.........|..........x..........x........|......x..x............x..x....|.......xx..............xx.....|.......x................x.....|......x..................x....|.....x....................x...|....x......................x..|...x........................x.|..x..........................x|.x............................|x.............................|x.............................|.x............................|..x...........................|...x..........................|....x.........................|.....x........................|......x.......................|.......x......................|.......xx.....................|......x..x....................|..........x...................|...........x..................|............x.................|.............x................ at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask Border at (14,14)
  _0111: a rectangle with size (12,12) and color red and mask ...........x|..........x.|.........x..|........x...|.......x....|......x.....|.....xx.....|....x..x....|...x........|..x.........|.x..........|x........... at (18,18)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=3  (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,10)=7# (6,11)=7# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=3  (8,28)=6  (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=3  (9,28)=6  (9,29)=6  (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,28)=3  (10,29)=3  (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,6)=7# (11,8)=1  (11,9)=1  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,5)=4  (12,6)=1  (12,8)=7# (12,9)=7# (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,5)=4  (13,8)=7# (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,10)=4  (14,11)=4  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,7)=4  (15,10)=4  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,7)=4  (16,10)=4  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,9)=8  (23,10)=1  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,26)=3  (23,27)=3  (23,28)=6  (24,10)=7# (24,15)=4  (24,16)=4  (24,21)=7# (25,0)=6  (25,4)=6  (25,10)=7# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=3  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=6  (28,10)=3  (28,11)=3  (28,14)=7# (28,17)=7# (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=6  (29,10)=3  (29,11)=3  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (15269.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|.....x....xx....|.....x.xx.x.x...|......xxxx.xxx..|.....x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (7,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxx.....|xxx..... at (11,5)
  _011: a rectangle with size (20,9) and color red and mask ......x..|.......xx|.......x.|......x..|.....x...|....x....|...x.....|..x......|.x.......|x........|x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|.......xx|......x.. at (6,0)
  _0111: a rectangle with size (14,18) and color red and mask ...xx.............|..x..x............|.x....x...........|x......x..........|........x.........|.........x........|..........x..x....|...........xx.....|............x.....|.............x....|..............x...|...............x..|................x.|.................x at (0,12)
  _01111: a rectangle with size (7,2) and color brown and mask Full at (23,9)
  _011111: a rectangle with size (12,12) and color red and mask ...........x|..........x.|.........x..|........x...|.......x....|......x.....|.....xx.....|....x..x....|...x........|..x.........|.x..........|x........... at (18,18)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,27)=9# (7,28)=9# (7,29)=9# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=9# (8,28)=9# (8,29)=9# (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=9# (9,28)=9# (9,29)=9# (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,27)=9# (10,28)=9# (10,29)=9# (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,26)=3  (23,27)=3  (23,28)=6  (24,15)=4  (24,16)=4  (24,21)=7# (25,0)=6  (25,4)=6  (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (9,7) and color brown and mask xxxxx..|xxxxx..|xxxxx..|xxxxx..|xxxxxxx|..xxxxx|..xxxxx|..xxxxx|..xxxxx at (3,20)
  _01: a rectangle with size (3,7) and color brown and mask Full at (2,0)
  _011: a rectangle with size (12,12) and color pink and mask ...........x|..........xx|.........x..|........xx..|.......x....|......xx....|.....x......|....xx......|...x........|..xx........|.x..........|xx.......... at (0,0)
  _0111: a rectangle with size (12,6) and color pink and mask .....x|....x.|..xx..|..xx..|.x....|x.....|x.....|.x....|..xx..|..xx..|....x.|.....x at (10,2)
  _01111: a rectangle with size (10,10) and color pink and mask xx........|.x........|..xx......|...x......|....xx....|.....x....|......xx..|.......x..|........xx|.........x at (20,0)
  _011111: a rectangle with size (2,7) and color brown and mask Full at (27,18)
diff: 
delta: (0,0)=8  (0,2)=7# (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,9)=3  (0,13)=8  (0,18)=8  (0,20)=6  (0,22)=3  (0,24)=1  (0,25)=1  (0,26)=7# (0,27)=7# (0,29)=7# (1,1)=8  (1,4)=7# (1,5)=7# (1,6)=1  (1,7)=1  (1,8)=3  (1,9)=3  (1,12)=8  (1,13)=8  (1,18)=8  (1,19)=8  (1,20)=6  (1,21)=6  (1,22)=3  (1,23)=3  (1,24)=1  (1,25)=1  (1,26)=7# (1,27)=7# (2,7)=8  (2,10)=7# (2,11)=7# (2,15)=6  (2,16)=6  (2,20)=7# (2,21)=7# (2,22)=6  (2,24)=8  (2,26)=1  (2,27)=1  (2,29)=2  (3,10)=7# (3,11)=7# (3,14)=6  (3,17)=6  (3,25)=8  (3,26)=1  (3,27)=1  (4,9)=8  (4,12)=6  (4,13)=6  (4,18)=6  (4,19)=6  (4,28)=1  (4,29)=1  (5,0)=7# (5,1)=7# (5,2)=1  (5,3)=1  (5,5)=5# (5,8)=8  (5,9)=8  (5,12)=6  (5,13)=6  (5,18)=6  (5,19)=6  (5,25)=6  (5,26)=5# (5,28)=1  (5,29)=1  (6,0)=1  (6,1)=1  (6,3)=8  (6,6)=2  (6,11)=6  (6,14)=5# (6,15)=5# (6,16)=5# (6,17)=5# (6,25)=2  (6,26)=6  (6,28)=8  (7,0)=1  (7,1)=1  (7,2)=8  (7,7)=2  (7,10)=6  (7,14)=5# (7,17)=5# (7,27)=6  (7,29)=8  (8,1)=3  (8,5)=8  (8,12)=6  (8,14)=3  (8,17)=3  (8,19)=6  (8,28)=6  (9,0)=3  (9,1)=3  (9,4)=8  (9,5)=8  (9,9)=6  (9,11)=5# (9,15)=3  (9,16)=3  (9,20)=5# (9,27)=8  (9,28)=6  (9,29)=6  (10,2)=7# (10,3)=7# (10,12)=3  (10,15)=6  (10,16)=6  (10,19)=3  (10,28)=7# (10,29)=7# (11,2)=7# (11,3)=7# (11,9)=5# (11,13)=3  (11,14)=6  (11,15)=6  (11,16)=6  (11,17)=6  (11,18)=3  (11,28)=7# (11,29)=7# (12,1)=8  (12,8)=6  (12,10)=3  (12,13)=4  (12,14)=3  (12,17)=3  (12,18)=4  (12,21)=3  (12,23)=6  (12,26)=6  (12,27)=6  (13,0)=8  (13,1)=8  (13,11)=3  (13,12)=4  (13,19)=4  (13,20)=3  (13,26)=6  (13,27)=6  (14,6)=5# (14,7)=5# (14,8)=3  (14,11)=6  (14,12)=3  (14,14)=2  (14,17)=2  (14,19)=3  (14,20)=6  (14,23)=3  (14,24)=5# (14,25)=5# (14,28)=6  (15,6)=5# (15,9)=3  (15,10)=6  (15,11)=6  (15,15)=2  (15,16)=2  (15,20)=6  (15,21)=6  (15,22)=3  (15,25)=5# (15,29)=6  (16,6)=5# (16,9)=3  (16,10)=6  (16,11)=6  (16,15)=2  (16,16)=2  (16,20)=6  (16,21)=6  (16,22)=3  (16,25)=5# (16,29)=6  (17,6)=5# (17,7)=5# (17,8)=3  (17,11)=6  (17,12)=3  (17,14)=2  (17,17)=2  (17,19)=3  (17,20)=6  (17,23)=3  (17,24)=5# (17,25)=5# (17,28)=6  (18,0)=8  (18,1)=8  (18,11)=3  (18,12)=4  (18,19)=4  (18,20)=3  (18,26)=6  (18,27)=6  (19,1)=8  (19,8)=6  (19,10)=3  (19,13)=4  (19,14)=3  (19,17)=3  (19,18)=4  (19,21)=3  (19,23)=6  (19,26)=6  (19,27)=6  (20,2)=7# (20,3)=7# (20,9)=5# (20,13)=3  (20,14)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=3  (20,22)=5# (20,25)=6  (20,28)=7# (20,29)=7# (21,2)=7# (21,3)=7# (21,12)=3  (21,15)=6  (21,16)=6  (21,19)=3  (21,24)=6  (21,28)=7# (21,29)=7# (22,0)=3  (22,1)=3  (22,4)=8  (22,5)=8  (22,9)=6  (22,11)=5# (22,15)=3  (22,16)=3  (22,20)=5# (22,22)=6  (22,26)=8  (22,27)=8  (22,28)=6  (22,29)=6  (23,1)=3  (23,5)=8  (23,12)=6  (23,14)=3  (23,17)=3  (23,19)=6  (23,26)=8  (23,28)=6  (24,0)=1  (24,1)=1  (24,2)=8  (24,7)=2  (24,10)=6  (24,14)=5# (24,17)=5# (24,21)=6  (24,24)=2  (24,26)=6  (24,27)=6  (24,29)=8  (25,0)=1  (25,1)=1  (25,3)=8  (25,6)=2  (25,11)=6  (25,14)=5# (25,15)=5# (25,16)=5# (25,17)=5# (25,20)=6  (25,25)=2  (25,26)=6  (25,28)=8  (26,0)=7# (26,1)=7# (26,2)=1  (26,3)=1  (26,5)=5# (26,8)=8  (26,9)=8  (26,12)=6  (26,13)=6  (26,18)=6  (26,19)=6  (26,22)=8  (26,23)=8  (26,24)=6  (26,25)=6  (26,26)=5# (26,28)=1  (26,29)=1  (27,0)=7# (27,1)=7# (27,2)=1  (27,3)=1  (27,9)=8  (27,12)=6  (27,13)=6  (27,28)=1  (27,29)=1  (28,4)=1  (28,5)=1  (28,6)=8  (28,10)=7# (28,11)=7# (28,14)=6  (28,17)=6  (28,25)=8  (28,26)=1  (28,27)=1  (29,0)=7# (29,2)=2  (29,4)=1  (29,5)=1  (29,7)=8  (29,10)=7# (29,11)=7# (29,15)=6  (29,16)=6  (29,20)=7# (29,21)=7# (29,22)=6  (29,24)=8  (29,26)=1  (29,27)=1  (29,29)=2 
! size mismatch, 10x10 instead of 30x30

TEST 3631a71a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 63.0 sec (63.0 sec/task)
bits-train-error = 558062.4 bits (558062.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-326] Checking task 363442ee.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26023.6 = 26036.2
DL output with Mo: L = 12.6 + 65009.5 = 65022.1
DL input+output M: L = 25.2 + 91033.2 = 91058.4

# learning a model for train pairs
2.000	
1.650	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.494	OUT ADD ^.layer_0 = ^.layer_0
1.357	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.227	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.005	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.977	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.942	OUT ADD ^.layer_010 = ^.layer_01
0.909	OUT ADD ^.layer_01111 = ^.layer_0111
0.884	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.856	OUT ADD ^.layer_01110 = ^.layer_011.shape at (?,?)
0.814	IN  SPE ^.layer_0.shape.color = grey
0.804	OUT SPE ^.size = ^.size
0.796	IN  SPE ^.layer_011.shape.mask = Full
0.792	IN  SPE ^.layer_0.shape.mask = Full
0.789	IN  SPE ^.layer_0111.shape.mask = Full
0.786	IN  SPE ^.color = black
0.783	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.i * '3
0.781	OUT SPE ^.layer_0111.shape.mask = Full
0.379	
0.379	IN  GEN ^.layer_0111.shape.mask = ?
0.378	IN  GEN ^.layer_011.shape.mask = ?
0.378	IN  GEN ^.layer_0.shape.mask = ?
0.378	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_01.shape.size.i * '3) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_011.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 120.6 + 10497.0 = 10617.5
DL output with Mo: L = 170.9 + 24123.5 = 24294.4
DL input+output M: L = 291.4 + 34620.5 = 34911.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_01.shape.size.i * '3) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_011.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 170.9 + 24111.8 = 24282.7
DL input+output M: L = 288.3 + 24111.8 = 24400.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color red and mask .xx|x.x at (0,0)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color pink and mask Full at (1,0)
diff: 
delta: (0,0)=4  (1,5)=1  (4,8)=1  (7,8)=1 
   (0.0 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,3) and color red and mask .xx|x.x at (0,0)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (2,1)
  _0110: a rectangle with size (1,2) and color yellow and mask Full at (5,8)
  _011: a rectangle with size (5,3) and color red and mask Full at (3,7)
  _01110: a rectangle with size (1,2) and color yellow and mask Full at (8,8)
  _0111: a rectangle with size (2,3) and color red and mask Full at (0,4)
  _01111: a rectangle with size (2,2) and color pink and mask Full at (1,0)
diff: 
delta: (0,0)=4  (0,4)=4  (1,5)=6  (2,4)=6  (3,7)=4  (4,8)=6  (5,7)=6  (6,7)=4  (7,8)=6  (8,7)=6 
   (494.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color red and mask .xx|x.x at (0,0)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color pink and mask Full at (1,0)
diff: 
delta: (0,0)=4  (1,5)=1  (4,8)=1  (7,8)=1 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _011: a rectangle with size (2,3) and color red and mask .xx|x.x at (0,0)
  _0111: a rectangle with size (2,2) and color pink and mask Full at (1,0)
diff: 
delta: (0,0)=4  (1,5)=1  (4,8)=1  (7,8)=1 
! 33 wrong pixels (generated / expected)

TRAIN 363442ee.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _011: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _0111: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=7# (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
   (0.0 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _01: a rectangle with size (6,9) and color green and mask ........x|.......xx|......x..|..x..x...|.xx.xx...|x..x..... at (3,4)
  _0110: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _011: a rectangle with size (6,6) and color green and mask .....x|....xx|...x..|..x...|.xx...|x..... at (0,4)
  _01110: a rectangle with size (1,2) and color orange and mask Full at (2,8)
  _0111: a rectangle with size (4,2) and color orange and mask Full at (5,5)
  _01111: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=7# (0,7)=2  (0,8)=7# (1,7)=2  (3,4)=2  (3,5)=7# (3,10)=2  (3,11)=7# (4,4)=2  (4,10)=2  (5,11)=7# (5,12)=7# (6,4)=2  (6,7)=2  (6,8)=7# (7,4)=2  (7,7)=2  (8,8)=7# (8,9)=7#
   (917.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _011: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _0111: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=7# (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (2,1)
diff: 
delta: (0,1)=7# (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! 54 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _011: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _0111: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=7# (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! 51 wrong pixels (generated / expected)

TRAIN 363442ee.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _011: a rectangle with size (2,3) and color brown and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
   (0.0 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (2,6) and color brown and mask x..x..|xxxxxx at (7,7)
  _0110: a rectangle with size (2,3) and color brown and mask Full at (1,10)
  _011: a rectangle with size (2,7) and color brown and mask Full at (1,0)
  _01110: a rectangle with size (2,3) and color brown and mask Full at (4,7)
  _0111: a rectangle with size (2,4) and color cyan and mask Full at (6,8)
  _01111: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=6  (0,4)=3  (0,5)=8  (0,6)=6  (0,10)=3  (0,11)=8  (0,12)=6  (1,2)=2  (1,5)=8  (1,6)=2  (1,11)=8  (1,12)=2  (3,7)=3  (3,8)=8  (3,9)=6  (4,8)=8  (4,9)=2  (6,7)=3  (6,9)=6  (6,10)=3  (6,12)=6  (7,9)=2  (7,12)=2 
   (999.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _011: a rectangle with size (2,3) and color brown and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color brown and mask x..|xxx at (1,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! 50 wrong pixels (generated / expected)

TRAIN 363442ee.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,2)=9# (1,8)=1  (1,11)=1  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
diff: 
delta: (0,2)=9# (1,8)=1  (1,11)=1  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! 61 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,2)=9# (1,8)=1  (1,11)=1  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! 60 wrong pixels (generated / expected)

TEST 363442ee.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.0 sec (61.0 sec/task)
bits-train-error = 24111.8 bits (24111.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-325] Checking task 36d67576.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26030.2 = 26042.9
DL output with Mo: L = 12.6 + 35162.0 = 35174.6
DL input+output M: L = 25.2 + 61192.2 = 61217.4

# learning a model for train pairs
2.000	
1.826	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.652	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.478	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.316	OUT ADD ^.layer_0 = ^.layer_0
1.153	OUT ADD ^.layer_01 = ^.layer_01
0.991	OUT ADD ^.layer_011 = ^.layer_011
0.952	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.898	OUT ADD ^.layer_0111 = ^.layer_0111
0.854	OUT ADD ^.layer_01111 = ^.layer_0111.shape at (?,?)
0.825	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.802	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.770	OUT ADD ^.layer_011110 = ^.layer_01111
0.746	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.714	OUT ADD ^.layer_0111111 = ^.layer_011111
0.690	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.666	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.647	OUT SPE ^.size = ^.size
0.641	IN  SPE ^.layer_0.shape.color = yellow
0.635	IN  SPE ^.layer_01.shape.color = yellow
0.628	IN  SPE ^.layer_011.shape.color = yellow
0.623	OUT SPE ^.layer_011111.pos.j = 3
0.619	IN  SPE ^.layer_0111.shape.mask = Full
0.616	OUT SPE ^.layer_011111.shape.size.i = ^.layer_0111.shape.size.j
0.613	OUT SPE ^.layer_01111.pos.i = ^.layer_0111111.pos.j + 2
0.610	IN  SPE ^.color = black
0.607	OUT SPE ^.layer_011111.shape.size.j = 1
0.604	OUT SPE ^.layer_011111.pos.i = ^.layer_01111111.pos.j + ^.layer_011111.pos.i - ^.layer_01111.pos.i
0.600	OUT SPE ^.layer_01111.pos.j = center(^.layer_0) - ^.layer_01111.pos.i - ^.layer_01.pos.i
0.597	OUT SPE ^.layer_011111.shape.mask = Full
0.595	OUT SPE ^.color = black
0.285	
0.285	IN  GEN ^.layer_011.shape.color = ?
0.284	IN  GEN ^.layer_01.shape.color = ?
0.284	IN  GEN ^.layer_0.shape.color = ?
0.284	IN  GEN ^.layer_0111.shape.mask = ?
0.284	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _011110: ^.layer_01111
  _01111: ^.layer_0111.shape at (^.layer_0111111.pos.j + 2,center(^.layer_0) - ^.layer_01111.pos.i - ^.layer_01.pos.i)
  _011111: a rectangle with size (^.layer_0111.shape.size.j,1) and color ? and mask Full at (^.layer_01111111.pos.j + ^.layer_011111.pos.i - ^.layer_01111.pos.i,3)
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 186.7 + 8143.9 = 8330.6
DL output with Mo: L = 232.1 + 9458.0 = 9690.1
DL input+output M: L = 418.7 + 17601.9 = 18020.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _011110: ^.layer_01111
  _01111: ^.layer_0111.shape at (^.layer_0111111.pos.j + 2,center(^.layer_0) - ^.layer_01111.pos.i - ^.layer_01.pos.i)
  _011111: a rectangle with size (^.layer_0111.shape.size.j,1) and color ? and mask Full at (^.layer_01111111.pos.j + ^.layer_011111.pos.i - ^.layer_01111.pos.i,3)
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 175.6 + 51.7 = 227.3
DL output with Mo: L = 232.1 + 9458.0 = 9690.1
DL input+output M: L = 407.6 + 9509.7 = 9917.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01111: a point with color blue at (1,4)
  _011111: a point with color red at (1,5)
  _0111111: a point with color green at (3,1)
  _01111111: a point with color green at (3,3)
diff: 
delta: (3,5)=3  (6,11)=2  (9,3)=2 
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _011110: a point with color blue at (1,4)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (3,11)
  _011111: a rectangle with size (1,1) and color green and mask Full at (3,3)
  _0111111: a point with color red at (1,5)
diff: 
delta: (2,9)=3  (3,1)=3  (3,5)=3  (4,9)=3  (5,11)=1  (6,9)=3  (6,11)=2  (7,3)=3  (7,5)=3  (7,7)=3  (9,3)=2  (9,4)=1  (9,6)=1 
   (506.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01111: a point with color blue at (1,4)
  _011111: a point with color red at (1,5)
  _0111111: a point with color green at (3,1)
  _01111111: a point with color green at (3,3)
diff: 
delta: (3,5)=3  (6,11)=2  (9,3)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01111: a point with color blue at (1,4)
  _011111: a point with color red at (1,5)
  _0111111: a point with color green at (3,1)
  _01111111: a point with color green at (3,5)
diff: 
delta: (3,3)=3  (6,11)=2  (9,3)=2 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (1,2)
  _01111: a point with color red at (1,5)
  _011111: a point with color green at (3,1)
  _0111111: a point with color green at (3,3)
  _01111111: a point with color green at (3,5)
diff: 
delta: (1,3)=0  (6,11)=2  (9,3)=2 
! 15 wrong pixels (generated / expected)

TRAIN 36d67576.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color red at (4,9)
  _0111111: a point with color blue at (2,5)
  _01111111: a point with color red at (11,6)
diff: 
delta:
   (3.2 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _011110: a point with color red at (1,4)
  _01111: a rectangle with size (1,4) and color green and mask Full at (7,8)
  _011111: a rectangle with size (4,1) and color green and mask Full at (9,3)
  _0111111: a point with color red at (4,9)
diff: 
delta: (2,5)=1  (5,8)=1  (11,6)=2  (12,5)=1 
   (162.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color blue at (2,5)
  _0111111: a point with color red at (4,9)
  _01111111: a point with color red at (11,6)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color blue at (2,5)
  _0111111: a point with color red at (11,6)
  _01111111: a point with color red at (4,9)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color red at (4,9)
  _0111111: a point with color blue at (2,5)
  _01111111: a point with color red at (11,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 36d67576.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color green at (3,2)
  _0111111: a point with color blue at (4,3)
  _01111111: a point with color red at (11,3)
diff: 
delta: (5,7)=2 
   (2.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _011110: a point with color blue at (2,1)
  _01111: a rectangle with size (1,1) and color red and mask Full at (5,7)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (4,3)
  _0111111: a point with color green at (3,2)
diff: 
delta: (6,10)=1  (7,9)=3  (8,4)=1  (8,8)=1  (9,5)=3  (10,6)=1  (11,3)=2 
   (277.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color green at (3,2)
  _0111111: a point with color blue at (4,3)
  _01111111: a point with color red at (5,7)
diff: 
delta: (11,3)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color green at (3,2)
  _0111111: a point with color blue at (4,3)
  _01111111: a point with color red at (11,3)
diff: 
delta: (5,7)=2 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color green at (3,2)
  _0111111: a point with color red at (5,7)
  _01111111: a point with color blue at (4,3)
diff: 
delta: (11,3)=2 
! 10 wrong pixels (generated / expected)

TRAIN 36d67576.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
  _01111: a point with color blue at (2,2)
  _011111: a point with color green at (2,3)
  _0111111: a point with color red at (3,4)
  _01111111: a point with color green at (4,5)
diff: 
delta: (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
  _01111: a point with color blue at (2,2)
  _011111: a point with color green at (2,3)
  _0111111: a point with color green at (4,5)
  _01111111: a point with color red at (3,4)
diff: 
delta: (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 26 wrong pixels (generated / expected)

TEST 36d67576.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.5 sec (16.5 sec/task)
bits-train-error = 9458.0 bits (9458.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-324] Checking task 36fdfd69.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 141113.3 = 141125.9
DL output with Mo: L = 12.6 + 143741.2 = 143753.8
DL input+output M: L = 25.2 + 284854.4 = 284879.7

# learning a model for train pairs
2.000	
1.390	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.903	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.847	OUT ADD ^.layer_01 = ^.layer_0
0.800	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.739	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.699	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.671	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.652	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.647	OUT ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT SPE ^.size = ^.size
0.640	OUT SPE ^.layer_0111111.shape.size = '(2, 2)
0.638	OUT SPE ^.color = ^.color
0.179	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 64833.7 = 64872.5
DL output with Mo: L = 201.4 + 25489.0 = 25690.4
DL input+output M: L = 240.2 + 90322.7 = 90562.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 31.7 = 70.5
DL output with Mo: L = 201.4 + 25489.0 = 25690.4
DL input+output M: L = 240.2 + 25520.7 = 25760.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,18) and color blue and layers
  _0: a rectangle with size (17,18) and color black and mask .......xxxxxx.....|.........xx.x.....|.........x...xx...|.x.......x.xxx....|x...xx...xxx.x..xx|.x.xx..xxx....xxxx|.x.xxx.x.xxxxx..x.|xxx.xx.xxx.xxx...x|x.x..xxxx.xxxx....|xxxxx.xxxxxxxx..xx|x..x........x.xxxx|xxxxxx.....xx..xx.|xxxxx......xx.x...|x.xxxxxx..x.x.....|xx.xxx.xx.xxxxx...|xxxxxx...x.x.xx...|.xx.xx...x..xxxxx. at (0,0)
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,4)=0  (0,14)=0  (0,15)=0  (0,16)=0  (1,2)=2  (1,16)=0  (1,17)=0  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,17)=0  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (7,15)=2  (8,14)=2  (8,15)=2  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,16)=0  (13,17)=0  (14,17)=0 
   (0.0 bits)
data: a background with size (17,18) and color blue and layers
  _0: a rectangle with size (4,5) and color black and mask Full at (9,0)
  _01: a rectangle with size (17,18) and color black and mask .......xxxxxx.....|.........xx.x.....|.........x...xx...|.x.......x.xxx....|x...xx...xxx.x..xx|.x.xx..xxx....xxxx|.x.xxx.x.xxxxx..x.|xxx.xx.xxx.xxx...x|x.x..xxxx.xxxx....|xxxxx.xxxxxxxx..xx|x..x........x.xxxx|xxxxxx.....xx..xx.|xxxxx......xx.x...|x.xxxxxx..x.x.....|xx.xxx.xx.xxxxx...|xxxxxx...x.x.xx...|.xx.xx...x..xxxxx. at (0,0)
  _011: a rectangle with size (3,7) and color red and mask x......|.x.xxxx|x.xxxxx at (1,2)
  _0111: a rectangle with size (3,5) and color yellow and mask Full at (10,6)
  _01111: a rectangle with size (3,7) and color yellow and mask Full at (1,2)
  _011111: a rectangle with size (3,4) and color black and mask xxx.|..xx|...x at (0,14)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,14)
  _01111111: a rectangle with size (1,4) and color black and mask Full at (0,1)
diff: 
delta: (7,14)=4  (10,0)=0  (10,1)=1  (10,2)=1  (10,3)=0  (10,4)=1  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,16)=0  (13,17)=0  (14,17)=0 
   (867.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color blue and layers
  _0: a rectangle with size (17,18) and color black and mask .......xxxxxx.....|.........xx.x.....|.........x...xx...|.x.......x.xxx....|x...xx...xxx.x..xx|.x.xx..xxx....xxxx|.x.xxx.x.xxxxx..x.|xxx.xx.xxx.xxx...x|x.x..xxxx.xxxx....|xxxxx.xxxxxxxx..xx|x..x........x.xxxx|xxxxxx.....xx..xx.|xxxxx......xx.x...|x.xxxxxx..x.x.....|xx.xxx.xx.xxxxx...|xxxxxx...x.x.xx...|.xx.xx...x..xxxxx. at (0,0)
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,4)=0  (0,14)=0  (0,15)=0  (0,16)=0  (1,2)=2  (1,16)=0  (1,17)=0  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,17)=0  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (7,15)=2  (8,14)=2  (8,15)=2  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,16)=0  (13,17)=0  (14,17)=0 
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,13) and color blue and mask x....xx......|xx.xxxxxx....|xxx.x........|x..x.........|.xxx.........|x.x..........|x.x..........|...x.........|...xx........|.....x.......|....xx.x.x.x.|......xxxxx..|.....xx.x....|........xx...|......x..x...|......xxx.x.x|......xxx.xx. at (0,0)
diff: 
delta: (0,13)=1  (0,17)=1  (1,2)=2  (1,11)=1  (1,13)=1  (1,14)=1  (1,15)=1  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,10)=1  (2,11)=1  (2,12)=1  (2,15)=1  (2,16)=1  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,12)=1  (4,14)=1  (4,15)=1  (5,5)=1  (5,6)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,13)=1  (6,6)=1  (6,8)=1  (6,14)=1  (6,15)=1  (6,17)=1  (7,6)=1  (7,10)=1  (7,14)=1  (7,15)=2  (7,16)=1  (8,1)=1  (8,9)=1  (8,14)=2  (8,15)=2  (8,16)=1  (8,17)=1  (9,14)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,6)=2  (10,8)=2  (10,10)=2  (10,13)=1  (11,13)=1  (11,14)=1  (11,17)=1  (12,7)=2  (12,9)=2  (12,10)=2  (12,13)=1  (12,15)=1  (12,16)=1  (12,17)=1  (13,1)=1  (13,11)=1  (13,13)=1  (13,14)=1  (13,15)=1  (14,2)=1  (14,15)=1  (14,16)=1  (15,15)=1  (15,16)=1  (15,17)=1  (16,0)=1  (16,3)=1  (16,17)=1 
! 110 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,8) and color blue and mask ...x....|.x.xxx..|xxx..xx.|x...xxxx|..x.xx..|xxxx....|....xx.x|....x.x.|......xx|....xx..|...x....|...xx..x|...x.xxx|...xxx..|.....xx.|.....xxx|.......x at (0,10)
diff: 
delta: (0,0)=1  (0,5)=1  (0,6)=1  (0,17)=1  (1,0)=1  (1,1)=1  (1,2)=2  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (1,8)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,4)=1  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,0)=1  (3,2)=2  (3,3)=1  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (4,1)=1  (4,2)=1  (4,3)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,0)=1  (5,2)=1  (5,5)=1  (5,6)=1  (6,0)=1  (6,2)=1  (6,6)=1  (6,8)=1  (7,3)=1  (7,6)=1  (7,10)=1  (7,15)=2  (8,1)=1  (8,3)=1  (8,4)=1  (8,9)=1  (8,14)=2  (8,15)=2  (9,5)=1  (10,1)=1  (10,2)=1  (10,4)=1  (10,5)=1  (10,6)=2  (10,7)=1  (10,8)=2  (10,9)=1  (10,10)=2  (10,11)=1  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (12,5)=1  (12,6)=1  (12,7)=2  (12,8)=1  (12,9)=2  (12,10)=2  (13,1)=1  (13,8)=1  (13,9)=1  (13,11)=1  (14,2)=1  (14,6)=1  (14,9)=1  (15,6)=1  (15,7)=1  (15,8)=1  (15,10)=1  (15,12)=1  (16,0)=1  (16,3)=1  (16,6)=1  (16,7)=1  (16,8)=1  (16,10)=1  (16,11)=1 
! 97 wrong pixels (generated / expected)

TRAIN 36fdfd69.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,16) and color cyan and layers
  _0: a rectangle with size (15,16) and color black and mask .xxxx.xx........|x.xxxxxxx.......|xx...x..........|xx...xxxx.x.....|xx......xxx.....|.x......xxx.xx..|.xx..x....x..xxx|.x.x.x.x..x...x.|.xxx.xxxxxxxxxxx|.x......x.xxx...|.x......x.xx....|x.xxx..xx...x...|.xx....xx...xxx.|x..x...xxx.x....|...x...xxx...... at (0,0)
diff: 
delta: (0,13)=0  (0,14)=0  (0,15)=0  (1,10)=0  (1,12)=0  (1,14)=0  (1,15)=0  (2,12)=0  (2,14)=0  (3,3)=0  (3,13)=2  (3,15)=0  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,13)=2  (4,15)=0  (5,2)=2  (5,4)=2  (9,4)=2  (10,2)=2  (10,5)=2  (10,14)=0  (11,9)=2  (12,9)=2  (12,11)=2  (14,5)=0 
   (0.0 bits)
data: a background with size (15,16) and color cyan and layers
  _0: a rectangle with size (5,4) and color black and mask .xxx|x.xx|x.x.|...x|...x at (0,12)
  _01: a rectangle with size (15,16) and color black and mask .xxxx.xx........|x.xxxxxxx.......|xx...x..........|xx...xxxx.x.....|xx......xxx.....|.x......xxx.xx..|.xx..x....x..xxx|.x.x.x.x..x...x.|.xxx.xxxxxxxxxxx|.x......x.xxx...|.x......x.xx....|x.xxx..xx...x...|.xx....xx...xxx.|x..x...xxx.x....|...x...xxx...... at (0,0)
  _011: a rectangle with size (2,5) and color red and mask Full at (4,2)
  _0111: a rectangle with size (2,4) and color yellow and mask xx.x|.xx. at (9,2)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,11)
  _011111: a rectangle with size (2,2) and color yellow and mask xx|x. at (11,10)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (9,4)
  _01111111: a rectangle with size (2,1) and color red and mask Full at (3,13)
diff: 
delta: (1,10)=0  (3,3)=0  (4,3)=4  (4,11)=2  (5,3)=4  (5,5)=4  (5,6)=4  (10,2)=2  (10,14)=0  (11,9)=2  (12,9)=2  (12,11)=2  (14,5)=0 
   (773.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color cyan and layers
  _0: a rectangle with size (15,16) and color black and mask .xxxx.xx........|x.xxxxxxx.......|xx...x..........|xx...xxxx.x.....|xx......xxx.....|.x......xxx.xx..|.xx..x....x..xxx|.x.x.x.x..x...x.|.xxx.xxxxxxxxxxx|.x......x.xxx...|.x......x.xx....|x.xxx..xx...x...|.xx....xx...xxx.|x..x...xxx.x....|...x...xxx...... at (0,0)
diff: 
delta: (0,13)=0  (0,14)=0  (0,15)=0  (1,10)=0  (1,12)=0  (1,14)=0  (1,15)=0  (2,12)=0  (2,14)=0  (3,3)=0  (3,13)=2  (3,15)=0  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,13)=2  (4,15)=0  (5,2)=2  (5,4)=2  (9,4)=2  (10,2)=2  (10,5)=2  (10,14)=0  (11,9)=2  (12,9)=2  (12,11)=2  (14,5)=0 
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,10) and color cyan and mask x.........|.x........|..xxx.....|..x.x.....|...x...x..|x..x.xxx..|x..xx.xxxx|x.x.x.x.xx|x...x.....|x.xx.xxx..|x..xx.xx..|.x...xx...|x..xxxx...|.xx.xxx...|xxx.x.x... at (0,0)
diff: 
delta: (0,5)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (1,9)=8  (1,11)=8  (1,13)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,15)=8  (3,9)=8  (3,11)=8  (3,12)=8  (3,13)=2  (3,14)=8  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,12)=8  (4,13)=2  (4,14)=8  (5,2)=2  (5,4)=2  (5,11)=8  (5,14)=8  (5,15)=8  (6,11)=8  (6,12)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,15)=8  (9,4)=2  (9,9)=8  (9,13)=8  (9,14)=8  (9,15)=8  (10,2)=2  (10,5)=2  (10,9)=8  (10,12)=8  (10,13)=8  (10,15)=8  (11,9)=2  (11,10)=8  (11,11)=8  (11,13)=8  (11,14)=8  (11,15)=8  (12,9)=2  (12,10)=8  (12,11)=2  (12,15)=8  (13,10)=8  (13,12)=8  (13,13)=8  (13,14)=8  (13,15)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8 
! 86 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (8,10) and color cyan and mask ..xxxxx...|...x.x.x..|xxxxxx.x.x|...x.xx.x.|......x.x.|.....x..xx|.....xx...|.....xxx.. at (0,6)
diff: 
delta: (0,0)=8  (0,5)=8  (1,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,2)=8  (3,4)=8  (3,13)=2  (4,2)=2  (4,3)=8  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=8  (4,11)=2  (4,13)=2  (5,0)=8  (5,2)=2  (5,3)=8  (5,4)=2  (5,5)=8  (5,6)=8  (5,7)=8  (6,0)=8  (6,3)=8  (6,4)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (7,0)=8  (7,2)=8  (7,4)=8  (7,6)=8  (7,8)=8  (7,9)=8  (7,15)=8  (8,0)=8  (8,4)=8  (9,0)=8  (9,2)=8  (9,3)=8  (9,4)=2  (9,5)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,13)=8  (9,14)=8  (9,15)=8  (10,0)=8  (10,2)=2  (10,3)=8  (10,4)=8  (10,5)=2  (10,6)=8  (10,7)=8  (10,9)=8  (10,12)=8  (10,13)=8  (10,15)=8  (11,1)=8  (11,5)=8  (11,6)=8  (11,9)=2  (11,10)=8  (11,11)=8  (11,13)=8  (11,14)=8  (11,15)=8  (12,0)=8  (12,3)=8  (12,4)=8  (12,5)=8  (12,6)=8  (12,9)=2  (12,10)=8  (12,11)=2  (12,15)=8  (13,1)=8  (13,2)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,10)=8  (13,12)=8  (13,13)=8  (13,14)=8  (13,15)=8  (14,0)=8  (14,1)=8  (14,2)=8  (14,4)=8  (14,6)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8 
! 106 wrong pixels (generated / expected)

TRAIN 36fdfd69.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,7)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,5)=3  (5,6)=3  (5,11)=3  (5,12)=3  (6,1)=3  (6,6)=3  (6,10)=3  (7,5)=3  (7,6)=3  (7,8)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,5)=3  (8,6)=3  (8,8)=3  (8,9)=3  (8,12)=3  (8,13)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=2  (9,5)=3  (9,6)=3  (9,10)=3  (9,12)=3  (10,1)=3  (10,2)=2  (10,3)=3  (10,7)=3  (10,8)=3  (10,12)=3  (11,1)=3  (11,2)=3  (11,4)=3  (11,5)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,13)=3  (12,2)=3  (12,4)=3  (12,5)=3  (12,8)=3  (12,10)=3  (12,11)=3  (12,13)=3  (13,1)=3  (13,2)=3  (13,4)=3  (13,6)=3  (13,8)=3  (14,0)=3  (14,3)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3 
   (3.2 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (8,9) and color green and mask xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (7,5)
  _01: a rectangle with size (3,5) and color red and mask Full at (4,3)
  _011: a rectangle with size (7,7) and color green and mask ..xx...|xx.....|.x.....|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
  _0111: a rectangle with size (4,6) and color green and mask ..x.xx|xx.x..|..xxx.|..xxx. at (0,5)
  _01111: a rectangle with size (4,4) and color green and mask ..xx|.x.x|.xx.|x... at (3,10)
  _011111: a rectangle with size (3,4) and color green and mask xx..|..x.|..xx at (0,0)
  _0111111: a rectangle with size (2,2) and color green and mask xx|x. at (5,1)
  _01111111: a rectangle with size (3,3) and color green and mask x..|xx.|..x at (7,8)
diff: 
delta: (1,12)=3  (3,0)=3  (4,7)=4  (5,5)=4  (5,6)=4  (6,6)=4  (9,2)=4  (9,3)=2  (10,2)=2  (10,3)=4  (14,12)=3  (14,13)=3 
   (908.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (15,9) and color green and mask ..x.xx...|xx.x.....|..xxx....|..xxx....|..x......|xx.......|.x.......|xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (0,5)
diff: 
delta: (0,0)=3  (0,1)=3  (1,2)=3  (1,12)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,12)=3  (3,13)=3  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,3)=2  (5,4)=2  (5,7)=2  (5,11)=3  (5,12)=3  (6,1)=3  (6,3)=2  (6,4)=2  (6,5)=2  (6,7)=2  (6,10)=3  (7,8)=3  (8,2)=3  (8,3)=3  (8,8)=3  (8,9)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=2  (9,10)=3  (10,1)=3  (10,2)=2  (10,3)=3  (11,1)=3  (11,2)=3  (11,4)=3  (11,5)=3  (12,2)=3  (12,4)=3  (12,5)=3  (13,1)=3  (13,2)=3  (13,4)=3  (13,6)=3  (14,0)=3  (14,3)=3  (14,12)=3  (14,13)=3 
! 62 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask ..xx...|xxx....|.x.x...|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,3)=2  (5,4)=2  (5,5)=3  (5,6)=3  (5,7)=2  (5,11)=3  (5,12)=3  (6,1)=3  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=3  (6,7)=2  (6,10)=3  (7,5)=3  (7,6)=3  (7,8)=3  (7,13)=3  (8,5)=3  (8,6)=3  (8,8)=3  (8,9)=3  (8,12)=3  (8,13)=3  (9,3)=2  (9,5)=3  (9,6)=3  (9,10)=3  (9,12)=3  (10,2)=2  (10,7)=3  (10,8)=3  (10,12)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,13)=3  (12,8)=3  (12,10)=3  (12,11)=3  (12,13)=3  (13,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3 
! 80 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,7)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,5)=3  (5,6)=3  (5,11)=3  (5,12)=3  (6,1)=3  (6,6)=3  (6,10)=3  (7,5)=3  (7,6)=3  (7,8)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,5)=3  (8,6)=3  (8,8)=3  (8,9)=3  (8,12)=3  (8,13)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=2  (9,5)=3  (9,6)=3  (9,10)=3  (9,12)=3  (10,1)=3  (10,2)=2  (10,3)=3  (10,7)=3  (10,8)=3  (10,12)=3  (11,1)=3  (11,2)=3  (11,4)=3  (11,5)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,13)=3  (12,2)=3  (12,4)=3  (12,5)=3  (12,8)=3  (12,10)=3  (12,11)=3  (12,13)=3  (13,1)=3  (13,2)=3  (13,4)=3  (13,6)=3  (13,8)=3  (14,0)=3  (14,3)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3 
! 87 wrong pixels (generated / expected)

TRAIN 36fdfd69.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,18) and color brown and mask ........xx........|.........x..x.....|........xxx..x..x.|.........xxxxxx.x.|......x.xx.x..xxxx|.....x.x..x..x....|.....x....x.xx....|..xx.x..x.xx.xxx..|...x...xxxxx.x....|xx.x.x.xx..xx.....|.xx.x.x.x..x......|.xx..x.xxx........|x.xx.xxx..x.......|xxxxxx....x.......|.xxxxxx.x.........|.x.x..xx.x........|x................. at (0,0)
diff: 
delta: (0,3)=9# (0,4)=9# (0,5)=9# (0,16)=9# (1,0)=9# (1,1)=2  (1,2)=9# (1,3)=2  (1,4)=2  (1,5)=9# (2,1)=2  (2,2)=2  (2,3)=9# (2,4)=9# (2,5)=2  (4,1)=9# (4,2)=9# (5,0)=9# (5,1)=9# (5,2)=9# (5,3)=9# (5,6)=2  (5,8)=2  (5,9)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,0)=9# (7,17)=9# (9,17)=9# (10,7)=2  (10,14)=9# (10,15)=9# (10,16)=9# (10,17)=9# (11,6)=2  (11,13)=9# (11,14)=9# (11,15)=9# (11,17)=9# (12,14)=9# (12,15)=9# (12,16)=9# (13,11)=2  (13,12)=2  (13,13)=9# (13,14)=2  (13,15)=2  (13,16)=9# (14,11)=2  (14,12)=9# (14,13)=2  (14,14)=9# (14,15)=9# (14,16)=2  (14,17)=9# (15,11)=2  (15,12)=2  (15,13)=9# (15,14)=2  (15,15)=2  (15,16)=9# (16,12)=9# (16,14)=9# (16,15)=9# (16,16)=9#
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color brown and layers
  _0: a rectangle with size (13,18) and color black and mask ..........x.xx....|...........xx.xxxx|...........x..xxxx|............x...x.|............x.xxxx|.........xx..xxxx.|.........xx.xx....|..........xxx.....|........xx.xxx....|......xxxx........|x......x.xx.......|x.x.xx..x.x.......|.xxxxxxxxxxx...... at (4,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,6)=0  (0,7)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,14)=0  (0,15)=0  (0,17)=0  (1,1)=2  (1,3)=2  (1,4)=2  (1,6)=0  (1,7)=0  (1,8)=0  (1,10)=0  (1,11)=0  (1,13)=0  (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=0  (2,0)=0  (2,1)=2  (2,2)=2  (2,5)=2  (2,6)=0  (2,7)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,15)=0  (2,17)=0  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,15)=0  (3,17)=0  (4,0)=0  (4,3)=0  (4,4)=0  (4,5)=0  (4,7)=0  (5,4)=0  (5,6)=2  (5,8)=2  (5,9)=2  (6,0)=0  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,1)=0  (7,4)=0  (7,6)=0  (7,7)=0  (7,9)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,5)=0  (8,6)=0  (9,2)=0  (9,4)=0  (9,6)=0  (10,0)=0  (10,3)=0  (10,5)=0  (10,7)=2  (11,0)=0  (11,3)=0  (11,4)=0  (11,6)=2  (11,16)=0  (12,1)=0  (12,4)=0  (12,17)=0  (13,11)=2  (13,12)=2  (13,14)=2  (13,15)=2  (13,17)=0  (14,11)=2  (14,13)=2  (14,16)=2  (15,11)=2  (15,12)=2  (15,14)=2  (15,15)=2  (15,17)=0  (16,13)=0  (16,17)=0 
! 121 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,18) and color brown and layers
  _0: a rectangle with size (13,9) and color black and mask ......xx.|......xxx|x.....xx.|xxxxxxxxx|x..xxx.x.|....x....|xxxxx....|.x..x.xx.|xxx.xxx..|..x.x.x..|...x.x...|...xx....|....x.... at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,14)=0  (0,15)=0  (0,17)=0  (1,1)=2  (1,3)=2  (1,4)=2  (1,10)=0  (1,11)=0  (1,13)=0  (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=0  (2,1)=2  (2,2)=2  (2,5)=2  (2,11)=0  (2,12)=0  (2,14)=0  (2,15)=0  (2,17)=0  (3,15)=0  (3,17)=0  (4,10)=0  (4,12)=0  (4,13)=0  (5,6)=2  (5,8)=2  (5,9)=2  (5,11)=0  (5,12)=0  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,11)=0  (6,14)=0  (6,15)=0  (6,16)=0  (6,17)=0  (7,9)=0  (7,12)=0  (7,16)=0  (8,12)=0  (8,14)=0  (8,15)=0  (8,16)=0  (8,17)=0  (9,9)=0  (9,10)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,16)=0  (10,0)=0  (10,7)=2  (10,9)=0  (10,10)=0  (10,12)=0  (10,13)=0  (11,0)=0  (11,6)=2  (11,10)=0  (11,11)=0  (11,12)=0  (11,16)=0  (12,1)=0  (12,8)=0  (12,9)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,17)=0  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,11)=2  (13,12)=2  (13,14)=2  (13,15)=2  (13,17)=0  (14,0)=0  (14,7)=0  (14,9)=0  (14,10)=0  (14,11)=2  (14,13)=2  (14,16)=2  (15,0)=0  (15,2)=0  (15,4)=0  (15,5)=0  (15,8)=0  (15,10)=0  (15,11)=2  (15,12)=2  (15,14)=2  (15,15)=2  (15,17)=0  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,9)=0  (16,10)=0  (16,11)=0  (16,13)=0  (16,17)=0 
! 139 wrong pixels (generated / expected)

TEST 36fdfd69.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.9 sec (15.9 sec/task)
bits-train-error = 25489.0 bits (25489.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-323] Checking task 3906de3d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35178.1 = 35190.7
DL output with Mo: L = 12.6 + 35178.1 = 35190.7
DL input+output M: L = 25.2 + 70356.1 = 70381.4

# learning a model for train pairs
2.000	
1.277	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.566	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	OUT ADD ^.layer_00 = ^.layer_0
0.326	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.308	OUT SPE ^.size = ^.size
0.304	OUT SPE ^.layer_0.shape.color = red
0.299	IN  SPE ^.layer_0.shape.color = blue
0.294	IN  SPE ^.layer_01.shape.color = red
0.290	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j
0.285	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j
0.108	
0.108	IN  GEN ^.layer_01.shape.color = ?
0.108	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color red and mask ? at (^.layer_0.pos.j,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 70.9 + 6238.3 = 6309.2
DL output with Mo: L = 68.2 + 3661.7 = 3729.9
DL input+output M: L = 139.1 + 9900.0 = 10039.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color red and mask ? at (^.layer_0.pos.j,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 68.2 + 3661.7 = 3729.9
DL input+output M: L = 132.4 + 3661.7 = 3794.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _0: a rectangle with size (3,1) and color red and mask Full at (2,4)
diff: 
delta:
   (15.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (7,4)
  _01: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta: (2,4)=0  (3,4)=0 
! 3 wrong pixels (generated / expected)

TRAIN 3906de3d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta: (9,4)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _0: a rectangle with size (4,1) and color red and mask Full at (2,6)
diff: 
delta: (1,4)=2 
   (55.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta: (9,4)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _01: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
diff: 
delta: (9,4)=2 
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (9,4)
diff: 
delta: (6,6)=2  (7,6)=2  (8,6)=2  (9,6)=2 
! 7 wrong pixels (generated / expected)

TRAIN 3906de3d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
diff: 
delta: (6,6)=2  (7,6)=2  (7,8)=2  (8,6)=2  (8,8)=2  (9,6)=2  (9,8)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _0: a rectangle with size (4,2) and color red and mask x.|x.|xx|.x at (1,3)
diff: 
delta: (2,8)=2  (3,6)=2  (3,8)=2  (4,6)=2  (4,8)=2  (5,6)=2  (6,6)=2 
   (295.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
diff: 
delta: (6,6)=2  (7,6)=2  (7,8)=2  (8,6)=2  (8,8)=2  (9,6)=2  (9,8)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
  _01: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
diff: 
delta: (6,6)=2  (7,6)=2  (7,8)=2  (8,6)=2  (8,8)=2  (9,6)=2  (9,8)=2 
! 48 wrong pixels (generated / expected)

TRAIN 3906de3d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
diff: 
delta: (4,8)=2  (5,8)=2  (6,8)=2  (7,2)=2  (7,8)=2  (8,2)=2  (8,8)=2  (9,2)=2  (9,8)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
  _01: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
diff: 
delta: (4,8)=2  (5,8)=2  (6,8)=2  (7,2)=2  (7,8)=2  (8,2)=2  (8,8)=2  (9,2)=2  (9,8)=2 
! 52 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (4,8)
diff: 
delta: (6,5)=2  (7,2)=2  (7,5)=2  (8,2)=2  (8,4)=2  (8,5)=2  (9,2)=2  (9,4)=2  (9,5)=2  (9,6)=2 
! 14 wrong pixels (generated / expected)

TEST 3906de3d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.4 sec (54.4 sec/task)
bits-train-error = 3661.7 bits (3661.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-322] Checking task 39a8645d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31153.6 = 31166.2
DL output with Mo: L = 12.6 + 4778.1 = 4790.7
DL input+output M: L = 25.2 + 35931.6 = 35956.8

# learning a model for train pairs
2.000	
1.333	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.177	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.020	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.864	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.773	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.691	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.611	OUT SPE ^.size = ^.layer_0.shape.size
0.537	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.488	OUT SPE ^.layer_0.pos = '(0, 0)
0.473	OUT SPE ^.color = black
0.470	IN  SPE ^.color = black
0.111	
0.111	IN  DEL ^.layer_01111
0.110	IN  DEL ^.layer_0111
0.109	IN  DEL ^.layer_011
0.108	IN  DEL ^.layer_01
0.108	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.0 + 11182.9 = 11321.9
DL output with Mo: L = 41.1 + 471.5 = 512.6
DL input+output M: L = 180.1 + 11654.4 = 11834.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 41.1 + 471.5 = 512.6
DL input+output M: L = 79.9 + 471.5 = 551.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (1,2)
diff: 
delta: (2,10)=8  (2,12)=8  (3,11)=8  (4,10)=8  (4,12)=8  (7,3)=8  (7,5)=8  (7,9)=2  (7,11)=2  (8,4)=8  (8,9)=2  (8,11)=2  (9,3)=8  (9,5)=8  (9,10)=2  (11,1)=2  (11,3)=2  (12,1)=2  (12,3)=2  (13,2)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (1,2)
diff: 
delta: (2,10)=8  (2,12)=8  (3,11)=8  (4,10)=8  (4,12)=8  (7,3)=8  (7,5)=8  (7,9)=2  (7,11)=2  (8,4)=8  (8,9)=2  (8,11)=2  (9,3)=8  (9,5)=8  (9,10)=2  (11,1)=2  (11,3)=2  (12,1)=2  (12,3)=2  (13,2)=2 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (0,7)
diff: 
delta: (1,2)=4  (2,3)=4  (2,4)=4  (3,2)=4  (3,11)=4  (4,12)=4  (4,13)=4  (5,6)=2  (5,8)=2  (5,11)=4  (6,1)=1  (6,3)=1  (6,7)=2  (7,1)=1  (7,2)=1  (7,3)=1  (7,6)=2  (7,8)=2  (8,2)=1  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (11,11)=1  (11,13)=1  (12,2)=4  (12,11)=1  (12,12)=1  (12,13)=1  (13,12)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (0,0)
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (0,7)
diff: 
delta: (1,2)=4  (2,3)=4  (2,4)=4  (3,2)=4  (3,11)=4  (4,12)=4  (4,13)=4  (5,6)=2  (5,8)=2  (5,11)=4  (6,1)=1  (6,3)=1  (6,7)=2  (7,1)=1  (7,2)=1  (7,3)=1  (7,6)=2  (7,8)=2  (8,2)=1  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (11,11)=1  (11,13)=1  (12,2)=4  (12,11)=1  (12,12)=1  (12,13)=1  (13,12)=1 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (2,2)
diff: 
delta: (2,9)=6  (2,10)=6  (3,9)=6  (3,10)=6  (4,11)=6  (8,9)=8  (9,8)=8  (9,9)=8  (9,10)=8  (10,9)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,0)
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (2,2)
diff: 
delta: (2,9)=6  (2,10)=6  (3,9)=6  (3,10)=6  (4,11)=6  (8,9)=8  (9,8)=8  (9,9)=8  (9,10)=8  (10,9)=8 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|.xx|x.x at (2,3)
diff: 
delta: (2,10)=2  (3,9)=2  (3,10)=2  (3,11)=2  (4,9)=2  (4,10)=2  (7,7)=8  (8,1)=2  (8,6)=8  (8,8)=8  (9,0)=2  (9,1)=2  (9,2)=2  (9,7)=8  (10,0)=2  (10,1)=2  (11,5)=2  (11,9)=3  (11,11)=3  (12,4)=2  (12,5)=2  (12,6)=2  (12,10)=3  (12,11)=3  (13,4)=2  (13,5)=2  (13,9)=3  (13,11)=3 
! 9 wrong pixels (generated / expected)

TEST 39a8645d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.7 sec (4.7 sec/task)
bits-train-error = 471.5 bits (471.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-321] Checking task 39e1d7f9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 404930.4 = 404943.0
DL output with Mo: L = 12.6 + 467324.5 = 467337.1
DL input+output M: L = 25.2 + 872254.9 = 872280.1

# learning a model for train pairs
2.000	
1.309	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.704	OUT ADD ^.layer_0 = ^.layer_0
0.631	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.558	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.422	OUT ADD ^.layer_011 = ^.layer_01
0.357	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.305	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.271	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.237	OUT ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.212	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.181	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.174	OUT ADD ^.layer_01001 = ^.layer_010
0.160	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.074	
0.066	IN  DEL ^.layer_01111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01001: ^.layer_010
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011.shape at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 34700.6 = 34864.2
DL output with Mo: L = 148.0 + 34223.5 = 34371.5
DL input+output M: L = 311.6 + 68924.1 = 69235.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01001: ^.layer_010
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011.shape at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 20.0 = 158.9
DL output with Mo: L = 148.0 + 30570.2 = 30718.3
DL input+output M: L = 286.9 + 30590.2 = 30877.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color green and mask Full at (10,5)
  _0111: a rectangle with size (4,4) and color pink and mask Full at (20,15)
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6 
   (2.0 bits)
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _0100: a rectangle with size (4,4) and color pink and mask Full at (5,5)
  _01001: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _010: a rectangle with size (4,4) and color green and mask Full at (10,5)
  _01: a rectangle with size (4,4) and color pink and mask Full at (20,15)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,5)
  _0111: a rectangle with size (4,4) and color green and mask Full at (15,15)
  _01111: a rectangle with size (4,14) and color green and mask Full at (20,10)
diff: 
delta:
   (171.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (4,4) and color pink and mask Full at (5,5)
  _01: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask Full at (20,15)
diff: 
delta:
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color green and mask Full at (10,5)
  _0111: a rectangle with size (4,4) and color pink and mask Full at (20,15)
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6 
! size mismatch, 10x10 instead of 24x24

TRAIN 39e1d7f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _01: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (20,12)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
   (0.0 bits)
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _0100: a rectangle with size (3,11) and color pink and mask Full at (20,8)
  _01001: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _010: a rectangle with size (11,3) and color pink and mask Full at (16,12)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,20)
  _011: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (4,24)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
   (897.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _01: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (20,12)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _011: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (20,12)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _01: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (16,12)
  _0111: a rectangle with size (3,3) and color red and mask Full at (0,24)
diff: 
delta: (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
   (0.0 bits)
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _0100: a rectangle with size (3,27) and color yellow and mask Full at (4,0)
  _01001: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _010: a rectangle with size (3,11) and color yellow and mask Full at (8,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,20)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
  _0111: a rectangle with size (3,11) and color yellow and mask Full at (0,0)
  _01111: a rectangle with size (3,11) and color yellow and mask Full at (16,12)
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,12)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,17)=0  (4,18)=0  (5,4)=2  (5,5)=2  (5,6)=2  (5,12)=0  (5,13)=0  (5,14)=0  (5,16)=0  (5,17)=0  (5,18)=0  (6,4)=2  (6,5)=2  (6,6)=2  (6,12)=0  (6,13)=0  (6,14)=0  (6,16)=0  (6,17)=0  (6,18)=0  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
   (1988.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _01: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (16,12)
  _0111: a rectangle with size (3,3) and color red and mask Full at (0,24)
diff: 
delta: (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color yellow and layers
  _0: a rectangle with size (2,29) and color black and mask Full at (0,0)
  _010: a rectangle with size (2,29) and color black and mask Full at (15,0)
  _01: a rectangle with size (2,29) and color black and mask Full at (18,0)
  _011: a rectangle with size (2,29) and color black and mask Full at (27,0)
  _0111: a rectangle with size (2,26) and color black and mask Full at (24,3)
diff: 
delta: (0,2)=4  (0,5)=4  (0,8)=4  (0,11)=4  (0,14)=4  (0,17)=4  (0,20)=4  (0,23)=4  (0,26)=4  (1,2)=4  (1,5)=4  (1,8)=4  (1,11)=4  (1,14)=4  (1,17)=4  (1,20)=4  (1,23)=4  (1,26)=4  (3,0)=0  (3,1)=0  (3,3)=0  (3,4)=0  (3,6)=0  (3,7)=0  (3,9)=0  (3,10)=0  (3,12)=0  (3,13)=0  (3,15)=0  (3,16)=0  (3,18)=0  (3,19)=0  (3,21)=6  (3,22)=6  (3,24)=0  (3,25)=0  (3,27)=0  (3,28)=0  (4,0)=0  (4,1)=0  (4,3)=0  (4,4)=0  (4,6)=0  (4,7)=0  (4,9)=0  (4,10)=0  (4,12)=0  (4,13)=0  (4,15)=0  (4,16)=0  (4,18)=0  (4,19)=0  (4,21)=6  (4,22)=6  (4,24)=0  (4,25)=0  (4,27)=0  (4,28)=0  (6,0)=0  (6,1)=0  (6,3)=0  (6,4)=0  (6,6)=8  (6,7)=8  (6,9)=3  (6,10)=3  (6,12)=8  (6,13)=8  (6,15)=0  (6,16)=0  (6,18)=0  (6,19)=0  (6,21)=0  (6,22)=0  (6,24)=0  (6,25)=0  (6,27)=0  (6,28)=0  (7,0)=0  (7,1)=0  (7,3)=0  (7,4)=0  (7,6)=8  (7,7)=8  (7,9)=3  (7,10)=3  (7,12)=8  (7,13)=8  (7,15)=0  (7,16)=0  (7,18)=0  (7,19)=0  (7,21)=0  (7,22)=0  (7,24)=0  (7,25)=0  (7,27)=0  (7,28)=0  (9,0)=0  (9,1)=0  (9,3)=0  (9,4)=0  (9,6)=3  (9,7)=3  (9,9)=6  (9,10)=6  (9,12)=3  (9,13)=3  (9,15)=0  (9,16)=0  (9,18)=0  (9,19)=0  (9,21)=0  (9,22)=0  (9,24)=0  (9,25)=0  (9,27)=0  (9,28)=0  (10,0)=0  (10,1)=0  (10,3)=0  (10,4)=0  (10,6)=3  (10,7)=3  (10,9)=6  (10,10)=6  (10,12)=3  (10,13)=3  (10,15)=0  (10,16)=0  (10,18)=0  (10,19)=0  (10,21)=0  (10,22)=0  (10,24)=0  (10,25)=0  (10,27)=0  (10,28)=0  (12,0)=0  (12,1)=0  (12,3)=0  (12,4)=0  (12,6)=8  (12,7)=8  (12,9)=3  (12,10)=3  (12,12)=8  (12,13)=8  (12,15)=0  (12,16)=0  (12,18)=0  (12,19)=0  (12,21)=0  (12,22)=0  (12,24)=0  (12,25)=0  (12,27)=0  (12,28)=0  (13,0)=0  (13,1)=0  (13,3)=0  (13,4)=0  (13,6)=8  (13,7)=8  (13,9)=3  (13,10)=3  (13,12)=8  (13,13)=8  (13,15)=0  (13,16)=0  (13,18)=0  (13,19)=0  (13,21)=0  (13,22)=0  (13,24)=0  (13,25)=0  (13,27)=0  (13,28)=0  (15,2)=4  (15,5)=4  (15,8)=4  (15,11)=4  (15,14)=4  (15,17)=4  (15,20)=4  (15,23)=4  (15,26)=4  (16,2)=4  (16,5)=4  (16,8)=4  (16,11)=4  (16,14)=4  (16,17)=4  (16,20)=4  (16,23)=4  (16,26)=4  (18,2)=4  (18,5)=4  (18,8)=4  (18,11)=4  (18,14)=4  (18,17)=4  (18,20)=4  (18,23)=4  (18,26)=4  (19,2)=4  (19,5)=4  (19,8)=4  (19,11)=4  (19,14)=4  (19,17)=4  (19,20)=4  (19,23)=4  (19,26)=4  (21,0)=0  (21,1)=0  (21,3)=0  (21,4)=0  (21,6)=0  (21,7)=0  (21,9)=0  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=6  (21,16)=6  (21,18)=0  (21,19)=0  (21,21)=0  (21,22)=0  (21,24)=0  (21,25)=0  (21,27)=0  (21,28)=0  (22,0)=0  (22,1)=0  (22,3)=0  (22,4)=0  (22,6)=0  (22,7)=0  (22,9)=0  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=6  (22,16)=6  (22,18)=0  (22,19)=0  (22,21)=0  (22,22)=0  (22,24)=0  (22,25)=0  (22,27)=0  (22,28)=0  (24,0)=6  (24,1)=6  (24,5)=4  (24,8)=4  (24,11)=4  (24,14)=4  (24,17)=4  (24,20)=4  (24,23)=4  (24,26)=4  (25,0)=6  (25,1)=6  (25,5)=4  (25,8)=4  (25,11)=4  (25,14)=4  (25,17)=4  (25,20)=4  (25,23)=4  (25,26)=4  (27,2)=4  (27,5)=4  (27,8)=4  (27,11)=4  (27,14)=4  (27,17)=4  (27,20)=4  (27,23)=4  (27,26)=4  (28,2)=4  (28,5)=4  (28,8)=4  (28,11)=4  (28,14)=4  (28,17)=4  (28,20)=4  (28,23)=4  (28,26)=4 
! size mismatch, 10x10 instead of 29x29

TEST 39e1d7f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 30570.2 bits (30570.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-320] Checking task 3aa6fb7a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5952.6 = 5965.2
DL output with Mo: L = 12.6 + 7775.2 = 7787.8
DL input+output M: L = 25.2 + 13727.8 = 13753.0

# learning a model for train pairs
2.000	
1.755	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.474	OUT ADD ^.layer_0 = ^.layer_0
1.224	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.942	OUT ADD ^.layer_01 = ^.layer_01
0.827	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.763	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	OUT SPE ^.size = ^.size
0.675	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.573	OUT ADD ^.layer_0110 = ^.layer_011
0.545	IN  SPE ^.layer_0.shape.mask = xx|.x
0.524	OUT SPE ^.layer_011.pos = projJ(^.layer_011.pos) + (1, 1)
0.505	IN  SPE ^.layer_0.shape.color = cyan
0.487	IN  SPE ^.layer_01.shape.color = cyan
0.467	OUT SPE ^.layer_011.shape.size = min(^.layer_01.shape.size, ^.layer_011.shape.size)
0.449	IN  SPE ^.layer_011.shape.color = cyan
0.432	OUT SPE ^.layer_0111.shape.size = '(1, 1)
0.412	OUT SPE ^.layer_0111.pos = projI(^.layer_011.pos) + span(^.layer_0.pos, ^.layer_011.pos)
0.398	OUT SPE ^.layer_011.shape.color = blue
0.383	OUT SPE ^.layer_0111.shape.color = blue
0.375	OUT SPE ^.layer_0111.shape.mask = Full
0.367	IN  SPE ^.color = black
0.361	OUT SPE ^.color = black
0.057	
0.056	IN  GEN ^.layer_011.shape.color = ?
0.056	IN  GEN ^.layer_01.shape.color = ?
0.055	IN  GEN ^.layer_0.shape.color = ?
0.055	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011
  _011: a rectangle with size min(^.layer_01.shape.size, ^.layer_011.shape.size) and color blue and mask ? at projJ(^.layer_011.pos) + (1, 1)
  _0111: a rectangle with size '(1, 1) and color blue and mask Full at projI(^.layer_011.pos) + span(^.layer_0.pos, ^.layer_011.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask xx|.x at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 105.8 + 1832.8 = 1938.6
DL output with Mo: L = 167.2 + 109.7 = 276.8
DL input+output M: L = 273.0 + 1942.4 = 2215.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011
  _011: a rectangle with size min(^.layer_01.shape.size, ^.layer_011.shape.size) and color blue and mask ? at projJ(^.layer_011.pos) + (1, 1)
  _0111: a rectangle with size '(1, 1) and color blue and mask Full at projI(^.layer_011.pos) + span(^.layer_0.pos, ^.layer_011.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask xx|.x at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 95.7 + 20.0 = 115.7
DL output with Mo: L = 167.2 + 109.7 = 276.8
DL input+output M: L = 262.8 + 129.7 = 392.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,1)
  _0110: a rectangle with size (2,1) and color cyan and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (4,4)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN 3aa6fb7a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
  _011: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
  _0110: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _011: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (1,3)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (5,3)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _011: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
  _011: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,5)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,0)
  _011: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,3)
diff: 
delta: (5,1)=8  (6,0)=8  (6,1)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,5)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,0)
  _011: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,0)
diff: 
delta: (3,3)=8  (4,3)=8  (4,4)=8 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,5)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,3)
  _011: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,0)
diff: 
delta: (5,1)=8  (6,0)=8  (6,1)=8 
! 9 wrong pixels (generated / expected)

TEST 3aa6fb7a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.6 sec (5.6 sec/task)
bits-train-error = 109.7 bits (109.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-319] Checking task 3ac3eb23.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1548.0 = 1560.6
DL output with Mo: L = 12.6 + 10354.1 = 10366.7
DL input+output M: L = 25.2 + 11902.1 = 11927.3

# learning a model for train pairs
2.000	
1.440	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.171	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.953	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.918	OUT SPE ^.size = ^.size
0.886	IN  SPE ^.color = black
0.859	OUT SPE ^.layer_01.shape.size = tiling('(3, 3), 2, 1)
0.840	OUT SPE ^.layer_01.pos = '(0, 0)
0.825	OUT SPE ^.layer_01.shape.mask = Odd Checkboard
0.813	OUT SPE ^.layer_0.shape.size.j = 3
0.803	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.797	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j / colorCount(^.grid)
0.792	OUT SPE ^.color = black
0.112	
0.111	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at (^.layer_0.pos.j / colorCount(^.grid),?)
  _01: a rectangle with size tiling('(3, 3), 2, 1) and color ^.layer_0.shape.color and mask Odd Checkboard at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1062.1 = 1091.8
DL output with Mo: L = 131.1 + 827.7 = 958.9
DL input+output M: L = 160.8 + 1889.8 = 2050.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at (^.layer_0.pos.j / colorCount(^.grid),?)
  _01: a rectangle with size tiling('(3, 3), 2, 1) and color ^.layer_0.shape.color and mask Odd Checkboard at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 131.1 + 827.7 = 958.9
DL input+output M: L = 160.7 + 827.7 = 988.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,10) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta: (0,5)=8 
   (0.0 bits)
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask Odd Checkboard at (0,4)
  _01: a rectangle with size (6,3) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta: (0,5)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  _0: a point with color cyan at (0,5)
diff: 
delta: (0,1)=2 
! 21 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,7) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (6,3) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta: (1,1)=0 
   (55.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,12) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (0,6)=6  (0,9)=7#
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,12) and color black and layers
  _0: a point with color pink at (0,6)
diff: 
delta: (0,2)=3  (0,9)=7#
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,12) and color black and layers
  _0: a point with color orange at (0,9)
diff: 
delta: (0,2)=3  (0,6)=6 
! 37 wrong pixels (generated / expected)

TEST 3ac3eb23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 827.7 bits (827.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-318] Checking task 3af2c5a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5826.4 = 5839.1
DL output with Mo: L = 12.6 + 22611.4 = 22624.0
DL input+output M: L = 25.2 + 28437.8 = 28463.1

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
0.289	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.007	
0.003	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 1644.8 = 1683.7
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 52.7 + 1644.8 = 1697.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,4) and color black and layers
diff: 
delta: (0,2)=8  (1,1)=8  (1,3)=8  (2,2)=8 
   (0.0 bits)
data: 
0 0 8 0 0 8 0 0 
0 8 0 8 8 0 8 0 
0 0 8 0 0 8 0 0 
0 0 8 0 0 8 0 0 
0 8 0 8 8 0 8 0 
0 0 8 0 0 8 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
diff: 
delta: (0,2)=8  (1,1)=8  (1,3)=8  (2,2)=8 
correct output grid

TRAIN 3af2c5a8.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,4) and color green and layers
diff: 
delta: (0,0)=0  (0,1)=0  (1,0)=0  (1,2)=0  (2,3)=0 
   (0.0 bits)
data: 
0 0 3 3 3 3 0 0 
0 3 0 3 3 0 3 0 
3 3 3 0 0 3 3 3 
3 3 3 0 0 3 3 3 
0 3 0 3 3 0 3 0 
0 0 3 3 3 3 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
diff: 
delta: (0,0)=0  (0,1)=0  (1,0)=0  (1,2)=0  (2,3)=0 
correct output grid

TRAIN 3af2c5a8.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,4) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (1,0)=3  (2,0)=3 
   (0.0 bits)
data: 
3 3 3 3 3 3 3 3 
3 0 0 0 0 0 0 3 
3 0 0 0 0 0 0 3 
3 0 0 0 0 0 0 3 
3 0 0 0 0 0 0 3 
3 3 3 3 3 3 3 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (1,0)=3  (2,0)=3 
correct output grid

TRAIN 3af2c5a8.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
diff: 
delta: (0,0)=4  (1,3)=4  (2,0)=4  (2,1)=4 
correct output grid

TEST 3af2c5a8.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-317] Checking task 3bd67248.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10080.5 = 10093.1
DL output with Mo: L = 12.6 + 26306.8 = 26319.4
DL input+output M: L = 25.2 + 36387.3 = 36412.6

# learning a model for train pairs
2.000	
1.157	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.813	OUT ADD ^.layer_0 = ^.layer_0
0.535	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.300	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.279	OUT SPE ^.size = ^.size
0.261	OUT SPE ^.layer_01.shape.size = ^.size - (1, 1)
0.250	OUT SPE ^.layer_01.pos = '(0, 1)
0.240	IN  SPE ^.layer_0.shape.mask = Full
0.231	OUT SPE ^.layer_011.shape.size.j = ^.size.j - 1
0.224	IN  SPE ^.color = black
0.217	OUT SPE ^.layer_01.shape.color = red
0.211	OUT SPE ^.layer_011.shape.color = yellow
0.206	OUT SPE ^.layer_011.pos.j = 1
0.200	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0)
0.197	OUT SPE ^.layer_011.shape.size.i = 1
0.193	OUT SPE ^.layer_011.shape.mask = Full
0.190	OUT SPE ^.color = black
0.054	
0.054	IN  GEN ^.layer_0.shape.mask = ?
0.054	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.size - (1, 1) and color red and mask ? at '(0, 1)
  _011: a rectangle with size (1,^.size.j - 1) and color yellow and mask Full at (bottom(^.layer_0),1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 40.0 + 1371.2 = 1411.2
DL output with Mo: L = 129.8 + 1189.9 = 1319.7
DL input+output M: L = 169.8 + 2561.1 = 2730.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.size - (1, 1) and color red and mask ? at '(0, 1)
  _011: a rectangle with size (1,^.size.j - 1) and color yellow and mask Full at (bottom(^.layer_0),1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 129.8 + 1189.9 = 1319.7
DL input+output M: L = 168.7 + 1189.9 = 1358.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (14,14) and color red and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (0,1)
  _011: a rectangle with size (1,14) and color yellow and mask Full at (14,1)
diff: 
delta:
   (81.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
diff: 
delta:
! 182 wrong pixels (generated / expected)

TRAIN 3bd67248.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,1)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,2) and color black and mask Full at (0,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 3bd67248.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (6,6) and color red and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,1)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
   (30.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN 3bd67248.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,0)
diff: 
delta:
! 72 wrong pixels (generated / expected)

TEST 3bd67248.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 1189.9 bits (1189.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-316] Checking task 3bdb4ada.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 71907.5 = 71920.1
DL output with Mo: L = 12.6 + 60800.6 = 60813.2
DL input+output M: L = 25.2 + 132708.1 = 132733.3

# learning a model for train pairs
2.000	
1.372	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.762	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.419	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.085	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.078	OUT SPE ^.size = ^.size
0.072	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.066	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.062	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.058	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.056	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.055	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.054	IN  SPE ^.layer_0.shape.mask = Full
0.053	IN  SPE ^.layer_01.shape.mask = Full
0.052	OUT SPE ^.color = black
0.051	IN  SPE ^.color = black
0.026	
0.026	IN  GEN ^.layer_01.shape.mask = ?
0.025	IN  GEN ^.layer_0.shape.mask = ?
0.025	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.4 + 1849.8 = 1916.2
DL output with Mo: L = 51.0 + 1444.8 = 1495.9
DL input+output M: L = 117.4 + 3294.7 = 3412.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 51.0 + 1444.8 = 1495.9
DL input+output M: L = 115.3 + 1444.8 = 1560.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,29) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,13) and color cyan and mask Full at (5,12)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,29) and color yellow and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (3,13) and color cyan and mask xxxxxxxxxxxxx|x.x.x.x.x.x.x|xxxxxxxxxxxxx at (5,12)
diff: 
delta:
   (94.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,29) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,13) and color cyan and mask Full at (5,12)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask Full at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask xxxxxxxxxxx|x.x.x.x.x.x|xxxxxxxxxxx at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask xxxxxxxxx|x.x.x.x.x|xxxxxxxxx at (1,1)
diff: 
delta:
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask Full at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (3,7) and color grey and mask Full at (1,2)
diff: 
delta: (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (8,19)=8  (9,15)=8  (9,16)=8  (9,17)=8  (9,18)=8  (9,19)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,18)=8  (10,19)=8 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (8,15)
diff: 
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5#
! 26 wrong pixels (generated / expected)

TEST 3bdb4ada.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.0 sec (7.0 sec/task)
bits-train-error = 1444.8 bits (1444.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-315] Checking task 3befdf3e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16147.5 = 16160.1
DL output with Mo: L = 12.6 + 44492.0 = 44504.6
DL input+output M: L = 25.2 + 60639.5 = 60664.7

# learning a model for train pairs
2.000	
1.322	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.502	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.344	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.287	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.264	OUT SPE ^.layer_01 = coloring(^.layer_01, ^.layer_0.shape.color)
0.244	OUT SPE ^.layer_0 = coloring(^.layer_0, majorityColor(^.grid))
0.230	OUT SPE ^.size = ^.size
0.217	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.211	IN  SPE ^.layer_0.shape.mask = Full
0.205	IN  SPE ^.layer_01.shape.mask = Full
0.200	IN  SPE ^.color = black
0.196	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.i
0.189	OUT SPE ^.layer_011.pos = ^.layer_01.pos - projJ(^.layer_0.shape.size)
0.182	OUT SPE ^.layer_0111.pos = ^.layer_01.pos - projI(^.layer_0.shape.size)
0.177	OUT SPE ^.layer_0111.shape.size.j = ^.layer_01.shape.size.j
0.174	OUT SPE ^.layer_011.shape.color = ^.layer_01.shape.color
0.170	OUT SPE ^.layer_0111.shape.color = ^.layer_01.shape.color
0.168	OUT SPE ^.layer_011.shape.mask = Full
0.166	OUT SPE ^.layer_0111.shape.mask = Full
0.022	
0.022	IN  GEN ^.layer_01.shape.mask = ?
0.022	IN  GEN ^.layer_0.shape.mask = ?
0.022	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, majorityColor(^.grid))
  _01: coloring(^.layer_01, ^.layer_0.shape.color)
  _011: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos - projJ(^.layer_0.shape.size)
  _0111: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos - projI(^.layer_0.shape.size)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.4 + 2315.9 = 2382.2
DL output with Mo: L = 206.0 + 605.9 = 812.0
DL input+output M: L = 272.4 + 2921.8 = 3194.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, majorityColor(^.grid))
  _01: coloring(^.layer_01, ^.layer_0.shape.color)
  _011: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos - projJ(^.layer_0.shape.size)
  _0111: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos - projI(^.layer_0.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 206.0 + 605.9 = 812.0
DL input+output M: L = 270.2 + 605.9 = 876.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color pink and mask Full at (3,3)
  _011: a rectangle with size (3,5) and color yellow and mask Full at (3,2)
  _0111: a rectangle with size (5,3) and color yellow and mask Full at (2,3)
diff: 
delta:
   (18.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (3,3)
  _01: a rectangle with size (1,1) and color pink and mask Full at (4,4)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color orange and mask Full at (3,3)
  _011: a rectangle with size (4,8) and color red and mask Full at (3,1)
  _0111: a rectangle with size (8,4) and color red and mask Full at (1,3)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (3,3)
  _01: a rectangle with size (2,2) and color orange and mask Full at (4,4)
diff: 
delta:
! 48 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color blue and mask Full at (3,2)
  _011: a rectangle with size (4,8) and color green and mask Full at (3,0)
  _0111: a rectangle with size (8,4) and color green and mask Full at (1,2)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (3,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (4,3)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (6,6)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (1,1)
diff: 
delta: (2,2)=3  (7,7)=3  (7,8)=3  (8,7)=3  (8,8)=3 
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (6,6)
diff: 
delta: (2,2)=3  (7,7)=3  (7,8)=3  (8,7)=3  (8,8)=3 
! 64 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (1,1)
diff: 
delta: (2,2)=3  (7,7)=3  (7,8)=3  (8,7)=3  (8,8)=3 
! 68 wrong pixels (generated / expected)

TEST 3befdf3e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 53.4 sec (53.4 sec/task)
bits-train-error = 605.9 bits (605.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-314] Checking task 3c9b0459.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7142.3 = 7154.9
DL output with Mo: L = 12.6 + 7142.3 = 7154.9
DL input+output M: L = 25.2 + 14284.5 = 14309.7

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = applySym(rotate180, ^.grid)
0.571	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.502	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.500	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.012	
0.008	IN  DEL ^.layer_0
0.006	IN  DEL ^.layer_011
0.004	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(rotate180, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 3493.8 = 3564.5
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 85.6 + 3493.8 = 3579.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(rotate180, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,2)=1  (1,1)=1  (2,1)=8  (2,2)=1 
   (0.0 bits)
data: 
1 8 2 
2 1 2 
1 2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,2)=1  (1,1)=1  (2,1)=8  (2,2)=1 
correct output grid

TRAIN 3c9b0459.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,0)=9# (0,2)=4  (1,1)=4  (1,2)=4  (2,1)=9#
   (0.0 bits)
data: 
2 9#2 
4 4 2 
4 2 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,0)=9# (0,2)=4  (1,1)=4  (1,2)=4  (2,1)=9#
correct output grid

TRAIN 3c9b0459.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color cyan and layers
diff: 
delta: (1,0)=5# (1,1)=5# (2,1)=5# (2,2)=5#
   (0.0 bits)
data: 
5#5#8 
8 5#5#
8 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (1,0)=5# (1,1)=5# (2,1)=5# (2,2)=5#
correct output grid

TRAIN 3c9b0459.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=3  (0,1)=2  (2,0)=2  (2,1)=3  (2,2)=3 
   (0.0 bits)
data: 
3 3 2 
9#9#9#
9#2 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=3  (0,1)=2  (2,0)=2  (2,1)=3  (2,2)=3 
correct output grid

TRAIN 3c9b0459.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=6  (1,0)=6  (1,1)=6  (2,1)=6  (2,2)=7#
correct output grid

TEST 3c9b0459.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-313] Checking task 3de23699.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17302.1 = 17314.7
DL output with Mo: L = 12.6 + 9299.2 = 9311.8
DL input+output M: L = 25.2 + 26601.3 = 26626.5

# learning a model for train pairs
2.000	
1.385	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.971	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.902	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.844	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.797	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.750	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.701	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.652	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.599	OUT SPE ^.size = span(^.layer_011.pos, ^.layer_01111.pos) - (2, 2)
0.576	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.559	OUT SPE ^.layer_0.pos.i = '0
0.543	OUT SPE ^.layer_0.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) - 2
0.532	OUT SPE ^.color = black
0.527	IN  SPE ^.color = black
0.145	
0.145	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size span(^.layer_011.pos, ^.layer_01111.pos) - (2, 2) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at ('0,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.9 + 6697.1 = 6799.0
DL output with Mo: L = 142.0 + 1106.2 = 1248.3
DL input+output M: L = 243.9 + 7803.4 = 8047.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size span(^.layer_011.pos, ^.layer_01111.pos) - (2, 2) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at ('0,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 80.0 = 181.7
DL output with Mo: L = 142.0 + 1106.2 = 1248.3
DL input+output M: L = 243.8 + 1186.2 = 1430.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,5)
  _01111: a point with color yellow at (5,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,5)
  _01111: a point with color yellow at (5,1)
diff: 
delta:
correct output grid

TRAIN 3de23699.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,7)
  _01111: a point with color green at (5,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask .xx..|.xx.x|x..x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,7)
  _01111: a point with color green at (5,1)
diff: 
delta:
correct output grid

TRAIN 3de23699.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,8)
  _01111: a point with color pink at (10,3)
diff: 
delta:
   (2.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,8)
  _01111: a point with color pink at (10,3)
diff: 
delta:
correct output grid

TRAIN 3de23699.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color cyan at (6,2)
diff: 
delta: (5,7)=4  (5,9)=4  (6,11)=8 
   (2.0 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|xx. at (0,2)
diff: 
delta: (2,6)=8  (3,4)=8  (3,6)=8 
   (110.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color yellow at (5,7)
diff: 
delta: (5,9)=4  (6,2)=8  (6,11)=8 
! size mismatch, 3x3 instead of 4x8
>> Trial 2
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color cyan at (6,2)
diff: 
delta: (5,7)=4  (5,9)=4  (6,11)=8 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (5,7)
  _01111: a point with color yellow at (4,9)
diff: 
delta: (5,9)=4  (6,2)=8  (6,11)=8 
! size mismatch, 2x1 instead of 4x8

TRAIN 3de23699.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (4,9)
diff: 
delta: (4,10)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 1x3 instead of 8x10
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (4,10)
diff: 
delta: (4,9)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 1x2 instead of 8x10
>> Trial 3
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,9)
  _01111: a point with color green at (4,4)
diff: 
delta: (4,10)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 1x8 instead of 8x10

TEST 3de23699.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 1106.2 bits (1106.2 bits/task)
acc-train-micro = 0.75 tasks (75.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.75
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-312] Checking task 3e980e27.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15641.0 = 15653.6
DL output with Mo: L = 12.6 + 28607.5 = 28620.1
DL input+output M: L = 25.2 + 44248.5 = 44273.7

# learning a model for train pairs
2.000	
1.699	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.473	OUT ADD ^.layer_0 = ^.layer_0
1.309	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.177	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.046	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.925	OUT ADD ^.layer_010 = ^.layer_01
0.863	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.809	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.779	OUT SPE ^.size = ^.size
0.749	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.742	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j
0.734	OUT SPE ^.layer_01.shape.color = majorityColor(^.grid)
0.727	OUT SPE ^.layer_00.pos.j = span(^.layer_0.pos.i, ^.layer_00.pos.i) / '2
0.721	OUT SPE ^.layer_011.pos.j = average(^.layer_01.pos.j, ^.layer_00.pos.j) + 2
0.714	IN  SPE ^.color = black
0.711	OUT SPE ^.color = black
0.209	
0.209	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (?,span(^.layer_0.pos.i, ^.layer_00.pos.i) / '2)
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color majorityColor(^.grid) and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,average(^.layer_01.pos.j, ^.layer_00.pos.j) + 2)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.1 + 7912.3 = 7992.5
DL output with Mo: L = 221.0 + 5515.1 = 5736.1
DL input+output M: L = 301.1 + 13427.4 = 13728.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (?,span(^.layer_0.pos.i, ^.layer_00.pos.i) / '2)
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color majorityColor(^.grid) and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,average(^.layer_01.pos.j, ^.layer_00.pos.j) + 2)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.0 + 51.7 = 131.7
DL output with Mo: L = 221.0 + 5515.1 = 5736.1
DL input+output M: L = 300.9 + 5566.8 = 5867.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _00: a point with color red at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (8,7)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
diff: 
delta:
   (2.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (8,7)
  _010: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
  _01: a rectangle with size (2,1) and color blue and mask Full at (8,6)
  _011: a rectangle with size (1,1) and color blue and mask Full at (10,5)
  _0111: a point with color blue at (9,7)
diff: 
delta:
   (66.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (8,7)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (8,7)
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 3e980e27.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _00: a point with color green at (2,6)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (6,2)
diff: 
delta: (9,9)=3 
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (5,1)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _010: a rectangle with size (1,1) and color green and mask Full at (6,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (8,8)
  _011: a rectangle with size (1,1) and color green and mask Full at (2,6)
  _0111: a point with color green at (9,9)
diff: 
delta:
   (78.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color green at (2,6)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (6,2)
diff: 
delta: (9,9)=3 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color yellow at (1,6)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,6)
diff: 
delta: (2,5)=4  (2,7)=4  (6,2)=3  (9,9)=3 
! 24 wrong pixels (generated / expected)

TRAIN 3e980e27.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,10)
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (8,1)
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _010: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
  _01: a rectangle with size (2,3) and color yellow and mask ..x|xx. at (1,9)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,10)
  _0111: a point with color green at (2,2)
diff: 
delta: (7,7)=2  (8,1)=3 
   (153.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,10)
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,10)
  _0: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
  _01: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
! 23 wrong pixels (generated / expected)

TRAIN 3e980e27.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (3.2 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (2,3) and color blue and mask .xx|x.x at (8,3)
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _010: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (1,2)
  _011: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (10,7)
  _0111: a point with color red at (2,3)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (253.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! 28 wrong pixels (generated / expected)

TRAIN 3e980e27.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color green at (1,5)
  _0: a rectangle with size (3,3) and color cyan and mask xxx|..x|.x. at (5,8)
  _01: a rectangle with size (3,2) and color blue and mask .x|x.|xx at (1,1)
diff: 
delta: (1,9)=2  (2,2)=2  (6,9)=3  (9,3)=2  (10,7)=3 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,9)
  _0: a rectangle with size (3,3) and color cyan and mask xxx|..x|.x. at (5,8)
  _01: a rectangle with size (3,2) and color blue and mask .x|x.|xx at (1,1)
diff: 
delta: (1,5)=3  (2,2)=2  (6,9)=3  (9,3)=2  (10,7)=3 
! 35 wrong pixels (generated / expected)

TEST 3e980e27.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.3 sec (8.3 sec/task)
bits-train-error = 5515.1 bits (5515.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-311] Checking task 3eda0437.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 46583.8 = 46596.4
DL output with Mo: L = 12.6 + 55800.4 = 55813.0
DL input+output M: L = 25.2 + 102384.1 = 102409.4

# learning a model for train pairs
2.000	
1.452	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.888	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.724	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.620	OUT ADD ^.layer_010 = ^.layer_01
0.518	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.435	OUT ADD ^.layer_0111 = ^.layer_011
0.392	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.355	OUT ADD ^.layer_0110 = ^.layer_0111
0.336	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.323	OUT SPE ^.size = ^.size
0.315	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.311	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.307	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.303	OUT SPE ^.layer_01.shape.color = pink
0.299	OUT SPE ^.layer_011.shape.color = ^.layer_0110.shape.color
0.090	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _0110: ^.layer_0111
  _011: a rectangle with size (?,?) and color ^.layer_0110.shape.color and mask ? at (?,?)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 9756.9 = 9886.5
DL output with Mo: L = 131.7 + 4699.5 = 4831.2
DL input+output M: L = 261.3 + 14456.4 = 14717.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _0110: ^.layer_0111
  _011: a rectangle with size (?,?) and color ^.layer_0110.shape.color and mask ? at (?,?)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 20.0 = 149.6
DL output with Mo: L = 131.7 + 4699.5 = 4831.2
DL input+output M: L = 261.3 + 4719.5 = 4980.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,30) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _0110: a point with color grey at (0,0)
  _011: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0111: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
diff: 
delta: (0,6)=5# (2,5)=1 
   (2.0 bits)
data: a background with size (3,30) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _010: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _01: a rectangle with size (2,4) and color pink and mask Full at (1,15)
  _0110: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
  _011: a rectangle with size (1,7) and color grey and mask Full at (0,0)
  _0111: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
diff: 
delta: (2,5)=1 
   (122.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,30) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _01: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0110: a point with color grey at (0,0)
  _011: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _0111: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
diff: 
delta: (0,6)=5# (2,5)=1 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,30) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _0110: a point with color grey at (0,0)
  _011: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0111: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
diff: 
delta: (0,6)=5# (2,5)=1 
! 23 wrong pixels (generated / expected)

TRAIN 3eda0437.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,20) and color blue and layers
  _0: a rectangle with size (4,13) and color black and mask ...x....xxxxx|..xx.x.x..xxx|.xx.x.x..x.x.|xxx..x...xxx. at (0,4)
  _01: a rectangle with size (2,3) and color black and mask xx.|x.x at (2,0)
  _0110: a point with color black at (0,18)
  _011: a rectangle with size (2,2) and color black and mask xx|x. at (0,3)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,19)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,20) and color blue and layers
  _0: a rectangle with size (4,10) and color black and mask ...x....xx|..xx.x.x..|.xx.x.x...|xxx..x.... at (0,4)
  _010: a rectangle with size (2,3) and color black and mask xx.|x.x at (2,0)
  _01: a rectangle with size (2,3) and color pink and mask Full at (0,14)
  _0110: a rectangle with size (1,1) and color black and mask Full at (2,19)
  _011: a rectangle with size (2,3) and color black and mask x.x|xxx at (2,13)
  _0111: a rectangle with size (2,2) and color black and mask xx|x. at (0,3)
diff: 
delta: (0,18)=0 
   (161.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color blue and layers
  _0: a rectangle with size (4,13) and color black and mask ...x....xxxxx|..xx.x.x..xxx|.xx.x.x..x.x.|xxx..x...xxx. at (0,4)
  _01: a rectangle with size (2,3) and color black and mask xx.|x.x at (2,0)
  _0110: a point with color black at (0,18)
  _011: a rectangle with size (2,2) and color black and mask xx|x. at (0,3)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,19)
diff: 
delta:
! 51 wrong pixels (generated / expected)

TRAIN 3eda0437.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (2,20) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _01: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0110: a point with color blue at (0,17)
  _011: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,19)
diff: 
delta:
   (0.0 bits)
data: a background with size (2,20) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _010: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _01: a rectangle with size (2,5) and color pink and mask Full at (0,2)
  _0110: a rectangle with size (1,1) and color blue and mask Full at (0,19)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,17)
  _0111: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
diff: 
delta:
   (69.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,20) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _01: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0110: a point with color blue at (0,17)
  _011: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,19)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,20) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _01: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0110: a point with color blue at (0,0)
  _011: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,17)
diff: 
delta: (0,19)=1 
! 20 wrong pixels (generated / expected)

TRAIN 3eda0437.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,20) and color black and layers
  _0: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0110: a point with color blue at (0,2)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (3,19)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,20) and color black and layers
  _0: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _010: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,17)
  _0110: a rectangle with size (1,1) and color blue and mask Full at (3,19)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta:
   (116.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color black and layers
  _0: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0110: a point with color blue at (0,2)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (3,19)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,20) and color black and layers
  _0: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0110: a point with color blue at (3,19)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 3eda0437.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,24) and color black and layers
  _0: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _01: a rectangle with size (2,3) and color blue and mask Full at (1,5)
  _0110: a point with color blue at (0,6)
  _011: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (0,4)
diff: 
delta: (0,8)=1  (1,0)=1 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,24) and color black and layers
  _0: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _01: a rectangle with size (2,3) and color blue and mask Full at (1,5)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,8)
diff: 
delta: (0,6)=1  (1,0)=1  (1,4)=1 
! 44 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,24) and color black and layers
  _0: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _01: a rectangle with size (2,3) and color blue and mask Full at (1,5)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta: (0,6)=1  (0,8)=1  (1,4)=1 
! 45 wrong pixels (generated / expected)

TEST 3eda0437.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 4699.5 bits (4699.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-310] Checking task 3f7978a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25196.7 = 25209.3
DL output with Mo: L = 12.6 + 14262.9 = 14275.5
DL input+output M: L = 25.2 + 39459.6 = 39484.8

# learning a model for train pairs
2.000	
1.652	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.532	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.421	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.350	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.263	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
1.176	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
1.021	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.971	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.937	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.914	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.890	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size + (2, 0)
0.870	OUT SPE ^.layer_01.pos = '(0, 0)
0.850	OUT SPE ^.layer_010.pos = '(1, 0)
0.839	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.827	OUT SPE ^.layer_0.shape.color = cyan
0.815	OUT SPE ^.layer_01.shape.color = cyan
0.804	OUT SPE ^.layer_01111.shape.color = cyan
0.794	IN  SPE ^.layer_01.shape.color = grey
0.770	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.748	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.724	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.714	OUT SPE ^.layer_01111.pos.j = 2
0.705	OUT SPE ^.layer_011.pos.i = 1
0.695	OUT SPE ^.layer_0111.pos.i = '0
0.688	OUT SPE ^.layer_0.shape.size.i = 1
0.681	OUT SPE ^.layer_0.shape.mask = Full
0.674	OUT SPE ^.layer_01.shape.mask = Full
0.667	OUT SPE ^.layer_0111.shape.size.j = 1
0.652	OUT SPE ^.size.i = ^.layer_01.shape.size.i + 2
0.645	OUT SPE ^.layer_0111.shape.mask = Full
0.637	OUT SPE ^.layer_01111.pos.i = bottom(^.layer_01) - 2
0.630	OUT SPE ^.layer_0.shape.size.j = ^.layer_010.shape.size.j
0.621	OUT SPE ^.layer_0111.shape.size.i = ^.layer_0.shape.size.i - ^.layer_0111111.pos.j - ^.layer_011.pos.j
0.615	IN  SPE ^.layer_0111.shape.color = cyan
0.608	IN  SPE ^.layer_01111.shape.color = cyan
0.602	IN  SPE ^.layer_011111.shape.color = cyan
0.595	IN  SPE ^.layer_0111111.shape.color = cyan
0.094	
0.094	IN  GEN ^.layer_0111111.shape.color = ?
0.094	IN  GEN ^.layer_011111.shape.color = ?
0.094	IN  GEN ^.layer_01111.shape.color = ?
0.094	IN  GEN ^.layer_0111.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_01.shape.size.i + 2,?) and color ? and layers
  _0: a rectangle with size (1,^.layer_010.shape.size.j) and color cyan and mask Full at (?,?)
  _010: ^.layer_01.shape at '(1, 0)
  _01: a rectangle with size ^.layer_01.shape.size + (2, 0) and color cyan and mask Full at '(0, 0)
  _011: ^.layer_01.shape at (1,?)
  _0111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_0111111.pos.j - ^.layer_011.pos.j,1) and color ^.layer_0111.shape.color and mask Full at ('0,?)
  _01111: a point with color cyan at (bottom(^.layer_01) - 2,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01111: a point with color cyan at (?,?)
  _011111: a point with color cyan at (?,?)
  _0111111: a point with color cyan at (?,?)

DL input  with Mi: L = 201.5 + 12646.4 = 12847.8
DL output with Mo: L = 321.3 + 896.9 = 1218.2
DL input+output M: L = 522.7 + 13543.2 = 14066.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_01.shape.size.i + 2,?) and color ? and layers
  _0: a rectangle with size (1,^.layer_010.shape.size.j) and color cyan and mask Full at (?,?)
  _010: ^.layer_01.shape at '(1, 0)
  _01: a rectangle with size ^.layer_01.shape.size + (2, 0) and color cyan and mask Full at '(0, 0)
  _011: ^.layer_01.shape at (1,?)
  _0111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_0111111.pos.j - ^.layer_011.pos.j,1) and color ^.layer_0111.shape.color and mask Full at ('0,?)
  _01111: a point with color cyan at (bottom(^.layer_01) - 2,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 188.2 + 20.0 = 208.2
DL output with Mo: L = 321.3 + 896.9 = 1218.2
DL input+output M: L = 509.4 + 916.9 = 1426.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _010: a rectangle with size (8,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,8)
  _01111: a point with color cyan at (3,3)
  _011111: a point with color cyan at (3,7)
  _0111111: a point with color cyan at (7,7)
diff: 
delta: (6,1)=0  (7,1)=0  (7,3)=8 
   (2.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (4,4)
  _010: a rectangle with size (3,1) and color grey and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,4)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _01111: a point with color cyan at (2,2)
diff: 
delta:
   (29.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _010: a rectangle with size (8,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,8)
  _01111: a point with color cyan at (3,3)
  _011111: a point with color cyan at (3,7)
  _0111111: a point with color cyan at (7,3)
diff: 
delta: (6,1)=0  (7,1)=0  (7,7)=8 
! size mismatch, 5x10 instead of 5x5

TRAIN 3f7978a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.. at (1,8)
  _010: a rectangle with size (2,2) and color cyan and mask x.|xx at (7,8)
  _01: a rectangle with size (3,1) and color grey and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _01111: a point with color cyan at (0,1)
  _011111: a point with color cyan at (1,2)
  _0111111: a point with color cyan at (1,6)
diff: 
delta: (3,2)=8  (4,0)=8  (7,2)=8  (7,4)=8  (8,1)=8 
   (0.0 bits)
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,3)
  _010: a rectangle with size (3,1) and color grey and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,6)
  _0111: a rectangle with size (5,1) and color cyan and mask Full at (0,6)
  _01111: a point with color cyan at (4,2)
diff: 
delta:
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.. at (1,8)
  _010: a rectangle with size (2,2) and color cyan and mask x.|xx at (7,8)
  _01: a rectangle with size (3,1) and color grey and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _01111: a point with color cyan at (0,1)
  _011111: a point with color cyan at (1,2)
  _0111111: a point with color cyan at (1,6)
diff: 
delta: (3,2)=8  (4,0)=8  (7,2)=8  (7,4)=8  (8,1)=8 
! size mismatch, 5x10 instead of 5x7

TRAIN 3f7978a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
  _010: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (8,1) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,9)
  _01111: a point with color cyan at (2,3)
  _011111: a point with color cyan at (3,9)
  _0111111: a point with color cyan at (4,2)
diff: 
delta: (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,10)=8  (8,7)=0  (8,10)=8  (10,8)=8 
   (0.0 bits)
data: a background with size (6,5) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _010: a rectangle with size (4,1) and color grey and mask Full at (1,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (4,1) and color grey and mask Full at (1,4)
  _0111: a rectangle with size (6,1) and color cyan and mask Full at (0,4)
  _01111: a point with color cyan at (4,2)
diff: 
delta:
   (29.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
  _010: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (8,1) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,9)
  _01111: a point with color cyan at (2,3)
  _011111: a point with color cyan at (3,9)
  _0111111: a point with color cyan at (4,2)
diff: 
delta: (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,10)=8  (8,7)=0  (8,10)=8  (10,8)=8 
! size mismatch, 6x10 instead of 6x5
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _010: a rectangle with size (4,2) and color cyan and mask Full at (6,2)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (8,1) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,9)
  _01111: a point with color cyan at (2,3)
  _011111: a point with color cyan at (3,9)
  _0111111: a point with color cyan at (4,2)
diff: 
delta: (4,5)=8  (5,8)=8  (6,5)=8  (7,2)=0  (7,10)=8  (8,2)=0  (8,3)=0  (8,7)=0  (8,10)=8  (10,8)=8 
! size mismatch, 6x10 instead of 6x5

TRAIN 3f7978a0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (4,0)
  _010: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (3,0)
  _01: a rectangle with size (8,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,4)
  _0111: a rectangle with size (10,1) and color cyan and mask Full at (3,3)
  _01111: a point with color cyan at (0,0)
  _011111: a point with color cyan at (2,8)
  _0111111: a point with color cyan at (7,6)
diff: 
delta: (4,12)=8  (7,9)=8  (8,2)=8  (8,12)=8  (10,1)=8  (10,10)=8  (10,12)=8  (11,7)=8  (12,0)=8  (13,12)=8 
! size mismatch, 10x10 instead of 10x4

TEST 3f7978a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.7 sec (57.7 sec/task)
bits-train-error = 896.9 bits (896.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-309] Checking task 40853293.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8453.4 = 8466.0
DL output with Mo: L = 12.6 + 28104.9 = 28117.5
DL input+output M: L = 25.2 + 36558.2 = 36583.5

# learning a model for train pairs
2.000	
1.733	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.522	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.365	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.236	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.146	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.052	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.006	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.959	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.912	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.864	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.817	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.769	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.752	OUT SPE ^.size = ^.size
0.739	IN  SPE ^.layer_01.shape.color = green
0.726	IN  SPE ^.layer_011.shape.color = green
0.717	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.708	OUT SPE ^.layer_011.pos = ^.layer_01.pos
0.698	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.689	OUT SPE ^.layer_01111.pos = ^.layer_01111111.pos
0.680	OUT SPE ^.layer_01.pos = ^.layer_0111111.pos
0.675	IN  SPE ^.color = black
0.671	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.667	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.659	OUT SPE ^.layer_011.shape.size = span(^.layer_01.pos, ^.layer_011.pos)
0.655	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.651	OUT SPE ^.layer_01111.shape.color = ^.layer_01111111.shape.color
0.648	OUT SPE ^.layer_01.shape.color = ^.layer_0111111.shape.color
0.646	OUT SPE ^.layer_0.shape.size.j = 1
0.643	OUT SPE ^.layer_0.shape.mask = Full
0.641	OUT SPE ^.layer_01.shape.size.j = 1
0.639	OUT SPE ^.layer_01.shape.mask = Full
0.636	OUT SPE ^.layer_011.shape.mask = Full
0.634	OUT SPE ^.layer_0111.shape.mask = Full
0.632	OUT SPE ^.layer_01111.shape.size.i = 1
0.628	OUT SPE ^.layer_01.shape.size.i = area(^.layer_01.shape) - ^.layer_01111111.pos.j - ^.layer_011.pos.j
0.625	OUT SPE ^.layer_01111.shape.mask = Full
0.624	OUT SPE ^.color = black
0.049	
0.049	IN  GEN ^.layer_011.shape.color = ?
0.048	IN  GEN ^.layer_01.shape.color = ?
0.048	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (area(^.layer_01.shape) - ^.layer_01111111.pos.j - ^.layer_011.pos.j,1) and color ^.layer_0111111.shape.color and mask Full at ^.layer_0111111.pos
  _011: a rectangle with size span(^.layer_01.pos, ^.layer_011.pos) and color ^.layer_011.shape.color and mask Full at ^.layer_01.pos
  _0111: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_0111.pos
  _01111: a rectangle with size (1,?) and color ^.layer_01111111.shape.color and mask Full at ^.layer_01111111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 145.2 + 4862.9 = 5008.1
DL output with Mo: L = 303.7 + 595.9 = 899.7
DL input+output M: L = 448.9 + 5458.9 = 5907.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (area(^.layer_01.shape) - ^.layer_01111111.pos.j - ^.layer_011.pos.j,1) and color ^.layer_0111111.shape.color and mask Full at ^.layer_0111111.pos
  _011: a rectangle with size span(^.layer_01.pos, ^.layer_011.pos) and color ^.layer_011.shape.color and mask Full at ^.layer_01.pos
  _0111: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_0111.pos
  _01111: a rectangle with size (1,?) and color ^.layer_01111111.shape.color and mask Full at ^.layer_01111111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.4 + 0.0 = 138.4
DL output with Mo: L = 303.7 + 595.9 = 899.7
DL input+output M: L = 442.1 + 595.9 = 1038.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color green at (6,3)
  _011: a point with color green at (6,11)
  _0111: a point with color cyan at (12,14)
  _01111: a point with color red at (13,6)
  _011111: a point with color cyan at (17,14)
  _0111111: a point with color pink at (18,4)
  _01111111: a point with color grey at (20,2)
diff: 
delta: (20,7)=5# (27,4)=6 
   (0.0 bits)
data: a background with size (30,20) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (2,6)
  _01: a rectangle with size (10,1) and color pink and mask Full at (18,4)
  _011: a rectangle with size (1,9) and color green and mask Full at (6,3)
  _0111: a rectangle with size (6,1) and color cyan and mask Full at (12,14)
  _01111: a rectangle with size (1,6) and color grey and mask Full at (20,2)
diff: 
delta:
   (30.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color green at (6,3)
  _011: a point with color green at (6,11)
  _0111: a point with color cyan at (12,14)
  _01111: a point with color red at (13,6)
  _011111: a point with color cyan at (17,14)
  _0111111: a point with color pink at (18,4)
  _01111111: a point with color grey at (20,2)
diff: 
delta: (20,7)=5# (27,4)=6 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color green at (6,3)
  _011: a point with color green at (6,11)
  _0111: a point with color cyan at (12,14)
  _01111: a point with color red at (13,6)
  _011111: a point with color cyan at (17,14)
  _0111111: a point with color pink at (18,4)
  _01111111: a point with color grey at (20,7)
diff: 
delta: (20,2)=5# (27,4)=6 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color green at (6,3)
  _011: a point with color green at (6,11)
  _0111: a point with color cyan at (12,14)
  _01111: a point with color red at (13,6)
  _011111: a point with color cyan at (17,14)
  _0111111: a point with color grey at (20,2)
  _01111111: a point with color pink at (18,4)
diff: 
delta: (20,7)=5# (27,4)=6 
! 37 wrong pixels (generated / expected)

TRAIN 40853293.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _01: a point with color green at (4,2)
  _011: a point with color green at (4,7)
  _0111: a point with color orange at (8,2)
  _01111: a point with color orange at (8,5)
  _011111: a point with color yellow at (10,3)
  _0111111: a point with color brown at (12,5)
  _01111111: a point with color cyan at (14,1)
diff: 
delta: (14,6)=8  (18,5)=9#
   (0.0 bits)
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (9,1) and color yellow and mask Full at (2,3)
  _01: a rectangle with size (7,1) and color brown and mask Full at (12,5)
  _011: a rectangle with size (1,6) and color green and mask Full at (4,2)
  _0111: a rectangle with size (1,4) and color orange and mask Full at (8,2)
  _01111: a rectangle with size (1,6) and color cyan and mask Full at (14,1)
diff: 
delta:
   (28.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _01: a point with color green at (4,2)
  _011: a point with color green at (4,7)
  _0111: a point with color orange at (8,2)
  _01111: a point with color orange at (8,5)
  _011111: a point with color yellow at (10,3)
  _0111111: a point with color brown at (12,5)
  _01111111: a point with color cyan at (14,1)
diff: 
delta: (14,6)=8  (18,5)=9#
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _01: a point with color green at (4,2)
  _011: a point with color green at (4,7)
  _0111: a point with color orange at (8,2)
  _01111: a point with color orange at (8,5)
  _011111: a point with color yellow at (10,3)
  _0111111: a point with color brown at (12,5)
  _01111111: a point with color cyan at (14,6)
diff: 
delta: (14,1)=8  (18,5)=9#
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _01: a point with color green at (4,2)
  _011: a point with color green at (4,7)
  _0111: a point with color orange at (8,2)
  _01111: a point with color orange at (8,5)
  _011111: a point with color yellow at (10,3)
  _0111111: a point with color cyan at (14,1)
  _01111111: a point with color brown at (12,5)
diff: 
delta: (14,6)=8  (18,5)=9#
! 23 wrong pixels (generated / expected)

TRAIN 40853293.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-6,1) and color grey and mask Full at (9,9)

TEST 40853293.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 34.2 sec (34.2 sec/task)
bits-train-error = 595.9 bits (595.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-308] Checking task 4093f84a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 70144.3 = 70156.9
DL output with Mo: L = 12.6 + 70144.3 = 70156.9
DL input+output M: L = 25.2 + 140288.5 = 140313.7

# learning a model for train pairs
2.000	
1.063	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.241	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.231	OUT SPE ^.size = ^.size
0.223	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.214	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.206	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.197	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.188	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.180	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.171	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.168	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.166	IN  SPE ^.layer_0.shape.color = grey
0.164	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_0111.pos.j)
0.162	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i - ^.layer_01111111.pos.i - ^.layer_0111111.pos.i
0.161	IN  SPE ^.layer_0.shape.mask = Full
0.160	IN  SPE ^.color = black
0.159	OUT SPE ^.color = black
0.049	
0.049	IN  GEN ^.layer_0.shape.color = ?
0.049	IN  GEN ^.layer_0.shape.mask = ?
0.049	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i - ^.layer_01111111.pos.i - ^.layer_0111111.pos.i,min(^.layer_0.pos.j, ^.layer_0111.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 152.1 + 7705.2 = 7857.3
DL output with Mo: L = 128.5 + 3147.2 = 3275.7
DL input+output M: L = 280.7 + 10852.4 = 11133.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i - ^.layer_01111111.pos.i - ^.layer_0111111.pos.i,min(^.layer_0.pos.j, ^.layer_0111.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 147.7 + 20.0 = 167.7
DL output with Mo: L = 128.5 + 3147.2 = 3275.7
DL input+output M: L = 276.2 + 3167.2 = 3443.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _01: a point with color red at (0,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (3,10)
  _01111: a point with color red at (9,9)
  _011111: a point with color red at (10,1)
  _0111111: a point with color red at (11,4)
  _01111111: a point with color red at (12,11)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,14) and color grey and mask ..x.....x.x...|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|.x..x....x.x.. at (4,0)
diff: 
delta:
   (95.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _01: a point with color red at (0,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (3,10)
  _01111: a point with color red at (9,9)
  _011111: a point with color red at (10,1)
  _0111111: a point with color red at (11,4)
  _01111111: a point with color red at (12,11)
diff: 
delta:
! 63 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _01: a point with color red at (0,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (3,10)
  _01111: a point with color red at (9,9)
  _011111: a point with color red at (10,1)
  _0111111: a point with color red at (12,11)
  _01111111: a point with color red at (11,4)
diff: 
delta:
! 59 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _01: a point with color red at (0,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (3,10)
  _01111: a point with color red at (9,9)
  _011111: a point with color red at (11,4)
  _0111111: a point with color red at (10,1)
  _01111111: a point with color red at (12,11)
diff: 
delta:
! 67 wrong pixels (generated / expected)

TRAIN 4093f84a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a point with color green at (0,12)
  _011: a point with color green at (1,9)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (2,11)
  _011111: a point with color green at (4,0)
  _0111111: a point with color green at (6,10)
  _01111111: a point with color green at (6,12)
diff: 
delta: (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
   (0.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,8) and color grey and mask .xxxxxx.|.xxxxxx.|xxxxxxx.|.xxxxx..|xxxxxx..|.xxxxx..|.xxxxxxx|xxxxxx..|.xxxxx..|xxxxxxx.|.xxxxx..|.xxxxx..|.xxxxxx.|.xxxxx.. at (0,3)
diff: 
delta:
   (123.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a point with color green at (0,12)
  _011: a point with color green at (1,9)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (2,11)
  _011111: a point with color green at (4,0)
  _0111111: a point with color green at (6,10)
  _01111111: a point with color green at (6,12)
diff: 
delta: (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
! 81 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a point with color green at (0,12)
  _011: a point with color green at (1,9)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (2,11)
  _011111: a point with color green at (4,0)
  _0111111: a point with color green at (6,10)
  _01111111: a point with color green at (7,1)
diff: 
delta: (6,12)=3  (9,2)=3  (9,12)=3  (12,10)=3 
! 81 wrong pixels (generated / expected)

TRAIN 4093f84a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _01: a point with color blue at (1,7)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,7)
  _01111: a point with color blue at (3,12)
  _011111: a point with color blue at (5,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (11,3)
diff: 
delta: (10,11)=1  (11,8)=1 
   (2.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,14) and color grey and mask .......x......|...x...xx...x.|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|.x.x....x..x.. at (5,0)
diff: 
delta:
   (96.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _01: a point with color blue at (1,7)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,7)
  _01111: a point with color blue at (3,12)
  _011111: a point with color blue at (5,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (10,11)
diff: 
delta: (11,3)=1  (11,8)=1 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _01: a point with color blue at (1,7)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,7)
  _01111: a point with color blue at (3,12)
  _011111: a point with color blue at (5,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (11,3)
diff: 
delta: (10,11)=1  (11,8)=1 
! 41 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _01: a point with color blue at (1,7)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,7)
  _01111: a point with color blue at (3,12)
  _011111: a point with color blue at (5,8)
  _0111111: a point with color blue at (10,11)
  _01111111: a point with color blue at (9,1)
diff: 
delta: (11,3)=1  (11,8)=1 
! 35 wrong pixels (generated / expected)

TRAIN 4093f84a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,2) and color grey and mask Full at (0,5)
  _01: a point with color yellow at (1,2)
  _011: a point with color yellow at (1,9)
  _0111: a point with color yellow at (3,3)
  _01111: a point with color yellow at (4,1)
  _011111: a point with color yellow at (6,7)
  _0111111: a point with color yellow at (6,11)
  _01111111: a point with color yellow at (11,1)
diff: 
delta: (11,3)=4  (11,10)=4  (13,12)=4 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,2) and color grey and mask Full at (0,5)
  _01: a point with color yellow at (1,2)
  _011: a point with color yellow at (1,9)
  _0111: a point with color yellow at (3,3)
  _01111: a point with color yellow at (4,1)
  _011111: a point with color yellow at (6,7)
  _0111111: a point with color yellow at (11,1)
  _01111111: a point with color yellow at (6,11)
diff: 
delta: (11,3)=4  (11,10)=4  (13,12)=4 
! 42 wrong pixels (generated / expected)

TEST 4093f84a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 3147.2 bits (3147.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-307] Checking task 41e4d17e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19217.8 = 19230.4
DL output with Mo: L = 12.6 + 47268.9 = 47281.5
DL input+output M: L = 25.2 + 66486.7 = 66511.9

# learning a model for train pairs
2.000	
1.399	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	OUT ADD ^.layer_0 = ^.layer_0
0.920	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.727	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.521	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.398	OUT ADD ^.layer_010 = ^.layer_01
0.311	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.301	OUT SPE ^.size = ^.size
0.292	IN  SPE ^.color = cyan
0.286	IN  SPE ^.layer_0.shape.color = blue
0.281	IN  SPE ^.layer_01.shape.color = blue
0.275	OUT SPE ^.layer_01.shape.size = projJ(^.size) + (1, 0)
0.269	OUT SPE ^.layer_01111.shape.size = projI(^.size) + (0, 1)
0.264	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos) + (2, 0)
0.260	OUT SPE ^.layer_01111.pos = projJ(^.layer_0.pos) + (0, 2)
0.256	OUT SPE ^.color = ^.color
0.254	OUT SPE ^.layer_01.shape.color = pink
0.251	OUT SPE ^.layer_01111.shape.color = pink
0.249	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.j + 2
0.248	OUT SPE ^.layer_01.shape.mask = Full
0.246	OUT SPE ^.layer_011.shape.size.i = 1
0.245	OUT SPE ^.layer_011.shape.mask = Full
0.244	OUT SPE ^.layer_0111.shape.mask = Full
0.242	OUT SPE ^.layer_01111.shape.mask = Full
0.241	OUT SPE ^.layer_0111.pos.i = average(^.layer_0.pos.i, ^.layer_01.pos.i) - ^.layer_01.pos.i - ^.layer_0.pos.i
0.032	
0.031	IN  GEN ^.color = ?
0.031	IN  GEN ^.layer_01.shape.color = ?
0.031	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size projJ(^.size) + (1, 0) and color pink and mask Full at projI(^.layer_01.pos) + (2, 0)
  _011: a rectangle with size (1,?) and color ? and mask Full at (^.layer_0.pos.j + 2,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (average(^.layer_0.pos.i, ^.layer_01.pos.i) - ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _01111: a rectangle with size projI(^.size) + (0, 1) and color pink and mask Full at projJ(^.layer_0.pos) + (0, 2)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 77.5 + 4056.6 = 4134.1
DL output with Mo: L = 307.7 + 923.4 = 1231.1
DL input+output M: L = 385.2 + 4980.0 = 5365.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size projJ(^.size) + (1, 0) and color pink and mask Full at projI(^.layer_01.pos) + (2, 0)
  _011: a rectangle with size (1,?) and color ? and mask Full at (^.layer_0.pos.j + 2,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (average(^.layer_0.pos.i, ^.layer_01.pos.i) - ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _01111: a rectangle with size projI(^.size) + (0, 1) and color pink and mask Full at projJ(^.layer_0.pos) + (0, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 31.7 = 95.9
DL output with Mo: L = 307.7 + 923.4 = 1231.1
DL input+output M: L = 371.9 + 955.1 = 1327.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (1,3)
  _01: a rectangle with size (5,1) and color blue and mask Full at (1,7)
diff: 
delta: (1,4)=1  (1,5)=1  (1,6)=1  (5,4)=1  (5,5)=1  (5,6)=1 
   (3.2 bits)
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (1,3)
  _010: a rectangle with size (5,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (1,15) and color pink and mask Full at (3,0)
  _011: a rectangle with size (1,5) and color blue and mask Full at (5,3)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _01111: a rectangle with size (15,1) and color pink and mask Full at (0,5)
diff: 
delta:
   (43.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,5) and color blue and mask Full at (5,3)
diff: 
delta: (2,3)=1  (2,7)=1  (3,3)=1  (3,7)=1  (4,3)=1  (4,7)=1 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (5,3)
  _01: a rectangle with size (1,5) and color blue and mask Full at (1,3)
diff: 
delta: (2,3)=1  (2,7)=1  (3,3)=1  (3,7)=1  (4,3)=1  (4,7)=1 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (1,3)
  _01: a rectangle with size (5,1) and color blue and mask Full at (1,7)
diff: 
delta: (1,4)=1  (1,5)=1  (1,6)=1  (5,4)=1  (5,5)=1  (5,6)=1 
! 12 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (9,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _010: a rectangle with size (5,5) and color blue and mask Border at (9,8)
  _01: a rectangle with size (1,15) and color pink and mask Full at (11,0)
  _011: a rectangle with size (1,15) and color pink and mask Full at (5,0)
  _0111: a rectangle with size (15,1) and color pink and mask Full at (0,10)
  _01111: a rectangle with size (15,1) and color pink and mask Full at (0,5)
diff: 
delta:
   (49.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (9,8)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (9,8)
  _01: a rectangle with size (5,5) and color blue and mask Border at (3,3)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (1,6)
  _01: a rectangle with size (5,5) and color blue and mask Border at (9,3)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (9,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (1,6)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TEST 41e4d17e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 43.6 sec (43.6 sec/task)
bits-train-error = 923.4 bits (923.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-306] Checking task 4258a5f9.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3103.7 = 3116.4
DL output with Mo: L = 12.6 + 23871.0 = 23883.6
DL input+output M: L = 25.2 + 26974.8 = 27000.0

# learning a model for train pairs
2.000	
1.487	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.214	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.083	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.948	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.864	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT ADD ^.layer_00 = ^.layer_0
0.797	IN  SPE ^.layer_0.shape.color = grey
0.762	IN  SPE ^.layer_01.shape.color = grey
0.727	IN  SPE ^.layer_011.shape.color = grey
0.710	OUT SPE ^.size = ^.size
0.695	IN  SPE ^.color = black
0.682	OUT SPE ^.layer_0.shape.size = span(^.layer_0.pos, ^.layer_011.pos) + (2, 2)
0.674	OUT SPE ^.layer_0.pos = projJ(^.layer_011.pos) - (0, 1)
0.669	OUT SPE ^.layer_0.shape.color = blue
0.666	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.i / '2
0.663	OUT SPE ^.layer_01.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) - 3
0.659	OUT SPE ^.layer_011.pos.i = span(^.layer_01.pos.j, ^.layer_011.pos.j) + 1
0.657	OUT SPE ^.layer_01.shape.mask = Full
0.654	OUT SPE ^.layer_011.shape.mask = Full
0.652	OUT SPE ^.color = black
0.192	
0.191	IN  GEN ^.layer_011.shape.color = ?
0.189	IN  GEN ^.layer_01.shape.color = ?
0.188	IN  GEN ^.layer_0.shape.color = ?
0.188	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) + (2, 2) and color blue and mask ? at projJ(^.layer_011.pos) - (0, 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 3)
  _011: a rectangle with size (?,?) and color ? and mask Full at (span(^.layer_01.pos.j, ^.layer_011.pos.j) + 1,^.layer_011.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)

DL input  with Mi: L = 71.5 + 1434.3 = 1505.8
DL output with Mo: L = 261.8 + 3766.3 = 4028.1
DL input+output M: L = 333.3 + 5200.6 = 5533.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) + (2, 2) and color blue and mask ? at projJ(^.layer_011.pos) - (0, 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 3)
  _011: a rectangle with size (?,?) and color ? and mask Full at (span(^.layer_01.pos.j, ^.layer_011.pos.j) + 1,^.layer_011.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 261.8 + 3766.3 = 4028.1
DL input+output M: L = 323.2 + 3766.3 = 4089.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (1,6)
  _0: a rectangle with size (9,8) and color blue and mask .....xxx|.....x.x|.....xxx|..xxx...|..x.x...|..xxx...|xxx.....|x.x.....|xxx..... at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (7,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,3)
diff: 
delta:
   (103.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta:
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (7,1)
  _011: a point with color grey at (4,3)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,3)
  _01: a point with color grey at (1,6)
  _011: a point with color grey at (7,1)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (5,7)
diff: 
delta: (7,3)=5#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (1,7)
  _0: a rectangle with size (7,3) and color blue and mask Full at (0,6)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (6,2)
diff: 
delta: (2,3)=5# (3,6)=0  (3,7)=0  (3,8)=0  (5,7)=5# (7,3)=5#
   (273.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (5,7)
diff: 
delta: (7,3)=5#
! 24 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (2,7)
  _011: a point with color grey at (4,3)
diff: 
delta: (7,1)=5# (7,5)=5#
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (2,7)
  _011: a point with color grey at (7,1)
diff: 
delta: (4,3)=5# (7,5)=5#
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (2,7)
diff: 
delta: (7,1)=5# (7,5)=5#
! 39 wrong pixels (generated / expected)

TEST 4258a5f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.6 sec (12.6 sec/task)
bits-train-error = 3766.3 bits (3766.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-305] Checking task 4290ef0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 47779.4 = 47792.0
DL output with Mo: L = 12.6 + 50555.4 = 50568.0
DL input+output M: L = 25.2 + 98334.8 = 98360.0

# learning a model for train pairs
2.000	
1.829	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.662	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.544	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.426	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.598	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 39584.0 = 39622.8
DL output with Mo: L = 78.1 + 30100.4 = 30178.5
DL input+output M: L = 116.9 + 69684.4 = 69801.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 78.1 + 30100.4 = 30178.5
DL input+output M: L = 116.9 + 30100.4 = 30217.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,17) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (1,12)
diff: 
delta: (2,3)=1  (2,4)=1  (2,6)=1  (2,7)=1  (3,3)=1  (3,7)=1  (5,3)=1  (5,7)=1  (6,3)=1  (6,4)=1  (6,6)=1  (6,7)=1  (7,10)=6  (7,11)=6  (7,15)=6  (7,16)=6  (8,10)=6  (8,16)=6  (12,10)=6  (12,16)=6 
   (0.0 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (2,2)
  _01: a rectangle with size (2,5) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,5) and color blue and mask Full at (4,1)
diff: 
delta: (0,0)=6  (0,1)=6  (0,5)=6  (0,6)=6  (1,0)=6  (1,3)=4  (1,6)=6  (5,0)=6  (5,3)=4  (5,6)=6  (6,0)=6  (6,1)=6  (6,5)=6  (6,6)=6 
   (616.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (1,12)
diff: 
delta: (2,3)=1  (2,4)=1  (2,6)=1  (2,7)=1  (3,3)=1  (3,7)=1  (5,3)=1  (5,7)=1  (6,3)=1  (6,4)=1  (6,6)=1  (6,7)=1  (7,10)=6  (7,11)=6  (7,15)=6  (7,16)=6  (8,10)=6  (8,16)=6  (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (13,17) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (1,12)
diff: 
delta: (2,3)=1  (2,4)=1  (2,6)=1  (2,7)=1  (2,13)=4  (3,3)=1  (3,7)=1  (5,3)=1  (5,7)=1  (6,3)=1  (6,4)=1  (6,6)=1  (6,7)=1  (7,10)=6  (7,11)=6  (7,15)=6  (7,16)=6  (8,10)=6  (8,16)=6  (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (11,1)
diff: 
delta: (2,2)=1  (2,3)=1  (2,4)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,2)=1  (3,8)=1  (4,2)=1  (4,8)=1  (6,2)=1  (6,8)=1  (6,13)=0  (7,2)=1  (7,8)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,6)=1  (8,7)=1  (8,8)=1  (12,7)=2  (12,8)=2  (12,10)=2  (12,11)=2  (13,7)=2  (13,11)=2  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
   (0.0 bits)
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (2,2)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,1)
  _011: a rectangle with size (2,5) and color red and mask Full at (4,1)
diff: 
delta: (0,3)=8  (1,3)=8  (3,0)=8  (3,1)=8  (3,3)=0  (3,5)=8  (3,6)=8  (5,3)=8  (6,3)=8 
   (434.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (11,1)
diff: 
delta: (2,2)=1  (2,3)=1  (2,4)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,2)=1  (3,8)=1  (4,2)=1  (4,8)=1  (6,2)=1  (6,8)=1  (6,13)=0  (7,2)=1  (7,8)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,6)=1  (8,7)=1  (8,8)=1  (12,7)=2  (12,8)=2  (12,10)=2  (12,11)=2  (13,7)=2  (13,11)=2  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (11,1)
diff: 
delta: (2,2)=1  (2,3)=1  (2,4)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,2)=1  (3,8)=1  (4,2)=1  (4,8)=1  (6,2)=1  (6,8)=1  (6,13)=0  (7,2)=1  (7,8)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,6)=1  (8,7)=1  (8,8)=1  (12,2)=8  (12,7)=2  (12,8)=2  (12,10)=2  (12,11)=2  (13,7)=2  (13,11)=2  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Border at (6,7)
diff: 
delta: (1,0)=2  (1,1)=2  (1,2)=2  (2,2)=2  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=8  (2,16)=8  (3,2)=2  (3,5)=1  (3,13)=1  (3,15)=8  (4,5)=1  (4,13)=1  (5,2)=2  (5,15)=8  (6,2)=2  (6,15)=8  (6,16)=8  (7,0)=2  (7,1)=2  (7,2)=2  (8,5)=1  (8,13)=1  (9,5)=1  (9,13)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
   (0.0 bits)
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Border at (4,4)
  _01: a rectangle with size (3,7) and color red and mask Full at (2,2)
  _011: a rectangle with size (3,7) and color red and mask Full at (6,2)
diff: 
delta: (0,0)=4  (0,1)=4  (0,9)=4  (0,10)=4  (1,0)=4  (1,1)=1  (1,2)=1  (1,3)=1  (1,7)=1  (1,8)=1  (1,9)=1  (1,10)=4  (2,1)=1  (2,5)=3  (2,9)=1  (3,1)=1  (3,3)=8  (3,4)=8  (3,5)=3  (3,6)=8  (3,7)=8  (3,9)=1  (4,3)=8  (4,7)=8  (5,5)=6  (6,3)=8  (6,7)=8  (7,1)=1  (7,3)=8  (7,4)=8  (7,5)=3  (7,6)=8  (7,7)=8  (7,9)=1  (8,1)=1  (8,5)=3  (8,9)=1  (9,0)=4  (9,1)=1  (9,2)=1  (9,3)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=4  (10,0)=4  (10,1)=4  (10,9)=4  (10,10)=4 
   (1959.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Border at (6,7)
diff: 
delta: (1,0)=2  (1,1)=2  (1,2)=2  (2,2)=2  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=8  (2,16)=8  (3,2)=2  (3,5)=1  (3,13)=1  (3,15)=8  (4,5)=1  (4,13)=1  (5,2)=2  (5,15)=8  (6,2)=2  (6,15)=8  (6,16)=8  (7,0)=2  (7,1)=2  (7,2)=2  (8,5)=1  (8,13)=1  (9,5)=1  (9,13)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (6,7)
diff: 
delta: (1,0)=2  (1,1)=2  (1,2)=2  (2,2)=2  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=8  (2,16)=8  (3,2)=2  (3,5)=1  (3,13)=1  (3,15)=8  (4,5)=1  (4,13)=1  (5,2)=2  (5,15)=8  (6,2)=2  (6,15)=8  (6,16)=8  (7,0)=2  (7,1)=2  (7,2)=2  (7,8)=3  (8,5)=1  (8,13)=1  (9,5)=1  (9,13)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11

TRAIN 4290ef0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color blue and layers
  _0: a rectangle with size (5,5) and color yellow and mask x....|x....|x....|x....|xxxxx at (2,13)
diff: 
delta: (0,13)=4  (3,7)=8  (3,8)=8  (3,9)=8  (4,7)=8  (4,9)=8  (5,7)=8  (5,8)=8  (5,9)=8  (8,3)=3  (8,4)=3  (8,6)=3  (8,7)=3  (9,3)=3  (9,7)=3  (11,3)=3  (11,7)=3  (12,3)=3  (12,4)=3  (12,6)=3  (12,7)=3  (13,14)=6  (13,15)=6  (14,14)=6  (15,4)=2  (15,5)=2  (15,6)=2  (15,10)=2  (15,11)=2  (15,12)=2  (16,4)=2  (16,12)=2  (17,4)=2  (17,12)=2  (18,14)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (19,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (3,7)
diff: 
delta: (0,13)=4  (2,13)=4  (3,13)=4  (4,13)=4  (5,13)=4  (6,13)=4  (6,14)=4  (6,15)=4  (6,16)=4  (6,17)=4  (8,3)=3  (8,4)=3  (8,6)=3  (8,7)=3  (9,3)=3  (9,7)=3  (11,3)=3  (11,7)=3  (12,3)=3  (12,4)=3  (12,6)=3  (12,7)=3  (13,14)=6  (13,15)=6  (14,14)=6  (15,4)=2  (15,5)=2  (15,6)=2  (15,10)=2  (15,11)=2  (15,12)=2  (16,4)=2  (16,12)=2  (17,4)=2  (17,12)=2  (18,14)=6 
! size mismatch, 10x10 instead of 11x11

TEST 4290ef0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.2 sec (56.2 sec/task)
bits-train-error = 30100.4 bits (30100.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-304] Checking task 42a50994.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49743.0 = 49755.6
DL output with Mo: L = 12.6 + 33686.3 = 33698.9
DL input+output M: L = 25.2 + 83429.3 = 83454.5

# learning a model for train pairs
2.000	
1.818	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.670	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.548	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.391	OUT ADD ^.layer_00 = ^.layer_0
1.288	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.162	OUT ADD ^.layer_011 = ^.layer_01
1.095	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.998	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.964	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.936	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.910	OUT SPE ^.size = ^.size
0.893	IN  ADD ^.layer_01111110 = a point with color ? at (?,?)
0.883	OUT SPE ^.layer_01.shape.mask = ^.layer_011.shape.mask
0.876	OUT SPE ^.layer_0.pos.i = ^.layer_0111.pos.i
0.869	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.863	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.857	OUT SPE ^.layer_01.pos.j = min(^.layer_011.pos.j, ^.layer_0111.pos.j)
0.851	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.i
0.845	OUT SPE ^.layer_0.pos.j = max(^.layer_0111.pos.j, ^.layer_0111111.pos.j)
0.840	OUT SPE ^.layer_01.shape.size.j = area(^.layer_011111.shape)
0.835	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0111.shape) - 1
0.832	OUT SPE ^.color = black
0.830	IN  SPE ^.color = black
0.301	
0.301	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (area(^.layer_0111.shape) - 1,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0111.pos.i,max(^.layer_0111.pos.j, ^.layer_0111111.pos.j))
  _01: a rectangle with size (^.layer_011.shape.size.i,area(^.layer_011111.shape)) and color ^.layer_01.shape.color and mask ^.layer_011.shape.mask at (?,min(^.layer_011.pos.j, ^.layer_0111.pos.j))
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111110: a point with color ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 203.6 + 26321.7 = 26525.3
DL output with Mo: L = 272.3 + 9727.0 = 9999.3
DL input+output M: L = 475.8 + 36048.8 = 36524.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (area(^.layer_0111.shape) - 1,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0111.pos.i,max(^.layer_0111.pos.j, ^.layer_0111111.pos.j))
  _01: a rectangle with size (^.layer_011.shape.size.i,area(^.layer_011111.shape)) and color ^.layer_01.shape.color and mask ^.layer_011.shape.mask at (?,min(^.layer_011.pos.j, ^.layer_0111.pos.j))
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111110: a point with color ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 203.4 + 0.0 = 203.4
DL output with Mo: L = 272.3 + 9727.0 = 9999.3
DL input+output M: L = 475.7 + 9727.0 = 10202.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (6,6)
  _01111110: a point with color cyan at (8,10)
  _0111111: a rectangle with size (1,1) and color cyan and mask Full at (10,1)
diff: 
delta: (2,8)=0  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
   (0.0 bits)
data: a background with size (16,11) and color black and layers
  _00: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
diff: 
delta:
   (13.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (6,6)
  _01111110: a point with color cyan at (8,10)
  _0111111: a rectangle with size (1,1) and color cyan and mask Full at (10,1)
diff: 
delta: (2,8)=0  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (10,1)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
  _01111110: a point with color cyan at (6,6)
  _0111111: a rectangle with size (1,1) and color cyan and mask Full at (8,10)
diff: 
delta: (2,8)=0  (11,1)=0  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (10,1)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
  _01111110: a point with color cyan at (6,6)
  _0111111: a rectangle with size (1,1) and color cyan and mask Full at (13,6)
diff: 
delta: (2,8)=0  (8,10)=8  (11,1)=0  (13,9)=8  (14,4)=8  (15,8)=8 
! 5 wrong pixels (generated / expected)

TRAIN 42a50994.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _01: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _011: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (9,11)
  _011111: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,10)
  _01111110: a point with color pink at (1,5)
  _0111111: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,7)
diff: 
delta: (1,8)=6  (3,9)=6  (3,11)=6  (3,17)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,13)=6  (10,7)=6  (11,2)=6 
   (0.0 bits)
data: a background with size (12,18) and color black and layers
  _00: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _0: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _01: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _011: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
diff: 
delta: (0,11)=6  (1,10)=6  (4,7)=6  (5,8)=6  (9,11)=6  (10,11)=6 
   (249.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _01: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _011: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (9,11)
  _011111: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,10)
  _01111110: a point with color pink at (1,5)
  _0111111: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,7)
diff: 
delta: (1,8)=6  (3,9)=6  (3,11)=6  (3,17)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,13)=6  (10,7)=6  (11,2)=6 
! 10 wrong pixels (generated / expected)

TRAIN 42a50994.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _01: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _011: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _0111: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _01111: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
  _011111: a rectangle with size (3,2) and color grey and mask x.|x.|.x at (8,0)
  _01111110: a point with color grey at (0,12)
  _0111111: a rectangle with size (1,2) and color grey and mask Full at (6,14)
diff: 
delta: (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (8,13)=5# (10,13)=5#
   (0.0 bits)
data: a background with size (11,19) and color black and layers
  _00: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _0: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _01: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _011: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
diff: 
delta: (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5#
   (373.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _01: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _011: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _0111: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _01111: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
  _011111: a rectangle with size (3,2) and color grey and mask x.|x.|.x at (8,0)
  _01111110: a point with color grey at (0,12)
  _0111111: a rectangle with size (1,2) and color grey and mask Full at (6,14)
diff: 
delta: (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (8,13)=5# (10,13)=5#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _01: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _011: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _0111: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _01111: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
  _011111: a rectangle with size (1,2) and color grey and mask Full at (6,14)
  _01111110: a point with color grey at (0,12)
  _0111111: a rectangle with size (3,2) and color grey and mask x.|x.|.x at (8,0)
diff: 
delta: (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (8,13)=5# (10,13)=5#
! 19 wrong pixels (generated / expected)

TRAIN 42a50994.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _01: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _011: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _0111: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011111: a rectangle with size (1,2) and color yellow and mask Full at (15,7)
  _01111110: a point with color yellow at (0,5)
  _0111111: a rectangle with size (2,1) and color yellow and mask Full at (15,2)
diff: 
delta: (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,4)=4  (6,0)=4  (8,6)=4  (11,4)=4  (15,0)=4 
   (0.0 bits)
data: a background with size (17,9) and color black and layers
  _00: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _0: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _011: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
diff: 
delta: (0,5)=4  (1,4)=4  (5,7)=4  (5,8)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
   (336.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _01: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _011: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _0111: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011111: a rectangle with size (1,2) and color yellow and mask Full at (15,7)
  _01111110: a point with color yellow at (0,5)
  _0111111: a rectangle with size (2,1) and color yellow and mask Full at (15,2)
diff: 
delta: (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,4)=4  (6,0)=4  (8,6)=4  (11,4)=4  (15,0)=4 
! 16 wrong pixels (generated / expected)

TRAIN 42a50994.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _01: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _011: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
  _0111: a rectangle with size (3,1) and color green and mask Full at (13,0)
  _01111: a rectangle with size (6,1) and color green and mask Full at (1,0)
  _011111: a rectangle with size (1,2) and color green and mask Full at (7,4)
  _01111110: a point with color green at (0,1)
  _0111111: a rectangle with size (1,2) and color green and mask Full at (8,10)
diff: 
delta: (0,4)=3  (0,13)=3  (1,13)=3  (3,0)=0  (3,2)=3  (3,4)=3  (4,2)=3  (4,13)=3  (5,0)=0  (5,5)=3  (6,11)=3  (7,8)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,12)=3  (14,8)=3  (14,11)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _01: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _011: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
  _0111: a rectangle with size (3,1) and color green and mask Full at (13,0)
  _01111: a rectangle with size (6,1) and color green and mask Full at (1,0)
  _011111: a rectangle with size (1,2) and color green and mask Full at (7,4)
  _01111110: a point with color green at (0,1)
  _0111111: a rectangle with size (1,2) and color green and mask Full at (16,2)
diff: 
delta: (0,4)=3  (0,13)=3  (1,13)=3  (3,0)=0  (3,2)=3  (3,4)=3  (4,2)=3  (4,13)=3  (5,0)=0  (5,5)=3  (6,11)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,12)=3  (14,8)=3  (14,11)=3  (15,5)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _01: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _011: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
  _0111: a rectangle with size (1,5) and color green and mask Full at (7,4)
  _01111: a rectangle with size (3,1) and color green and mask Full at (13,0)
  _011111: a rectangle with size (3,2) and color green and mask .x|x.|x. at (0,0)
  _01111110: a point with color green at (0,4)
  _0111111: a rectangle with size (1,2) and color green and mask Full at (8,10)
diff: 
delta: (0,13)=3  (1,13)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,6)=0  (7,7)=0  (9,1)=3  (9,13)=3  (10,10)=3  (13,12)=3  (14,8)=3  (14,11)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 34 wrong pixels (generated / expected)

TEST 42a50994.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.6 sec (20.6 sec/task)
bits-train-error = 9727.0 bits (9727.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-303] Checking task 4347f46a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 64185.8 = 64198.4
DL output with Mo: L = 12.6 + 42840.7 = 42853.3
DL input+output M: L = 25.2 + 107026.5 = 107051.8

# learning a model for train pairs
2.000	
1.504	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.055	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.742	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.638	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.624	OUT SPE ^.size = ^.size
0.615	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.609	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.604	OUT SPE ^.layer_011.shape.size.j = ^.layer_0.shape.size.j
0.599	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.i
0.095	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 32321.0 = 32359.9
DL output with Mo: L = 131.8 + 3917.6 = 4049.4
DL input+output M: L = 170.7 + 36238.6 = 36409.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 131.8 + 3917.6 = 4049.4
DL input+output M: L = 170.7 + 3917.6 = 4088.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (3,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
   (0.0 bits)
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Border at (3,6)
  _01: a rectangle with size (5,3) and color orange and mask Border at (10,12)
  _011: a rectangle with size (4,7) and color pink and mask Border at (10,2)
  _0111: a rectangle with size (3,4) and color cyan and mask Border at (1,1)
diff: 
delta:
   (121.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (3,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 79 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (4,7) and color pink and mask Full at (10,2)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (10,12)=7# (10,13)=7# (10,14)=7# (11,12)=7# (11,13)=7# (11,14)=7# (12,12)=7# (12,13)=7# (12,14)=7# (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 77 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,3) and color orange and mask Full at (10,12)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6 
! 69 wrong pixels (generated / expected)

TRAIN 4347f46a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (1,1)
  _01: a rectangle with size (4,1) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,5) and color red and mask Full at (4,1)
  _0111: a rectangle with size (4,1) and color red and mask Full at (1,5)
diff: 
delta:
   (90.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 4347f46a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Full at (1,2)
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
   (0.0 bits)
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (1,8) and color grey and mask Full at (1,2)
  _01: a rectangle with size (4,6) and color yellow and mask Border at (6,1)
  _011: a rectangle with size (1,8) and color grey and mask Full at (4,2)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (1,2)
diff: 
delta: (2,9)=5# (3,9)=5#
   (179.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Full at (1,2)
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,1)
diff: 
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (1,9)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5#
! 52 wrong pixels (generated / expected)

TRAIN 4347f46a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (6,8) and color blue and mask Full at (6,10)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,7)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,7)=4  (10,2)=4  (10,3)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,7)=4  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Full at (5,2)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (11,16)=1  (11,17)=1  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 101 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask Full at (1,1)
diff: 
delta: (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,7)=4  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,7)=4  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (9,16)=1  (9,17)=1  (10,2)=4  (10,3)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,7)=4  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (11,16)=1  (11,17)=1  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 94 wrong pixels (generated / expected)

TEST 4347f46a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.8 sec (56.8 sec/task)
bits-train-error = 3917.6 bits (3917.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-302] Checking task 444801d8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26229.5 = 26242.1
DL output with Mo: L = 12.6 + 45613.8 = 45626.4
DL input+output M: L = 25.2 + 71843.3 = 71868.5

# learning a model for train pairs
2.000	
1.484	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.150	OUT ADD ^.layer_0 = ^.layer_0
0.853	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.573	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.423	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.295	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.274	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size))
0.261	OUT SPE ^.size = ^.size
0.252	OUT SPE ^.layer_011.shape.size = projI(^.layer_0.shape.size) + projJ(^.layer_01.shape.size)
0.246	IN  SPE ^.layer_0.shape.color = blue
0.241	OUT SPE ^.layer_0111.shape.size.j = ^.layer_01.shape.size.i + 2
0.237	OUT SPE ^.layer_0111.shape.size.i = 3
0.234	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.i - 1
0.231	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.i - 1
0.227	OUT SPE ^.layer_01.pos.j = center(^.layer_01) - 3
0.224	OUT SPE ^.layer_0111.pos.j = middle(^.layer_01) / '2
0.029	
0.029	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: scaleTo(^.layer_01.shape, projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size)) at (?,center(^.layer_01) - 3)
  _011: a rectangle with size projI(^.layer_0.shape.size) + projJ(^.layer_01.shape.size) and color ? and mask ? at (^.layer_0.pos.i - 1,?)
  _0111: a rectangle with size (3,^.layer_01.shape.size.i + 2) and color ? and mask ? at (^.layer_01.pos.i - 1,middle(^.layer_01) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 5116.1 = 5183.7
DL output with Mo: L = 271.2 + 950.3 = 1221.5
DL input+output M: L = 338.7 + 6066.5 = 6405.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: scaleTo(^.layer_01.shape, projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size)) at (?,center(^.layer_01) - 3)
  _011: a rectangle with size projI(^.layer_0.shape.size) + projJ(^.layer_01.shape.size) and color ? and mask ? at (^.layer_0.pos.i - 1,?)
  _0111: a rectangle with size (3,^.layer_01.shape.size.i + 2) and color ? and mask ? at (^.layer_01.pos.i - 1,middle(^.layer_01) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 271.2 + 950.3 = 1221.5
DL input+output M: L = 335.4 + 950.3 = 1285.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (1,5) and color red and mask Full at (0,1)
  _011: a rectangle with size (5,1) and color red and mask Full at (0,3)
  _0111: a rectangle with size (3,3) and color red and mask Full at (2,2)
diff: 
delta:
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 444801d8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (3,3)=2  (8,6)=3 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a rectangle with size (4,5) and color red and mask Full at (1,1)
  _0111: a rectangle with size (3,5) and color green and mask Full at (6,4)
diff: 
delta:
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (3,3)=2  (8,6)=3 
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask Full at (7,4)
diff: 
delta: (3,3)=2  (7,6)=0  (8,5)=0  (8,6)=3  (8,7)=0 
! 47 wrong pixels (generated / expected)

TRAIN 444801d8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (2,3)=6  (8,6)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a rectangle with size (4,5) and color pink and mask Full at (0,1)
  _0111: a rectangle with size (3,5) and color cyan and mask Full at (6,4)
diff: 
delta:
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (2,3)=6  (8,6)=8 
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask Full at (7,4)
diff: 
delta: (2,3)=6  (7,6)=0  (8,5)=0  (8,6)=8  (8,7)=0 
! 45 wrong pixels (generated / expected)

TRAIN 444801d8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Middle: no middle, even height

TEST 444801d8.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 54.7 sec (54.7 sec/task)
bits-train-error = 950.3 bits (950.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-301] Checking task 445eab21.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 32944.1 = 32956.7
DL output with Mo: L = 12.6 + 588.3 = 600.9
DL input+output M: L = 25.2 + 33532.4 = 33557.6

# learning a model for train pairs
2.000	
1.447	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.929	OUT SPE ^.size = '(2, 2)
0.494	OUT SPE ^.color = majorityColor(^.grid)
0.138	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.133	IN  SPE ^.layer_0.shape.mask = Border
0.128	IN  SPE ^.layer_01.shape.mask = Border
0.126	IN  SPE ^.color = black
0.049	
0.048	IN  DEL ^.layer_01
0.047	IN  DEL ^.layer_0
0.047	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color majorityColor(^.grid) and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 71.0 + 2528.3 = 2599.3
DL output with Mo: L = 28.1 + 0.0 = 28.1
DL input+output M: L = 99.1 + 2528.3 = 2627.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color majorityColor(^.grid) and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 28.1 + 0.0 = 28.1
DL input+output M: L = 40.7 + 0.0 = 40.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
diff: 
delta: (0,1)=7# (0,2)=7# (0,3)=7# (0,4)=7# (1,1)=7# (1,4)=7# (2,1)=7# (2,4)=7# (3,1)=7# (3,2)=7# (3,3)=7# (3,4)=7# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,3)=8  (6,7)=8  (7,3)=8  (7,7)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,6)=8  (8,7)=8 
   (0.0 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta: (0,1)=7# (0,2)=7# (0,3)=7# (0,4)=7# (1,1)=7# (1,4)=7# (2,1)=7# (2,4)=7# (3,1)=7# (3,2)=7# (3,3)=7# (3,4)=7# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,3)=8  (6,7)=8  (7,3)=8  (7,7)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,6)=8  (8,7)=8 
correct output grid

TRAIN 445eab21.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (0,3)=6  (0,4)=6  (1,0)=6  (1,4)=6  (2,0)=6  (2,4)=6  (3,0)=6  (3,1)=6  (3,2)=6  (3,3)=6  (3,4)=6  (5,2)=7# (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (5,7)=7# (6,2)=7# (6,7)=7# (7,2)=7# (7,7)=7# (8,2)=7# (8,3)=7# (8,4)=7# (8,5)=7# (8,6)=7# (8,7)=7#
   (0.0 bits)
data: a background with size (2,2) and color orange and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (0,3)=6  (0,4)=6  (1,0)=6  (1,4)=6  (2,0)=6  (2,4)=6  (3,0)=6  (3,1)=6  (3,2)=6  (3,3)=6  (3,4)=6  (5,2)=7# (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (5,7)=7# (6,2)=7# (6,7)=7# (7,2)=7# (7,7)=7# (8,2)=7# (8,3)=7# (8,4)=7# (8,5)=7# (8,6)=7# (8,7)=7#
correct output grid

TRAIN 445eab21.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
diff: 
delta: (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (0,5)=4  (0,6)=4  (1,1)=4  (1,6)=4  (2,1)=4  (2,6)=4  (3,1)=4  (3,6)=4  (4,1)=4  (4,6)=4  (5,1)=4  (5,6)=4  (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,7)=2  (7,8)=2  (7,9)=2  (8,7)=2  (8,9)=2  (9,7)=2  (9,8)=2  (9,9)=2 
   (0.0 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta: (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (0,5)=4  (0,6)=4  (1,1)=4  (1,6)=4  (2,1)=4  (2,6)=4  (3,1)=4  (3,6)=4  (4,1)=4  (4,6)=4  (5,1)=4  (5,6)=4  (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,7)=2  (7,8)=2  (7,9)=2  (8,7)=2  (8,9)=2  (9,7)=2  (9,8)=2  (9,9)=2 
correct output grid

TRAIN 445eab21.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,6)=9# (0,7)=9# (0,8)=9# (0,9)=9# (1,0)=3  (1,4)=3  (1,6)=9# (1,9)=9# (2,0)=3  (2,4)=3  (2,6)=9# (2,9)=9# (3,0)=3  (3,4)=3  (3,6)=9# (3,9)=9# (4,0)=3  (4,4)=3  (4,6)=9# (4,9)=9# (5,0)=3  (5,4)=3  (5,6)=9# (5,9)=9# (6,0)=3  (6,4)=3  (6,6)=9# (6,9)=9# (7,0)=3  (7,4)=3  (7,6)=9# (7,9)=9# (8,0)=3  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,6)=9# (8,9)=9# (9,6)=9# (9,7)=9# (9,8)=9# (9,9)=9#
correct output grid

TEST 445eab21.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-300] Checking task 447fd412.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15737.8 = 15750.4
DL output with Mo: L = 12.6 + 35910.1 = 35922.7
DL input+output M: L = 25.2 + 51647.9 = 51673.1

# learning a model for train pairs
2.000	
1.524	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.140	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.939	OUT ADD ^.layer_01 = ^.layer_0
0.780	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.525	OUT ADD ^.layer_0111 = ^.layer_01
0.507	OUT SPE ^.size = ^.size
0.495	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask and ^.layer_01.shape.mask * '2
0.484	IN  SPE ^.layer_011.shape.color = red
0.478	IN  SPE ^.layer_011.shape.mask = Full
0.472	OUT SPE ^.layer_011.shape.size = max(^.layer_0.shape.size, ^.layer_011.shape.size)
0.468	OUT SPE ^.layer_011.shape.mask = ^.layer_0.shape.mask
0.463	IN  SPE ^.color = black
0.458	OUT SPE ^.layer_0.shape.color = blue
0.454	OUT SPE ^.layer_011.pos.i = right(^.layer_01) + area(^.layer_0.shape)
0.451	OUT SPE ^.layer_011.pos.j = span(^.layer_01.pos.i, ^.layer_011.pos.i) + ^.layer_0.shape.size.i
0.449	OUT SPE ^.color = black
0.109	
0.109	IN  GEN ^.layer_011.shape.mask = ?
0.109	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ^.layer_0.shape.mask and ^.layer_01.shape.mask * '2 at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color ? and mask ^.layer_0.shape.mask at (right(^.layer_01) + area(^.layer_0.shape),span(^.layer_01.pos.i, ^.layer_011.pos.i) + ^.layer_0.shape.size.i)
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 93.7 + 5412.8 = 5506.6
DL output with Mo: L = 237.3 + 3326.8 = 3564.1
DL input+output M: L = 331.0 + 8739.6 = 9070.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ^.layer_0.shape.mask and ^.layer_01.shape.mask * '2 at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color ? and mask ^.layer_0.shape.mask at (right(^.layer_01) + area(^.layer_0.shape),span(^.layer_01.pos.i, ^.layer_011.pos.i) + ^.layer_0.shape.size.i)
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 63.4 = 156.0
DL output with Mo: L = 237.3 + 3326.8 = 3564.1
DL input+output M: L = 329.9 + 3390.2 = 3720.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2 
   (3.2 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask xxxx..|xxxx..|..xx..|..xx..|xxxxxx|xxxxxx at (8,5)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
diff: 
delta: (2,1)=2  (2,4)=2 
   (113.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2 
! 34 wrong pixels (generated / expected)

TRAIN 447fd412.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
   (0.0 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (9,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (10,8)
  _0111: a rectangle with size (4,1) and color red and mask Full at (3,6)
diff: 
delta: (8,2)=2  (9,9)=2  (11,2)=2  (12,9)=2 
   (185.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (9,9)
diff: 
delta: (8,2)=2  (11,2)=2  (12,9)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (11,2)
diff: 
delta: (8,2)=2  (9,9)=2  (12,9)=2 
! 16 wrong pixels (generated / expected)

TRAIN 447fd412.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,7)
diff: 
delta:
   (3.2 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,7) and color blue and mask Full at (7,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _0111: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta:
   (33.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,7)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 447fd412.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (8,17)
  _01: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Full at (11,5)
diff: 
delta: (2,12)=2  (3,4)=2 
! 86 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _01: a rectangle with size (3,3) and color red and mask Full at (8,17)
  _011: a rectangle with size (2,2) and color red and mask Full at (11,5)
diff: 
delta: (2,12)=2  (3,4)=2 
! 78 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,5)
  _011: a rectangle with size (3,3) and color red and mask Full at (8,17)
diff: 
delta: (2,12)=2  (3,4)=2 
! 88 wrong pixels (generated / expected)

TEST 447fd412.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.3 sec (9.3 sec/task)
bits-train-error = 3326.8 bits (3326.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-299] Checking task 44d8ac46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 66990.8 = 67003.4
DL output with Mo: L = 12.6 + 78318.9 = 78331.5
DL input+output M: L = 25.2 + 145309.7 = 145334.9

# learning a model for train pairs
2.000	
1.527	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.093	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.787	OUT ADD ^.layer_01 = ^.layer_0
0.663	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.473	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.286	OUT ADD ^.layer_00 = ^.layer_00
0.168	OUT ADD ^.layer_001 = ^.layer_01
0.158	OUT SPE ^.size = ^.size
0.154	IN  SPE ^.layer_00.shape.color = grey
0.151	IN  SPE ^.layer_0.shape.color = grey
0.148	IN  SPE ^.layer_01.shape.color = grey
0.146	OUT SPE ^.layer_0.shape.mask = Full
0.144	IN  SPE ^.color = black
0.143	OUT SPE ^.color = black
0.052	
0.052	IN  GEN ^.layer_01.shape.color = ?
0.052	IN  GEN ^.layer_0.shape.color = ?
0.052	IN  GEN ^.layer_00.shape.color = ?
0.052	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 6107.3 = 6206.7
DL output with Mo: L = 64.9 + 3895.5 = 3960.5
DL input+output M: L = 164.3 + 10002.9 = 10167.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 64.9 + 3895.5 = 3960.5
DL input+output M: L = 154.2 + 3915.5 = 4069.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _0: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _001: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,2)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
diff: 
delta: (10,3)=2 
   (67.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _0: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _001: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
  _0: a rectangle with size (4,4) and color red and mask Full at (4,7)
  _01: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
diff: 
delta: (2,3)=2  (9,1)=2  (9,2)=2  (10,1)=2  (10,2)=2 
   (225.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _0: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
  _01: a rectangle with size (6,6) and color grey and mask Border at (3,6)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _01: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _001: a rectangle with size (4,4) and color grey and mask Border at (3,7)
  _0: a rectangle with size (2,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (4,6) and color grey and mask Border at (8,3)
diff: 
delta:
   (28.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _01: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _0: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _0: a rectangle with size (2,4) and color grey and mask Full at (3,1)
  _01: a rectangle with size (1,4) and color grey and mask Full at (1,1)
diff: 
delta: (2,1)=5# (2,4)=5#
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _001: a rectangle with size (1,4) and color grey and mask Full at (1,1)
  _0: a rectangle with size (4,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (2,4) and color grey and mask Full at (3,1)
diff: 
delta: (2,4)=5#
   (67.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _0: a rectangle with size (2,4) and color grey and mask Full at (3,1)
  _01: a rectangle with size (1,4) and color grey and mask Full at (1,1)
diff: 
delta: (2,1)=5# (2,4)=5#
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,1)
  _01: a rectangle with size (2,4) and color grey and mask Full at (3,1)
diff: 
delta: (2,1)=5# (2,4)=5#
! 6 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,6) and color grey and mask Border at (8,2)
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,0)
  _01: a rectangle with size (5,4) and color grey and mask xxxx|xx.x|x..x|x..x|xxxx at (1,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask Border at (1,0)
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,2)
  _01: a rectangle with size (5,4) and color grey and mask xxxx|xx.x|x..x|x..x|xxxx at (1,7)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TEST 44d8ac46.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.6 sec (8.6 sec/task)
bits-train-error = 3895.5 bits (3895.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-298] Checking task 44f52bb0.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7706.3 = 7719.0
DL output with Mo: L = 12.6 + 936.6 = 949.2
DL input+output M: L = 25.2 + 8642.9 = 8668.1

# learning a model for train pairs
2.000	
1.427	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.012	OUT SPE ^.size = '(1, 1)
0.591	
0.587	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 3253.4 = 3292.2
DL output with Mo: L = 18.1 + 537.9 = 556.0
DL input+output M: L = 56.9 + 3791.4 = 3848.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 18.1 + 537.9 = 556.0
DL input+output M: L = 30.7 + 537.9 = 568.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
   (0.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,2)=0  (2,1)=0 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (1,0)=2  (2,1)=2 
   (0.0 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (1,0)=2  (2,1)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,1)=0  (2,1)=0 
   (0.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,1)=0  (2,1)=0 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=2  (1,2)=2 
   (0.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=2  (1,2)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (1,1)=2  (1,2)=2 
   (0.0 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (1,1)=2  (1,2)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (1,1)=2 
   (0.0 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (1,1)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (2,1)=0 
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=2  (2,0)=2 
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 537.9 bits (537.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-297] Checking task 4522001f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3098.6 = 3111.2
DL output with Mo: L = 12.6 + 24241.3 = 24253.9
DL input+output M: L = 25.2 + 27339.9 = 27365.1

# learning a model for train pairs
2.000	
1.108	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.431	OUT SPE ^.layer_0.shape.mask = xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx
0.396	IN  SPE ^.layer_00.shape.color = red
0.361	IN  SPE ^.layer_0.shape.color = green
0.340	IN  SPE ^.layer_0.shape.mask = Full
0.324	IN  SPE ^.color = black
0.309	OUT SPE ^.size = tiling(^.size, 3, 3)
0.294	OUT SPE ^.layer_0.shape.size = tiling(^.layer_0.shape.size + (2, 2), 2, 2)
0.285	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.280	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.278	OUT SPE ^.color = black
0.026	
0.020	IN  DEL ^.layer_00
0.019	IN  GEN ^.layer_0.shape.color = ?
0.018	IN  GEN ^.layer_0.shape.mask = ?
0.018	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size + (2, 2), 2, 2) and color ^.layer_0.shape.color and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color red at (?,?)
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 62.7 + 785.1 = 847.8
DL output with Mo: L = 141.7 + 0.0 = 141.7
DL input+output M: L = 204.4 + 785.1 = 989.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size + (2, 2), 2, 2) and color ^.layer_0.shape.color and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 141.7 + 0.0 = 141.7
DL input+output M: L = 180.5 + 0.0 = 180.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta: (1,1)=2 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta: (1,1)=2 
correct output grid

TRAIN 4522001f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta: (1,1)=2 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta: (1,1)=2 
correct output grid

TRAIN 4522001f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,1)
diff: 
delta: (1,1)=2 
! 64 wrong pixels (generated / expected)

TEST 4522001f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-296] Checking task 4612dd53.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23976.9 = 23989.5
DL output with Mo: L = 12.6 + 36449.1 = 36461.7
DL input+output M: L = 25.2 + 60425.9 = 60451.2

# learning a model for train pairs
2.000	
1.829	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.667	OUT ADD ^.layer_0 = ^.layer_0
1.529	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.409	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	OUT ADD ^.layer_011 = ^.layer_01
1.202	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.101	OUT ADD ^.layer_0111 = ^.layer_011
1.044	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.928	OUT ADD ^.layer_010 = ^.layer_0110
0.891	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.849	OUT ADD ^.layer_01110 = ^.layer_0111
0.829	OUT ADD ^.layer_0100 = a point with color ? at (?,?)
0.812	OUT SPE ^.size = ^.size
0.805	IN  SPE ^.layer_0.shape.color = blue
0.798	IN  SPE ^.layer_01.shape.color = blue
0.791	IN  SPE ^.layer_0110.shape.color = blue
0.784	IN  SPE ^.layer_011.shape.color = blue
0.775	OUT SPE ^.layer_01111.pos = projI(^.layer_0110.pos) + (2, 2)
0.768	IN  SPE ^.layer_0111.shape.color = blue
0.764	IN  SPE ^.layer_0110.shape.mask = Full
0.759	OUT SPE ^.layer_01.shape.color = red
0.755	OUT SPE ^.layer_01111.shape.color = red
0.750	OUT SPE ^.layer_0100.shape.color = red
0.746	OUT SPE ^.layer_0100.pos.i = ^.layer_011.pos.i
0.742	IN  SPE ^.layer_0.shape.mask = Full
0.737	IN  SPE ^.layer_011.shape.mask = Full
0.733	IN  SPE ^.layer_0111.shape.mask = Full
0.730	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.721	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.714	IN  SPE ^.layer_01110.shape.color = blue
0.707	IN  SPE ^.layer_01111.shape.color = blue
0.703	OUT SPE ^.layer_01.pos.i = ^.layer_0110.pos.i
0.700	IN  SPE ^.color = black
0.697	OUT SPE ^.layer_01111.shape.size.j = 1
0.694	OUT SPE ^.layer_01111.shape.mask = Full
0.278	
0.245	IN  DEL ^.layer_01111
0.234	IN  DEL ^.layer_01110
0.234	IN  GEN ^.layer_0111.shape.color = ?
0.234	IN  GEN ^.layer_011.shape.color = ?
0.234	IN  GEN ^.layer_0110.shape.color = ?
0.234	IN  GEN ^.layer_01.shape.color = ?
0.234	IN  GEN ^.layer_0.shape.color = ?
0.234	IN  GEN ^.layer_0111.shape.mask = ?
0.234	IN  GEN ^.layer_011.shape.mask = ?
0.233	IN  GEN ^.layer_0.shape.mask = ?
0.233	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _0100: a point with color red at (^.layer_011.pos.i,?)
  _010: ^.layer_0110
  _01: a rectangle with size (?,?) and color red and mask ? at (^.layer_0110.pos.i,?)
  _011: ^.layer_01
  _01110: ^.layer_0111
  _0111: ^.layer_011
  _01111: a rectangle with size (?,1) and color red and mask Full at projI(^.layer_0110.pos) + (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01110: a point with color blue at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01111: a point with color blue at (?,?)

DL input  with Mi: L = 197.0 + 10017.4 = 10214.4
DL output with Mo: L = 197.6 + 9596.4 = 9794.0
DL input+output M: L = 394.6 + 19613.8 = 20008.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _0100: a point with color red at (^.layer_011.pos.i,?)
  _010: ^.layer_0110
  _01: a rectangle with size (?,?) and color red and mask ? at (^.layer_0110.pos.i,?)
  _011: ^.layer_01
  _01110: ^.layer_0111
  _0111: ^.layer_011
  _01111: a rectangle with size (?,1) and color red and mask Full at projI(^.layer_0110.pos) + (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 20.0 = 159.9
DL output with Mo: L = 197.6 + 8071.5 = 8269.1
DL input+output M: L = 337.5 + 8091.5 = 8429.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
  _0110: a rectangle with size (1,5) and color blue and mask Full at (1,4)
  _011: a rectangle with size (1,5) and color blue and mask Full at (7,6)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta: (1,5)=0  (1,6)=0  (2,10)=0  (4,10)=0  (7,8)=0 
   (0.0 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _0100: a point with color red at (7,4)
  _010: a rectangle with size (1,5) and color blue and mask Full at (1,4)
  _01: a rectangle with size (1,7) and color red and mask Full at (1,3)
  _011: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
  _01110: a rectangle with size (2,1) and color blue and mask Full at (1,2)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (7,6)
  _01111: a rectangle with size (3,1) and color red and mask Full at (3,2)
diff: 
delta: (1,5)=2  (1,6)=2  (2,10)=2  (4,10)=2  (7,5)=2  (7,8)=2 
   (266.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
  _0110: a rectangle with size (1,5) and color blue and mask Full at (1,4)
  _011: a rectangle with size (1,5) and color blue and mask Full at (7,6)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta: (1,5)=0  (1,6)=0  (2,10)=0  (4,10)=0  (7,8)=0 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (7,2)
  _01: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _0110: a rectangle with size (1,2) and color blue and mask Full at (1,7)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,4)
diff: 
delta: (2,10)=0  (4,10)=0  (6,2)=1  (7,4)=0  (7,5)=0  (7,8)=0 
! 15 wrong pixels (generated / expected)

TRAIN 4612dd53.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (8,2)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _0110: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _011: a rectangle with size (5,1) and color blue and mask Full at (4,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (5,2)
diff: 
delta: (2,7)=1  (4,8)=0  (6,4)=0  (8,6)=0 
   (2.0 bits)
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (8,2)
  _0100: a point with color red at (4,8)
  _010: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _01: a rectangle with size (2,3) and color red and mask .xx|x.. at (2,4)
  _011: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _01110: a rectangle with size (2,1) and color blue and mask Full at (5,2)
  _0111: a rectangle with size (5,1) and color blue and mask Full at (4,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (4,2)
diff: 
delta: (2,7)=1  (6,4)=2  (8,6)=2  (8,8)=2 
   (200.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (8,2)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _0110: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _011: a rectangle with size (2,1) and color blue and mask Full at (4,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (5,2)
diff: 
delta: (2,7)=1  (4,8)=0  (7,4)=1  (8,6)=0 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (8,2)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _0110: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _011: a rectangle with size (5,1) and color blue and mask Full at (4,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (5,2)
diff: 
delta: (2,7)=1  (4,8)=0  (6,4)=0  (8,6)=0 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (8,2)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _0110: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _011: a rectangle with size (5,1) and color blue and mask Full at (4,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (2,7)
diff: 
delta: (4,8)=0  (5,2)=1  (6,2)=1  (6,4)=0  (8,6)=0 
! 15 wrong pixels (generated / expected)

TRAIN 4612dd53.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (7,2)
  _011: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (6,1) and color blue and mask Full at (3,2)
diff: 
delta: (3,4)=0  (3,7)=0  (5,2)=0  (5,10)=0  (7,4)=0  (7,6)=0  (7,10)=0  (10,4)=0  (10,7)=0  (10,8)=0 
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _0100: a point with color red at (3,4)
  _010: a rectangle with size (1,7) and color blue and mask Full at (7,2)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,9)
  _011: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01110: a rectangle with size (6,1) and color blue and mask Full at (3,2)
  _0111: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _01111: a rectangle with size (1,1) and color red and mask Full at (9,2)
diff: 
delta: (3,7)=2  (5,2)=2  (5,10)=2  (7,4)=2  (7,6)=2  (10,4)=2  (10,7)=2  (10,8)=2 
   (339.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (7,2)
  _011: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (6,1) and color blue and mask Full at (3,2)
diff: 
delta: (3,4)=0  (3,7)=0  (5,2)=0  (5,10)=0  (7,4)=0  (7,6)=0  (7,10)=0  (10,4)=0  (10,7)=0  (10,8)=0 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (8,2) and color blue and mask Full at (3,2)
  _01: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _0110: a rectangle with size (1,6) and color blue and mask Full at (3,5)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,7)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (10,5)
diff: 
delta: (3,7)=0  (4,3)=0  (5,2)=0  (5,3)=0  (5,10)=0  (6,3)=0  (7,5)=1  (7,10)=0  (8,3)=0  (9,2)=0  (9,3)=0  (10,9)=1 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (8,2) and color blue and mask Full at (3,2)
  _01: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _0110: a rectangle with size (1,6) and color blue and mask Full at (3,5)
  _011: a rectangle with size (1,4) and color blue and mask Full at (7,5)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (10,5)
diff: 
delta: (3,7)=0  (4,3)=0  (5,2)=0  (5,3)=0  (5,10)=0  (6,3)=0  (7,6)=0  (7,10)=0  (8,3)=0  (9,2)=0  (9,3)=0  (10,9)=1 
! 23 wrong pixels (generated / expected)

TRAIN 4612dd53.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,4)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (10,4)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (6,9)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (7,4)
diff: 
delta: (2,6)=0  (2,8)=0  (3,10)=1  (4,2)=0  (5,2)=0  (7,5)=0  (8,2)=0  (9,10)=1  (10,6)=0  (10,8)=0 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (9,1) and color blue and mask Full at (2,10)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (2,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (10,4)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (7,4)
diff: 
delta: (2,6)=0  (2,8)=0  (4,2)=0  (4,10)=0  (5,2)=0  (5,10)=0  (7,6)=1  (7,9)=1  (8,2)=0  (8,10)=0  (10,6)=0  (10,8)=0 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (9,1) and color blue and mask Full at (2,10)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (2,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (10,4)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (7,6)
diff: 
delta: (2,6)=0  (2,8)=0  (4,2)=0  (4,10)=0  (5,2)=0  (5,10)=0  (7,4)=1  (7,9)=1  (8,2)=0  (8,10)=0  (10,6)=0  (10,8)=0 
! 23 wrong pixels (generated / expected)

TEST 4612dd53.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.7 sec (60.7 sec/task)
bits-train-error = 8071.5 bits (8071.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-295] Checking task 46442a0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4449.7 = 4462.4
DL output with Mo: L = 12.6 + 16607.4 = 16620.0
DL input+output M: L = 25.2 + 21057.1 = 21082.4

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id rotate90 ] [ rotate270 rotate180 ], ^.grid)
0.500	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.465	IN  SPE ^.layer_0.shape.mask = Full
0.443	IN  SPE ^.layer_01.shape.mask = Full
0.016	
0.010	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id rotate90 ] [ rotate270 rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.2 + 1907.8 = 1974.0
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 80.1 + 1907.8 = 1987.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id rotate90 ] [ rotate270 rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (2,2) and color pink and layers
diff: 
delta: (0,0)=8  (1,1)=8 
   (0.0 bits)
data: 
8 6 6 8 
6 8 8 6 
6 8 8 6 
8 6 6 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color pink and layers
diff: 
delta: (0,0)=8  (1,1)=8 
correct output grid

TRAIN 46442a0e.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,0)=7# (0,1)=7# (1,0)=7# (1,1)=7#
   (0.0 bits)
data: 
7#7#8 8 7#7#
7#7#8 8 7#7#
8 8 8 8 8 8 
8 8 8 8 8 8 
7#7#8 8 7#7#
7#7#8 8 7#7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,0)=7# (0,1)=7# (1,0)=7# (1,1)=7#
correct output grid

TRAIN 46442a0e.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=6  (0,1)=9# (0,2)=9# (1,0)=6  (2,0)=6 
   (0.0 bits)
data: 
6 9#9#6 6 6 
6 4 4 4 4 9#
6 4 4 4 4 9#
9#4 4 4 4 6 
9#4 4 4 4 6 
6 6 6 9#9#6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=6  (0,1)=9# (0,2)=9# (1,0)=6  (2,0)=6 
correct output grid

TRAIN 46442a0e.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,1)=4  (1,0)=4  (1,1)=9# (1,2)=4  (2,0)=9# (2,2)=9#
correct output grid

TEST 46442a0e.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-294] Checking task 469497ad.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14502.3 = 14514.9
DL output with Mo: L = 12.6 + 158411.3 = 158423.9
DL input+output M: L = 25.2 + 172913.6 = 172938.8

# learning a model for train pairs
2.000	
1.638	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.293	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.033	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.807	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.685	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.572	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.525	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.481	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.120	
0.119	IN  DEL ^.layer_011
0.117	IN  DEL ^.layer_01
0.115	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 5235.2 = 5324.5
DL output with Mo: L = 138.9 + 17948.4 = 18087.2
DL input+output M: L = 228.1 + 23183.6 = 23411.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 17948.4 = 18087.2
DL input+output M: L = 151.5 + 17948.4 = 18099.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,4)=3  (1,1)=8  (1,2)=8  (1,4)=3  (2,1)=8  (2,2)=8  (2,4)=3  (3,4)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,10) and color green and mask Full at (8,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (2,2)
  _011: a rectangle with size (10,2) and color green and mask Full at (0,8)
  _0111: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,0)
  _01111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,6)
diff: 
delta: (6,1)=2  (6,6)=2  (7,0)=2  (7,7)=2 
   (352.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,4)=3  (1,1)=8  (1,2)=8  (1,4)=3  (2,1)=8  (2,2)=8  (2,4)=3  (3,4)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3 
! 62 wrong pixels (generated / expected)

TRAIN 469497ad.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,4)=7# (1,0)=4  (1,1)=4  (1,4)=7# (2,0)=4  (2,1)=4  (2,4)=6  (3,4)=6  (4,0)=7# (4,1)=7# (4,2)=6  (4,3)=6  (4,4)=6 
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (10,9) and color pink and mask ......xxx|......xxx|......xxx|......xxx|......xxx|......xxx|......xxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (5,6)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (3,0)
  _011: a rectangle with size (3,6) and color orange and mask Full at (12,0)
  _0111: a rectangle with size (5,3) and color orange and mask Full at (0,12)
  _01111: a rectangle with size (3,3) and color red and mask ..x|.x.|x.. at (0,6)
diff: 
delta: (9,6)=2  (10,7)=2  (11,8)=2 
   (434.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,4)=7# (1,0)=4  (1,1)=4  (1,4)=7# (2,0)=4  (2,1)=4  (2,4)=6  (3,4)=6  (4,0)=7# (4,1)=7# (4,2)=6  (4,3)=6  (4,4)=6 
! size mismatch, 10x10 instead of 15x15

TRAIN 469497ad.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,4)=9# (1,1)=1  (1,2)=1  (1,4)=9# (2,1)=1  (2,2)=1  (2,4)=3  (3,4)=3  (4,0)=9# (4,1)=9# (4,2)=3  (4,3)=3  (4,4)=4 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (4,4)
  _01: a rectangle with size (12,12) and color green and mask ........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|xxxxxxxx....|xxxxxxxx....|xxxxxxxx....|xxxxxxxx.... at (8,8)
  _011: a rectangle with size (4,8) and color brown and mask Full at (16,0)
  _0111: a rectangle with size (8,4) and color brown and mask Full at (0,16)
  _01111: a rectangle with size (4,4) and color yellow and mask Full at (16,16)
diff: 
delta: (0,0)=2  (0,15)=2  (1,1)=2  (1,14)=2  (2,2)=2  (2,13)=2  (3,3)=2  (3,12)=2  (12,3)=2  (12,12)=2  (13,2)=2  (13,13)=2  (14,1)=2  (14,14)=2  (15,0)=2  (15,15)=2 
   (1007.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,4)=9# (1,1)=1  (1,2)=1  (1,4)=9# (2,1)=1  (2,2)=1  (2,4)=3  (3,4)=3  (4,0)=9# (4,1)=9# (4,2)=3  (4,3)=3  (4,4)=4 
! size mismatch, 10x10 instead of 20x20

TRAIN 469497ad.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,1)=6  (0,2)=6  (0,4)=8  (1,1)=6  (1,2)=6  (1,4)=8  (2,4)=1  (3,4)=7# (4,0)=8  (4,1)=8  (4,2)=1  (4,3)=7# (4,4)=9#
! size mismatch, 10x10 instead of 25x25

TEST 469497ad.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.9 sec (58.9 sec/task)
bits-train-error = 17948.4 bits (17948.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-293] Checking task 46f33fce.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7157.1 = 7169.8
DL output with Mo: L = 12.6 + 107765.9 = 107778.5
DL input+output M: L = 25.2 + 114923.0 = 114948.2

# learning a model for train pairs
2.000	
1.720	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.555	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.391	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.226	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.142	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.057	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.971	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.885	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.796	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.786	IN  SPE ^.color = black
0.779	OUT SPE ^.size = tiling(^.size, 2, 2)
0.776	OUT SPE ^.layer_01.pos = '(0, 0) + translationSym(flipHeight, ^.layer_0, ^.layer_01)
0.773	OUT SPE ^.layer_011.pos = '(0, 0) + translationSym(rotate180, ^.layer_0, ^.layer_011)
0.769	OUT SPE ^.layer_0.pos = '(0, 0) + translationSym(flipWidth, ^.layer_0, ^.layer_01)
0.766	OUT SPE ^.layer_0111.pos = '(0, 0) + translationSym(rotate180, ^.layer_0, ^.layer_01111)
0.764	OUT SPE ^.layer_0111.shape.size.i = area(^.layer_0111.shape) + 3
0.762	OUT SPE ^.layer_011.shape.size.i = area(^.layer_011.shape) + 3
0.760	OUT SPE ^.layer_01.shape.size.i = area(^.layer_01.shape) + 3
0.758	OUT SPE ^.layer_01.shape.size.j = area(^.layer_01.shape) + 3
0.757	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape) + 3
0.755	OUT SPE ^.layer_0.shape.size.j = area(^.layer_0.shape) + 3
0.753	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.752	OUT SPE ^.layer_0111.shape.color = ^.layer_01111.shape.color
0.751	OUT SPE ^.layer_0.shape.mask = Full
0.750	OUT SPE ^.layer_01.shape.mask = Full
0.749	OUT SPE ^.layer_011.shape.mask = Full
0.748	OUT SPE ^.layer_0111.shape.mask = Full
0.747	OUT SPE ^.color = black
0.201	
0.200	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) + 3,area(^.layer_0.shape) + 3) and color ? and mask Full at '(0, 0) + translationSym(flipWidth, ^.layer_0, ^.layer_01)
  _01: a rectangle with size (area(^.layer_01.shape) + 3,area(^.layer_01.shape) + 3) and color ? and mask Full at '(0, 0) + translationSym(flipHeight, ^.layer_0, ^.layer_01)
  _011: a rectangle with size (area(^.layer_011.shape) + 3,?) and color ^.layer_011.shape.color and mask Full at '(0, 0) + translationSym(rotate180, ^.layer_0, ^.layer_011)
  _0111: a rectangle with size (area(^.layer_0111.shape) + 3,?) and color ^.layer_01111.shape.color and mask Full at '(0, 0) + translationSym(rotate180, ^.layer_0, ^.layer_01111)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 92.6 + 3921.4 = 4014.0
DL output with Mo: L = 408.6 + 19809.4 = 20218.0
DL input+output M: L = 501.2 + 23730.8 = 24232.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) + 3,area(^.layer_0.shape) + 3) and color ? and mask Full at '(0, 0) + translationSym(flipWidth, ^.layer_0, ^.layer_01)
  _01: a rectangle with size (area(^.layer_01.shape) + 3,area(^.layer_01.shape) + 3) and color ? and mask Full at '(0, 0) + translationSym(flipHeight, ^.layer_0, ^.layer_01)
  _011: a rectangle with size (area(^.layer_011.shape) + 3,?) and color ^.layer_011.shape.color and mask Full at '(0, 0) + translationSym(rotate180, ^.layer_0, ^.layer_011)
  _0111: a rectangle with size (area(^.layer_0111.shape) + 3,?) and color ^.layer_01111.shape.color and mask Full at '(0, 0) + translationSym(rotate180, ^.layer_0, ^.layer_01111)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 92.4 + 0.0 = 92.4
DL output with Mo: L = 408.6 + 19809.4 = 20218.0
DL input+output M: L = 501.1 + 19809.4 = 20310.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (5,5)
  _01111: a point with color yellow at (7,7)
diff: 
delta: (9,9)=3 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (4,4)
  _0111: a rectangle with size (4,4) and color yellow and mask Full at (12,12)
diff: 
delta: (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,11)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (16,16)=3  (16,17)=3  (16,18)=3  (16,19)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3 
   (1289.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (5,5)
  _01111: a point with color yellow at (7,7)
diff: 
delta: (9,9)=3 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (5,5)
  _01111: a point with color green at (9,9)
diff: 
delta: (7,7)=4 
! 80 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color green at (5,5)
diff: 
delta: (9,9)=3 
! 80 wrong pixels (generated / expected)

TRAIN 46f33fce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,7)
diff: 
delta: (9,9)=2 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Full at (0,4)
  _01: a rectangle with size (4,4) and color blue and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask Full at (4,4)
  _0111: a rectangle with size (4,8) and color red and mask Full at (16,12)
diff: 
delta: (12,16)=8  (12,17)=8  (12,18)=8  (12,19)=8  (13,16)=8  (13,17)=8  (13,18)=8  (13,19)=8  (14,16)=8  (14,17)=8  (14,18)=8  (14,19)=8  (15,16)=8  (15,17)=8  (15,18)=8  (15,19)=8 
   (663.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,7)
diff: 
delta: (9,9)=2 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,9)
diff: 
delta: (9,7)=2 
! 80 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color red at (9,7)
  _01111: a point with color cyan at (7,9)
diff: 
delta: (9,9)=2 
! 80 wrong pixels (generated / expected)

TRAIN 46f33fce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,1)
  _0111: a point with color blue at (9,3)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (0,4)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _011: a rectangle with size (4,8) and color blue and mask Full at (16,0)
  _0111: a rectangle with size (4,4) and color yellow and mask Full at (16,16)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,1)
  _0111: a point with color blue at (9,3)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,1)
  _0111: a point with color yellow at (9,9)
  _01111: a point with color blue at (9,3)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,3)
  _0111: a point with color blue at (9,1)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
! 64 wrong pixels (generated / expected)

TRAIN 46f33fce.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color green at (7,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color red at (9,1)
diff: 
delta:
! 120 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color green at (7,3)
  _0111: a point with color red at (9,1)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
! 120 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color yellow at (7,7)
  _0111: a point with color green at (7,3)
  _01111: a point with color red at (9,1)
diff: 
delta:
! 112 wrong pixels (generated / expected)

TEST 46f33fce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.4 sec (17.4 sec/task)
bits-train-error = 19809.4 bits (19809.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-292] Checking task 47c1f68c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24919.4 = 24932.1
DL output with Mo: L = 12.6 + 21345.8 = 21358.4
DL input+output M: L = 25.2 + 46265.3 = 46290.5

# learning a model for train pairs
2.000	
1.293	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.926	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.768	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.615	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.460	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.435	OUT SPE ^.size = ^.size - (1, 1)
0.426	IN  SPE ^.layer_0.shape.mask = +-cross
0.418	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.410	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.403	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.395	OUT SPE ^.layer_0111.shape.color = ^.layer_0.shape.color
0.389	OUT SPE ^.layer_011.pos.i = center(^.layer_0)
0.266	
0.265	IN  DEL ^.layer_01
0.265	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - (1, 1) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (center(^.layer_0),?)
  _0111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask +-cross at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 69.5 + 3059.4 = 3129.0
DL output with Mo: L = 166.9 + 5451.4 = 5618.3
DL input+output M: L = 236.4 + 8510.8 = 8747.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - (1, 1) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (center(^.layer_0),?)
  _0111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 166.9 + 5451.4 = 5618.3
DL input+output M: L = 205.7 + 5451.4 = 5657.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask +-cross at (0,0)
diff: 
delta: (1,1)=1  (2,0)=1  (2,1)=1  (3,1)=1  (3,2)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xx.|.xx at (1,0)
  _01: a rectangle with size (3,3) and color red and mask .x.|.xx|xx. at (1,7)
  _011: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (6,0)
  _0111: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (6,7)
diff: 
delta:
   (153.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask +-cross at (0,0)
diff: 
delta: (1,1)=1  (2,0)=1  (2,1)=1  (3,1)=1  (3,2)=1 
! 20 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask +-cross at (0,0)
diff: 
delta: (0,0)=3  (0,2)=3  (1,0)=3  (1,1)=3  (2,0)=3 
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,5)
  _011: a rectangle with size (3,3) and color cyan and mask x..|xx.|x.x at (5,0)
  _0111: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.x at (5,5)
diff: 
delta:
   (151.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask +-cross at (0,0)
diff: 
delta: (0,0)=3  (0,2)=3  (1,0)=3  (1,1)=3  (2,0)=3 
! 16 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color yellow and mask +-cross at (0,0)
diff: 
delta: (0,0)=2  (1,1)=2  (1,2)=2  (2,1)=2 
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,1)
  _0111: a rectangle with size (4,1) and color yellow and mask Full at (1,4)
diff: 
delta: (0,0)=4  (0,5)=4  (5,0)=4  (5,5)=4 
   (240.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color yellow and mask +-cross at (0,0)
diff: 
delta: (0,0)=2  (1,1)=2  (1,2)=2  (2,1)=2 
! 16 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,13) and color green and mask +-cross at (0,0)
diff: 
delta: (0,2)=8  (1,1)=8  (2,0)=8  (2,2)=8  (3,2)=8  (4,2)=8  (4,3)=8 
! 34 wrong pixels (generated / expected)

TEST 47c1f68c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.2 sec (58.2 sec/task)
bits-train-error = 5451.4 bits (5451.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-291] Checking task 484b58aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 679529.5 = 679542.1
DL output with Mo: L = 12.6 + 640877.0 = 640889.6
DL input+output M: L = 25.2 + 1320406.5 = 1320431.7

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.834	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.000	
0.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 566875.5 = 566914.4
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 60.0 + 566875.5 = 566935.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (29,29) and color grey and layers
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,20)=2  (1,21)=1  (1,22)=2  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,21)=2  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,18)=2  (3,19)=1  (3,20)=2  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,19)=2  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,17)=2  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,14)=2  (7,15)=1  (7,16)=2  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,13)=2  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,11)=2  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,6)=2  (15,7)=1  (15,8)=2  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,7)=2  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,5)=2  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,2)=2  (19,3)=1  (19,4)=2  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,0)=2  (21,1)=1  (21,2)=2  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,1)=2  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,0)=2  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
   (0.0 bits)
data: 
5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 
4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 
5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#
2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 
1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#
2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 
5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 
4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 
5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#
2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 
1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#
2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 
5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 
4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 
5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#
2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 
1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#
2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 
5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 
4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 
5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#
2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 
1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#
2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 
5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 
4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 
5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#
2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 5#2 1 2 3 4 
1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#6 1 2 5#4 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color grey and layers
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,20)=2  (1,21)=1  (1,22)=2  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,21)=2  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,18)=2  (3,19)=1  (3,20)=2  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,19)=2  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,17)=2  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,14)=2  (7,15)=1  (7,16)=2  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,13)=2  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,11)=2  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,6)=2  (15,7)=1  (15,8)=2  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,7)=2  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,5)=2  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,2)=2  (19,3)=1  (19,4)=2  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,0)=2  (21,1)=1  (21,2)=2  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,1)=2  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,0)=2  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
correct output grid

TRAIN 484b58aa.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (29,29) and color red and layers
diff: 
delta: (0,0)=5# (0,1)=4  (0,3)=1  (0,6)=5# (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,19)=5# (0,21)=5# (0,22)=5# (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,4)=5# (1,5)=7# (1,6)=5# (1,7)=4  (1,9)=1  (1,12)=5# (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (1,25)=5# (1,27)=5# (1,28)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,10)=5# (2,11)=7# (2,12)=5# (2,13)=4  (2,15)=1  (2,18)=5# (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=4  (3,21)=1  (3,24)=5# (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=5# (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,22)=5# (4,23)=7# (4,24)=5# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,7)=5# (5,9)=5# (5,10)=5# (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (5,28)=5# (6,0)=5# (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,13)=5# (6,15)=5# (6,16)=5# (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,0)=5# (7,1)=4  (7,3)=1  (7,6)=5# (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,19)=5# (7,21)=5# (7,22)=5# (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,4)=5# (8,5)=7# (8,6)=5# (8,7)=4  (8,9)=1  (8,12)=5# (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (8,25)=5# (8,27)=5# (8,28)=5# (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,10)=5# (9,11)=7# (9,12)=5# (9,13)=4  (9,15)=1  (9,18)=5# (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,16)=5# (10,17)=7# (10,18)=5# (10,19)=4  (10,21)=1  (10,24)=5# (10,25)=3  (10,27)=7# (10,28)=1  (11,1)=5# (11,3)=5# (11,4)=5# (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=0  (11,20)=0  (11,21)=0  (11,22)=0  (11,23)=0  (11,24)=5# (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,7)=5# (12,9)=5# (12,10)=5# (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=3  (12,25)=7# (12,26)=1  (12,28)=5# (13,0)=5# (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,15)=5# (13,16)=5# (13,17)=7# (13,18)=1  (13,19)=0  (13,20)=0  (13,21)=0  (13,22)=0  (13,23)=0  (13,25)=1  (13,27)=3  (13,28)=3  (14,0)=5# (14,1)=4  (14,3)=1  (14,6)=5# (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,19)=0  (14,20)=0  (14,21)=0  (14,22)=0  (14,23)=0  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,4)=5# (15,5)=7# (15,6)=5# (15,7)=4  (15,9)=1  (15,12)=5# (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=0  (15,20)=0  (15,21)=0  (15,22)=0  (15,23)=1  (15,25)=5# (15,27)=5# (15,28)=5# (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,10)=5# (16,11)=7# (16,12)=5# (16,13)=4  (16,15)=1  (16,18)=5# (16,19)=0  (16,20)=0  (16,21)=0  (16,22)=0  (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,16)=5# (17,17)=7# (17,18)=5# (17,19)=4  (17,21)=1  (17,24)=5# (17,25)=3  (17,27)=7# (17,28)=1  (18,1)=5# (18,3)=5# (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,22)=5# (18,23)=7# (18,24)=5# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,7)=5# (19,9)=5# (19,10)=5# (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (19,28)=5# (20,0)=5# (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,13)=5# (20,15)=5# (20,16)=5# (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,0)=5# (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,19)=5# (21,21)=5# (21,22)=5# (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,4)=5# (22,5)=7# (22,6)=5# (22,7)=4  (22,9)=1  (22,12)=5# (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (22,25)=5# (22,27)=5# (22,28)=5# (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,10)=5# (23,11)=7# (23,12)=5# (23,13)=4  (23,15)=1  (23,18)=5# (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,16)=5# (24,17)=7# (24,18)=5# (24,19)=4  (24,21)=1  (24,24)=5# (24,25)=3  (24,27)=7# (24,28)=1  (25,1)=5# (25,3)=5# (25,4)=5# (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,22)=5# (25,23)=7# (25,24)=5# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,7)=5# (26,9)=5# (26,10)=5# (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (26,28)=5# (27,0)=5# (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,13)=5# (27,15)=5# (27,16)=5# (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,0)=5# (28,1)=4  (28,3)=1  (28,6)=5# (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,17)=1  (28,19)=5# (28,21)=5# (28,22)=5# (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
   (0.0 bits)
data: 
5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 
3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#
2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 
1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 
2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 
3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#
5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 
5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 
3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#
2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 
1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 
2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 
3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#
5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 
5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 
3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#
2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 
1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 
2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 
3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#
5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 
5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 
3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#
2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 
1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 2 5#3 2 7#1 
2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#7#5#4 2 1 2 
3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 2 3 7#1 2 5#
5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 7#2 1 2 3 3 
5#4 2 1 2 2 5#3 2 7#1 2 3 6 2 6 2 1 2 5#2 5#5#7#1 2 2 4 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color red and layers
diff: 
delta: (0,0)=5# (0,1)=4  (0,3)=1  (0,6)=5# (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,19)=5# (0,21)=5# (0,22)=5# (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,4)=5# (1,5)=7# (1,6)=5# (1,7)=4  (1,9)=1  (1,12)=5# (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (1,25)=5# (1,27)=5# (1,28)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,10)=5# (2,11)=7# (2,12)=5# (2,13)=4  (2,15)=1  (2,18)=5# (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=4  (3,21)=1  (3,24)=5# (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=5# (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,22)=5# (4,23)=7# (4,24)=5# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,7)=5# (5,9)=5# (5,10)=5# (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (5,28)=5# (6,0)=5# (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,13)=5# (6,15)=5# (6,16)=5# (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,0)=5# (7,1)=4  (7,3)=1  (7,6)=5# (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,19)=5# (7,21)=5# (7,22)=5# (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,4)=5# (8,5)=7# (8,6)=5# (8,7)=4  (8,9)=1  (8,12)=5# (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (8,25)=5# (8,27)=5# (8,28)=5# (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,10)=5# (9,11)=7# (9,12)=5# (9,13)=4  (9,15)=1  (9,18)=5# (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,16)=5# (10,17)=7# (10,18)=5# (10,19)=4  (10,21)=1  (10,24)=5# (10,25)=3  (10,27)=7# (10,28)=1  (11,1)=5# (11,3)=5# (11,4)=5# (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=0  (11,20)=0  (11,21)=0  (11,22)=0  (11,23)=0  (11,24)=5# (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,7)=5# (12,9)=5# (12,10)=5# (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=3  (12,25)=7# (12,26)=1  (12,28)=5# (13,0)=5# (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,15)=5# (13,16)=5# (13,17)=7# (13,18)=1  (13,19)=0  (13,20)=0  (13,21)=0  (13,22)=0  (13,23)=0  (13,25)=1  (13,27)=3  (13,28)=3  (14,0)=5# (14,1)=4  (14,3)=1  (14,6)=5# (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,19)=0  (14,20)=0  (14,21)=0  (14,22)=0  (14,23)=0  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,4)=5# (15,5)=7# (15,6)=5# (15,7)=4  (15,9)=1  (15,12)=5# (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=0  (15,20)=0  (15,21)=0  (15,22)=0  (15,23)=1  (15,25)=5# (15,27)=5# (15,28)=5# (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,10)=5# (16,11)=7# (16,12)=5# (16,13)=4  (16,15)=1  (16,18)=5# (16,19)=0  (16,20)=0  (16,21)=0  (16,22)=0  (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,16)=5# (17,17)=7# (17,18)=5# (17,19)=4  (17,21)=1  (17,24)=5# (17,25)=3  (17,27)=7# (17,28)=1  (18,1)=5# (18,3)=5# (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,22)=5# (18,23)=7# (18,24)=5# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,7)=5# (19,9)=5# (19,10)=5# (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (19,28)=5# (20,0)=5# (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,13)=5# (20,15)=5# (20,16)=5# (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,0)=5# (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,19)=5# (21,21)=5# (21,22)=5# (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,4)=5# (22,5)=7# (22,6)=5# (22,7)=4  (22,9)=1  (22,12)=5# (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (22,25)=5# (22,27)=5# (22,28)=5# (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,10)=5# (23,11)=7# (23,12)=5# (23,13)=4  (23,15)=1  (23,18)=5# (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,16)=5# (24,17)=7# (24,18)=5# (24,19)=4  (24,21)=1  (24,24)=5# (24,25)=3  (24,27)=7# (24,28)=1  (25,1)=5# (25,3)=5# (25,4)=5# (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,22)=5# (25,23)=7# (25,24)=5# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,7)=5# (26,9)=5# (26,10)=5# (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (26,28)=5# (27,0)=5# (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,13)=5# (27,15)=5# (27,16)=5# (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,0)=5# (28,1)=4  (28,3)=1  (28,6)=5# (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,17)=1  (28,19)=5# (28,21)=5# (28,22)=5# (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
correct output grid

TRAIN 484b58aa.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (29,29) and color blue and layers
diff: 
delta: (0,1)=2  (0,3)=4  (0,5)=6  (0,7)=8  (0,9)=2  (0,11)=4  (0,13)=6  (0,15)=8  (0,17)=2  (0,19)=4  (0,21)=6  (0,23)=8  (0,25)=2  (0,27)=4  (1,0)=2  (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (1,12)=2  (1,14)=2  (1,16)=2  (1,18)=2  (1,20)=2  (1,22)=2  (1,24)=2  (1,26)=2  (1,28)=2  (2,1)=4  (2,3)=6  (2,5)=8  (2,7)=2  (2,9)=4  (2,11)=6  (2,13)=8  (2,15)=2  (2,17)=4  (2,19)=6  (2,21)=8  (2,23)=2  (2,25)=4  (2,27)=6  (3,0)=2  (3,2)=2  (3,4)=2  (3,6)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,14)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,22)=2  (3,24)=2  (3,26)=2  (3,28)=2  (4,1)=6  (4,3)=8  (4,5)=2  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,13)=2  (4,15)=4  (4,17)=6  (4,19)=8  (4,21)=2  (4,23)=4  (4,25)=6  (4,27)=8  (5,0)=2  (5,2)=2  (5,4)=2  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (5,14)=2  (5,16)=2  (5,18)=2  (5,20)=2  (5,22)=2  (5,24)=2  (5,26)=2  (5,28)=2  (6,1)=8  (6,3)=2  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,19)=2  (6,21)=4  (6,23)=6  (6,25)=8  (6,27)=2  (7,0)=2  (7,2)=2  (7,4)=2  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (7,14)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,22)=2  (7,24)=2  (7,26)=2  (7,28)=2  (8,1)=2  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,17)=2  (8,19)=4  (8,21)=6  (8,23)=8  (8,25)=2  (8,27)=4  (9,0)=2  (9,2)=2  (9,4)=2  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (9,14)=2  (9,16)=2  (9,18)=2  (9,20)=2  (9,22)=2  (9,24)=2  (9,26)=2  (9,28)=2  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,15)=2  (10,17)=4  (10,19)=6  (10,21)=8  (10,23)=2  (10,25)=4  (10,27)=6  (11,0)=2  (11,2)=2  (11,4)=2  (11,6)=2  (11,8)=2  (11,10)=2  (11,12)=2  (11,14)=2  (11,16)=2  (11,18)=2  (11,20)=2  (11,22)=2  (11,24)=2  (11,26)=2  (11,28)=2  (12,1)=6  (12,3)=8  (12,5)=2  (12,7)=4  (12,9)=6  (12,11)=8  (12,13)=2  (12,15)=4  (12,17)=6  (12,19)=8  (12,21)=2  (12,23)=4  (12,25)=6  (12,27)=8  (13,0)=2  (13,2)=2  (13,4)=2  (13,6)=2  (13,8)=2  (13,10)=2  (13,12)=2  (13,14)=2  (13,16)=2  (13,18)=2  (13,20)=2  (13,22)=2  (13,24)=2  (13,26)=2  (13,28)=2  (14,1)=8  (14,3)=2  (14,5)=4  (14,7)=6  (14,9)=8  (14,11)=2  (14,13)=4  (14,15)=6  (14,17)=8  (14,19)=2  (14,21)=4  (14,23)=6  (14,25)=8  (14,27)=2  (15,0)=2  (15,2)=2  (15,4)=2  (15,6)=2  (15,8)=2  (15,10)=2  (15,12)=2  (15,14)=2  (15,16)=2  (15,18)=2  (15,20)=2  (15,22)=2  (15,24)=2  (15,26)=2  (15,28)=2  (16,1)=2  (16,3)=4  (16,5)=6  (16,7)=8  (16,9)=2  (16,11)=4  (16,13)=6  (16,15)=8  (16,17)=2  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,0)=2  (17,2)=2  (17,4)=2  (17,6)=2  (17,8)=2  (17,10)=2  (17,12)=2  (17,14)=2  (17,16)=2  (17,18)=2  (17,20)=2  (17,22)=2  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (17,28)=2  (18,1)=4  (18,3)=6  (18,5)=8  (18,7)=2  (18,9)=4  (18,11)=6  (18,13)=8  (18,15)=2  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,0)=2  (19,2)=2  (19,4)=2  (19,6)=2  (19,8)=2  (19,10)=2  (19,12)=2  (19,14)=2  (19,16)=2  (19,18)=2  (19,20)=2  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (19,28)=2  (20,1)=6  (20,3)=8  (20,5)=2  (20,7)=4  (20,9)=6  (20,11)=8  (20,13)=2  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (21,0)=2  (21,2)=2  (21,4)=2  (21,6)=2  (21,8)=2  (21,10)=2  (21,12)=2  (21,14)=2  (21,16)=2  (21,18)=2  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (21,28)=2  (22,1)=8  (22,3)=2  (22,5)=4  (22,7)=6  (22,9)=8  (22,11)=2  (22,13)=4  (22,15)=6  (22,17)=8  (22,19)=2  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (23,0)=2  (23,2)=2  (23,4)=2  (23,6)=2  (23,8)=2  (23,10)=2  (23,12)=2  (23,14)=2  (23,16)=2  (23,18)=2  (23,20)=2  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (23,28)=2  (24,1)=2  (24,3)=4  (24,5)=6  (24,7)=8  (24,9)=2  (24,11)=4  (24,13)=6  (24,15)=8  (24,17)=2  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (25,0)=2  (25,2)=2  (25,4)=2  (25,6)=2  (25,8)=2  (25,10)=2  (25,12)=2  (25,14)=2  (25,16)=2  (25,18)=2  (25,20)=2  (25,22)=2  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (25,28)=2  (26,1)=4  (26,3)=6  (26,5)=8  (26,7)=2  (26,9)=4  (26,11)=6  (26,13)=8  (26,15)=2  (26,17)=4  (26,19)=6  (26,21)=8  (26,23)=2  (26,25)=4  (26,27)=6  (27,0)=2  (27,2)=2  (27,4)=2  (27,6)=2  (27,8)=2  (27,10)=2  (27,12)=2  (27,14)=2  (27,16)=2  (27,18)=2  (27,20)=2  (27,22)=2  (27,24)=2  (27,26)=2  (27,28)=2  (28,1)=6  (28,3)=8  (28,5)=2  (28,7)=4  (28,9)=6  (28,11)=8  (28,13)=2  (28,15)=4  (28,17)=6  (28,19)=8  (28,21)=2  (28,23)=4  (28,25)=6  (28,27)=8 
   (0.0 bits)
data: 
1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 
2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 
1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 2 1 4 1 6 1 8 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color blue and layers
diff: 
delta: (0,1)=2  (0,3)=4  (0,5)=6  (0,7)=8  (0,9)=2  (0,11)=4  (0,13)=6  (0,15)=8  (0,17)=2  (0,19)=4  (0,21)=6  (0,23)=8  (0,25)=2  (0,27)=4  (1,0)=2  (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (1,12)=2  (1,14)=2  (1,16)=2  (1,18)=2  (1,20)=2  (1,22)=2  (1,24)=2  (1,26)=2  (1,28)=2  (2,1)=4  (2,3)=6  (2,5)=8  (2,7)=2  (2,9)=4  (2,11)=6  (2,13)=8  (2,15)=2  (2,17)=4  (2,19)=6  (2,21)=8  (2,23)=2  (2,25)=4  (2,27)=6  (3,0)=2  (3,2)=2  (3,4)=2  (3,6)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,14)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,22)=2  (3,24)=2  (3,26)=2  (3,28)=2  (4,1)=6  (4,3)=8  (4,5)=2  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,13)=2  (4,15)=4  (4,17)=6  (4,19)=8  (4,21)=2  (4,23)=4  (4,25)=6  (4,27)=8  (5,0)=2  (5,2)=2  (5,4)=2  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (5,14)=2  (5,16)=2  (5,18)=2  (5,20)=2  (5,22)=2  (5,24)=2  (5,26)=2  (5,28)=2  (6,1)=8  (6,3)=2  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,19)=2  (6,21)=4  (6,23)=6  (6,25)=8  (6,27)=2  (7,0)=2  (7,2)=2  (7,4)=2  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (7,14)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,22)=2  (7,24)=2  (7,26)=2  (7,28)=2  (8,1)=2  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,17)=2  (8,19)=4  (8,21)=6  (8,23)=8  (8,25)=2  (8,27)=4  (9,0)=2  (9,2)=2  (9,4)=2  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (9,14)=2  (9,16)=2  (9,18)=2  (9,20)=2  (9,22)=2  (9,24)=2  (9,26)=2  (9,28)=2  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,15)=2  (10,17)=4  (10,19)=6  (10,21)=8  (10,23)=2  (10,25)=4  (10,27)=6  (11,0)=2  (11,2)=2  (11,4)=2  (11,6)=2  (11,8)=2  (11,10)=2  (11,12)=2  (11,14)=2  (11,16)=2  (11,18)=2  (11,20)=2  (11,22)=2  (11,24)=2  (11,26)=2  (11,28)=2  (12,1)=6  (12,3)=8  (12,5)=2  (12,7)=4  (12,9)=6  (12,11)=8  (12,13)=2  (12,15)=4  (12,17)=6  (12,19)=8  (12,21)=2  (12,23)=4  (12,25)=6  (12,27)=8  (13,0)=2  (13,2)=2  (13,4)=2  (13,6)=2  (13,8)=2  (13,10)=2  (13,12)=2  (13,14)=2  (13,16)=2  (13,18)=2  (13,20)=2  (13,22)=2  (13,24)=2  (13,26)=2  (13,28)=2  (14,1)=8  (14,3)=2  (14,5)=4  (14,7)=6  (14,9)=8  (14,11)=2  (14,13)=4  (14,15)=6  (14,17)=8  (14,19)=2  (14,21)=4  (14,23)=6  (14,25)=8  (14,27)=2  (15,0)=2  (15,2)=2  (15,4)=2  (15,6)=2  (15,8)=2  (15,10)=2  (15,12)=2  (15,14)=2  (15,16)=2  (15,18)=2  (15,20)=2  (15,22)=2  (15,24)=2  (15,26)=2  (15,28)=2  (16,1)=2  (16,3)=4  (16,5)=6  (16,7)=8  (16,9)=2  (16,11)=4  (16,13)=6  (16,15)=8  (16,17)=2  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,0)=2  (17,2)=2  (17,4)=2  (17,6)=2  (17,8)=2  (17,10)=2  (17,12)=2  (17,14)=2  (17,16)=2  (17,18)=2  (17,20)=2  (17,22)=2  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (17,28)=2  (18,1)=4  (18,3)=6  (18,5)=8  (18,7)=2  (18,9)=4  (18,11)=6  (18,13)=8  (18,15)=2  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,0)=2  (19,2)=2  (19,4)=2  (19,6)=2  (19,8)=2  (19,10)=2  (19,12)=2  (19,14)=2  (19,16)=2  (19,18)=2  (19,20)=2  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (19,28)=2  (20,1)=6  (20,3)=8  (20,5)=2  (20,7)=4  (20,9)=6  (20,11)=8  (20,13)=2  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (21,0)=2  (21,2)=2  (21,4)=2  (21,6)=2  (21,8)=2  (21,10)=2  (21,12)=2  (21,14)=2  (21,16)=2  (21,18)=2  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (21,28)=2  (22,1)=8  (22,3)=2  (22,5)=4  (22,7)=6  (22,9)=8  (22,11)=2  (22,13)=4  (22,15)=6  (22,17)=8  (22,19)=2  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (23,0)=2  (23,2)=2  (23,4)=2  (23,6)=2  (23,8)=2  (23,10)=2  (23,12)=2  (23,14)=2  (23,16)=2  (23,18)=2  (23,20)=2  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (23,28)=2  (24,1)=2  (24,3)=4  (24,5)=6  (24,7)=8  (24,9)=2  (24,11)=4  (24,13)=6  (24,15)=8  (24,17)=2  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (25,0)=2  (25,2)=2  (25,4)=2  (25,6)=2  (25,8)=2  (25,10)=2  (25,12)=2  (25,14)=2  (25,16)=2  (25,18)=2  (25,20)=2  (25,22)=2  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (25,28)=2  (26,1)=4  (26,3)=6  (26,5)=8  (26,7)=2  (26,9)=4  (26,11)=6  (26,13)=8  (26,15)=2  (26,17)=4  (26,19)=6  (26,21)=8  (26,23)=2  (26,25)=4  (26,27)=6  (27,0)=2  (27,2)=2  (27,4)=2  (27,6)=2  (27,8)=2  (27,10)=2  (27,12)=2  (27,14)=2  (27,16)=2  (27,18)=2  (27,20)=2  (27,22)=2  (27,24)=2  (27,26)=2  (27,28)=2  (28,1)=6  (28,3)=8  (28,5)=2  (28,7)=4  (28,9)=6  (28,11)=8  (28,13)=2  (28,15)=4  (28,17)=6  (28,19)=8  (28,21)=2  (28,23)=4  (28,25)=6  (28,27)=8 
correct output grid

TRAIN 484b58aa.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color blue and layers
diff: 
delta: (0,0)=8  (0,2)=2  (0,3)=6  (0,5)=2  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,11)=2  (0,12)=5# (0,14)=2  (0,15)=9# (0,17)=2  (0,18)=8  (0,20)=2  (0,21)=6  (0,23)=2  (0,24)=2  (0,26)=2  (0,27)=3  (1,1)=8  (1,2)=2  (1,4)=5# (1,5)=9# (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=8  (1,11)=9# (1,13)=5# (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=9# (1,19)=8  (1,20)=2  (1,22)=5# (1,23)=9# (1,25)=2  (1,26)=2  (1,28)=8  (2,0)=5# (2,1)=3  (2,3)=8  (2,4)=2  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=8  (2,12)=8  (2,13)=9# (2,14)=0  (2,15)=0  (2,16)=0  (2,18)=5# (2,19)=3  (2,21)=8  (2,22)=2  (2,24)=2  (2,25)=6  (2,27)=5# (2,28)=8  (3,0)=5# (3,2)=2  (3,3)=9# (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=2  (3,12)=2  (3,14)=0  (3,15)=0  (3,16)=0  (3,17)=2  (3,18)=5# (3,20)=2  (3,21)=9# (3,23)=2  (3,24)=8  (3,26)=2  (3,27)=6  (4,1)=5# (4,2)=2  (4,4)=2  (4,5)=9# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=5# (4,11)=9# (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=9# (4,19)=5# (4,20)=2  (4,22)=2  (4,23)=9# (4,25)=8  (4,26)=2  (4,28)=5# (5,0)=8  (5,1)=9# (5,3)=2  (5,4)=5# (5,6)=5# (5,7)=3  (5,9)=8  (5,10)=2  (5,12)=2  (5,13)=6  (5,14)=0  (5,15)=0  (5,16)=0  (5,18)=8  (5,19)=9# (5,21)=2  (5,22)=5# (5,24)=5# (5,25)=3  (5,27)=8  (5,28)=2  (6,0)=2  (6,2)=2  (6,3)=3  (6,5)=2  (6,6)=5# (6,8)=2  (6,9)=9# (6,11)=2  (6,12)=8  (6,14)=0  (6,15)=0  (6,16)=0  (6,17)=2  (6,18)=2  (6,20)=2  (6,21)=3  (6,23)=2  (6,24)=5# (6,26)=2  (6,27)=9# (7,1)=2  (7,2)=2  (7,4)=8  (7,5)=9# (7,7)=5# (7,8)=2  (7,10)=2  (7,11)=9# (7,13)=8  (7,14)=0  (7,15)=0  (7,16)=0  (7,17)=9# (7,19)=2  (7,20)=2  (7,22)=8  (7,23)=9# (7,25)=5# (7,26)=2  (7,28)=2  (8,0)=2  (8,1)=6  (8,3)=5# (8,4)=8  (8,6)=8  (8,7)=9# (8,9)=2  (8,10)=5# (8,12)=5# (8,13)=3  (8,15)=8  (8,16)=2  (8,18)=2  (8,19)=6  (8,21)=5# (8,22)=8  (8,24)=8  (8,25)=9# (8,27)=2  (8,28)=5# (9,0)=8  (9,2)=2  (9,3)=6  (9,5)=2  (9,6)=2  (9,8)=2  (9,9)=3  (9,11)=2  (9,12)=5# (9,14)=2  (9,15)=9# (9,17)=2  (9,18)=8  (9,20)=2  (9,21)=6  (9,23)=2  (9,24)=2  (9,26)=2  (9,27)=3  (10,1)=8  (10,2)=2  (10,4)=5# (10,5)=9# (10,7)=2  (10,8)=2  (10,10)=8  (10,11)=9# (10,13)=5# (10,14)=2  (10,16)=2  (10,17)=9# (10,19)=8  (10,20)=2  (10,22)=5# (10,23)=9# (10,25)=2  (10,26)=2  (10,28)=8  (11,0)=5# (11,1)=3  (11,3)=8  (11,4)=2  (11,6)=2  (11,7)=6  (11,9)=5# (11,10)=8  (11,12)=8  (11,13)=9# (11,15)=2  (11,16)=5# (11,18)=5# (11,19)=3  (11,21)=8  (11,22)=2  (11,24)=2  (11,25)=6  (11,27)=5# (11,28)=8  (12,0)=5# (12,2)=0  (12,3)=0  (12,5)=2  (12,6)=8  (12,8)=2  (12,9)=6  (12,11)=2  (12,12)=2  (12,13)=0  (12,14)=0  (12,15)=0  (12,17)=2  (12,18)=5# (12,20)=2  (12,21)=9# (12,23)=2  (12,24)=8  (12,26)=2  (12,27)=6  (13,1)=5# (13,2)=0  (13,3)=0  (13,4)=2  (13,5)=9# (13,7)=8  (13,8)=2  (13,10)=5# (13,11)=9# (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=8  (13,17)=9# (13,19)=5# (13,20)=2  (13,22)=2  (13,23)=9# (13,25)=8  (13,26)=2  (13,28)=5# (14,0)=8  (14,1)=9# (14,2)=0  (14,3)=0  (14,4)=5# (14,6)=5# (14,7)=3  (14,9)=8  (14,10)=2  (14,12)=2  (14,13)=6  (14,15)=5# (14,16)=8  (14,18)=8  (14,19)=9# (14,21)=2  (14,22)=5# (14,24)=5# (14,25)=3  (14,27)=8  (14,28)=2  (15,0)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=2  (15,6)=5# (15,8)=2  (15,9)=9# (15,11)=2  (15,12)=8  (15,14)=2  (15,15)=6  (15,17)=2  (15,18)=2  (15,20)=2  (15,21)=3  (15,23)=2  (15,24)=5# (15,26)=2  (15,27)=9# (16,1)=2  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=9# (16,7)=5# (16,8)=2  (16,10)=2  (16,11)=9# (16,13)=8  (16,14)=2  (16,16)=5# (16,17)=9# (16,19)=2  (16,20)=2  (16,22)=8  (16,23)=9# (16,25)=5# (16,26)=2  (16,28)=2  (17,0)=2  (17,1)=6  (17,3)=0  (17,4)=0  (17,6)=8  (17,7)=9# (17,9)=2  (17,10)=5# (17,12)=5# (17,13)=3  (17,15)=8  (17,16)=2  (17,18)=2  (17,19)=6  (17,21)=5# (17,22)=8  (17,24)=8  (17,25)=9# (17,27)=2  (17,28)=5# (18,0)=8  (18,2)=2  (18,3)=0  (18,4)=0  (18,5)=2  (18,6)=2  (18,8)=2  (18,9)=3  (18,11)=2  (18,12)=5# (18,14)=2  (18,15)=9# (18,17)=2  (18,18)=8  (18,20)=2  (18,21)=6  (18,23)=2  (18,24)=2  (18,26)=2  (18,27)=3  (19,1)=8  (19,2)=2  (19,4)=5# (19,5)=9# (19,7)=2  (19,8)=2  (19,10)=8  (19,11)=9# (19,13)=5# (19,14)=2  (19,16)=2  (19,17)=9# (19,19)=8  (19,20)=2  (19,22)=5# (19,23)=9# (19,25)=2  (19,26)=2  (19,28)=8  (20,0)=5# (20,1)=3  (20,3)=8  (20,4)=2  (20,6)=2  (20,7)=6  (20,9)=5# (20,10)=8  (20,12)=8  (20,13)=9# (20,15)=2  (20,16)=5# (20,18)=5# (20,19)=3  (20,21)=8  (20,22)=2  (20,24)=2  (20,25)=6  (20,27)=5# (20,28)=8  (21,0)=5# (21,2)=2  (21,3)=9# (21,5)=2  (21,6)=8  (21,8)=2  (21,9)=6  (21,11)=2  (21,12)=2  (21,14)=2  (21,15)=3  (21,17)=2  (21,18)=5# (21,20)=2  (21,21)=9# (21,23)=2  (21,24)=8  (21,26)=2  (21,27)=6  (22,1)=5# (22,2)=2  (22,4)=2  (22,5)=9# (22,7)=8  (22,8)=2  (22,10)=5# (22,11)=9# (22,13)=2  (22,14)=2  (22,16)=8  (22,17)=9# (22,19)=5# (22,20)=2  (22,22)=2  (22,23)=9# (22,25)=8  (22,26)=2  (22,28)=5# (23,0)=8  (23,1)=9# (23,3)=2  (23,4)=5# (23,6)=5# (23,7)=3  (23,9)=8  (23,10)=2  (23,12)=2  (23,13)=6  (23,15)=5# (23,16)=8  (23,18)=8  (23,19)=9# (23,21)=2  (23,22)=5# (23,24)=5# (23,25)=3  (23,27)=8  (23,28)=2  (24,0)=2  (24,2)=2  (24,3)=3  (24,5)=2  (24,6)=5# (24,8)=2  (24,9)=9# (24,11)=2  (24,12)=8  (24,14)=2  (24,15)=6  (24,17)=2  (24,18)=2  (24,20)=2  (24,21)=3  (24,23)=2  (24,24)=5# (24,26)=2  (24,27)=9# (25,1)=2  (25,2)=2  (25,4)=8  (25,5)=9# (25,7)=5# (25,8)=2  (25,10)=2  (25,11)=9# (25,13)=8  (25,14)=2  (25,16)=5# (25,17)=9# (25,19)=2  (25,20)=2  (25,22)=8  (25,23)=9# (25,25)=5# (25,26)=2  (25,28)=2  (26,0)=2  (26,1)=6  (26,3)=5# (26,4)=8  (26,6)=8  (26,7)=9# (26,9)=2  (26,10)=5# (26,12)=5# (26,13)=3  (26,15)=8  (26,16)=2  (26,18)=2  (26,19)=6  (26,21)=5# (26,22)=8  (26,24)=8  (26,25)=9# (26,27)=2  (26,28)=5# (27,0)=8  (27,2)=2  (27,3)=6  (27,5)=2  (27,6)=2  (27,8)=2  (27,9)=3  (27,11)=2  (27,12)=5# (27,14)=2  (27,15)=9# (27,17)=2  (27,18)=8  (27,20)=2  (27,21)=6  (27,23)=2  (27,24)=2  (27,26)=2  (27,27)=3  (28,1)=8  (28,2)=2  (28,4)=5# (28,5)=9# (28,7)=2  (28,8)=2  (28,10)=8  (28,11)=9# (28,13)=5# (28,14)=2  (28,16)=2  (28,17)=9# (28,19)=8  (28,20)=2  (28,22)=5# (28,23)=9# (28,25)=2  (28,26)=2  (28,28)=8 
correct output grid

TEST 484b58aa.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 17.6 sec (17.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-290] Checking task 48d8fb45.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15773.0 = 15785.6
DL output with Mo: L = 12.6 + 4434.5 = 4447.1
DL input+output M: L = 25.2 + 20207.5 = 20232.8

# learning a model for train pairs
2.000	
1.391	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.073	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.800	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.575	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.470	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	OUT SPE ^.size = ^.layer_0.shape.size
0.331	OUT SPE ^.layer_0.pos = '(0, 0)
0.314	OUT SPE ^.color = black
0.309	IN  SPE ^.color = black
0.015	
0.014	IN  DEL ^.layer_011
0.014	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 4640.1 = 4729.5
DL output with Mo: L = 43.1 + 0.0 = 43.1
DL input+output M: L = 132.5 + 4640.1 = 4772.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 43.1 + 0.0 = 43.1
DL input+output M: L = 107.4 + 0.0 = 107.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
diff: 
delta: (1,8)=1  (1,9)=1  (2,3)=5# (2,7)=1  (2,8)=1  (3,8)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
diff: 
delta: (1,8)=1  (1,9)=1  (2,3)=5# (2,7)=1  (2,8)=1  (3,8)=1 
correct output grid

TRAIN 48d8fb45.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
diff: 
delta: (1,7)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
diff: 
delta: (1,7)=5#
correct output grid

TRAIN 48d8fb45.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _01: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
diff: 
delta: (4,7)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _01: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
diff: 
delta: (4,7)=5#
correct output grid

TRAIN 48d8fb45.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|.xx at (6,5)
  _01: a rectangle with size (3,3) and color green and mask .x.|xx.|.xx at (1,5)
diff: 
delta: (0,6)=5# (4,2)=3  (5,1)=3  (5,2)=3  (6,2)=3 
correct output grid

TEST 48d8fb45.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-289] Checking task 4938f0c2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14034.5 = 14047.1
DL output with Mo: L = 12.6 + 39574.5 = 39587.1
DL input+output M: L = 25.2 + 53609.1 = 53634.3

# learning a model for train pairs
2.000	
1.523	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.258	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.053	OUT ADD ^.layer_0 = ^.layer_0
0.885	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.547	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.429	OUT ADD ^.layer_010 = ^.layer_01
0.401	OUT SPE ^.layer_01.shape = applySym(flipWidth, ^.layer_0.shape)
0.374	OUT SPE ^.layer_011.shape = applySym(flipHeight, ^.layer_0.shape)
0.347	OUT SPE ^.layer_0111.shape = applySym(rotate180, ^.layer_0.shape)
0.330	OUT SPE ^.size = ^.size
0.318	IN  SPE ^.layer_0.shape.color = red
0.306	IN  SPE ^.layer_01.shape.color = green
0.297	OUT SPE ^.layer_0111.pos = ^.layer_01.pos + (2, 2)
0.289	OUT SPE ^.layer_01.pos = corner(^.layer_0.pos, ^.layer_01.pos) + (0, 2)
0.280	OUT SPE ^.layer_011.pos = corner(^.layer_01.pos, ^.layer_0.pos) + (2, 0)
0.273	IN  SPE ^.layer_01.shape.mask = Full
0.268	IN  SPE ^.color = black
0.266	OUT SPE ^.color = black
0.049	
0.049	IN  GEN ^.layer_01.shape.color = ?
0.049	IN  GEN ^.layer_0.shape.color = ?
0.049	IN  GEN ^.layer_01.shape.mask = ?
0.049	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: applySym(flipWidth, ^.layer_0.shape) at corner(^.layer_0.pos, ^.layer_01.pos) + (0, 2)
  _011: applySym(flipHeight, ^.layer_0.shape) at corner(^.layer_01.pos, ^.layer_0.pos) + (2, 0)
  _0111: applySym(rotate180, ^.layer_0.shape) at ^.layer_01.pos + (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 72.0 + 3042.2 = 3114.2
DL output with Mo: L = 185.0 + 1563.8 = 1748.8
DL input+output M: L = 257.0 + 4606.0 = 4862.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: applySym(flipWidth, ^.layer_0.shape) at corner(^.layer_0.pos, ^.layer_01.pos) + (0, 2)
  _011: applySym(flipHeight, ^.layer_0.shape) at corner(^.layer_01.pos, ^.layer_0.pos) + (2, 0)
  _0111: applySym(rotate180, ^.layer_0.shape) at ^.layer_01.pos + (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 185.0 + 1563.8 = 1748.8
DL input+output M: L = 249.2 + 1563.8 = 1813.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (7,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _010: a rectangle with size (2,2) and color green and mask Full at (7,9)
  _01: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,11)
  _011: a rectangle with size (4,4) and color red and mask xxxx|x..x|x..x|x..x at (9,5)
  _0111: a rectangle with size (4,4) and color red and mask xxxx|x..x|x..x|x..x at (9,11)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (7,9)
diff: 
delta:
correct output grid

TRAIN 4938f0c2.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _010: a rectangle with size (2,2) and color green and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color red and mask .xx|x.x|xx. at (0,6)
  _011: a rectangle with size (3,3) and color red and mask .xx|x.x|xx. at (5,1)
  _0111: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (5,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,4)
diff: 
delta:
correct output grid

TRAIN 4938f0c2.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (4,5)
diff: 
delta: (1,4)=2 
   (0.0 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _010: a rectangle with size (2,2) and color green and mask Full at (4,5)
  _01: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
  _011: a rectangle with size (3,3) and color red and mask xxx|x..|x.. at (6,2)
  _0111: a rectangle with size (3,3) and color red and mask xxx|..x|..x at (6,7)
diff: 
delta: (1,4)=2  (1,7)=2  (8,4)=2  (8,7)=2 
   (156.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (4,5)
diff: 
delta: (1,4)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,5)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
diff: 
delta: (1,4)=2 
! 23 wrong pixels (generated / expected)

TRAIN 4938f0c2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|.x..|..x.|..xx at (2,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,6)
diff: 
delta:
correct output grid

TEST 4938f0c2.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 11.8 sec (11.8 sec/task)
bits-train-error = 1563.8 bits (1563.8 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-288] Checking task 496994bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7337.5 = 7350.1
DL output with Mo: L = 12.6 + 14183.5 = 14196.1
DL input+output M: L = 25.2 + 21521.0 = 21546.3

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = closeSym(flipHeight; flipWidth; , black, ^.grid)
0.546	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.226	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.211	IN  SPE ^.layer_0.shape.color = red
0.203	IN  SPE ^.layer_0.shape.mask = Full
0.194	IN  SPE ^.layer_01.shape.mask = Full
0.187	IN  SPE ^.color = black
0.011	
0.007	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_01
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; flipWidth; , black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 69.7 + 1295.6 = 1365.2
DL output with Mo: L = 17.5 + 0.0 = 17.5
DL input+output M: L = 87.2 + 1295.6 = 1382.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; flipWidth; , black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 17.5 + 0.0 = 17.5
DL input+output M: L = 30.1 + 0.0 = 30.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2  (2,0)=3  (2,1)=3  (2,2)=3 
   (0.0 bits)
data: 
2 2 2 
2 2 2 
3 3 3 
0 0 0 
0 0 0 
0 0 0 
0 0 0 
3 3 3 
2 2 2 
2 2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2  (2,0)=3  (2,1)=3  (2,2)=3 
correct output grid

TRAIN 496994bd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,5) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8 
   (0.0 bits)
data: 
2 2 2 2 2 
8 8 8 8 8 
0 0 0 0 0 
0 0 0 0 0 
0 0 0 0 0 
0 0 0 0 0 
0 0 0 0 0 
0 0 0 0 0 
8 8 8 8 8 
2 2 2 2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8 
correct output grid

TRAIN 496994bd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (1,0)=5# (1,1)=5# (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (2,0)=5# (2,1)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5#
correct output grid

TEST 496994bd.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-287] Checking task 49d1d64f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4752.2 = 4764.8
DL output with Mo: L = 12.6 + 15557.3 = 15569.9
DL input+output M: L = 25.2 + 20309.6 = 20334.8

# learning a model for train pairs
2.000	
1.848	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.714	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.586	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.456	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.322	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.199	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.118	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.096	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	OUT SPE ^.size = ^.size + (2, 2)
1.048	OUT SPE ^.layer_0.shape.size = '(2, 2)
1.028	OUT SPE ^.layer_01.shape.size = '(2, 2)
1.009	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.990	OUT SPE ^.layer_0111.pos = ^.layer_011.pos * '2
0.980	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
0.970	OUT SPE ^.layer_0.pos = projJ(^.layer_0.pos) * '3
0.962	OUT SPE ^.layer_010.pos.i = '0
0.955	OUT SPE ^.layer_011.pos.i = ^.layer_01.pos.j + 1
0.948	OUT SPE ^.layer_011.shape.size.i = ^.size.i - 1
0.942	OUT SPE ^.layer_01111.shape.size.i = ^.size.i - 1
0.935	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.i * '2
0.928	OUT SPE ^.layer_0111.shape.size.j = ^.size.i - 1
0.334	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size + (2, 2) and color ? and layers
  _0: a rectangle with size '(2, 2) and color ? and mask ? at projJ(^.layer_0.pos) * '3
  _010: a point with color ? at ('0,?)
  _01: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _011: a rectangle with size (^.size.i - 1,?) and color ? and mask ? at (^.layer_01.pos.j + 1,^.layer_0.pos.i * '2)
  _0111: a rectangle with size (?,^.size.i - 1) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos * '2
  _01111: a rectangle with size (^.size.i - 1,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 2865.0 = 2926.4
DL output with Mo: L = 341.5 + 4552.6 = 4894.0
DL input+output M: L = 402.9 + 7417.5 = 7820.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size + (2, 2) and color ? and layers
  _0: a rectangle with size '(2, 2) and color ? and mask ? at projJ(^.layer_0.pos) * '3
  _010: a point with color ? at ('0,?)
  _01: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _011: a rectangle with size (^.size.i - 1,?) and color ? and mask ? at (^.layer_01.pos.j + 1,^.layer_0.pos.i * '2)
  _0111: a rectangle with size (?,^.size.i - 1) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos * '2
  _01111: a rectangle with size (^.size.i - 1,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 31.7 = 93.1
DL output with Mo: L = 341.5 + 4552.6 = 4894.0
DL input+output M: L = 402.9 + 4584.3 = 4987.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (2,2) and color blue and layers
  _0: a point with color green at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color cyan at (1,1)
diff: 
delta:
   (3.2 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _010: a point with color red at (0,2)
  _01: a rectangle with size (2,2) and color green and mask xx|.x at (2,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (2,2)
  _01111: a rectangle with size (1,2) and color red and mask Full at (1,2)
diff: 
delta:
   (95.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color blue and layers
  _0: a point with color red at (0,1)
  _01: a point with color green at (1,0)
  _011: a point with color cyan at (1,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color blue and layers
  _0: a point with color red at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color green at (1,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,2) and color blue and layers
  _0: a point with color green at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color cyan at (1,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,5) and color cyan and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _010: a point with color black at (0,4)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color black and mask Full at (3,0)
  _0111: a rectangle with size (2,1) and color green and mask Full at (2,2)
  _01111: a rectangle with size (1,1) and color black and mask Full at (3,4)
diff: 
delta: (0,0)=0 
   (125.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color green at (1,1)
  _011: a point with color yellow at (0,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,3) and color cyan and layers
  _0: a point with color yellow at (0,2)
  _01: a point with color blue at (0,0)
  _011: a point with color green at (1,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color cyan at (1,0)
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
   (0.0 bits)
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (0,3)
  _010: a point with color black at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (2,2) and color green and mask Full at (3,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (0,4)=0  (2,2)=0  (4,0)=0  (4,4)=0 
   (234.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color cyan at (1,0)
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color black at (1,1)
diff: 
delta: (1,0)=8  (2,0)=3  (2,2)=8 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color cyan at (1,0)
  _011: a point with color yellow at (0,2)
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
! 22 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color yellow and layers
  _0: a point with color red at (0,0)
  _01: a point with color cyan at (0,1)
  _011: a point with color blue at (1,0)
diff: 
delta: (2,0)=3 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color yellow and layers
  _0: a point with color red at (0,0)
  _01: a point with color cyan at (0,1)
  _011: a point with color green at (2,0)
diff: 
delta: (1,0)=1 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,2) and color yellow and layers
  _0: a point with color red at (0,0)
  _01: a point with color blue at (1,0)
  _011: a point with color cyan at (0,1)
diff: 
delta: (2,0)=3 
! 15 wrong pixels (generated / expected)

TEST 49d1d64f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 4552.6 bits (4552.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-286] Checking task 4be741c5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 87651.5 = 87664.1
DL output with Mo: L = 12.6 + 2936.4 = 2949.0
DL input+output M: L = 25.2 + 90587.9 = 90613.1

# learning a model for train pairs
2.000	
1.465	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.141	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.711	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.622	OUT SPE ^.color = red
0.563	OUT SPE ^.layer_0.pos = ^.layer_0.pos / '3
0.506	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.449	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.414	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.368	OUT SPE ^.size.i = ^.layer_010.shape.size.j / '2
0.263	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_010.shape.size.j / '2,?) and color red and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos / '3
  _01: a point with color ^.layer_01.shape.color at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 9177.0 = 9266.3
DL output with Mo: L = 106.2 + 667.8 = 774.0
DL input+output M: L = 195.5 + 9844.8 = 10040.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_010.shape.size.j / '2,?) and color red and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos / '3
  _01: a point with color ^.layer_01.shape.color at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 106.2 + 667.8 = 774.0
DL input+output M: L = 195.5 + 667.8 = 863.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,16) and color red and layers
  _0: a rectangle with size (14,8) and color yellow and mask xxxxxxx.|xxxxxxxx|xxxxxxxx|xxxxxxx.|xxxxxx..|xxxxxx..|xxxxxxx.|xxxxxxx.|xxxxx...|xxxxx...|xxxx....|xxxx....|xxxxx...|xxxxxx.. at (0,0)
  _010: a rectangle with size (13,3) and color cyan and mask Full at (1,13)
  _01: a rectangle with size (14,4) and color cyan and mask ..xx|xxxx|xxxx|xxxx|.xxx|xxxx|xxxx|.xxx|..xx|..xx|.xxx|xxxx|xxxx|.xxx at (0,12)
diff: 
delta: (8,13)=2  (8,14)=8  (8,15)=8  (9,13)=2  (9,14)=8  (9,15)=8 
   (0.0 bits)
data: a background with size (1,3) and color red and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (0,2)
diff: 
delta:
   (12.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color red and layers
  _0: a rectangle with size (14,8) and color yellow and mask xxxxxxx.|xxxxxxxx|xxxxxxxx|xxxxxxx.|xxxxxx..|xxxxxx..|xxxxxxx.|xxxxxxx.|xxxxx...|xxxxx...|xxxx....|xxxx....|xxxxx...|xxxxxx.. at (0,0)
  _010: a rectangle with size (13,3) and color cyan and mask Full at (1,13)
  _01: a rectangle with size (14,4) and color cyan and mask ..xx|xxxx|xxxx|xxxx|.xxx|xxxx|xxxx|.xxx|..xx|..xx|.xxx|xxxx|xxxx|.xxx at (0,12)
diff: 
delta: (8,13)=2  (8,14)=8  (8,15)=8  (9,13)=2  (9,14)=8  (9,15)=8 
! size mismatch, 1x10 instead of 1x3

TRAIN 4be741c5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,7) and color red and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _010: a rectangle with size (2,7) and color grey and mask Full at (7,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,3)
diff: 
delta: (8,1)=5#
   (0.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color cyan at (1,0)
  _01: a point with color grey at (2,0)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,7) and color red and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _010: a rectangle with size (2,7) and color grey and mask Full at (7,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,3)
diff: 
delta: (8,1)=5#
! size mismatch, 3x10 instead of 3x1
>> Trial 2
data: a background with size (9,7) and color red and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _010: a rectangle with size (3,2) and color grey and mask Full at (6,3)
  _01: a rectangle with size (2,7) and color grey and mask Full at (7,0)
diff: 
delta: (8,1)=5#
! size mismatch, 1x10 instead of 3x1

TRAIN 4be741c5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color pink and mask xxxxxxxxx|xx..xxxxx|x...x.x.. at (0,0)
  _010: a rectangle with size (3,9) and color red and mask .xx...xx.|xxxxxxxxx|x.xxxxx.. at (6,0)
  _01: a rectangle with size (3,9) and color green and mask Full at (8,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,1) and color red and layers
  _0: a point with color pink at (0,0)
  _01: a point with color green at (3,0)
diff: 
delta: (1,0)=4 
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color pink and mask xxxxxxxxx|xx..xxxxx|x...x.x.. at (0,0)
  _010: a rectangle with size (3,9) and color red and mask .xx...xx.|xxxxxxxxx|x.xxxxx.. at (6,0)
  _01: a rectangle with size (3,9) and color green and mask Full at (8,0)
diff: 
delta:
! size mismatch, 4x10 instead of 4x1

TRAIN 4be741c5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color red and layers
  _0: a rectangle with size (14,6) and color green and mask xxxx..|xxx...|xxxxx.|xxxxx.|xxxx..|xxxxx.|xxx...|xxxx..|xxxx..|xxx...|xxx...|xxxx..|xxxxx.|xxxxxx at (0,0)
  _010: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
  _01: a rectangle with size (14,4) and color cyan and mask Full at (0,10)
diff: 
delta:
! size mismatch, 3x10 instead of 1x4
>> Trial 2
data: a background with size (14,14) and color red and layers
  _0: a rectangle with size (14,6) and color green and mask xxxx..|xxx...|xxxxx.|xxxxx.|xxxx..|xxxxx.|xxx...|xxxx..|xxxx..|xxx...|xxx...|xxxx..|xxxxx.|xxxxxx at (0,0)
  _010: a rectangle with size (14,4) and color cyan and mask ..xx|.xxx|xxxx|.xxx|..xx|...x|..xx|.xxx|..xx|..xx|.xxx|..xx|..xx|..xx at (0,10)
  _01: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
diff: 
delta:
! size mismatch, 2x10 instead of 1x4

TEST 4be741c5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 667.8 bits (667.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-285] Checking task 4c4377d9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7595.9 = 7608.5
DL output with Mo: L = 12.6 + 14609.1 = 14621.7
DL input+output M: L = 25.2 + 22205.0 = 22230.2

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = unfoldSym( [ id ] [ flipHeight ], applySym(flipHeight, ^.grid))
0.350	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.007	
0.003	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id ] [ flipHeight ], applySym(flipHeight, ^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 2613.9 = 2652.7
DL output with Mo: L = 23.0 + 0.0 = 23.0
DL input+output M: L = 61.8 + 2613.9 = 2675.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id ] [ flipHeight ], applySym(flipHeight, ^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 23.0 + 0.0 = 23.0
DL input+output M: L = 35.6 + 0.0 = 35.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,4) and color brown and layers
diff: 
delta: (0,2)=5# (1,0)=5# (1,1)=5# (2,1)=5#
   (0.0 bits)
data: 
9#5#9#9#
5#5#9#9#
9#9#5#9#
9#9#5#9#
5#5#9#9#
9#5#9#9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
diff: 
delta: (0,2)=5# (1,0)=5# (1,1)=5# (2,1)=5#
correct output grid

TRAIN 4c4377d9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,4) and color blue and layers
diff: 
delta: (0,0)=4  (0,3)=4  (2,0)=4  (2,1)=4  (2,2)=4 
   (0.0 bits)
data: 
4 4 4 1 
1 1 1 1 
4 1 1 4 
4 1 1 4 
1 1 1 1 
4 4 4 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color blue and layers
diff: 
delta: (0,0)=4  (0,3)=4  (2,0)=4  (2,1)=4  (2,2)=4 
correct output grid

TRAIN 4c4377d9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,4) and color yellow and layers
diff: 
delta: (0,0)=9# (0,2)=9# (1,0)=9# (1,1)=9#
   (0.0 bits)
data: 
4 4 4 4 
9#9#4 4 
9#4 9#4 
9#4 9#4 
9#9#4 4 
4 4 4 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
diff: 
delta: (0,0)=9# (0,2)=9# (1,0)=9# (1,1)=9#
correct output grid

TRAIN 4c4377d9.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,4) and color green and layers
diff: 
delta: (0,2)=5# (0,3)=5# (1,1)=5# (1,2)=5# (2,0)=5# (2,1)=5#
   (0.0 bits)
data: 
5#5#3 3 
3 5#5#3 
3 3 5#5#
3 3 5#5#
3 5#5#3 
5#5#3 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
diff: 
delta: (0,2)=5# (0,3)=5# (1,1)=5# (1,2)=5# (2,0)=5# (2,1)=5#
correct output grid

TRAIN 4c4377d9.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
diff: 
delta: (0,2)=9# (0,3)=9# (2,2)=9# (2,3)=9#
correct output grid

TEST 4c4377d9.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-284] Checking task 4c5c2cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15017.5 = 15030.1
DL output with Mo: L = 12.6 + 40216.7 = 40229.3
DL input+output M: L = 25.2 + 55234.1 = 55259.3

# learning a model for train pairs
2.000	
1.538	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.232	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.023	OUT ADD ^.layer_0 = ^.layer_0
0.854	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.684	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.541	OUT ADD ^.layer_010 = ^.layer_01
0.438	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.340	OUT SPE ^.layer_011.shape = applySym(flipWidth, ^.layer_0.shape)
0.311	OUT SPE ^.layer_01.shape = applySym(flipHeight, ^.layer_0.shape)
0.282	OUT SPE ^.layer_0111.shape = applySym(rotate180, ^.layer_0.shape)
0.265	IN  SPE ^.layer_01.shape.mask = Even Checkboard
0.249	OUT SPE ^.size = ^.size
0.240	OUT SPE ^.layer_01.pos = ^.layer_0.pos - translationSym(flipHeight, ^.layer_01, ^.layer_0)
0.232	OUT SPE ^.layer_011.pos = ^.layer_0.pos - translationSym(flipWidth, ^.layer_01, ^.layer_0)
0.224	OUT SPE ^.layer_0111.pos = ^.layer_0.pos - translationSym(rotate180, ^.layer_01, ^.layer_0)
0.219	IN  SPE ^.color = black
0.217	OUT SPE ^.color = black
0.010	
0.010	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: applySym(flipHeight, ^.layer_0.shape) at ^.layer_0.pos - translationSym(flipHeight, ^.layer_01, ^.layer_0)
  _011: applySym(flipWidth, ^.layer_0.shape) at ^.layer_0.pos - translationSym(flipWidth, ^.layer_01, ^.layer_0)
  _0111: applySym(rotate180, ^.layer_0.shape) at ^.layer_0.pos - translationSym(rotate180, ^.layer_01, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Even Checkboard at (?,?)

DL input  with Mi: L = 69.7 + 3117.5 = 3187.2
DL output with Mo: L = 215.5 + 0.0 = 215.5
DL input+output M: L = 285.2 + 3117.5 = 3402.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: applySym(flipHeight, ^.layer_0.shape) at ^.layer_0.pos - translationSym(flipHeight, ^.layer_01, ^.layer_0)
  _011: applySym(flipWidth, ^.layer_0.shape) at ^.layer_0.pos - translationSym(flipWidth, ^.layer_01, ^.layer_0)
  _0111: applySym(rotate180, ^.layer_0.shape) at ^.layer_0.pos - translationSym(rotate180, ^.layer_01, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Even Checkboard at (?,?)

DL input  with Mi: L = 69.5 + 0.0 = 69.5
DL output with Mo: L = 215.5 + 0.0 = 215.5
DL input+output M: L = 285.0 + 0.0 = 285.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _010: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
  _01: a rectangle with size (5,4) and color red and mask x...|.xx.|..xx|xx.x|x..x at (9,3)
  _011: a rectangle with size (5,4) and color red and mask x..x|x.xx|xx..|.xx.|...x at (3,8)
  _0111: a rectangle with size (5,4) and color red and mask ...x|.xx.|xx..|x.xx|x..x at (9,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
diff: 
delta:
correct output grid

TRAIN 4c5c2cf0.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _010: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
  _01: a rectangle with size (3,4) and color cyan and mask xxx.|.xxx|..x. at (9,6)
  _011: a rectangle with size (3,4) and color cyan and mask .x..|xxx.|.xxx at (3,1)
  _0111: a rectangle with size (3,4) and color cyan and mask .xxx|xxx.|.x.. at (9,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
diff: 
delta:
correct output grid

TRAIN 4c5c2cf0.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _010: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
  _01: a rectangle with size (3,3) and color blue and mask .x.|x.x|.xx at (3,1)
  _011: a rectangle with size (3,3) and color blue and mask xx.|x.x|.x. at (9,7)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|x.x|xx. at (3,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
diff: 
delta:
correct output grid

TRAIN 4c5c2cf0.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask ..x.|xx.x|.x..|.xx.|x...|x... at (8,7)
  _01: a rectangle with size (3,3) and color orange and mask Even Checkboard at (6,5)
diff: 
delta:
correct output grid

TEST 4c5c2cf0.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-283] Checking task 50846271.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 235377.7 = 235390.3
DL output with Mo: L = 12.6 + 243594.1 = 243606.7
DL input+output M: L = 25.2 + 478971.8 = 478997.0

# learning a model for train pairs
2.000	
1.224	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.613	OUT SPE ^.size = ^.size
0.612	IN  SPE ^.layer_0.shape.color = grey
0.576	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.533	OUT ADD ^.layer_01 = ^.layer_01
0.502	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.459	OUT ADD ^.layer_011 = ^.layer_011
0.445	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.399	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.372	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.231	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 33259.2 = 33376.6
DL output with Mo: L = 119.3 + 55996.0 = 56115.4
DL input+output M: L = 236.8 + 89255.2 = 89492.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 71.7 = 189.2
DL output with Mo: L = 119.3 + 55996.0 = 56115.4
DL input+output M: L = 236.8 + 56067.7 = 56304.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _011: a rectangle with size (7,2) and color red and mask .x|.x|.x|x.|.x|.x|.x at (2,11)
  _0111: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
diff: 
delta: (0,18)=5# (1,17)=5# (5,1)=5# (5,9)=2  (5,15)=2  (6,1)=5# (6,2)=5# (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
   (2.0 bits)
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (19,16) and color grey and mask ..............xx|..............x.|...........xxx..|...........x.xx.|..........x.x...|..........x..xxx|.........xx.x...|.............x..|.............x..|..........xxx.xx|..........xx..xx|...........xx...|.......x..xx....|......xx.x..x...|x.x..x..xxx.....|.xx.x..x..xxx...|x...x...xx...xxx|.xxxx..xx.x...xx|.......x.x.x...x at (1,6)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _011: a rectangle with size (7,2) and color red and mask .x|.x|.x|x.|.x|.x|.x at (2,11)
  _0111: a rectangle with size (9,10) and color grey and mask .......x..|.x..xxxx..|x.xx.xxx..|x..xx...x.|.....x...x|....x...x.|....x.....|.....x....|......x... at (0,0)
  _01111: a rectangle with size (8,7) and color grey and mask .....x.|....xx.|...x...|....xx.|xxxxx..|...x.xx|.xxx..x|.xx.... at (6,5)
  _011111: a rectangle with size (6,4) and color grey and mask x...|x..x|.x.x|.xx.|..xx|..x. at (8,0)
diff: 
delta: (0,18)=5# (1,17)=5# (3,13)=5# (3,14)=5# (3,15)=5# (4,13)=5# (4,14)=5# (5,1)=5# (5,9)=2  (5,10)=8  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=2  (6,1)=5# (6,2)=5# (6,13)=5# (7,13)=5# (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,5)=8  (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,5)=8  (13,21)=5# (14,2)=2  (14,3)=8  (14,4)=8  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (15,1)=5# (15,2)=5# (15,5)=8  (16,0)=5# (16,4)=5# (16,5)=2  (17,2)=5# (17,3)=5# (17,5)=2  (18,1)=5# (18,2)=5# (18,3)=5#
   (2512.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _011: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
  _0111: a rectangle with size (7,2) and color red and mask .x|.x|.x|x.|.x|.x|.x at (2,11)
diff: 
delta: (0,18)=5# (1,17)=5# (5,1)=5# (5,9)=2  (5,15)=2  (6,1)=5# (6,2)=5# (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! 176 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _011: a rectangle with size (7,2) and color red and mask .x|.x|.x|x.|.x|.x|.x at (2,11)
  _0111: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
diff: 
delta: (0,18)=5# (1,17)=5# (5,1)=5# (5,9)=2  (5,15)=2  (6,1)=5# (6,2)=5# (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! 176 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _01: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _011: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
  _0111: a rectangle with size (7,2) and color red and mask .x|.x|.x|x.|.x|.x|.x at (2,11)
diff: 
delta: (0,18)=5# (1,17)=5# (5,1)=5# (5,9)=2  (5,15)=2  (6,1)=5# (6,2)=5# (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! 55 wrong pixels (generated / expected)

TRAIN 50846271.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (8,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (10,12)
diff: 
delta: (4,4)=2  (15,7)=2  (15,8)=2  (16,7)=2 
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx..x.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x......xx.x.xx...|xx..xx.xxx.x..xx....|..xx...x..xx..x.....|...x.x.xxx.xxx......|....x..xxxx.xx......|...x.xxx.xx.x.......|..xx.xxxxx.x........|..x......xxx........|..x..x.xx.xxxx......|xx..xx....xxx.......|xx...xx..xx.xxxx..xx|..x.x.....x..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.x..xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (8,0)
  _0111: a rectangle with size (7,5) and color grey and mask ..x.x|.xx.x|..x.x|xxxxx|....x|..x.x|xxxx. at (6,15)
  _01111: a rectangle with size (5,2) and color cyan and mask .x|.x|x.|.x|.x at (8,13)
  _011111: a rectangle with size (1,5) and color red and mask Full at (10,12)
diff: 
delta: (2,6)=8  (4,4)=2  (4,5)=8  (6,6)=8  (13,7)=8  (14,7)=8  (15,5)=8  (15,6)=8  (15,7)=2  (15,8)=2  (15,9)=8  (16,7)=2  (17,7)=8 
   (1124.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
  _011: a rectangle with size (1,5) and color red and mask Full at (10,12)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (8,0)
diff: 
delta: (4,4)=2  (15,7)=2  (15,8)=2  (16,7)=2 
! 212 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (8,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (10,12)
diff: 
delta: (4,4)=2  (15,7)=2  (15,8)=2  (16,7)=2 
! 213 wrong pixels (generated / expected)

TRAIN 50846271.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
  _011: a rectangle with size (3,2) and color red and mask Full at (9,1)
  _0111: a rectangle with size (1,1) and color red and mask Full at (8,11)
diff: 
delta: (13,18)=5#
   (3.2 bits)
data: a background with size (18,19) and color grey and layers
  _0: a rectangle with size (18,19) and color black and mask .....x............x|.....x...........x.|....x.x........x.xx|.....xxx......xx.xx|..xxx...x....xxx.xx|.xxxxx.x.x...xx.x..|.x.xx..x........x..|x.x.....x.x....x...|...x....xx.....xxxx|....xx.xx........xx|.....xx..........x.|......xx..........x|......xx..xx....xxx|........xx.......x.|.......xxx.x....xxx|........x..x.x.xxxx|.....xxxxxx.xx.x.x.|.....xxxxx.xx.x.... at (0,0)
  _01: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
  _011: a rectangle with size (3,2) and color red and mask Full at (9,1)
  _0111: a rectangle with size (4,4) and color black and mask x..x|x.xx|.xx.|x... at (11,0)
  _01111: a rectangle with size (4,6) and color black and mask ....xx|..xx..|.x.x..|x..x.. at (14,0)
  _011111: a rectangle with size (3,3) and color black and mask .x.|.xx|xxx at (0,9)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=0  (0,13)=0  (0,14)=0  (0,15)=0  (1,0)=0  (1,1)=0  (2,0)=0  (4,11)=8  (6,11)=8  (6,18)=0  (7,1)=8  (7,11)=8  (8,1)=8  (8,11)=2  (9,0)=8  (9,3)=8  (10,2)=5# (10,11)=0  (10,12)=0  (11,2)=5# (11,13)=0  (12,13)=0  (12,14)=0  (13,13)=0 
   (1552.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (6,9)
  _011: a rectangle with size (3,2) and color red and mask Full at (9,1)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,11)
diff: 
delta: (13,18)=5#
! 194 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
  _011: a rectangle with size (3,2) and color red and mask Full at (9,1)
  _0111: a rectangle with size (1,1) and color red and mask Full at (8,11)
diff: 
delta: (13,18)=5#
! 193 wrong pixels (generated / expected)

TRAIN 50846271.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (4,6)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
  _0111: a rectangle with size (4,1) and color red and mask Full at (2,8)
diff: 
delta: (0,6)=5# (1,8)=5# (5,11)=5#
   (0.0 bits)
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx......|xxx.xx......|xxx.x.......|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (4,6)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
  _0111: a rectangle with size (4,1) and color red and mask Full at (2,8)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (5,7)
  _011111: a rectangle with size (1,1) and color grey and mask Full at (0,6)
diff: 
delta: (1,8)=5# (4,7)=8  (5,11)=5# (6,8)=8 
   (410.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (4,6)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
  _0111: a rectangle with size (4,1) and color red and mask Full at (2,8)
diff: 
delta: (0,6)=5# (1,8)=5# (5,11)=5#
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (2,8)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
  _0111: a rectangle with size (1,5) and color red and mask Full at (4,6)
diff: 
delta: (0,6)=5# (1,8)=5# (5,11)=5#
! 54 wrong pixels (generated / expected)

TRAIN 50846271.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
  _01: a rectangle with size (7,9) and color grey and mask ..x......|..xx.....|...xxx...|.xx.xxx.x|x.x..x..x|..x.x.xxx|...xx..xx at (0,1)
  _011: a rectangle with size (3,5) and color red and mask xx.xx|..x..|..x.. at (4,4)
  _0111: a rectangle with size (1,5) and color red and mask Full at (16,11)
diff: 
delta: (0,1)=5# (0,6)=5# (0,7)=5# (0,9)=5# (0,15)=5# (1,1)=5# (1,8)=5# (1,9)=5# (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (17,13)=5# (18,13)=5#
! 206 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
  _01: a rectangle with size (7,1) and color grey and mask Full at (0,9)
  _011: a rectangle with size (7,9) and color grey and mask ..x......|..xx.....|...xxx...|.xx.xxx.x|x.x..x..x|..x.x.xxx|...xx..xx at (0,1)
  _0111: a rectangle with size (3,5) and color red and mask xx.xx|..x..|..x.. at (4,4)
diff: 
delta: (0,1)=5# (0,6)=5# (0,7)=5# (0,15)=5# (1,1)=5# (1,8)=5# (2,9)=0  (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,13)=5# (18,13)=5#
! 211 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
  _01: a rectangle with size (7,9) and color grey and mask ..x......|..xx.....|...xxx...|.xx.xxx.x|x.x..x..x|..x.x.xxx|...xx..xx at (0,1)
  _011: a rectangle with size (2,9) and color grey and mask Full at (0,1)
  _0111: a rectangle with size (3,5) and color red and mask xx.xx|..x..|..x.. at (4,4)
diff: 
delta: (0,2)=0  (0,4)=0  (0,5)=0  (0,8)=0  (0,15)=5# (1,2)=0  (1,5)=0  (1,6)=0  (1,7)=0  (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,13)=5# (18,13)=5#
! 215 wrong pixels (generated / expected)

TEST 50846271.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 55996.0 bits (55996.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-282] Checking task 508bd3b6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35695.2 = 35707.8
DL output with Mo: L = 12.6 + 46277.3 = 46289.9
DL input+output M: L = 25.2 + 81972.5 = 81997.7

# learning a model for train pairs
2.000	
1.139	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.453	OUT ADD ^.layer_0 = ^.layer_0
0.275	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.223	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.155	OUT ADD ^.layer_011 = ^.layer_01
0.142	OUT SPE ^.size = ^.size
0.137	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j * '3
0.133	OUT SPE ^.layer_01.shape.color = green
0.130	OUT SPE ^.layer_01.pos.j = right(^.layer_01) + 1
0.128	IN  SPE ^.color = black
0.126	OUT SPE ^.color = black
0.043	
0.043	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_01.shape.size.j * '3) and color green and mask ? at (?,right(^.layer_01) + 1)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 3010.8 = 3075.2
DL output with Mo: L = 89.3 + 1769.4 = 1858.7
DL input+output M: L = 153.7 + 4780.2 = 4933.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_01.shape.size.j * '3) and color green and mask ? at (?,right(^.layer_01) + 1)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 89.3 + 1769.4 = 1858.7
DL input+output M: L = 153.6 + 1789.4 = 1942.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (10,6) and color green and mask .x....|..x...|...x..|....x.|.....x|....x.|...x..|..x...|.x....|x..... at (0,4)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
   (62.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
  _01: a rectangle with size (12,2) and color red and mask Full at (0,10)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (6,9) and color green and mask ........x|.......x.|x.....x..|.x...x...|..x.x....|...x..... at (3,3)
  _011: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
   (56.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
  _01: a rectangle with size (3,12) and color red and mask Full at (9,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color red and layers
  _0: a rectangle with size (9,12) and color black and mask xxxxxxxxxxxx|xxxxxxxxxxxx|.xxxxxxxxxxx|x.xxxxxxxxxx|xx.xxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (2,0)
diff: 
delta:
! 45 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
  _01: a rectangle with size (12,2) and color red and mask Full at (0,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
  _01: a rectangle with size (9,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x.....|.x....|..x...|...x.. at (0,2)
  _011: a rectangle with size (12,2) and color red and mask Full at (0,0)
diff: 
delta:
   (57.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
  _01: a rectangle with size (12,2) and color red and mask Full at (0,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,4) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,3)
  _01: a rectangle with size (12,4) and color red and mask Full at (0,8)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST 508bd3b6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 1769.4 bits (1769.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-281] Checking task 50cb2852.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 69306.9 = 69319.6
DL output with Mo: L = 12.6 + 69306.9 = 69319.6
DL input+output M: L = 25.2 + 138613.9 = 138639.1

# learning a model for train pairs
2.000	
1.551	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.182	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.887	OUT ADD ^.layer_0 = ^.layer_0
0.635	OUT ADD ^.layer_01 = ^.layer_01
0.479	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.340	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.277	OUT ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.266	OUT SPE ^.layer_00.shape.size = ^.layer_0.shape.size - (2, 2)
0.246	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.237	OUT SPE ^.size = ^.size
0.232	OUT SPE ^.layer_001.shape.size = ^.layer_01.shape.size - (2, 2)
0.227	OUT SPE ^.layer_00.pos = ^.layer_0.pos + (1, 1)
0.222	OUT SPE ^.layer_001.pos = ^.layer_01.pos + (1, 1)
0.219	IN  SPE ^.layer_0.shape.color = red
0.217	OUT SPE ^.layer_00.shape.color = cyan
0.214	OUT SPE ^.layer_001.shape.color = cyan
0.212	OUT SPE ^.layer_0101.shape.size.j = ^.layer_01.shape.size.i - 2
0.211	IN  SPE ^.layer_0.shape.mask = Full
0.210	OUT SPE ^.layer_00.shape.mask = Full
0.208	IN  SPE ^.layer_01.shape.mask = Full
0.207	OUT SPE ^.layer_001.shape.mask = Full
0.205	OUT SPE ^.layer_0101.shape.mask = Full
0.030	
0.029	IN  GEN ^.layer_0.shape.color = ?
0.029	IN  GEN ^.layer_01.shape.mask = ?
0.029	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size ^.layer_0.shape.size - (2, 2) and color cyan and mask Full at ^.layer_0.pos + (1, 1)
  _001: a rectangle with size ^.layer_01.shape.size - (2, 2) and color cyan and mask Full at ^.layer_01.pos + (1, 1)
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0101: a rectangle with size (?,^.layer_01.shape.size.i - 2) and color ? and mask Full at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 69.5 + 12186.8 = 12256.3
DL output with Mo: L = 233.9 + 1746.7 = 1980.6
DL input+output M: L = 303.4 + 13933.4 = 14236.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size ^.layer_0.shape.size - (2, 2) and color cyan and mask Full at ^.layer_0.pos + (1, 1)
  _001: a rectangle with size ^.layer_01.shape.size - (2, 2) and color cyan and mask Full at ^.layer_01.pos + (1, 1)
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0101: a rectangle with size (?,^.layer_01.shape.size.i - 2) and color ? and mask Full at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 233.9 + 1703.5 = 1937.3
DL input+output M: L = 298.1 + 1743.5 = 2041.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Full at (1,2)
  _01: a rectangle with size (5,7) and color green and mask Full at (8,8)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
   (2.0 bits)
data: a background with size (13,15) and color black and layers
  _00: a rectangle with size (4,3) and color cyan and mask Full at (2,3)
  _001: a rectangle with size (3,5) and color cyan and mask Full at (9,9)
  _0: a rectangle with size (6,5) and color red and mask Full at (1,2)
  _010: a rectangle with size (1,1) and color cyan and mask Full at (2,11)
  _0101: a rectangle with size (3,3) and color blue and mask Full at (1,10)
  _01: a rectangle with size (5,7) and color green and mask Full at (8,8)
diff: 
delta:
   (54.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _01: a rectangle with size (6,5) and color red and mask Full at (1,2)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Full at (1,2)
  _01: a rectangle with size (5,7) and color green and mask Full at (8,8)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,10)
diff: 
delta: (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,2)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2 
! 34 wrong pixels (generated / expected)

TRAIN 50cb2852.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,6) and color blue and mask Full at (7,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _001: a rectangle with size (1,4) and color cyan and mask Full at (8,3)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _010: a rectangle with size (3,1) and color blue and mask Full at (7,2)
  _0101: a rectangle with size (3,1) and color blue and mask Full at (7,7)
  _01: a rectangle with size (3,6) and color blue and mask Full at (7,2)
diff: 
delta:
   (56.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask Full at (7,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,6) and color blue and mask Full at (7,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 50cb2852.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _01: a rectangle with size (6,4) and color red and mask Full at (1,6)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (0.0 bits)
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,6) and color cyan and mask Full at (9,3)
  _001: a rectangle with size (4,2) and color cyan and mask Full at (2,7)
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _010: a rectangle with size (2,2) and color cyan and mask Full at (3,1)
  _0101: a rectangle with size (4,4) and color green and mask Full at (2,0)
  _01: a rectangle with size (6,4) and color red and mask Full at (1,6)
diff: 
delta:
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _01: a rectangle with size (6,4) and color red and mask Full at (1,6)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (6,4) and color red and mask Full at (1,6)
  _01: a rectangle with size (4,8) and color blue and mask Full at (8,2)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,0)
diff: 
delta: (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,6)=2  (4,7)=2  (4,8)=2  (4,9)=2  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2 
! 28 wrong pixels (generated / expected)

TRAIN 50cb2852.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (5,2)
  _01: a rectangle with size (7,4) and color green and mask Full at (7,9)
diff: 
delta: (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (1,9)=1  (1,10)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (7,4) and color green and mask Full at (7,9)
  _01: a rectangle with size (6,6) and color red and mask Full at (5,2)
diff: 
delta: (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (1,9)=1  (1,10)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (5,2)
  _01: a rectangle with size (4,5) and color blue and mask Full at (0,1)
diff: 
delta: (1,8)=1  (1,9)=1  (1,10)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,8)=1  (3,9)=1  (3,10)=1  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3 
! 41 wrong pixels (generated / expected)

TEST 50cb2852.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.1 sec (58.1 sec/task)
bits-train-error = 1703.5 bits (1703.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-280] Checking task 5117e062.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23745.5 = 23758.1
DL output with Mo: L = 12.6 + 4156.0 = 4168.6
DL input+output M: L = 25.2 + 27901.5 = 27926.7

# learning a model for train pairs
2.000	
1.398	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.116	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.898	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.740	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.646	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.553	OUT SPE ^.size = ^.layer_0.shape.size
0.480	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.424	OUT SPE ^.layer_0.pos = '(0, 0)
0.388	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.370	OUT SPE ^.color = black
0.367	IN  SPE ^.color = black
0.106	
0.106	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_011.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 6218.6 = 6332.9
DL output with Mo: L = 56.4 + 362.0 = 418.4
DL input+output M: L = 170.7 + 6580.6 = 6751.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_011.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 56.4 + 362.0 = 418.4
DL input+output M: L = 170.6 + 382.0 = 552.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
diff: 
delta: (1,10)=8 
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
diff: 
delta: (1,10)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
  _011: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (0,7)
  _011: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .xx|xx.|.xx at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (0,7)
  _011: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (0,7)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xxx|..x at (3,8)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (8,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,1)
diff: 
delta: (3,2)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xx. at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xxx|..x at (3,8)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (8,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,1)
diff: 
delta: (3,2)=8 
! 3 wrong pixels (generated / expected)

TRAIN 5117e062.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _011: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
diff: 
delta: (5,10)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _011: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
  _0111: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _0111: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)

TEST 5117e062.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 362.0 bits (362.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-279] Checking task 5168d44c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15960.7 = 15973.3
DL output with Mo: L = 12.6 + 15960.7 = 15973.3
DL input+output M: L = 25.2 + 31921.5 = 31946.7

# learning a model for train pairs
2.000	
1.507	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.971	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.833	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.706	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT SPE ^.layer_01 = ^.layer_01
0.606	OUT SPE ^.size = ^.size
0.596	IN  SPE ^.layer_0.shape.color = red
0.586	IN  SPE ^.layer_0.shape.mask = Border
0.575	IN  SPE ^.layer_01.shape.color = green
0.565	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.i
0.556	OUT SPE ^.layer_0.pos.i = right(^.layer_0)
0.550	IN  SPE ^.layer_01.shape.mask = Full
0.545	IN  SPE ^.color = black
0.541	OUT SPE ^.color = black
0.199	
0.199	IN  GEN ^.layer_01.shape.color = ?
0.199	IN  GEN ^.layer_0.shape.mask = ?
0.199	IN  GEN ^.layer_0.shape.color = ?
0.199	IN  GEN ^.layer_01.shape.mask = ?
0.199	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (right(^.layer_0),^.layer_0.pos.i)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 75.3 + 5449.7 = 5525.0
DL output with Mo: L = 47.9 + 3061.4 = 3109.3
DL input+output M: L = 123.2 + 8511.1 = 8634.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (right(^.layer_0),^.layer_0.pos.i)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 47.9 + 3061.4 = 3109.3
DL input+output M: L = 112.1 + 3061.4 = 3173.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
   (0.0 bits)
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,2)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,6)=0  (3,8)=0  (3,10)=0 
   (115.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,3)
diff: 
delta: (3,1)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 6 wrong pixels (generated / expected)

TRAIN 5168d44c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
   (0.0 bits)
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (5,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (3,4)=0  (9,4)=0  (11,4)=0 
   (152.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (4,4)=3  (7,4)=0  (9,4)=0  (11,4)=0 
! 5 wrong pixels (generated / expected)

TRAIN 5168d44c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (5,2)=0 
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (1,2)=0 
   (38.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (5,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (2,2)=3  (5,2)=0 
! 2 wrong pixels (generated / expected)

TRAIN 5168d44c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,17) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,7)
  _01: a rectangle with size (1,17) and color green and mask Full at (4,0)
diff: 
delta: (4,1)=0  (4,3)=0  (4,5)=0  (4,11)=0  (4,13)=0  (4,15)=0 
! 14 wrong pixels (generated / expected)

TEST 5168d44c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 3061.4 bits (3061.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-278] Checking task 539a4f51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17750.8 = 17763.5
DL output with Mo: L = 12.6 + 51016.3 = 51028.9
DL input+output M: L = 25.2 + 68767.2 = 68792.4

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = fillResizeAlike_total(black, ^.size * '2, ^.grid)
0.620	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.311	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.223	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.217	IN  SPE ^.layer_01.shape.mask = Full
0.212	IN  SPE ^.layer_011.shape.mask = Full
0.006	
0.004	IN  DEL ^.layer_011
0.003	IN  DEL ^.layer_01
0.001	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike_total(black, ^.size * '2, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 91.3 + 3656.3 = 3747.6
DL output with Mo: L = 39.2 + 0.0 = 39.2
DL input+output M: L = 130.5 + 3656.3 = 3786.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike_total(black, ^.size * '2, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 39.2 + 0.0 = 39.2
DL input+output M: L = 51.8 + 0.0 = 51.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=3  (1,0)=2  (1,1)=2  (1,2)=2  (1,3)=3  (2,0)=2  (2,1)=2  (2,2)=2  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3 
   (0.0 bits)
data: 
2 2 2 3 2 2 2 3 2 2 
2 2 2 3 2 2 2 3 2 2 
2 2 2 3 2 2 2 3 2 2 
3 3 3 3 2 2 2 3 2 2 
2 2 2 2 2 2 2 3 2 2 
2 2 2 2 2 2 2 3 2 2 
2 2 2 2 2 2 2 3 2 2 
3 3 3 3 3 3 3 3 2 2 
2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=3  (1,0)=2  (1,1)=2  (1,2)=2  (1,3)=3  (2,0)=2  (2,1)=2  (2,2)=2  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3 
correct output grid

TRAIN 539a4f51.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=4  (0,3)=6  (1,0)=1  (1,1)=1  (1,2)=4  (1,3)=6  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=6  (3,0)=6  (3,1)=6  (3,2)=6  (3,3)=6 
   (0.0 bits)
data: 
1 1 4 6 1 1 4 6 1 1 
1 1 4 6 1 1 4 6 1 1 
4 4 4 6 1 1 4 6 1 1 
6 6 6 6 1 1 4 6 1 1 
1 1 1 1 1 1 4 6 1 1 
1 1 1 1 1 1 4 6 1 1 
4 4 4 4 4 4 4 6 1 1 
6 6 6 6 6 6 6 6 1 1 
1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=4  (0,3)=6  (1,0)=1  (1,1)=1  (1,2)=4  (1,3)=6  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=6  (3,0)=6  (3,1)=6  (3,2)=6  (3,3)=6 
correct output grid

TRAIN 539a4f51.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color pink and layers
diff: 
delta: (0,0)=2  (0,1)=3  (0,2)=4  (0,3)=1  (1,0)=3  (1,1)=3  (1,2)=4  (1,3)=1  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=1 
   (0.0 bits)
data: 
2 3 4 1 6 2 3 4 1 6 
3 3 4 1 6 2 3 4 1 6 
4 4 4 1 6 2 3 4 1 6 
1 1 1 1 6 2 3 4 1 6 
6 6 6 6 6 2 3 4 1 6 
2 2 2 2 2 2 3 4 1 6 
3 3 3 3 3 3 3 4 1 6 
4 4 4 4 4 4 4 4 1 6 
1 1 1 1 1 1 1 1 1 6 
6 6 6 6 6 6 6 6 6 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
diff: 
delta: (0,0)=2  (0,1)=3  (0,2)=4  (0,3)=1  (1,0)=3  (1,1)=3  (1,2)=4  (1,3)=1  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=1 
correct output grid

TRAIN 539a4f51.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=3  (1,0)=7# (1,1)=7# (1,2)=3  (2,0)=3  (2,1)=3  (2,2)=3 
correct output grid

TEST 539a4f51.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-277] Checking task 53b68214.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10694.7 = 10707.4
DL output with Mo: L = 12.6 + 16147.9 = 16160.5
DL input+output M: L = 25.2 + 26842.6 = 26867.8

# learning a model for train pairs
2.000	
1.175	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.397	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.376	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.357	OUT SPE ^.size.j = ^.size.j
0.339	OUT SPE ^.size.i = ^.size.j
0.329	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.322	IN  SPE ^.color = black
0.317	OUT SPE ^.color = black
0.107	
0.107	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2258.2 = 2297.1
DL output with Mo: L = 46.0 + 1617.7 = 1663.7
DL input+output M: L = 84.9 + 3875.8 = 3960.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 46.0 + 1617.7 = 1663.7
DL input+output M: L = 84.8 + 1617.7 = 1702.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask xxx....|..x....|..xxx..|....x..|....xxx|......x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,10) and color blue and mask xxx.......|..x.......|..xxx.....|....x.....|....xxx...|......x...|......xxx.|........x.|........xx at (0,0)
diff: 
delta:
   (92.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask xxx....|..x....|..xxx..|....x..|....xxx|......x at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,2)
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 53b68214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x.|x.x|.x. at (0,0)
diff: 
delta:
   (52.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x. at (0,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 53b68214.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,2) and color pink and mask Odd Checkboard at (0,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x.x|xxx|x.x|xxx at (0,1)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 53b68214.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 1617.7 bits (1617.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-276] Checking task 543a7ed5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30369.9 = 30382.5
DL output with Mo: L = 12.6 + 84893.1 = 84905.7
DL input+output M: L = 25.2 + 115263.0 = 115288.2

# learning a model for train pairs
2.000	
1.571	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.214	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.888	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	OUT ADD ^.layer_00 = ^.layer_0
0.300	OUT ADD ^.layer_010 = ^.layer_01
0.213	OUT ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.184	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.175	OUT ADD ^.layer_0110 = ^.layer_011
0.169	IN  SPE ^.color = cyan
0.164	OUT SPE ^.size = ^.size
0.073	
0.073	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 95.9 + 2747.2 = 2843.1
DL output with Mo: L = 133.0 + 5834.1 = 5967.1
DL input+output M: L = 228.9 + 8581.2 = 8810.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 133.0 + 5834.1 = 5967.1
DL input+output M: L = 222.2 + 5834.1 = 6056.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Full at (10,5)
  _01: a rectangle with size (5,4) and color pink and mask Border at (2,8)
  _011: a rectangle with size (2,2) and color pink and mask Full at (4,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (4,4) and color pink and mask Full at (10,5)
  _0: a rectangle with size (7,6) and color green and mask Border at (1,7)
  _0100: a rectangle with size (6,6) and color green and mask Full at (9,4)
  _010: a rectangle with size (5,4) and color pink and mask Border at (2,8)
  _01: a rectangle with size (3,2) and color yellow and mask Full at (3,9)
  _0110: a rectangle with size (2,2) and color pink and mask Full at (4,3)
  _011: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
   (157.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Full at (10,5)
  _01: a rectangle with size (5,4) and color pink and mask Border at (2,8)
  _011: a rectangle with size (2,2) and color pink and mask Full at (4,3)
diff: 
delta:
! 191 wrong pixels (generated / expected)

TRAIN 543a7ed5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (6,6) and color pink and mask Border at (8,8)
  _01: a rectangle with size (4,4) and color pink and mask xxxx|x.xx|x.xx|xxxx at (3,2)
  _011: a rectangle with size (3,3) and color pink and mask Full at (1,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (6,6) and color pink and mask Border at (8,8)
  _0: a rectangle with size (4,4) and color yellow and mask Full at (9,9)
  _0100: a rectangle with size (15,1) and color green and mask Full at (0,7)
  _010: a rectangle with size (4,4) and color pink and mask xxxx|x.xx|x.xx|xxxx at (3,2)
  _01: a rectangle with size (15,14) and color green and mask ......xxxxx...|......x...x...|xxxxxxx...x...|x....xx...x...|x....xxxxxx...|x....x........|x....x........|xxxxxxxxxxxxxx|......x......x|......x......x|......x......x|......x......x|......x......x|......x......x|......xxxxxxxx at (0,1)
  _0110: a rectangle with size (3,3) and color pink and mask Full at (1,8)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (4,3)
diff: 
delta: (5,7)=8  (6,7)=8 
   (425.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (6,6) and color pink and mask Border at (8,8)
  _01: a rectangle with size (4,4) and color pink and mask xxxx|x.xx|x.xx|xxxx at (3,2)
  _011: a rectangle with size (3,3) and color pink and mask Full at (1,8)
diff: 
delta:
! 182 wrong pixels (generated / expected)

TRAIN 543a7ed5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (3,7) and color pink and mask xxxxxxx|xx..xxx|xxxxxxx at (11,4)
  _01: a rectangle with size (6,3) and color pink and mask xxx|xxx|x.x|x.x|x.x|xxx at (2,9)
  _011: a rectangle with size (4,4) and color pink and mask Border at (3,2)
diff: 
delta:
! 179 wrong pixels (generated / expected)

TEST 543a7ed5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 5834.1 bits (5834.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-275] Checking task 54d82841.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9759.0 = 9771.6
DL output with Mo: L = 12.6 + 11569.2 = 11581.8
DL input+output M: L = 25.2 + 21328.2 = 21353.4

# learning a model for train pairs
2.000	
1.558	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.089	OUT ADD ^.layer_0 = ^.layer_0
0.829	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.649	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.532	OUT ADD ^.layer_011 = ^.layer_01
0.476	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.431	OUT SPE ^.size = ^.size
0.414	OUT SPE ^.layer_01.shape.size = '(1, 1)
0.400	OUT SPE ^.layer_01.shape.color = yellow
0.387	OUT SPE ^.layer_01.pos.j = 2
0.376	OUT SPE ^.layer_0111.pos.j = right(^.layer_01) - 1
0.367	OUT SPE ^.layer_01.shape.mask = Full
0.360	IN  SPE ^.color = black
0.061	
0.061	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size '(1, 1) and color yellow and mask Full at (?,2)
  _011: ^.layer_01
  _0111: a point with color ? at (?,right(^.layer_01) - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 2917.9 = 2982.2
DL output with Mo: L = 98.9 + 535.2 = 634.1
DL input+output M: L = 163.2 + 3453.1 = 3616.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size '(1, 1) and color yellow and mask Full at (?,2)
  _011: ^.layer_01
  _0111: a point with color ? at (?,right(^.layer_01) - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 98.9 + 535.2 = 634.1
DL input+output M: L = 163.1 + 535.2 = 698.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (7,2)
  _011: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
  _0111: a point with color yellow at (7,6)
diff: 
delta:
   (18.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _01: a rectangle with size (2,3) and color pink and mask Full at (2,5)
diff: 
delta: (3,6)=0 
! 4 wrong pixels (generated / expected)

TRAIN 54d82841.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,3)
diff: 
delta: (0,2)=3 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _011: a rectangle with size (2,1) and color green and mask Full at (0,3)
  _0111: a point with color green at (0,2)
diff: 
delta:
   (17.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,3)
diff: 
delta: (0,2)=3 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,1)
diff: 
delta: (0,2)=3 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color green and mask Full at (0,1)
diff: 
delta: (1,3)=3 
! 3 wrong pixels (generated / expected)

TRAIN 54d82841.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _011: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
  _0111: a point with color yellow at (4,5)
diff: 
delta:
   (17.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _01: a rectangle with size (2,3) and color pink and mask Full at (2,4)
diff: 
delta: (3,5)=0 
! 5 wrong pixels (generated / expected)

TRAIN 54d82841.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,5)
diff: 
delta: (2,8)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
  _01: a rectangle with size (2,3) and color green and mask xxx|x.x at (2,8)
diff: 
delta: (1,5)=8  (1,6)=8  (1,7)=8  (2,5)=8  (2,7)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,5)
  _01: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
diff: 
delta: (2,8)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3 
! 9 wrong pixels (generated / expected)

TEST 54d82841.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 52.9 sec (52.9 sec/task)
bits-train-error = 535.2 bits (535.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-274] Checking task 54d9e175.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21372.0 = 21384.6
DL output with Mo: L = 12.6 + 43729.0 = 43741.6
DL input+output M: L = 25.2 + 65101.0 = 65126.2

# learning a model for train pairs
2.000	
1.544	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.277	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.034	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.886	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.770	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.721	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.670	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.631	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.592	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.552	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.536	OUT SPE ^.size = ^.size
0.524	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.513	OUT SPE ^.layer_01.shape.size = '(3, 3)
0.501	OUT SPE ^.layer_011.shape.size = '(3, 3)
0.490	IN  SPE ^.layer_0.shape.color = grey
0.481	OUT SPE ^.layer_0.pos = '(0, 0)
0.473	OUT SPE ^.layer_011.pos = projJ(^.layer_011.pos) + (0, 3)
0.465	OUT SPE ^.layer_01.pos = projJ(^.layer_01111.pos) - (0, 1)
0.456	OUT SPE ^.layer_01111.pos = corner(^.layer_01111.pos, ^.layer_0.pos) - (1, 0)
0.450	IN  SPE ^.layer_01.shape.mask = Full
0.444	OUT SPE ^.layer_0111.shape.size.i = 3
0.439	OUT SPE ^.layer_01111.shape.size.i = 3
0.434	IN  SPE ^.color = black
0.431	OUT SPE ^.layer_0.shape.mask = Full
0.428	OUT SPE ^.layer_01.shape.mask = Full
0.425	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.j - 1
0.422	OUT SPE ^.layer_011.shape.mask = Full
0.419	OUT SPE ^.layer_0111.shape.mask = Full
0.416	OUT SPE ^.layer_01111.shape.mask = Full
0.411	OUT SPE ^.layer_0111.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) + 2
0.128	
0.127	IN  GEN ^.layer_0.shape.color = ?
0.127	IN  GEN ^.layer_01.shape.mask = ?
0.127	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size '(3, 3) and color ? and mask Full at '(0, 0)
  _01: a rectangle with size '(3, 3) and color ? and mask Full at projJ(^.layer_01111.pos) - (0, 1)
  _011: a rectangle with size '(3, 3) and color ? and mask Full at projJ(^.layer_011.pos) + (0, 3)
  _0111: a rectangle with size (3,?) and color ? and mask Full at (^.layer_011.pos.j - 1,span(^.layer_0.pos.j, ^.layer_01.pos.j) + 2)
  _01111: a rectangle with size (3,?) and color ? and mask Full at corner(^.layer_01111.pos, ^.layer_0.pos) - (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 115.5 + 6082.7 = 6198.2
DL output with Mo: L = 305.1 + 5000.5 = 5305.5
DL input+output M: L = 420.5 + 11083.2 = 11503.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size '(3, 3) and color ? and mask Full at '(0, 0)
  _01: a rectangle with size '(3, 3) and color ? and mask Full at projJ(^.layer_01111.pos) - (0, 1)
  _011: a rectangle with size '(3, 3) and color ? and mask Full at projJ(^.layer_011.pos) + (0, 3)
  _0111: a rectangle with size (3,?) and color ? and mask Full at (^.layer_011.pos.j - 1,span(^.layer_0.pos.j, ^.layer_01.pos.j) + 2)
  _01111: a rectangle with size (3,?) and color ? and mask Full at corner(^.layer_01111.pos, ^.layer_0.pos) - (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 20.0 = 131.0
DL output with Mo: L = 305.1 + 5000.5 = 5305.5
DL input+output M: L = 416.1 + 5020.5 = 5436.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,1)
  _0111: a point with color red at (1,5)
  _01111: a point with color blue at (1,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color orange and mask Full at (0,4)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,1)
  _0111: a point with color red at (1,5)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,1)
  _0111: a point with color blue at (1,9)
  _01111: a point with color red at (1,5)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,5)
  _0111: a point with color blue at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,1)
  _0111: a point with color green at (1,5)
  _01111: a point with color blue at (1,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,1)
  _0111: a point with color green at (1,5)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,1)
  _0111: a point with color blue at (1,9)
  _01111: a point with color green at (1,5)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,5)
  _0111: a point with color red at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,1)
  _0111: a point with color blue at (1,5)
  _01111: a point with color yellow at (1,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,4)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,1)
  _0111: a point with color blue at (1,5)
  _01111: a point with color yellow at (1,9)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,1)
  _0111: a point with color yellow at (1,9)
  _01111: a point with color blue at (1,5)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,5)
  _0111: a point with color green at (1,1)
  _01111: a point with color yellow at (1,9)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (1,9)
  _01111: a point with color green at (5,5)
diff: 
delta: (5,1)=2  (5,9)=4 
   (2.0 bits)
data: a background with size (7,11) and color grey and layers
  _0: a rectangle with size (3,3) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color orange and mask Full at (0,8)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _01111: a rectangle with size (3,3) and color orange and mask Full at (4,0)
diff: 
delta: (4,8)=9# (4,9)=9# (4,10)=9# (5,8)=9# (5,9)=9# (5,10)=9# (6,8)=9# (6,9)=9# (6,10)=9#
   (388.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (1,9)
  _01111: a point with color red at (5,1)
diff: 
delta: (5,5)=3  (5,9)=4 
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (1,9)
  _01111: a point with color green at (5,5)
diff: 
delta: (5,1)=2  (5,9)=4 
! 77 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (5,1)
  _01111: a point with color red at (1,9)
diff: 
delta: (5,5)=3  (5,9)=4 
! 77 wrong pixels (generated / expected)

TRAIN 54d9e175.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color green at (1,5)
  _0111: a point with color yellow at (1,9)
  _01111: a point with color blue at (5,1)
diff: 
delta: (5,5)=1  (5,9)=3 
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color green at (1,5)
  _0111: a point with color yellow at (1,9)
  _01111: a point with color blue at (5,5)
diff: 
delta: (5,1)=1  (5,9)=3 
! 77 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color green at (1,5)
  _0111: a point with color blue at (5,1)
  _01111: a point with color yellow at (1,9)
diff: 
delta: (5,5)=1  (5,9)=3 
! 77 wrong pixels (generated / expected)

TEST 54d9e175.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.6 sec (57.6 sec/task)
bits-train-error = 5000.5 bits (5000.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-273] Checking task 5521c0d9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33244.8 = 33257.4
DL output with Mo: L = 12.6 + 33244.8 = 33257.4
DL input+output M: L = 25.2 + 66489.6 = 66514.8

# learning a model for train pairs
2.000	
1.500	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.980	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.755	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.352	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.175	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
0.154	OUT SPE ^.size = ^.size
0.144	OUT SPE ^.layer_011.pos = ^.layer_011.pos - projI(^.layer_011.shape.size)
0.133	OUT SPE ^.layer_01.pos = ^.layer_01.pos - projI(^.layer_01.shape.size)
0.123	OUT SPE ^.layer_0.pos = ^.layer_0.pos - projI(^.layer_0.shape.size)
0.118	IN  SPE ^.layer_0.shape.color = yellow
0.113	IN  SPE ^.layer_01.shape.color = red
0.108	IN  SPE ^.layer_011.shape.color = blue
0.105	IN  SPE ^.layer_0.shape.mask = Full
0.102	IN  SPE ^.layer_01.shape.mask = Full
0.099	IN  SPE ^.layer_011.shape.mask = Full
0.097	OUT SPE ^.color = black
0.094	IN  SPE ^.color = black
0.007	
0.007	IN  GEN ^.layer_011.shape.color = ?
0.006	IN  GEN ^.layer_01.shape.color = ?
0.006	IN  GEN ^.layer_0.shape.color = ?
0.006	IN  GEN ^.layer_011.shape.mask = ?
0.006	IN  GEN ^.layer_01.shape.mask = ?
0.006	IN  GEN ^.layer_0.shape.mask = ?
0.006	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - projI(^.layer_0.shape.size)
  _01: ^.layer_01.shape at ^.layer_01.pos - projI(^.layer_01.shape.size)
  _011: ^.layer_011.shape at ^.layer_011.pos - projI(^.layer_011.shape.size)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 102.4 + 2917.1 = 3019.5
DL output with Mo: L = 118.0 + 0.0 = 118.0
DL input+output M: L = 220.4 + 2917.1 = 3137.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - projI(^.layer_0.shape.size)
  _01: ^.layer_01.shape at ^.layer_01.pos - projI(^.layer_01.shape.size)
  _011: ^.layer_011.shape at ^.layer_011.pos - projI(^.layer_011.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 118.0 + 0.0 = 118.0
DL input+output M: L = 207.3 + 0.0 = 207.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (11,9)
  _01: a rectangle with size (2,4) and color red and mask Full at (13,4)
  _011: a rectangle with size (4,2) and color blue and mask Full at (11,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (7,9)
  _01: a rectangle with size (2,4) and color red and mask Full at (11,4)
  _011: a rectangle with size (4,2) and color blue and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (11,9)
  _01: a rectangle with size (2,4) and color red and mask Full at (13,4)
  _011: a rectangle with size (4,2) and color blue and mask Full at (11,1)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask Full at (9,1)
  _01: a rectangle with size (5,2) and color red and mask Full at (10,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (5,2) and color red and mask Full at (5,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (11,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask Full at (9,1)
  _01: a rectangle with size (5,2) and color red and mask Full at (10,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (12,11)
  _01: a rectangle with size (1,4) and color red and mask Full at (14,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (11,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (9,11)
  _01: a rectangle with size (1,4) and color red and mask Full at (13,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (12,11)
  _01: a rectangle with size (1,4) and color red and mask Full at (14,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (11,7)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,4) and color red and mask Full at (8,0)
  _01: a rectangle with size (6,3) and color yellow and mask Full at (9,5)
  _011: a rectangle with size (3,5) and color blue and mask Full at (12,10)
diff: 
delta:
correct output grid

TEST 5521c0d9.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-272] Checking task 5582e5ca.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6894.9 = 6907.5
DL output with Mo: L = 12.6 + 658.5 = 671.1
DL input+output M: L = 25.2 + 7553.4 = 7578.6

# learning a model for train pairs
2.000	
1.415	OUT SPE ^.size = ^.size
1.016	OUT SPE ^.color = ^.color
0.833	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.483	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.469	IN  SPE ^.layer_0.shape.mask = Full
0.030	
0.026	IN  DEL ^.layer_0
0.023	IN  DEL ^.layer_01
0.020	IN  DEL ^.layer_0111
0.018	IN  DEL ^.layer_011

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 96.6 + 3029.8 = 3126.4
DL output with Mo: L = 10.8 + 0.0 = 10.8
DL input+output M: L = 107.4 + 3029.8 = 3137.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 10.8 + 0.0 = 10.8
DL input+output M: L = 23.4 + 0.0 = 23.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,2)=8  (1,0)=6  (1,2)=3  (2,0)=6  (2,1)=3  (2,2)=0 
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,2)=8  (1,0)=6  (1,2)=3  (2,0)=6  (2,1)=3  (2,2)=0 
correct output grid

TRAIN 5582e5ca.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=6  (0,1)=8  (1,0)=1  (1,1)=8  (1,2)=1  (2,1)=4 
   (0.0 bits)
data: a background with size (3,3) and color brown and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=6  (0,1)=8  (1,0)=1  (1,1)=8  (1,2)=1  (2,1)=4 
correct output grid

TRAIN 5582e5ca.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,0)=4  (0,2)=9# (1,1)=4  (1,2)=1  (2,0)=8  (2,1)=8 
   (0.0 bits)
data: a background with size (3,3) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,0)=4  (0,2)=9# (1,1)=4  (1,2)=1  (2,0)=8  (2,1)=8 
correct output grid

TRAIN 5582e5ca.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,2)=6  (1,0)=4  (1,1)=6  (1,2)=9# (2,1)=3  (2,2)=0 
correct output grid

TEST 5582e5ca.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-271] Checking task 5614dbcf.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26455.8 = 26468.4
DL output with Mo: L = 12.6 + 2752.0 = 2764.6
DL input+output M: L = 25.2 + 29207.8 = 29233.0

# learning a model for train pairs
2.000	
1.774	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.576	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.430	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.279	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.177	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	OUT SPE ^.size = ^.layer_0.shape.size
0.839	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.799	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.748	OUT SPE ^.layer_01.pos = ^.layer_01.pos / '3
0.696	OUT SPE ^.layer_0.pos = ^.layer_0.pos / '3
0.679	OUT SPE ^.color = black
0.663	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.651	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.638	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.633	IN  SPE ^.layer_0111.shape.mask = Full
0.629	IN  SPE ^.layer_011111.shape.color = grey
0.624	IN  SPE ^.layer_0111111.shape.color = grey
0.620	IN  SPE ^.layer_01111111.shape.color = grey
0.618	IN  SPE ^.layer_0.shape.mask = Full
0.615	IN  SPE ^.layer_011.shape.mask = Full
0.613	IN  SPE ^.layer_01111.shape.mask = Full
0.611	IN  SPE ^.color = black
0.417	
0.416	IN  DEL ^.layer_01111
0.415	IN  DEL ^.layer_0111
0.414	IN  DEL ^.layer_011
0.414	IN  DEL ^.layer_01111111
0.413	IN  DEL ^.layer_0111111
0.412	IN  DEL ^.layer_011111
0.412	IN  GEN ^.layer_0.shape.mask = ?
0.412	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos / '3
  _01: a point with color ^.layer_01.shape.color at ^.layer_01.pos / '3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a point with color grey at (?,?)
  _0111111: a point with color grey at (?,?)
  _01111111: a point with color grey at (?,?)

DL input  with Mi: L = 198.9 + 5125.1 = 5324.0
DL output with Mo: L = 81.7 + 1051.3 = 1133.0
DL input+output M: L = 280.7 + 6176.4 = 6457.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos / '3
  _01: a point with color ^.layer_01.shape.color at ^.layer_01.pos / '3
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 81.7 + 1051.3 = 1133.0
DL input+output M: L = 145.9 + 1051.3 = 1197.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,6)
diff: 
delta: (1,7)=5# (3,3)=7# (3,4)=5# (3,5)=7# (4,3)=7# (4,4)=7# (4,5)=7# (5,3)=7# (5,4)=7# (5,5)=7# (6,0)=6  (6,1)=6  (6,2)=6  (6,5)=5# (6,6)=9# (6,7)=9# (6,8)=9# (7,0)=6  (7,1)=6  (7,2)=6  (7,6)=9# (7,7)=9# (7,8)=9# (8,0)=6  (8,1)=5# (8,2)=6  (8,4)=5# (8,6)=9# (8,7)=9# (8,8)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color cyan at (0,2)
diff: 
delta: (1,1)=7# (2,0)=6  (2,2)=9#
   (105.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,6)
diff: 
delta: (1,7)=5# (3,3)=7# (3,4)=5# (3,5)=7# (4,3)=7# (4,4)=7# (4,5)=7# (5,3)=7# (5,4)=7# (5,5)=7# (6,0)=6  (6,1)=6  (6,2)=6  (6,5)=5# (6,6)=9# (6,7)=9# (6,8)=9# (7,0)=6  (7,1)=6  (7,2)=6  (7,6)=9# (7,7)=9# (7,8)=9# (8,0)=6  (8,1)=5# (8,2)=6  (8,4)=5# (8,6)=9# (8,7)=9# (8,8)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (3,3)
diff: 
delta: (0,6)=8  (0,7)=8  (0,8)=8  (1,6)=8  (1,7)=5# (1,8)=8  (2,6)=8  (2,7)=8  (2,8)=8  (3,4)=5# (6,0)=6  (6,1)=6  (6,2)=6  (6,5)=5# (6,6)=9# (6,7)=9# (6,8)=9# (7,0)=6  (7,1)=6  (7,2)=6  (7,6)=9# (7,7)=9# (7,8)=9# (8,0)=6  (8,1)=5# (8,2)=6  (8,4)=5# (8,6)=9# (8,7)=9# (8,8)=5#
! 3 wrong pixels (generated / expected)

TRAIN 5614dbcf.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,3)
diff: 
delta: (1,1)=5# (3,0)=5# (4,3)=5# (4,7)=5# (6,1)=5# (7,5)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color orange at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,3)
diff: 
delta: (1,1)=5# (3,0)=5# (4,3)=5# (4,7)=5# (6,1)=5# (7,5)=5#
correct output grid

TRAIN 5614dbcf.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta: (0,7)=5# (1,0)=5# (2,4)=5# (3,7)=5# (6,2)=5# (6,3)=9# (6,4)=9# (6,5)=9# (7,3)=9# (7,4)=5# (7,5)=9# (8,3)=9# (8,4)=9# (8,5)=9#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color brown and mask Full at (6,3)
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,7)=5# (1,0)=5# (1,1)=4  (1,2)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=5# (3,7)=5# (6,2)=5# (7,4)=5#
! 1 wrong pixels (generated / expected)

TEST 5614dbcf.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.0 sec (8.0 sec/task)
bits-train-error = 1051.3 bits (1051.3 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-270] Checking task 56dc2b01.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16349.7 = 16362.4
DL output with Mo: L = 12.6 + 21529.9 = 21542.5
DL input+output M: L = 25.2 + 37879.6 = 37904.8

# learning a model for train pairs
2.000	
1.463	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.998	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.732	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.490	OUT ADD ^.layer_01 = ^.layer_01
0.288	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.261	OUT SPE ^.layer_011.shape = coloring(^.layer_01.shape, cyan)
0.234	OUT SPE ^.size = ^.size
0.220	OUT SPE ^.layer_0.pos = ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_01)
0.210	IN  SPE ^.layer_0.shape.color = green
0.199	IN  SPE ^.layer_01.shape.color = red
0.193	IN  SPE ^.layer_01.shape.mask = Full
0.187	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j / '2
0.183	IN  SPE ^.color = black
0.180	OUT SPE ^.color = black
0.018	
0.018	IN  GEN ^.layer_01.shape.color = ?
0.017	IN  GEN ^.layer_0.shape.color = ?
0.017	IN  GEN ^.layer_01.shape.mask = ?
0.017	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_01)
  _01: ^.layer_01
  _011: coloring(^.layer_01.shape, cyan) at (?,^.layer_01.pos.j / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 72.0 + 2647.7 = 2719.7
DL output with Mo: L = 115.7 + 171.4 = 287.2
DL input+output M: L = 187.7 + 2819.1 = 3006.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_01)
  _01: ^.layer_01
  _011: coloring(^.layer_01.shape, cyan) at (?,^.layer_01.pos.j / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 115.7 + 171.4 = 287.2
DL input+output M: L = 180.0 + 171.4 = 351.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,6)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (0,5)
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
diff: 
delta:
correct output grid

TRAIN 56dc2b01.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (10,0)
diff: 
delta:
   (6.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (15,0)
  _01: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
diff: 
delta:
! 41 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (4,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (7,0)
diff: 
delta:
   (6.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (3,0)
  _01: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
diff: 
delta:
! 42 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask Full at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta: (12,1)=0  (12,2)=0  (13,2)=0 
! 13 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask .xx|x.x|xxx|x.. at (0,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (4,3) and color green and mask .xx|x.x|xxx|x.. at (0,11)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (0,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,11)=0  (1,12)=0  (3,12)=0  (3,13)=0 
! 12 wrong pixels (generated / expected)

TEST 56dc2b01.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 171.4 bits (171.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-269] Checking task 56ff96f3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5439.9 = 5452.5
DL output with Mo: L = 12.6 + 36299.6 = 36312.3
DL input+output M: L = 25.2 + 41739.5 = 41764.8

# learning a model for train pairs
2.000	
1.301	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.149	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.993	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.971	OUT SPE ^.layer_0.shape = scaleTo(^.layer_0.shape, span(^.layer_0.pos, ^.layer_01.pos))
0.950	OUT SPE ^.size = ^.size
0.932	IN  SPE ^.color = black
0.920	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos) + (0, 1)
0.917	OUT SPE ^.color = black
0.252	
0.252	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_0.shape, span(^.layer_0.pos, ^.layer_01.pos)) at projI(^.layer_0.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 3648.4 = 3694.2
DL output with Mo: L = 78.4 + 8629.0 = 8707.5
DL input+output M: L = 124.2 + 12277.5 = 12401.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_0.shape, span(^.layer_0.pos, ^.layer_01.pos)) at projI(^.layer_0.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 20.0 = 65.6
DL output with Mo: L = 78.4 + 8629.0 = 8707.5
DL input+output M: L = 124.1 + 8649.0 = 8773.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,1)
diff: 
delta: (5,3)=2  (7,7)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask Full at (1,1)
diff: 
delta: (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2  (6,7)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2 
   (565.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,1)
diff: 
delta: (5,3)=2  (7,7)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color red at (5,3)
diff: 
delta: (3,1)=1  (7,7)=2 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color blue at (1,6)
diff: 
delta: (5,3)=2  (7,7)=2 
! 35 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,2)
diff: 
delta: (3,7)=7# (4,4)=7#
   (2.0 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask Full at (1,1)
diff: 
delta: (3,4)=7# (3,5)=7# (3,6)=7# (3,7)=7# (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7#
   (297.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta: (4,2)=3  (4,4)=7#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,2)
diff: 
delta: (3,7)=7# (4,4)=7#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  _0: a point with color orange at (3,7)
  _01: a point with color green at (1,1)
diff: 
delta: (4,2)=3  (4,4)=7#
! 17 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color yellow at (6,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color yellow at (6,5)
diff: 
delta:
correct output grid

TRAIN 56ff96f3.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (3,7) and color orange and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta:
correct output grid

TRAIN 56ff96f3.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color cyan at (1,2)
diff: 
delta: (4,5)=6  (7,1)=6 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color pink at (4,5)
diff: 
delta: (1,2)=8  (7,1)=6 
! 43 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (1,2)
  _01: a point with color cyan at (0,0)
diff: 
delta: (4,5)=6  (7,1)=6 
! 28 wrong pixels (generated / expected)

TEST 56ff96f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 8629.0 bits (8629.0 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-268] Checking task 57aa92db.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26034.1 = 26046.8
DL output with Mo: L = 12.6 + 60534.5 = 60547.1
DL input+output M: L = 25.2 + 86568.7 = 86593.9

# learning a model for train pairs
2.000	
1.409	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.138	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.919	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.740	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.603	OUT ADD ^.layer_01 = ^.layer_0
0.499	OUT ADD ^.layer_011 = ^.layer_011
0.453	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.438	OUT SPE ^.size = ^.size
0.431	IN  SPE ^.layer_01.shape.mask = Full
0.399	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.394	OUT SPE ^.layer_0111.shape.size.i = ^.layer_01.shape.size.i * '3
0.390	IN  SPE ^.color = black
0.387	OUT SPE ^.layer_0111.pos.i = max(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.i
0.385	OUT SPE ^.color = black
0.100	
0.099	IN  DEL ^.layer_0110
0.099	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: a rectangle with size (^.layer_01.shape.size.i * '3,?) and color ? and mask ? at (max(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 106.0 + 7517.7 = 7623.7
DL output with Mo: L = 158.0 + 5457.0 = 5615.0
DL input+output M: L = 264.0 + 12974.8 = 13238.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: a rectangle with size (^.layer_01.shape.size.i * '3,?) and color ? and mask ? at (max(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 60.0 = 150.3
DL output with Mo: L = 158.0 + 5457.0 = 5615.0
DL input+output M: L = 248.3 + 5517.0 = 5765.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
diff: 
delta: (2,4)=1 
   (2.0 bits)
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _0111: a rectangle with size (6,4) and color yellow and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (7,3)
diff: 
delta:
   (75.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
diff: 
delta: (2,4)=1 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
diff: 
delta: (2,4)=1 
! 33 wrong pixels (generated / expected)

TRAIN 57aa92db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
diff: 
delta: (7,11)=6  (12,5)=2  (12,6)=3 
   (0.0 bits)
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|..x at (11,6)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
  _0111: a rectangle with size (3,3) and color pink and mask ..x|xxx|..x at (6,11)
diff: 
delta: (2,2)=2  (12,5)=2 
   (160.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
diff: 
delta: (7,11)=6  (12,5)=2  (12,6)=3 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color pink and mask Full at (7,11)
diff: 
delta: (7,10)=2  (12,5)=2  (12,6)=3 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (7,10)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta: (7,11)=6  (12,5)=2  (12,6)=3 
! 20 wrong pixels (generated / expected)

TRAIN 57aa92db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
diff: 
delta: (3,3)=4 
   (2.0 bits)
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _0111: a rectangle with size (9,9) and color cyan and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxx...xxx|xxx...xxx|xxx...xxx|xxx...xxx|xxx...xxx|xxx...xxx at (7,6)
diff: 
delta:
   (119.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
diff: 
delta: (3,3)=4 
! 86 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
diff: 
delta: (3,3)=4 
! 86 wrong pixels (generated / expected)

TRAIN 57aa92db.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
diff: 
delta: (2,4)=3  (2,5)=2  (4,14)=2 
   (2.0 bits)
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xx.|..x at (1,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0111: a rectangle with size (6,6) and color yellow and mask ....xx|....xx|xxxx..|xxxx..|....xx|....xx at (7,2)
diff: 
delta: (2,5)=2  (4,14)=2 
   (190.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
diff: 
delta: (2,4)=3  (2,5)=2  (4,14)=2 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
diff: 
delta: (2,4)=3  (2,5)=2  (4,14)=2 
! 38 wrong pixels (generated / expected)

TRAIN 57aa92db.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (3,10)
diff: 
delta: (2,4)=8  (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,13)=1  (3,14)=1  (3,15)=1  (4,3)=8  (4,4)=8  (4,13)=1  (4,14)=1  (4,15)=1  (5,13)=1  (5,14)=1  (5,15)=1  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 213 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,13)
diff: 
delta: (2,4)=8  (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,10)=4  (3,11)=4  (3,12)=4  (4,3)=8  (4,4)=8  (4,10)=4  (4,11)=4  (4,12)=4  (5,10)=4  (5,11)=4  (5,12)=4  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 213 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,10)
  _011: a rectangle with size (4,4) and color red and mask Full at (7,25)
diff: 
delta: (2,4)=8  (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,13)=1  (3,14)=1  (3,15)=1  (4,3)=8  (4,4)=8  (4,13)=1  (4,14)=1  (4,15)=1  (5,13)=1  (5,14)=1  (5,15)=1  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 200 wrong pixels (generated / expected)

TEST 57aa92db.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.7 sec (57.7 sec/task)
bits-train-error = 5457.0 bits (5457.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-267] Checking task 5ad4f10b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 138843.9 = 138856.5
DL output with Mo: L = 12.6 + 4434.5 = 4447.1
DL input+output M: L = 25.2 + 143278.4 = 143303.7

# learning a model for train pairs
2.000	
1.309	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.697	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	OUT SPE ^.layer_0.shape.mask = scaleTo(^.layer_0.shape.mask, '(3, 3))
0.520	OUT SPE ^.size = '(3, 3)
0.435	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.382	OUT SPE ^.layer_0.pos = '(0, 0)
0.362	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.327	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.310	OUT SPE ^.color = black
0.306	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.292	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.287	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.280	IN  ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.273	IN  ADD ^.layer_01001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.263	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.263	IN  SPE ^.color = black
0.023	
0.023	IN  DEL ^.layer_0111
0.023	IN  DEL ^.layer_0110
0.023	IN  DEL ^.layer_01001
0.022	IN  DEL ^.layer_0100
0.022	IN  DEL ^.layer_011
0.022	IN  DEL ^.layer_010
0.022	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color ^.layer_01.shape.color and mask scaleTo(^.layer_0.shape.mask, '(3, 3)) at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 194.3 + 33248.6 = 33442.8
DL output with Mo: L = 96.7 + 0.0 = 96.7
DL input+output M: L = 290.9 + 33248.6 = 33539.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color ^.layer_01.shape.color and mask scaleTo(^.layer_0.shape.mask, '(3, 3)) at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 96.7 + 0.0 = 96.7
DL input+output M: L = 160.9 + 0.0 = 160.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,24) and color black and layers
  _0: a rectangle with size (12,12) and color yellow and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxx....|....xxxx....|....xxxx....|....xxxx....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,9)
diff: 
delta: (0,23)=8  (1,21)=8  (2,1)=8  (2,18)=8  (2,20)=8  (3,7)=8  (3,21)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,19)=8  (11,20)=8  (11,22)=8  (12,17)=8  (13,19)=8  (14,0)=8  (14,17)=8  (14,20)=8  (15,15)=8  (15,16)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,0)=8  (19,1)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.x.|xxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,24) and color black and layers
  _0: a rectangle with size (12,12) and color yellow and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxx....|....xxxx....|....xxxx....|....xxxx....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,9)
diff: 
delta: (0,23)=8  (1,21)=8  (2,1)=8  (2,18)=8  (2,20)=8  (3,7)=8  (3,21)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,19)=8  (11,20)=8  (11,22)=8  (12,17)=8  (13,19)=8  (14,0)=8  (14,17)=8  (14,20)=8  (15,15)=8  (15,16)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,0)=8  (19,1)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
correct output grid

TRAIN 5ad4f10b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (22,23) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx......|xxx......|xxx...... at (1,10)
  _01: a rectangle with size (2,5) and color red and mask Even Checkboard at (5,8)
diff: 
delta: (0,2)=2  (1,5)=2  (1,21)=2  (2,5)=2  (3,1)=2  (4,1)=2  (4,2)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,7)=2  (8,22)=2  (9,6)=2  (9,15)=2  (9,16)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,4)=2  (12,5)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,23) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx......|xxx......|xxx...... at (1,10)
  _01: a rectangle with size (2,5) and color red and mask Even Checkboard at (5,8)
diff: 
delta: (0,2)=2  (1,5)=2  (1,21)=2  (2,5)=2  (3,1)=2  (4,1)=2  (4,2)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,7)=2  (8,22)=2  (9,6)=2  (9,15)=2  (9,16)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,4)=2  (12,5)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
correct output grid

TRAIN 5ad4f10b.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (24,23) and color black and layers
  _0: a rectangle with size (15,15) and color pink and mask .....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (5,2)
  _01: a rectangle with size (2,1) and color green and mask Full at (10,3)
diff: 
delta: (0,1)=3  (1,6)=3  (1,15)=3  (2,0)=3  (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (17,8)=3  (18,8)=3  (23,21)=3 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|.xx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,23) and color black and layers
  _0: a rectangle with size (15,15) and color pink and mask .....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (5,2)
  _01: a rectangle with size (2,1) and color green and mask Full at (10,3)
diff: 
delta: (0,1)=3  (1,6)=3  (1,15)=3  (2,0)=3  (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (17,8)=3  (18,8)=3  (23,21)=3 
correct output grid

TRAIN 5ad4f10b.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,26) and color black and layers
  _0: a rectangle with size (12,12) and color cyan and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxxxxxx|....xxxxxxxx|....xxxxxxxx|....xxxxxxxx|........xxxx|........xxxx|........xxxx|........xxxx at (4,2)
  _01: a rectangle with size (2,5) and color yellow and mask .x..x|x.xx. at (15,1)
diff: 
delta: (0,21)=4  (1,3)=4  (1,10)=4  (1,23)=4  (2,8)=4  (2,13)=4  (2,18)=4  (2,19)=4  (2,20)=4  (2,21)=4  (3,4)=4  (3,9)=4  (3,12)=4  (4,19)=4  (6,22)=4  (7,14)=4  (7,21)=4  (7,23)=4  (9,15)=4  (9,16)=4  (9,24)=4  (11,1)=4  (12,1)=4  (12,4)=4  (12,9)=4  (13,2)=4  (13,25)=4  (14,0)=4  (14,8)=4  (14,19)=4  (15,17)=4  (15,19)=4  (15,25)=4  (16,9)=4  (16,11)=4  (16,16)=4  (17,17)=4  (18,4)=4  (18,13)=4  (18,16)=4  (18,21)=4  (18,25)=4  (19,8)=4  (19,11)=4  (21,11)=4  (21,14)=4  (21,15)=4  (21,20)=4 
correct output grid

TEST 5ad4f10b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-266] Checking task 5bd6f4ac.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42931.4 = 42944.0
DL output with Mo: L = 12.6 + 7221.5 = 7234.1
DL input+output M: L = 25.2 + 50152.9 = 50178.1

# learning a model for train pairs
2.000	
1.854	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.740	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.624	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.553	OUT SPE ^.size = '(3, 3)
1.484	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.442	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.418	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.395	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.367	OUT SPE ^.layer_0.shape.color = ^.layer_0111.shape.color
1.329	OUT SPE ^.layer_0.shape.size = min(^.layer_0.shape.size, ^.layer_0111.shape.size)
1.307	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.286	OUT SPE ^.layer_011.pos.i = 1
1.266	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.i
1.245	IN  ADD ^.layer_00 = a point with color ? at (?,?)
1.226	OUT SPE ^.layer_01.pos.i = ^.layer_011.pos.i
1.208	OUT SPE ^.layer_0.shape.mask = Full
1.190	OUT SPE ^.layer_0.pos.i = ^.layer_01111.pos.j - 2
1.174	OUT SPE ^.layer_01.pos.j = right(^.layer_01111) / '2
1.160	OUT SPE ^.color = black
1.157	IN  SPE ^.layer_01.shape.mask = Full
1.155	IN  SPE ^.color = black
0.364	
0.364	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_0111.shape.size) and color ^.layer_0111.shape.color and mask Full at (^.layer_01111.pos.j - 2,?)
  _01: a point with color ? at (^.layer_011.pos.i,right(^.layer_01111) / '2)
  _011: a point with color ? at (1,^.layer_011.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 155.4 + 34023.1 = 34178.5
DL output with Mo: L = 218.8 + 2376.7 = 2595.5
DL input+output M: L = 374.2 + 36399.9 = 36774.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_0111.shape.size) and color ^.layer_0111.shape.color and mask Full at (^.layer_01111.pos.j - 2,?)
  _01: a point with color ? at (^.layer_011.pos.i,right(^.layer_01111) / '2)
  _011: a point with color ? at (1,^.layer_011.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 155.3 + 71.7 = 227.0
DL output with Mo: L = 218.8 + 2376.7 = 2595.5
DL input+output M: L = 374.0 + 2448.4 = 2822.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (1,6)
  _01111: a rectangle with size (1,2) and color brown and mask Full at (6,3)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,7)=8  (1,8)=4  (2,1)=7# (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (1,0)
  _01: a point with color yellow at (1,2)
  _011: a point with color cyan at (1,1)
diff: 
delta: (0,0)=9# (0,1)=7#
   (85.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _0111: a rectangle with size (1,2) and color brown and mask Full at (6,3)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (1,6)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,7)=8  (1,8)=4  (2,1)=7# (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (1,6)
  _01111: a rectangle with size (1,2) and color brown and mask Full at (6,3)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,7)=8  (1,8)=4  (2,1)=7# (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color brown and mask Full at (6,3)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (1,6)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,7)=8  (1,8)=4  (2,1)=7# (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 6 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _011: a rectangle with size (2,2) and color orange and mask Even Checkboard at (1,3)
  _0111: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,3)
  _01111: a rectangle with size (2,2) and color red and mask Even Checkboard at (4,4)
diff: 
delta: (0,7)=6  (1,1)=4  (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,5)=1  (2,8)=5# (3,1)=6  (4,0)=8  (4,1)=3  (4,7)=9# (5,2)=2  (5,3)=3  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a point with color blue at (1,2)
  _011: a point with color cyan at (1,1)
diff: 
delta: (0,1)=6  (2,2)=5#
   (85.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
  _011: a rectangle with size (2,2) and color orange and mask Even Checkboard at (1,3)
  _0111: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,3)
  _01111: a rectangle with size (2,2) and color red and mask Even Checkboard at (4,4)
diff: 
delta: (0,7)=6  (1,1)=4  (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,5)=1  (2,8)=5# (3,1)=6  (4,0)=8  (4,1)=3  (4,7)=9# (5,2)=2  (5,3)=3  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _011: a rectangle with size (2,2) and color orange and mask Even Checkboard at (1,3)
  _0111: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,3)
  _01111: a rectangle with size (2,2) and color red and mask Even Checkboard at (4,4)
diff: 
delta: (0,7)=6  (1,1)=4  (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,5)=1  (2,8)=5# (3,1)=6  (4,0)=8  (4,1)=3  (4,7)=9# (5,2)=2  (5,3)=3  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 4 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,4)
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,5)
  _0111: a rectangle with size (1,1) and color pink and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (1,3)
diff: 
delta: (1,8)=1  (2,1)=3  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (3,5)=0  (4,1)=9# (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _01: a point with color yellow at (2,1)
  _011: a point with color blue at (1,2)
diff: 
delta: (2,0)=9#
   (50.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,4)
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,3)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (1,6)
diff: 
delta: (1,8)=1  (2,1)=3  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (3,5)=0  (4,1)=9# (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,4)
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,5)
  _0111: a rectangle with size (1,1) and color pink and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (1,3)
diff: 
delta: (1,8)=1  (2,1)=3  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (3,5)=0  (4,1)=9# (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! 3 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (1,1) and color green and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta: (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,2)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,0)
diff: 
delta:
   (15.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (1,1) and color green and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta: (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (1,6)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (0,8)
  _01111: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta: (2,5)=1  (2,6)=0  (2,8)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (1,6)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (0,8)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (2,5)
diff: 
delta: (2,4)=2  (2,6)=0  (2,8)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 3 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color brown and mask ...x|..x.|xx.. at (0,5)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,0)
  _011: a rectangle with size (2,3) and color orange and mask xx.|..x at (4,0)
  _0111: a rectangle with size (2,1) and color brown and mask Full at (0,1)
  _01111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (5,5)
diff: 
delta: (0,4)=1  (0,6)=5# (0,7)=8  (1,0)=2  (1,3)=6  (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,2)=4  (4,4)=7# (4,6)=9# (5,5)=1  (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color brown and mask ...x|..x.|xx.. at (0,5)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,0)
  _011: a rectangle with size (2,3) and color orange and mask xx.|..x at (4,0)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (5,5)
  _01111: a rectangle with size (2,1) and color brown and mask Full at (0,1)
diff: 
delta: (0,4)=1  (0,6)=5# (0,7)=8  (1,0)=2  (1,3)=6  (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,2)=4  (4,4)=7# (4,6)=9# (5,5)=1  (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! 5 wrong pixels (generated / expected)

TEST 5bd6f4ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.2 sec (11.2 sec/task)
bits-train-error = 2376.7 bits (2376.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-265] Checking task 5c0a986e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9786.3 = 9798.9
DL output with Mo: L = 12.6 + 18016.8 = 18029.4
DL input+output M: L = 25.2 + 27803.1 = 27828.3

# learning a model for train pairs
2.000	
1.633	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.896	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.524	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.491	OUT SPE ^.size = ^.size
0.474	IN  SPE ^.layer_0.shape.color = red
0.455	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.214	
0.212	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 2356.2 = 2423.8
DL output with Mo: L = 57.8 + 3679.4 = 3737.1
DL input+output M: L = 125.3 + 6035.6 = 6160.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 0.0 = 42.2
DL output with Mo: L = 57.8 + 3679.4 = 3737.1
DL input+output M: L = 99.9 + 3679.4 = 3779.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,4)
diff: 
delta: (2,2)=1  (2,3)=1  (3,2)=1  (3,3)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..x.|...x at (6,4)
  _01: a rectangle with size (4,4) and color blue and mask x...|.x..|..xx|..xx at (0,0)
diff: 
delta:
   (97.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,4)
diff: 
delta: (2,2)=1  (2,3)=1  (3,2)=1  (3,3)=1 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff:   ^.layer_0.shape.color
delta: (6,4)=2  (6,5)=2  (7,4)=2  (7,5)=2 
! 14 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,2)
diff: 
delta: (7,6)=1  (7,7)=1  (8,6)=1  (8,7)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xx......|xx......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,2)
  _01: a rectangle with size (8,8) and color blue and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......xx|......xx at (1,0)
diff: 
delta:
   (157.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,2)
diff: 
delta: (7,6)=1  (7,7)=1  (8,6)=1  (8,7)=1 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff:   ^.layer_0.shape.color
delta: (0,2)=2  (0,3)=2  (1,2)=2  (1,3)=2 
! 23 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
diff: 
delta: (5,3)=1  (5,4)=1  (6,3)=1  (6,4)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask xx...|xx...|..x..|...x.|....x at (2,5)
  _01: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...xx|...xx at (2,0)
diff: 
delta:
   (113.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
diff: 
delta: (5,3)=1  (5,4)=1  (6,3)=1  (6,4)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff:   ^.layer_0.shape.color
delta: (2,5)=2  (2,6)=2  (3,5)=2  (3,6)=2 
! 18 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (5,2)
diff: 
delta: (3,6)=1  (3,7)=1  (4,6)=1  (4,7)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (3,6)
diff:   ^.layer_0.shape.color
delta: (5,2)=2  (5,3)=2  (6,2)=2  (6,3)=2 
! 18 wrong pixels (generated / expected)

TEST 5c0a986e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.4 sec (55.4 sec/task)
bits-train-error = 3679.4 bits (3679.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-264] Checking task 5c2c9af4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4498.8 = 4511.4
DL output with Mo: L = 12.6 + 212663.9 = 212676.5
DL input+output M: L = 25.2 + 217162.7 = 217188.0

# learning a model for train pairs
2.000	
1.706	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.489	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.293	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.157	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.018	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.873	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.765	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.759	OUT ADD ^.layer_010 = ^.layer_01
0.701	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.638	IN  SPE ^.color = black
0.634	OUT SPE ^.size = ^.size
0.633	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.633	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.632	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.631	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.j
0.630	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
0.629	OUT SPE ^.layer_01111.shape.color = ^.layer_011.shape.color
0.629	OUT SPE ^.layer_011111.shape.color = ^.layer_011.shape.color
0.628	OUT SPE ^.layer_01111.shape.size.i = 1
0.628	OUT SPE ^.layer_011.pos.j = min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2
0.627	OUT SPE ^.layer_0.shape.mask = Border
0.077	
0.077	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Border at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
  _0111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (^.layer_011.pos.j,?)
  _01111: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.5 + 2482.3 = 2543.8
DL output with Mo: L = 265.6 + 13111.6 = 13377.2
DL input+output M: L = 327.1 + 15593.9 = 15921.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Border at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
  _0111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (^.layer_011.pos.j,?)
  _01111: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 265.6 + 13111.6 = 13377.2
DL input+output M: L = 327.0 + 13111.6 = 13438.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
  _01: a point with color cyan at (5,14)
  _011: a point with color cyan at (8,17)
diff: 
delta:
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (7,7) and color cyan and mask Border at (2,11)
  _010: a point with color cyan at (5,14)
  _01: a rectangle with size (12,13) and color cyan and mask x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|xxxxxxxxxxxxx at (0,8)
  _011: a rectangle with size (15,18) and color cyan and mask x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|xxxxxxxxxxxxxxxxxx at (0,5)
  _0111: a rectangle with size (1,21) and color cyan and mask Full at (17,2)
  _01111: a rectangle with size (1,23) and color cyan and mask Full at (20,0)
  _011111: a rectangle with size (18,1) and color cyan and mask Full at (0,2)
diff: 
delta:
   (463.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
  _01: a point with color cyan at (5,14)
  _011: a point with color cyan at (8,17)
diff: 
delta:
! 160 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
  _01: a point with color cyan at (8,17)
  _011: a point with color cyan at (5,14)
diff: 
delta:
! 160 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (5,14)
  _01: a point with color cyan at (2,11)
  _011: a point with color cyan at (8,17)
diff: 
delta:
! 160 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
  _01: a point with color red at (13,11)
  _011: a point with color red at (15,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask Border at (5,3)
  _010: a point with color red at (13,11)
  _01: a rectangle with size (20,21) and color red and mask xxxxxxxxxxxxxxxxxxxxx|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x at (3,1)
  _011: a rectangle with size (13,13) and color red and mask Border at (7,5)
  _0111: a rectangle with size (9,9) and color red and mask Border at (9,7)
  _01111: a rectangle with size (1,23) and color red and mask Full at (1,0)
  _011111: a rectangle with size (5,5) and color red and mask Border at (11,9)
diff: 
delta:
   (461.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
  _01: a point with color red at (13,11)
  _011: a point with color red at (15,9)
diff: 
delta:
! 242 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
  _01: a point with color red at (15,9)
  _011: a point with color red at (13,11)
diff: 
delta:
! 242 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (13,11)
  _01: a point with color red at (11,13)
  _011: a point with color red at (15,9)
diff: 
delta:
! 242 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
  _01: a point with color green at (8,8)
  _011: a point with color green at (12,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (17,17) and color green and mask Border at (0,0)
  _010: a point with color green at (8,8)
  _01: a rectangle with size (21,21) and color green and mask ....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|....................x|xxxxxxxxxxxxxxxxxxxxx at (0,0)
  _011: a rectangle with size (1,9) and color green and mask Full at (4,4)
  _0111: a rectangle with size (9,1) and color green and mask Full at (4,4)
  _01111: a rectangle with size (1,9) and color green and mask Full at (12,4)
  _011111: a rectangle with size (9,1) and color green and mask Full at (4,12)
diff: 
delta:
   (385.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
  _01: a point with color green at (8,8)
  _011: a point with color green at (12,4)
diff: 
delta:
! 135 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
  _01: a point with color green at (12,4)
  _011: a point with color green at (8,8)
diff: 
delta:
! 135 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (8,8)
  _01: a point with color green at (4,12)
  _011: a point with color green at (12,4)
diff: 
delta:
! 135 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color black and layers
  _0: a point with color yellow at (12,7)
  _01: a point with color yellow at (18,13)
  _011: a point with color yellow at (24,19)
diff: 
delta:
! 143 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (28,28) and color black and layers
  _0: a point with color yellow at (12,7)
  _01: a point with color yellow at (24,19)
  _011: a point with color yellow at (18,13)
diff: 
delta:
! 143 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (28,28) and color black and layers
  _0: a point with color yellow at (18,13)
  _01: a point with color yellow at (12,7)
  _011: a point with color yellow at (24,19)
diff: 
delta:
! 143 wrong pixels (generated / expected)

TEST 5c2c9af4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 13111.6 bits (13111.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-263] Checking task 5daaa586.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 90804.6 = 90817.2
DL output with Mo: L = 12.6 + 58430.9 = 58443.5
DL input+output M: L = 25.2 + 149235.5 = 149260.7

# learning a model for train pairs
2.000	
1.590	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.381	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.193	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.672	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.503	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.371	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.352	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.332	IN  ADD ^.layer_0111110 = a point with color ? at (?,?)
0.326	OUT SPE ^.layer_011.pos = '(0, 0)
0.320	OUT SPE ^.layer_01.pos = '(0, 1)
0.318	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
0.316	OUT SPE ^.layer_011.shape.size.j = 1
0.314	OUT SPE ^.layer_011.shape.mask = Full
0.313	OUT SPE ^.layer_0111.shape.mask = Full
0.311	OUT SPE ^.layer_0.pos.i = middle(^.layer_0111) / colorCount(^.grid)
0.309	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.j - ^.layer_011110.pos.i - ^.layer_0.pos.i
0.308	OUT SPE ^.layer_0.pos.j = ^.layer_011110.pos.i + min(^.layer_01.shape.size.j, ^.layer_01111.shape.size.j)
0.307	IN  SPE ^.layer_01.shape.mask = Full
0.306	IN  SPE ^.layer_011.shape.mask = Full
0.304	IN  SPE ^.layer_0111.shape.mask = Full
0.304	IN  SPE ^.color = black
0.095	
0.095	IN  DEL ^.layer_011111
0.095	IN  GEN ^.layer_0111.shape.mask = ?
0.095	IN  GEN ^.layer_011.shape.mask = ?
0.095	IN  GEN ^.layer_01.shape.mask = ?
0.095	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (middle(^.layer_0111) / colorCount(^.grid),^.layer_011110.pos.i + min(^.layer_01.shape.size.j, ^.layer_01111.shape.size.j))
  _01: a rectangle with size (^.layer_01.shape.size.j - ^.layer_011110.pos.i - ^.layer_0.pos.i,?) and color ? and mask ? at '(0, 1)
  _011: a rectangle with size (?,1) and color ? and mask Full at '(0, 0)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111110: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 197.3 + 18915.5 = 19112.8
DL output with Mo: L = 315.3 + 5131.1 = 5446.4
DL input+output M: L = 512.6 + 24046.6 = 24559.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (middle(^.layer_0111) / colorCount(^.grid),^.layer_011110.pos.i + min(^.layer_01.shape.size.j, ^.layer_01111.shape.size.j))
  _01: a rectangle with size (^.layer_01.shape.size.j - ^.layer_011110.pos.i - ^.layer_0.pos.i,?) and color ? and mask ? at '(0, 1)
  _011: a rectangle with size (?,1) and color ? and mask Full at '(0, 0)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111110: a point with color ? at (?,?)

DL input  with Mi: L = 169.6 + 0.0 = 169.6
DL output with Mo: L = 315.3 + 5131.1 = 5446.4
DL input+output M: L = 484.9 + 5131.1 = 5615.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _011110: a point with color red at (0,9)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _0111110: a point with color red at (5,15)
diff: 
delta: (6,3)=2  (6,18)=2  (7,9)=2  (7,19)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
   (0.0 bits)
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (11,10) and color red and mask .........x|.........x|...x.....x|...x....xx|...x....xx|...x....xx|...x....xx|.x.x....xx|.x.x....xx|xx.x....xx|xxxxxxxxxx at (4,1)
  _01: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _011: a rectangle with size (15,1) and color green and mask Full at (0,0)
  _0111: a rectangle with size (15,1) and color cyan and mask Full at (0,11)
diff: 
delta:
   (228.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _011110: a point with color red at (0,9)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _0111110: a point with color red at (5,15)
diff: 
delta: (6,3)=2  (6,18)=2  (7,9)=2  (7,19)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
! size mismatch, 10x10 instead of 15x12

TRAIN 5daaa586.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,12) and color pink and mask Full at (9,0)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,2)
  _0111: a rectangle with size (1,12) and color cyan and mask Full at (2,0)
  _011110: a point with color cyan at (5,6)
  _01111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (10,6)
  _0111110: a point with color cyan at (5,11)
diff: 
delta: (6,3)=8  (6,6)=8  (8,7)=8  (8,11)=8  (11,1)=8 
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (0,7)
  _01: a rectangle with size (7,6) and color cyan and mask xxxxxx|x..xx.|x..xx.|x..xx.|x..xx.|....x.|....x. at (0,1)
  _011: a rectangle with size (7,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (1,7) and color pink and mask Full at (7,0)
diff: 
delta:
   (149.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,12) and color pink and mask Full at (9,0)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,2)
  _0111: a rectangle with size (1,12) and color cyan and mask Full at (2,0)
  _011110: a point with color cyan at (5,6)
  _01111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (10,6)
  _0111110: a point with color cyan at (5,11)
diff: 
delta: (6,3)=8  (6,6)=8  (8,7)=8  (8,11)=8  (11,1)=8 
! size mismatch, 10x10 instead of 8x8

TRAIN 5daaa586.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _011110: a point with color yellow at (0,2)
  _01111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
  _0111110: a point with color yellow at (0,7)
diff: 
delta: (4,14)=4  (6,0)=4  (6,4)=4  (6,5)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
   (0.0 bits)
data: a background with size (6,9) and color yellow and layers
  _0: a rectangle with size (3,7) and color black and mask xxxxxxx|xxxx...|xx..... at (2,1)
  _01: a rectangle with size (1,7) and color red and mask Full at (0,1)
  _011: a rectangle with size (6,1) and color green and mask Full at (0,0)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (5,1)
diff: 
delta:
   (135.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _011110: a point with color yellow at (0,2)
  _01111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
  _0111110: a point with color yellow at (0,7)
diff: 
delta: (4,14)=4  (6,0)=4  (6,4)=4  (6,5)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
! size mismatch, 10x10 instead of 6x9

TRAIN 5daaa586.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  _0: a rectangle with size (1,15) and color cyan and mask Full at (13,0)
  _01: a rectangle with size (13,3) and color blue and mask x..|x..|x..|x..|x..|x..|x..|x..|x..|xx.|x.x|x..|x.. at (0,3)
  _011: a rectangle with size (16,1) and color red and mask Full at (0,12)
  _0111: a rectangle with size (1,15) and color green and mask Full at (2,0)
  _011110: a point with color blue at (0,5)
  _01111: a rectangle with size (2,2) and color blue and mask xx|x. at (14,3)
  _0111110: a point with color blue at (0,9)
diff: 
delta: (1,7)=1  (3,0)=1  (4,5)=1  (4,10)=1  (5,0)=1  (6,8)=1  (6,14)=1  (7,10)=1  (8,9)=1  (9,1)=1  (10,7)=1  (11,1)=1  (15,6)=1 
! size mismatch, 10x10 instead of 12x10

TEST 5daaa586.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 40.0 sec (40.0 sec/task)
bits-train-error = 5131.1 bits (5131.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-262] Checking task 60b61512.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9806.1 = 9818.7
DL output with Mo: L = 12.6 + 13882.7 = 13895.3
DL input+output M: L = 25.2 + 23688.8 = 23714.0

# learning a model for train pairs
2.000	
1.558	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.185	OUT ADD ^.layer_0 = ^.layer_0
0.854	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	OUT ADD ^.layer_01 = ^.layer_01
0.417	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.377	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.349	OUT SPE ^.size = ^.size
0.334	OUT SPE ^.layer_011.pos = '(2, 0)
0.319	OUT SPE ^.layer_0111.pos = ^.layer_01.pos + (1, 0)
0.308	IN  SPE ^.layer_0.shape.color = yellow
0.297	IN  SPE ^.layer_01.shape.color = yellow
0.289	OUT SPE ^.layer_011.shape.color = orange
0.281	OUT SPE ^.layer_0111.shape.color = orange
0.273	OUT SPE ^.layer_0111.shape.size.i = 2
0.268	IN  SPE ^.color = black
0.264	OUT SPE ^.layer_011.shape.mask = Full
0.259	OUT SPE ^.layer_0111.shape.mask = Full
0.255	OUT SPE ^.layer_011.shape.size.i = area(^.layer_01.shape) / '3
0.251	OUT SPE ^.layer_011.shape.size.j = area(^.layer_01.shape) / '3
0.248	OUT SPE ^.color = black
0.056	
0.055	IN  GEN ^.layer_01.shape.color = ?
0.055	IN  GEN ^.layer_0.shape.color = ?
0.055	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (area(^.layer_01.shape) / '3,area(^.layer_01.shape) / '3) and color orange and mask Full at '(2, 0)
  _0111: a rectangle with size (2,?) and color orange and mask Full at ^.layer_01.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 1885.8 = 1956.8
DL output with Mo: L = 165.9 + 506.9 = 672.9
DL input+output M: L = 236.9 + 2392.7 = 2629.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (area(^.layer_01.shape) / '3,area(^.layer_01.shape) / '3) and color orange and mask Full at '(2, 0)
  _0111: a rectangle with size (2,?) and color orange and mask Full at ^.layer_01.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 165.9 + 506.9 = 672.9
DL input+output M: L = 230.2 + 506.9 = 737.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _011: a rectangle with size (2,2) and color orange and mask Full at (2,0)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (5,5)
diff: 
delta: (4,7)=7#
   (44.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (2,0)=4  (2,2)=4  (3,2)=4 
! 6 wrong pixels (generated / expected)

TRAIN 60b61512.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
  _011: a rectangle with size (1,1) and color orange and mask Full at (2,0)
  _0111: a rectangle with size (2,3) and color orange and mask Full at (5,5)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta: (2,0)=0 
! 3 wrong pixels (generated / expected)

TRAIN 60b61512.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (6,5)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 60b61512.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.9 sec (5.9 sec/task)
bits-train-error = 506.9 bits (506.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-261] Checking task 6150a2bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3782.5 = 3795.1
DL output with Mo: L = 12.6 + 3782.5 = 3795.1
DL input+output M: L = 25.2 + 7565.1 = 7590.3

# learning a model for train pairs
2.000	
1.004	OUT SPE ^ = applySym(rotate180, ^.grid)
0.698	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.479	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.462	IN  SPE ^.layer_0.shape.mask = Full
0.449	IN  SPE ^.color = black
0.023	
0.016	IN  DEL ^.layer_0
0.012	IN  DEL ^.layer_011
0.007	IN  DEL ^.layer_01
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(rotate180, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 71.8 + 1617.1 = 1688.9
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 86.7 + 1617.1 = 1703.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(rotate180, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (1,0)=3  (1,1)=7# (2,0)=5#
   (0.0 bits)
data: 
0 0 5#
0 7#3 
8 3 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (1,0)=3  (1,1)=7# (2,0)=5#
correct output grid

TRAIN 6150a2bd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=5# (0,1)=5# (0,2)=2  (1,0)=1 
   (0.0 bits)
data: 
0 0 0 
0 0 1 
2 5#5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=5# (0,1)=5# (0,2)=2  (1,0)=1 
correct output grid

TRAIN 6150a2bd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=6  (0,1)=3  (0,2)=5# (1,0)=6  (1,1)=8  (2,0)=4 
correct output grid

TEST 6150a2bd.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-260] Checking task 623ea044.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1886.6 = 1899.2
DL output with Mo: L = 12.6 + 21034.2 = 21046.8
DL input+output M: L = 25.2 + 22920.8 = 22946.0

# learning a model for train pairs
2.000	
1.210	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.829	IN  SPE ^.color = black
0.799	OUT SPE ^.size = ^.size
0.785	OUT SPE ^.layer_0.shape.size.i = ^.size.i
0.777	OUT SPE ^.layer_0.pos.i = '0
0.769	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.761	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.i - 3
0.758	OUT SPE ^.color = black
0.155	
0.155	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color ^.layer_0.shape.color and mask ? at ('0,^.layer_0.pos.i - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1145.2 = 1174.9
DL output with Mo: L = 70.0 + 2855.8 = 2925.8
DL input+output M: L = 99.7 + 4001.0 = 4100.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color ^.layer_0.shape.color and mask ? at ('0,^.layer_0.pos.i - 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 70.0 + 2855.8 = 2925.8
DL input+output M: L = 99.6 + 2855.8 = 2955.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a point with color red at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color red and mask x.....x........|.x...x.........|..x.x..........|...x...........|..x.x..........|.x...x.........|x.....x........|.......x.......|........x......|.........x.....|..........x....|...........x...|............x..|.............x.|..............x at (0,0)
diff: 
delta:
   (120.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (3,3)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 623ea044.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (5,11)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,13) and color orange and mask ....x........|.....x.......|......x.....x|.......x...x.|........x.x..|.........x...|........x.x..|.......x...x.|......x.....x|.....x.......|....x........|...x.........|..x..........|.x...........|x............ at (0,2)
diff: 
delta:
   (115.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (5,11)
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 623ea044.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,6) and color cyan and mask .....x|x...x.|.x.x..|..x...|.x.x..|x...x.|.....x at (0,0)
diff: 
delta:
   (50.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 623ea044.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a point with color pink at (7,12)
diff: 
delta:
! 53 wrong pixels (generated / expected)

TEST 623ea044.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 2855.8 bits (2855.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-259] Checking task 62c24649.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6488.3 = 6500.9
DL output with Mo: L = 12.6 + 25270.6 = 25283.2
DL input+output M: L = 25.2 + 31758.9 = 31784.1

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
0.801	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.613	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.485	IN  SPE ^.layer_011.shape.color = blue
0.460	IN  SPE ^.layer_0.shape.color = green
0.434	IN  SPE ^.layer_01.shape.color = red
0.419	IN  SPE ^.layer_011.shape.mask = Full
0.408	IN  SPE ^.color = black
0.016	
0.011	IN  DEL ^.layer_011
0.007	IN  DEL ^.layer_01
0.003	IN  DEL ^.layer_0
0.002	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 100.4 + 2545.3 = 2645.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 114.2 + 2545.3 = 2659.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color green and layers
diff: 
delta: (1,0)=0  (1,1)=2  (1,2)=2  (2,0)=1  (2,1)=1  (2,2)=0 
   (0.0 bits)
data: 
3 3 3 3 3 3 
0 2 2 2 2 0 
1 1 0 0 1 1 
1 1 0 0 1 1 
0 2 2 2 2 0 
3 3 3 3 3 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
diff: 
delta: (1,0)=0  (1,1)=2  (1,2)=2  (2,0)=1  (2,1)=1  (2,2)=0 
correct output grid

TRAIN 62c24649.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color green and layers
diff: 
delta: (0,2)=1  (1,0)=1  (1,2)=0  (2,0)=0  (2,1)=2  (2,2)=2 
   (0.0 bits)
data: 
3 3 1 1 3 3 
1 3 0 0 3 1 
0 2 2 2 2 0 
0 2 2 2 2 0 
1 3 0 0 3 1 
3 3 1 1 3 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
diff: 
delta: (0,2)=1  (1,0)=1  (1,2)=0  (2,0)=0  (2,1)=2  (2,2)=2 
correct output grid

TRAIN 62c24649.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=1  (1,1)=2  (1,2)=3  (2,1)=3 
   (0.0 bits)
data: 
2 1 0 0 1 2 
0 2 3 3 2 0 
0 3 0 0 3 0 
0 3 0 0 3 0 
0 2 3 3 2 0 
2 1 0 0 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=1  (1,1)=2  (1,2)=3  (2,1)=3 
correct output grid

TRAIN 62c24649.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (1,1)=3  (1,2)=2  (2,0)=3  (2,1)=3 
correct output grid

TEST 62c24649.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-258] Checking task 63613498.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29587.6 = 29600.2
DL output with Mo: L = 12.6 + 29587.6 = 29600.2
DL input+output M: L = 25.2 + 59175.2 = 59200.4

# learning a model for train pairs
2.000	
1.791	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.526	OUT ADD ^.layer_0 = ^.layer_0
1.400	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.273	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.123	OUT ADD ^.layer_011 = ^.layer_01
1.009	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.863	OUT ADD ^.layer_0111 = ^.layer_011
0.748	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.524	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.466	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.410	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.371	OUT SPE ^.layer_01 = ^.layer_010
0.333	OUT SPE ^.layer_01111 = coloring(^.layer_0111, grey)
0.313	OUT SPE ^.size = ^.size
0.301	OUT SPE ^.layer_011111.shape.size = ^.layer_0110.shape.size
0.290	OUT SPE ^.layer_011111.pos = ^.layer_0110.pos
0.282	OUT SPE ^.layer_011111.shape.mask = ^.layer_0110.shape.mask
0.280	IN  SPE ^.color = black
0.277	OUT SPE ^.color = black
0.018	
0.018	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_010
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: coloring(^.layer_0111, grey)
  _011111: a rectangle with size ^.layer_0110.shape.size and color ? and mask ^.layer_0110.shape.mask at ^.layer_0110.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.7 + 7758.1 = 7921.8
DL output with Mo: L = 122.2 + 169.3 = 291.5
DL input+output M: L = 285.9 + 7927.4 = 8213.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_010
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: coloring(^.layer_0111, grey)
  _011111: a rectangle with size ^.layer_0110.shape.size and color ? and mask ^.layer_0110.shape.mask at ^.layer_0110.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 63.4 = 226.9
DL output with Mo: L = 122.2 + 169.3 = 291.5
DL input+output M: L = 285.8 + 232.7 = 518.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0110: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _011: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
  _0111: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
diff: 
delta:
   (3.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _011: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0111: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
  _01111: a rectangle with size (3,3) and color grey and mask xx.|.xx|..x at (5,5)
  _011111: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0110: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _011: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
  _0111: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0110: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _011: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
  _0111: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 63613498.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0110: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _0111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _011: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0111: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _01111: a rectangle with size (2,2) and color grey and mask .x|xx at (7,7)
  _011111: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0110: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _0111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0110: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _0111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0110: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _011: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 63613498.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _01: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0110: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _011: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (3.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _011: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0111: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
  _011111: a rectangle with size (2,3) and color grey and mask .x.|xxx at (0,6)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0110: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _011: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0110: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _011: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _01: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0110: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _011: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 63613498.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0110: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _011: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
  _0111: a rectangle with size (3,2) and color green and mask x.|x.|xx at (3,5)
diff: 
delta: (6,8)=4  (7,8)=4  (8,8)=4 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _010: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0110: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _011: a rectangle with size (3,2) and color green and mask x.|x.|xx at (3,5)
  _0111: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
diff: 
delta: (6,8)=4  (7,8)=4  (8,8)=4 
! 11 wrong pixels (generated / expected)

TEST 63613498.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.2 sec (11.2 sec/task)
bits-train-error = 169.3 bits (169.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-257] Checking task 6430c8c4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29339.4 = 29352.0
DL output with Mo: L = 12.6 + 7092.7 = 7105.3
DL input+output M: L = 25.2 + 36432.1 = 36457.3

# learning a model for train pairs
2.000	
1.606	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.016	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.881	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.718	OUT SPE ^.size = ^.layer_0.shape.size
0.687	OUT SPE ^.layer_0.shape.color = green
0.656	OUT SPE ^.layer_01.shape.color = green
0.632	OUT SPE ^.layer_0.pos.i = '0
0.614	OUT SPE ^.layer_01.shape.mask = Full
0.590	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.j - ^.layer_011.shape.size.i
0.571	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.i - ^.layer_0.shape.size.j
0.553	OUT SPE ^.layer_01.pos.i = bottom(^.layer_01) - ^.layer_011.shape.size.i
0.539	OUT SPE ^.color = black
0.529	OUT SPE ^.layer_01.shape.size.j = min(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_01.pos.j - ^.layer_0.pos.j
0.525	IN  SPE ^.color = black
0.256	
0.256	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.j - ^.layer_011.shape.size.i,?) and color green and mask ? at ('0,^.layer_011.pos.i - ^.layer_0.shape.size.j)
  _01: a rectangle with size (?,min(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_01.pos.j - ^.layer_0.pos.j) and color green and mask Full at (bottom(^.layer_01) - ^.layer_011.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 7980.2 = 8069.6
DL output with Mo: L = 278.6 + 1500.6 = 1779.2
DL input+output M: L = 368.0 + 9480.8 = 9848.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.j - ^.layer_011.shape.size.i,?) and color green and mask ? at ('0,^.layer_011.pos.i - ^.layer_0.shape.size.j)
  _01: a rectangle with size (?,min(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_01.pos.j - ^.layer_0.pos.j) and color green and mask Full at (bottom(^.layer_01) - ^.layer_011.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 83.4 = 172.7
DL output with Mo: L = 278.6 + 1500.6 = 1779.2
DL input+output M: L = 367.8 + 1584.0 = 1951.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
  _01: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! size mismatch, 3x4 instead of 4x4

TRAIN 6430c8c4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (3.2 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask .x|x.|x. at (0,0)
  _01: a rectangle with size (2,1) and color green and mask Full at (2,3)
diff: 
delta:
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _01: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (8,3)=2 
   (3.2 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,2)
diff: 
delta: (3,0)=3 
   (58.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _01: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (8,3)=2 
! 6 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,2)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,2)
diff: 
delta: (1,0)=3 
   (50.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,2)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (7,3)
diff: 
delta: (0,0)=7# (5,2)=2  (5,3)=2  (7,0)=2  (8,1)=2 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,2)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
! 5 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _011: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! size mismatch, 1x4 instead of 4x4

TEST 6430c8c4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 1500.6 bits (1500.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-256] Checking task 6455b5f5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 66018.2 = 66030.8
DL output with Mo: L = 12.6 + 180826.3 = 180838.9
DL input+output M: L = 25.2 + 246844.4 = 246869.7

# learning a model for train pairs
2.000	
1.134	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.579	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.221	OUT ADD ^.layer_01 = ^.layer_0
0.171	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.166	OUT SPE ^.size = ^.size
0.162	IN  SPE ^.layer_0.shape.color = red
0.161	IN  SPE ^.color = black
0.160	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.159	OUT SPE ^.layer_0.shape.mask = Full
0.158	OUT SPE ^.layer_011.shape.mask = Full
0.158	OUT SPE ^.color = black
0.029	
0.029	IN  GEN ^.layer_0.shape.color = ?
0.029	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (^.layer_0.pos.i,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 8454.5 = 8496.8
DL output with Mo: L = 72.3 + 5145.6 = 5217.9
DL input+output M: L = 114.6 + 13600.1 = 13714.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (^.layer_0.pos.i,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 72.3 + 5145.6 = 5217.9
DL input+output M: L = 111.1 + 5145.6 = 5256.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
  _011: a rectangle with size (8,10) and color blue and mask Full at (10,3)
diff: 
delta: (8,12)=8 
   (96.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
diff: 
delta:
! 85 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (0,5)
  _01: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
  _011: a rectangle with size (9,8) and color blue and mask Full at (2,5)
diff: 
delta:
   (60.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
diff: 
delta:
! 84 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (7,8) and color blue and mask Full at (0,8)
  _01: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
  _011: a rectangle with size (5,3) and color cyan and mask Full at (0,4)
diff: 
delta: (8,8)=8  (8,9)=8  (9,8)=8  (9,9)=8  (10,8)=8  (10,9)=8 
   (296.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
diff: 
delta:
! 78 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full at (0,13)
  _01: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
  _011: a rectangle with size (10,9) and color blue and mask Full at (5,3)
diff: 
delta:
   (61.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color red and mask ..........x.....|..........x.....|xxxxxxxxxxx.....|..........x.....|..........xxxxxx|..........x.....|..........x.....|..........x.....|..........x.....|xxxxxxxxxxxxxxxx|...x......x.x...|xxxx......x.x...|...x......x.x... at (0,0)
diff: 
delta:
! 73 wrong pixels (generated / expected)

TEST 6455b5f5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.1 sec (4.1 sec/task)
bits-train-error = 5145.6 bits (5145.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-255] Checking task 662c240a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30301.6 = 30314.3
DL output with Mo: L = 12.6 + 5770.4 = 5783.0
DL input+output M: L = 25.2 + 36072.1 = 36097.3

# learning a model for train pairs
2.000	
1.409	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.025	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.794	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.706	OUT SPE ^.size = '(3, 3)
0.629	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size
0.605	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j
0.580	OUT SPE ^.layer_0.pos.i = ^.layer_01.pos.j
0.576	IN  SPE ^.layer_011.shape.mask = Full
0.511	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.198	
0.197	IN  DEL ^.layer_011
0.196	IN  DEL ^.layer_0111

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (^.layer_01.pos.j,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 9528.0 = 9667.9
DL output with Mo: L = 86.2 + 1023.7 = 1109.9
DL input+output M: L = 226.1 + 10551.7 = 10777.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (^.layer_01.pos.j,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 40.0 = 129.3
DL output with Mo: L = 86.2 + 1023.7 = 1109.9
DL input+output M: L = 175.5 + 1063.7 = 1239.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _0110: a rectangle with size (2,3) and color green and mask Full at (7,0)
diff: 
delta: (0,1)=9# (1,0)=9# (3,2)=1  (4,2)=1  (5,0)=1  (5,1)=1 
   (2.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (0,0)
diff: 
delta:
   (24.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (3,0)
  _0110: a rectangle with size (2,3) and color green and mask Full at (7,0)
diff: 
delta: (0,1)=9# (1,0)=9# (3,2)=1  (4,2)=1  (5,0)=1  (5,1)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _0110: a rectangle with size (2,3) and color green and mask Full at (7,0)
diff: 
delta: (0,1)=9# (1,0)=9# (3,2)=1  (4,2)=1  (5,0)=1  (5,1)=1 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _0110: a rectangle with size (3,3) and color orange and mask Full at (6,0)
diff: 
delta: (0,1)=5# (0,2)=5# (1,0)=5# (2,0)=5# (4,1)=6  (5,1)=6  (5,2)=6 
   (0.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color pink and mask x.|xx at (1,1)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _0110: a rectangle with size (3,3) and color orange and mask Full at (6,0)
diff: 
delta: (0,1)=5# (0,2)=5# (1,0)=5# (2,0)=5# (4,1)=6  (5,1)=6  (5,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask xxx|x..|x.. at (6,0)
  _0110: a rectangle with size (2,2) and color red and mask Full at (7,1)
diff: 
delta: (0,1)=5# (0,2)=5# (1,0)=5# (2,0)=5# (4,1)=6  (5,1)=6  (5,2)=6 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (6,0)
  _0110: a rectangle with size (3,3) and color orange and mask Full at (3,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=3  (6,2)=1  (7,0)=1  (7,2)=1  (8,0)=1  (8,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,2) and color cyan and mask xx|.x|.x at (0,0)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (6,0)
  _0110: a rectangle with size (3,3) and color orange and mask Full at (3,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=3  (6,2)=1  (7,0)=1  (7,2)=1  (8,0)=1  (8,2)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (3,0)
  _0110: a rectangle with size (3,2) and color cyan and mask Full at (6,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=3  (6,2)=1  (7,0)=1  (7,2)=1  (8,0)=1  (8,2)=1 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (3,0)
diff: 
delta: (0,0)=8  (0,1)=8  (2,2)=8  (5,2)=1  (6,0)=6  (8,2)=6 
   (2.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
diff: 
delta:
   (28.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (3,0)
  _0110: a rectangle with size (3,3) and color green and mask Full at (3,0)
diff: 
delta: (0,0)=8  (0,1)=8  (2,2)=8  (5,2)=1  (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (3,0)
diff: 
delta: (0,0)=8  (0,1)=8  (2,2)=8  (5,2)=1  (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,1)
  _0110: a rectangle with size (3,3) and color blue and mask Full at (6,0)
diff: 
delta: (0,0)=5# (1,1)=5# (2,1)=5# (3,2)=2  (4,2)=2  (5,0)=2  (5,1)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,0)
  _01: a rectangle with size (3,3) and color blue and mask xxx|x..|x.. at (6,0)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (7,1)
diff: 
delta: (0,0)=5# (1,1)=5# (2,1)=5# (3,2)=2  (4,2)=2  (5,0)=2  (5,1)=2 
! 9 wrong pixels (generated / expected)

TEST 662c240a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.7 sec (4.7 sec/task)
bits-train-error = 1023.7 bits (1023.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-254] Checking task 67385a82.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10833.1 = 10845.7
DL output with Mo: L = 12.6 + 11459.2 = 11471.8
DL input+output M: L = 25.2 + 22292.2 = 22317.5

# learning a model for train pairs
2.000	
1.385	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.966	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.858	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.806	OUT SPE ^.size = ^.size
0.775	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.737	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.711	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.692	OUT SPE ^.layer_0.shape.color = cyan
0.672	OUT SPE ^.layer_011.shape.color = green
0.658	OUT SPE ^.layer_0.shape.size.i = ^.size.i / '2
0.645	OUT SPE ^.layer_0111.pos.i = right(^.layer_0) - 1
0.632	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.i / '2
0.620	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.i / '2
0.611	OUT SPE ^.color = black
0.229	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i / '2,?) and color cyan and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i / '2,^.layer_0.shape.size.i / '2) and color ? and mask ? at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color ? at (right(^.layer_0) - 1,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 4138.8 = 4177.6
DL output with Mo: L = 201.4 + 2389.1 = 2590.5
DL input+output M: L = 240.2 + 6527.8 = 6768.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i / '2,?) and color cyan and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i / '2,^.layer_0.shape.size.i / '2) and color ? and mask ? at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color ? at (right(^.layer_0) - 1,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 201.4 + 2389.1 = 2590.5
DL input+output M: L = 240.2 + 2389.1 = 2629.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|.x.|x.x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,0)
  _011: a point with color green at (2,2)
  _0111: a point with color cyan at (1,1)
diff: 
delta:
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|.x.|x.x at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (0,2)
diff: 
delta: (1,0)=0  (2,1)=0 
! 7 wrong pixels (generated / expected)

TRAIN 67385a82.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask x...|xxx.|...x at (0,1)
diff: 
delta: (0,5)=3  (3,1)=3 
   (0.0 bits)
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask x..|xxx at (0,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,5)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
diff: 
delta:
   (55.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask x...|xxx.|...x at (0,1)
diff: 
delta: (0,5)=3  (3,1)=3 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,1)
diff: 
delta: (0,5)=3  (1,2)=3  (1,3)=3  (2,4)=3  (3,1)=3 
! 6 wrong pixels (generated / expected)

TRAIN 67385a82.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (4,4) and color black and mask ..x.|..xx|.xx.|xx.. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,2)
  _011: a point with color green at (0,3)
  _0111: a point with color cyan at (2,0)
diff: 
delta:
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (4,4) and color black and mask ..x.|..xx|.xx.|xx.. at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (3,1) and color black and mask Full at (0,2)
diff: 
delta: (1,3)=0  (2,1)=0  (3,0)=0  (3,1)=0 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,0)
diff: 
delta: (0,3)=3  (2,3)=3  (3,2)=3  (3,3)=3 
! 5 wrong pixels (generated / expected)

TRAIN 67385a82.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|.x.|x..|.xx|.xx at (0,0)
diff: 
delta: (1,4)=3  (4,5)=3 
   (0.0 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (3,1)
  _011: a point with color green at (2,0)
  _0111: a point with color green at (1,4)
diff: 
delta: (4,5)=3 
   (90.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|.x.|x..|.xx|.xx at (0,0)
diff: 
delta: (1,4)=3  (4,5)=3 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,1)
diff: 
delta: (0,0)=3  (0,1)=3  (1,1)=3  (1,4)=3  (2,0)=3  (4,5)=3 
! 7 wrong pixels (generated / expected)

TRAIN 67385a82.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (5,5) and color black and mask ...x.|...xx|xxxx.|x..xx|x..xx at (0,0)
diff: 
delta: (0,1)=0 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask x.x|xxx at (0,0)
diff: 
delta: (0,4)=3  (2,4)=3  (3,1)=3  (3,2)=3  (4,1)=3  (4,2)=3 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,1)
diff: 
delta: (0,0)=3  (0,2)=3  (0,4)=3  (1,0)=3  (1,1)=3  (1,2)=3  (2,4)=3 
! 7 wrong pixels (generated / expected)

TEST 67385a82.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.7 sec (21.7 sec/task)
bits-train-error = 2389.1 bits (2389.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-253] Checking task 673ef223.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14655.2 = 14667.8
DL output with Mo: L = 12.6 + 44106.9 = 44119.5
DL input+output M: L = 25.2 + 58762.1 = 58787.3

# learning a model for train pairs
2.000	
1.676	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.348	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.911	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.781	OUT ADD ^.layer_00 = ^.layer_0
0.659	OUT ADD ^.layer_011 = ^.layer_01
0.553	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.510	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.495	OUT SPE ^.size = ^.size
0.484	IN  SPE ^.layer_0.shape.color = red
0.472	IN  SPE ^.layer_01.shape.color = red
0.461	IN  SPE ^.layer_011.shape.color = cyan
0.454	IN  SPE ^.layer_0.shape.mask = Full
0.448	IN  SPE ^.layer_01.shape.mask = Full
0.442	OUT SPE ^.layer_0.shape.size.j = ^.size.j - 1
0.437	IN  SPE ^.color = black
0.432	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i
0.429	OUT SPE ^.layer_0.shape.color = cyan
0.425	OUT SPE ^.layer_01.shape.color = cyan
0.422	OUT SPE ^.layer_01.pos.i = bottom(^.layer_01) - 1
0.420	OUT SPE ^.layer_0.shape.mask = Full
0.418	OUT SPE ^.layer_01.shape.size.i = 1
0.415	OUT SPE ^.layer_01.shape.mask = Full
0.413	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.i, ^.layer_01.pos.i) / '2
0.410	OUT SPE ^.layer_01.pos.j = min(^.layer_0.pos.i, ^.layer_011.pos.i) / '2
0.409	OUT SPE ^.color = black
0.162	
0.162	IN  GEN ^.layer_011.shape.color = ?
0.162	IN  GEN ^.layer_01.shape.color = ?
0.161	IN  GEN ^.layer_0.shape.color = ?
0.161	IN  GEN ^.layer_01.shape.mask = ?
0.161	IN  GEN ^.layer_0.shape.mask = ?
0.161	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.size.j - 1) and color cyan and mask Full at (?,min(^.layer_0.pos.i, ^.layer_01.pos.i) / '2)
  _01: a rectangle with size (1,?) and color cyan and mask Full at (bottom(^.layer_01) - 1,min(^.layer_0.pos.i, ^.layer_011.pos.i) / '2)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a point with color cyan at (?,?)

DL input  with Mi: L = 92.1 + 3636.2 = 3728.3
DL output with Mo: L = 263.2 + 6553.4 = 6816.7
DL input+output M: L = 355.3 + 10189.7 = 10544.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.size.j - 1) and color cyan and mask Full at (?,min(^.layer_0.pos.i, ^.layer_01.pos.i) / '2)
  _01: a rectangle with size (1,?) and color cyan and mask Full at (bottom(^.layer_01) - 1,min(^.layer_0.pos.i, ^.layer_011.pos.i) / '2)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 20.0 = 100.0
DL output with Mo: L = 263.2 + 6553.4 = 6816.7
DL input+output M: L = 343.2 + 6573.4 = 6916.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (3,4)
diff: 
delta:
   (2.0 bits)
data: a background with size (19,8) and color black and layers
  _00: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _0: a rectangle with size (1,7) and color cyan and mask Full at (13,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (3,4)
diff: 
delta:
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _011: a point with color cyan at (3,4)
diff: 
delta:
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (3,4)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 673ef223.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _011: a point with color cyan at (2,7)
diff: 
delta: (4,5)=8 
   (0.0 bits)
data: a background with size (20,10) and color black and layers
  _00: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (12,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (14,0)
  _011: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _0111: a rectangle with size (1,6) and color cyan and mask Full at (2,1)
diff: 
delta: (2,7)=4  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=4 
   (280.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _011: a point with color cyan at (2,7)
diff: 
delta: (4,5)=8 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _011: a point with color cyan at (4,5)
diff: 
delta: (2,7)=8 
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _01: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (2,7)
diff: 
delta: (4,5)=8 
! 47 wrong pixels (generated / expected)

TRAIN 673ef223.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _011: a point with color cyan at (4,6)
diff: 
delta: (5,2)=8  (7,4)=8 
   (0.0 bits)
data: a background with size (20,10) and color black and layers
  _00: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _0: a rectangle with size (2,9) and color cyan and mask Full at (14,1)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (17,1)
  _011: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _0111: a rectangle with size (2,6) and color cyan and mask ....xx|xxxxxx at (4,3)
diff: 
delta: (4,6)=4  (5,2)=4  (7,4)=4  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8 
   (337.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _011: a point with color cyan at (4,6)
diff: 
delta: (5,2)=8  (7,4)=8 
! 62 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _011: a point with color cyan at (5,2)
diff: 
delta: (4,6)=8  (7,4)=8 
! 62 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _011: a point with color cyan at (4,6)
diff: 
delta: (5,2)=8  (7,4)=8 
! 66 wrong pixels (generated / expected)

TRAIN 673ef223.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (14,11)
  _011: a point with color cyan at (2,8)
diff: 
delta: (3,7)=8  (5,4)=8 
! 71 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (14,11)
  _011: a point with color cyan at (3,7)
diff: 
delta: (2,8)=8  (5,4)=8 
! 72 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (14,11)
  _01: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (2,8)
diff: 
delta: (3,7)=8  (5,4)=8 
! 72 wrong pixels (generated / expected)

TEST 673ef223.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 42.5 sec (42.5 sec/task)
bits-train-error = 6553.4 bits (6553.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-252] Checking task 6773b310.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 78542.5 = 78555.1
DL output with Mo: L = 12.6 + 4132.2 = 4144.8
DL input+output M: L = 25.2 + 82674.6 = 82699.9

# learning a model for train pairs
2.000	
1.315	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.720	OUT SPE ^.size = '(3, 3)
0.661	IN  SPE ^.layer_0.shape.mask = ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.607	OUT SPE ^.layer_0.shape.color = blue
0.553	OUT SPE ^.layer_01.shape.color = blue
0.517	OUT SPE ^.layer_01.pos.j = 2
0.485	OUT SPE ^.layer_0.shape.mask = Full
0.461	OUT SPE ^.color = black
0.441	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.416	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.i
0.399	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.375	OUT SPE ^.layer_0.pos.j = min(^.layer_01.pos.j, ^.layer_00.pos.j) / '3
0.372	IN  SPE ^.layer_00.shape.color = pink
0.369	IN  SPE ^.layer_0.shape.color = cyan
0.367	IN  SPE ^.layer_01.shape.color = pink
0.365	IN  SPE ^.color = black
0.151	
0.150	IN  GEN ^.layer_0.shape.mask = ?
0.150	IN  GEN ^.layer_01.shape.color = ?
0.150	IN  GEN ^.layer_0.shape.color = ?
0.150	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.i,?) and color blue and mask Full at (?,min(^.layer_01.pos.j, ^.layer_00.pos.j) / '3)
  _01: a point with color blue at (?,2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)

DL input  with Mi: L = 215.7 + 16837.7 = 17053.4
DL output with Mo: L = 149.4 + 465.4 = 614.8
DL input+output M: L = 365.0 + 17303.1 = 17668.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.i,?) and color blue and mask Full at (?,min(^.layer_01.pos.j, ^.layer_00.pos.j) / '3)
  _01: a point with color blue at (?,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 31.7 = 124.3
DL output with Mo: L = 149.4 + 465.4 = 614.8
DL input+output M: L = 241.9 + 497.1 = 739.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
diff: 
delta: (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,0)
  _01: a point with color blue at (0,2)
diff: 
delta:
   (11.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,0)
diff: 
delta: (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,5)
diff: 
delta: (1,0)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
diff: 
delta: (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 2 wrong pixels (generated / expected)

TRAIN 6773b310.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Even Checkboard at (9,0)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (6,6)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (10,5)=6  (10,10)=6 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _01: a point with color blue at (1,2)
diff: 
delta:
   (11.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Even Checkboard at (9,0)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (6,6)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (10,5)=6  (10,10)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (5,8)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (9,0)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (6,6)=6  (10,5)=6  (10,10)=6 
! 7 wrong pixels (generated / expected)

TRAIN 6773b310.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,5)
diff: 
delta: (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a point with color blue at (2,2)
diff: 
delta:
   (13.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,5)
diff: 
delta: (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (0,5)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
diff: 
delta: (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! 3 wrong pixels (generated / expected)

TRAIN 6773b310.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,10)
diff: 
delta: (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01: a point with color blue at (0,2)
diff: 
delta:
   (11.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,10)
diff: 
delta: (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,2)
diff: 
delta: (0,10)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! 3 wrong pixels (generated / expected)

TRAIN 6773b310.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 6773b310.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 5.6 sec (5.6 sec/task)
bits-train-error = 465.4 bits (465.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-251] Checking task 67a3c6ac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25346.4 = 25359.0
DL output with Mo: L = 12.6 + 25346.4 = 25359.0
DL input+output M: L = 25.2 + 50692.9 = 50718.1

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = applySym(flipWidth, ^.grid)
0.736	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.453	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.427	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.400	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.389	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.376	IN  ADD ^.layer_0111110 = a point with color ? at (?,?)
0.372	IN  SPE ^.layer_01111.shape.mask = Full
0.368	IN  SPE ^.layer_011111.shape.mask = Full
0.008	
0.007	IN  DEL ^.layer_011111
0.006	IN  DEL ^.layer_01111
0.005	IN  DEL ^.layer_0111
0.004	IN  DEL ^.layer_011
0.003	IN  DEL ^.layer_01
0.002	IN  DEL ^.layer_0
0.002	IN  DEL ^.layer_0111111
0.001	IN  DEL ^.layer_0111110

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(flipWidth, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111110: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 196.1 + 9132.2 = 9328.3
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 211.0 + 9132.2 = 9343.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(flipWidth, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,4) and color red and layers
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,0)=6  (1,1)=1  (1,2)=6  (2,0)=7# (2,2)=7# (3,0)=1  (3,1)=7#
   (0.0 bits)
data: 
2 6 6 6 
2 6 1 6 
2 7#2 7#
2 2 7#1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color red and layers
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,0)=6  (1,1)=1  (1,2)=6  (2,0)=7# (2,2)=7# (3,0)=1  (3,1)=7#
correct output grid

TRAIN 67a3c6ac.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,7) and color pink and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=7# (0,6)=2  (1,1)=7# (1,2)=1  (1,3)=1  (1,4)=7# (1,5)=7# (1,6)=1  (2,0)=7# (2,1)=7# (2,2)=2  (2,3)=1  (2,4)=2  (3,0)=2  (3,1)=2  (3,2)=7# (3,3)=7# (3,4)=7# (3,5)=2  (3,6)=2  (4,0)=7# (4,1)=2  (4,2)=7# (4,3)=1  (4,4)=2  (4,5)=7# (4,6)=2  (5,3)=2  (5,4)=2  (5,5)=1  (5,6)=1  (6,1)=2 
   (0.0 bits)
data: 
2 6 6 6 7#7#7#
1 7#7#1 1 7#6 
6 6 2 1 2 7#7#
2 2 7#7#7#2 2 
2 7#2 1 7#2 7#
1 1 2 2 6 6 6 
6 6 6 6 6 2 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color pink and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=7# (0,6)=2  (1,1)=7# (1,2)=1  (1,3)=1  (1,4)=7# (1,5)=7# (1,6)=1  (2,0)=7# (2,1)=7# (2,2)=2  (2,3)=1  (2,4)=2  (3,0)=2  (3,1)=2  (3,2)=7# (3,3)=7# (3,4)=7# (3,5)=2  (3,6)=2  (4,0)=7# (4,1)=2  (4,2)=7# (4,3)=1  (4,4)=2  (4,5)=7# (4,6)=2  (5,3)=2  (5,4)=2  (5,5)=1  (5,6)=1  (6,1)=2 
correct output grid

TRAIN 67a3c6ac.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color blue and layers
diff: 
delta: (0,1)=2  (0,2)=7# (1,0)=2  (1,2)=7# (1,3)=7# (1,4)=2  (1,5)=6  (2,0)=2  (2,2)=2  (2,3)=6  (2,4)=2  (3,1)=2  (3,3)=7# (3,4)=6  (3,5)=2  (4,0)=2  (4,1)=7# (4,3)=2  (4,4)=7# (5,0)=2  (5,2)=6  (5,3)=2  (5,4)=7# (5,5)=7#
   (0.0 bits)
data: 
1 1 1 7#2 1 
6 2 7#7#1 2 
1 2 6 2 1 2 
2 6 7#1 2 1 
1 7#2 1 7#2 
7#7#2 6 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
diff: 
delta: (0,1)=2  (0,2)=7# (1,0)=2  (1,2)=7# (1,3)=7# (1,4)=2  (1,5)=6  (2,0)=2  (2,2)=2  (2,3)=6  (2,4)=2  (3,1)=2  (3,3)=7# (3,4)=6  (3,5)=2  (4,0)=2  (4,1)=7# (4,3)=2  (4,4)=7# (5,0)=2  (5,2)=6  (5,3)=2  (5,4)=7# (5,5)=7#
correct output grid

TRAIN 67a3c6ac.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,0)=7# (0,2)=1  (1,1)=7# (2,1)=2  (2,2)=2 
correct output grid

TEST 67a3c6ac.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-250] Checking task 67a423a3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12615.4 = 12628.1
DL output with Mo: L = 12.6 + 15934.2 = 15946.8
DL input+output M: L = 25.2 + 28549.6 = 28574.8

# learning a model for train pairs
2.000	
1.559	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.142	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.778	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.612	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.459	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.424	OUT SPE ^.layer_01.shape = scaleTo(^.layer_0.shape, projI(^.layer_0.shape.size) + (0, 1))
0.393	OUT SPE ^.size = ^.size
0.356	OUT SPE ^.layer_011.pos.j = '0
0.347	OUT SPE ^.layer_011.pos = projI(^.layer_01.pos)
0.339	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.j
0.330	OUT SPE ^.layer_01.pos.j = bottom(^.layer_01)
0.322	IN  SPE ^.layer_0.shape.mask = Full
0.315	IN  SPE ^.layer_01.shape.mask = Full
0.308	OUT SPE ^.layer_011.shape.mask = Full
0.134	
0.134	IN  GEN ^.layer_01.shape.mask = ?
0.134	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: scaleTo(^.layer_0.shape, projI(^.layer_0.shape.size) + (0, 1)) at (^.layer_01.pos.j,bottom(^.layer_01))
  _011: a rectangle with size (?,?) and color ? and mask Full at projI(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.2 + 2199.1 = 2265.4
DL output with Mo: L = 143.2 + 1915.4 = 2058.7
DL input+output M: L = 209.5 + 4114.6 = 4324.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: scaleTo(^.layer_0.shape, projI(^.layer_0.shape.size) + (0, 1)) at (^.layer_01.pos.j,bottom(^.layer_01))
  _011: a rectangle with size (?,?) and color ? and mask Full at projI(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 143.2 + 1915.4 = 2058.7
DL input+output M: L = 207.5 + 1915.4 = 2122.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color green and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,3)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta: (3,1)=3 
   (81.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color green and mask Full at (0,1)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color green and mask Full at (2,1)
diff: 
delta: (0,1)=3 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,4) and color red and mask Full at (1,0)
diff: 
delta: (0,1)=3 
! 11 wrong pixels (generated / expected)

TRAIN 67a423a3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (3,3)
  _01: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (55.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (8,1) and color pink and mask Full at (0,4)
diff: 
delta: (4,4)=6 
! 22 wrong pixels (generated / expected)

TRAIN 67a423a3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _011: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
   (54.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (2,0)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,2)=1 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,3) and color brown and mask Full at (2,3)
diff: 
delta: (2,0)=9# (2,1)=9#
! 17 wrong pixels (generated / expected)

TRAIN 67a423a3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color grey and mask Full at (0,8)
  _01: a rectangle with size (1,12) and color green and mask Full at (6,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,12) and color green and mask Full at (6,0)
  _01: a rectangle with size (12,1) and color grey and mask Full at (0,8)
diff: 
delta: (6,8)=5#
! 32 wrong pixels (generated / expected)

TEST 67a423a3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.0 sec (57.0 sec/task)
bits-train-error = 1915.4 bits (1915.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-249] Checking task 67e8384a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7482.6 = 7495.3
DL output with Mo: L = 12.6 + 28521.0 = 28533.6
DL input+output M: L = 25.2 + 36003.7 = 36028.9

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
0.758	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.647	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.532	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.010	
0.007	IN  DEL ^.layer_0
0.004	IN  DEL ^.layer_011
0.002	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 3914.1 = 3984.8
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 84.6 + 3914.1 = 3998.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=5# (0,1)=3  (1,0)=3  (1,2)=5# (2,0)=3 
   (0.0 bits)
data: 
5#3 4 4 3 5#
3 4 5#5#4 3 
3 4 4 4 4 3 
3 4 4 4 4 3 
3 4 5#5#4 3 
5#3 4 4 3 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=5# (0,1)=3  (1,0)=3  (1,2)=5# (2,0)=3 
correct output grid

TRAIN 67e8384a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=7# (0,2)=5# (1,0)=7# (1,1)=7# (2,0)=5# (2,1)=3 
   (0.0 bits)
data: 
7#1 5#5#1 7#
7#7#1 1 7#7#
5#3 1 1 3 5#
5#3 1 1 3 5#
7#7#1 1 7#7#
7#1 5#5#1 7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=7# (0,2)=5# (1,0)=7# (1,1)=7# (2,0)=5# (2,1)=3 
correct output grid

TRAIN 67e8384a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=5# (1,1)=6  (1,2)=4 
   (0.0 bits)
data: 
2 5#2 2 5#2 
2 6 4 4 6 2 
2 2 2 2 2 2 
2 2 2 2 2 2 
2 6 4 4 6 2 
2 5#2 2 5#2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=5# (1,1)=6  (1,2)=4 
correct output grid

TRAIN 67e8384a.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,1)=2  (1,0)=2  (1,1)=8  (2,0)=8  (2,2)=6 
   (0.0 bits)
data: 
1 2 1 1 2 1 
2 8 1 1 8 2 
8 1 6 6 1 8 
8 1 6 6 1 8 
2 8 1 1 8 2 
1 2 1 1 2 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,1)=2  (1,0)=2  (1,1)=8  (2,0)=8  (2,2)=6 
correct output grid

TRAIN 67e8384a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,0)=1  (0,1)=6  (0,2)=6  (1,0)=5#
correct output grid

TEST 67e8384a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-248] Checking task 681b3aeb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10911.0 = 10923.6
DL output with Mo: L = 12.6 + 4499.6 = 4512.2
DL input+output M: L = 25.2 + 15410.6 = 15435.8

# learning a model for train pairs
2.000	
1.382	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.945	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.667	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.404	OUT SPE ^.size = '(3, 3)
0.347	OUT SPE ^.color = ^.layer_01.shape.color
0.298	OUT SPE ^.layer_0.pos = '(0, 0)
0.291	IN  SPE ^.color = black
0.019	
0.019	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_01.shape.color and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 2991.2 = 3055.5
DL output with Mo: L = 50.6 + 0.0 = 50.6
DL input+output M: L = 114.9 + 2991.2 = 3106.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_01.shape.color and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 50.6 + 0.0 = 50.6
DL input+output M: L = 114.8 + 20.0 = 134.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
  _01: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
  _01: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (2,3)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (2,3)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,8)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (8,1)
  _01: a rectangle with size (2,3) and color green and mask .x.|xxx at (4,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (8,1)
  _01: a rectangle with size (2,3) and color green and mask .x.|xxx at (4,3)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|x..|xxx at (6,7)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (2,3)
diff: 
delta:
correct output grid

TEST 681b3aeb.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-247] Checking task 6855a6e4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26711.7 = 26724.3
DL output with Mo: L = 12.6 + 26711.7 = 26724.3
DL input+output M: L = 25.2 + 53423.5 = 53448.7

# learning a model for train pairs
2.000	
1.724	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.460	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.197	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.933	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	OUT ADD ^.layer_00 = ^.layer_0
0.544	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.436	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.355	OUT ADD ^.layer_011 = ^.layer_01
0.330	OUT SPE ^.size = ^.size
0.317	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (2, 2)
0.311	IN  SPE ^.layer_0.shape.color = red
0.304	IN  SPE ^.layer_01.shape.color = red
0.298	IN  SPE ^.layer_011.shape.color = grey
0.292	IN  SPE ^.layer_0111.shape.color = grey
0.286	OUT SPE ^.layer_0.shape.color = grey
0.279	OUT SPE ^.layer_01.shape.color = grey
0.274	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.i
0.269	OUT SPE ^.layer_01.pos.i = bottom(^.layer_01) - max(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i)
0.265	OUT SPE ^.layer_01.pos.j = bottom(^.layer_0) - min(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i)
0.261	OUT SPE ^.layer_0.shape.mask = Full
0.258	OUT SPE ^.layer_0.shape.size.i = area(^.layer_011.shape) - ^.layer_011.shape.size.i
0.255	OUT SPE ^.color = black
0.252	IN  SPE ^.color = black
0.065	
0.065	IN  GEN ^.layer_0111.shape.color = ?
0.064	IN  GEN ^.layer_011.shape.color = ?
0.064	IN  GEN ^.layer_01.shape.color = ?
0.064	IN  GEN ^.layer_0.shape.color = ?
0.064	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (area(^.layer_011.shape) - ^.layer_011.shape.size.i,?) and color grey and mask Full at ^.layer_0.pos + (2, 2)
  _01: a rectangle with size (^.layer_011.shape.size.i,?) and color grey and mask ? at (bottom(^.layer_01) - max(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i),bottom(^.layer_0) - min(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i))
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 127.6 + 5014.1 = 5141.7
DL output with Mo: L = 300.3 + 1300.5 = 1600.8
DL input+output M: L = 427.8 + 6314.6 = 6742.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (area(^.layer_011.shape) - ^.layer_011.shape.size.i,?) and color grey and mask Full at ^.layer_0.pos + (2, 2)
  _01: a rectangle with size (^.layer_011.shape.size.i,?) and color grey and mask ? at (bottom(^.layer_01) - max(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i),bottom(^.layer_0) - min(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i))
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 300.3 + 1300.5 = 1600.8
DL input+output M: L = 414.4 + 1300.5 = 1715.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _01: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _011: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _0: a rectangle with size (2,1) and color grey and mask Full at (5,4)
  _01: a rectangle with size (1,3) and color grey and mask Full at (9,3)
  _011: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
diff: 
delta:
   (13.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _01: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _011: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _01: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _011: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _011: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (7,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _0: a rectangle with size (2,2) and color grey and mask Full at (7,5)
  _01: a rectangle with size (4,2) and color grey and mask .x|xx|xx|.x at (6,8)
  _011: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _011: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (7,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _011: a rectangle with size (2,2) and color grey and mask Full at (7,0)
  _0111: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _011: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (7,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _011: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _0: a rectangle with size (1,4) and color grey and mask Full at (6,5)
  _01: a rectangle with size (3,1) and color grey and mask Full at (5,5)
  _011: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
diff: 
delta: (5,8)=5# (7,7)=5#
   (93.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _011: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _01: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _011: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (3,3)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,3)
  _011: a rectangle with size (2,5) and color grey and mask .xxx.|xx.xx at (0,4)
  _0111: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (13,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (3,3)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,3)
  _011: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (13,4)
  _0111: a rectangle with size (2,5) and color grey and mask .xxx.|xx.xx at (0,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,3)
  _01: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (3,3)
  _011: a rectangle with size (2,5) and color grey and mask .xxx.|xx.xx at (0,4)
  _0111: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (13,4)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 6855a6e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.4 sec (12.4 sec/task)
bits-train-error = 1300.5 bits (1300.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-246] Checking task 68b16354.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27438.9 = 27451.5
DL output with Mo: L = 12.6 + 27438.9 = 27451.5
DL input+output M: L = 25.2 + 54877.7 = 54902.9

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = applySym(flipHeight, ^.grid)
0.885	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.758	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.703	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.659	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.645	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.623	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.601	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.597	IN  SPE ^.layer_01111.shape.mask = Full
0.594	IN  SPE ^.layer_011111.shape.mask = Full
0.588	IN  SPE ^.layer_01111111.shape.color = red
0.008	
0.007	IN  DEL ^.layer_011111
0.006	IN  DEL ^.layer_01111
0.005	IN  DEL ^.layer_0111
0.004	IN  DEL ^.layer_011
0.003	IN  DEL ^.layer_01
0.002	IN  DEL ^.layer_0
0.002	IN  DEL ^.layer_01111111
0.001	IN  DEL ^.layer_0111111

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(flipHeight, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color red at (?,?)

DL input  with Mi: L = 199.5 + 15919.0 = 16118.4
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 214.3 + 15919.0 = 16133.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(flipHeight, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color yellow and layers
diff: 
delta: (0,0)=8  (0,1)=1  (0,2)=2  (0,3)=1  (1,2)=2  (1,4)=8  (2,0)=3  (2,1)=7# (2,2)=2  (2,4)=8  (3,0)=2  (3,1)=7# (3,2)=7# (3,3)=8  (3,4)=7# (4,0)=8  (4,1)=7# (4,2)=7# (4,4)=8 
   (0.0 bits)
data: 
8 7#7#4 8 
2 7#7#8 7#
3 7#2 4 8 
4 4 2 4 8 
8 1 2 1 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color yellow and layers
diff: 
delta: (0,0)=8  (0,1)=1  (0,2)=2  (0,3)=1  (1,2)=2  (1,4)=8  (2,0)=3  (2,1)=7# (2,2)=2  (2,4)=8  (3,0)=2  (3,1)=7# (3,2)=7# (3,3)=8  (3,4)=7# (4,0)=8  (4,1)=7# (4,2)=7# (4,4)=8 
correct output grid

TRAIN 68b16354.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color orange and layers
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=1  (0,4)=2  (1,0)=1  (1,1)=8  (1,2)=2  (1,3)=4  (1,4)=1  (2,0)=2  (2,2)=8  (2,4)=2  (3,2)=4  (3,3)=1  (3,4)=8  (4,0)=8  (4,1)=1  (4,4)=1 
   (0.0 bits)
data: 
8 1 7#7#1 
7#7#4 1 8 
2 7#8 7#2 
1 8 2 4 1 
7#3 3 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color orange and layers
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=1  (0,4)=2  (1,0)=1  (1,1)=8  (1,2)=2  (1,3)=4  (1,4)=1  (2,0)=2  (2,2)=8  (2,4)=2  (3,2)=4  (3,3)=1  (3,4)=8  (4,0)=8  (4,1)=1  (4,4)=1 
correct output grid

TRAIN 68b16354.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color yellow and layers
diff: 
delta: (0,0)=2  (0,1)=7# (0,3)=3  (0,5)=8  (0,6)=3  (1,0)=2  (1,1)=3  (1,2)=7# (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=3  (2,0)=8  (2,1)=7# (2,3)=3  (2,4)=2  (2,5)=2  (3,0)=1  (3,1)=1  (3,2)=2  (3,3)=1  (3,6)=7# (4,0)=2  (4,2)=3  (4,3)=1  (4,4)=1  (4,6)=1  (5,1)=8  (5,2)=7# (5,5)=8  (5,6)=2  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,5)=2  (6,6)=8 
   (0.0 bits)
data: 
7#3 8 4 3 2 8 
4 8 7#4 4 8 2 
2 4 3 1 1 4 1 
1 1 2 1 4 4 7#
8 7#4 3 2 2 4 
2 3 7#1 2 3 3 
2 7#4 3 4 8 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
diff: 
delta: (0,0)=2  (0,1)=7# (0,3)=3  (0,5)=8  (0,6)=3  (1,0)=2  (1,1)=3  (1,2)=7# (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=3  (2,0)=8  (2,1)=7# (2,3)=3  (2,4)=2  (2,5)=2  (3,0)=1  (3,1)=1  (3,2)=2  (3,3)=1  (3,6)=7# (4,0)=2  (4,2)=3  (4,3)=1  (4,4)=1  (4,6)=1  (5,1)=8  (5,2)=7# (5,5)=8  (5,6)=2  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,5)=2  (6,6)=8 
correct output grid

TRAIN 68b16354.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
diff: 
delta: (0,0)=2  (0,1)=8  (0,3)=3  (0,4)=2  (0,5)=4  (1,0)=4  (1,1)=4  (1,4)=4  (1,5)=3  (1,6)=4  (2,4)=4  (2,5)=7# (2,6)=3  (3,2)=2  (3,3)=3  (3,4)=8  (3,6)=3  (4,0)=4  (4,4)=7# (4,5)=8  (4,6)=4  (5,0)=3  (5,1)=2  (5,2)=8  (5,3)=4  (5,5)=8  (5,6)=4  (6,1)=4  (6,2)=7# (6,4)=2  (6,5)=3  (6,6)=4 
correct output grid

TEST 68b16354.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-245] Checking task 694f12f3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29292.4 = 29305.0
DL output with Mo: L = 12.6 + 29292.4 = 29305.0
DL input+output M: L = 25.2 + 58584.8 = 58610.0

# learning a model for train pairs
2.000	
1.402	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.995	OUT ADD ^.layer_0 = ^.layer_0
0.659	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.379	OUT ADD ^.layer_01 = ^.layer_01
0.184	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.126	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.113	OUT SPE ^.size = ^.size
0.105	OUT SPE ^.layer_00.shape.size = ^.layer_0.shape.size - (2, 2)
0.097	OUT SPE ^.layer_010.pos = ^.layer_01.pos + (1, 1)
0.090	OUT SPE ^.layer_00.pos = ^.layer_0.pos + (1, 1)
0.087	OUT SPE ^.layer_00.shape.color = red
0.081	OUT SPE ^.layer_010.shape.size = ^.layer_01.shape.size - (2, 2)
0.077	OUT SPE ^.layer_010.shape.color = blue
0.073	IN  SPE ^.layer_0.shape.color = yellow
0.069	IN  SPE ^.layer_01.shape.color = yellow
0.067	IN  SPE ^.layer_0.shape.mask = Full
0.065	IN  SPE ^.layer_01.shape.mask = Full
0.063	OUT SPE ^.layer_00.shape.mask = Full
0.060	OUT SPE ^.layer_010.shape.mask = Full
0.059	IN  SPE ^.color = black
0.057	OUT SPE ^.color = black
0.008	
0.007	IN  GEN ^.layer_01.shape.color = ?
0.007	IN  GEN ^.layer_0.shape.color = ?
0.007	IN  GEN ^.layer_01.shape.mask = ?
0.007	IN  GEN ^.layer_0.shape.mask = ?
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - (2, 2) and color red and mask Full at ^.layer_0.pos + (1, 1)
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - (2, 2) and color blue and mask Full at ^.layer_01.pos + (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 73.0 + 1452.2 = 1525.2
DL output with Mo: L = 148.4 + 0.0 = 148.4
DL input+output M: L = 221.4 + 1452.2 = 1673.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - (2, 2) and color red and mask Full at ^.layer_0.pos + (1, 1)
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - (2, 2) and color blue and mask Full at ^.layer_01.pos + (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 148.4 + 0.0 = 148.4
DL input+output M: L = 212.6 + 0.0 = 212.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,4) and color red and mask Full at (7,4)
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _010: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (2,2)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _010: a rectangle with size (1,2) and color blue and mask Full at (8,6)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,6) and color yellow and mask Full at (7,4)
diff: 
delta:
correct output grid

TEST 694f12f3.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 21.0 sec (21.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-244] Checking task 6a1e5592.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41494.1 = 41506.7
DL output with Mo: L = 12.6 + 41494.1 = 41506.7
DL input+output M: L = 25.2 + 82988.1 = 83013.3

# learning a model for train pairs
2.000	
1.381	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.780	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	OUT ADD ^.layer_00 = ^.layer_0
0.460	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.313	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.257	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.207	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.196	OUT SPE ^.size = ^.size
0.190	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.182	OUT SPE ^.layer_011.shape = coloring(^.layer_01111.shape, blue)
0.176	OUT SPE ^.layer_0.shape.size = '(2, 3)
0.173	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.170	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.j
0.167	OUT SPE ^.layer_0.shape.color = blue
0.164	IN  SPE ^.layer_0.shape.color = red
0.162	IN  SPE ^.layer_01.shape.color = grey
0.159	IN  SPE ^.layer_011.shape.color = grey
0.156	IN  SPE ^.layer_01110.shape.color = grey
0.154	IN  SPE ^.layer_0111.shape.color = grey
0.151	OUT SPE ^.layer_01.shape.color = blue
0.148	OUT SPE ^.layer_0.pos.i = 2
0.145	OUT SPE ^.layer_01.shape.size.j = area(^.layer_01.shape) - 3
0.143	OUT SPE ^.layer_01.pos.i = 1
0.140	OUT SPE ^.layer_011.pos.i = 1
0.138	IN  SPE ^.layer_01111.shape.color = grey
0.136	IN  SPE ^.layer_0111.shape.mask = Full
0.135	IN  SPE ^.layer_01111.shape.mask = Full
0.133	OUT SPE ^.layer_0.shape.mask = Full
0.132	OUT SPE ^.layer_01.pos.j = right(^.layer_011) - ^.layer_01110.pos.j - ^.layer_0.pos.j
0.130	OUT SPE ^.layer_0.pos.j = ^.layer_0111.pos.j + ^.layer_0111.pos.j - ^.layer_011.pos.j
0.129	IN  SPE ^.color = black
0.128	OUT SPE ^.color = black
0.024	
0.024	IN  GEN ^.layer_01111.shape.color = ?
0.024	IN  GEN ^.layer_0111.shape.color = ?
0.024	IN  GEN ^.layer_01110.shape.color = ?
0.024	IN  GEN ^.layer_011.shape.color = ?
0.024	IN  GEN ^.layer_01.shape.color = ?
0.024	IN  GEN ^.layer_0.shape.color = ?
0.024	IN  GEN ^.layer_01111.shape.mask = ?
0.024	IN  GEN ^.layer_0111.shape.mask = ?
0.024	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size '(2, 3) and color blue and mask Full at (2,^.layer_0111.pos.j + ^.layer_0111.pos.j - ^.layer_011.pos.j)
  _01: a rectangle with size (^.layer_01.shape.size.j,area(^.layer_01.shape) - 3) and color blue and mask ? at (1,right(^.layer_011) - ^.layer_01110.pos.j - ^.layer_0.pos.j)
  _011: coloring(^.layer_01111.shape, blue) at (1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01110: a point with color grey at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 176.3 + 4324.1 = 4500.4
DL output with Mo: L = 299.6 + 505.8 = 805.4
DL input+output M: L = 475.9 + 4829.9 = 5305.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size '(2, 3) and color blue and mask Full at (2,^.layer_0111.pos.j + ^.layer_0111.pos.j - ^.layer_011.pos.j)
  _01: a rectangle with size (^.layer_01.shape.size.j,area(^.layer_01.shape) - 3) and color blue and mask ? at (1,right(^.layer_011) - ^.layer_01110.pos.j - ^.layer_0.pos.j)
  _011: coloring(^.layer_01111.shape, blue) at (1,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 154.3 + 20.0 = 174.3
DL output with Mo: L = 299.6 + 505.8 = 805.4
DL input+output M: L = 453.9 + 525.8 = 979.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,6)
  _01110: a point with color grey at (7,6)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (6,13)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _0: a rectangle with size (2,3) and color blue and mask Full at (2,6)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (1,14)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,6)
  _01110: a point with color grey at (7,6)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (6,13)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,6)
  _01110: a point with color grey at (7,6)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (6,13)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,6)
  _01110: a point with color grey at (9,8)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (6,13)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (7,6)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _01110: a point with color grey at (8,7)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _0: a rectangle with size (2,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (4,7) and color blue and mask .x..xx.|xxx.xx.|...xxxx|....xx. at (1,7)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,4)
diff: 
delta:
   (41.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _01110: a point with color grey at (8,7)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _01110: a point with color grey at (8,7)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxx.x.xx.xxx|x..xxx...xx...x at (0,0)
  _01: a rectangle with size (4,3) and color grey and mask x.x|xxx|xxx|xxx at (6,11)
  _011: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _01110: a point with color grey at (7,1)
  _0111: a rectangle with size (4,2) and color grey and mask x.|xx|x.|xx at (6,7)
  _01111: a rectangle with size (1,4) and color grey and mask Full at (9,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxx.x.xx.xxx|x..xxx...xx...x at (0,0)
  _01: a rectangle with size (4,3) and color grey and mask x.x|xxx|xxx|xxx at (6,11)
  _011: a rectangle with size (3,4) and color grey and mask x...|xxx.|xxxx at (7,1)
  _01110: a point with color grey at (7,8)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (6,7)
  _01111: a rectangle with size (1,2) and color grey and mask Full at (9,7)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST 6a1e5592.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 32.8 sec (32.8 sec/task)
bits-train-error = 505.8 bits (505.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-243] Checking task 6aa20dc0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22429.7 = 22442.3
DL output with Mo: L = 12.6 + 57419.0 = 57431.7
DL input+output M: L = 25.2 + 79848.8 = 79874.0

# learning a model for train pairs
2.000	
1.501	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.223	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.021	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.876	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.746	OUT ADD ^.layer_01 = ^.layer_0
0.637	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.561	OUT ADD ^.layer_0111 = ^.layer_011
0.518	OUT ADD ^.layer_010 = ^.layer_01
0.491	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.463	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.442	OUT ADD ^.layer_01111 = ^.layer_01111
0.424	OUT SPE ^.layer_011.shape.mask = ^.layer_0.shape.mask and ^.layer_011.shape.mask * '3
0.412	OUT SPE ^.size = ^.size
0.404	IN  SPE ^.layer_01111.shape.color = red
0.397	IN  SPE ^.layer_01.shape.color = red
0.392	OUT SPE ^.color = ^.color
0.388	IN  SPE ^.layer_01.shape.mask = Full
0.385	OUT SPE ^.layer_011.pos.j = ^.layer_0111.pos.j
0.382	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.379	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j - area(^.layer_011.shape)
0.376	OUT SPE ^.layer_011.pos.i = max(^.layer_01.pos.i, ^.layer_011.pos.i) + ^.layer_0111.pos.i - ^.layer_011.pos.i
0.374	OUT SPE ^.layer_0.pos.i = max(^.layer_0111.pos.j, ^.layer_01111.pos.j) - ^.layer_01.shape.size.i
0.080	
0.080	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (max(^.layer_0111.pos.j, ^.layer_01111.pos.j) - ^.layer_01.shape.size.i,^.layer_01.pos.j - area(^.layer_011.shape))
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask and ^.layer_011.shape.mask * '3 at (max(^.layer_01.pos.i, ^.layer_011.pos.i) + ^.layer_0111.pos.i - ^.layer_011.pos.i,^.layer_0111.pos.j)
  _0111: ^.layer_011
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 127.9 + 6598.9 = 6726.9
DL output with Mo: L = 318.7 + 3959.7 = 4278.4
DL input+output M: L = 446.6 + 10558.6 = 11005.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (max(^.layer_0111.pos.j, ^.layer_01111.pos.j) - ^.layer_01.shape.size.i,^.layer_01.pos.j - area(^.layer_011.shape))
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask and ^.layer_011.shape.mask * '3 at (max(^.layer_01.pos.i, ^.layer_011.pos.i) + ^.layer_0111.pos.i - ^.layer_011.pos.i,^.layer_0111.pos.j)
  _0111: ^.layer_011
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 126.9 + 0.0 = 126.9
DL output with Mo: L = 318.7 + 3959.7 = 4278.4
DL input+output M: L = 445.6 + 3959.7 = 4405.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,9)
  _011: a rectangle with size (2,2) and color green and mask Full at (15,5)
  _0111: a point with color red at (1,13)
  _01111: a point with color red at (4,5)
diff: 
delta: (3,15)=3  (6,7)=3 
   (0.0 bits)
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxx..|xxxx..|..xxxx|..xxxx|....xx|....xx at (11,5)
  _010: a rectangle with size (2,2) and color red and mask Full at (11,9)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _011: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (1,13)
  _0111: a rectangle with size (2,2) and color green and mask Full at (15,5)
  _01111: a point with color red at (4,5)
diff: 
delta: (1,13)=2  (3,15)=3  (6,7)=3 
   (199.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,9)
  _011: a rectangle with size (2,2) and color green and mask Full at (15,5)
  _0111: a point with color red at (1,13)
  _01111: a point with color red at (4,5)
diff: 
delta: (3,15)=3  (6,7)=3 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,9)
  _011: a rectangle with size (2,2) and color green and mask Full at (15,5)
  _0111: a point with color green at (3,15)
  _01111: a point with color red at (1,13)
diff: 
delta: (4,5)=2  (6,7)=3 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,9)
  _011: a rectangle with size (2,2) and color green and mask Full at (15,5)
  _0111: a point with color green at (3,15)
  _01111: a point with color red at (4,5)
diff: 
delta: (1,13)=2  (6,7)=3 
! 35 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _011: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
  _0111: a point with color pink at (2,5)
  _01111: a point with color red at (4,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (2,5)
  _010: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _01: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _011: a rectangle with size (9,9) and color blue and mask xxxxxx...|xxxxxx...|xxxxxx...|xxx...xxx|xxx...xxx|xxx...xxx|...xxxxxx|...xxxxxx|...xxxxxx at (7,5)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
  _01111: a point with color red at (4,3)
diff: 
delta:
   (34.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _011: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
  _0111: a point with color pink at (2,5)
  _01111: a point with color red at (4,3)
diff: 
delta:
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _011: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _0111: a point with color pink at (2,5)
  _01111: a point with color red at (4,3)
diff: 
delta:
! 58 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _011: a rectangle with size (1,2) and color blue and mask Full at (2,3)
  _0111: a point with color pink at (2,5)
  _01111: a point with color red at (4,3)
diff: 
delta: (3,3)=1  (3,5)=1  (4,4)=1  (4,5)=1 
! 63 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a point with color yellow at (10,13)
  _01111: a point with color red at (12,15)
diff: 
delta: (14,7)=2  (16,5)=4 
   (0.0 bits)
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (14,5)
  _010: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _01: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _011: a rectangle with size (3,3) and color green and mask +-cross at (10,13)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _01111: a point with color red at (12,15)
diff: 
delta: (10,13)=4  (14,7)=2  (16,5)=4 
   (161.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a point with color yellow at (10,13)
  _01111: a point with color red at (12,15)
diff: 
delta: (14,7)=2  (16,5)=4 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a point with color yellow at (10,13)
  _01111: a point with color red at (14,7)
diff: 
delta: (12,15)=2  (16,5)=4 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a point with color red at (12,15)
  _01111: a point with color red at (14,7)
diff: 
delta: (10,13)=4  (16,5)=4 
! 14 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (7,16)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,15)
  _0111: a point with color cyan at (4,6)
  _01111: a point with color yellow at (4,7)
diff:   ^.layer_01111.shape.color  ^.layer_01.shape.color
delta: (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (13,1)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 71 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (7,16)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,15)
  _0111: a point with color cyan at (4,6)
  _01111: a point with color cyan at (5,5)
diff:   ^.layer_01111.shape.color  ^.layer_01.shape.color
delta: (4,7)=4  (5,7)=8  (6,5)=1  (6,6)=8  (13,1)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 69 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (7,16)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,15)
  _0111: a point with color yellow at (4,7)
  _01111: a point with color cyan at (4,6)
diff:   ^.layer_01111.shape.color  ^.layer_01.shape.color
delta: (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (13,1)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 71 wrong pixels (generated / expected)

TEST 6aa20dc0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.8 sec (56.8 sec/task)
bits-train-error = 3959.7 bits (3959.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-242] Checking task 6b9890af.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 40029.1 = 40041.7
DL output with Mo: L = 12.6 + 45906.7 = 45919.3
DL input+output M: L = 25.2 + 85935.7 = 85960.9

# learning a model for train pairs
2.000	
1.204	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.693	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.266	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.148	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.119	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, ^.layer_0.shape.size - (2, 2))
0.107	OUT SPE ^.size = ^.layer_0.shape.size
0.100	OUT SPE ^.layer_0.pos = '(0, 0)
0.093	OUT SPE ^.layer_01.pos = '(1, 1)
0.089	IN  SPE ^.layer_0.shape.color = red
0.085	IN  SPE ^.layer_0.shape.mask = Border
0.083	IN  SPE ^.color = black
0.081	OUT SPE ^.color = black
0.004	
0.004	IN  GEN ^.layer_0.shape.mask = ?
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
  _01: scaleTo(^.layer_01.shape, ^.layer_0.shape.size - (2, 2)) at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 3105.1 = 3176.1
DL output with Mo: L = 84.4 + 0.0 = 84.4
DL input+output M: L = 155.4 + 3105.1 = 3260.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
  _01: scaleTo(^.layer_01.shape, ^.layer_0.shape.size - (2, 2)) at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 20.0 = 87.5
DL output with Mo: L = 84.4 + 0.0 = 84.4
DL input+output M: L = 151.9 + 20.0 = 171.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (7,6)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (2,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask ..xx..|..xx..|xxxxxx|xxxxxx|..xx..|..xx.. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (7,6)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (2,5)
diff: 
delta:
correct output grid

TRAIN 6b9890af.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (9,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (9,10)
diff: 
delta:
correct output grid

TRAIN 6b9890af.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (0,0)
  _01: a rectangle with size (9,9) and color yellow and mask ...xxxxxx|...xxxxxx|...xxxxxx|xxx...xxx|xxx...xxx|xxx...xxx|......xxx|......xxx|......xxx at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
diff: 
delta:
correct output grid

TRAIN 6b9890af.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,26) and color black and layers
  _0: a rectangle with size (14,14) and color red and mask Border at (4,2)
  _01: a rectangle with size (3,3) and color green and mask .x.|x.x|.x. at (4,20)
diff: 
delta:
correct output grid

TEST 6b9890af.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-241] Checking task 6c434453.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21838.6 = 21851.2
DL output with Mo: L = 12.6 + 17363.2 = 17375.9
DL input+output M: L = 25.2 + 39201.8 = 39227.0

# learning a model for train pairs
2.000	
1.691	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.451	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.281	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.110	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.940	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.785	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.649	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	OUT ADD ^.layer_0110 = ^.layer_011
0.437	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.401	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.388	OUT ADD ^.layer_01101 = ^.layer_0110
0.365	OUT SPE ^.size = ^.size
0.350	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.337	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.300	OUT SPE ^.layer_011 = ^.layer_0111
0.292	OUT SPE ^.layer_01.shape.mask = +-cross
0.284	OUT SPE ^.layer_0.shape.size.j = 3
0.277	OUT SPE ^.layer_0111.shape.size.i = 3
0.271	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.264	OUT SPE ^.layer_01.shape.color = red
0.258	OUT SPE ^.layer_0111.shape.color = red
0.253	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i - 1
0.247	OUT SPE ^.layer_0111.pos.j = middle(^.layer_0110)
0.242	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i - 2
0.237	IN  SPE ^.layer_0.shape.color = blue
0.232	IN  SPE ^.layer_01.shape.color = blue
0.227	IN  SPE ^.layer_01.shape.mask = Border
0.222	IN  SPE ^.layer_0110.shape.color = blue
0.217	IN  SPE ^.layer_011.shape.color = blue
0.212	IN  SPE ^.layer_0111.shape.color = blue
0.207	OUT SPE ^.layer_0.pos.i = bottom(^.layer_0) / '2
0.203	OUT SPE ^.layer_0111.shape.size.j = ^.layer_0.shape.size.i - 2
0.200	IN  SPE ^.layer_011.shape.mask = Full
0.197	OUT SPE ^.color = black
0.195	IN  SPE ^.color = black
0.039	
0.039	IN  GEN ^.layer_011.shape.color = ?
0.039	IN  GEN ^.layer_0111.shape.color = ?
0.039	IN  GEN ^.layer_0110.shape.color = ?
0.039	IN  GEN ^.layer_01.shape.mask = ?
0.039	IN  GEN ^.layer_01.shape.color = ?
0.039	IN  GEN ^.layer_0.shape.color = ?
0.039	IN  GEN ^.layer_011.shape.mask = ?
0.039	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,3) and color ? and mask ? at (bottom(^.layer_0) / '2,^.layer_0.pos.j)
  _01: a rectangle with size ^.layer_01.shape.size and color red and mask +-cross at ^.layer_01.pos
  _0110: ^.layer_011
  _01101: ^.layer_0110
  _011: ^.layer_0111
  _0111: a rectangle with size (3,^.layer_0.shape.size.i - 2) and color red and mask ? at (^.layer_011.pos.i - 1,middle(^.layer_0110))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Border at (?,?)
  _0110: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 159.9 + 3395.1 = 3555.0
DL output with Mo: L = 226.4 + 332.2 = 558.6
DL input+output M: L = 386.3 + 3727.3 = 4113.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,3) and color ? and mask ? at (bottom(^.layer_0) / '2,^.layer_0.pos.j)
  _01: a rectangle with size ^.layer_01.shape.size and color red and mask +-cross at ^.layer_01.pos
  _0110: ^.layer_011
  _01101: ^.layer_0110
  _011: ^.layer_0111
  _0111: a rectangle with size (3,^.layer_0.shape.size.i - 2) and color red and mask ? at (^.layer_011.pos.i - 1,middle(^.layer_0110))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 226.4 + 332.2 = 558.6
DL input+output M: L = 365.3 + 332.2 = 697.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _0110: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,8)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (1,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (4,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (0,0)
  _0110: a rectangle with size (1,2) and color blue and mask Full at (7,8)
  _01101: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (3,3) and color red and mask +-cross at (6,3)
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _0110: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,8)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (1,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _0110: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (7,8)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 6c434453.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _0110: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (5,1)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _01101: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
  _0111: a rectangle with size (3,1) and color red and mask Full at (0,5)
diff: 
delta:
   (12.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _0110: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _0110: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (1,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6c434453.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,3) and color blue and mask Border at (7,1)
  _0110: a rectangle with size (3,3) and color blue and mask +-cross at (0,7)
  _011: a rectangle with size (2,2) and color blue and mask Full at (8,8)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,3) and color blue and mask Border at (7,1)
  _0110: a rectangle with size (3,3) and color blue and mask +-cross at (0,7)
  _011: a rectangle with size (1,2) and color blue and mask Full at (6,6)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (8,8)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 6c434453.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 33.2 sec (33.2 sec/task)
bits-train-error = 332.2 bits (332.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-240] Checking task 6cdd2623.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 46122.7 = 46135.4
DL output with Mo: L = 12.6 + 40738.5 = 40751.1
DL input+output M: L = 25.2 + 86861.2 = 86886.4

# learning a model for train pairs
2.000	
1.311	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.024	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.982	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.955	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.934	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.917	OUT SPE ^.size = ^.size
0.906	OUT SPE ^.layer_0.shape.size = projJ(^.size) + (1, 0)
0.901	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.875	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.854	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.840	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.835	OUT SPE ^.layer_0.pos.j = '0
0.833	OUT SPE ^.layer_0.shape.mask = Full
0.830	OUT SPE ^.layer_01.shape.mask = Full
0.827	OUT SPE ^.layer_0.pos.i = right(^.layer_0111) + ^.layer_0111.shape.size.i
0.825	IN  SPE ^.layer_01111111.shape.mask = Full
0.823	OUT SPE ^.color = black
0.822	IN  SPE ^.color = black
0.036	
0.036	IN  DEL ^.layer_01111111
0.035	IN  DEL ^.layer_0111111
0.035	IN  DEL ^.layer_011111
0.035	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size projJ(^.size) + (1, 0) and color ? and mask Full at (right(^.layer_0111) + ^.layer_0111.shape.size.i,'0)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 213.8 + 36234.2 = 36448.0
DL output with Mo: L = 140.0 + 1150.4 = 1290.4
DL input+output M: L = 353.8 + 37384.6 = 37738.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size projJ(^.size) + (1, 0) and color ? and mask Full at (right(^.layer_0111) + ^.layer_0111.shape.size.i,'0)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 140.0 + 1150.4 = 1290.4
DL input+output M: L = 278.9 + 1150.4 = 1429.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,5)
  _01: a rectangle with size (1,5) and color grey and mask Full at (6,9)
  _011: a rectangle with size (1,5) and color grey and mask Full at (8,3)
  _0111: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _01111: a rectangle with size (3,2) and color red and mask Even Checkboard at (5,18)
diff: 
delta: (0,11)=3  (0,17)=2  (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,3)=2  (4,5)=2  (4,14)=2  (5,3)=2  (5,7)=2  (5,10)=2  (5,20)=5# (6,2)=2  (6,11)=0  (6,12)=0  (6,20)=5# (7,13)=2  (8,0)=3  (8,5)=0  (8,6)=2  (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
   (0.0 bits)
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (1,22) and color green and mask Full at (8,0)
  _01: a rectangle with size (11,1) and color green and mask Full at (0,11)
diff: 
delta:
   (37.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,5)
  _01: a rectangle with size (1,5) and color grey and mask Full at (6,9)
  _011: a rectangle with size (1,5) and color grey and mask Full at (8,3)
  _0111: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _01111: a rectangle with size (3,2) and color red and mask Even Checkboard at (5,18)
diff: 
delta: (0,11)=3  (0,17)=2  (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,3)=2  (4,5)=2  (4,14)=2  (5,3)=2  (5,7)=2  (5,10)=2  (5,20)=5# (6,2)=2  (6,11)=0  (6,12)=0  (6,20)=5# (7,13)=2  (8,0)=3  (8,5)=0  (8,6)=2  (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
! 36 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (2,8)
diff: 
delta: (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
   (0.0 bits)
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (1,20) and color red and mask Full at (11,0)
  _01: a rectangle with size (1,20) and color red and mask Full at (3,0)
diff: 
delta:
   (39.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (2,8)
diff: 
delta: (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,8)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
diff: 
delta: (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
! 64 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (14,0)
  _01: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _011: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,1)=0  (14,3)=0  (14,9)=5# (14,13)=8 
   (0.0 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,17) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (15,1) and color cyan and mask Full at (0,13)
diff: 
delta:
   (38.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (14,0)
  _01: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _011: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,1)=0  (14,3)=0  (14,9)=5# (14,13)=8 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (14,0)
  _01: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,1)=0  (14,3)=0  (14,9)=5# (14,13)=8 
! 35 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color black and layers
  _0: a rectangle with size (6,1) and color orange and mask Full at (5,10)
  _01: a rectangle with size (5,1) and color orange and mask Full at (8,18)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (2,15)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (5,16)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (1,6)
diff: 
delta: (0,3)=6  (0,12)=7# (0,16)=7# (0,17)=8  (1,0)=7# (1,9)=8  (1,15)=7# (2,1)=7# (4,11)=8  (5,0)=6  (5,18)=6  (6,1)=7# (6,8)=7# (6,12)=8  (7,3)=8  (7,6)=7# (7,8)=7# (7,10)=0  (8,12)=8  (8,14)=8  (9,4)=7# (9,10)=0  (9,18)=0  (10,15)=7# (11,9)=7# (11,17)=8  (11,18)=0  (14,12)=7# (14,13)=8  (15,0)=7# (15,3)=6  (15,4)=7# (15,6)=8  (15,7)=7#
! 38 wrong pixels (generated / expected)

TEST 6cdd2623.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.2 sec (8.2 sec/task)
bits-train-error = 1150.4 bits (1150.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-239] Checking task 6cf79266.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 200491.0 = 200503.6
DL output with Mo: L = 12.6 + 200491.0 = 200503.6
DL input+output M: L = 25.2 + 400982.0 = 401007.2

# learning a model for train pairs
2.000	
1.094	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.193	OUT ADD ^.layer_0 = ^.layer_0
0.145	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.142	OUT SPE ^.size = ^.size
0.140	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.134	OUT SPE ^.layer_01.shape.size = '(3, 3)
0.119	OUT SPE ^.layer_00.shape.mask = Full
0.119	OUT SPE ^.layer_01.shape.color = blue
0.118	OUT SPE ^.layer_01.shape.mask = Full
0.118	OUT SPE ^.color = black
0.117	IN  SPE ^.color = black
0.024	
0.024	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size '(3, 3) and color blue and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 18781.5 = 18820.5
DL output with Mo: L = 80.5 + 4630.6 = 4711.1
DL input+output M: L = 119.4 + 23412.1 = 23531.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size '(3, 3) and color blue and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 80.5 + 4630.6 = 4711.1
DL input+output M: L = 119.3 + 4630.6 = 4749.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (19,1) and color grey and mask Full at (1,19)
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (6,16)
diff: 
delta: (15,19)=0  (16,19)=0 
   (128.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 6cf79266.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
diff: 
delta: (14,0)=3  (17,6)=3  (17,7)=3  (17,8)=3  (18,5)=3  (18,6)=3  (18,8)=3  (19,5)=3  (19,6)=3  (19,7)=3 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (3,4) and color green and mask Full at (17,5)
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (6,3)
diff: 
delta: (14,0)=3  (17,5)=0  (18,7)=0  (19,8)=0 
   (207.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
diff: 
delta: (14,0)=3  (17,6)=3  (17,7)=3  (17,8)=3  (18,5)=3  (18,6)=3  (18,8)=3  (19,5)=3  (19,6)=3  (19,7)=3 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color green and layers
  _0: a rectangle with size (20,20) and color black and mask ....x.x.x..xx.......|....xx.x..x.x.......|.....xx.xxx.x.......|.x..xxxx.x..x.......|xxx.x.x...x...x.....|..xx..x....xx.x.....|x.xxxx..x.xx.xxx....|.x.xxxxxx...x.......|x..xxxx.x..x..xx....|xxx..xx.....x.x.x...|.x..x......x.xxx....|.xx.xxx....xx.x.x...|x..xxx.......xx.xx..|xx.x..........xx.x.x|.x...............xx.|xx.x..........x...xx|..x..........x.xxx..|x.x..........xx..xxx|.xx.........xx......|.x..........x.x..... at (0,0)
diff: 
delta: (0,16)=0  (0,18)=0  (0,19)=0  (1,0)=0  (1,1)=0  (1,15)=0  (1,16)=0  (1,19)=0  (2,15)=0  (3,16)=0  (3,19)=0  (4,18)=0  (4,19)=0  (5,19)=0  (6,17)=0  (6,19)=0  (10,8)=0  (10,9)=0  (10,18)=0  (12,8)=0  (13,8)=0  (13,9)=0  (13,10)=0  (14,5)=0  (14,8)=0  (15,6)=0  (15,7)=0  (15,9)=0  (15,11)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,9)=0  (16,10)=0  (16,11)=0  (17,4)=0  (17,5)=0  (17,9)=0  (18,4)=0  (18,7)=0  (18,9)=0  (18,10)=0  (19,4)=0  (19,8)=0  (19,9)=0  (19,10)=0  (19,18)=0 
! 233 wrong pixels (generated / expected)

TRAIN 6cf79266.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
diff: 
delta: (0,0)=7# (3,0)=7#
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask Full at (5,14)
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (16,3)
diff: 
delta: (0,0)=7# (3,0)=7#
   (126.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
diff: 
delta: (0,0)=7# (3,0)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color orange and layers
  _0: a rectangle with size (20,20) and color black and mask .x....x..xx..xx.x...|xx.x.x.x...xxxx..xx.|xxxxx.xx....x.xxxx.x|.x.x.x..xxx..xx..x.x|xx.xx.xx.x....xx.xx.|........x..x..xxx.x.|xxx.x.xx..x.x.xxxx..|x....x.x.xx...xxxxx.|xxx.xxxx...xx..xxx..|..x...x.xx.x..x..x..|.xxxxxxxx.xx.xxxx...|..xx...x....x.xx....|x.x...xxx..x..x.xx..|xx........x..x...x..|xx........x.x...x...|.x...........xx...xx|.........x..x.x.xxxx|.......x..x.xx.xxxxx|........x.xxx.x...x.|........xx....xx.x.. at (0,0)
diff: 
delta: (9,19)=0  (10,19)=0  (13,4)=0  (14,5)=0  (14,7)=0  (15,5)=0  (15,7)=0  (16,3)=0  (16,4)=0  (16,5)=0  (17,3)=0  (17,4)=0  (17,5)=0  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (19,0)=0  (19,3)=0  (19,6)=0 
! 230 wrong pixels (generated / expected)

TRAIN 6cf79266.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color yellow and layers
  _0: a rectangle with size (20,20) and color black and mask .....x...xxx.x.....x|....xx.x..xxxx.....x|...xx.x.x.x......x.x|..x.xx.xxxxxx...x.xx|.xx..x.......x..x.x.|..xx.xx......xx..x.x|xxx.xxxx.....x.x..x.|.x..xxx..xxxx..xxxxx|x...xxx...xx.x...xxx|.xxx..xx.xx.x...x.x.|xxx.x.x...xx.x...x..|x..xx....xxx.....x..|xx.xx.xx.xx.x..xxx..|.x..x.xx...xxxx...xx|x....xx.x.xx..x.....|.xx..x.x.xx.x.x.x.xx|..x.x.x..xx...xxxx..|.xxxx..x..x.x.xxx...|xxxxx....x.xx.xxxxxx|..xxxxx..xxx.x.x.x.. at (0,0)
diff: 
delta: (0,0)=0  (0,2)=0  (1,0)=0  (1,1)=0  (11,19)=0 
! 236 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color yellow and mask .x.xx.xxx.....xxxxx.|..xx..x.xx....xxxxx.|xxx..x.x.x.xxxxxx.x.|xx.x..x......xxx.x..|x..xx.xxxxxxx.xx.x.x|xx..x..xxxxxx..xx.x.|...x....xxxxx.x.xx.x|x.xx...xx....xx.....|.xxx...xxx..x.xxx...|x...xx..x..x.xxx.x.x|...x.x.xxx..x.xxx.xx|.xx..xxxx...xxxxx.x.|..x..x..x..x.xx...xx|x.xx.x..xxx....xxx..|.xxxx..x.x..xx.xxxxx|x..xx.x.x..x.x.x.x..|xx.x.x.xx..xxx....xx|x....xx.xx.x.x...xxx|.....xxxx.x..x......|.......xx...x.x..... at (0,0)
diff: 
delta: (0,12)=4  (19,0)=4  (19,1)=4  (19,16)=4  (19,18)=4  (19,19)=4 
! 38 wrong pixels (generated / expected)

TEST 6cf79266.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.7 sec (9.7 sec/task)
bits-train-error = 4630.6 bits (4630.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-238] Checking task 6d0160f0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 96612.0 = 96624.7
DL output with Mo: L = 12.6 + 66536.2 = 66548.8
DL input+output M: L = 25.2 + 163148.2 = 163173.4

# learning a model for train pairs
2.000	
1.190	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.586	OUT SPE ^.layer_0 = fillResizeAlike(blue, ^.layer_0.shape.size, ^.layer_0)
0.574	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.561	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.548	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.536	OUT SPE ^.size = ^.size
0.533	OUT SPE ^.layer_0111.shape.color = orange
0.529	OUT SPE ^.layer_01.shape.color = yellow
0.527	IN  SPE ^.layer_0.shape.color = grey
0.516	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.508	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.500	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.491	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.487	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.479	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.470	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.468	OUT SPE ^.layer_01.pos.i = max(^.layer_01.pos.j, ^.layer_011.pos.j)
0.466	OUT SPE ^.layer_011.pos.j = ^.layer_011111.pos.j - ^.layer_011111.pos.i - ^.layer_01.pos.i
0.464	OUT SPE ^.color = black
0.463	IN  SPE ^.layer_01.shape.mask = Full
0.462	IN  SPE ^.color = black
0.034	
0.034	IN  GEN ^.layer_0.shape.color = ?
0.034	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: fillResizeAlike(blue, ^.layer_0.shape.size, ^.layer_0)
  _01: a point with color yellow at (max(^.layer_01.pos.j, ^.layer_011.pos.j),?)
  _011: a point with color ? at (?,^.layer_011111.pos.j - ^.layer_011111.pos.i - ^.layer_01.pos.i)
  _0111: a point with color orange at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 161.4 + 41382.2 = 41543.7
DL output with Mo: L = 191.1 + 1940.0 = 2131.1
DL input+output M: L = 352.5 + 43322.2 = 43674.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: fillResizeAlike(blue, ^.layer_0.shape.size, ^.layer_0)
  _01: a point with color yellow at (max(^.layer_01.pos.j, ^.layer_011.pos.j),?)
  _011: a point with color ? at (?,^.layer_011111.pos.j - ^.layer_011111.pos.i - ^.layer_01.pos.i)
  _0111: a point with color orange at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 157.1 + 40.0 = 197.1
DL output with Mo: L = 191.1 + 1940.0 = 2131.1
DL input+output M: L = 348.2 + 1980.0 = 2328.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a rectangle with size (8,1) and color orange and mask Full at (2,0)
  _011: a point with color green at (0,0)
  _0111: a point with color orange at (0,4)
  _01111: a point with color pink at (0,6)
  _011111: a point with color cyan at (0,8)
  _0111111: a point with color grey at (0,9)
  _01111111: a point with color orange at (0,10)
diff: 
delta: (1,2)=9# (1,5)=3  (1,9)=6  (2,1)=2  (2,6)=2  (2,9)=3  (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,0)=0  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,0)=0  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
   (2.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (0,10)
  _011: a point with color red at (2,10)
  _0111: a point with color orange at (1,8)
diff: 
delta: (0,9)=3 
   (68.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a rectangle with size (1,4) and color red and mask Full at (8,5)
  _011: a point with color green at (0,0)
  _0111: a point with color orange at (0,4)
  _01111: a point with color pink at (0,6)
  _011111: a point with color cyan at (0,8)
  _0111111: a point with color grey at (0,9)
  _01111111: a point with color orange at (0,10)
diff: 
delta: (1,2)=9# (1,5)=3  (1,9)=6  (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,6)=0  (8,10)=7# (9,0)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a rectangle with size (8,1) and color orange and mask Full at (2,0)
  _011: a point with color green at (0,0)
  _0111: a point with color orange at (0,4)
  _01111: a point with color pink at (0,6)
  _011111: a point with color cyan at (0,8)
  _0111111: a point with color grey at (0,9)
  _01111111: a point with color orange at (0,10)
diff: 
delta: (1,2)=9# (1,5)=3  (1,9)=6  (2,1)=2  (2,6)=2  (2,9)=3  (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,0)=0  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,0)=0  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color pink at (0,9)
  _01111: a point with color orange at (1,2)
  _011111: a point with color brown at (1,10)
  _0111111: a point with color pink at (2,1)
  _01111111: a point with color blue at (2,5)
diff: 
delta: (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (5,10)
  _011: a point with color brown at (4,9)
  _0111: a point with color orange at (6,8)
diff: 
delta:
   (28.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color pink at (0,9)
  _01111: a point with color orange at (1,2)
  _011111: a point with color brown at (1,10)
  _0111111: a point with color pink at (2,1)
  _01111111: a point with color blue at (2,5)
diff: 
delta: (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
! 6 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (2,5)
  _011: a point with color orange at (0,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color orange at (0,8)
  _011111: a point with color cyan at (1,0)
  _0111111: a point with color green at (1,1)
  _01111111: a point with color pink at (1,2)
diff: 
delta: (1,9)=8  (4,1)=8  (4,2)=7# (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (5,0)
  _011: a point with color pink at (6,1)
  _0111: a point with color orange at (6,2)
diff: 
delta: (5,2)=8 
   (68.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (2,5)
  _011: a point with color orange at (0,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color orange at (0,8)
  _011111: a point with color cyan at (1,0)
  _0111111: a point with color green at (1,1)
  _01111111: a point with color pink at (1,2)
diff: 
delta: (1,9)=8  (4,1)=8  (4,2)=7# (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (4,1) and color orange and mask Full at (5,0)
  _011: a point with color green at (0,0)
  _0111: a point with color blue at (0,5)
  _01111: a point with color red at (0,10)
  _011111: a point with color red at (1,1)
  _0111111: a point with color green at (1,5)
  _01111111: a point with color pink at (1,9)
diff: 
delta: (4,1)=1  (4,9)=3  (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,0)=0  (6,9)=6  (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
   (2.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (0,5)
  _011: a point with color green at (2,5)
  _0111: a point with color orange at (1,5)
diff: 
delta:
   (28.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a point with color blue at (0,5)
  _0111: a point with color red at (0,10)
  _01111: a point with color red at (1,1)
  _011111: a point with color green at (1,5)
  _0111111: a point with color pink at (1,9)
  _01111111: a point with color blue at (4,1)
diff: 
delta: (4,9)=3  (5,0)=7# (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (4,1) and color orange and mask Full at (5,0)
  _011: a point with color green at (0,0)
  _0111: a point with color blue at (0,5)
  _01111: a point with color red at (0,10)
  _011111: a point with color red at (1,1)
  _0111111: a point with color green at (1,5)
  _01111111: a point with color pink at (1,9)
diff: 
delta: (4,1)=1  (4,9)=3  (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,0)=0  (6,9)=6  (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (0,0)
  _011: a point with color green at (0,9)
  _0111: a point with color orange at (1,0)
  _01111: a point with color pink at (1,1)
  _011111: a point with color orange at (1,5)
  _0111111: a point with color pink at (1,8)
  _01111111: a point with color orange at (1,9)
diff: 
delta: (0,1)=0  (0,2)=3  (2,4)=6  (2,6)=3  (2,10)=2  (4,0)=7# (4,8)=6  (4,10)=4  (5,1)=6  (5,5)=2  (5,6)=7# (5,9)=2  (6,0)=6  (6,2)=2  (6,5)=3  (6,9)=7# (8,0)=7# (8,5)=6  (8,8)=2  (8,9)=3  (9,2)=6  (9,5)=2  (10,0)=2  (10,5)=7# (10,9)=6  (10,10)=7#
! 7 wrong pixels (generated / expected)

TEST 6d0160f0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.7 sec (12.7 sec/task)
bits-train-error = 1940.0 bits (1940.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-237] Checking task 6d0aefbc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6799.9 = 6812.5
DL output with Mo: L = 12.6 + 13019.1 = 13031.8
DL input+output M: L = 25.2 + 19819.0 = 19844.3

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id flipWidth ], ^.grid)
0.598	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.009	
0.005	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 3429.6 = 3484.5
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 68.8 + 3429.6 = 3498.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color pink and layers
diff: 
delta: (1,0)=1  (1,2)=1  (2,0)=8  (2,1)=8 
   (0.0 bits)
data: 
6 6 6 6 6 6 
1 6 1 1 6 1 
8 8 6 6 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (1,0)=1  (1,2)=1  (2,0)=8  (2,1)=8 
correct output grid

TRAIN 6d0aefbc.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=6  (0,1)=8  (1,0)=6  (2,2)=6 
   (0.0 bits)
data: 
6 8 1 1 8 6 
6 1 1 1 1 6 
1 1 6 6 1 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=6  (0,1)=8  (1,0)=6  (2,2)=6 
correct output grid

TRAIN 6d0aefbc.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (1,0)=8  (1,2)=6  (2,0)=6  (2,1)=8  (2,2)=8 
   (0.0 bits)
data: 
1 1 1 1 1 1 
8 1 6 6 1 8 
6 8 8 8 8 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (1,0)=8  (1,2)=6  (2,0)=6  (2,1)=8  (2,2)=8 
correct output grid

TRAIN 6d0aefbc.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (1,0)=1 
   (0.0 bits)
data: 
1 1 1 1 1 1 
1 6 6 6 6 1 
6 6 6 6 6 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (1,0)=1 
correct output grid

TRAIN 6d0aefbc.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (0,1)=8  (1,0)=8  (1,2)=8  (2,0)=1  (2,2)=1 
correct output grid

TEST 6d0aefbc.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-236] Checking task 6d58a25d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 28102.6 = 28115.2
DL output with Mo: L = 12.6 + 55588.5 = 55601.1
DL input+output M: L = 25.2 + 83691.1 = 83716.4

# learning a model for train pairs
2.000	
1.653	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.307	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.085	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	OUT ADD ^.layer_00 = ^.layer_0
0.896	IN  SPE ^.layer_0.shape.mask = ...x...|..xxx..|.xx.xx.|x.....x
0.874	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.853	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.831	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.810	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.789	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.767	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.745	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.724	OUT ADD ^.layer_011 = ^.layer_011
0.703	OUT ADD ^.layer_0111 = ^.layer_0111
0.681	OUT ADD ^.layer_01111 = ^.layer_01111
0.660	OUT ADD ^.layer_011111 = ^.layer_011111
0.639	OUT ADD ^.layer_010 = ^.layer_01
0.626	OUT SPE ^.size = ^.size
0.623	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.620	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.617	IN  SPE ^.color = black
0.615	OUT SPE ^.layer_01.pos.j = ^.layer_01111111.pos.j
0.612	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i - ^.layer_011.pos.i - ^.layer_0.pos.i
0.609	OUT SPE ^.layer_0.pos.j = right(^.layer_0) + ^.layer_01.pos.i - ^.layer_0.pos.i
0.607	OUT SPE ^.layer_0.shape.mask = Full
0.606	OUT SPE ^.layer_01.shape.size.j = 1
0.604	OUT SPE ^.layer_01.shape.mask = Full
0.603	OUT SPE ^.color = black
0.142	
0.141	IN  GEN ^.layer_0.shape.mask = ?
0.141	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_0.pos.i - ^.layer_011.pos.i - ^.layer_0.pos.i,right(^.layer_0) + ^.layer_01.pos.i - ^.layer_0.pos.i)
  _010: ^.layer_01
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01111111.pos.j)
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ...x...|..xxx..|.xx.xx.|x.....x at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 178.6 + 12965.2 = 13143.8
DL output with Mo: L = 218.7 + 7293.6 = 7512.3
DL input+output M: L = 397.3 + 20258.8 = 20656.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_0.pos.i - ^.layer_011.pos.i - ^.layer_0.pos.i,right(^.layer_0) + ^.layer_01.pos.i - ^.layer_0.pos.i)
  _010: ^.layer_01
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01111111.pos.j)
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 147.7 + 20.0 = 167.7
DL output with Mo: L = 218.7 + 7293.6 = 7512.3
DL input+output M: L = 366.4 + 7313.6 = 7680.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
  _011111: a point with color cyan at (10,18)
  _0111111: a point with color cyan at (13,9)
  _01111111: a point with color cyan at (18,15)
diff: 
delta: (19,1)=8 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _0: a rectangle with size (13,1) and color cyan and mask Full at (7,9)
  _010: a point with color cyan at (2,5)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (18,15)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
  _011111: a point with color cyan at (10,18)
diff: 
delta: (19,1)=8 
   (65.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
  _011111: a point with color cyan at (10,18)
  _0111111: a point with color cyan at (13,9)
  _01111111: a point with color cyan at (18,15)
diff: 
delta: (19,1)=8 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
  _011111: a point with color cyan at (10,18)
  _0111111: a point with color cyan at (13,9)
  _01111111: a point with color cyan at (19,1)
diff: 
delta: (18,15)=8 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
  _011111: a point with color cyan at (10,18)
  _0111111: a point with color cyan at (18,15)
  _01111111: a point with color cyan at (13,9)
diff: 
delta: (19,1)=8 
! 16 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
  _011111: a point with color red at (9,17)
  _0111111: a point with color red at (10,1)
  _01111111: a point with color red at (10,9)
diff: 
delta: (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _0: a rectangle with size (12,1) and color red and mask Full at (8,6)
  _010: a point with color red at (1,8)
  _01: a rectangle with size (12,1) and color red and mask Full at (8,9)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
  _011111: a point with color red at (9,17)
diff: 
delta: (10,1)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (192.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
  _011111: a point with color red at (9,17)
  _0111111: a point with color red at (10,1)
  _01111111: a point with color red at (10,9)
diff: 
delta: (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
  _011111: a point with color red at (9,17)
  _0111111: a point with color red at (10,1)
  _01111111: a point with color red at (12,6)
diff: 
delta: (10,9)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
  _011111: a point with color red at (9,17)
  _0111111: a point with color red at (10,9)
  _01111111: a point with color red at (10,1)
diff: 
delta: (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! 30 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
  _011111: a point with color green at (5,7)
  _0111111: a point with color green at (5,18)
  _01111111: a point with color green at (9,10)
diff: 
delta: (7,4)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _0: a rectangle with size (14,2) and color green and mask Full at (6,12)
  _010: a point with color green at (1,14)
  _01: a rectangle with size (13,1) and color green and mask Full at (7,10)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
  _011111: a point with color green at (5,7)
diff: 
delta: (5,18)=3  (7,4)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,18)=3  (15,4)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,19)=3 
   (471.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
  _011111: a point with color green at (5,7)
  _0111111: a point with color green at (5,18)
  _01111111: a point with color green at (7,4)
diff: 
delta: (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! 50 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
  _011111: a point with color green at (5,7)
  _0111111: a point with color green at (5,18)
  _01111111: a point with color green at (9,10)
diff: 
delta: (7,4)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! 50 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
  _011111: a point with color green at (5,7)
  _0111111: a point with color green at (7,4)
  _01111111: a point with color green at (5,18)
diff: 
delta: (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! 50 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ...x...|..xxx..|.xx.xx.|x.....x at (3,3)
  _01: a point with color pink at (1,4)
  _011: a point with color pink at (1,10)
  _0111: a point with color pink at (1,18)
  _01111: a point with color pink at (2,11)
  _011111: a point with color pink at (3,2)
  _0111111: a point with color pink at (5,13)
  _01111111: a point with color pink at (5,18)
diff: 
delta: (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ...x...|..xxx..|.xx.xx.|x.....x at (3,3)
  _01: a point with color pink at (1,4)
  _011: a point with color pink at (1,10)
  _0111: a point with color pink at (1,18)
  _01111: a point with color pink at (2,11)
  _011111: a point with color pink at (3,2)
  _0111111: a point with color pink at (5,13)
  _01111111: a point with color pink at (7,7)
diff: 
delta: (5,18)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! 55 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ...x...|..xxx..|.xx.xx.|x.....x at (3,3)
  _01: a point with color pink at (1,4)
  _011: a point with color pink at (1,10)
  _0111: a point with color pink at (1,18)
  _01111: a point with color pink at (2,11)
  _011111: a point with color pink at (3,2)
  _0111111: a point with color pink at (5,18)
  _01111111: a point with color pink at (5,13)
diff: 
delta: (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! 55 wrong pixels (generated / expected)

TEST 6d58a25d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.7 sec (54.7 sec/task)
bits-train-error = 7293.6 bits (7293.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-235] Checking task 6d75e8bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21992.2 = 22004.8
DL output with Mo: L = 12.6 + 34249.7 = 34262.3
DL input+output M: L = 25.2 + 56241.9 = 56267.2

# learning a model for train pairs
2.000	
1.125	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.507	OUT ADD ^.layer_0 = ^.layer_0
0.187	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.170	OUT SPE ^.size = ^.size
0.162	IN  SPE ^.layer_0.shape.color = cyan
0.158	OUT SPE ^.layer_01.shape.color = red
0.153	OUT SPE ^.layer_01.pos.i = 2
0.148	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.i
0.145	IN  SPE ^.color = black
0.142	OUT SPE ^.layer_01.shape.mask = Full
0.140	OUT SPE ^.color = black
0.028	
0.028	IN  GEN ^.layer_0.shape.color = ?
0.028	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (2,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2461.5 = 2503.8
DL output with Mo: L = 61.3 + 837.8 = 899.1
DL input+output M: L = 103.5 + 3299.3 = 3402.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (2,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 61.3 + 837.8 = 899.1
DL input+output M: L = 100.1 + 837.8 = 937.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
  _01: a rectangle with size (9,3) and color red and mask Full at (2,2)
diff: 
delta:
   (16.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
  _01: a rectangle with size (3,5) and color red and mask Full at (2,1)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
  _01: a rectangle with size (5,3) and color red and mask Full at (2,1)
diff: 
delta: (2,4)=2 
   (53.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,7) and color cyan and mask x......|x...xx.|x.x..x.|xxx..x.|xxxx.xx|xxxxxxx at (2,2)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TEST 6d75e8bb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 837.8 bits (837.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-234] Checking task 6e02f1e3.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5622.5 = 5635.1
DL output with Mo: L = 12.6 + 6028.8 = 6041.4
DL input+output M: L = 25.2 + 11651.3 = 11676.5

# learning a model for train pairs
2.000	
1.424	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.944	OUT SPE ^.size = ^.size
0.879	OUT SPE ^.layer_0.pos = '(0, 0)
0.826	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.780	OUT SPE ^.layer_0.shape.color = grey
0.759	OUT SPE ^.color = black
0.139	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color grey and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 3495.2 = 3534.0
DL output with Mo: L = 41.9 + 756.0 = 797.9
DL input+output M: L = 80.7 + 4251.1 = 4331.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color grey and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 41.9 + 756.0 = 797.9
DL input+output M: L = 80.7 + 756.0 = 836.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color green and mask x.x|xxx at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color green and mask x.x|xxx at (1,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,0)=4  (2,0)=4  (2,1)=4 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,0)=4  (2,0)=4  (2,1)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta: (1,1)=2  (1,2)=2  (2,2)=2 
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
diff: 
delta: (1,1)=3  (2,0)=3  (2,2)=3 
! 5 wrong pixels (generated / expected)

TEST 6e02f1e3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 756.0 bits (756.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-233] Checking task 6e19193c.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5022.3 = 5034.9
DL output with Mo: L = 12.6 + 10268.1 = 10280.7
DL input+output M: L = 25.2 + 15290.3 = 15315.6

# learning a model for train pairs
2.000	
1.700	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.390	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.171	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.952	OUT ADD ^.layer_01 = ^.layer_01
0.732	OUT ADD ^.layer_00 = ^.layer_0
0.624	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	OUT SPE ^.size = ^.size
0.552	IN  SPE ^.layer_0.shape.mask = x.|xx
0.518	IN  SPE ^.layer_01.shape.mask = xx|.x
0.507	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.497	OUT SPE ^.layer_011.shape.color = ^.layer_01.shape.color
0.487	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j + 2
0.477	OUT SPE ^.layer_011.pos.i = ^.layer_01.pos.j
0.468	IN  SPE ^.color = black
0.459	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j / '2
0.451	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.i / '2
0.446	OUT SPE ^.color = black
0.148	
0.147	IN  GEN ^.layer_01.shape.mask = ?
0.146	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j / '2,^.layer_0.pos.j + 2)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.j,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask x.|xx at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask xx|.x at (?,?)

DL input  with Mi: L = 77.2 + 1501.6 = 1578.8
DL output with Mo: L = 158.9 + 1202.9 = 1361.8
DL input+output M: L = 236.0 + 2704.6 = 2940.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j / '2,^.layer_0.pos.j + 2)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.j,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask x.|xx at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 70.6 + 0.0 = 70.6
DL output with Mo: L = 158.9 + 1202.9 = 1361.8
DL input+output M: L = 229.5 + 1202.9 = 1432.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _0: a rectangle with size (2,2) and color orange and mask Odd Checkboard at (0,3)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _011: a rectangle with size (4,4) and color orange and mask ...x|..x.|.x..|x... at (6,2)
diff: 
delta:
   (52.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
diff:   ^.layer_0.shape.mask
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (1,2) and color orange and mask Full at (4,6)
diff: 
delta: (5,7)=7#
! 11 wrong pixels (generated / expected)

TRAIN 6e19193c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _0: a rectangle with size (5,5) and color brown and mask ....x|...x.|..x..|.x...|x.... at (1,5)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _011: a rectangle with size (3,3) and color brown and mask ..x|.x.|x.. at (3,0)
diff: 
delta:
   (68.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _01: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
diff:   ^.layer_0.shape.mask
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (1,2) and color brown and mask Full at (1,3)
diff: 
delta: (2,4)=9#
! 15 wrong pixels (generated / expected)

TRAIN 6e19193c.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,7)
diff:   ^.layer_0.shape.mask
delta: (6,2)=8  (6,3)=8  (7,3)=8 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (6,2)
diff:   ^.layer_0.shape.mask
delta: (4,7)=8  (4,8)=8  (5,7)=8 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,7)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
diff:   ^.layer_0.shape.mask
delta: (6,2)=8  (6,3)=8  (7,3)=8 
! 14 wrong pixels (generated / expected)

TEST 6e19193c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 1202.9 bits (1202.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-232] Checking task 6e82a1ae.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17643.4 = 17656.0
DL output with Mo: L = 12.6 + 17643.4 = 17656.0
DL input+output M: L = 25.2 + 35286.7 = 35312.0

# learning a model for train pairs
2.000	
1.805	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.610	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.444	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.277	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.159	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.814	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.730	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	IN  SPE ^.layer_0.shape.color = grey
0.707	IN  SPE ^.layer_01.shape.color = grey
0.655	OUT SPE ^.layer_0 = coloring(^.layer_0, blue)
0.607	OUT SPE ^.layer_01111 = coloring(^.layer_01111, green)
0.573	OUT SPE ^.size = ^.size
0.554	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.544	IN  SPE ^.layer_011.shape.color = grey
0.525	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.508	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.185	
0.184	IN  GEN ^.layer_011.shape.color = ?
0.184	IN  GEN ^.layer_01.shape.color = ?
0.184	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, blue)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at ^.layer_0111.pos
  _01111: coloring(^.layer_01111, green)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 173.5 + 5743.1 = 5916.6
DL output with Mo: L = 106.1 + 2949.5 = 3055.6
DL input+output M: L = 279.6 + 8692.5 = 8972.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, blue)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at ^.layer_0111.pos
  _01111: coloring(^.layer_01111, green)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 31.7 = 195.2
DL output with Mo: L = 106.1 + 2949.5 = 3055.6
DL input+output M: L = 269.6 + 2981.2 = 3250.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
  _01111: a rectangle with size (1,2) and color grey and mask Full at (6,5)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,9)
  _01111: a rectangle with size (1,2) and color green and mask Full at (6,5)
diff: 
delta: (7,1)=3  (8,1)=3 
   (154.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
  _01111: a rectangle with size (1,2) and color grey and mask Full at (6,5)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
  _011111: a rectangle with size (1,2) and color grey and mask Full at (6,5)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (1,2) and color grey and mask Full at (6,5)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,1)
  _01: a rectangle with size (1,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (2,7)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (8,1)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color red and mask xx|x. at (5,3)
  _01111: a rectangle with size (2,1) and color green and mask Full at (2,7)
diff: 
delta:
   (75.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,1)
  _01: a rectangle with size (1,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (2,7)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,1)
  _01: a rectangle with size (1,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (2,7)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,1)
  _01: a rectangle with size (1,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (2,7)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (1,2) and color grey and mask Full at (7,0)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (1,7)
diff: 
delta:
   (3.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (6,0)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (1,6)
  _011: a rectangle with size (1,2) and color green and mask Full at (5,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (7,0)
  _01111: a rectangle with size (2,1) and color green and mask Full at (1,2)
diff: 
delta:
   (65.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
  _01111: a rectangle with size (1,2) and color grey and mask Full at (7,0)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (1,7)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (1,7)
  _011111: a rectangle with size (1,2) and color grey and mask Full at (7,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (1,2) and color grey and mask Full at (7,0)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (1,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|xx. at (2,1)
  _01: a rectangle with size (4,1) and color grey and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color grey and mask xx|.x at (2,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _01111: a rectangle with size (1,2) and color grey and mask Full at (7,3)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|xx. at (2,1)
  _01: a rectangle with size (4,1) and color grey and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color grey and mask xx|.x at (2,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
  _011111: a rectangle with size (1,2) and color grey and mask Full at (7,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|xx. at (2,1)
  _01: a rectangle with size (4,1) and color grey and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color grey and mask xx|.x at (2,5)
  _0111: a rectangle with size (1,2) and color grey and mask Full at (7,3)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (6,0)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (7,7)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST 6e82a1ae.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 2949.5 bits (2949.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-231] Checking task 6ecd11f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 149027.6 = 149040.2
DL output with Mo: L = 12.6 + 7819.2 = 7831.8
DL input+output M: L = 25.2 + 156846.8 = 156872.1

# learning a model for train pairs
2.000	
1.144	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.044	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.966	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.910	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.832	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.751	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.730	OUT SPE ^.layer_01111.shape.color = pink
0.700	OUT SPE ^.layer_011.pos = '(0, 2)
0.669	OUT SPE ^.layer_01.pos = '(0, 0)
0.654	OUT SPE ^.layer_0111.pos.i = 1
0.639	OUT SPE ^.layer_0.pos.j = '0
0.627	OUT SPE ^.layer_0.shape.size.i = 1
0.614	OUT SPE ^.layer_0.shape.mask = Full
0.605	OUT SPE ^.color = black
0.596	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.587	OUT SPE ^.layer_0111.pos.j = ^.layer_01.pos.j / colorCount(^.grid)
0.580	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.564	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size
0.560	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	OUT SPE ^.size = ^.layer_01.shape.size + span(^.layer_011.pos, ^.layer_010.pos)
0.391	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size + span(^.layer_011.pos, ^.layer_010.pos) and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at (?,'0)
  _01: a point with color ? at '(0, 0)
  _011: a point with color ? at '(0, 2)
  _0111: a point with color ? at (1,^.layer_01.pos.j / colorCount(^.grid))
  _01111: a point with color pink at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 18684.3 = 18798.4
DL output with Mo: L = 226.0 + 2826.5 = 3052.5
DL input+output M: L = 340.1 + 21510.8 = 21851.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size + span(^.layer_011.pos, ^.layer_010.pos) and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at (?,'0)
  _01: a point with color ? at '(0, 0)
  _011: a point with color ? at '(0, 2)
  _0111: a point with color ? at (1,^.layer_01.pos.j / colorCount(^.grid))
  _01111: a point with color pink at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 226.0 + 2826.5 = 3052.5
DL input+output M: L = 340.1 + 2846.5 = 3186.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _01: a rectangle with size (1,1) and color blue and mask Full at (19,8)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (20,8)
diff: 
delta: (19,9)=7# (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,0)
  _01: a point with color green at (0,0)
  _011: a point with color orange at (0,2)
  _0111: a point with color cyan at (1,1)
  _01111: a point with color pink at (2,2)
diff: 
delta:
   (34.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _01: a rectangle with size (1,1) and color blue and mask Full at (19,8)
  _011: a rectangle with size (1,1) and color orange and mask Full at (19,9)
diff: 
delta: (20,7)=2  (20,8)=8  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 2x4 instead of 3x3
>> Trial 2
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _01: a rectangle with size (1,1) and color blue and mask Full at (19,8)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (20,8)
diff: 
delta: (19,9)=7# (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
! 5 wrong pixels (generated / expected)

TRAIN 6ecd11f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _01: a rectangle with size (1,1) and color red and mask Full at (19,8)
  _011: a rectangle with size (1,1) and color blue and mask Full at (19,9)
diff: 
delta: (19,10)=7# (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,2)
  _0111: a point with color cyan at (1,1)
  _01111: a point with color pink at (2,1)
diff: 
delta: (2,2)=1 
   (70.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _01: a rectangle with size (1,1) and color red and mask Full at (19,8)
  _011: a rectangle with size (1,1) and color blue and mask Full at (19,9)
diff: 
delta: (19,10)=7# (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _01: a rectangle with size (1,1) and color red and mask Full at (19,8)
  _011: a rectangle with size (1,1) and color orange and mask Full at (19,10)
diff: 
delta: (19,9)=1  (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
! size mismatch, 3x4 instead of 3x3

TRAIN 6ecd11f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _01: a rectangle with size (1,3) and color grey and mask Full at (18,18)
  _011: a rectangle with size (1,3) and color red and mask Full at (19,17)
diff: 
delta: (16,17)=4  (16,18)=1  (16,19)=9# (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,19)=7# (19,18)=4  (19,20)=7#
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
  _01: a point with color yellow at (0,0)
  _011: a point with color brown at (0,2)
  _0111: a point with color pink at (1,2)
  _01111: a point with color pink at (1,0)
diff: 
delta: (0,3)=4  (2,0)=3  (2,3)=5# (3,1)=4 
   (178.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _01: a rectangle with size (1,3) and color grey and mask Full at (18,18)
  _011: a rectangle with size (1,3) and color red and mask Full at (19,17)
diff: 
delta: (16,17)=4  (16,18)=1  (16,19)=9# (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,19)=7# (19,18)=4  (19,20)=7#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _01: a rectangle with size (1,3) and color red and mask Full at (19,17)
  _011: a rectangle with size (1,3) and color grey and mask Full at (18,18)
diff: 
delta: (16,17)=4  (16,18)=1  (16,19)=9# (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,19)=7# (19,18)=4  (19,20)=7#
! size mismatch, 3x5 instead of 4x4

TRAIN 6ecd11f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 6ecd11f4.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 57.8 sec (57.8 sec/task)
bits-train-error = 2826.5 bits (2826.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-230] Checking task 6f8cd79b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 683.7 = 696.4
DL output with Mo: L = 12.6 + 8491.1 = 8503.7
DL input+output M: L = 25.2 + 9174.9 = 9200.1

# learning a model for train pairs
2.000	
1.244	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.103	IN  SPE ^.color = black
1.034	OUT SPE ^.size = ^.size
0.969	OUT SPE ^.layer_0.shape.size = ^.size
0.928	OUT SPE ^.layer_0.pos = '(0, 0)
0.902	OUT SPE ^.layer_0.shape.color = cyan
0.876	OUT SPE ^.layer_0.shape.mask = Border
0.865	OUT SPE ^.color = black
0.024	
0.024	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color cyan and mask Border at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 12.7 + 585.4 = 598.2
DL output with Mo: L = 46.7 + 0.0 = 46.7
DL input+output M: L = 59.5 + 585.4 = 644.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color cyan and mask Border at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 46.7 + 0.0 = 46.7
DL input+output M: L = 59.4 + 0.0 = 59.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (4,3) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,4) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (5,6) and color black and layers
diff: 
delta:
   (0.0 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,6) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
diff: 
delta:
correct output grid

TEST 6f8cd79b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-229] Checking task 6fa7a44f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8168.6 = 8181.2
DL output with Mo: L = 12.6 + 15818.2 = 15830.8
DL input+output M: L = 25.2 + 23986.8 = 24012.0

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id ] [ flipHeight ], ^.grid)
0.704	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.529	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.513	IN  SPE ^.layer_01.shape.mask = Full
0.011	
0.008	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_0
0.002	IN  DEL ^.layer_011

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id ] [ flipHeight ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 81.0 + 4110.8 = 4191.7
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 94.8 + 4110.8 = 4205.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id ] [ flipHeight ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=9# (0,2)=4  (1,0)=9# (1,2)=4  (2,0)=2 
   (0.0 bits)
data: 
9#1 4 
9#1 4 
2 1 1 
2 1 1 
9#1 4 
9#1 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=9# (0,2)=4  (1,0)=9# (1,2)=4  (2,0)=2 
correct output grid

TRAIN 6fa7a44f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=4  (0,1)=8  (0,2)=4  (1,1)=6  (2,0)=8  (2,2)=8 
   (0.0 bits)
data: 
4 8 4 
7#6 7#
8 7#8 
8 7#8 
7#6 7#
4 8 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=4  (0,1)=8  (0,2)=4  (1,1)=6  (2,0)=8  (2,2)=8 
correct output grid

TRAIN 6fa7a44f.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color orange and layers
diff: 
delta: (1,0)=9# (1,1)=5# (1,2)=5# (2,0)=5# (2,1)=1 
   (0.0 bits)
data: 
7#7#7#
9#5#5#
5#1 7#
5#1 7#
9#5#5#
7#7#7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
diff: 
delta: (1,0)=9# (1,1)=5# (1,2)=5# (2,0)=5# (2,1)=1 
correct output grid

TRAIN 6fa7a44f.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=6  (0,2)=9# (1,1)=6  (1,2)=9# (2,1)=9#
   (0.0 bits)
data: 
2 6 9#
2 6 9#
2 9#2 
2 9#2 
2 6 9#
2 6 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=6  (0,2)=9# (1,1)=6  (1,2)=9# (2,1)=9#
correct output grid

TRAIN 6fa7a44f.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=9# (1,0)=8  (1,1)=5# (2,2)=8 
correct output grid

TEST 6fa7a44f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-228] Checking task 72322fa7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14042.3 = 14055.0
DL output with Mo: L = 12.6 + 22935.2 = 22947.8
DL input+output M: L = 25.2 + 36977.5 = 37002.7

# learning a model for train pairs
2.000	
1.854	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.719	OUT ADD ^.layer_0 = ^.layer_0
1.597	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.479	OUT ADD ^.layer_01 = ^.layer_01
1.362	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
1.244	OUT ADD ^.layer_011 = ^.layer_0.shape at (?,?)
1.200	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.157	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.114	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.066	OUT ADD ^.layer_0110 = ^.layer_0111
1.020	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.975	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.924	OUT ADD ^.layer_001 = ^.layer_00
0.890	OUT ADD ^.layer_000 = ^.layer_00.shape at (?,?)
0.861	OUT SPE ^.size = ^.size
0.853	OUT SPE ^.layer_011.pos.j = bottom(^.layer_0) + 3
0.846	OUT SPE ^.layer_011.pos.i = ^.layer_0111.pos.i
0.839	OUT SPE ^.layer_00.pos.i = ^.layer_011.pos.i
0.833	OUT SPE ^.layer_0111.pos.j = span(^.layer_0111.pos.i, ^.layer_00.pos.i) + ^.layer_01.shape.size.j
0.828	IN  SPE ^.color = black
0.823	OUT SPE ^.layer_000.pos.j = span(^.layer_0.pos.j, ^.layer_0111.pos.j) - ^.layer_011.pos.i - ^.layer_00.pos.i
0.819	OUT SPE ^.layer_0111.shape.mask = Full
0.815	OUT SPE ^.layer_000.pos.i = span(^.layer_0.pos.j, ^.layer_01110.pos.j) + ^.layer_0111.pos.j - ^.layer_011.pos.j
0.812	OUT SPE ^.color = black
0.809	OUT SPE ^.layer_0111.shape.size.i = ^.layer_01.shape.size.i - ^.layer_0.pos.i - ^.layer_00.pos.i
0.267	
0.267	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: ^.layer_00.shape at (span(^.layer_0.pos.j, ^.layer_01110.pos.j) + ^.layer_0111.pos.j - ^.layer_011.pos.j,span(^.layer_0.pos.j, ^.layer_0111.pos.j) - ^.layer_011.pos.i - ^.layer_00.pos.i)
  _00: ^.layer_0.shape at (^.layer_011.pos.i,?)
  _001: ^.layer_00
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_0111
  _011: ^.layer_0.shape at (^.layer_0111.pos.i,bottom(^.layer_0) + 3)
  _0111: a rectangle with size (^.layer_01.shape.size.i - ^.layer_0.pos.i - ^.layer_00.pos.i,?) and color ? and mask Full at (?,span(^.layer_0111.pos.i, ^.layer_00.pos.i) + ^.layer_01.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 126.5 + 7627.8 = 7754.3
DL output with Mo: L = 492.7 + 5417.9 = 5910.6
DL input+output M: L = 619.2 + 13045.7 = 13665.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: ^.layer_00.shape at (span(^.layer_0.pos.j, ^.layer_01110.pos.j) + ^.layer_0111.pos.j - ^.layer_011.pos.j,span(^.layer_0.pos.j, ^.layer_0111.pos.j) - ^.layer_011.pos.i - ^.layer_00.pos.i)
  _00: ^.layer_0.shape at (^.layer_011.pos.i,?)
  _001: ^.layer_00
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_0111
  _011: ^.layer_0.shape at (^.layer_0111.pos.i,bottom(^.layer_0) + 3)
  _0111: a rectangle with size (^.layer_01.shape.size.i - ^.layer_0.pos.i - ^.layer_00.pos.i,?) and color ? and mask Full at (?,span(^.layer_0111.pos.i, ^.layer_00.pos.i) + ^.layer_01.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 126.4 + 0.0 = 126.4
DL output with Mo: L = 492.7 + 5417.9 = 5910.6
DL input+output M: L = 619.1 + 5417.9 = 6037.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _01110: a point with color pink at (5,19)
  _0111: a point with color blue at (9,1)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
   (0.0 bits)
data: a background with size (13,22) and color black and layers
  _000: a point with color green at (10,2)
  _00: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (4,18)
  _001: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _0110: a point with color blue at (9,1)
  _011: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,8)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,12)
diff: 
delta: (0,14)=1  (2,12)=1  (2,14)=1  (4,6)=6  (5,19)=6  (9,3)=1  (10,9)=6  (10,16)=6  (11,1)=1  (11,3)=1 
   (415.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _01110: a point with color pink at (5,19)
  _0111: a point with color blue at (9,1)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _01110: a point with color pink at (5,19)
  _0111: a point with color blue at (9,3)
diff: 
delta: (9,1)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _01110: a point with color blue at (9,1)
  _0111: a point with color pink at (5,19)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 30 wrong pixels (generated / expected)

TRAIN 72322fa7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,0)
  _01110: a point with color yellow at (9,2)
  _0111: a point with color cyan at (10,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,12) and color black and layers
  _000: a point with color cyan at (9,1)
  _00: a rectangle with size (1,3) and color yellow and mask Full at (9,0)
  _001: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _0110: a point with color cyan at (10,7)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (10,6)
  _0111: a rectangle with size (1,3) and color yellow and mask Full at (4,9)
diff: 
delta:
   (24.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,0)
  _01110: a point with color yellow at (9,2)
  _0111: a point with color cyan at (10,7)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,0)
  _01110: a point with color cyan at (10,7)
  _0111: a point with color yellow at (9,2)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,2)
  _01110: a point with color yellow at (9,0)
  _0111: a point with color cyan at (10,7)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 72322fa7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _01110: a point with color cyan at (3,10)
  _0111: a point with color red at (11,5)
diff: 
delta: (5,3)=3  (12,12)=3 
   (0.0 bits)
data: a background with size (14,19) and color black and layers
  _000: a point with color red at (3,9)
  _00: a rectangle with size (1,3) and color cyan and mask Full at (3,8)
  _001: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _0110: a point with color red at (11,5)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (11,4)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (11,12)
diff: 
delta: (5,3)=3  (12,12)=3 
   (102.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _01110: a point with color cyan at (3,10)
  _0111: a point with color red at (11,5)
diff: 
delta: (5,3)=3  (12,12)=3 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _01110: a point with color cyan at (3,10)
  _0111: a point with color green at (12,12)
diff: 
delta: (5,3)=3  (11,5)=2 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _01110: a point with color red at (11,5)
  _0111: a point with color cyan at (3,10)
diff: 
delta: (5,3)=3  (12,12)=3 
! 22 wrong pixels (generated / expected)

TRAIN 72322fa7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-3,2) and color col10 and mask Full at (0,5)

TEST 72322fa7.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 21.7 sec (21.7 sec/task)
bits-train-error = 5417.9 bits (5417.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-227] Checking task 72ca375d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19885.9 = 19898.5
DL output with Mo: L = 12.6 + 2033.3 = 2045.9
DL input+output M: L = 25.2 + 21919.2 = 21944.5

# learning a model for train pairs
2.000	
1.657	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.359	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.103	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.774	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.567	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.395	OUT SPE ^.size = ^.layer_01.shape.size
0.289	OUT SPE ^.layer_0.pos = '(0, 0)
0.253	OUT SPE ^.color = black
0.249	IN  SPE ^.color = black
0.030	
0.029	IN  DEL ^.layer_011
0.029	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 4408.0 = 4497.4
DL output with Mo: L = 46.8 + 0.0 = 46.8
DL input+output M: L = 136.2 + 4408.0 = 4544.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 51.7 = 115.9
DL output with Mo: L = 46.8 + 0.0 = 46.8
DL input+output M: L = 111.0 + 51.7 = 162.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
diff: 
delta: (2,7)=7# (2,8)=7# (3,6)=7# (3,8)=7#
   (2.0 bits)
data: a background with size (2,4) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _01: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
diff: 
delta: (2,7)=7# (2,8)=7# (3,6)=7# (3,8)=7#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
diff: 
delta: (2,7)=7# (2,8)=7# (3,6)=7# (3,8)=7#
correct output grid

TRAIN 72ca375d.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,2)
diff: 
delta: (2,6)=8  (2,7)=8  (2,8)=8  (3,6)=8  (3,8)=8  (3,9)=8 
   (3.2 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
diff: 
delta: (1,2)=4  (1,3)=4  (2,2)=4  (2,3)=4 
! size mismatch, 2x4 instead of 2x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
  _01: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
diff: 
delta: (1,2)=4  (1,3)=4  (2,2)=4  (2,3)=4 
! size mismatch, 2x5 instead of 2x2
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,2)
diff: 
delta: (2,6)=8  (2,7)=8  (2,8)=8  (3,6)=8  (3,8)=8  (3,9)=8 
correct output grid

TRAIN 72ca375d.json/2: 1 3rd (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,7) and color cyan and mask ...xxx.|xxxx.xx at (7,0)
  _01: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (2,5)
diff: 
delta: (1,1)=3  (1,2)=3  (2,2)=3  (3,2)=3 
   (0.0 bits)
data: a background with size (2,4) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,7) and color cyan and mask ...xxx.|xxxx.xx at (7,0)
  _01: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (2,5)
diff: 
delta: (1,1)=3  (1,2)=3  (2,2)=3  (3,2)=3 
correct output grid

TRAIN 72ca375d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask xxxxx|x..xx at (7,4)
  _01: a rectangle with size (3,4) and color brown and mask .xx.|.xx.|xxxx at (2,0)
diff: 
delta: (1,5)=3  (1,8)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,8)=3  (3,8)=3 
correct output grid

TEST 72ca375d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.61
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-226] Checking task 73251a56.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 296024.1 = 296036.7
DL output with Mo: L = 12.6 + 255899.1 = 255911.7
DL input+output M: L = 25.2 + 551923.2 = 551948.5

# learning a model for train pairs
2.000	
1.554	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.265	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.098	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.023	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.952	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.899	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.404	
0.404	IN  DEL ^.layer_0111
0.404	IN  DEL ^.layer_011
0.404	IN  DEL ^.layer_01
0.403	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 146711.2 = 146825.4
DL output with Mo: L = 89.3 + 103142.3 = 103231.5
DL input+output M: L = 203.4 + 249853.5 = 250056.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 89.3 + 103142.3 = 103231.5
DL input+output M: L = 101.9 + 103142.3 = 103244.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (21,21) and color pink and layers
diff: 
delta: (0,0)=1  (0,2)=1  (0,3)=1  (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,1)=1  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,0)=1  (2,2)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,0)=1  (3,3)=1  (3,8)=1  (3,9)=1  (3,10)=1  (3,11)=1  (3,12)=1  (3,13)=2  (3,14)=2  (3,15)=2  (3,16)=2  (3,17)=2  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (4,1)=1  (4,4)=1  (4,10)=1  (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=1  (4,15)=1  (4,16)=2  (4,17)=2  (4,18)=2  (4,19)=2  (4,20)=2  (5,0)=2  (5,1)=1  (5,5)=1  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (5,19)=2  (5,20)=2  (6,0)=3  (6,1)=1  (6,2)=1  (6,6)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (6,19)=1  (6,20)=1  (7,0)=3  (7,1)=2  (7,2)=1  (7,7)=1  (7,8)=0  (7,9)=0  (7,10)=0  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,0)=4  (8,1)=2  (8,2)=1  (8,3)=1  (8,8)=0  (8,9)=0  (8,10)=0  (8,18)=1  (8,19)=1  (8,20)=1  (9,0)=4  (9,1)=2  (9,2)=1  (9,3)=1  (9,8)=0  (9,9)=0  (9,10)=0  (9,20)=1  (10,0)=5# (10,1)=3  (10,2)=2  (10,3)=1  (10,4)=1  (10,10)=1  (11,0)=5# (11,1)=3  (11,2)=2  (11,3)=1  (11,4)=1  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=0  (12,1)=3  (12,2)=2  (12,3)=1  (12,4)=1  (12,5)=1  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (12,16)=0  (13,1)=4  (13,2)=2  (13,3)=2  (13,4)=1  (13,5)=1  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=0  (14,0)=1  (14,1)=4  (14,2)=3  (14,3)=2  (14,4)=1  (14,5)=1  (14,6)=1  (14,12)=0  (14,13)=0  (14,14)=0  (14,15)=0  (14,16)=0  (15,0)=1  (15,1)=4  (15,2)=3  (15,3)=2  (15,4)=1  (15,5)=1  (15,6)=1  (15,15)=1  (16,0)=2  (16,1)=5# (16,2)=3  (16,3)=2  (16,4)=2  (16,5)=1  (16,6)=1  (16,7)=1  (16,16)=1  (17,0)=2  (17,1)=5# (17,2)=3  (17,3)=2  (17,4)=2  (17,5)=1  (17,6)=1  (17,7)=1  (17,17)=1  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,4)=2  (18,5)=1  (18,6)=1  (18,7)=1  (18,8)=1  (18,10)=0  (18,11)=0  (18,12)=0  (18,13)=0  (18,18)=1  (19,0)=3  (19,2)=4  (19,3)=3  (19,4)=2  (19,5)=2  (19,6)=1  (19,7)=1  (19,8)=1  (19,10)=0  (19,11)=0  (19,12)=0  (19,13)=0  (19,19)=1  (20,0)=4  (20,2)=4  (20,3)=3  (20,4)=2  (20,5)=2  (20,6)=1  (20,7)=1  (20,8)=1  (20,9)=1  (20,20)=1 
   (0.0 bits)
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (21,21) and color blue and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (5,14) and color red and mask xxx...........|...xxxx.......|......xxxxx...|.........xxxxx|............xx at (1,7)
  _011: a rectangle with size (14,5) and color red and mask x....|x....|x....|.x...|.x...|.x...|.xx..|..x..|..x..|..xx.|..xx.|...x.|...xx|...xx at (7,1)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (5,0)=2  (6,0)=3  (7,0)=3  (8,0)=4  (9,0)=4  (10,0)=5# (10,1)=3  (11,0)=5# (11,1)=3  (12,1)=3  (13,1)=4  (14,0)=1  (14,1)=4  (14,2)=3  (15,0)=1  (15,1)=4  (15,2)=3  (16,0)=2  (16,1)=5# (16,2)=3  (17,0)=2  (17,1)=5# (17,2)=3  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (19,0)=3  (19,2)=4  (19,3)=3  (20,0)=4  (20,2)=4  (20,3)=3 
   (3333.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color pink and layers
diff: 
delta: (0,0)=1  (0,2)=1  (0,3)=1  (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,1)=1  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,0)=1  (2,2)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,0)=1  (3,3)=1  (3,8)=1  (3,9)=1  (3,10)=1  (3,11)=1  (3,12)=1  (3,13)=2  (3,14)=2  (3,15)=2  (3,16)=2  (3,17)=2  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (4,1)=1  (4,4)=1  (4,10)=1  (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=1  (4,15)=1  (4,16)=2  (4,17)=2  (4,18)=2  (4,19)=2  (4,20)=2  (5,0)=2  (5,1)=1  (5,5)=1  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (5,19)=2  (5,20)=2  (6,0)=3  (6,1)=1  (6,2)=1  (6,6)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (6,19)=1  (6,20)=1  (7,0)=3  (7,1)=2  (7,2)=1  (7,7)=1  (7,8)=0  (7,9)=0  (7,10)=0  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,0)=4  (8,1)=2  (8,2)=1  (8,3)=1  (8,8)=0  (8,9)=0  (8,10)=0  (8,18)=1  (8,19)=1  (8,20)=1  (9,0)=4  (9,1)=2  (9,2)=1  (9,3)=1  (9,8)=0  (9,9)=0  (9,10)=0  (9,20)=1  (10,0)=5# (10,1)=3  (10,2)=2  (10,3)=1  (10,4)=1  (10,10)=1  (11,0)=5# (11,1)=3  (11,2)=2  (11,3)=1  (11,4)=1  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=0  (12,1)=3  (12,2)=2  (12,3)=1  (12,4)=1  (12,5)=1  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (12,16)=0  (13,1)=4  (13,2)=2  (13,3)=2  (13,4)=1  (13,5)=1  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=0  (14,0)=1  (14,1)=4  (14,2)=3  (14,3)=2  (14,4)=1  (14,5)=1  (14,6)=1  (14,12)=0  (14,13)=0  (14,14)=0  (14,15)=0  (14,16)=0  (15,0)=1  (15,1)=4  (15,2)=3  (15,3)=2  (15,4)=1  (15,5)=1  (15,6)=1  (15,15)=1  (16,0)=2  (16,1)=5# (16,2)=3  (16,3)=2  (16,4)=2  (16,5)=1  (16,6)=1  (16,7)=1  (16,16)=1  (17,0)=2  (17,1)=5# (17,2)=3  (17,3)=2  (17,4)=2  (17,5)=1  (17,6)=1  (17,7)=1  (17,17)=1  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,4)=2  (18,5)=1  (18,6)=1  (18,7)=1  (18,8)=1  (18,10)=0  (18,11)=0  (18,12)=0  (18,13)=0  (18,18)=1  (19,0)=3  (19,2)=4  (19,3)=3  (19,4)=2  (19,5)=2  (19,6)=1  (19,7)=1  (19,8)=1  (19,10)=0  (19,11)=0  (19,12)=0  (19,13)=0  (19,19)=1  (20,0)=4  (20,2)=4  (20,3)=3  (20,4)=2  (20,5)=2  (20,6)=1  (20,7)=1  (20,8)=1  (20,9)=1  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (21,21) and color grey and layers
diff: 
delta: (0,0)=6  (0,2)=6  (0,3)=6  (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,1)=6  (1,4)=6  (1,5)=6  (1,6)=6  (1,7)=7# (1,8)=7# (1,9)=7# (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,0)=6  (2,2)=6  (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,0)=6  (3,3)=0  (3,4)=0  (3,5)=0  (3,8)=6  (3,9)=6  (3,10)=6  (3,11)=6  (3,12)=6  (3,13)=7# (3,14)=7# (3,15)=7# (3,16)=7# (3,17)=7# (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (4,1)=6  (4,3)=0  (4,4)=0  (4,5)=0  (4,10)=6  (4,11)=6  (4,12)=6  (4,13)=6  (4,14)=6  (4,15)=6  (4,16)=7# (4,17)=7# (4,18)=7# (4,19)=7# (4,20)=7# (5,0)=7# (5,1)=6  (5,3)=0  (5,4)=0  (5,5)=0  (5,12)=6  (5,13)=6  (5,14)=6  (5,15)=6  (5,16)=6  (5,17)=6  (5,18)=6  (5,19)=7# (5,20)=7# (6,0)=1  (6,1)=6  (6,2)=6  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=6  (6,9)=0  (6,10)=0  (6,11)=0  (6,14)=6  (6,15)=6  (6,16)=6  (6,17)=6  (6,18)=6  (6,19)=6  (6,20)=6  (7,0)=1  (7,1)=7# (7,2)=6  (7,3)=0  (7,4)=0  (7,5)=0  (7,7)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,16)=6  (7,17)=6  (7,18)=6  (7,19)=6  (7,20)=6  (8,0)=2  (8,1)=7# (8,2)=6  (8,3)=6  (8,8)=6  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,15)=0  (8,16)=0  (8,18)=6  (8,19)=6  (8,20)=6  (9,0)=2  (9,1)=7# (9,2)=6  (9,3)=6  (9,9)=6  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,20)=6  (10,0)=3  (10,1)=1  (10,2)=7# (10,3)=6  (10,4)=6  (10,10)=6  (11,0)=3  (11,1)=1  (11,2)=7# (11,3)=6  (11,4)=6  (11,11)=6  (12,0)=4  (12,1)=1  (12,2)=7# (12,3)=6  (12,4)=6  (12,5)=6  (12,12)=6  (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (13,4)=6  (13,5)=6  (13,13)=6  (14,1)=2  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,6)=6  (14,14)=6  (15,1)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,15)=6  (16,0)=6  (16,1)=3  (16,2)=1  (16,3)=7# (16,4)=7# (16,5)=6  (16,6)=6  (16,7)=6  (16,16)=6  (17,0)=6  (17,1)=3  (17,2)=1  (17,3)=7# (17,4)=7# (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=0  (17,9)=0  (17,10)=0  (17,11)=0  (17,17)=6  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (18,4)=7# (18,5)=6  (18,6)=6  (18,7)=6  (18,8)=0  (18,9)=0  (18,10)=0  (18,11)=0  (18,18)=6  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (19,4)=7# (19,5)=7# (19,6)=6  (19,7)=6  (19,8)=6  (19,19)=6  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1  (20,4)=7# (20,5)=7# (20,6)=6  (20,7)=6  (20,8)=6  (20,9)=6  (20,20)=6 
   (0.0 bits)
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (21,21) and color pink and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (5,14) and color orange and mask xxx...........|...xxxx.......|......xxxxx...|.........xxxxx|............xx at (1,7)
  _011: a rectangle with size (14,5) and color orange and mask x....|x....|x....|.x...|.x...|.x...|.xx..|..x..|..x..|..xx.|..xx.|...x.|...xx|...xx at (7,1)
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (5,0)=7# (6,0)=1  (7,0)=1  (8,0)=2  (9,0)=2  (10,0)=3  (10,1)=1  (11,0)=3  (11,1)=1  (12,0)=4  (12,1)=1  (13,0)=4  (13,1)=2  (14,1)=2  (14,2)=1  (15,1)=2  (15,2)=1  (16,0)=6  (16,1)=3  (16,2)=1  (17,0)=6  (17,1)=3  (17,2)=1  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1 
   (3490.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
diff: 
delta: (0,0)=6  (0,2)=6  (0,3)=6  (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,1)=6  (1,4)=6  (1,5)=6  (1,6)=6  (1,7)=7# (1,8)=7# (1,9)=7# (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,0)=6  (2,2)=6  (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,0)=6  (3,3)=0  (3,4)=0  (3,5)=0  (3,8)=6  (3,9)=6  (3,10)=6  (3,11)=6  (3,12)=6  (3,13)=7# (3,14)=7# (3,15)=7# (3,16)=7# (3,17)=7# (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (4,1)=6  (4,3)=0  (4,4)=0  (4,5)=0  (4,10)=6  (4,11)=6  (4,12)=6  (4,13)=6  (4,14)=6  (4,15)=6  (4,16)=7# (4,17)=7# (4,18)=7# (4,19)=7# (4,20)=7# (5,0)=7# (5,1)=6  (5,3)=0  (5,4)=0  (5,5)=0  (5,12)=6  (5,13)=6  (5,14)=6  (5,15)=6  (5,16)=6  (5,17)=6  (5,18)=6  (5,19)=7# (5,20)=7# (6,0)=1  (6,1)=6  (6,2)=6  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=6  (6,9)=0  (6,10)=0  (6,11)=0  (6,14)=6  (6,15)=6  (6,16)=6  (6,17)=6  (6,18)=6  (6,19)=6  (6,20)=6  (7,0)=1  (7,1)=7# (7,2)=6  (7,3)=0  (7,4)=0  (7,5)=0  (7,7)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,16)=6  (7,17)=6  (7,18)=6  (7,19)=6  (7,20)=6  (8,0)=2  (8,1)=7# (8,2)=6  (8,3)=6  (8,8)=6  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,15)=0  (8,16)=0  (8,18)=6  (8,19)=6  (8,20)=6  (9,0)=2  (9,1)=7# (9,2)=6  (9,3)=6  (9,9)=6  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,20)=6  (10,0)=3  (10,1)=1  (10,2)=7# (10,3)=6  (10,4)=6  (10,10)=6  (11,0)=3  (11,1)=1  (11,2)=7# (11,3)=6  (11,4)=6  (11,11)=6  (12,0)=4  (12,1)=1  (12,2)=7# (12,3)=6  (12,4)=6  (12,5)=6  (12,12)=6  (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (13,4)=6  (13,5)=6  (13,13)=6  (14,1)=2  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,6)=6  (14,14)=6  (15,1)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,15)=6  (16,0)=6  (16,1)=3  (16,2)=1  (16,3)=7# (16,4)=7# (16,5)=6  (16,6)=6  (16,7)=6  (16,16)=6  (17,0)=6  (17,1)=3  (17,2)=1  (17,3)=7# (17,4)=7# (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=0  (17,9)=0  (17,10)=0  (17,11)=0  (17,17)=6  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (18,4)=7# (18,5)=6  (18,6)=6  (18,7)=6  (18,8)=0  (18,9)=0  (18,10)=0  (18,11)=0  (18,18)=6  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (19,4)=7# (19,5)=7# (19,6)=6  (19,7)=6  (19,8)=6  (19,19)=6  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1  (20,4)=7# (20,5)=7# (20,6)=6  (20,7)=6  (20,8)=6  (20,9)=6  (20,20)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (21,21) and color yellow and layers
diff: 
delta: (0,0)=5# (0,2)=5# (0,3)=5# (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,18)=5# (0,19)=5# (0,20)=6  (1,1)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=6  (1,8)=6  (1,9)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,0)=5# (2,2)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (2,10)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=7# (2,15)=7# (2,16)=0  (2,17)=0  (2,18)=8  (2,19)=8  (2,20)=8  (3,0)=5# (3,3)=5# (3,8)=5# (3,9)=5# (3,10)=5# (3,11)=5# (3,12)=5# (3,13)=6  (3,14)=6  (3,15)=6  (3,16)=0  (3,17)=0  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,1)=5# (4,4)=5# (4,10)=5# (4,11)=5# (4,12)=5# (4,13)=5# (4,14)=5# (4,15)=5# (4,16)=0  (4,17)=0  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,1)=5# (5,5)=5# (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (5,16)=0  (5,17)=0  (5,18)=5# (5,19)=6  (5,20)=6  (6,0)=7# (6,1)=5# (6,2)=5# (6,6)=5# (6,14)=5# (6,15)=5# (6,16)=0  (6,17)=0  (6,18)=5# (6,19)=5# (6,20)=5# (7,0)=7# (7,1)=6  (7,2)=5# (7,7)=5# (7,16)=5# (7,17)=5# (7,18)=5# (7,19)=5# (7,20)=5# (8,0)=8  (8,1)=6  (8,2)=5# (8,3)=5# (8,8)=5# (8,18)=5# (8,19)=5# (8,20)=5# (9,0)=8  (9,1)=6  (9,2)=5# (9,3)=5# (9,9)=5# (9,20)=5# (10,0)=1  (10,1)=7# (10,2)=6  (10,3)=5# (10,4)=5# (10,10)=5# (10,11)=0  (10,12)=0  (11,0)=1  (11,1)=7# (11,2)=6  (11,3)=5# (11,4)=5# (11,11)=0  (11,12)=0  (12,0)=2  (12,1)=7# (12,2)=6  (12,3)=5# (12,4)=5# (12,5)=5# (12,11)=0  (12,12)=0  (13,0)=2  (13,1)=8  (13,2)=6  (13,3)=6  (13,4)=5# (13,5)=5# (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,14)=0  (14,0)=3  (14,1)=8  (14,2)=7# (14,3)=6  (14,4)=5# (14,5)=5# (14,6)=5# (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,14)=0  (15,0)=3  (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=5# (15,5)=5# (15,6)=5# (15,9)=0  (15,10)=0  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,15)=5# (16,1)=1  (16,2)=7# (16,3)=6  (16,4)=6  (16,5)=5# (16,6)=5# (16,7)=5# (16,9)=0  (16,10)=0  (16,11)=0  (16,16)=5# (17,1)=1  (17,2)=7# (17,3)=6  (17,4)=6  (17,5)=5# (17,6)=5# (17,7)=5# (17,9)=0  (17,10)=0  (17,11)=0  (17,17)=5# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (18,4)=6  (18,5)=5# (18,6)=5# (18,7)=5# (18,8)=5# (18,9)=0  (18,10)=0  (18,11)=0  (18,18)=5# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (19,4)=6  (19,5)=6  (19,6)=5# (19,7)=5# (19,8)=5# (19,19)=5# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7# (20,4)=6  (20,5)=6  (20,6)=5# (20,7)=5# (20,8)=5# (20,9)=5# (20,20)=5#
   (0.0 bits)
data: a background with size (21,21) and color yellow and layers
  _0: a rectangle with size (21,21) and color grey and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (5,14) and color pink and mask xxx...........|...xxxx.......|......xxxxx...|.........xxxxx|............xx at (1,7)
  _011: a rectangle with size (14,5) and color pink and mask x....|x....|x....|.x...|.x...|.x...|.xx..|..x..|..x..|..xx.|..xx.|...x.|...xx|...xx at (7,1)
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,18)=5# (0,19)=5# (0,20)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (5,0)=6  (6,0)=7# (7,0)=7# (8,0)=8  (9,0)=8  (10,0)=1  (10,1)=7# (11,0)=1  (11,1)=7# (12,0)=2  (12,1)=7# (13,0)=2  (13,1)=8  (14,0)=3  (14,1)=8  (14,2)=7# (15,0)=3  (15,1)=8  (15,2)=7# (16,1)=1  (16,2)=7# (17,1)=1  (17,2)=7# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7#
   (3490.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color yellow and layers
diff: 
delta: (0,0)=5# (0,2)=5# (0,3)=5# (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,18)=5# (0,19)=5# (0,20)=6  (1,1)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=6  (1,8)=6  (1,9)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,0)=5# (2,2)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (2,10)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=7# (2,15)=7# (2,16)=0  (2,17)=0  (2,18)=8  (2,19)=8  (2,20)=8  (3,0)=5# (3,3)=5# (3,8)=5# (3,9)=5# (3,10)=5# (3,11)=5# (3,12)=5# (3,13)=6  (3,14)=6  (3,15)=6  (3,16)=0  (3,17)=0  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,1)=5# (4,4)=5# (4,10)=5# (4,11)=5# (4,12)=5# (4,13)=5# (4,14)=5# (4,15)=5# (4,16)=0  (4,17)=0  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,1)=5# (5,5)=5# (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (5,16)=0  (5,17)=0  (5,18)=5# (5,19)=6  (5,20)=6  (6,0)=7# (6,1)=5# (6,2)=5# (6,6)=5# (6,14)=5# (6,15)=5# (6,16)=0  (6,17)=0  (6,18)=5# (6,19)=5# (6,20)=5# (7,0)=7# (7,1)=6  (7,2)=5# (7,7)=5# (7,16)=5# (7,17)=5# (7,18)=5# (7,19)=5# (7,20)=5# (8,0)=8  (8,1)=6  (8,2)=5# (8,3)=5# (8,8)=5# (8,18)=5# (8,19)=5# (8,20)=5# (9,0)=8  (9,1)=6  (9,2)=5# (9,3)=5# (9,9)=5# (9,20)=5# (10,0)=1  (10,1)=7# (10,2)=6  (10,3)=5# (10,4)=5# (10,10)=5# (10,11)=0  (10,12)=0  (11,0)=1  (11,1)=7# (11,2)=6  (11,3)=5# (11,4)=5# (11,11)=0  (11,12)=0  (12,0)=2  (12,1)=7# (12,2)=6  (12,3)=5# (12,4)=5# (12,5)=5# (12,11)=0  (12,12)=0  (13,0)=2  (13,1)=8  (13,2)=6  (13,3)=6  (13,4)=5# (13,5)=5# (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,14)=0  (14,0)=3  (14,1)=8  (14,2)=7# (14,3)=6  (14,4)=5# (14,5)=5# (14,6)=5# (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,14)=0  (15,0)=3  (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=5# (15,5)=5# (15,6)=5# (15,9)=0  (15,10)=0  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,15)=5# (16,1)=1  (16,2)=7# (16,3)=6  (16,4)=6  (16,5)=5# (16,6)=5# (16,7)=5# (16,9)=0  (16,10)=0  (16,11)=0  (16,16)=5# (17,1)=1  (17,2)=7# (17,3)=6  (17,4)=6  (17,5)=5# (17,6)=5# (17,7)=5# (17,9)=0  (17,10)=0  (17,11)=0  (17,17)=5# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (18,4)=6  (18,5)=5# (18,6)=5# (18,7)=5# (18,8)=5# (18,9)=0  (18,10)=0  (18,11)=0  (18,18)=5# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (19,4)=6  (19,5)=6  (19,6)=5# (19,7)=5# (19,8)=5# (19,19)=5# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7# (20,4)=6  (20,5)=6  (20,6)=5# (20,7)=5# (20,8)=5# (20,9)=5# (20,20)=5#
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
diff: 
delta: (0,0)=4  (0,2)=4  (0,3)=4  (0,4)=5# (0,5)=5# (0,6)=6  (0,7)=6  (0,8)=7# (0,9)=7# (0,10)=8  (0,11)=8  (0,12)=9# (0,13)=9# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,20)=4  (1,1)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=0  (1,11)=0  (1,12)=6  (1,13)=7# (1,14)=7# (1,15)=7# (1,16)=8  (1,17)=8  (1,18)=8  (1,19)=9# (1,20)=9# (2,0)=4  (2,2)=4  (2,6)=4  (2,7)=4  (2,8)=4  (2,9)=4  (2,10)=0  (2,11)=0  (2,12)=5# (2,13)=5# (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,18)=7# (2,19)=7# (2,20)=7# (3,0)=4  (3,3)=4  (3,8)=4  (3,9)=4  (3,10)=0  (3,11)=0  (3,12)=4  (3,13)=5# (3,14)=5# (3,15)=5# (3,16)=5# (3,17)=5# (3,18)=6  (3,19)=6  (3,20)=6  (4,0)=5# (4,1)=4  (4,4)=4  (4,10)=0  (4,11)=0  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (4,16)=5# (4,17)=5# (4,18)=5# (4,19)=5# (4,20)=5# (5,0)=5# (5,1)=4  (5,5)=4  (5,10)=0  (5,11)=0  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (5,16)=4  (5,17)=4  (5,18)=4  (5,19)=5# (5,20)=5# (6,0)=6  (6,1)=4  (6,2)=4  (6,6)=4  (6,14)=4  (6,15)=4  (6,16)=4  (6,17)=4  (6,18)=4  (6,19)=4  (6,20)=4  (7,0)=6  (7,1)=5# (7,2)=4  (7,7)=4  (7,16)=4  (7,17)=4  (7,18)=4  (7,19)=4  (7,20)=4  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,8)=4  (8,18)=4  (8,19)=4  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,9)=4  (9,20)=4  (10,0)=8  (10,1)=6  (10,2)=5# (10,3)=4  (10,4)=4  (10,10)=4  (11,0)=8  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=4  (11,11)=4  (12,0)=9# (12,1)=6  (12,2)=5# (12,3)=4  (12,4)=4  (12,5)=4  (12,12)=4  (13,0)=9# (13,1)=7# (13,2)=5# (13,3)=5# (13,4)=4  (13,5)=4  (13,13)=4  (14,0)=1  (14,1)=7# (14,2)=6  (14,3)=5# (14,4)=4  (14,5)=4  (14,6)=4  (14,14)=4  (15,0)=1  (15,1)=7# (15,2)=6  (15,3)=5# (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=0  (15,8)=0  (15,15)=0  (15,16)=0  (15,17)=0  (15,18)=0  (15,19)=0  (16,0)=2  (16,1)=8  (16,2)=6  (16,3)=5# (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,15)=0  (16,16)=0  (16,17)=0  (16,18)=0  (16,19)=0  (17,0)=2  (17,1)=8  (17,2)=6  (17,3)=5# (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=0  (17,8)=0  (17,17)=4  (18,1)=8  (18,2)=7# (18,3)=6  (18,4)=5# (18,5)=4  (18,6)=4  (18,7)=4  (18,8)=4  (18,12)=0  (18,13)=0  (18,14)=0  (18,15)=0  (18,16)=0  (18,18)=4  (19,1)=9# (19,2)=7# (19,3)=6  (19,4)=5# (19,5)=5# (19,6)=4  (19,7)=4  (19,8)=4  (19,12)=0  (19,13)=0  (19,14)=0  (19,15)=0  (19,16)=0  (19,19)=4  (20,0)=4  (20,1)=9# (20,2)=7# (20,3)=6  (20,4)=5# (20,5)=5# (20,6)=4  (20,7)=4  (20,8)=4  (20,9)=4  (20,20)=4 
! size mismatch, 10x10 instead of 21x21

TEST 73251a56.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 103142.3 bits (103142.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-225] Checking task 7447852a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16313.3 = 16326.0
DL output with Mo: L = 12.6 + 27157.3 = 27169.9
DL input+output M: L = 25.2 + 43470.7 = 43495.9

# learning a model for train pairs
2.000	
1.185	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.613	OUT ADD ^.layer_0 = ^.layer_0
0.488	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.374	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.324	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.304	OUT SPE ^.size = ^.size
0.292	OUT SPE ^.layer_01.shape.size = '(2, 3)
0.281	OUT SPE ^.layer_0111.pos = '(1, 0)
0.270	IN  SPE ^.layer_0.shape.color = red
0.264	OUT SPE ^.layer_01.shape.color = yellow
0.258	OUT SPE ^.layer_011.shape.color = yellow
0.252	OUT SPE ^.layer_0111.shape.color = yellow
0.246	OUT SPE ^.layer_01.pos.j = bottom(^.layer_0) + 3
0.240	OUT SPE ^.layer_0111.shape.size.i = 2
0.236	IN  SPE ^.color = black
0.232	OUT SPE ^.layer_01.pos.i = '0
0.228	OUT SPE ^.layer_01.shape.mask = Full
0.225	OUT SPE ^.layer_011.shape.mask = Full
0.221	OUT SPE ^.layer_0111.shape.mask = Full
0.218	OUT SPE ^.color = black
0.050	
0.050	IN  GEN ^.layer_0.shape.color = ?
0.050	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size '(2, 3) and color yellow and mask Full at ('0,bottom(^.layer_0) + 3)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _0111: a rectangle with size (2,?) and color yellow and mask Full at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2742.8 = 2785.1
DL output with Mo: L = 146.7 + 1146.2 = 1292.9
DL input+output M: L = 189.0 + 3889.0 = 4078.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size '(2, 3) and color yellow and mask Full at ('0,bottom(^.layer_0) + 3)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _0111: a rectangle with size (2,?) and color yellow and mask Full at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 146.7 + 1146.2 = 1292.9
DL input+output M: L = 185.5 + 1146.2 = 1331.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (1,0)
diff: 
delta:
   (21.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 7447852a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (1,11)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta:
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 7447852a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (1,11)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta: (0,17)=4 
   (65.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 7447852a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,25) and color black and layers
  _0: a rectangle with size (3,25) and color red and mask x...x...x...x...x...x...x|.x.x.x.x.x.x.x.x.x.x.x.x.|..x...x...x...x...x...x.. at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST 7447852a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.6 sec (3.6 sec/task)
bits-train-error = 1146.2 bits (1146.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-224] Checking task 7468f01a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31883.5 = 31896.1
DL output with Mo: L = 12.6 + 6556.3 = 6568.9
DL input+output M: L = 25.2 + 38439.8 = 38465.0

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = applySym(flipWidth, strip(^.grid))
0.259	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.125	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.122	IN  SPE ^.layer_01.shape.mask = Full
0.119	IN  SPE ^.color = black
0.005	
0.004	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_0
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(flipWidth, strip(^.grid))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.4 + 3640.1 = 3705.5
DL output with Mo: L = 21.0 + 0.0 = 21.0
DL input+output M: L = 86.3 + 3640.1 = 3726.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(flipWidth, strip(^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.0 + 0.0 = 21.0
DL input+output M: L = 33.6 + 0.0 = 33.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,15) and color black and layers
diff: 
delta: (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=2  (5,9)=8  (6,2)=8  (6,3)=2  (6,4)=2  (6,5)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (7,2)=8  (7,3)=8  (7,4)=2  (7,5)=2  (7,6)=8  (7,7)=8  (7,8)=8  (7,9)=8  (8,2)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=8  (8,9)=8 
   (0.0 bits)
data: 
8 2 8 8 8 8 8 8 
8 8 8 8 8 2 2 8 
8 8 8 8 2 2 8 8 
8 8 8 8 8 8 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
diff: 
delta: (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=2  (5,9)=8  (6,2)=8  (6,3)=2  (6,4)=2  (6,5)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (7,2)=8  (7,3)=8  (7,4)=2  (7,5)=2  (7,6)=8  (7,7)=8  (7,8)=8  (7,9)=8  (8,2)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=8  (8,9)=8 
correct output grid

TRAIN 7468f01a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (12,16) and color black and layers
diff: 
delta: (1,3)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=4  (2,3)=4  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (3,3)=4  (3,4)=1  (3,5)=1  (3,6)=4  (3,7)=4  (4,3)=4  (4,4)=4  (4,5)=1  (4,6)=1  (4,7)=4  (5,3)=4  (5,4)=4  (5,5)=1  (5,6)=4  (5,7)=4 
   (0.0 bits)
data: 
4 4 4 4 4 
4 4 4 4 4 
4 4 1 1 4 
4 1 1 4 4 
4 4 1 4 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color black and layers
diff: 
delta: (1,3)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=4  (2,3)=4  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (3,3)=4  (3,4)=1  (3,5)=1  (3,6)=4  (3,7)=4  (4,3)=4  (4,4)=4  (4,5)=1  (4,6)=1  (4,7)=4  (5,3)=4  (5,4)=4  (5,5)=1  (5,6)=4  (5,7)=4 
correct output grid

TRAIN 7468f01a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (15,17) and color black and layers
diff: 
delta: (7,2)=6  (7,3)=6  (7,4)=6  (7,5)=3  (7,6)=6  (7,7)=6  (8,2)=6  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=6  (8,7)=6  (9,2)=6  (9,3)=6  (9,4)=6  (9,5)=6  (9,6)=3  (9,7)=6  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=3  (10,7)=6 
   (0.0 bits)
data: 
6 6 3 6 6 6 
6 6 3 3 3 6 
6 3 6 6 6 6 
6 3 6 6 6 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
diff: 
delta: (7,2)=6  (7,3)=6  (7,4)=6  (7,5)=3  (7,6)=6  (7,7)=6  (8,2)=6  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=6  (8,7)=6  (9,2)=6  (9,3)=6  (9,4)=6  (9,5)=6  (9,6)=3  (9,7)=6  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=3  (10,7)=6 
correct output grid

TRAIN 7468f01a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=8  (3,8)=1  (3,9)=1  (3,10)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=8  (4,9)=8  (4,10)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (7,9)=1  (7,10)=1  (8,3)=1  (8,4)=1  (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=1  (8,9)=1  (8,10)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=1 
correct output grid

TEST 7468f01a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-223] Checking task 746b3537.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14524.1 = 14536.7
DL output with Mo: L = 12.6 + 4677.8 = 4690.4
DL input+output M: L = 25.2 + 19201.8 = 19227.0

# learning a model for train pairs
2.000	
1.639	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.414	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.216	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.058	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.969	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.900	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.807	OUT SPE ^.color = ^.layer_01.shape.color
0.715	OUT SPE ^.size = span(^.layer_0.pos, ^.layer_011.pos) - translationOnto(^.layer_0, ^.layer_01)
0.693	OUT SPE ^.layer_01.pos.j = '0 + ^.layer_011.pos.j - ^.layer_0.pos.j
0.681	IN  SPE ^.layer_0.shape.mask = Full
0.670	IN  SPE ^.layer_01.shape.mask = Full
0.659	IN  SPE ^.layer_011.shape.mask = Full
0.348	
0.347	IN  GEN ^.layer_011.shape.mask = ?
0.347	IN  GEN ^.layer_01.shape.mask = ?
0.347	IN  GEN ^.layer_0.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size span(^.layer_0.pos, ^.layer_011.pos) - translationOnto(^.layer_0, ^.layer_01) and color ^.layer_01.shape.color and layers
  _0: a point with color ? at ^.layer_0.pos
  _01: a point with color ? at (?,'0 + ^.layer_011.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 92.3 + 4553.6 = 4645.8
DL output with Mo: L = 167.0 + 1423.0 = 1590.0
DL input+output M: L = 259.3 + 5976.6 = 6235.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size span(^.layer_0.pos, ^.layer_011.pos) - translationOnto(^.layer_0, ^.layer_01) and color ^.layer_01.shape.color and layers
  _0: a point with color ? at ^.layer_0.pos
  _01: a point with color ? at (?,'0 + ^.layer_011.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 31.7 = 121.0
DL output with Mo: L = 167.0 + 1423.0 = 1590.0
DL input+output M: L = 256.3 + 1454.7 = 1711.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (15.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta:
! size mismatch, 1x1 instead of 3x1
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _011: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
! size mismatch, 2x1 instead of 3x1

TRAIN 746b3537.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _011: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (1,3) and color yellow and layers
  _0: a point with color green at (0,0)
  _01: a point with color pink at (0,2)
diff: 
delta:
   (13.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _011: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
! size mismatch, 1x1 instead of 1x3
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! size mismatch, 1x2 instead of 1x3

TRAIN 746b3537.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,4)
diff: 
delta:
   (3.2 bits)
data: a background with size (1,4) and color red and layers
  _0: a point with color blue at (0,3)
  _01: a point with color green at (0,1)
diff: 
delta: (0,2)=8 
   (48.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,4)
diff: 
delta:
! size mismatch, 1x3 instead of 1x4
>> Trial 2
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,4)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
diff: 
delta:
! size mismatch, 1x1 instead of 1x4
>> Trial 3
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,4)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 746b3537.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,2) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color pink at (1,0)
diff: 
delta:
   (15.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,2) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,2) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (1,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,2) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
! size mismatch, 1x1 instead of 3x1

TRAIN 746b3537.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,4) and color green and mask Full at (5,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,1) and color cyan and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta: (3,0)=3 
   (50.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,4) and color green and mask Full at (5,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (5,0)
  _011: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
diff: 
delta:
! size mismatch, 2x1 instead of 4x1
>> Trial 3
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (1,4) and color green and mask Full at (5,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 746b3537.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,2) and color cyan and mask Full at (0,6)
  _011: a rectangle with size (4,1) and color yellow and mask Full at (0,8)
diff: 
delta: (0,2)=2  (1,2)=2  (2,2)=2  (3,2)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,2)
  _011: a rectangle with size (4,2) and color cyan and mask Full at (0,6)
diff: 
delta: (0,8)=4  (1,8)=4  (2,8)=4  (3,8)=4 
! size mismatch, 1x7 instead of 1x5

TEST 746b3537.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 1423.0 bits (1423.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-222] Checking task 74dd1130.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7827.0 = 7839.6
DL output with Mo: L = 12.6 + 7827.0 = 7839.6
DL input+output M: L = 25.2 + 15654.0 = 15679.2

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = applySym(flipDiag1, ^.grid)
0.687	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.521	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.467	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.450	IN  SPE ^.layer_0.shape.mask = Full
0.012	
0.009	IN  DEL ^.layer_0
0.006	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_011

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(flipDiag1, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 81.0 + 3435.4 = 3516.4
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 95.8 + 3435.4 = 3531.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(flipDiag1, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,2)=1  (1,0)=1  (1,1)=5# (1,2)=1  (2,0)=5#
   (0.0 bits)
data: 
2 1 5#
2 5#2 
1 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,2)=1  (1,0)=1  (1,1)=5# (1,2)=1  (2,0)=5#
correct output grid

TRAIN 74dd1130.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,2)=5# (1,0)=6  (2,0)=5# (2,1)=5# (2,2)=5#
   (0.0 bits)
data: 
2 6 5#
2 2 5#
5#2 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,2)=5# (1,0)=6  (2,0)=5# (2,1)=5# (2,2)=5#
correct output grid

TRAIN 74dd1130.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=9# (0,1)=9# (1,2)=8  (2,1)=8  (2,2)=9#
   (0.0 bits)
data: 
9#5#5#
9#5#8 
5#8 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=9# (0,1)=9# (1,2)=8  (2,1)=8  (2,2)=9#
correct output grid

TRAIN 74dd1130.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=6  (0,2)=6  (1,1)=1  (1,2)=1  (2,1)=6 
   (0.0 bits)
data: 
2 2 2 
6 1 6 
6 1 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=6  (0,2)=6  (1,1)=1  (1,2)=1  (2,1)=6 
correct output grid

TRAIN 74dd1130.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=9# (0,1)=3  (1,0)=9# (2,0)=9# (2,1)=3 
correct output grid

TEST 74dd1130.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-221] Checking task 75b8110e.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 53062.7 = 53075.4
DL output with Mo: L = 12.6 + 17402.8 = 17415.4
DL input+output M: L = 25.2 + 70465.6 = 70490.8

# learning a model for train pairs
2.000	
1.715	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.453	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.146	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.791	OUT ADD ^.layer_010 = ^.layer_011.shape at (?,?)
0.750	OUT SPE ^.size = ^.size / '2
0.716	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.688	OUT ADD ^.layer_0100 = a point with color ? at (?,?)
0.666	OUT SPE ^.layer_010.pos = ^.layer_011.pos - projJ(^.layer_0.shape.size)
0.643	OUT SPE ^.layer_0.shape.size.j = ^.layer_0111.shape.size.j
0.633	OUT SPE ^.layer_0100.pos.i = ^.layer_01.pos.i / '2
0.623	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_01.pos.j) * '2
0.613	OUT SPE ^.layer_011.pos.j = average(^.layer_0.pos.i, ^.layer_01.pos.i) / '2
0.606	IN  SPE ^.layer_011.shape.color = grey
0.566	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.546	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.544	IN  SPE ^.color = black
0.261	
0.261	IN  DEL ^.layer_01111
0.260	IN  DEL ^.layer_011111
0.260	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ? and layers
  _0: a rectangle with size (?,^.layer_0111.shape.size.j) and color ? and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) * '2)
  _0100: a point with color ? at (^.layer_01.pos.i / '2,?)
  _010: ^.layer_011.shape at ^.layer_011.pos - projJ(^.layer_0.shape.size)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 157.7 + 15001.9 = 15159.6
DL output with Mo: L = 313.4 + 4181.2 = 4494.6
DL input+output M: L = 471.1 + 19183.1 = 19654.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ? and layers
  _0: a rectangle with size (?,^.layer_0111.shape.size.j) and color ? and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) * '2)
  _0100: a point with color ? at (^.layer_01.pos.i / '2,?)
  _010: ^.layer_011.shape at ^.layer_011.pos - projJ(^.layer_0.shape.size)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 313.4 + 4181.2 = 4494.6
DL input+output M: L = 430.8 + 4181.2 = 4612.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
diff: 
delta: (0,6)=5# (4,6)=9# (5,7)=9#
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _0100: a point with color grey at (0,2)
  _010: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,0)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|x..x|..x. at (1,0)
  _011: a point with color brown at (2,1)
diff: 
delta: (1,3)=9#
   (121.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
diff: 
delta: (0,6)=5# (4,6)=9# (5,7)=9#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _01: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
diff: 
delta: (0,6)=5# (4,6)=9# (5,7)=9#
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
diff: 
delta: (0,6)=5# (4,6)=9# (5,7)=9#
! 12 wrong pixels (generated / expected)

TRAIN 75b8110e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _01: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _011: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (4,5)
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6  (6,7)=9# (7,7)=9#
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,0)
  _0100: a point with color pink at (2,0)
  _010: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,3)
  _011: a point with color brown at (1,1)
diff: 
delta:
   (66.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _01: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _011: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (4,5)
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6  (6,7)=9# (7,7)=9#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _01: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _011: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (4,5)
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6  (6,7)=9# (7,7)=9#
! 14 wrong pixels (generated / expected)

TRAIN 75b8110e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4  (6,2)=6  (7,2)=6 
   (0.0 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,0)
  _0100: a point with color brown at (2,1)
  _010: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,0)
  _01: a rectangle with size (2,3) and color brown and mask xx.|..x at (0,1)
  _011: a point with color black at (1,2)
diff: 
delta:
   (86.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4  (6,2)=6  (7,2)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _01: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _011: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4  (6,2)=6  (7,2)=6 
! 15 wrong pixels (generated / expected)

TRAIN 75b8110e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
diff: 
delta: (0,0)=4  (0,5)=5# (1,4)=5# (3,0)=4  (3,4)=5#
   (0.0 bits)
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,0)
  _0100: a point with color brown at (2,1)
  _010: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,2)
  _01: a rectangle with size (1,1) and color grey and mask Full at (3,0)
  _011: a point with color brown at (3,2)
diff: 
delta:
   (76.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
diff: 
delta: (0,0)=4  (0,5)=5# (1,4)=5# (3,0)=4  (3,4)=5#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _011: a rectangle with size (4,1) and color grey and mask Full at (0,7)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
diff: 
delta: (0,0)=4  (0,5)=5# (1,4)=5# (2,6)=5# (3,0)=4  (3,4)=5#
! 12 wrong pixels (generated / expected)

TRAIN 75b8110e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _011: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (4,3)
diff: 
delta: (3,0)=4  (4,0)=6  (4,1)=6  (7,0)=6  (7,1)=6 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (1,2)
  _0100: a point with color pink at (0,0)
  _010: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (2,3)
  _011: a point with color pink at (3,1)
diff: 
delta:
   (67.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _011: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (4,3)
diff: 
delta: (3,0)=4  (4,0)=6  (4,1)=6  (7,0)=6  (7,1)=6 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _01: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _011: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (4,3)
diff: 
delta: (3,0)=4  (4,0)=6  (4,1)=6  (7,0)=6  (7,1)=6 
! 13 wrong pixels (generated / expected)

TRAIN 75b8110e.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask .x.x|.xxx|xxx. at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xxx.|.x..|..xx|.x.. at (4,4)
  _011: a rectangle with size (4,4) and color grey and mask x...|x.xx|.xxx|x... at (0,4)
  _0111: a rectangle with size (2,2) and color pink and mask xx|.x at (4,2)
diff: 
delta: (4,0)=6  (6,1)=6  (7,0)=6 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask xxx.|.x..|..xx|.x.. at (4,4)
  _01: a rectangle with size (3,4) and color yellow and mask .x.x|.xxx|xxx. at (0,0)
  _011: a rectangle with size (4,4) and color grey and mask x...|x.xx|.xxx|x... at (0,4)
  _0111: a rectangle with size (2,2) and color pink and mask xx|.x at (4,2)
diff: 
delta: (4,0)=6  (6,1)=6  (7,0)=6 
! 8 wrong pixels (generated / expected)

TEST 75b8110e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.8 sec (28.8 sec/task)
bits-train-error = 4181.2 bits (4181.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-220] Checking task 760b3cac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12079.8 = 12092.4
DL output with Mo: L = 12.6 + 17920.1 = 17932.7
DL input+output M: L = 25.2 + 29999.9 = 30025.1

# learning a model for train pairs
2.000	
1.439	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.034	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.712	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.402	OUT ADD ^.layer_01 = ^.layer_01
0.371	OUT SPE ^.size = ^.size
0.347	OUT SPE ^.layer_0.shape.size = tiling(^.layer_0.shape.size, 1, 2)
0.331	IN  SPE ^.layer_0.shape.color = cyan
0.317	IN  SPE ^.layer_01.shape.color = yellow
0.308	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.300	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.294	IN  SPE ^.color = black
0.290	OUT SPE ^.color = black
0.056	
0.056	IN  GEN ^.layer_01.shape.color = ?
0.056	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size, 1, 2) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 2823.0 = 2894.0
DL output with Mo: L = 50.7 + 853.9 = 904.5
DL input+output M: L = 121.7 + 3676.9 = 3798.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size, 1, 2) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 0.0 = 67.5
DL output with Mo: L = 50.7 + 853.9 = 904.5
DL input+output M: L = 118.2 + 853.9 = 972.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x.xx.x|xx..xx|x....x at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (29.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
diff:   ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (3,3)=4  (5,4)=4 
! 10 wrong pixels (generated / expected)

TRAIN 760b3cac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x.xx.x|xxxxxx|xx..xx at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
   (25.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
diff:   ^.layer_0.shape.color
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (3,5)=4  (5,4)=4 
! 20 wrong pixels (generated / expected)

TRAIN 760b3cac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask ..xx..|xx..xx|..xx.. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (29.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
diff:   ^.layer_0.shape.color
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta: (0,3)=8  (2,3)=8 
! 8 wrong pixels (generated / expected)

TRAIN 760b3cac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
diff:   ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (3,5)=4  (5,4)=4 
! 20 wrong pixels (generated / expected)

TEST 760b3cac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 853.9 bits (853.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-219] Checking task 776ffc46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 102634.5 = 102647.1
DL output with Mo: L = 12.6 + 102634.5 = 102647.1
DL input+output M: L = 25.2 + 205269.0 = 205294.2

# learning a model for train pairs
2.000	
1.650	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.283	OUT ADD ^.layer_0 = ^.layer_0
1.148	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.991	OUT ADD ^.layer_01 = ^.layer_01
0.895	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.798	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.604	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.514	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.424	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.347	OUT ADD ^.layer_01110 = ^.layer_0111
0.337	OUT SPE ^.size = ^.size
0.332	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.327	OUT SPE ^.layer_01111.pos = ^.layer_01111.pos
0.322	OUT SPE ^.layer_01111.shape.size = ^.layer_01111.shape.size
0.317	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.313	IN  SPE ^.layer_011.shape.color = blue
0.252	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.237	OUT SPE ^.layer_0111 = ^.layer_011111
0.233	IN  SPE ^.layer_011111.shape.color = blue
0.231	IN  SPE ^.layer_0.shape.color = grey
0.229	IN  SPE ^.layer_0.shape.mask = Border
0.227	OUT SPE ^.layer_01111.shape.mask = ^.layer_01111.shape.mask
0.225	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.224	IN  SPE ^.color = black
0.223	OUT SPE ^.color = black
0.066	
0.066	IN  GEN ^.layer_011111.shape.color = ?
0.065	IN  GEN ^.layer_0.shape.mask = ?
0.065	IN  GEN ^.layer_0.shape.color = ?
0.065	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _01110: ^.layer_0111
  _0111: ^.layer_011111
  _01111: a rectangle with size ^.layer_01111.shape.size and color ? and mask ^.layer_01111.shape.mask at ^.layer_01111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 177.0 + 16229.1 = 16406.1
DL output with Mo: L = 81.2 + 6451.9 = 6533.0
DL input+output M: L = 258.2 + 22681.0 = 22939.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _01110: ^.layer_0111
  _0111: ^.layer_011111
  _01111: a rectangle with size ^.layer_01111.shape.size and color ? and mask ^.layer_01111.shape.mask at ^.layer_01111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 166.9 + 20.0 = 186.9
DL output with Mo: L = 81.2 + 6451.9 = 6533.0
DL input+output M: L = 248.0 + 6471.9 = 6719.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _0111: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
  _011111: a rectangle with size (1,4) and color blue and mask Full at (12,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (7,10)
  _01110: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _0111: a rectangle with size (1,4) and color blue and mask Full at (12,3)
  _01111: a rectangle with size (3,3) and color red and mask +-cross at (15,13)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _0111: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
  _011111: a rectangle with size (1,4) and color blue and mask Full at (12,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _0111: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
  _011111: a rectangle with size (1,4) and color blue and mask Full at (12,3)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 776ffc46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (11,11)
diff: 
delta:
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color green and mask Full at (9,15)
  _01110: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (11,11)
  _01111: a rectangle with size (3,3) and color green and mask Full at (12,3)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (11,11)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (11,11)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (11,11)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN 776ffc46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _0111: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _01111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
  _011111: a rectangle with size (3,3) and color blue and mask +-cross at (15,7)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color red and mask Full at (11,10)
  _01110: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _0111: a rectangle with size (3,3) and color blue and mask +-cross at (15,7)
  _01111: a rectangle with size (2,3) and color red and mask Full at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1 
   (252.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _0111: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _01111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
  _011111: a rectangle with size (3,3) and color blue and mask +-cross at (15,7)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _0111: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,7)
  _011111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _0111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
  _01111: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _011111: a rectangle with size (3,3) and color blue and mask +-cross at (15,7)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1 
! 24 wrong pixels (generated / expected)

TRAIN 776ffc46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
  _011111: a rectangle with size (3,4) and color blue and mask .xx.|.xx.|xxxx at (8,15)
diff: 
delta: (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color green and mask Full at (9,10)
  _01110: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _0111: a rectangle with size (3,4) and color blue and mask .xx.|.xx.|xxxx at (8,15)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (370.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
  _011111: a rectangle with size (3,4) and color blue and mask .xx.|.xx.|xxxx at (8,15)
diff: 
delta: (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
  _011111: a rectangle with size (3,4) and color blue and mask Full at (8,15)
diff: 
delta: (8,15)=0  (8,18)=0  (9,15)=0  (9,18)=0  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask Full at (1,15)
  _011111: a rectangle with size (3,4) and color blue and mask .xx.|.xx.|xxxx at (8,15)
diff: 
delta: (1,15)=0  (1,18)=0  (2,15)=0  (2,18)=0  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! 30 wrong pixels (generated / expected)

TRAIN 776ffc46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (13,12)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (0,12)
  _011: a rectangle with size (4,4) and color blue and mask +-cross at (8,6)
  _0111: a rectangle with size (7,7) and color grey and mask xxxxxxx|......x|......x|......x|......x|......x|......x at (13,0)
  _01111: a rectangle with size (4,4) and color red and mask +-cross at (15,1)
  _011111: a rectangle with size (4,4) and color blue and mask .x..|.x..|xxxx|.x.. at (4,2)
diff: 
delta: (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (15,15)=2  (16,14)=2  (16,15)=2  (16,16)=2  (17,15)=2 
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (13,12)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (0,12)
  _011: a rectangle with size (4,4) and color blue and mask +-cross at (8,6)
  _0111: a rectangle with size (4,4) and color red and mask +-cross at (15,1)
  _01111: a rectangle with size (7,7) and color grey and mask xxxxxxx|......x|......x|......x|......x|......x|......x at (13,0)
  _011111: a rectangle with size (4,4) and color blue and mask .x..|.x..|xxxx|.x.. at (4,2)
diff: 
delta: (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (15,15)=2  (16,14)=2  (16,15)=2  (16,16)=2  (17,15)=2 
! 52 wrong pixels (generated / expected)

TEST 776ffc46.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.7 sec (20.7 sec/task)
bits-train-error = 6451.9 bits (6451.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-218] Checking task 77fdfe62.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33125.3 = 33137.9
DL output with Mo: L = 12.6 + 8187.2 = 8199.8
DL input+output M: L = 25.2 + 41312.5 = 41337.7

# learning a model for train pairs
2.000	
1.486	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.302	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.117	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.003	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.974	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.954	OUT SPE ^.layer_011.shape.color = yellow
0.945	OUT SPE ^.color = black
0.940	IN  SPE ^.layer_0.shape.color = blue
0.750	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.702	OUT SPE ^.size = ^.layer_01.shape.size
0.669	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size / '2
0.638	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size / '2
0.620	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.601	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.583	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.564	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.544	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.528	OUT SPE ^.layer_01.shape.color = ^.layer_011111.shape.color
0.517	OUT SPE ^.layer_01.pos.i = right(^.layer_01) / '2
0.506	OUT SPE ^.layer_01.pos.j = min(^.layer_01.pos.j, ^.layer_011111.pos.j)
0.501	IN  SPE ^.layer_01.shape.color = cyan
0.499	IN  SPE ^.color = black
0.294	
0.294	IN  GEN ^.layer_01.shape.color = ?
0.294	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size / '2 and color ^.layer_011.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size / '2 and color ^.layer_011111.shape.color and mask ? at (right(^.layer_01) / '2,min(^.layer_01.pos.j, ^.layer_011111.pos.j))
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 133.2 + 6830.5 = 6963.7
DL output with Mo: L = 229.8 + 2136.3 = 2366.1
DL input+output M: L = 363.0 + 8966.8 = 9329.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size / '2 and color ^.layer_011.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size / '2 and color ^.layer_011111.shape.color and mask ? at (right(^.layer_01) / '2,min(^.layer_01.pos.j, ^.layer_011111.pos.j))
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 126.5 + 60.0 = 186.5
DL output with Mo: L = 229.8 + 2136.3 = 2366.1
DL input+output M: L = 356.3 + 2196.3 = 2552.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _0111: a point with color green at (0,7)
  _01111: a point with color cyan at (5,2)
  _011111: a point with color pink at (7,7)
diff: 
delta: (7,0)=4 
   (2.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask x.|xx at (2,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,0)
diff: 
delta: (1,3)=3 
   (72.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _0111: a point with color green at (0,7)
  _01111: a point with color cyan at (5,2)
  _011111: a point with color yellow at (7,0)
diff: 
delta: (7,7)=6 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _0111: a point with color green at (0,7)
  _01111: a point with color cyan at (5,2)
  _011111: a point with color pink at (7,7)
diff: 
delta: (7,0)=4 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _0111: a point with color green at (0,7)
  _01111: a point with color yellow at (7,0)
  _011111: a point with color cyan at (5,2)
diff: 
delta: (7,7)=6 
! 7 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color green at (5,5)
  _011111: a point with color red at (5,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color red at (5,0)
  _011111: a point with color green at (5,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color green at (5,5)
  _011111: a point with color red at (5,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _0111: a point with color red at (0,7)
  _01111: a point with color yellow at (7,7)
  _011111: a point with color orange at (7,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,0)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,2)
diff: 
delta: (0,3)=2  (1,2)=2 
   (117.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _0111: a point with color red at (0,7)
  _01111: a point with color orange at (7,0)
  _011111: a point with color yellow at (7,7)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _0111: a point with color red at (0,7)
  _01111: a point with color yellow at (7,7)
  _011111: a point with color orange at (7,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .x......x.|xxxxxxxxxx|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|xxxxxxxxxx|.x......x. at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask .xx...|xxx.x.|..x.x.|.x.xx.|xx.x.x|.x..x. at (2,2)
  _011: a point with color green at (0,0)
  _0111: a point with color yellow at (0,9)
  _01111: a point with color orange at (9,0)
  _011111: a point with color grey at (9,9)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .x......x.|xxxxxxxxxx|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|xxxxxxxxxx|.x......x. at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask .xx...|xxx.x.|..x.x.|.x.xx.|xx.x.x|.x..x. at (2,2)
  _011: a point with color green at (0,0)
  _0111: a point with color yellow at (0,9)
  _01111: a point with color grey at (9,9)
  _011111: a point with color orange at (9,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 77fdfe62.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.2 sec (23.2 sec/task)
bits-train-error = 2136.3 bits (2136.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-217] Checking task 780d0b14.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 292691.2 = 292703.8
DL output with Mo: L = 12.6 + 4373.7 = 4386.3
DL input+output M: L = 25.2 + 297064.9 = 297090.1

# learning a model for train pairs
2.000	
1.723	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.549	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.365	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.212	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.072	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.929	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.851	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.785	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.703	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.637	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	OUT SPE ^.layer_0.pos = '(0, 0)
0.542	OUT SPE ^.layer_011.pos = '(1, 0)
0.495	OUT SPE ^.layer_0111.pos = '(1, 1)
0.461	OUT SPE ^.layer_0.shape.color = ^.layer_01111.shape.color
0.438	OUT SPE ^.layer_01.pos.i = '0
0.418	OUT SPE ^.size.i = ^.layer_011111.shape.size.j / '3
0.418	IN  SPE ^.color = black
0.340	
0.340	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_011111.shape.size.j / '3,?) and color ? and layers
  _0: a point with color ^.layer_01111.shape.color at '(0, 0)
  _01: a point with color ? at ('0,?)
  _011: a point with color ? at '(1, 0)
  _0111: a point with color ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.7 + 22623.8 = 22787.5
DL output with Mo: L = 149.9 + 1340.0 = 1489.9
DL input+output M: L = 313.6 + 23963.8 = 24277.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_011111.shape.size.j / '3,?) and color ? and layers
  _0: a point with color ^.layer_01111.shape.color at '(0, 0)
  _01: a point with color ? at ('0,?)
  _011: a point with color ? at '(1, 0)
  _0111: a point with color ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 31.7 = 195.2
DL output with Mo: L = 149.9 + 1340.0 = 1489.9
DL input+output M: L = 313.4 + 1371.7 = 1685.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _011: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _0111: a rectangle with size (8,2) and color blue and mask Full at (0,0)
  _01111: a rectangle with size (5,3) and color blue and mask Full at (2,3)
  _011111: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
diff: 
delta: (3,3)=1  (3,4)=0  (3,5)=1  (4,0)=0  (4,1)=1  (4,3)=0  (4,4)=1  (4,5)=1  (5,0)=1  (5,1)=0  (7,19)=8 
   (3.2 bits)
data: a background with size (2,2) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color cyan at (0,1)
  _011: a point with color pink at (1,0)
  _0111: a point with color blue at (1,1)
diff: 
delta:
   (28.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _011: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _0111: a rectangle with size (8,2) and color blue and mask Full at (0,0)
  _01111: a rectangle with size (5,3) and color blue and mask Full at (2,3)
  _011111: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
diff: 
delta: (3,3)=1  (3,4)=0  (3,5)=1  (4,0)=0  (4,1)=1  (4,3)=0  (4,4)=1  (4,5)=1  (5,0)=1  (5,1)=0  (7,19)=8 
! size mismatch, 2x10 instead of 2x2

TRAIN 780d0b14.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _011: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _0111: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _01111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
  _011111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (2,3) and color cyan and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color green at (0,2)
  _011: a point with color blue at (1,0)
  _0111: a point with color red at (1,1)
diff: 
delta:
   (36.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _011: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _0111: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _01111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
  _011111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
diff: 
delta:
! size mismatch, 2x10 instead of 2x3
>> Trial 2
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _011: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _0111: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _01111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
  _011111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
diff: 
delta:
! size mismatch, 2x10 instead of 2x3
>> Trial 3
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _011: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _0111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
  _01111: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _011111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
diff: 
delta:
! size mismatch, 2x10 instead of 2x3

TRAIN 780d0b14.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _011: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _0111: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _01111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
  _011111: a rectangle with size (6,9) and color orange and mask ...x..x..|x.x.xxxx.|.xx..xx.x|..xxxxxx.|.x.xxx...|xx.xx.... at (0,8)
diff: 
delta: (5,15)=7# (5,16)=7#
   (0.0 bits)
data: a background with size (3,2) and color blue and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color yellow at (1,0)
  _0111: a point with color cyan at (1,1)
diff: 
delta: (2,1)=6 
   (69.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _011: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _0111: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _01111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
  _011111: a rectangle with size (6,9) and color orange and mask ...x..x..|x.x.xxxx.|.xx..xx.x|..xxxxxx.|.x.xxx...|xx.xx.... at (0,8)
diff: 
delta: (5,15)=7# (5,16)=7#
! size mismatch, 3x10 instead of 3x2

TRAIN 780d0b14.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 780d0b14.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 19.5 sec (19.5 sec/task)
bits-train-error = 1340.0 bits (1340.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-216] Checking task 7837ac64.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 565155.9 = 565168.5
DL output with Mo: L = 12.6 + 6261.1 = 6273.7
DL input+output M: L = 25.2 + 571417.0 = 571442.2

# learning a model for train pairs
2.000	
1.099	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.676	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.538	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.457	OUT SPE ^.size = '(3, 3)
0.420	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.420	IN  SPE ^.color = black
0.412	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.404	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.400	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.367	OUT SPE ^.layer_00.shape.color = ^.layer_0111.shape.color
0.363	IN  ADD ^.layer_01110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.353	OUT SPE ^.layer_00.pos.i = average(^.layer_011.pos.i, ^.layer_0111.pos.i) - ^.layer_01.pos.i - ^.layer_0.pos.i
0.352	IN  ADD ^.layer_011101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.352	IN  SPE ^.layer_01.shape.mask = Full
0.352	IN  SPE ^.layer_011.shape.mask = Full
0.351	IN  SPE ^.layer_01110.shape.mask = Full
0.351	IN  SPE ^.layer_011101.shape.mask = Full
0.351	IN  SPE ^.layer_0111.shape.mask = Full
0.278	
0.278	IN  GEN ^.layer_0111.shape.mask = ?
0.278	IN  GEN ^.layer_011101.shape.mask = ?
0.278	IN  GEN ^.layer_01110.shape.mask = ?
0.278	IN  GEN ^.layer_011.shape.mask = ?
0.278	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _00: a point with color ^.layer_0111.shape.color at (average(^.layer_011.pos.i, ^.layer_0111.pos.i) - ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011101: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 168.7 + 41092.6 = 41261.3
DL output with Mo: L = 170.1 + 1572.9 = 1742.9
DL input+output M: L = 338.7 + 42665.5 = 43004.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _00: a point with color ^.layer_0111.shape.color at (average(^.layer_011.pos.i, ^.layer_0111.pos.i) - ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.7 + 31.7 = 195.4
DL output with Mo: L = 170.1 + 1572.9 = 1742.9
DL input+output M: L = 333.7 + 1604.6 = 1938.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (10,1) and color blue and mask Full at (5,5)
  _011: a rectangle with size (10,1) and color blue and mask Full at (5,8)
  _01110: a rectangle with size (1,4) and color green and mask Full at (8,11)
  _011101: a rectangle with size (1,1) and color green and mask Full at (5,11)
  _0111: a rectangle with size (1,1) and color green and mask Full at (5,14)
diff: 
delta:
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (25.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (10,1) and color blue and mask Full at (5,5)
  _011: a rectangle with size (10,1) and color blue and mask Full at (5,8)
  _01110: a rectangle with size (1,4) and color green and mask Full at (8,11)
  _011101: a rectangle with size (1,1) and color green and mask Full at (5,11)
  _0111: a rectangle with size (1,1) and color green and mask Full at (5,14)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 7837ac64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color red and mask Full at (11,3)
  _011: a rectangle with size (1,5) and color red and mask Full at (7,7)
  _01110: a rectangle with size (1,5) and color red and mask Full at (15,3)
  _011101: a rectangle with size (1,5) and color cyan and mask Full at (15,11)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (19,11)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color cyan at (2,2)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (30.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color red and mask Full at (11,3)
  _011: a rectangle with size (1,5) and color red and mask Full at (7,7)
  _01110: a rectangle with size (1,5) and color red and mask Full at (15,3)
  _011101: a rectangle with size (1,5) and color cyan and mask Full at (15,11)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (19,11)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color red and mask Full at (11,3)
  _011: a rectangle with size (1,5) and color red and mask Full at (7,7)
  _01110: a rectangle with size (1,5) and color red and mask Full at (15,3)
  _011101: a rectangle with size (1,5) and color cyan and mask Full at (19,11)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (15,11)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 7837ac64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (1,10) and color green and mask Full at (17,14)
  _011: a rectangle with size (1,10) and color green and mask Full at (20,14)
  _01110: a rectangle with size (1,7) and color pink and mask Full at (11,14)
  _011101: a rectangle with size (1,1) and color pink and mask Full at (14,14)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (14,17)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color green and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (2,3) and color black and mask Full at (0,0)
diff: 
delta: (0,1)=6 
   (69.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (1,10) and color green and mask Full at (17,14)
  _011: a rectangle with size (1,10) and color green and mask Full at (20,14)
  _01110: a rectangle with size (1,7) and color pink and mask Full at (11,14)
  _011101: a rectangle with size (1,1) and color pink and mask Full at (14,14)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (14,17)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 7837ac64.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _01110: a rectangle with size (1,5) and color blue and mask Full at (7,7)
  _011101: a rectangle with size (1,5) and color red and mask Full at (7,15)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (11,7)
diff: 
delta: (11,15)=2  (11,19)=2 
   (0.0 bits)
data: a background with size (3,3) and color red and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (2,2) and color black and mask Full at (0,0)
diff: 
delta:
   (32.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _01110: a rectangle with size (1,5) and color blue and mask Full at (7,7)
  _011101: a rectangle with size (1,5) and color red and mask Full at (7,15)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (11,7)
diff: 
delta: (11,15)=2  (11,19)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _01110: a rectangle with size (1,5) and color blue and mask Full at (7,7)
  _011101: a rectangle with size (1,5) and color red and mask Full at (7,15)
  _0111: a rectangle with size (1,5) and color red and mask Full at (11,15)
diff: 
delta: (11,7)=1  (11,11)=1 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _01110: a rectangle with size (1,5) and color blue and mask Full at (7,7)
  _011101: a rectangle with size (1,5) and color blue and mask Full at (11,7)
  _0111: a rectangle with size (1,5) and color red and mask Full at (7,15)
diff: 
delta: (11,15)=2  (11,19)=2 
! 9 wrong pixels (generated / expected)

TRAIN 7837ac64.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (14,4)
  _011: a rectangle with size (1,16) and color cyan and mask Full at (19,4)
  _01110: a rectangle with size (1,6) and color blue and mask Full at (4,4)
  _011101: a rectangle with size (1,6) and color yellow and mask Full at (4,14)
  _0111: a rectangle with size (1,6) and color blue and mask Full at (9,4)
diff: 
delta: (9,14)=4  (9,19)=4 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (14,4)
  _011: a rectangle with size (1,16) and color cyan and mask Full at (19,4)
  _01110: a rectangle with size (1,6) and color blue and mask Full at (4,4)
  _011101: a rectangle with size (1,6) and color yellow and mask Full at (4,14)
  _0111: a rectangle with size (1,6) and color yellow and mask Full at (9,14)
diff: 
delta: (9,4)=1  (9,9)=1 
! 8 wrong pixels (generated / expected)

TEST 7837ac64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 1572.9 bits (1572.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-215] Checking task 794b24be.json: 10 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10663.5 = 10676.1
DL output with Mo: L = 12.6 + 10663.5 = 10676.1
DL input+output M: L = 25.2 + 21327.0 = 21352.2

# learning a model for train pairs
2.000	
1.416	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.935	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.813	OUT SPE ^.size = ^.size
0.740	OUT SPE ^.layer_0.pos = '(0, 0)
0.687	OUT SPE ^.layer_0.shape.color = red
0.664	OUT SPE ^.color = black
0.149	
0.147	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 5501.4 = 5540.3
DL output with Mo: L = 40.5 + 1513.0 = 1553.5
DL input+output M: L = 79.3 + 7014.4 = 7093.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 40.5 + 1513.0 = 1553.5
DL input+output M: L = 53.1 + 1513.0 = 1566.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=1  (2,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=1  (2,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,2)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=1 
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (2,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta:
   (13.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (2,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,0)=1  (1,1)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta:
   (13.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,0)=1  (1,1)=1 
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (2,0)=1  (2,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (2,0)=1  (2,2)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/8: 0 - (FAILURE)

## instance 9

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/9: 0 - (FAILURE)

## instance 10

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (1,2)=1  (2,1)=1  (2,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (1,2)=1  (2,1)=1  (2,2)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/10: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (2,1)=1 
! 2 wrong pixels (generated / expected)

TEST 794b24be.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,1)=1  (1,2)=1  (2,0)=1 
! 2 wrong pixels (generated / expected)

TEST 794b24be.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.8 sec (9.8 sec/task)
bits-train-error = 1513.0 bits (1513.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-214] Checking task 7b6016b9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 128279.2 = 128291.8
DL output with Mo: L = 12.6 + 207666.3 = 207678.9
DL input+output M: L = 25.2 + 335945.5 = 335970.7

# learning a model for train pairs
2.000	
1.104	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.491	OUT ADD ^.layer_0 = ^.layer_0
0.200	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.143	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.125	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.122	OUT SPE ^.size = ^.size
0.120	OUT SPE ^.color = green
0.119	OUT SPE ^.layer_011.shape.size.i = 3
0.119	OUT SPE ^.layer_01.shape.color = red
0.118	OUT SPE ^.layer_011.shape.color = red
0.117	OUT SPE ^.layer_0111.shape.color = red
0.116	IN  SPE ^.color = black
0.116	OUT SPE ^.layer_01.shape.mask = Full
0.115	OUT SPE ^.layer_011.shape.mask = Full
0.115	OUT SPE ^.layer_0111.shape.mask = Full
0.012	
0.012	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (3,?) and color red and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 13174.2 = 13213.2
DL output with Mo: L = 114.2 + 2376.5 = 2490.7
DL input+output M: L = 153.2 + 15550.7 = 15703.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (3,?) and color red and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 114.2 + 2376.5 = 2490.7
DL input+output M: L = 153.0 + 2376.5 = 2529.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (23,23) and color green and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
  _01: a rectangle with size (6,9) and color red and mask Full at (9,7)
  _011: a rectangle with size (3,3) and color red and mask Full at (5,7)
  _0111: a rectangle with size (3,2) and color red and mask Full at (16,14)
diff: 
delta:
   (77.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
diff: 
delta:
! 73 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (22,25) and color green and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
  _01: a rectangle with size (8,3) and color red and mask Full at (4,5)
  _011: a rectangle with size (3,5) and color red and mask Full at (4,11)
  _0111: a rectangle with size (8,5) and color red and mask Full at (4,5)
diff: 
delta:
   (82.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
diff: 
delta:
! 59 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (24,21) and color black and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (24,21) and color green and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
  _01: a rectangle with size (9,8) and color red and mask Full at (6,5)
  _011: a rectangle with size (3,2) and color red and mask Full at (16,5)
  _0111: a rectangle with size (2,4) and color red and mask Full at (16,14)
diff: 
delta:
   (77.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,21) and color black and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
diff: 
delta:
! 86 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (21,22) and color orange and mask ...x..........x.......|...x.....x....x.....x.|...x.....x....x.....x.|xxxxxxxxxxxxxxxxxxxxxx|...x.....x....x.....x.|...x.....x....x.....x.|...x.....x....x.....x.|...x.....x....x.....x.|...x....xxxxxxxxxxxxxx|...x.....x....x.....x.|...x.....x....x.....x.|...x..........x.....x.|...x..........x.......|.xxxxxxxxxxxxxxxxx....|...x..........x.......|...x..........x.......|...x......xxxxxxxxx...|.xxxxx........x.......|...x..........x.......|...x..................|...x.................. at (1,2)
diff: 
delta:
! 104 wrong pixels (generated / expected)

TEST 7b6016b9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.6 sec (10.6 sec/task)
bits-train-error = 2376.5 bits (2376.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-213] Checking task 7b7f7511.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12825.5 = 12838.1
DL output with Mo: L = 12.6 + 6598.8 = 6611.4
DL input+output M: L = 25.2 + 19424.3 = 19449.6

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = periodicFactor(black, ^.grid)
0.561	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.529	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.439	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.394	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.384	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.376	IN  SPE ^.layer_01.shape.mask = Full
0.369	IN  SPE ^.layer_0111.shape.mask = Full
0.013	
0.011	IN  DEL ^.layer_0111
0.009	IN  DEL ^.layer_01
0.007	IN  DEL ^.layer_011
0.005	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_00

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
periodicFactor(black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 131.6 + 4571.7 = 4703.3
DL output with Mo: L = 15.3 + 0.0 = 15.3
DL input+output M: L = 146.9 + 4571.7 = 4718.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
periodicFactor(black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 15.3 + 0.0 = 15.3
DL input+output M: L = 27.9 + 0.0 = 27.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,8) and color blue and layers
diff: 
delta: (0,2)=3  (0,3)=2  (0,6)=3  (0,7)=2  (1,2)=3  (1,3)=3  (1,6)=3  (1,7)=3  (2,0)=3  (2,1)=3  (2,4)=3  (2,5)=3  (3,0)=2  (3,1)=3  (3,4)=2  (3,5)=3 
   (0.0 bits)
data: 
1 1 3 2 
1 1 3 3 
3 3 1 1 
2 3 1 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color blue and layers
diff: 
delta: (0,2)=3  (0,3)=2  (0,6)=3  (0,7)=2  (1,2)=3  (1,3)=3  (1,6)=3  (1,7)=3  (2,0)=3  (2,1)=3  (2,4)=3  (2,5)=3  (3,0)=2  (3,1)=3  (3,4)=2  (3,5)=3 
correct output grid

TRAIN 7b7f7511.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,6) and color yellow and layers
diff: 
delta: (1,0)=6  (1,2)=8  (1,3)=6  (1,5)=8  (2,0)=6  (2,1)=6  (2,2)=8  (2,3)=6  (2,4)=6  (2,5)=8 
   (0.0 bits)
data: 
4 4 4 
6 4 8 
6 6 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color yellow and layers
diff: 
delta: (1,0)=6  (1,2)=8  (1,3)=6  (1,5)=8  (2,0)=6  (2,1)=6  (2,2)=8  (2,3)=6  (2,4)=6  (2,5)=8 
correct output grid

TRAIN 7b7f7511.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (6,2) and color red and layers
diff: 
delta: (0,1)=3  (1,0)=3  (2,0)=4  (2,1)=4  (3,1)=3  (4,0)=3  (5,0)=4  (5,1)=4 
   (0.0 bits)
data: 
2 3 
3 2 
4 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color red and layers
diff: 
delta: (0,1)=3  (1,0)=3  (2,0)=4  (2,1)=4  (3,1)=3  (4,0)=3  (5,0)=4  (5,1)=4 
correct output grid

TRAIN 7b7f7511.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color yellow and layers
diff: 
delta: (0,0)=5# (0,2)=5# (1,1)=5# (2,0)=6  (2,1)=6  (3,0)=2  (3,1)=6  (3,2)=2  (4,0)=5# (4,2)=5# (5,1)=5# (6,0)=6  (6,1)=6  (7,0)=2  (7,1)=6  (7,2)=2 
correct output grid

TEST 7b7f7511.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-212] Checking task 7c008303.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42645.2 = 42657.8
DL output with Mo: L = 12.6 + 18686.2 = 18698.8
DL input+output M: L = 25.2 + 61331.4 = 61356.6

# learning a model for train pairs
2.000	
1.599	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.332	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.924	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.677	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	OUT SPE ^.size = ^.size - (3, 3)
0.570	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.550	OUT SPE ^.layer_01.shape.size = '(3, 3)
0.530	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.514	OUT SPE ^.layer_0.pos = '(0, 0)
0.499	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.486	IN  ADD ^.layer_011100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.477	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.463	OUT SPE ^.layer_01.pos = projI(^.layer_011.pos) + (0, 3)
0.455	OUT SPE ^.layer_0111.pos.j = 3
0.448	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.j
0.441	OUT SPE ^.layer_011.shape.color = ^.layer_01111.shape.color
0.436	OUT SPE ^.layer_011.pos.j = ^.layer_01110.pos.i / '3
0.430	OUT SPE ^.layer_011.pos.i = ^.layer_011100.pos.j - ^.layer_011.pos.i - ^.layer_0.pos.i
0.426	OUT SPE ^.color = black
0.424	IN  SPE ^.layer_0111.shape.mask = Full
0.422	IN  SPE ^.color = black
0.215	
0.215	IN  GEN ^.layer_0111.shape.mask = ?
0.215	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - (3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color ? and mask ? at '(0, 0)
  _01: a rectangle with size '(3, 3) and color ? and mask ? at projI(^.layer_011.pos) + (0, 3)
  _011: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (^.layer_011100.pos.j - ^.layer_011.pos.i - ^.layer_0.pos.i,^.layer_01110.pos.i / '3)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j,3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 170.7 + 8920.9 = 9091.6
DL output with Mo: L = 293.6 + 3619.7 = 3913.3
DL input+output M: L = 464.3 + 12540.6 = 13004.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - (3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color ? and mask ? at '(0, 0)
  _01: a rectangle with size '(3, 3) and color ? and mask ? at projI(^.layer_011.pos) + (0, 3)
  _011: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (^.layer_011100.pos.j - ^.layer_011.pos.i - ^.layer_0.pos.i,^.layer_01110.pos.i / '3)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j,3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 169.6 + 71.7 = 241.3
DL output with Mo: L = 293.6 + 3619.7 = 3913.3
DL input+output M: L = 463.1 + 3691.4 = 4154.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01110: a point with color yellow at (0,1)
  _0111: a rectangle with size (1,1) and color pink and mask Full at (1,1)
  _01111: a point with color blue at (1,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask +-cross at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (0,3)
  _011: a rectangle with size (3,3) and color blue and mask +-cross at (3,0)
  _0111: a rectangle with size (3,3) and color pink and mask +-cross at (3,3)
diff: 
delta:
   (73.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01110: a point with color yellow at (0,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,0)
  _01111: a point with color pink at (1,1)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01110: a point with color yellow at (0,1)
  _0111: a rectangle with size (1,1) and color pink and mask Full at (1,1)
  _01111: a point with color blue at (1,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN 7c008303.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask ......x..|......x..|xxxxxxxxx|......x..|......x..|......x..|......x..|......x..|......x.. at (0,0)
  _01: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _011: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.. at (3,0)
  _011100: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,7)
  _01110: a point with color red at (0,8)
  _0111: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _01111: a point with color yellow at (1,7)
diff: 
delta:
   (2.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|xx. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (3,3)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,3)
diff: 
delta: (0,5)=2  (2,3)=2  (2,5)=2 
   (173.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask ......x..|......x..|xxxxxxxxx|......x..|......x..|......x..|......x..|......x..|......x.. at (0,0)
  _01: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _011: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.. at (3,0)
  _011100: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,7)
  _01110: a point with color red at (0,8)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (1,7)
  _01111: a point with color green at (3,5)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask ......x..|......x..|xxxxxxxxx|......x..|......x..|......x..|......x..|......x..|......x.. at (0,0)
  _01: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _011: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.. at (3,0)
  _011100: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,7)
  _01110: a point with color red at (0,8)
  _0111: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _01111: a point with color yellow at (1,7)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN 7c008303.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (2,1) and color green and mask Full at (4,4)
  _01110: a point with color green at (5,8)
  _0111: a rectangle with size (1,1) and color red and mask Full at (7,0)
  _01111: a point with color pink at (8,0)
diff: 
delta: (7,1)=4  (8,1)=5#
   (3.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xx. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|..x|xx. at (0,3)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (3,3)
diff: 
delta: (5,5)=5#
   (114.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (2,1) and color green and mask Full at (4,4)
  _01110: a point with color green at (5,8)
  _0111: a rectangle with size (1,1) and color red and mask Full at (7,0)
  _01111: a point with color yellow at (7,1)
diff: 
delta: (8,0)=6  (8,1)=5#
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (2,1) and color green and mask Full at (4,4)
  _01110: a point with color green at (5,8)
  _0111: a rectangle with size (1,1) and color red and mask Full at (7,0)
  _01111: a point with color yellow at (7,1)
diff: 
delta: (8,0)=6  (8,1)=5#
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011100: a rectangle with size (2,1) and color green and mask Full at (4,4)
  _01110: a point with color green at (5,8)
  _0111: a rectangle with size (1,1) and color red and mask Full at (7,0)
  _01111: a point with color pink at (8,0)
diff: 
delta: (7,1)=4  (8,1)=5#
! 25 wrong pixels (generated / expected)

TRAIN 7c008303.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 7c008303.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 31.0 sec (31.0 sec/task)
bits-train-error = 3619.7 bits (3619.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-211] Checking task 7ddcd7ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7157.1 = 7169.8
DL output with Mo: L = 12.6 + 12409.1 = 12421.7
DL input+output M: L = 25.2 + 19566.3 = 19591.5

# learning a model for train pairs
2.000	
1.259	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.563	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.515	OUT SPE ^.size = ^.size
0.501	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.491	IN  SPE ^.color = black
0.485	OUT SPE ^.color = black
0.197	
0.197	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2068.5 = 2107.4
DL output with Mo: L = 37.2 + 2336.7 = 2373.8
DL input+output M: L = 76.1 + 4405.1 = 4481.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 37.2 + 2336.7 = 2373.8
DL input+output M: L = 76.0 + 2336.7 = 2412.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xx......|xx......|..x.....|...x....|....x...|.....x..|......x.|.......x at (2,2)
diff: 
delta:
   (77.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask ..x|xx.|xx.|..x at (1,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color yellow and mask ...x..|..x...|xx....|xx....|..x...|...x..|....x.|.....x at (0,4)
diff: 
delta:
   (71.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask ..x|xx.|xx.|..x at (1,4)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ...x|.xx.|.xx.|x... at (2,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask ........x|.......x.|......x..|....xx...|....xx...|...x.....|..x......|.x.......|x........ at (0,0)
diff: 
delta:
   (84.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ...x|.xx.|.xx.|x... at (2,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ...x|.xx.|.xx.|x..x at (3,2)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST 7ddcd7ec.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 2336.7 bits (2336.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-210] Checking task 7df24a62.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 77941.2 = 77953.8
DL output with Mo: L = 12.6 + 123518.6 = 123531.2
DL input+output M: L = 25.2 + 201459.8 = 201485.0

# learning a model for train pairs
2.000	
1.699	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.480	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.160	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.136	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.112	OUT ADD ^.layer_010 = ^.layer_01
1.092	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.071	OUT ADD ^.layer_0101 = ^.layer_011
1.054	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.034	OUT ADD ^.layer_0110 = ^.layer_0110
1.024	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.011	OUT ADD ^.layer_01101 = ^.layer_0111
1.001	IN  ADD ^.layer_01101 = a point with color ? at (?,?)
0.988	OUT ADD ^.layer_011011 = ^.layer_01101
0.980	OUT SPE ^.size = ^.size
0.363	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _0101: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _01101: ^.layer_0111
  _011011: ^.layer_01101
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 145.0 + 48127.0 = 48272.0
DL output with Mo: L = 135.7 + 44441.9 = 44577.7
DL input+output M: L = 280.7 + 92568.9 = 92849.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _0101: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _01101: ^.layer_0111
  _011011: ^.layer_01101
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 145.0 + 0.0 = 145.0
DL output with Mo: L = 135.7 + 44441.9 = 44577.7
DL input+output M: L = 280.7 + 44441.9 = 44722.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
  _0110: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01101: a point with color yellow at (4,20)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (5,18)
  _0111: a point with color yellow at (7,7)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (8,14)=4  (12,4)=4  (13,12)=0  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xxxxx|x.x.x|xxxxx|xx.xx|xxxxx at (12,10)
  _010: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
  _0101: a rectangle with size (1,1) and color yellow and mask Full at (5,18)
  _01: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _0110: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01101: a point with color yellow at (7,7)
  _011011: a point with color yellow at (4,20)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (8,14)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (12,4)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (528.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
  _0110: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01101: a point with color yellow at (4,20)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (5,18)
  _0111: a point with color yellow at (7,7)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (8,14)=4  (12,4)=4  (13,12)=0  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
  _0110: a rectangle with size (3,1) and color yellow and mask Full at (12,4)
  _01101: a point with color yellow at (1,13)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,20)
  _0111: a point with color yellow at (5,18)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (7,7)=4  (8,14)=4  (13,4)=0  (13,12)=0  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 59 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
  _0110: a rectangle with size (3,1) and color yellow and mask Full at (12,4)
  _01101: a point with color yellow at (1,13)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,20)
  _0111: a point with color yellow at (7,7)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (5,18)=4  (8,14)=4  (13,4)=0  (13,12)=0  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 59 wrong pixels (generated / expected)

TRAIN 7df24a62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|x.xx|xx.x|xxxx at (6,15)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _0110: a rectangle with size (2,2) and color yellow and mask Full at (7,16)
  _01101: a point with color yellow at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
  _0111: a point with color yellow at (0,10)
diff: 
delta: (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|x.xx|xx.x|xxxx at (6,15)
  _010: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _0101: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
  _01: a rectangle with size (4,4) and color blue and mask Full at (13,13)
  _0110: a rectangle with size (2,2) and color yellow and mask Full at (7,16)
  _01101: a point with color yellow at (0,10)
  _011011: a point with color yellow at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,8)
diff: 
delta: (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (799.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|x.xx|xx.x|xxxx at (6,15)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _0110: a rectangle with size (2,2) and color yellow and mask Full at (7,16)
  _01101: a point with color yellow at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
  _0111: a point with color yellow at (0,10)
diff: 
delta: (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
! 50 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _01: a rectangle with size (1,8) and color yellow and mask Full at (6,13)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _01101: a point with color yellow at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
  _0111: a point with color yellow at (0,10)
diff: 
delta: (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,14)=0  (6,19)=0  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
! 52 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _01: a rectangle with size (1,8) and color yellow and mask Full at (6,13)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _01101: a point with color yellow at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
  _0111: a point with color yellow at (3,8)
diff: 
delta: (0,10)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,14)=0  (6,19)=0  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
! 52 wrong pixels (generated / expected)

TRAIN 7df24a62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _0110: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
  _01101: a point with color yellow at (0,10)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,14)
  _0111: a point with color yellow at (2,12)
diff: 
delta: (3,11)=4  (4,5)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ....xxx|xxxxx.x|x..xx.x|xxxxxxx at (13,5)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _0101: a rectangle with size (2,1) and color yellow and mask Full at (3,14)
  _01: a rectangle with size (4,7) and color blue and mask xxxxxxx|x..xx.x|xxxxx.x|....xxx at (11,13)
  _0110: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
  _01101: a point with color yellow at (2,12)
  _011011: a point with color yellow at (0,10)
  _011: a rectangle with size (8,4) and color blue and mask xxx.|x.x.|x.x.|xxx.|.xxx|.x.x|.x.x|.xxx at (2,13)
diff: 
delta: (3,11)=4  (4,5)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1723.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _0110: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
  _01101: a point with color yellow at (0,10)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,14)
  _0111: a point with color yellow at (2,12)
diff: 
delta: (3,11)=4  (4,5)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! 102 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _0110: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
  _01101: a point with color yellow at (0,10)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,14)
  _0111: a point with color yellow at (3,11)
diff: 
delta: (2,12)=4  (4,5)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! 102 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _0110: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
  _01101: a point with color yellow at (0,10)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (7,15)
  _0111: a point with color yellow at (2,12)
diff: 
delta: (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (8,3)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! 102 wrong pixels (generated / expected)

TRAIN 7df24a62.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01101: a point with color yellow at (1,4)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,2)
  _0111: a point with color yellow at (1,21)
diff: 
delta: (3,13)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (0.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _0101: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,2)
  _01: a rectangle with size (5,4) and color blue and mask Full at (4,15)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01101: a point with color yellow at (1,21)
  _011011: a point with color yellow at (1,4)
  _011: a rectangle with size (3,5) and color blue and mask Full at (0,1)
diff: 
delta: (3,13)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (1392.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01101: a point with color yellow at (1,4)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,2)
  _0111: a point with color yellow at (1,21)
diff: 
delta: (3,13)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01101: a point with color yellow at (1,4)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,2)
  _0111: a point with color yellow at (3,13)
diff: 
delta: (1,21)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
! 80 wrong pixels (generated / expected)

TRAIN 7df24a62.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (20,6)
  _0110: a rectangle with size (1,1) and color yellow and mask Full at (1,5)
  _01101: a point with color yellow at (3,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,3)
  _0111: a point with color yellow at (5,14)
diff: 
delta: (1,10)=4  (3,10)=4  (3,12)=4  (8,10)=4  (9,5)=4  (9,19)=4  (10,8)=4  (10,13)=4  (11,3)=4  (11,5)=4  (11,18)=4  (12,12)=4  (16,0)=4  (16,7)=4  (16,18)=4  (18,19)=4  (20,7)=0  (21,21)=4  (22,1)=4  (22,6)=4 
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (20,6)
  _0110: a rectangle with size (1,1) and color yellow and mask Full at (1,5)
  _01101: a point with color yellow at (3,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,3)
  _0111: a point with color yellow at (8,10)
diff: 
delta: (1,10)=4  (3,10)=4  (3,12)=4  (5,14)=4  (9,5)=4  (9,19)=4  (10,8)=4  (10,13)=4  (11,3)=4  (11,5)=4  (11,18)=4  (12,12)=4  (16,0)=4  (16,7)=4  (16,18)=4  (18,19)=4  (20,7)=0  (21,21)=4  (22,1)=4  (22,6)=4 
! 84 wrong pixels (generated / expected)

TEST 7df24a62.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 44441.9 bits (44441.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-209] Checking task 7e0986d6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 73235.3 = 73247.9
DL output with Mo: L = 12.6 + 68656.0 = 68668.6
DL input+output M: L = 25.2 + 141891.3 = 141916.5

# learning a model for train pairs
2.000	
1.635	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.312	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.012	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.736	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.512	OUT ADD ^.layer_011 = ^.layer_01
0.324	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.284	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.273	OUT SPE ^.layer_01 = ^.layer_011
0.267	OUT SPE ^.size = ^.size
0.261	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.256	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.252	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.246	IN  ADD ^.layer_0111110 = a point with color ? at (?,?)
0.241	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.237	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.234	IN  SPE ^.layer_01.shape.mask = Full
0.233	IN  SPE ^.layer_011.shape.mask = Full
0.231	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.230	IN  SPE ^.layer_0111.shape.mask = Full
0.229	IN  SPE ^.layer_011111.shape.mask = Full
0.229	OUT SPE ^.color = black
0.228	IN  SPE ^.color = black
0.062	
0.062	IN  DEL ^.layer_011111
0.062	IN  DEL ^.layer_0111
0.062	IN  DEL ^.layer_0111111
0.061	IN  DEL ^.layer_0111110
0.061	IN  DEL ^.layer_01111
0.061	IN  GEN ^.layer_011.shape.mask = ?
0.061	IN  GEN ^.layer_01.shape.mask = ?
0.061	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_011
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
  _0111110: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 189.0 + 12117.7 = 12306.6
DL output with Mo: L = 50.5 + 4060.8 = 4111.3
DL input+output M: L = 239.5 + 16178.4 = 16417.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_011
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 50.5 + 4060.8 = 4111.3
DL input+output M: L = 139.8 + 4060.8 = 4200.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _01: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _011: a rectangle with size (4,5) and color green and mask Full at (6,9)
diff: 
delta: (0,0)=8  (0,4)=8  (0,11)=8  (2,8)=8  (2,10)=8  (3,2)=3  (3,3)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,7)=8  (5,2)=3  (5,3)=3  (5,4)=8  (7,1)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
   (0.0 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask ...xxxxx|...xxxxx|...xxxxx|xxxxxxxx|xxx.....|xxx..... at (7,0)
  _01: a rectangle with size (4,5) and color green and mask Full at (6,9)
  _011: a rectangle with size (5,5) and color green and mask Full at (0,6)
diff: 
delta: (3,2)=3  (3,3)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (5,2)=3  (5,3)=3  (5,4)=3 
   (402.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _01: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _011: a rectangle with size (4,5) and color green and mask Full at (6,9)
diff: 
delta: (0,0)=8  (0,4)=8  (0,11)=8  (2,8)=8  (2,10)=8  (3,2)=3  (3,3)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,7)=8  (5,2)=3  (5,3)=3  (5,4)=8  (7,1)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _01: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _011: a rectangle with size (4,5) and color green and mask Full at (6,9)
diff: 
delta: (0,0)=8  (0,4)=8  (0,11)=8  (2,8)=8  (2,10)=8  (3,2)=3  (3,3)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,7)=8  (5,2)=3  (5,3)=3  (5,4)=8  (7,1)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
! 13 wrong pixels (generated / expected)

TRAIN 7e0986d6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (4,10) and color red and mask Full at (9,3)
  _01: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _011: a rectangle with size (5,4) and color red and mask Full at (1,1)
diff: 
delta: (1,6)=1  (2,10)=1  (3,3)=1  (5,5)=1  (5,14)=1  (8,12)=1  (9,1)=1  (9,9)=1  (10,3)=1  (10,15)=1  (11,9)=1  (11,12)=1 
   (0.0 bits)
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (4,10) and color red and mask Full at (9,3)
  _01: a rectangle with size (5,4) and color red and mask Full at (1,1)
  _011: a rectangle with size (5,7) and color red and mask Full at (2,9)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (4,10) and color red and mask Full at (9,3)
  _01: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _011: a rectangle with size (5,4) and color red and mask Full at (1,1)
diff: 
delta: (1,6)=1  (2,10)=1  (3,3)=1  (5,5)=1  (5,14)=1  (8,12)=1  (9,1)=1  (9,9)=1  (10,3)=1  (10,15)=1  (11,9)=1  (11,12)=1 
correct output grid

TRAIN 7e0986d6.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (6,8) and color grey and mask Full at (2,1)
  _01: a rectangle with size (7,4) and color grey and mask Full at (0,12)
  _011: a rectangle with size (2,6) and color grey and mask Full at (10,6)
diff: 
delta: (0,14)=4  (1,1)=4  (1,6)=4  (2,2)=4  (3,16)=4  (5,7)=4  (6,14)=4  (7,5)=4  (7,12)=4  (9,15)=4  (10,11)=4  (11,3)=4  (11,9)=4 
correct output grid

TEST 7e0986d6.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 11.1 sec (11.1 sec/task)
bits-train-error = 4060.8 bits (4060.8 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-208] Checking task 7f4411dc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41302.1 = 41314.7
DL output with Mo: L = 12.6 + 32938.0 = 32950.6
DL input+output M: L = 25.2 + 74240.1 = 74265.3

# learning a model for train pairs
2.000	
1.549	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.174	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.955	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.844	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.791	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	OUT SPE ^.size = ^.size
0.766	OUT SPE ^.layer_0.shape.size.i = 3
0.761	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.757	OUT SPE ^.layer_0.pos.j = max(^.layer_0.pos.j, ^.layer_01.pos.j)
0.753	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.739	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.732	OUT SPE ^.layer_0.shape.size.j = ^.layer_01.shape.size.i + 1
0.728	OUT SPE ^.layer_0.pos.i = bottom(^.layer_0) - 2
0.725	OUT SPE ^.layer_0.shape.mask = Full
0.722	IN  SPE ^.layer_0111.shape.mask = Full
0.720	OUT SPE ^.color = black
0.718	IN  SPE ^.color = black
0.502	
0.502	IN  GEN ^.layer_0111.shape.mask = ?
0.502	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,^.layer_01.shape.size.i + 1) and color ^.layer_0.shape.color and mask Full at (bottom(^.layer_0) - 2,max(^.layer_0.pos.j, ^.layer_01.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 146.1 + 8954.4 = 9100.5
DL output with Mo: L = 113.8 + 16299.3 = 16413.1
DL input+output M: L = 259.9 + 25253.7 = 25513.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,^.layer_01.shape.size.i + 1) and color ^.layer_0.shape.color and mask Full at (bottom(^.layer_0) - 2,max(^.layer_0.pos.j, ^.layer_01.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 145.0 + 0.0 = 145.0
DL output with Mo: L = 113.8 + 16299.3 = 16413.1
DL input+output M: L = 258.8 + 16299.3 = 16558.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _01: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
  _01111: a point with color orange at (5,10)
  _011111: a point with color orange at (8,1)
diff: 
delta: (12,4)=7#
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
diff: 
delta: (3,2)=7# (3,3)=7# (3,4)=7# (3,5)=7# (4,2)=7# (4,3)=7# (4,4)=7# (4,5)=7# (5,2)=7# (5,3)=7# (5,4)=7# (5,5)=7# (8,8)=7# (8,9)=7# (8,10)=7# (9,8)=7# (9,9)=7# (9,10)=7#
   (691.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _01: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
  _01111: a point with color orange at (5,10)
  _011111: a point with color orange at (8,1)
diff: 
delta: (12,4)=7#
! 18 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask ....x|xxxxx|xxxxx|xxxxx at (9,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
  _01111: a point with color pink at (2,1)
  _011111: a point with color pink at (2,6)
diff: 
delta: (3,16)=6  (6,12)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
   (0.0 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (10,9)
diff: 
delta: (2,11)=6  (2,12)=6  (2,13)=6  (3,11)=6  (3,12)=6  (3,13)=6  (5,3)=6  (5,4)=6  (5,5)=6  (5,6)=6  (6,3)=6  (6,4)=6  (6,5)=6  (6,6)=6  (7,3)=6  (7,4)=6  (7,5)=6  (7,6)=6  (12,2)=6  (12,3)=6  (13,2)=6  (13,3)=6  (14,2)=6  (14,3)=6 
   (938.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask ....x|xxxxx|xxxxx|xxxxx at (9,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
  _01111: a point with color pink at (2,1)
  _011111: a point with color pink at (2,6)
diff: 
delta: (3,16)=6  (6,12)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
! 24 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (1,6)
  _01111: a point with color grey at (5,0)
  _011111: a point with color grey at (6,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (1,6)
  _01111: a point with color grey at (5,0)
  _011111: a point with color grey at (6,5)
diff: 
delta:
correct output grid

TRAIN 7f4411dc.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xxxxxx|xxxxx.|xxxxx. at (5,4)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|.xxx|.xxx|x... at (1,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,7)
  _01111: a point with color cyan at (3,7)
  _011111: a point with color cyan at (7,0)
diff: 
delta: (8,2)=8  (9,4)=8  (9,9)=8 
! 6 wrong pixels (generated / expected)

TEST 7f4411dc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.7 sec (8.7 sec/task)
bits-train-error = 16299.3 bits (16299.3 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-207] Checking task 7fe24cdd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6422.6 = 6435.2
DL output with Mo: L = 12.6 + 25204.8 = 25217.4
DL input+output M: L = 25.2 + 31627.4 = 31652.6

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id rotate90 ] [ rotate270 rotate180 ], ^.grid)
0.752	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.603	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.556	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.525	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.509	IN  SPE ^.layer_0.shape.mask = Full
0.494	IN  SPE ^.layer_01.shape.mask = Full
0.479	IN  SPE ^.layer_011.shape.mask = Full
0.017	
0.013	IN  DEL ^.layer_011
0.009	IN  DEL ^.layer_01
0.005	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_0110

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id rotate90 ] [ rotate270 rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 107.8 + 2969.7 = 3077.5
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 121.7 + 2969.7 = 3091.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id rotate90 ] [ rotate270 rotate180 ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=5# (1,0)=8  (1,1)=5# (1,2)=3  (2,1)=3  (2,2)=2 
   (0.0 bits)
data: 
8 5#0 0 8 8 
8 5#3 3 5#5#
0 3 2 2 3 0 
0 3 2 2 3 0 
5#5#3 3 5#8 
8 8 0 0 5#8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=5# (1,0)=8  (1,1)=5# (1,2)=3  (2,1)=3  (2,2)=2 
correct output grid

TRAIN 7fe24cdd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,0)=3  (0,1)=8  (1,0)=3  (2,0)=8  (2,1)=5#
   (0.0 bits)
data: 
3 8 2 8 3 3 
3 2 2 5#2 8 
8 5#2 2 2 2 
2 2 2 2 5#8 
8 2 5#2 2 3 
3 3 8 2 8 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,0)=3  (0,1)=8  (1,0)=3  (2,0)=8  (2,1)=5#
correct output grid

TRAIN 7fe24cdd.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=3  (1,0)=6  (1,1)=6  (1,2)=6  (2,1)=3 
   (0.0 bits)
data: 
0 3 0 0 6 0 
6 6 6 3 6 3 
0 3 0 0 6 0 
0 6 0 0 3 0 
3 6 3 6 6 6 
0 6 0 0 3 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=3  (1,0)=6  (1,1)=6  (1,2)=6  (2,1)=3 
correct output grid

TRAIN 7fe24cdd.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=2  (0,1)=5# (0,2)=0  (1,0)=2  (1,1)=5# (2,0)=3 
correct output grid

TEST 7fe24cdd.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-206] Checking task 80af3007.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 60332.2 = 60344.8
DL output with Mo: L = 12.6 + 31249.9 = 31262.5
DL input+output M: L = 25.2 + 91582.1 = 91607.3

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = compose(grey, strip(^.grid) / '3, strip(^.grid) / '3)
0.075	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.072	IN  SPE ^.layer_0.shape.color = grey
0.071	IN  SPE ^.color = black
0.003	
0.003	IN  DEL ^.layer_0
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(grey, strip(^.grid) / '3, strip(^.grid) / '3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 4105.0 = 4147.3
DL output with Mo: L = 73.9 + 0.0 = 73.9
DL input+output M: L = 116.2 + 4105.0 = 4221.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(grey, strip(^.grid) / '3, strip(^.grid) / '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 73.9 + 0.0 = 73.9
DL input+output M: L = 86.5 + 0.0 = 86.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,18) and color black and layers
diff: 
delta: (1,1)=5# (1,2)=5# (1,3)=5# (1,7)=5# (1,8)=5# (1,9)=5# (2,1)=5# (2,2)=5# (2,3)=5# (2,7)=5# (2,8)=5# (2,9)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,7)=5# (3,8)=5# (3,9)=5# (4,4)=5# (4,5)=5# (4,6)=5# (5,4)=5# (5,5)=5# (5,6)=5# (6,4)=5# (6,5)=5# (6,6)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,7)=5# (7,8)=5# (7,9)=5# (8,1)=5# (8,2)=5# (8,3)=5# (8,7)=5# (8,8)=5# (8,9)=5# (9,1)=5# (9,2)=5# (9,3)=5# (9,7)=5# (9,8)=5# (9,9)=5#
   (0.0 bits)
data: 
5#0 5#0 0 0 5#0 5#
0 5#0 0 0 0 0 5#0 
5#0 5#0 0 0 5#0 5#
0 0 0 5#0 5#0 0 0 
0 0 0 0 5#0 0 0 0 
0 0 0 5#0 5#0 0 0 
5#0 5#0 0 0 5#0 5#
0 5#0 0 0 0 0 5#0 
5#0 5#0 0 0 5#0 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
diff: 
delta: (1,1)=5# (1,2)=5# (1,3)=5# (1,7)=5# (1,8)=5# (1,9)=5# (2,1)=5# (2,2)=5# (2,3)=5# (2,7)=5# (2,8)=5# (2,9)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,7)=5# (3,8)=5# (3,9)=5# (4,4)=5# (4,5)=5# (4,6)=5# (5,4)=5# (5,5)=5# (5,6)=5# (6,4)=5# (6,5)=5# (6,6)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,7)=5# (7,8)=5# (7,9)=5# (8,1)=5# (8,2)=5# (8,3)=5# (8,7)=5# (8,8)=5# (8,9)=5# (9,1)=5# (9,2)=5# (9,3)=5# (9,7)=5# (9,8)=5# (9,9)=5#
correct output grid

TRAIN 80af3007.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (16,18) and color black and layers
diff: 
delta: (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=5# (1,11)=5# (1,12)=5# (2,7)=5# (2,8)=5# (2,9)=5# (2,10)=5# (2,11)=5# (2,12)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (3,11)=5# (3,12)=5# (4,13)=5# (4,14)=5# (4,15)=5# (5,13)=5# (5,14)=5# (5,15)=5# (6,13)=5# (6,14)=5# (6,15)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (7,11)=5# (7,12)=5# (8,7)=5# (8,8)=5# (8,9)=5# (8,10)=5# (8,11)=5# (8,12)=5# (9,7)=5# (9,8)=5# (9,9)=5# (9,10)=5# (9,11)=5# (9,12)=5#
   (0.0 bits)
data: 
5#5#0 5#5#0 0 0 0 
0 0 5#0 0 5#0 0 0 
5#5#0 5#5#0 0 0 0 
0 0 0 0 0 0 5#5#0 
0 0 0 0 0 0 0 0 5#
0 0 0 0 0 0 5#5#0 
5#5#0 5#5#0 0 0 0 
0 0 5#0 0 5#0 0 0 
5#5#0 5#5#0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
diff: 
delta: (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=5# (1,11)=5# (1,12)=5# (2,7)=5# (2,8)=5# (2,9)=5# (2,10)=5# (2,11)=5# (2,12)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (3,11)=5# (3,12)=5# (4,13)=5# (4,14)=5# (4,15)=5# (5,13)=5# (5,14)=5# (5,15)=5# (6,13)=5# (6,14)=5# (6,15)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (7,11)=5# (7,12)=5# (8,7)=5# (8,8)=5# (8,9)=5# (8,10)=5# (8,11)=5# (8,12)=5# (9,7)=5# (9,8)=5# (9,9)=5# (9,10)=5# (9,11)=5# (9,12)=5#
correct output grid

TRAIN 80af3007.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (16,18) and color black and layers
diff: 
delta: (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (5,11)=5# (6,3)=5# (6,4)=5# (6,5)=5# (6,6)=5# (6,7)=5# (6,8)=5# (6,9)=5# (6,10)=5# (6,11)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (7,11)=5# (8,6)=5# (8,7)=5# (8,8)=5# (8,9)=5# (8,10)=5# (8,11)=5# (9,6)=5# (9,7)=5# (9,8)=5# (9,9)=5# (9,10)=5# (9,11)=5# (10,3)=5# (10,4)=5# (10,5)=5# (10,9)=5# (10,10)=5# (10,11)=5# (11,3)=5# (11,4)=5# (11,5)=5# (11,9)=5# (11,10)=5# (11,11)=5# (12,3)=5# (12,4)=5# (12,5)=5# (12,9)=5# (12,10)=5# (12,11)=5#
   (0.0 bits)
data: 
5#5#5#5#5#5#5#5#5#
0 5#5#0 5#5#0 5#5#
5#0 5#5#0 5#5#0 5#
0 0 0 5#5#5#5#5#5#
0 0 0 0 5#5#0 5#5#
0 0 0 5#0 5#5#0 5#
5#5#5#0 0 0 5#5#5#
0 5#5#0 0 0 0 5#5#
5#0 5#0 0 0 5#0 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
diff: 
delta: (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (5,11)=5# (6,3)=5# (6,4)=5# (6,5)=5# (6,6)=5# (6,7)=5# (6,8)=5# (6,9)=5# (6,10)=5# (6,11)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (7,11)=5# (8,6)=5# (8,7)=5# (8,8)=5# (8,9)=5# (8,10)=5# (8,11)=5# (9,6)=5# (9,7)=5# (9,8)=5# (9,9)=5# (9,10)=5# (9,11)=5# (10,3)=5# (10,4)=5# (10,5)=5# (10,9)=5# (10,10)=5# (10,11)=5# (11,3)=5# (11,4)=5# (11,5)=5# (11,9)=5# (11,10)=5# (11,11)=5# (12,3)=5# (12,4)=5# (12,5)=5# (12,9)=5# (12,10)=5# (12,11)=5#
correct output grid

TRAIN 80af3007.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
diff: 
delta: (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (3,11)=5# (3,12)=5# (3,13)=5# (3,14)=5# (3,15)=5# (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=5# (4,12)=5# (4,13)=5# (4,14)=5# (4,15)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (5,11)=5# (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (6,10)=5# (6,11)=5# (6,12)=5# (7,10)=5# (7,11)=5# (7,12)=5# (8,10)=5# (8,11)=5# (8,12)=5# (9,7)=5# (9,8)=5# (9,9)=5# (9,13)=5# (9,14)=5# (9,15)=5# (10,7)=5# (10,8)=5# (10,9)=5# (10,13)=5# (10,14)=5# (10,15)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,13)=5# (11,14)=5# (11,15)=5#
correct output grid

TEST 80af3007.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-205] Checking task 810b9b61.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36406.2 = 36418.8
DL output with Mo: L = 12.6 + 36406.2 = 36418.8
DL input+output M: L = 25.2 + 72812.4 = 72837.6

# learning a model for train pairs
2.000	
1.690	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.381	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.981	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.860	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.739	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.646	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.553	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	OUT SPE ^.layer_0 = coloring(^.layer_0, green)
0.505	OUT SPE ^.size = ^.size
0.495	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.485	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.475	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.465	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.456	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.448	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.441	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.436	IN  SPE ^.layer_0.shape.mask = Border
0.431	IN  SPE ^.layer_0.shape.color = blue
0.427	IN  SPE ^.layer_01.shape.color = blue
0.422	IN  SPE ^.layer_011.shape.color = blue
0.418	IN  SPE ^.layer_0111.shape.color = blue
0.414	OUT SPE ^.layer_0111.shape.mask = ^.layer_0111.shape.mask
0.411	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.409	OUT SPE ^.color = black
0.407	IN  SPE ^.color = black
0.159	
0.159	IN  GEN ^.layer_0111.shape.color = ?
0.159	IN  GEN ^.layer_011.shape.color = ?
0.159	IN  GEN ^.layer_01.shape.color = ?
0.159	IN  GEN ^.layer_0.shape.color = ?
0.159	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, green)
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 130.9 + 9029.1 = 9160.0
DL output with Mo: L = 86.0 + 5570.2 = 5656.2
DL input+output M: L = 216.9 + 14599.4 = 14816.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, green)
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 86.0 + 5570.2 = 5656.2
DL input+output M: L = 203.4 + 5570.2 = 5773.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color blue and mask Border at (10,0)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color green and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color green and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color green and mask Border at (10,0)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
   (523.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color blue and mask Border at (10,0)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _01: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color blue and mask Border at (10,0)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (12,10)
  _01: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _011: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _0111: a rectangle with size (4,3) and color blue and mask Border at (10,0)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
! 45 wrong pixels (generated / expected)

TRAIN 810b9b61.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (3,4)
  _01: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (3,4)
  _01: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (3,4)
  _01: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 810b9b61.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,1) and color blue and mask Full at (6,1)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask Border at (2,1)
  _01: a rectangle with size (3,1) and color blue and mask Full at (6,1)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,0)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,1) and color blue and mask Full at (6,1)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 810b9b61.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask Border at (7,4)
  _01: a rectangle with size (5,5) and color blue and mask xxxxx|x...x|x...x|x...x|xx.xx at (0,7)
  _011: a rectangle with size (3,4) and color blue and mask Border at (1,1)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,1)
diff: 
delta: (8,1)=1  (8,11)=1 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (1,1)
  _01: a rectangle with size (5,5) and color blue and mask xxxxx|x...x|x...x|x...x|xx.xx at (0,7)
  _011: a rectangle with size (4,5) and color blue and mask Border at (7,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,1)
diff: 
delta: (8,1)=1  (8,11)=1 
! 33 wrong pixels (generated / expected)

TEST 810b9b61.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.1 sec (21.1 sec/task)
bits-train-error = 5570.2 bits (5570.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-204] Checking task 82819916.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20659.7 = 20672.3
DL output with Mo: L = 12.6 + 36583.6 = 36596.2
DL input+output M: L = 25.2 + 57243.3 = 57268.5

# learning a model for train pairs
2.000	
1.740	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.559	OUT ADD ^.layer_0 = ^.layer_0
1.413	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.276	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.176	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.102	OUT ADD ^.layer_010 = ^.layer_01
1.031	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.981	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.941	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.901	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.860	OUT ADD ^.layer_0100 = ^.layer_010
0.838	OUT ADD ^.layer_0110 = ^.layer_011
0.821	OUT ADD ^.layer_00 = ^.layer_0111.shape at (?,?)
0.800	OUT SPE ^.size = ^.size
0.793	IN  SPE ^.layer_0.shape.mask = Full
0.787	IN  SPE ^.layer_01.shape.mask = Full
0.781	IN  SPE ^.layer_011.shape.mask = Full
0.774	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.763	OUT SPE ^.layer_0111.pos = ^.layer_011.pos + projJ(^.layer_011.shape.size)
0.759	IN  SPE ^.color = black
0.755	OUT SPE ^.layer_011.pos.i = ^.layer_0111.pos.i
0.751	OUT SPE ^.layer_01.shape.size.i = 1
0.747	OUT SPE ^.layer_01.shape.mask = Full
0.744	OUT SPE ^.layer_011.shape.size.i = 1
0.740	OUT SPE ^.layer_011.shape.mask = Full
0.735	OUT SPE ^.layer_00.pos.i = ^.layer_0111.pos.i
0.731	OUT SPE ^.layer_0111.shape.size.i = 1
0.728	OUT SPE ^.layer_0111.shape.mask = Full
0.271	
0.271	IN  GEN ^.layer_011.shape.mask = ?
0.271	IN  GEN ^.layer_01.shape.mask = ?
0.271	IN  GEN ^.layer_0.shape.mask = ?
0.271	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0111.shape at (^.layer_0111.pos.i,?)
  _0: ^.layer_0
  _0100: ^.layer_010
  _010: ^.layer_01
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask Full at (^.layer_0111.pos.i,?)
  _0111: a rectangle with size (1,?) and color ? and mask Full at ^.layer_011.pos + projJ(^.layer_011.shape.size)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 123.4 + 9478.9 = 9602.3
DL output with Mo: L = 211.8 + 9419.2 = 9631.0
DL input+output M: L = 335.2 + 18898.1 = 19233.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0111.shape at (^.layer_0111.pos.i,?)
  _0: ^.layer_0
  _0100: ^.layer_010
  _010: ^.layer_01
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask Full at (^.layer_0111.pos.i,?)
  _0111: a rectangle with size (1,?) and color ? and mask Full at ^.layer_011.pos + projJ(^.layer_011.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 120.3 + 40.0 = 160.3
DL output with Mo: L = 211.8 + 9419.2 = 9631.0
DL input+output M: L = 332.1 + 9459.2 = 9791.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _010: a point with color yellow at (4,2)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2 
   (0.0 bits)
data: a background with size (10,8) and color black and layers
  _00: a point with color pink at (6,5)
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _0100: a point with color yellow at (4,2)
  _010: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (4,3)
  _0110: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _011: a rectangle with size (1,5) and color blue and mask Full at (6,3)
  _0111: a rectangle with size (1,1) and color pink and mask Full at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2  (4,5)=4 
   (169.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _010: a point with color yellow at (4,2)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _010: a point with color yellow at (4,2)
  _01: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _010: a point with color cyan at (4,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2  (4,1)=8 
! 17 wrong pixels (generated / expected)

TRAIN 82819916.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _010: a point with color blue at (1,6)
  _01: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _0111: a point with color red at (7,2)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (3,2)=1 
   (2.0 bits)
data: a background with size (10,8) and color black and layers
  _00: a point with color red at (7,4)
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _0100: a point with color blue at (1,6)
  _010: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _01: a rectangle with size (1,6) and color blue and mask Full at (3,2)
  _0110: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (7,3)
  _0111: a rectangle with size (1,6) and color red and mask Full at (7,2)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (3,3)=3  (3,5)=3 
   (248.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _010: a point with color blue at (1,6)
  _01: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _0111: a point with color blue at (3,2)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (7,2)=2 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _010: a point with color blue at (1,6)
  _01: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _0111: a point with color red at (7,2)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (3,2)=1 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _010: a point with color blue at (1,6)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _0111: a point with color blue at (3,2)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (7,2)=2 
! 18 wrong pixels (generated / expected)

TRAIN 82819916.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _0111: a point with color cyan at (6,0)
diff: 
delta: (1,6)=4  (4,1)=3  (6,1)=2  (8,0)=6  (8,1)=5#
   (2.0 bits)
data: a background with size (12,8) and color black and layers
  _00: a point with color cyan at (6,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _0100: a point with color yellow at (1,1)
  _010: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (8,1)
  _0110: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _011: a rectangle with size (1,6) and color red and mask Full at (6,1)
  _0111: a rectangle with size (1,6) and color green and mask Full at (4,1)
diff: 
delta: (1,6)=4  (4,2)=2  (4,5)=2  (4,7)=2  (6,2)=8  (6,5)=8  (6,7)=8  (8,0)=6  (8,2)=6  (8,5)=6  (8,7)=6 
   (476.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _0111: a point with color green at (4,1)
diff: 
delta: (1,6)=4  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _0111: a point with color cyan at (6,0)
diff: 
delta: (1,6)=4  (4,1)=3  (6,1)=2  (8,0)=6  (8,1)=5#
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color green and mask Full at (4,1)
  _0111: a point with color red at (4,0)
diff: 
delta: (1,6)=4  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 25 wrong pixels (generated / expected)

TRAIN 82819916.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _010: a point with color yellow at (1,6)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a point with color red at (4,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,8) and color black and layers
  _00: a point with color red at (4,6)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _0100: a point with color yellow at (1,6)
  _010: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (4,7)
  _0111: a rectangle with size (1,3) and color red and mask Full at (4,2)
diff: 
delta:
   (47.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _010: a point with color yellow at (1,6)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a point with color red at (4,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (1,2)
  _010: a point with color green at (1,7)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a point with color red at (4,2)
diff: 
delta: (1,5)=3 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (1,2)
  _010: a point with color green at (1,7)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _0111: a point with color red at (4,2)
diff: 
delta: (1,5)=3 
! 10 wrong pixels (generated / expected)

TRAIN 82819916.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (1,2)
  _010: a point with color red at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color green at (3,2)
diff: 
delta: (1,1)=2  (1,3)=2  (1,5)=2  (1,8)=2  (6,2)=4  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (1,2)
  _010: a point with color red at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color yellow at (6,2)
diff: 
delta: (1,1)=2  (1,3)=2  (1,5)=2  (1,8)=2  (3,2)=3  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 43 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (1,2)
  _010: a point with color red at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color pink and mask Full at (9,0)
  _0111: a point with color green at (3,2)
diff: 
delta: (1,1)=2  (1,3)=2  (1,5)=2  (1,8)=2  (6,0)=1  (6,1)=1  (6,2)=4  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 43 wrong pixels (generated / expected)

TEST 82819916.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 9419.2 bits (9419.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-203] Checking task 83302e8f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 185974.6 = 185987.3
DL output with Mo: L = 12.6 + 381746.7 = 381759.3
DL input+output M: L = 25.2 + 567721.3 = 567746.6

# learning a model for train pairs
2.000	
1.217	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.795	OUT ADD ^.layer_0 = ^.layer_0
0.499	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.365	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.308	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.260	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.229	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.200	OUT ADD ^.layer_010 = ^.layer_01
0.180	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.052	
0.052	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 23734.2 = 23823.5
DL output with Mo: L = 125.7 + 19710.1 = 19835.8
DL input+output M: L = 215.0 + 43444.3 = 43659.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 125.7 + 19710.1 = 19835.8
DL input+output M: L = 190.0 + 19710.1 = 19900.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
diff: 
delta: (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
   (0.0 bits)
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
  _01: a rectangle with size (4,24) and color green and mask Full at (20,0)
  _011: a rectangle with size (4,24) and color green and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color green and mask Full at (15,0)
  _01111: a rectangle with size (4,4) and color green and mask Full at (15,15)
diff: 
delta: (0,15)=4  (0,16)=4  (0,17)=4  (0,18)=4  (1,15)=4  (1,16)=4  (1,17)=4  (1,18)=4  (2,15)=4  (2,16)=4  (2,17)=4  (2,18)=4  (3,15)=4  (3,16)=4  (3,17)=4  (3,18)=4  (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
   (1355.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
diff: 
delta: (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,8) and color cyan and mask ....x...|xxxxxxxx|....x...|....x... at (8,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24
>> Trial 3
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (9,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (8,4)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24

TRAIN 83302e8f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
diff: 
delta: (11,25)=1  (11,26)=1  (11,27)=1  (11,28)=1  (17,26)=1  (17,27)=1  (17,28)=1 
   (0.0 bits)
data: a background with size (29,29) and color yellow and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _010: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
  _01: a rectangle with size (5,29) and color green and mask Full at (0,0)
  _011: a rectangle with size (5,23) and color green and mask Full at (24,6)
  _0111: a rectangle with size (5,5) and color green and mask Full at (18,6)
  _01111: a rectangle with size (1,4) and color blue and mask Full at (11,25)
diff: 
delta: (17,26)=1  (17,27)=1  (17,28)=1 
   (321.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
diff: 
delta: (11,25)=1  (11,26)=1  (11,27)=1  (11,28)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (1,29) and color blue and mask Full at (11,0)
diff: 
delta: (9,5)=1  (10,5)=1  (11,8)=0  (11,24)=0  (12,5)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29

TRAIN 83302e8f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
   (0.0 bits)
data: a background with size (19,19) and color yellow and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _010: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
  _01: a rectangle with size (4,9) and color green and mask Full at (10,0)
  _011: a rectangle with size (9,4) and color green and mask Full at (0,15)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (16,14)
  _01111: a rectangle with size (2,1) and color brown and mask Full at (0,4)
diff: 
delta: (0,9)=9# (1,9)=9# (18,4)=9#
   (294.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (1,7) and color brown and mask Full at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (5,4)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (1,19) and color brown and mask Full at (4,0)
  _01: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (4,7)=0  (5,4)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19

TRAIN 83302e8f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|xxxxxxxx|x...x...|x...x...|x...x... at (21,19)
diff: 
delta: (0,3)=5# (0,7)=5# (1,3)=5# (1,7)=5# (2,3)=5# (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (15,0)=5# (15,1)=5# (25,11)=5# (26,3)=5# (26,11)=5#
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask ...x..|...x..|...x..|xxxxxx at (0,0)
diff: 
delta: (0,7)=5# (1,7)=5# (15,0)=5# (15,1)=5# (21,19)=5# (22,19)=5# (23,19)=5# (23,20)=5# (23,21)=5# (23,22)=5# (23,23)=5# (23,24)=5# (23,25)=5# (23,26)=5# (24,19)=5# (24,23)=5# (25,11)=5# (25,19)=5# (25,23)=5# (26,3)=5# (26,11)=5# (26,19)=5# (26,23)=5#
! size mismatch, 10x10 instead of 27x27

TEST 83302e8f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 19710.1 bits (19710.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-202] Checking task 834ec97d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1673.9 = 1686.5
DL output with Mo: L = 12.6 + 14533.9 = 14546.5
DL input+output M: L = 25.2 + 16207.8 = 16233.0

# learning a model for train pairs
2.000	
1.614	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.449	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.282	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.238	IN  SPE ^.color = black
1.205	OUT SPE ^.size = ^.size
1.186	OUT SPE ^.layer_0.pos = projJ(^.layer_0.pos)
1.174	OUT SPE ^.layer_0.shape.color = yellow
1.167	OUT SPE ^.layer_0.shape.size.j = 1
1.161	OUT SPE ^.layer_0.shape.mask = Full
1.154	OUT SPE ^.layer_01.shape.size.j = 1
1.147	OUT SPE ^.layer_01.shape.mask = Full
1.142	OUT SPE ^.color = black
0.589	
0.589	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color yellow and mask Full at projJ(^.layer_0.pos)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 932.6 = 962.2
DL output with Mo: L = 71.6 + 8242.3 = 8313.9
DL input+output M: L = 101.3 + 9174.9 = 9276.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color yellow and mask Full at projJ(^.layer_0.pos)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 71.6 + 8242.3 = 8313.9
DL input+output M: L = 101.2 + 8242.3 = 8343.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (20.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 834ec97d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,4)=4  (1,4)=4  (2,4)=4  (3,2)=6 
   (173.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (2,2)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 834ec97d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color brown at (4,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,4)=4  (0,6)=4  (0,8)=4  (1,4)=4  (1,6)=4  (1,8)=4  (2,4)=4  (2,6)=4  (2,8)=4  (3,4)=4  (3,6)=4  (3,8)=4  (4,4)=4  (4,6)=4  (4,8)=4  (5,2)=9#
   (630.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color brown at (4,2)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 834ec97d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (3,5)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TEST 834ec97d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 8242.3 bits (8242.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-201] Checking task 8403a5d5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1847.2 = 1859.8
DL output with Mo: L = 12.6 + 43815.7 = 43828.3
DL input+output M: L = 25.2 + 45662.9 = 45688.1

# learning a model for train pairs
2.000	
1.650	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.387	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.971	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.823	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.783	IN  SPE ^.color = black
0.769	OUT SPE ^.size = ^.size
0.761	OUT SPE ^.layer_0.shape.size = projI(^.size) + (0, 1)
0.757	OUT SPE ^.layer_0.pos.i = '0
0.753	OUT SPE ^.layer_01.pos.i = '0
0.749	OUT SPE ^.layer_011.pos.i = '0
0.746	OUT SPE ^.layer_0111.pos.j = ^.layer_0.pos.j + 1
0.744	OUT SPE ^.layer_0.shape.mask = Full
0.741	OUT SPE ^.layer_01.shape.size.j = 1
0.739	OUT SPE ^.layer_01.shape.mask = Full
0.737	OUT SPE ^.layer_011.shape.size.j = 1
0.735	OUT SPE ^.layer_011.shape.mask = Full
0.732	OUT SPE ^.layer_0111.shape.size.j = 1
0.730	OUT SPE ^.layer_0111.shape.mask = Full
0.728	OUT SPE ^.layer_01111.shape.size.j = 1
0.726	OUT SPE ^.layer_01111.shape.mask = Full
0.131	
0.131	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size projI(^.size) + (0, 1) and color ? and mask Full at ('0,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at ('0,?)
  _011: a rectangle with size (?,1) and color ? and mask Full at ('0,?)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,^.layer_0.pos.j + 1)
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1105.9 = 1135.6
DL output with Mo: L = 197.8 + 4845.0 = 5042.8
DL input+output M: L = 227.5 + 5950.9 = 6178.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size projI(^.size) + (0, 1) and color ? and mask Full at ('0,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at ('0,?)
  _011: a rectangle with size (?,1) and color ? and mask Full at ('0,?)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,^.layer_0.pos.j + 1)
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 197.8 + 4845.0 = 5042.8
DL input+output M: L = 227.4 + 4845.0 = 5072.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color red at (9,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,1) and color black and mask Full at (0,0)
  _01: a rectangle with size (9,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (9,1) and color black and mask Full at (0,8)
  _0111: a rectangle with size (9,1) and color black and mask Full at (1,2)
  _01111: a rectangle with size (9,1) and color black and mask Full at (1,6)
diff: 
delta: (0,2)=5# (0,6)=5# (9,4)=5# (9,8)=5#
   (263.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (9,1)
diff: 
delta:
! 65 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color green at (9,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,7)
  _011: a rectangle with size (10,1) and color green and mask Full at (0,9)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,6)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (9,8)
diff: 
delta:
   (91.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (9,5)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (9,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color yellow and mask Full at (0,4)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,6)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,5)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta: (9,7)=5#
   (130.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (9,4)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (9,2)
diff: 
delta:
! 55 wrong pixels (generated / expected)

TEST 8403a5d5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.7 sec (11.7 sec/task)
bits-train-error = 4845.0 bits (4845.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-200] Checking task 846bdb03.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35082.6 = 35095.2
DL output with Mo: L = 12.6 + 33096.6 = 33109.2
DL input+output M: L = 25.2 + 68179.3 = 68204.5

# learning a model for train pairs
2.000	
1.618	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.314	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.083	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.926	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.693	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.589	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.539	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.462	OUT SPE ^.layer_0111.shape = ^.layer_01111.shape
0.437	OUT SPE ^.layer_011.shape = ^.layer_01111.shape
0.421	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + (0, 1)
0.405	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size + (0, 1)
0.393	OUT SPE ^.layer_011.pos = '(0, 0)
0.381	OUT SPE ^.layer_0.pos = '(1, 0)
0.370	OUT SPE ^.layer_0111.pos = '(0, 0) + ^.layer_0111.pos - ^.layer_011.pos
0.361	OUT SPE ^.size.i = ^.layer_01111.shape.size.i
0.351	OUT SPE ^.size = ^.layer_01111.shape.size + ^.layer_0111.pos - ^.layer_011.pos
0.345	OUT SPE ^.layer_01.shape.color = ^.layer_0111.shape.color
0.339	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.332	IN  SPE ^.layer_01111.shape.color = yellow
0.326	IN  SPE ^.layer_011111.shape.color = yellow
0.320	OUT SPE ^.layer_01.pos.i = 1
0.315	OUT SPE ^.layer_01.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j)
0.311	IN  SPE ^.layer_011.shape.mask = Full
0.307	IN  SPE ^.layer_0111.shape.mask = Full
0.304	IN  SPE ^.layer_01111.shape.mask = Full
0.300	IN  SPE ^.layer_011111.shape.mask = Full
0.297	OUT SPE ^.color = black
0.294	IN  SPE ^.color = black
0.053	
0.053	IN  DEL ^.layer_011111
0.053	IN  GEN ^.layer_01111.shape.color = ?
0.052	IN  GEN ^.layer_01111.shape.mask = ?
0.052	IN  GEN ^.layer_0111.shape.mask = ?
0.052	IN  GEN ^.layer_011.shape.mask = ?
0.052	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01111.shape.size + ^.layer_0111.pos - ^.layer_011.pos and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (0, 1) and color ^.layer_011.shape.color and mask ? at '(1, 0)
  _01: a rectangle with size ^.layer_0.shape.size + (0, 1) and color ^.layer_0111.shape.color and mask ? at (1,span(^.layer_0.pos.j, ^.layer_01.pos.j))
  _011: ^.layer_01111.shape at '(0, 0)
  _0111: ^.layer_01111.shape at '(0, 0) + ^.layer_0111.pos - ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 174.3 + 8446.2 = 8620.6
DL output with Mo: L = 290.2 + 1314.7 = 1604.9
DL input+output M: L = 464.5 + 9760.9 = 10225.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01111.shape.size + ^.layer_0111.pos - ^.layer_011.pos and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (0, 1) and color ^.layer_011.shape.color and mask ? at '(1, 0)
  _01: a rectangle with size ^.layer_0.shape.size + (0, 1) and color ^.layer_0111.shape.color and mask ? at (1,span(^.layer_0.pos.j, ^.layer_01.pos.j))
  _011: ^.layer_01111.shape at '(0, 0)
  _0111: ^.layer_01111.shape at '(0, 0) + ^.layer_0111.pos - ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 290.2 + 1314.7 = 1604.9
DL input+output M: L = 429.1 + 1314.7 = 1743.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
diff: 
delta: (7,12)=4  (12,12)=4 
   (0.0 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxx.|x.x.|x.xx|x..x at (1,0)
  _01: a rectangle with size (4,4) and color blue and mask x..x|xxxx|x..x|...x at (1,4)
  _011: a rectangle with size (6,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (0,7)
diff: 
delta:
   (43.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
diff: 
delta: (7,12)=4  (12,12)=4 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
  _01111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
diff: 
delta: (7,12)=4  (12,12)=4 
! size mismatch, 3x1 instead of 6x8

TRAIN 846bdb03.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (5,1) and color green and mask Full at (7,8)
  _01111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
diff: 
delta: (6,8)=4  (12,8)=4 
   (0.0 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask xx.x|xxxx|xx.x|xxxx|xx.x at (1,0)
  _01: a rectangle with size (5,4) and color green and mask .x.x|xxxx|.x.x|xx.x|...x at (1,4)
  _011: a rectangle with size (7,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (7,1) and color yellow and mask Full at (0,7)
diff: 
delta:
   (44.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (5,1) and color green and mask Full at (7,8)
  _01111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
diff: 
delta: (6,8)=4  (12,8)=4 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
  _01111: a rectangle with size (5,1) and color green and mask Full at (7,8)
diff: 
delta: (6,8)=4  (12,8)=4 
! size mismatch, 4x1 instead of 7x8

TRAIN 846bdb03.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
diff: 
delta: (1,7)=4  (4,7)=4 
   (0.0 bits)
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask x.x|xxx at (1,0)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (1,3)
  _011: a rectangle with size (4,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (4,1) and color yellow and mask Full at (0,5)
diff: 
delta:
   (19.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
diff: 
delta: (1,7)=4  (4,7)=4 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
diff: 
delta: (1,7)=4  (4,7)=4 
! size mismatch, 1x1 instead of 4x6

TRAIN 846bdb03.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (3,1) and color green and mask Full at (2,10)
  _01111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
diff: 
delta: (1,10)=4  (5,10)=4 
   (0.0 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|xxx|x.x at (1,0)
  _01: a rectangle with size (3,3) and color green and mask .xx|xxx|.xx at (1,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (0,5)
diff: 
delta:
   (23.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (3,1) and color green and mask Full at (2,10)
  _01111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
diff: 
delta: (1,10)=4  (5,10)=4 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
  _01111: a rectangle with size (3,1) and color green and mask Full at (2,10)
diff: 
delta: (1,10)=4  (5,10)=4 
! size mismatch, 2x1 instead of 5x6

TRAIN 846bdb03.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask x.x|xxx|x..|x.. at (9,1)
  _01: a rectangle with size (4,3) and color red and mask x..|xxx|.x.|.xx at (9,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _0111: a rectangle with size (4,1) and color cyan and mask Full at (2,8)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (1,1)
diff: 
delta: (1,8)=4  (6,8)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask x.x|xxx|x..|x.. at (9,1)
  _01: a rectangle with size (4,3) and color red and mask x..|xxx|.x.|.xx at (9,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (1,1)
  _01111: a rectangle with size (4,1) and color cyan and mask Full at (2,8)
diff: 
delta: (1,8)=4  (6,8)=4 
! size mismatch, 3x1 instead of 6x8

TEST 846bdb03.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.3 sec (30.3 sec/task)
bits-train-error = 1314.7 bits (1314.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-199] Checking task 855e0971.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 183525.2 = 183537.8
DL output with Mo: L = 12.6 + 196191.6 = 196204.2
DL input+output M: L = 25.2 + 379716.8 = 379742.0

# learning a model for train pairs
2.000	
1.331	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.738	OUT ADD ^.layer_0 = ^.layer_0
0.455	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.181	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.142	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.138	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.133	OUT SPE ^.size = ^.size
0.131	OUT SPE ^.color = ^.color
0.130	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i
0.129	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.128	IN  SPE ^.layer_00.shape.color = black
0.126	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.125	OUT SPE ^.layer_00.shape.color = ^.layer_00.shape.color
0.125	IN  SPE ^.layer_0.shape.mask = Full
0.124	IN  SPE ^.layer_01.shape.mask = Full
0.123	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.i / '2
0.122	OUT SPE ^.layer_00.shape.mask = Full
0.121	OUT SPE ^.layer_01.shape.mask = Full
0.082	
0.081	IN  GEN ^.layer_00.shape.color = ?
0.081	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: a rectangle with size (?,?) and color ^.layer_00.shape.color and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color black at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 85.3 + 7358.1 = 7443.4
DL output with Mo: L = 99.0 + 15779.9 = 15879.0
DL input+output M: L = 184.3 + 23138.0 = 23322.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: a rectangle with size (?,?) and color ^.layer_00.shape.color and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.0 + 20.0 = 101.0
DL output with Mo: L = 99.0 + 15779.9 = 15879.0
DL input+output M: L = 180.0 + 15799.9 = 15979.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,19) and color yellow and layers
  _00: a point with color black at (3,13)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (5,4)=0  (12,9)=0 
   (0.0 bits)
data: a background with size (15,19) and color yellow and layers
  _00: a rectangle with size (7,1) and color black and mask Full at (2,4)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (2,13)=0  (3,13)=0  (4,13)=0  (5,13)=0  (6,13)=0  (7,13)=0  (8,13)=0  (9,9)=0  (10,9)=0  (11,9)=0  (12,9)=0  (13,9)=0  (14,9)=0 
   (547.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color yellow and layers
  _00: a point with color black at (3,13)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (5,4)=0  (12,9)=0 
! 58 wrong pixels (generated / expected)

TRAIN 855e0971.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (3,2)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (11,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,13) and color blue and layers
  _00: a rectangle with size (1,5) and color black and mask Full at (3,0)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,8) and color black and mask Full at (11,5)
diff: 
delta:
   (32.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (3,2)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (11,8)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (3,2)
  _0: a rectangle with size (1,1) and color black and mask Full at (11,8)
  _01: a rectangle with size (14,5) and color red and mask Full at (0,0)
diff: 
delta:
! 55 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (11,8)
  _0: a rectangle with size (1,1) and color black and mask Full at (3,2)
  _01: a rectangle with size (14,5) and color red and mask Full at (0,0)
diff: 
delta:
! 55 wrong pixels (generated / expected)

TRAIN 855e0971.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,15) and color red and layers
  _00: a point with color black at (2,3)
  _0: a rectangle with size (3,15) and color green and mask Full at (10,0)
  _01: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
diff: 
delta: (3,11)=0  (7,5)=0  (11,7)=0 
   (2.0 bits)
data: a background with size (13,15) and color red and layers
  _00: a rectangle with size (5,1) and color black and mask Full at (0,3)
  _0: a rectangle with size (3,15) and color green and mask Full at (10,0)
  _01: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
diff: 
delta: (0,11)=0  (1,11)=0  (2,11)=0  (3,11)=0  (4,11)=0  (5,5)=0  (6,5)=0  (7,5)=0  (8,5)=0  (9,5)=0  (10,7)=0  (11,7)=0  (12,7)=0 
   (538.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color red and layers
  _00: a point with color black at (2,3)
  _0: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,15) and color green and mask Full at (10,0)
diff: 
delta: (3,11)=0  (7,5)=0  (11,7)=0 
! 58 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color red and layers
  _00: a point with color black at (2,3)
  _0: a rectangle with size (3,15) and color green and mask Full at (10,0)
  _01: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
diff: 
delta: (3,11)=0  (7,5)=0  (11,7)=0 
! 77 wrong pixels (generated / expected)

TRAIN 855e0971.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (14,15) and color yellow and layers
  _00: a point with color black at (2,12)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (6,6)=0  (12,10)=0 
   (0.0 bits)
data: a background with size (14,15) and color yellow and layers
  _00: a rectangle with size (1,6) and color black and mask Full at (2,9)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (12,9)=0  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0 
   (459.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color yellow and layers
  _00: a point with color black at (2,12)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (6,6)=0  (12,10)=0 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color yellow and layers
  _00: a point with color black at (2,12)
  _0: a rectangle with size (14,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (14,5) and color grey and mask Full at (0,4)
diff: 
delta: (6,6)=0  (12,10)=0 
! 86 wrong pixels (generated / expected)

TRAIN 855e0971.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color yellow and layers
  _00: a point with color black at (0,4)
  _0: a rectangle with size (4,15) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,15) and color red and mask Full at (13,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 121 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,15) and color yellow and layers
  _00: a point with color black at (0,4)
  _0: a rectangle with size (4,15) and color red and mask Full at (13,0)
  _01: a rectangle with size (4,15) and color blue and mask Full at (4,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 121 wrong pixels (generated / expected)

TEST 855e0971.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 36.7 sec (36.7 sec/task)
bits-train-error = 15779.9 bits (15779.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-198] Checking task 85c4e7cd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 81941.8 = 81954.4
DL output with Mo: L = 12.6 + 81941.8 = 81954.4
DL input+output M: L = 25.2 + 163883.6 = 163908.8

# learning a model for train pairs
2.000	
1.584	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.168	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.893	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.618	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.479	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.339	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.282	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.224	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.113	
0.113	IN  DEL ^.layer_0111
0.113	IN  DEL ^.layer_011
0.112	IN  DEL ^.layer_01
0.112	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 9063.8 = 9177.9
DL output with Mo: L = 114.1 + 9063.8 = 9177.9
DL input+output M: L = 228.3 + 18127.5 = 18355.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 9063.8 = 9177.9
DL input+output M: L = 126.7 + 9063.8 = 9190.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color yellow and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (2,1)=2  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=2  (3,1)=2  (3,2)=1  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=1  (3,10)=2  (4,1)=2  (4,2)=1  (4,3)=3  (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=3  (4,9)=1  (4,10)=2  (5,1)=2  (5,2)=1  (5,3)=3  (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (5,8)=3  (5,9)=1  (5,10)=2  (6,1)=2  (6,2)=1  (6,3)=3  (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (6,8)=3  (6,9)=1  (6,10)=2  (7,1)=2  (7,2)=1  (7,3)=3  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=3  (7,9)=1  (7,10)=2  (8,1)=2  (8,2)=1  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=2  (9,1)=2  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=2  (10,1)=2  (10,2)=2  (10,3)=2  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2 
   (0.0 bits)
data: a background with size (12,12) and color cyan and layers
  _0: a rectangle with size (10,10) and color grey and mask Border at (1,1)
  _01: a rectangle with size (8,8) and color green and mask Border at (2,2)
  _011: a rectangle with size (6,6) and color blue and mask Border at (3,3)
  _0111: a rectangle with size (4,4) and color red and mask Full at (4,4)
diff: 
delta: (5,5)=4  (5,6)=4  (6,5)=4  (6,6)=4 
   (345.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color yellow and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (2,1)=2  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (2,10)=2  (3,1)=2  (3,2)=1  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=1  (3,10)=2  (4,1)=2  (4,2)=1  (4,3)=3  (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=3  (4,9)=1  (4,10)=2  (5,1)=2  (5,2)=1  (5,3)=3  (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (5,8)=3  (5,9)=1  (5,10)=2  (6,1)=2  (6,2)=1  (6,3)=3  (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (6,8)=3  (6,9)=1  (6,10)=2  (7,1)=2  (7,2)=1  (7,3)=3  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=3  (7,9)=1  (7,10)=2  (8,1)=2  (8,2)=1  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=2  (9,1)=2  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=2  (10,1)=2  (10,2)=2  (10,3)=2  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2 
! size mismatch, 10x10 instead of 12x12

TRAIN 85c4e7cd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color red and layers
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (2,1)=1  (2,2)=6  (2,3)=6  (2,4)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1 
   (0.0 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _01: a rectangle with size (1,4) and color blue and mask Full at (4,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,2)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (1,1)
diff: 
delta:
   (147.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color red and layers
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (2,1)=1  (2,2)=6  (2,3)=6  (2,4)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1 
! size mismatch, 10x10 instead of 6x6

TRAIN 85c4e7cd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,8) and color cyan and layers
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (2,1)=1  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=1  (3,1)=1  (3,2)=2  (3,3)=4  (3,4)=4  (3,5)=2  (3,6)=1  (4,1)=1  (4,2)=2  (4,3)=4  (4,4)=4  (4,5)=2  (4,6)=1  (5,1)=1  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=1  (6,1)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
   (0.0 bits)
data: a background with size (8,8) and color yellow and layers
  _0: a rectangle with size (6,6) and color red and mask Border at (1,1)
  _01: a rectangle with size (1,4) and color blue and mask Full at (2,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (2,2)
diff: 
delta: (5,3)=1  (5,4)=1 
   (237.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (2,1)=1  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=1  (3,1)=1  (3,2)=2  (3,3)=4  (3,4)=4  (3,5)=2  (3,6)=1  (4,1)=1  (4,2)=2  (4,3)=4  (4,4)=4  (4,5)=2  (4,6)=1  (5,1)=1  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=1  (6,1)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
! size mismatch, 10x10 instead of 8x8

TRAIN 85c4e7cd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (10,10) and color orange and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (2,1)=2  (2,2)=4  (2,3)=4  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (2,8)=2  (3,1)=2  (3,2)=4  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=4  (3,8)=2  (4,1)=2  (4,2)=4  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=1  (4,7)=4  (4,8)=2  (5,1)=2  (5,2)=4  (5,3)=1  (5,4)=3  (5,5)=3  (5,6)=1  (5,7)=4  (5,8)=2  (6,1)=2  (6,2)=4  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=4  (6,8)=2  (7,1)=2  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=2  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2 
   (0.0 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (1,1)
  _01: a rectangle with size (6,6) and color yellow and mask Border at (2,2)
  _011: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _0111: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
   (175.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color orange and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (2,1)=2  (2,2)=4  (2,3)=4  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (2,8)=2  (3,1)=2  (3,2)=4  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=4  (3,8)=2  (4,1)=2  (4,2)=4  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=1  (4,7)=4  (4,8)=2  (5,1)=2  (5,2)=4  (5,3)=1  (5,4)=3  (5,5)=3  (5,6)=1  (5,7)=4  (5,8)=2  (6,1)=2  (6,2)=4  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=4  (6,8)=2  (7,1)=2  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=2  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2 
! 100 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color cyan and layers
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=2  (1,12)=2  (2,1)=2  (2,2)=4  (2,3)=4  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (2,8)=4  (2,9)=4  (2,10)=4  (2,11)=4  (2,12)=2  (3,1)=2  (3,2)=4  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=4  (3,12)=2  (4,1)=2  (4,2)=4  (4,3)=3  (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7# (4,8)=7# (4,9)=7# (4,10)=3  (4,11)=4  (4,12)=2  (5,1)=2  (5,2)=4  (5,3)=3  (5,4)=7# (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=3  (5,11)=4  (5,12)=2  (6,1)=2  (6,2)=4  (6,3)=3  (6,4)=7# (6,5)=6  (6,6)=5# (6,7)=5# (6,8)=6  (6,9)=7# (6,10)=3  (6,11)=4  (6,12)=2  (7,1)=2  (7,2)=4  (7,3)=3  (7,4)=7# (7,5)=6  (7,6)=5# (7,7)=5# (7,8)=6  (7,9)=7# (7,10)=3  (7,11)=4  (7,12)=2  (8,1)=2  (8,2)=4  (8,3)=3  (8,4)=7# (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=7# (8,10)=3  (8,11)=4  (8,12)=2  (9,1)=2  (9,2)=4  (9,3)=3  (9,4)=7# (9,5)=7# (9,6)=7# (9,7)=7# (9,8)=7# (9,9)=7# (9,10)=3  (9,11)=4  (9,12)=2  (10,1)=2  (10,2)=4  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,11)=4  (10,12)=2  (11,1)=2  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=2  (12,1)=2  (12,2)=2  (12,3)=2  (12,4)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (12,12)=2 
! size mismatch, 10x10 instead of 14x14

TEST 85c4e7cd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 9063.8 bits (9063.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-197] Checking task 868de0fa.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 95082.2 = 95094.9
DL output with Mo: L = 12.6 + 162915.0 = 162927.6
DL input+output M: L = 25.2 + 257997.3 = 258022.5

# learning a model for train pairs
2.000	
1.554	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.238	OUT ADD ^.layer_0 = ^.layer_0
1.023	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.641	OUT ADD ^.layer_011 = ^.layer_01
0.523	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	OUT SPE ^.size = ^.size
0.513	IN  SPE ^.layer_0.shape.color = blue
0.511	IN  SPE ^.layer_01.shape.color = blue
0.508	IN  SPE ^.layer_01.shape.mask = Border
0.506	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j + 1
0.505	OUT SPE ^.layer_01.shape.color = orange
0.503	IN  SPE ^.color = black
0.502	OUT SPE ^.layer_01.shape.mask = Full
0.501	OUT SPE ^.layer_0111.shape.mask = Full
0.500	OUT SPE ^.color = black
0.217	
0.217	IN  GEN ^.layer_01.shape.mask = ?
0.217	IN  GEN ^.layer_01.shape.color = ?
0.217	IN  GEN ^.layer_0.shape.color = ?
0.217	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color orange and mask Full at (?,^.layer_0.pos.j + 1)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Border at (?,?)

DL input  with Mi: L = 74.3 + 26959.5 = 27033.8
DL output with Mo: L = 95.8 + 35127.9 = 35223.7
DL input+output M: L = 170.1 + 62087.4 = 62257.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color orange and mask Full at (?,^.layer_0.pos.j + 1)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 95.8 + 35127.9 = 35223.7
DL input+output M: L = 160.0 + 35167.9 = 35327.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _01: a rectangle with size (4,4) and color blue and mask Border at (0,0)
diff: 
delta: (2,6)=1  (2,7)=1  (2,8)=1  (3,6)=1  (3,8)=1  (4,6)=1  (4,7)=1  (4,8)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,1)
  _011: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (2,6)
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,7)=7#
   (239.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _01: a rectangle with size (4,4) and color blue and mask Border at (0,0)
diff: 
delta: (2,6)=1  (2,7)=1  (2,8)=1  (3,6)=1  (3,8)=1  (4,6)=1  (4,7)=1  (4,8)=1 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _01: a rectangle with size (5,5) and color blue and mask Border at (5,0)
diff: 
delta: (2,6)=1  (2,7)=1  (2,8)=1  (3,6)=1  (3,8)=1  (4,6)=1  (4,7)=1  (4,8)=1 
! 22 wrong pixels (generated / expected)

TRAIN 868de0fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color blue and mask Border at (0,4)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _011: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _0111: a rectangle with size (4,4) and color red and mask Full at (1,5)
diff: 
delta:
   (43.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (0,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color blue and mask Border at (0,4)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 868de0fa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _01: a rectangle with size (8,8) and color blue and mask Border at (12,12)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,4)=1  (2,6)=1  (2,9)=1  (3,0)=1  (3,4)=1  (3,6)=1  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,17)=1  (5,12)=1  (5,17)=1  (6,12)=1  (6,17)=1  (7,12)=1  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1 
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _01: a rectangle with size (5,5) and color orange and mask Full at (10,3)
  _011: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _0111: a rectangle with size (6,6) and color red and mask Full at (13,13)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,1)=7# (1,2)=7# (1,3)=7# (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=1  (2,6)=1  (2,7)=2  (2,8)=2  (2,9)=1  (3,0)=1  (3,1)=7# (3,2)=7# (3,3)=7# (3,4)=1  (3,6)=1  (3,7)=2  (3,8)=2  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,13)=2  (4,14)=2  (4,15)=2  (4,16)=2  (4,17)=1  (5,12)=1  (5,13)=2  (5,14)=2  (5,15)=2  (5,16)=2  (5,17)=1  (6,12)=1  (6,13)=2  (6,14)=2  (6,15)=2  (6,16)=2  (6,17)=1  (7,12)=1  (7,13)=2  (7,14)=2  (7,15)=2  (7,16)=2  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1 
   (3088.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _01: a rectangle with size (7,7) and color blue and mask Border at (9,2)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,4)=1  (2,6)=1  (2,9)=1  (3,0)=1  (3,4)=1  (3,6)=1  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,17)=1  (5,12)=1  (5,17)=1  (6,12)=1  (6,17)=1  (7,12)=1  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1 
! 142 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _01: a rectangle with size (8,8) and color blue and mask Border at (12,12)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,4)=1  (2,6)=1  (2,9)=1  (3,0)=1  (3,4)=1  (3,6)=1  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,17)=1  (5,12)=1  (5,17)=1  (6,12)=1  (6,17)=1  (7,12)=1  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1 
! 137 wrong pixels (generated / expected)

TRAIN 868de0fa.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (7,1)
  _011: a rectangle with size (3,3) and color blue and mask Border at (1,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,6)
diff: 
delta: (2,2)=7#
   (86.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (1,1)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (1,1)
  _01: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 868de0fa.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _01: a rectangle with size (6,6) and color blue and mask Border at (9,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _01: a rectangle with size (5,5) and color orange and mask Full at (2,2)
  _011: a rectangle with size (6,6) and color blue and mask Border at (9,6)
  _0111: a rectangle with size (4,4) and color red and mask Full at (10,7)
diff: 
delta:
   (54.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _01: a rectangle with size (6,6) and color blue and mask Border at (9,6)
diff: 
delta:
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (9,6)
  _01: a rectangle with size (7,7) and color blue and mask Border at (1,1)
diff: 
delta:
! 48 wrong pixels (generated / expected)

TRAIN 868de0fa.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask Border at (7,10)
  _01: a rectangle with size (8,8) and color blue and mask Border at (2,1)
diff: 
delta: (0,12)=1  (0,13)=1  (0,14)=1  (0,15)=1  (0,16)=1  (1,12)=1  (1,16)=1  (2,12)=1  (2,16)=1  (3,12)=1  (3,16)=1  (4,12)=1  (4,13)=1  (4,14)=1  (4,15)=1  (4,16)=1  (11,1)=1  (11,2)=1  (11,3)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,7)=1  (12,1)=1  (12,7)=1  (13,1)=1  (13,7)=1  (14,1)=1  (14,7)=1  (15,1)=1  (15,7)=1  (16,1)=1  (16,7)=1  (17,1)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,5)=1  (17,6)=1  (17,7)=1 
! 180 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (2,1)
  _01: a rectangle with size (10,10) and color blue and mask Border at (7,10)
diff: 
delta: (0,12)=1  (0,13)=1  (0,14)=1  (0,15)=1  (0,16)=1  (1,12)=1  (1,16)=1  (2,12)=1  (2,16)=1  (3,12)=1  (3,16)=1  (4,12)=1  (4,13)=1  (4,14)=1  (4,15)=1  (4,16)=1  (11,1)=1  (11,2)=1  (11,3)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,7)=1  (12,1)=1  (12,7)=1  (13,1)=1  (13,7)=1  (14,1)=1  (14,7)=1  (15,1)=1  (15,7)=1  (16,1)=1  (16,7)=1  (17,1)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,5)=1  (17,6)=1  (17,7)=1 
! 182 wrong pixels (generated / expected)

TEST 868de0fa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.4 sec (8.4 sec/task)
bits-train-error = 35127.9 bits (35127.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-196] Checking task 8731374e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 386523.2 = 386535.8
DL output with Mo: L = 12.6 + 28527.2 = 28539.8
DL input+output M: L = 25.2 + 415050.3 = 415075.6

# learning a model for train pairs
2.000	
1.134	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.109	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.098	OUT SPE ^.layer_0.pos = '(0, 0)
1.089	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.079	OUT SPE ^.color = ^.color
1.071	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.063	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i + area(^.layer_0111.shape)
1.054	OUT SPE ^.size.i = ^.layer_0.shape.size.i + area(^.layer_0111.shape)
1.047	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	OUT SPE ^.size.j = max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + area(^.layer_011.shape)
1.033	OUT SPE ^.layer_0.shape.size.j = max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + area(^.layer_011.shape)
1.031	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.084	
0.084	IN  DEL ^.layer_00

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i + area(^.layer_0111.shape),max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + area(^.layer_011.shape)) and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + area(^.layer_0111.shape),max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + area(^.layer_011.shape)) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 154.3 + 366255.7 = 366410.0
DL output with Mo: L = 271.4 + 2109.3 = 2380.7
DL input+output M: L = 425.7 + 368365.0 = 368790.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i + area(^.layer_0111.shape),max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + area(^.layer_011.shape)) and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + area(^.layer_0111.shape),max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + area(^.layer_011.shape)) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 63.4 = 202.3
DL output with Mo: L = 271.4 + 2109.3 = 2380.7
DL input+output M: L = 410.3 + 2172.7 = 2583.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,23) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _011: a rectangle with size (2,3) and color pink and mask xxx|x.. at (1,12)
  _0111: a rectangle with size (2,4) and color yellow and mask x..x|.xx. at (12,12)
  _01111: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (13,7)
diff: 
delta: (0,0)=6  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,13)=7# (12,14)=6  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
   (0.0 bits)
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (7,6) and color red and mask .x..x.|.x..x.|xxxxxx|.x..x.|xxxxxx|.x..x.|.x..x. at (0,0)
diff: 
delta:
   (54.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,23) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _011: a rectangle with size (2,3) and color pink and mask xxx|x.. at (1,12)
  _0111: a rectangle with size (2,4) and color yellow and mask x..x|.xx. at (12,12)
  _01111: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (13,7)
diff: 
delta: (0,0)=6  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,13)=7# (12,14)=6  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,23) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.. at (1,12)
  _011: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _0111: a rectangle with size (2,4) and color yellow and mask x..x|.xx. at (12,12)
  _01111: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (13,7)
diff: 
delta: (0,0)=6  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,13)=7# (12,14)=6  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! size mismatch, 7x9 instead of 7x6
>> Trial 3
data: a background with size (17,23) and color blue and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _01: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _011: a rectangle with size (2,3) and color pink and mask xxx|x.. at (1,12)
  _0111: a rectangle with size (2,4) and color yellow and mask x..x|.xx. at (12,12)
  _01111: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (13,7)
diff: 
delta: (0,0)=6  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,13)=7# (12,14)=6  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! size mismatch, 5x7 instead of 7x6

TRAIN 8731374e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (27,23) and color yellow and layers
  _0: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _01: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _011: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
  _0111: a rectangle with size (2,3) and color brown and mask x.x|xx. at (25,8)
  _01111: a rectangle with size (1,8) and color cyan and mask Full at (25,5)
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,6)=2  (25,11)=7# (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
   (3.2 bits)
data: a background with size (10,9) and color yellow and layers
  _0: a rectangle with size (10,9) and color blue and mask ..x.x.x..|..x.x.x..|xxxxxxxxx|..x.x.x..|..x.x.x..|xxxxxxxxx|..x.x.x..|xxxxxxxxx|..x.x.x..|..x.x.x.. at (0,0)
diff: 
delta:
   (103.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,23) and color yellow and layers
  _0: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _01: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _011: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
  _0111: a rectangle with size (2,3) and color brown and mask x.x|xx. at (25,8)
  _01111: a rectangle with size (1,8) and color cyan and mask Full at (25,5)
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,6)=2  (25,11)=7# (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! size mismatch, 8x11 instead of 10x9
>> Trial 2
data: a background with size (27,23) and color yellow and layers
  _0: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
  _011: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _0111: a rectangle with size (2,3) and color brown and mask x.x|xx. at (25,8)
  _01111: a rectangle with size (1,8) and color cyan and mask Full at (25,5)
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,6)=2  (25,11)=7# (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! size mismatch, 8x12 instead of 10x9
>> Trial 3
data: a background with size (27,23) and color yellow and layers
  _0: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _01: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _011: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
  _0111: a rectangle with size (2,3) and color brown and mask x.x|xx. at (25,8)
  _01111: a rectangle with size (1,8) and color cyan and mask Full at (25,5)
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,6)=2  (25,11)=7# (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! 90 wrong pixels (generated / expected)

TRAIN 8731374e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,17) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _01: a rectangle with size (4,2) and color green and mask Full at (4,2)
  _011: a rectangle with size (3,4) and color black and mask ..x.|.x.x|x... at (8,5)
  _0111: a rectangle with size (1,3) and color brown and mask Full at (13,1)
  _01111: a rectangle with size (2,2) and color black and mask Full at (0,0)
diff: 
delta: (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,7)=9# (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
   (3.2 bits)
data: a background with size (6,8) and color cyan and layers
  _0: a rectangle with size (6,8) and color red and mask ...x....|...x....|...x....|xxxxxxxx|...x....|...x.... at (0,0)
diff: 
delta:
   (53.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _01: a rectangle with size (4,2) and color green and mask x.|xx|x.|.x at (4,2)
  _011: a rectangle with size (1,3) and color brown and mask Full at (13,1)
  _0111: a rectangle with size (14,1) and color grey and mask Full at (2,3)
  _01111: a rectangle with size (1,9) and color red and mask Full at (14,2)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,3)=8  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,7)=0  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,6)=0  (9,7)=9# (9,8)=0  (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,3)=8  (10,4)=2  (10,5)=0  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,4)=4  (14,7)=4  (14,8)=0  (14,9)=9# (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! size mismatch, 17x7 instead of 6x8
>> Trial 2
data: a background with size (16,17) and color cyan and layers
  _0: a rectangle with size (4,2) and color green and mask x.|xx|x.|.x at (4,2)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _011: a rectangle with size (1,3) and color brown and mask Full at (13,1)
  _0111: a rectangle with size (14,1) and color grey and mask Full at (2,3)
  _01111: a rectangle with size (1,9) and color red and mask Full at (14,2)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,3)=8  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,7)=0  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,6)=0  (9,7)=9# (9,8)=0  (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,3)=8  (10,4)=2  (10,5)=0  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,4)=4  (14,7)=4  (14,8)=0  (14,9)=9# (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! size mismatch, 18x6 instead of 6x8
>> Trial 3
data: a background with size (16,17) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _01: a rectangle with size (4,2) and color green and mask Full at (4,2)
  _011: a rectangle with size (3,4) and color black and mask ..x.|.x.x|x... at (8,5)
  _0111: a rectangle with size (1,3) and color brown and mask Full at (13,1)
  _01111: a rectangle with size (2,2) and color black and mask Full at (0,0)
diff: 
delta: (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,7)=9# (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! 48 wrong pixels (generated / expected)

TRAIN 8731374e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color cyan and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|.x.|xxx at (12,7)
  _01: a rectangle with size (3,2) and color orange and mask Full at (9,1)
  _011: a rectangle with size (4,2) and color yellow and mask .x|x.|x.|x. at (8,11)
  _0111: a rectangle with size (4,2) and color blue and mask .x|.x|.x|x. at (15,0)
  _01111: a rectangle with size (1,10) and color pink and mask Full at (15,0)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,3)=7# (1,4)=0  (1,5)=7# (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,14)=5# (1,15)=3  (1,16)=2  (2,1)=7# (2,2)=9# (2,11)=7# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,11)=7# (3,12)=7# (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,14)=7# (5,15)=9# (5,16)=5# (6,1)=4  (6,2)=4  (6,12)=7# (6,13)=1  (6,14)=7# (6,15)=3  (6,16)=7# (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,13)=0  (8,14)=6  (8,15)=7# (8,16)=6  (9,0)=6  (9,12)=7# (9,13)=1  (9,14)=5# (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,13)=7# (11,14)=7# (11,15)=1  (12,0)=6  (12,1)=6  (12,2)=4  (12,3)=7# (12,4)=6  (12,6)=1  (12,8)=1  (12,10)=2  (12,11)=6  (12,13)=7# (12,14)=2  (13,0)=7# (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,9)=6  (13,10)=7# (13,11)=7# (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,6)=3  (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,2)=9# (15,4)=3  (15,5)=1  (15,8)=8  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,15)=7# (15,16)=7# (16,0)=2  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,9)=7# (16,10)=0  (16,11)=7# (16,12)=9# (16,13)=3  (16,15)=2  (16,16)=1  (17,0)=7# (17,2)=9# (17,3)=4  (17,4)=2  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,11)=0  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,1)=2  (18,2)=5# (18,3)=7# (18,5)=7# (18,6)=1  (18,7)=6  (18,8)=5# (18,10)=0  (18,11)=9# (18,12)=2  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 7x8 instead of 10x8
>> Trial 2
data: a background with size (19,17) and color cyan and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|.x.|xxx at (12,7)
  _01: a rectangle with size (3,2) and color orange and mask Full at (9,1)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|.x|x. at (15,0)
  _0111: a rectangle with size (1,10) and color pink and mask Full at (15,0)
  _01111: a rectangle with size (4,2) and color yellow and mask .x|x.|x.|x. at (8,11)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,3)=7# (1,4)=0  (1,5)=7# (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,14)=5# (1,15)=3  (1,16)=2  (2,1)=7# (2,2)=9# (2,11)=7# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,11)=7# (3,12)=7# (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,14)=7# (5,15)=9# (5,16)=5# (6,1)=4  (6,2)=4  (6,12)=7# (6,13)=1  (6,14)=7# (6,15)=3  (6,16)=7# (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,13)=0  (8,14)=6  (8,15)=7# (8,16)=6  (9,0)=6  (9,12)=7# (9,13)=1  (9,14)=5# (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,13)=7# (11,14)=7# (11,15)=1  (12,0)=6  (12,1)=6  (12,2)=4  (12,3)=7# (12,4)=6  (12,6)=1  (12,8)=1  (12,10)=2  (12,11)=6  (12,13)=7# (12,14)=2  (13,0)=7# (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,9)=6  (13,10)=7# (13,11)=7# (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,6)=3  (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,2)=9# (15,4)=3  (15,5)=1  (15,8)=8  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,15)=7# (15,16)=7# (16,0)=2  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,9)=7# (16,10)=0  (16,11)=7# (16,12)=9# (16,13)=3  (16,15)=2  (16,16)=1  (17,0)=7# (17,2)=9# (17,3)=4  (17,4)=2  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,11)=0  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,1)=2  (18,2)=5# (18,3)=7# (18,5)=7# (18,6)=1  (18,7)=6  (18,8)=5# (18,10)=0  (18,11)=9# (18,12)=2  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 13x8 instead of 10x8

TEST 8731374e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.9 sec (7.9 sec/task)
bits-train-error = 2109.3 bits (2109.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-195] Checking task 88a10436.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8901.0 = 8913.6
DL output with Mo: L = 12.6 + 14817.0 = 14829.6
DL input+output M: L = 25.2 + 23717.9 = 23743.2

# learning a model for train pairs
2.000	
1.742	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.518	OUT ADD ^.layer_0 = ^.layer_0
1.316	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.165	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.016	OUT ADD ^.layer_011 = ^.layer_01
0.888	OUT ADD ^.layer_0111 = ^.layer_01.shape at (?,?)
0.812	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.739	OUT ADD ^.layer_01111 = ^.layer_011
0.632	OUT ADD ^.layer_011111 = ^.layer_011.shape at (?,?)
0.557	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.518	OUT SPE ^.size = ^.size
0.500	IN  SPE ^.layer_0111.shape.color = grey
0.481	IN  SPE ^.layer_011.shape.color = blue
0.462	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos - (1, 1)
0.451	IN  SPE ^.layer_011.shape.mask = Full
0.441	OUT SPE ^.layer_011111.pos.i = ^.layer_0111.pos.i
0.433	IN  SPE ^.color = black
0.425	OUT SPE ^.layer_01.pos.i = ^.layer_0111.pos.i - ^.layer_011.pos.i - ^.layer_0.pos.i
0.420	OUT SPE ^.color = black
0.048	
0.047	IN  GEN ^.layer_0111.shape.color = ?
0.047	IN  GEN ^.layer_011.shape.mask = ?
0.047	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at (^.layer_0111.pos.i - ^.layer_011.pos.i - ^.layer_0.pos.i,?)
  _011: ^.layer_01
  _0111: ^.layer_01.shape at ^.layer_0111.pos - (1, 1)
  _01111: ^.layer_011
  _011111: ^.layer_011.shape at (^.layer_0111.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a point with color grey at (?,?)

DL input  with Mi: L = 112.6 + 3340.6 = 3453.2
DL output with Mo: L = 168.9 + 318.9 = 487.7
DL input+output M: L = 281.5 + 3659.5 = 3941.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at (^.layer_0111.pos.i - ^.layer_011.pos.i - ^.layer_0.pos.i,?)
  _011: ^.layer_01
  _0111: ^.layer_01.shape at ^.layer_0111.pos - (1, 1)
  _01111: ^.layer_011
  _011111: ^.layer_011.shape at (^.layer_0111.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 108.2 + 20.0 = 128.2
DL output with Mo: L = 168.9 + 318.9 = 487.7
DL input+output M: L = 277.0 + 338.9 = 615.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _0111: a point with color grey at (5,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (6,6)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _0111: a rectangle with size (2,2) and color red and mask .x|xx at (4,4)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
diff: 
delta:
   (11.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,2)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _0111: a point with color grey at (5,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _0111: a point with color grey at (5,5)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 88a10436.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _0111: a point with color grey at (5,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,3) and color red and mask Full at (6,0)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _0111: a rectangle with size (1,1) and color pink and mask Full at (4,0)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (5,0)
diff: 
delta:
   (10.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _0111: a point with color grey at (5,1)
diff: 
delta:
correct output grid

TRAIN 88a10436.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _011: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _0111: a point with color grey at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (2,3)
  _011: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (1,3)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _011111: a rectangle with size (2,1) and color blue and mask Full at (2,5)
diff: 
delta:
   (10.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _011: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _0111: a point with color grey at (2,4)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _011: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _0111: a point with color grey at (2,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _011: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _0111: a point with color grey at (2,4)
diff:   ^.layer_011.shape.color
delta:
! 13 wrong pixels (generated / expected)

TRAIN 88a10436.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,3)
  _011: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _0111: a point with color grey at (8,6)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (4,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _011: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _0111: a point with color grey at (8,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,3)
  _0111: a point with color grey at (8,6)
diff:   ^.layer_011.shape.color
delta:
! 11 wrong pixels (generated / expected)

TEST 88a10436.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.6 sec (4.6 sec/task)
bits-train-error = 318.9 bits (318.9 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-194] Checking task 88a62173.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12023.1 = 12035.7
DL output with Mo: L = 12.6 + 1896.6 = 1909.2
DL input+output M: L = 25.2 + 13919.6 = 13944.8

# learning a model for train pairs
2.000	
1.464	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.128	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.965	OUT SPE ^.size = '(2, 2)
0.862	OUT SPE ^.color = majorityColor(^.grid)
0.775	OUT SPE ^.layer_0.shape.color = black
0.725	OUT SPE ^.layer_0.pos.j = 1
0.714	OUT SPE ^.layer_0.pos.i = center(^.layer_0) / '2
0.229	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color majorityColor(^.grid) and layers
  _0: a point with color black at (center(^.layer_0) / '2,1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 5861.5 = 5900.3
DL output with Mo: L = 81.3 + 345.4 = 426.7
DL input+output M: L = 120.1 + 6206.9 = 6327.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color majorityColor(^.grid) and layers
  _0: a point with color black at (center(^.layer_0) / '2,1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 31.7 = 70.5
DL output with Mo: L = 81.3 + 345.4 = 426.7
DL input+output M: L = 120.1 + 377.1 = 497.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|..x..|xxxxx|x.x..|..x.. at (0,0)
diff: 
delta: (0,0)=0  (4,4)=0 
   (0.0 bits)
data: a background with size (2,2) and color red and layers
  _0: a point with color black at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|..x..|xxxxx|x.x..|..x.. at (0,0)
diff: 
delta: (0,0)=0  (4,4)=0 
correct output grid

TRAIN 88a62173.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (3,0)
diff: 
delta: (0,0)=1  (0,3)=1  (1,1)=1  (1,4)=1  (3,3)=1  (4,1)=1  (4,4)=1 
   (3.2 bits)
data: a background with size (2,2) and color blue and layers
  _0: a point with color black at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (3,0)
diff: 
delta: (0,0)=1  (0,3)=1  (1,1)=1  (1,4)=1  (3,3)=1  (4,1)=1  (4,4)=1 
correct output grid

TRAIN 88a62173.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|.xx.x|xxxxx|..x..|.xx.. at (0,0)
diff: 
delta: (4,4)=0 
   (0.0 bits)
data: a background with size (2,2) and color cyan and layers
  _0: a point with color black at (1,1)
diff: 
delta: (0,0)=0 
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|.xx.x|xxxxx|..x..|.xx.. at (0,0)
diff: 
delta: (4,4)=0 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,1)=8  (0,4)=8  (1,3)=8  (2,0)=0  (3,1)=8  (3,3)=8  (3,4)=8  (4,3)=8 
! 3 wrong pixels (generated / expected)

TRAIN 88a62173.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color black and mask ..x.x|x.xx.|xxxxx|..x..|..xx. at (0,0)
diff: 
delta: (4,0)=0 
! 3 wrong pixels (generated / expected)

TEST 88a62173.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 345.4 bits (345.4 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-193] Checking task 890034e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 274715.6 = 274728.2
DL output with Mo: L = 12.6 + 282976.8 = 282989.4
DL input+output M: L = 25.2 + 557692.4 = 557717.6

# learning a model for train pairs
2.000	
1.685	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.476	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.473	OUT SPE ^.size = ^.size
0.788	
0.788	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 188099.5 = 188138.3
DL output with Mo: L = 35.6 + 223012.4 = 223048.0
DL input+output M: L = 74.4 + 411111.9 = 411186.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 35.6 + 223012.4 = 223048.0
DL input+output M: L = 48.2 + 223012.4 = 223060.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (21,21) and color blue and layers
diff: 
delta: (0,0)=0  (0,1)=8  (0,4)=0  (0,9)=0  (0,11)=0  (0,13)=0  (1,2)=0  (1,3)=8  (1,7)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,16)=0  (2,1)=0  (2,2)=0  (2,4)=0  (2,5)=0  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (2,20)=0  (3,0)=0  (3,6)=2  (3,7)=0  (3,8)=0  (3,9)=2  (3,17)=8  (3,19)=0  (4,5)=0  (4,6)=2  (4,7)=0  (4,8)=0  (4,9)=2  (4,11)=0  (4,12)=0  (4,15)=0  (4,17)=0  (4,20)=0  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,6)=2  (5,7)=0  (5,8)=0  (5,9)=2  (5,11)=8  (5,17)=0  (6,0)=0  (6,1)=0  (6,4)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=8  (6,18)=0  (6,19)=0  (6,20)=8  (7,0)=0  (7,2)=8  (7,3)=0  (7,4)=0  (7,7)=0  (7,8)=0  (7,11)=0  (7,16)=8  (7,19)=0  (7,20)=0  (8,3)=8  (8,4)=8  (8,8)=0  (8,9)=0  (8,10)=8  (8,16)=8  (8,18)=0  (8,19)=0  (9,0)=8  (9,2)=0  (9,7)=0  (9,8)=8  (9,11)=0  (9,16)=0  (9,17)=0  (9,19)=0  (10,0)=8  (10,1)=0  (10,7)=0  (10,8)=0  (10,13)=0  (10,16)=8  (10,19)=8  (11,3)=8  (11,5)=0  (11,8)=8  (11,10)=0  (11,14)=0  (11,19)=0  (12,1)=0  (12,2)=8  (12,5)=8  (12,6)=0  (12,14)=0  (12,16)=0  (12,17)=8  (13,2)=8  (13,6)=0  (13,8)=0  (13,9)=0  (13,12)=0  (13,13)=8  (13,15)=0  (13,17)=0  (13,20)=8  (14,6)=0  (14,7)=0  (14,8)=8  (14,10)=0  (14,11)=0  (14,14)=8  (14,17)=8  (14,19)=0  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,10)=0  (15,11)=0  (15,14)=0  (15,19)=0  (16,2)=0  (16,4)=8  (16,5)=0  (16,6)=0  (16,7)=8  (16,10)=0  (16,11)=0  (16,16)=0  (16,18)=0  (16,20)=0  (17,1)=8  (17,2)=8  (17,12)=0  (17,16)=0  (17,17)=0  (17,20)=0  (18,2)=8  (18,3)=0  (18,5)=0  (18,8)=0  (18,15)=0  (18,17)=0  (18,18)=0  (19,2)=0  (19,3)=0  (19,4)=8  (19,6)=0  (19,8)=0  (19,9)=0  (19,10)=0  (19,11)=0  (19,15)=0  (19,16)=8  (19,17)=0  (19,18)=0  (19,19)=0  (19,20)=0  (20,1)=0  (20,2)=0  (20,4)=0  (20,5)=0  (20,7)=0  (20,8)=0  (20,13)=0  (20,16)=0  (20,17)=8  (20,19)=8  (20,20)=0 
   (0.0 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x......x.x.xx.|xxxxxx.......x.xx.x.x|...xxxx.x....x.xxxx.x|...x....x....xxx.x.x.|...xxxxxx....xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (3,6)=2  (3,9)=2  (3,17)=8  (4,6)=2  (4,9)=2  (5,6)=2  (5,9)=2  (5,11)=8  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=8  (13,20)=8  (14,8)=8  (14,9)=2  (14,12)=2  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,9)=2  (15,12)=2  (16,0)=1  (16,1)=1  (16,4)=8  (16,7)=8  (16,9)=2  (16,12)=2  (17,0)=1  (17,1)=8  (17,2)=8  (17,9)=2  (17,10)=2  (17,11)=2  (17,12)=2  (18,0)=1  (18,1)=1  (18,2)=8  (19,0)=1  (19,1)=1  (19,4)=8  (19,16)=8  (20,0)=1  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
   (3692.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color blue and layers
diff: 
delta: (0,0)=0  (0,1)=8  (0,4)=0  (0,9)=0  (0,11)=0  (0,13)=0  (1,2)=0  (1,3)=8  (1,7)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,16)=0  (2,1)=0  (2,2)=0  (2,4)=0  (2,5)=0  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (2,20)=0  (3,0)=0  (3,6)=2  (3,7)=0  (3,8)=0  (3,9)=2  (3,17)=8  (3,19)=0  (4,5)=0  (4,6)=2  (4,7)=0  (4,8)=0  (4,9)=2  (4,11)=0  (4,12)=0  (4,15)=0  (4,17)=0  (4,20)=0  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,6)=2  (5,7)=0  (5,8)=0  (5,9)=2  (5,11)=8  (5,17)=0  (6,0)=0  (6,1)=0  (6,4)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=8  (6,18)=0  (6,19)=0  (6,20)=8  (7,0)=0  (7,2)=8  (7,3)=0  (7,4)=0  (7,7)=0  (7,8)=0  (7,11)=0  (7,16)=8  (7,19)=0  (7,20)=0  (8,3)=8  (8,4)=8  (8,8)=0  (8,9)=0  (8,10)=8  (8,16)=8  (8,18)=0  (8,19)=0  (9,0)=8  (9,2)=0  (9,7)=0  (9,8)=8  (9,11)=0  (9,16)=0  (9,17)=0  (9,19)=0  (10,0)=8  (10,1)=0  (10,7)=0  (10,8)=0  (10,13)=0  (10,16)=8  (10,19)=8  (11,3)=8  (11,5)=0  (11,8)=8  (11,10)=0  (11,14)=0  (11,19)=0  (12,1)=0  (12,2)=8  (12,5)=8  (12,6)=0  (12,14)=0  (12,16)=0  (12,17)=8  (13,2)=8  (13,6)=0  (13,8)=0  (13,9)=0  (13,12)=0  (13,13)=8  (13,15)=0  (13,17)=0  (13,20)=8  (14,6)=0  (14,7)=0  (14,8)=8  (14,10)=0  (14,11)=0  (14,14)=8  (14,17)=8  (14,19)=0  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,10)=0  (15,11)=0  (15,14)=0  (15,19)=0  (16,2)=0  (16,4)=8  (16,5)=0  (16,6)=0  (16,7)=8  (16,10)=0  (16,11)=0  (16,16)=0  (16,18)=0  (16,20)=0  (17,1)=8  (17,2)=8  (17,12)=0  (17,16)=0  (17,17)=0  (17,20)=0  (18,2)=8  (18,3)=0  (18,5)=0  (18,8)=0  (18,15)=0  (18,17)=0  (18,18)=0  (19,2)=0  (19,3)=0  (19,4)=8  (19,6)=0  (19,8)=0  (19,9)=0  (19,10)=0  (19,11)=0  (19,15)=0  (19,16)=8  (19,17)=0  (19,18)=0  (19,19)=0  (19,20)=0  (20,1)=0  (20,2)=0  (20,4)=0  (20,5)=0  (20,7)=0  (20,8)=0  (20,13)=0  (20,16)=0  (20,17)=8  (20,19)=8  (20,20)=0 
! 318 wrong pixels (generated / expected)

TRAIN 890034e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (21,21) and color black and layers
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=4  (2,5)=3  (2,7)=3  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=4  (4,4)=3  (4,5)=3  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,1)=3  (5,4)=3  (5,7)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,1)=3  (6,4)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=4  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,3)=3  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (8,15)=3  (8,17)=3  (8,18)=3  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,10)=3  (9,11)=4  (9,15)=4  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,9)=3  (10,11)=3  (10,12)=3  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,8)=3  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,8)=3  (12,9)=3  (12,11)=3  (12,12)=3  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,9)=3  (13,11)=3  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,10)=3  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,10)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,9)=3  (16,10)=4  (16,11)=3  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,8)=3  (17,10)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,7)=3  (18,8)=3  (18,9)=4  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,7)=3  (19,11)=3  (19,14)=3  (19,15)=3  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,8)=3  (20,9)=4  (20,10)=3  (20,11)=4  (20,13)=4  (20,14)=3  (20,15)=4  (20,16)=4  (20,19)=4 
   (0.0 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (12,9) and color green and mask ...x.....|..x......|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=4  (2,5)=3  (2,7)=3  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=4  (4,4)=3  (4,5)=3  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,1)=3  (5,4)=3  (5,7)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,1)=3  (6,4)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,3)=3  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (8,11)=8  (8,15)=8  (8,17)=3  (8,18)=3  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=8  (9,15)=8  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
   (9512.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=4  (2,5)=3  (2,7)=3  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=4  (4,4)=3  (4,5)=3  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,1)=3  (5,4)=3  (5,7)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,1)=3  (6,4)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=4  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,3)=3  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (8,15)=3  (8,17)=3  (8,18)=3  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,10)=3  (9,11)=4  (9,15)=4  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,9)=3  (10,11)=3  (10,12)=3  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,8)=3  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,8)=3  (12,9)=3  (12,11)=3  (12,12)=3  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,9)=3  (13,11)=3  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,10)=3  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,10)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,9)=3  (16,10)=4  (16,11)=3  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,8)=3  (17,10)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,7)=3  (18,8)=3  (18,9)=4  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,7)=3  (19,11)=3  (19,14)=3  (19,15)=3  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,8)=3  (20,9)=4  (20,10)=3  (20,11)=4  (20,13)=4  (20,14)=3  (20,15)=4  (20,16)=4  (20,19)=4 
! 266 wrong pixels (generated / expected)

TRAIN 890034e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (21,21) and color red and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,11)=0  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=0  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,10)=0  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,1)=0  (6,3)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,17)=0  (7,0)=0  (7,2)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (7,12)=0  (7,14)=0  (7,16)=0  (7,17)=0  (8,1)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (8,14)=0  (8,16)=0  (8,17)=0  (8,18)=0  (9,0)=0  (9,2)=3  (9,3)=0  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,18)=3  (9,20)=0  (10,0)=3  (10,1)=0  (10,3)=0  (10,5)=0  (10,6)=0  (10,9)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,14)=0  (10,15)=3  (10,16)=3  (10,17)=0  (10,18)=0  (10,19)=3  (10,20)=0  (11,1)=3  (11,2)=0  (11,3)=3  (11,9)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,14)=0  (11,16)=0  (11,17)=3  (11,18)=0  (11,19)=0  (12,0)=3  (12,3)=0  (12,5)=0  (12,8)=0  (12,9)=3  (12,14)=3  (12,15)=0  (13,0)=3  (13,1)=3  (13,2)=3  (13,4)=0  (13,6)=0  (13,8)=0  (13,9)=3  (13,13)=0  (13,14)=0  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,7)=0  (14,8)=0  (14,10)=3  (14,12)=0  (14,13)=3  (14,14)=0  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,16)=0  (15,17)=0  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,10)=0  (16,11)=0  (16,12)=0  (16,13)=0  (16,14)=0  (16,15)=0  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=0  (17,12)=0  (17,13)=0  (17,14)=0  (17,15)=0  (17,17)=0  (17,18)=0  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,11)=3  (18,14)=3  (18,15)=0  (18,16)=0  (18,19)=0  (18,20)=0  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,14)=0  (19,16)=0  (19,17)=0  (19,18)=0  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3  (20,17)=0  (20,18)=0 
   (0.0 bits)
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (11,11) and color black and mask .x.........|.x.........|x..........|.xxx...x...|..x.x.xx...|....x.xxx..|...xxx....x|....x..xx.x|....x.x.xx.|.....x.....|...xx...... at (3,10)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,1)=0  (6,3)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (7,0)=0  (7,2)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,1)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (9,0)=0  (9,2)=3  (9,3)=0  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,18)=3  (10,0)=3  (10,1)=0  (10,3)=0  (10,5)=0  (10,6)=0  (10,9)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,2)=0  (11,3)=3  (11,9)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,17)=3  (12,0)=3  (12,3)=0  (12,5)=0  (12,8)=0  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,4)=0  (13,6)=0  (13,8)=0  (13,9)=3  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,7)=0  (14,8)=0  (14,10)=4  (14,11)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=4  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,15)=4  (15,16)=0  (15,17)=0  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,10)=4  (16,11)=0  (16,12)=0  (16,13)=0  (16,14)=0  (16,15)=4  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=4  (17,11)=0  (17,12)=0  (17,13)=0  (17,14)=0  (17,15)=4  (17,17)=0  (17,18)=0  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,10)=4  (18,11)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,15)=4  (18,16)=0  (18,19)=0  (18,20)=0  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,14)=0  (19,16)=0  (19,17)=0  (19,18)=0  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3  (20,17)=0  (20,18)=0 
   (9096.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color red and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,11)=0  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=0  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,10)=0  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,1)=0  (6,3)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,17)=0  (7,0)=0  (7,2)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (7,12)=0  (7,14)=0  (7,16)=0  (7,17)=0  (8,1)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (8,14)=0  (8,16)=0  (8,17)=0  (8,18)=0  (9,0)=0  (9,2)=3  (9,3)=0  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,18)=3  (9,20)=0  (10,0)=3  (10,1)=0  (10,3)=0  (10,5)=0  (10,6)=0  (10,9)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,14)=0  (10,15)=3  (10,16)=3  (10,17)=0  (10,18)=0  (10,19)=3  (10,20)=0  (11,1)=3  (11,2)=0  (11,3)=3  (11,9)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,14)=0  (11,16)=0  (11,17)=3  (11,18)=0  (11,19)=0  (12,0)=3  (12,3)=0  (12,5)=0  (12,8)=0  (12,9)=3  (12,14)=3  (12,15)=0  (13,0)=3  (13,1)=3  (13,2)=3  (13,4)=0  (13,6)=0  (13,8)=0  (13,9)=3  (13,13)=0  (13,14)=0  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,7)=0  (14,8)=0  (14,10)=3  (14,12)=0  (14,13)=3  (14,14)=0  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,16)=0  (15,17)=0  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,10)=0  (16,11)=0  (16,12)=0  (16,13)=0  (16,14)=0  (16,15)=0  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=0  (17,12)=0  (17,13)=0  (17,14)=0  (17,15)=0  (17,17)=0  (17,18)=0  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,11)=3  (18,14)=3  (18,15)=0  (18,16)=0  (18,19)=0  (18,20)=0  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,14)=0  (19,16)=0  (19,17)=0  (19,18)=0  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3  (20,17)=0  (20,18)=0 
! 301 wrong pixels (generated / expected)

TRAIN 890034e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color blue and layers
diff: 
delta: (0,0)=0  (0,1)=2  (0,3)=0  (0,8)=0  (0,9)=0  (0,11)=0  (0,13)=2  (0,14)=0  (0,18)=0  (0,20)=2  (1,3)=0  (1,4)=2  (1,6)=2  (1,8)=0  (1,13)=0  (1,17)=0  (1,18)=2  (2,3)=0  (2,4)=2  (2,5)=2  (2,11)=0  (2,15)=0  (2,18)=2  (3,0)=2  (3,1)=2  (3,11)=0  (3,15)=2  (3,16)=0  (4,0)=0  (4,1)=2  (4,3)=0  (4,6)=2  (4,7)=2  (4,10)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,20)=2  (5,1)=0  (5,2)=0  (5,5)=0  (5,11)=0  (5,13)=0  (5,14)=0  (5,17)=0  (5,18)=0  (5,19)=2  (5,20)=0  (6,0)=0  (6,3)=0  (6,4)=0  (6,5)=0  (6,8)=0  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=0  (7,3)=2  (7,4)=2  (7,6)=0  (7,8)=2  (7,9)=2  (7,12)=2  (7,13)=0  (7,14)=0  (7,16)=0  (7,20)=2  (8,1)=0  (8,3)=0  (8,5)=0  (8,6)=0  (8,7)=2  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,18)=0  (8,20)=0  (9,0)=0  (9,2)=0  (9,3)=0  (9,6)=0  (9,16)=0  (9,19)=0  (10,0)=0  (10,4)=0  (10,6)=0  (10,11)=0  (10,16)=0  (11,0)=0  (11,4)=0  (11,5)=0  (11,7)=0  (11,9)=0  (11,15)=0  (11,16)=0  (11,20)=0  (12,0)=0  (12,2)=0  (12,3)=0  (12,13)=0  (12,14)=0  (12,15)=2  (13,1)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,6)=2  (13,7)=0  (13,8)=2  (13,11)=0  (13,13)=0  (13,14)=0  (13,16)=0  (13,17)=0  (14,0)=2  (14,1)=3  (14,2)=0  (14,3)=0  (14,4)=3  (14,6)=0  (14,8)=0  (14,10)=0  (14,20)=0  (15,1)=3  (15,2)=0  (15,3)=0  (15,4)=3  (15,7)=2  (15,8)=0  (15,12)=0  (15,13)=2  (15,17)=0  (16,1)=3  (16,2)=0  (16,3)=0  (16,4)=3  (16,6)=2  (16,7)=0  (16,8)=0  (16,9)=0  (16,11)=2  (16,15)=2  (16,17)=0  (16,19)=0  (17,1)=3  (17,2)=0  (17,3)=0  (17,4)=3  (17,7)=0  (17,9)=0  (17,11)=0  (17,13)=0  (18,0)=0  (18,1)=3  (18,2)=0  (18,3)=0  (18,4)=3  (18,6)=0  (18,7)=2  (18,8)=0  (18,13)=0  (18,16)=0  (18,17)=2  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,16)=0  (19,17)=0  (19,20)=0  (20,3)=2  (20,5)=0  (20,7)=0  (20,9)=0  (20,16)=0 
! 321 wrong pixels (generated / expected)

TEST 890034e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.4 sec (8.4 sec/task)
bits-train-error = 223012.4 bits (223012.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-192] Checking task 8a004b2b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30867.9 = 30880.5
DL output with Mo: L = 12.6 + 41565.2 = 41577.8
DL input+output M: L = 25.2 + 72433.0 = 72458.2

# learning a model for train pairs
2.000	
1.474	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.079	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.924	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	OUT ADD ^.layer_00 = ^.layer_01.shape at (?,?)
0.646	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.576	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.556	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.536	IN  ADD ^.layer_0101 = a point with color ? at (?,?)
0.517	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.498	OUT ADD ^.layer_010 = ^.layer_010.shape at (?,?)
0.479	OUT ADD ^.layer_0101 = ^.layer_0101.shape at (?,?)
0.460	OUT ADD ^.layer_0100 = ^.layer_010.shape at (?,?)
0.440	OUT ADD ^.layer_01011 = ^.layer_0101.shape at (?,?)
0.428	OUT SPE ^.size = span(^.layer_01111.pos, ^.layer_0101.pos)
0.417	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask * '2
0.409	OUT SPE ^.layer_0100.pos = '(0, 0)
0.403	IN  SPE ^.layer_01111.shape.color = yellow
0.398	IN  SPE ^.layer_010.shape.color = yellow
0.392	IN  SPE ^.layer_0101.shape.color = yellow
0.388	OUT SPE ^.layer_0101.pos.j = '0
0.384	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.380	OUT SPE ^.layer_0.pos.j = 1
0.377	OUT SPE ^.layer_010.pos.i = '0
0.373	OUT SPE ^.layer_01.shape.color = ^.layer_011.shape.color
0.370	IN  SPE ^.layer_01.shape.mask = Full
0.367	IN  SPE ^.layer_0111.shape.mask = Full
0.364	IN  SPE ^.color = black
0.362	OUT SPE ^.layer_01.shape.mask = Full
0.359	OUT SPE ^.layer_01011.pos.j = ^.layer_0101.pos.j - ^.layer_01.shape.size.j
0.355	OUT SPE ^.layer_010.pos.j = ^.layer_0101.pos.j - ^.layer_01.shape.size.j
0.352	OUT SPE ^.layer_00.pos.j = ^.layer_01.pos.j - ^.layer_0.shape.size.i
0.349	OUT SPE ^.layer_0101.pos = '(0, 0) + ^.layer_01111.pos - ^.layer_010.pos
0.348	OUT SPE ^.color = black
0.057	
0.055	IN  DEL ^.layer_0111
0.055	IN  GEN ^.layer_0101.shape.color = ?
0.055	IN  GEN ^.layer_010.shape.color = ?
0.055	IN  GEN ^.layer_01.shape.mask = ?
0.055	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size span(^.layer_01111.pos, ^.layer_0101.pos) and color black and layers
  _00: ^.layer_01.shape at (?,^.layer_01.pos.j - ^.layer_0.shape.size.i)
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask * '2 at (?,1)
  _0100: ^.layer_010.shape at '(0, 0)
  _010: ^.layer_010.shape at ('0,^.layer_0101.pos.j - ^.layer_01.shape.size.j)
  _0101: ^.layer_0101.shape at '(0, 0) + ^.layer_01111.pos - ^.layer_010.pos
  _01011: ^.layer_0101.shape at (?,^.layer_0101.pos.j - ^.layer_01.shape.size.j)
  _01: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color yellow at (?,?)
  _0101: a point with color yellow at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color yellow at (?,?)

DL input  with Mi: L = 172.4 + 9032.1 = 9204.5
DL output with Mo: L = 400.1 + 1658.4 = 2058.5
DL input+output M: L = 572.5 + 10690.4 = 11262.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size span(^.layer_01111.pos, ^.layer_0101.pos) and color black and layers
  _00: ^.layer_01.shape at (?,^.layer_01.pos.j - ^.layer_0.shape.size.i)
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask * '2 at (?,1)
  _0100: ^.layer_010.shape at '(0, 0)
  _010: ^.layer_010.shape at ('0,^.layer_0101.pos.j - ^.layer_01.shape.size.j)
  _0101: ^.layer_0101.shape at '(0, 0) + ^.layer_01111.pos - ^.layer_010.pos
  _01011: ^.layer_0101.shape at (?,^.layer_0101.pos.j - ^.layer_01.shape.size.j)
  _01: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color yellow at (?,?)

DL input  with Mi: L = 139.0 + 31.7 = 170.7
DL output with Mo: L = 400.1 + 1658.4 = 2058.5
DL input+output M: L = 539.1 + 1690.1 = 2229.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _010: a point with color yellow at (0,2)
  _0101: a point with color yellow at (0,15)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _01111: a point with color yellow at (8,2)
diff: 
delta: (6,7)=1  (6,8)=1  (7,7)=1  (7,8)=1  (8,15)=4  (12,2)=3  (12,6)=2 
   (0.0 bits)
data: a background with size (9,14) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Full at (2,1)
  _0: a rectangle with size (4,10) and color blue and mask xxxx..xxxx|xxxx..xxxx|..xxxxxx..|..xxxxxx.. at (4,1)
  _0100: a point with color yellow at (0,0)
  _010: a point with color yellow at (0,13)
  _0101: a point with color yellow at (8,0)
  _01011: a point with color yellow at (8,13)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,9)
diff: 
delta:
   (56.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _010: a point with color yellow at (0,2)
  _0101: a point with color yellow at (0,15)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _01111: a point with color yellow at (8,2)
diff: 
delta: (6,7)=1  (6,8)=1  (7,7)=1  (7,8)=1  (8,15)=4  (12,2)=3  (12,6)=2 
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _010: a point with color yellow at (0,2)
  _0101: a point with color yellow at (0,15)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _01111: a point with color yellow at (8,15)
diff: 
delta: (6,7)=1  (6,8)=1  (7,7)=1  (7,8)=1  (8,2)=4  (12,2)=3  (12,6)=2 
! size mismatch, 9x1 instead of 9x14
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _010: a point with color yellow at (0,2)
  _0101: a point with color green at (2,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (6,7)
  _01111: a point with color yellow at (0,15)
diff: 
delta: (2,4)=3  (3,3)=3  (3,4)=3  (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 3x13 instead of 9x14

TRAIN 8a004b2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,3)
  _010: a point with color yellow at (1,2)
  _0101: a point with color yellow at (1,8)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
  _01111: a point with color yellow at (7,2)
diff: 
delta: (7,8)=4  (13,10)=2  (14,11)=8 
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _0100: a point with color yellow at (0,0)
  _010: a point with color yellow at (0,6)
  _0101: a point with color yellow at (6,0)
  _01011: a point with color yellow at (6,6)
  _01: a rectangle with size (4,4) and color green and mask Full at (1,1)
diff: 
delta:
   (50.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,3)
  _010: a point with color yellow at (1,2)
  _0101: a point with color yellow at (1,8)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
  _01111: a point with color yellow at (7,2)
diff: 
delta: (7,8)=4  (13,10)=2  (14,11)=8 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,3)
  _010: a point with color yellow at (1,2)
  _0101: a point with color yellow at (1,8)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
  _01111: a point with color yellow at (7,8)
diff: 
delta: (7,2)=4  (13,10)=2  (14,11)=8 
! size mismatch, 7x1 instead of 7x7

TRAIN 8a004b2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _010: a point with color yellow at (0,3)
  _0101: a point with color yellow at (0,13)
  _01: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _01111: a point with color yellow at (10,3)
diff: 
delta: (10,13)=4  (13,6)=2  (13,7)=1  (13,8)=1  (14,7)=3  (14,8)=1 
   (3.2 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (3,3) and color green and mask Full at (6,4)
  _0: a rectangle with size (3,3) and color red and mask Full at (3,1)
  _0100: a point with color yellow at (0,0)
  _010: a point with color yellow at (0,10)
  _0101: a point with color yellow at (10,0)
  _01011: a point with color yellow at (10,10)
  _01: a rectangle with size (6,6) and color blue and mask Full at (3,4)
diff: 
delta:
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _010: a point with color yellow at (0,3)
  _0101: a point with color yellow at (0,13)
  _01: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _01111: a point with color yellow at (10,3)
diff: 
delta: (10,13)=4  (13,6)=2  (13,7)=1  (13,8)=1  (14,7)=3  (14,8)=1 
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _010: a point with color yellow at (0,3)
  _0101: a point with color yellow at (0,13)
  _01: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _01111: a point with color yellow at (10,13)
diff: 
delta: (10,3)=4  (13,6)=2  (13,7)=1  (13,8)=1  (14,7)=3  (14,8)=1 
! size mismatch, 11x1 instead of 11x11
>> Trial 3
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _010: a point with color yellow at (0,3)
  _0101: a point with color yellow at (0,13)
  _01: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _01111: a point with color yellow at (10,3)
diff: 
delta: (10,13)=4  (13,6)=2  (13,7)=1  (13,8)=1  (14,7)=3  (14,8)=1 
! 60 wrong pixels (generated / expected)

TRAIN 8a004b2b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _010: a point with color yellow at (0,0)
  _0101: a point with color yellow at (0,17)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _01111: a point with color yellow at (13,0)
diff: 
delta: (13,17)=4  (15,8)=8  (15,10)=3 
! 120 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _010: a point with color yellow at (0,0)
  _0101: a point with color yellow at (0,17)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _01111: a point with color yellow at (13,17)
diff: 
delta: (13,0)=4  (15,8)=8  (15,10)=3 
! size mismatch, 14x1 instead of 14x18
>> Trial 3
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _010: a point with color yellow at (0,0)
  _0101: a point with color yellow at (13,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _01111: a point with color yellow at (0,17)
diff: 
delta: (13,17)=4  (15,8)=8  (15,10)=3 
! 119 wrong pixels (generated / expected)

TEST 8a004b2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.9 sec (38.9 sec/task)
bits-train-error = 1658.4 bits (1658.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-191] Checking task 8be77c9e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4024.0 = 4036.6
DL output with Mo: L = 12.6 + 7703.8 = 7716.4
DL input+output M: L = 25.2 + 11727.8 = 11753.0

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = unfoldSym( [ id ] [ flipHeight ], ^.grid)
0.366	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.325	IN  SPE ^.layer_0.shape.color = blue
0.307	IN  SPE ^.color = black
0.012	
0.005	IN  DEL ^.layer_0
0.005	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id ] [ flipHeight ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1189.0 = 1231.3
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 56.2 + 1189.0 = 1245.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id ] [ flipHeight ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,2)=0  (2,0)=0  (2,1)=0  (2,2)=0 
   (0.0 bits)
data: 
1 1 0 
1 1 1 
0 0 0 
0 0 0 
1 1 1 
1 1 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,2)=0  (2,0)=0  (2,1)=0  (2,2)=0 
correct output grid

TRAIN 8be77c9e.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=1  (1,2)=1  (2,0)=1  (2,1)=1 
   (0.0 bits)
data: 
0 0 0 
1 0 1 
1 1 0 
1 1 0 
1 0 1 
0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=1  (1,2)=1  (2,0)=1  (2,1)=1 
correct output grid

TRAIN 8be77c9e.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,2)=1  (2,2)=1 
   (0.0 bits)
data: 
0 0 0 
0 0 1 
0 0 1 
0 0 1 
0 0 1 
0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,2)=1  (2,2)=1 
correct output grid

TRAIN 8be77c9e.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,2)=1  (2,0)=1 
correct output grid

TEST 8be77c9e.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-190] Checking task 8d5021e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2575.9 = 2588.5
DL output with Mo: L = 12.6 + 13726.4 = 13739.0
DL input+output M: L = 25.2 + 16302.3 = 16327.5

# learning a model for train pairs
2.000	
1.495	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.107	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.069	IN  SPE ^.layer_0.shape.mask = Full
1.033	OUT SPE ^.size = tiling(^.size, 3, 2)
1.005	IN  SPE ^.color = black
0.992	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos) * '2
0.980	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.975	OUT SPE ^.color = black
0.450	
0.444	IN  DEL ^.layer_01
0.444	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 2) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at projI(^.layer_0.pos) * '2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 56.1 + 1377.8 = 1433.9
DL output with Mo: L = 70.9 + 5711.5 = 5782.4
DL input+output M: L = 127.0 + 7089.3 = 7216.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 2) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at projI(^.layer_0.pos) * '2
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 39.8 + 20.0 = 59.8
DL output with Mo: L = 70.9 + 5711.5 = 5782.4
DL input+output M: L = 110.7 + 5731.5 = 5842.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta: (2,1)=8 
   (0.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (9,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,3)=8  (1,0)=0  (2,3)=8  (3,3)=8  (4,0)=0  (5,3)=8  (6,3)=8  (7,0)=0  (8,3)=8 
   (344.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta: (2,1)=8 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,1)
diff: 
delta: (0,1)=8 
! 14 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
diff: 
delta: (1,1)=2 
   (0.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (9,4) and color red and mask .xx.|xxxx|.xx.|.xx.|xxxx|.xx.|.xx.|xxxx|.xx. at (0,0)
diff: 
delta:
   (57.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask x.|xx|x. at (0,0)
diff:   ^.layer_0.shape.mask
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color red and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (0,1)
diff: 
delta: (2,1)=0 
! 24 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (2,0)
diff: 
delta: (1,1)=5#
   (2.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x-cross at (4,0)
diff: 
delta: (0,1)=5# (0,2)=5# (1,0)=5# (1,3)=5#
   (169.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,0)
diff:   ^.layer_0.shape.mask
delta:
! 16 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color green and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (1,1)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|xx at (0,0)
diff:   ^.layer_0.shape.mask
delta:
! 28 wrong pixels (generated / expected)

TEST 8d5021e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 5711.5 bits (5711.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-189] Checking task 8d510a79.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14377.5 = 14390.1
DL output with Mo: L = 12.6 + 23329.2 = 23341.8
DL input+output M: L = 25.2 + 37706.7 = 37731.9

# learning a model for train pairs
2.000	
1.529	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.209	OUT ADD ^.layer_0 = ^.layer_0
1.109	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.009	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.923	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.885	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.846	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.807	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.780	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.748	OUT ADD ^.layer_010 = ^.layer_01
0.722	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.704	OUT SPE ^.size = ^.size
0.690	OUT SPE ^.layer_011111.shape = scaleTo(^.layer_011.shape, '(2, 1))
0.676	OUT SPE ^.layer_01111.shape = scaleTo(^.layer_01.shape, '(2, 1))
0.661	OUT SPE ^.layer_0111111.shape = scaleTo(^.layer_011.shape, '(2, 1))
0.651	IN  SPE ^.layer_01.shape.color = blue
0.624	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.596	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.568	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.540	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.511	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.503	IN  SPE ^.layer_0.shape.color = grey
0.495	IN  SPE ^.layer_0111.shape.color = red
0.488	IN  SPE ^.layer_0111111.shape.color = red
0.480	IN  SPE ^.layer_01111111.shape.color = blue
0.473	IN  SPE ^.layer_01111.shape.color = blue
0.465	OUT SPE ^.layer_01111.pos = ^.layer_01111111.pos
0.457	IN  SPE ^.layer_011111.shape.color = red
0.452	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.448	OUT SPE ^.layer_01.shape.color = red
0.443	OUT SPE ^.layer_01.pos.j = 1
0.439	IN  SPE ^.layer_0.shape.mask = Full
0.434	OUT SPE ^.layer_011111.pos.i = ^.layer_01111.pos.i
0.430	OUT SPE ^.layer_011111.pos.j = ^.layer_0111.pos.j
0.425	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j + 3
0.421	OUT SPE ^.layer_0111.pos.i = middle(^.layer_0)
0.418	IN  SPE ^.color = black
0.415	OUT SPE ^.layer_01.shape.size.j = 1
0.411	OUT SPE ^.layer_0111111.pos.i = ^.layer_0111.pos.j - 1
0.408	OUT SPE ^.layer_01.shape.mask = Full
0.404	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i - 3
0.400	OUT SPE ^.layer_0111.pos.j = ^.layer_01.pos.j + 3
0.396	OUT SPE ^.layer_011.pos.i = ^.layer_0111.pos.j + 1
0.394	OUT SPE ^.layer_011.shape.size.j = 1
0.391	OUT SPE ^.layer_011.shape.mask = Full
0.387	OUT SPE ^.layer_0111111.pos.j = max(^.layer_011.pos.j, ^.layer_0111111.pos.j)
0.384	OUT SPE ^.layer_0111.shape.size.j = 1
0.381	OUT SPE ^.layer_011.shape.size.i = area(^.layer_011.shape) - ^.layer_0.pos.j - ^.layer_01.pos.j
0.377	OUT SPE ^.layer_01.shape.size.i = area(^.layer_01.shape) - ^.layer_01.pos.i - ^.layer_011111.pos.i
0.374	OUT SPE ^.layer_0111.shape.size.i = ^.size.i - ^.layer_0111111.pos.i - ^.layer_011.pos.i
0.371	OUT SPE ^.layer_0111.shape.mask = Full
0.369	OUT SPE ^.color = black
0.109	
0.109	IN  GEN ^.layer_01111111.shape.color = ?
0.108	IN  GEN ^.layer_011111.shape.color = ?
0.108	IN  GEN ^.layer_0111111.shape.color = ?
0.108	IN  GEN ^.layer_0111.shape.color = ?
0.108	IN  GEN ^.layer_0.shape.color = ?
0.108	IN  GEN ^.layer_0.shape.mask = ?
0.108	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (area(^.layer_01.shape) - ^.layer_01.pos.i - ^.layer_011111.pos.i,1) and color red and mask Full at (^.layer_0.pos.i - 3,1)
  _011: a rectangle with size (area(^.layer_011.shape) - ^.layer_0.pos.j - ^.layer_01.pos.j,1) and color ? and mask Full at (^.layer_0111.pos.j + 1,^.layer_011.pos.j + 3)
  _0111: a rectangle with size (^.size.i - ^.layer_0111111.pos.i - ^.layer_011.pos.i,1) and color ^.layer_0111.shape.color and mask Full at (middle(^.layer_0),^.layer_01.pos.j + 3)
  _01111: scaleTo(^.layer_01.shape, '(2, 1)) at ^.layer_01111111.pos
  _011111: scaleTo(^.layer_011.shape, '(2, 1)) at (^.layer_01111.pos.i,^.layer_0111.pos.j)
  _0111111: scaleTo(^.layer_011.shape, '(2, 1)) at (^.layer_0111.pos.j - 1,max(^.layer_011.pos.j, ^.layer_0111111.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color red at (?,?)
  _01111: a point with color blue at (?,?)
  _011111: a point with color red at (?,?)
  _0111111: a point with color red at (?,?)
  _01111111: a point with color blue at (?,?)

DL input  with Mi: L = 172.1 + 3758.8 = 3930.9
DL output with Mo: L = 584.4 + 1646.7 = 2231.1
DL input+output M: L = 756.5 + 5405.6 = 6162.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (area(^.layer_01.shape) - ^.layer_01.pos.i - ^.layer_011111.pos.i,1) and color red and mask Full at (^.layer_0.pos.i - 3,1)
  _011: a rectangle with size (area(^.layer_011.shape) - ^.layer_0.pos.j - ^.layer_01.pos.j,1) and color ? and mask Full at (^.layer_0111.pos.j + 1,^.layer_011.pos.j + 3)
  _0111: a rectangle with size (^.size.i - ^.layer_0111111.pos.i - ^.layer_011.pos.i,1) and color ^.layer_0111.shape.color and mask Full at (middle(^.layer_0),^.layer_01.pos.j + 3)
  _01111: scaleTo(^.layer_01.shape, '(2, 1)) at ^.layer_01111111.pos
  _011111: scaleTo(^.layer_011.shape, '(2, 1)) at (^.layer_01111.pos.i,^.layer_0111.pos.j)
  _0111111: scaleTo(^.layer_011.shape, '(2, 1)) at (^.layer_0111.pos.j - 1,max(^.layer_011.pos.j, ^.layer_0111111.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color blue at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 154.3 + 20.0 = 174.3
DL output with Mo: L = 584.4 + 1646.7 = 2231.1
DL input+output M: L = 738.7 + 1666.7 = 2405.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (1,6)
  _0111: a point with color red at (2,1)
  _01111: a point with color blue at (8,1)
  _011111: a point with color red at (2,9)
  _0111111: a point with color red at (8,5)
  _01111111: a point with color blue at (8,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _010: a point with color blue at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,9)
  _0111: a rectangle with size (3,1) and color red and mask Full at (6,5)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (8,8)
  _011111: a rectangle with size (2,1) and color blue and mask Full at (8,1)
  _0111111: a rectangle with size (2,1) and color blue and mask Full at (0,6)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (1,6)
  _0111: a point with color red at (2,1)
  _01111: a point with color blue at (8,1)
  _011111: a point with color red at (2,9)
  _0111111: a point with color red at (8,5)
  _01111111: a point with color blue at (8,8)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (1,6)
  _0111: a point with color red at (2,1)
  _01111: a point with color blue at (8,1)
  _011111: a point with color red at (2,9)
  _0111111: a point with color blue at (8,8)
  _01111111: a point with color red at (8,5)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (1,6)
  _0111: a point with color red at (2,1)
  _01111: a point with color blue at (8,1)
  _011111: a point with color red at (8,5)
  _0111111: a point with color red at (2,9)
  _01111111: a point with color blue at (8,8)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 8d510a79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (0,1)
  _0111: a point with color red at (1,5)
  _01111: a point with color blue at (1,7)
  _011111: a point with color red at (5,1)
  _0111111: a point with color red at (5,9)
  _01111111: a point with color blue at (8,2)
diff: 
delta: (6,4)=1  (8,6)=2  (8,8)=1 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _010: a point with color blue at (0,3)
  _01: a rectangle with size (6,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (6,4)
  _0111: a rectangle with size (5,1) and color red and mask Full at (4,6)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (8,2)
  _011111: a rectangle with size (2,1) and color red and mask Full at (1,5)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (4,9)
diff: 
delta: (0,7)=1  (1,7)=1  (8,8)=1  (9,8)=1 
   (159.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (0,1)
  _0111: a point with color red at (1,5)
  _01111: a point with color blue at (1,7)
  _011111: a point with color red at (5,1)
  _0111111: a point with color red at (5,9)
  _01111111: a point with color blue at (6,4)
diff: 
delta: (8,2)=1  (8,6)=2  (8,8)=1 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (0,1)
  _0111: a point with color red at (1,5)
  _01111: a point with color blue at (1,7)
  _011111: a point with color red at (5,1)
  _0111111: a point with color red at (5,9)
  _01111111: a point with color blue at (8,2)
diff: 
delta: (6,4)=1  (8,6)=2  (8,8)=1 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (0,1)
  _0111: a point with color red at (1,5)
  _01111: a point with color blue at (1,7)
  _011111: a point with color red at (5,1)
  _0111111: a point with color blue at (6,4)
  _01111111: a point with color red at (5,9)
diff: 
delta: (8,2)=1  (8,6)=2  (8,8)=1 
! 16 wrong pixels (generated / expected)

TRAIN 8d510a79.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (1,1)
  _0111: a point with color red at (1,8)
  _01111: a point with color blue at (2,6)
  _011111: a point with color blue at (7,2)
  _0111111: a point with color red at (7,5)
  _01111111: a point with color red at (8,0)
diff: 
delta: (9,8)=1 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (1,1)
  _0111: a point with color red at (1,8)
  _01111: a point with color blue at (2,6)
  _011111: a point with color blue at (7,2)
  _0111111: a point with color red at (7,5)
  _01111111: a point with color blue at (9,8)
diff: 
delta: (8,0)=2 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (1,1)
  _0111: a point with color red at (1,8)
  _01111: a point with color blue at (2,6)
  _011111: a point with color blue at (7,2)
  _0111111: a point with color red at (8,0)
  _01111111: a point with color red at (7,5)
diff: 
delta: (9,8)=1 
! 25 wrong pixels (generated / expected)

TEST 8d510a79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 48.4 sec (48.4 sec/task)
bits-train-error = 1646.7 bits (1646.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-188] Checking task 8e1813be.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 78142.6 = 78155.2
DL output with Mo: L = 12.6 + 17825.3 = 17837.9
DL input+output M: L = 25.2 + 95967.9 = 95993.1

# learning a model for train pairs
2.000	
1.701	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.494	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.286	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.110	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.948	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT SPE ^.layer_01.shape = scaleTo(^.layer_0111.shape, min(^.layer_0.shape.size, ^.layer_01.shape.size))
0.625	OUT SPE ^.layer_0.shape.size = min(^.layer_0.shape.size, ^.layer_01.shape.size)
0.611	OUT SPE ^.layer_011.pos = projJ(^.layer_01.pos)
0.594	OUT SPE ^.layer_011.shape.size = min(^.layer_0.shape.size, ^.layer_01.shape.size)
0.585	OUT SPE ^.layer_0.shape.color = yellow
0.576	OUT SPE ^.layer_011.shape.color = red
0.569	OUT SPE ^.layer_01.pos.j = '0
0.563	OUT SPE ^.layer_0.shape.mask = Full
0.558	OUT SPE ^.layer_011.shape.mask = Full
0.551	OUT SPE ^.layer_0.pos.j = ^.layer_0111.pos.j
0.310	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color yellow and mask Full at (?,^.layer_0111.pos.j)
  _01: scaleTo(^.layer_0111.shape, min(^.layer_0.shape.size, ^.layer_01.shape.size)) at (?,'0)
  _011: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color red and mask Full at projJ(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 18952.1 = 19066.3
DL output with Mo: L = 211.2 + 5272.1 = 5483.3
DL input+output M: L = 325.3 + 24224.2 = 24549.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color yellow and mask Full at (?,^.layer_0111.pos.j)
  _01: scaleTo(^.layer_0111.shape, min(^.layer_0.shape.size, ^.layer_01.shape.size)) at (?,'0)
  _011: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color red and mask Full at projJ(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 51.7 = 165.8
DL output with Mo: L = 211.2 + 5272.1 = 5483.3
DL input+output M: L = 325.3 + 5323.8 = 5649.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color blue and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color green and mask Full at (8,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
   (0.0 bits)
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (1,6) and color green and mask Full at (2,0)
  _011: a rectangle with size (1,6) and color red and mask Full at (0,0)
diff: 
delta: (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
   (471.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color blue and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color green and mask Full at (8,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 8e1813be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
diff: 
delta:
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (0,1)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (7,1) and color blue and mask Full at (5,2)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 8e1813be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (1,6)
  _01: a rectangle with size (1,12) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,12) and color blue and mask Full at (10,0)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
diff: 
delta: (1,0)=2  (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,11)=2  (4,11)=8 
   (2.0 bits)
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (1,4) and color red and mask Full at (0,0)
diff: 
delta:
   (32.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (1,6)
  _01: a rectangle with size (1,12) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,12) and color blue and mask Full at (10,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (1,0)
diff: 
delta: (1,11)=2  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,11)=8 
! size mismatch, 10x10 instead of 4x4

TRAIN 8e1813be.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Full at (1,8)
  _01: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (1,19) and color pink and mask Full at (12,0)
  _0111: a rectangle with size (1,19) and color blue and mask Full at (15,0)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,16)=2  (0,17)=2  (0,18)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,16)=3  (3,17)=3  (3,18)=3  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,16)=8  (6,17)=8  (6,18)=8  (18,0)=7# (18,1)=7# (18,2)=7# (18,3)=7# (18,4)=7# (18,5)=7# (18,6)=7# (18,7)=7# (18,8)=7# (18,9)=7# (18,10)=7# (18,11)=7# (18,12)=7# (18,13)=7# (18,14)=7# (18,15)=7# (18,16)=7# (18,17)=7# (18,18)=7#
! size mismatch, 10x10 instead of 7x7

TEST 8e1813be.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.8 sec (56.8 sec/task)
bits-train-error = 5272.1 bits (5272.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-187] Checking task 8e5a5113.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16829.2 = 16841.9
DL output with Mo: L = 12.6 + 20242.1 = 20254.7
DL input+output M: L = 25.2 + 37071.3 = 37096.5

# learning a model for train pairs
2.000	
1.738	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.599	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.441	OUT ADD ^.layer_0 = ^.layer_01
1.297	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
1.156	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.905	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.712	OUT ADD ^.layer_00 = ^.layer_0
0.633	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.602	OUT ADD ^.layer_01110 = a point with color ? at (?,?)
0.579	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.547	OUT SPE ^.layer_0111.shape = applySym(rotate180, ^.layer_0.shape)
0.522	OUT SPE ^.size = ^.size
0.504	OUT ADD ^.layer_000 = a point with color ? at (?,?)
0.489	OUT SPE ^.layer_011.shape.size = '(2, 2)
0.475	OUT SPE ^.layer_01 = ^.layer_011
0.462	OUT SPE ^.color = ^.layer_010.shape.color
0.452	IN  SPE ^.layer_01.shape.color = grey
0.418	IN  ADD ^.layer_0100 = a point with color ? at (?,?)
0.395	OUT SPE ^.layer_01110 = ^.layer_0100
0.385	IN  SPE ^.layer_011.shape.color = grey
0.377	OUT SPE ^.layer_01111.shape.color = red
0.369	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.363	IN  SPE ^.layer_010.shape.mask = Full
0.356	IN  SPE ^.layer_0100.shape.color = red
0.350	IN  SPE ^.layer_01.shape.mask = Full
0.344	IN  SPE ^.layer_011.shape.mask = Full
0.338	OUT SPE ^.layer_01111.pos.i = 2
0.332	OUT SPE ^.layer_0111.pos.j = span(^.layer_0.pos.j, ^.layer_011.pos.j) + 1
0.325	OUT SPE ^.layer_000.pos.j = ^.layer_01.pos.j + ^.layer_010.shape.size.j
0.320	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.j
0.314	OUT SPE ^.layer_011.pos.j = span(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_011.pos.i - ^.layer_0.pos.i
0.310	IN  SPE ^.color = black
0.082	
0.080	IN  GEN ^.layer_0100.shape.color = ?
0.080	IN  GEN ^.layer_011.shape.color = ?
0.079	IN  GEN ^.layer_011.shape.mask = ?
0.079	IN  GEN ^.layer_01.shape.mask = ?
0.079	IN  GEN ^.layer_010.shape.mask = ?
0.079	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_010.shape.color and layers
  _000: a point with color ? at (?,^.layer_01.pos.j + ^.layer_010.shape.size.j)
  _00: ^.layer_0
  _0: ^.layer_01
  _01: ^.layer_011
  _011: a rectangle with size '(2, 2) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,span(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_011.pos.i - ^.layer_0.pos.i)
  _01110: ^.layer_0100
  _0111: applySym(rotate180, ^.layer_0.shape) at (?,span(^.layer_0.pos.j, ^.layer_011.pos.j) + 1)
  _01111: a point with color red at (2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a point with color red at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 142.7 + 3874.6 = 4017.3
DL output with Mo: L = 340.0 + 1106.8 = 1446.8
DL input+output M: L = 482.6 + 4981.4 = 5464.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_010.shape.color and layers
  _000: a point with color ? at (?,^.layer_01.pos.j + ^.layer_010.shape.size.j)
  _00: ^.layer_0
  _0: ^.layer_01
  _01: ^.layer_011
  _011: a rectangle with size '(2, 2) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,span(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_011.pos.i - ^.layer_0.pos.i)
  _01110: ^.layer_0100
  _0111: applySym(rotate180, ^.layer_0.shape) at (?,span(^.layer_0.pos.j, ^.layer_011.pos.j) + 1)
  _01111: a point with color red at (2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a point with color ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 132.9 + 0.0 = 132.9
DL output with Mo: L = 340.0 + 1106.8 = 1446.8
DL input+output M: L = 472.9 + 1106.8 = 1579.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _0100: a point with color red at (0,2)
  _010: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color blue and layers
  _000: a point with color red at (2,6)
  _00: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,4)
  _01110: a point with color red at (0,2)
  _0111: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,9)
  _01111: a point with color red at (2,8)
diff: 
delta:
   (28.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _0100: a point with color red at (0,2)
  _010: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _0100: a point with color red at (0,2)
  _010: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,1)
  _0100: a point with color red at (2,2)
  _010: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color pink and layers
  _000: a point with color green at (1,4)
  _00: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,1)
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color green and mask Full at (1,5)
  _01110: a point with color red at (2,2)
  _0111: a rectangle with size (3,2) and color green and mask .x|xx|xx at (0,8)
  _01111: a point with color red at (2,4)
diff: 
delta: (0,8)=2 
   (60.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,1)
  _0100: a point with color red at (2,2)
  _010: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _0100: a point with color green at (0,2)
  _010: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (1,2)=3  (2,2)=2 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _0100: a point with color green at (0,2)
  _010: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (1,2)=3  (2,2)=2 
! 10 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask .x|xx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color cyan and layers
  _000: a point with color red at (0,6)
  _00: a rectangle with size (2,2) and color orange and mask .x|xx at (0,0)
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color orange and mask Full at (0,5)
  _01110: a point with color red at (0,0)
  _0111: a rectangle with size (2,2) and color orange and mask xx|x. at (1,9)
  _01111: a point with color red at (2,10)
diff: 
delta:
   (22.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask .x|xx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask .x|xx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (2,2) and color orange and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Span: same int

TEST 8e5a5113.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 1106.8 bits (1106.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-186] Checking task 8eb1be9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19331.7 = 19344.3
DL output with Mo: L = 12.6 + 64894.7 = 64907.3
DL input+output M: L = 25.2 + 84226.4 = 84251.6

# learning a model for train pairs
2.000	
1.117	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.763	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	OUT SPE ^.size = ^.size
0.753	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (3, 0)
0.750	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.747	IN  SPE ^.color = black
0.745	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.745	OUT SPE ^.color = black
0.632	
0.632	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos - (3, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2180.7 = 2219.6
DL output with Mo: L = 47.7 + 40829.9 = 40877.7
DL input+output M: L = 86.7 + 43010.6 = 43097.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos - (3, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 47.7 + 40829.9 = 40877.7
DL input+output M: L = 86.6 + 40829.9 = 40916.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (1,0)
diff: 
delta: (0,5)=8  (0,11)=8  (0,17)=8  (4,2)=8  (4,8)=8  (4,14)=8  (5,0)=8  (5,1)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,11)=8  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,16)=8  (5,17)=8  (5,18)=8  (6,5)=8  (6,11)=8  (6,17)=8  (7,2)=8  (7,8)=8  (7,14)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=8  (8,9)=8  (8,10)=8  (8,11)=8  (8,12)=8  (8,13)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (9,5)=8  (9,11)=8  (9,17)=8  (10,2)=8  (10,8)=8  (10,14)=8  (11,0)=8  (11,1)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,5)=8  (11,6)=8  (11,7)=8  (11,8)=8  (11,9)=8  (11,10)=8  (11,11)=8  (11,12)=8  (11,13)=8  (11,14)=8  (11,15)=8  (11,16)=8  (11,17)=8  (11,18)=8  (12,5)=8  (12,11)=8  (12,17)=8  (13,2)=8  (13,8)=8  (13,14)=8  (14,0)=8  (14,1)=8  (14,2)=8  (14,3)=8  (14,4)=8  (14,5)=8  (14,6)=8  (14,7)=8  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8  (14,16)=8  (14,17)=8  (14,18)=8 
   (3953.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
diff: 
delta:
! 119 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (1,19) and color cyan and mask Full at (5,0)
diff: 
delta: (4,2)=8  (4,8)=8  (4,14)=8  (6,5)=8  (6,11)=8  (6,17)=8 
! 119 wrong pixels (generated / expected)

TRAIN 8eb1be9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x. at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (10,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (129.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x. at (3,0)
diff: 
delta:
! 66 wrong pixels (generated / expected)

TRAIN 8eb1be9a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (3,13) and color blue and mask .x..x..x..x..|x.xx.xx.xx.xx|x.xx.xx.xx.xx at (3,0)
diff: 
delta:
! 101 wrong pixels (generated / expected)

TEST 8eb1be9a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 40829.9 bits (40829.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-185] Checking task 8efcae92.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 199248.9 = 199261.5
DL output with Mo: L = 12.6 + 10152.5 = 10165.1
DL input+output M: L = 25.2 + 209401.4 = 209426.6

# learning a model for train pairs
2.000	
1.273	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.123	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.009	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.962	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.937	OUT SPE ^.color = blue
0.920	OUT SPE ^.layer_0.shape.color = red
0.904	OUT SPE ^.layer_01.shape.color = red
0.890	OUT SPE ^.layer_01.pos.j = ^.layer_011.pos.j + 1
0.876	OUT SPE ^.layer_0.pos.i = 1
0.862	OUT SPE ^.layer_01.pos = min(^.layer_01.pos, ^.layer_011.pos) + (1, 1)
0.852	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.i / '2
0.852	IN  SPE ^.layer_011.shape.mask = Full
0.680	
0.680	IN  GEN ^.layer_011.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (^.layer_01.shape.size.i / '2,?) and color red and mask ? at (1,?)
  _01: a point with color red at min(^.layer_01.pos, ^.layer_011.pos) + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 90.3 + 34356.3 = 34446.6
DL output with Mo: L = 137.7 + 6765.2 = 6902.9
DL input+output M: L = 228.0 + 41121.5 = 41349.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (^.layer_01.shape.size.i / '2,?) and color red and mask ? at (1,?)
  _01: a point with color red at min(^.layer_01.pos, ^.layer_011.pos) + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 31.7 = 121.0
DL output with Mo: L = 137.7 + 6765.2 = 6902.9
DL input+output M: L = 227.0 + 6796.9 = 7023.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _01: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _011: a rectangle with size (5,6) and color blue and mask Full at (13,6)
diff: 
delta: (2,14)=2  (4,5)=2  (4,11)=2  (4,16)=2  (5,4)=2  (6,13)=2  (7,3)=2  (14,7)=2  (14,9)=2  (15,8)=2  (15,10)=2  (16,7)=2  (17,9)=2 
   (0.0 bits)
data: a background with size (5,6) and color blue and layers
  _0: a rectangle with size (3,4) and color red and mask x.x.|.x.x|x... at (1,1)
  _01: a point with color red at (4,3)
diff: 
delta:
   (46.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _01: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _011: a rectangle with size (5,6) and color blue and mask Full at (13,6)
diff: 
delta: (2,14)=2  (4,5)=2  (4,11)=2  (4,16)=2  (5,4)=2  (6,13)=2  (7,3)=2  (14,7)=2  (14,9)=2  (15,8)=2  (15,10)=2  (16,7)=2  (17,9)=2 
! size mismatch, 10x10 instead of 5x6
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _01: a rectangle with size (5,6) and color blue and mask Full at (13,6)
  _011: a rectangle with size (6,5) and color blue and mask Full at (3,2)
diff: 
delta: (2,14)=2  (4,5)=2  (4,11)=2  (4,16)=2  (5,4)=2  (6,13)=2  (7,3)=2  (14,7)=2  (14,9)=2  (15,8)=2  (15,10)=2  (16,7)=2  (17,9)=2 
! size mismatch, 10x10 instead of 5x6

TRAIN 8efcae92.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (8,15)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,6)
diff: 
delta: (3,3)=2  (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
   (0.0 bits)
data: a background with size (9,9) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _01: a point with color red at (3,7)
diff: 
delta: (0,4)=2  (1,8)=2  (2,5)=2  (3,3)=2  (4,0)=2  (6,5)=2  (7,1)=2  (8,3)=2  (8,8)=2 
   (370.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (8,15)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,6)
diff: 
delta: (3,3)=2  (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (8,15)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (2,6)=2  (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (8,15)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,10)
diff: 
delta: (2,6)=2  (3,3)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN 8efcae92.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (1,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,2)
diff: 
delta: (0,1)=2  (3,17)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
   (3.2 bits)
data: a background with size (5,17) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,7)
  _01: a point with color red at (2,3)
diff: 
delta: (1,13)=2  (2,9)=2  (3,1)=2  (3,6)=2  (4,10)=2  (4,13)=2 
   (259.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (1,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17
>> Trial 2
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (1,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,17)
diff: 
delta: (0,1)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17
>> Trial 3
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (1,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,2)
diff: 
delta: (0,1)=2  (3,17)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17

TRAIN 8efcae92.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xxxxx.........|x.....xxxxx.........|xxxxxxxxxxx......... at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (18,17)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,14)
diff: 
delta: (3,2)=2  (3,10)=2  (4,4)=2  (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (19,15)=2 
! size mismatch, 10x10 instead of 9x10
>> Trial 2
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xxxxx.........|x.....xxxxx.........|xxxxxxxxxxx......... at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (18,17)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,2)
diff: 
delta: (2,14)=2  (3,10)=2  (4,4)=2  (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (19,15)=2 
! size mismatch, 10x10 instead of 9x10

TEST 8efcae92.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.0 sec (8.0 sec/task)
bits-train-error = 6765.2 bits (6765.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-184] Checking task 8f2ea7aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5592.6 = 5605.2
DL output with Mo: L = 12.6 + 21933.2 = 21945.8
DL input+output M: L = 25.2 + 27525.7 = 27550.9

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = compose(majorityColor(strip(^.grid)), strip(^.grid), strip(^.grid))
0.425	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.412	IN  SPE ^.color = black
0.009	
0.004	IN  DEL ^.layer_0
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(majorityColor(strip(^.grid)), strip(^.grid), strip(^.grid))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2261.1 = 2300.1
DL output with Mo: L = 44.0 + 0.0 = 44.0
DL input+output M: L = 83.0 + 2261.1 = 2344.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(majorityColor(strip(^.grid)), strip(^.grid), strip(^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 44.0 + 0.0 = 44.0
DL input+output M: L = 56.7 + 0.0 = 56.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=8  (1,2)=8  (2,0)=8 
   (0.0 bits)
data: 
8 8 0 8 8 0 0 0 0 
0 0 8 0 0 8 0 0 0 
8 0 0 8 0 0 0 0 0 
0 0 0 0 0 0 8 8 0 
0 0 0 0 0 0 0 0 8 
0 0 0 0 0 0 8 0 0 
8 8 0 0 0 0 0 0 0 
0 0 8 0 0 0 0 0 0 
8 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=8  (0,1)=8  (1,2)=8  (2,0)=8 
correct output grid

TRAIN 8f2ea7aa.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (3,5)=7# (4,4)=7# (4,5)=7# (5,3)=7#
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 7#
0 0 0 0 0 0 0 7#7#
0 0 0 0 0 0 7#0 0 
0 0 0 0 0 7#0 0 7#
0 0 0 0 7#7#0 7#7#
0 0 0 7#0 0 7#0 0 
0 0 7#0 0 0 0 0 0 
0 7#7#0 0 0 0 0 0 
7#0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (3,5)=7# (4,4)=7# (4,5)=7# (5,3)=7#
correct output grid

TRAIN 8f2ea7aa.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,4)=6  (1,3)=6  (1,5)=6  (2,3)=6  (2,4)=6 
   (0.0 bits)
data: 
0 0 0 0 6 0 0 0 0 
0 0 0 6 0 6 0 0 0 
0 0 0 6 6 0 0 0 0 
0 6 0 0 0 0 0 6 0 
6 0 6 0 0 0 6 0 6 
6 6 0 0 0 0 6 6 0 
0 6 0 0 6 0 0 0 0 
6 0 6 6 0 6 0 0 0 
6 6 0 6 6 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,4)=6  (1,3)=6  (1,5)=6  (2,3)=6  (2,4)=6 
correct output grid

TRAIN 8f2ea7aa.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (3,0)=2  (4,0)=2  (4,1)=2  (5,1)=2  (5,2)=2 
correct output grid

TEST 8f2ea7aa.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-183] Checking task 90c28cc7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 287960.2 = 287972.8
DL output with Mo: L = 12.6 + 5430.9 = 5443.5
DL input+output M: L = 25.2 + 293391.1 = 293416.3

# learning a model for train pairs
2.000	
1.720	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.517	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.330	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.171	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.057	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.943	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.828	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.761	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.722	OUT SPE ^.layer_011.pos = projI(^.layer_011.pos)
0.683	OUT SPE ^.layer_01.pos = '(0, 0)
0.644	OUT SPE ^.layer_0.pos = '(0, 1)
0.607	OUT SPE ^.layer_0111.pos = projI(^.layer_011.pos) + (0, 1)
0.579	OUT SPE ^.layer_01.shape.color = ^.layer_011.shape.color
0.561	OUT SPE ^.layer_0.shape.size.i = 1
0.542	OUT SPE ^.layer_0.shape.mask = Full
0.372	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at '(0, 1)
  _01: a point with color ^.layer_011.shape.color at '(0, 0)
  _011: a point with color ? at projI(^.layer_011.pos)
  _0111: a point with color ? at projI(^.layer_011.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 49153.3 = 49267.4
DL output with Mo: L = 129.3 + 1891.8 = 2021.1
DL input+output M: L = 243.4 + 51045.1 = 51288.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at '(0, 1)
  _01: a point with color ^.layer_011.shape.color at '(0, 0)
  _011: a point with color ? at projI(^.layer_011.pos)
  _0111: a point with color ? at projI(^.layer_011.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 129.3 + 1891.8 = 2021.1
DL input+output M: L = 243.4 + 1923.5 = 2167.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
   (0.0 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (1,0)
  _0111: a point with color yellow at (1,1)
diff: 
delta: (1,2)=1  (2,0)=2 
   (114.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (5,8) and color red and mask Full at (11,1)
  _0111: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _011: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 90c28cc7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (8,7) and color red and mask Full at (1,1)
  _0111: a rectangle with size (7,7) and color blue and mask Full at (9,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (1,0)
  _0111: a point with color yellow at (1,1)
diff: 
delta:
   (33.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (8,7) and color red and mask Full at (1,1)
  _0111: a rectangle with size (7,7) and color blue and mask Full at (9,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (7,7) and color blue and mask Full at (9,1)
  _0111: a rectangle with size (8,7) and color red and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (8,7) and color red and mask Full at (1,1)
  _011: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _0111: a rectangle with size (7,7) and color blue and mask Full at (9,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 90c28cc7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (5,6) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (6,6) and color blue and mask Full at (13,8)
diff: 
delta: (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2 
   (3.2 bits)
data: a background with size (3,2) and color green and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _01: a point with color cyan at (0,0)
  _011: a point with color yellow at (2,0)
  _0111: a point with color blue at (2,1)
diff: 
delta:
   (41.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color cyan and mask Full at (2,2)
diff: 
delta: (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (5,6) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (6,6) and color blue and mask Full at (13,8)
diff: 
delta: (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2 
! size mismatch, 10x10 instead of 3x2

TRAIN 90c28cc7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (7,6)
  _01: a rectangle with size (8,18) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (18,8) and color yellow and mask Full at (1,6)
  _0111: a rectangle with size (18,5) and color red and mask Full at (1,1)
diff: 
delta: (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,18)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (3,18)=1  (4,14)=1  (4,15)=1  (4,16)=1  (4,17)=1  (4,18)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (7,6)
  _01: a rectangle with size (8,18) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (18,5) and color red and mask Full at (1,1)
  _0111: a rectangle with size (18,8) and color yellow and mask Full at (1,6)
diff: 
delta: (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,18)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (3,18)=1  (4,14)=1  (4,15)=1  (4,16)=1  (4,17)=1  (4,18)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (7,6)
  _01: a rectangle with size (18,8) and color yellow and mask Full at (1,6)
  _011: a rectangle with size (8,18) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (18,5) and color red and mask Full at (1,1)
diff: 
delta: (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,18)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (3,18)=1  (4,14)=1  (4,15)=1  (4,16)=1  (4,17)=1  (4,18)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3

TEST 90c28cc7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.5 sec (57.5 sec/task)
bits-train-error = 1891.8 bits (1891.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-182] Checking task 90f3ed37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21357.4 = 21370.0
DL output with Mo: L = 12.6 + 38782.1 = 38794.7
DL input+output M: L = 25.2 + 60139.5 = 60164.7

# learning a model for train pairs
2.000	
1.535	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.242	OUT ADD ^.layer_0 = ^.layer_0
1.055	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.601	OUT ADD ^.layer_010 = ^.layer_01
0.489	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.399	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.382	OUT SPE ^.size = ^.size
0.375	IN  SPE ^.layer_0.shape.color = cyan
0.367	IN  SPE ^.layer_01.shape.color = cyan
0.359	IN  SPE ^.layer_011.shape.color = cyan
0.353	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.347	OUT SPE ^.layer_01.shape.size.j = ^.size.j - 3
0.342	OUT SPE ^.layer_0111.shape.size.j = ^.layer_01.shape.size.j + 2
0.338	OUT SPE ^.layer_01.shape.color = blue
0.334	OUT SPE ^.layer_0111.shape.color = blue
0.329	OUT SPE ^.layer_01.pos.j = 3
0.326	OUT SPE ^.layer_0111.pos.j = center(^.layer_011) + 2
0.322	OUT SPE ^.layer_011.shape.size.i = ^.layer_011.shape.size.i
0.319	IN  SPE ^.color = black
0.315	OUT SPE ^.layer_011.pos.j = right(^.layer_01) - ^.layer_0.shape.size.i
0.313	OUT SPE ^.layer_0111.shape.size.i = ^.layer_011.shape.size.j / '2
0.311	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.j / '2
0.309	OUT SPE ^.color = black
0.095	
0.095	IN  GEN ^.layer_011.shape.color = ?
0.095	IN  GEN ^.layer_01.shape.color = ?
0.095	IN  GEN ^.layer_0.shape.color = ?
0.095	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_011.shape.size.j / '2,^.size.j - 3) and color blue and mask ? at (?,3)
  _011: a rectangle with size (^.layer_011.shape.size.i,?) and color ? and mask ^.layer_011.shape.mask at (?,right(^.layer_01) - ^.layer_0.shape.size.i)
  _0111: a rectangle with size (^.layer_011.shape.size.j / '2,^.layer_01.shape.size.j + 2) and color blue and mask ? at (?,center(^.layer_011) + 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 4588.8 = 4688.2
DL output with Mo: L = 276.7 + 3193.7 = 3470.4
DL input+output M: L = 376.1 + 7782.5 = 8158.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_011.shape.size.j / '2,^.size.j - 3) and color blue and mask ? at (?,3)
  _011: a rectangle with size (^.layer_011.shape.size.i,?) and color ? and mask ^.layer_011.shape.mask at (?,right(^.layer_01) - ^.layer_0.shape.size.i)
  _0111: a rectangle with size (^.layer_011.shape.size.j / '2,^.layer_01.shape.size.j + 2) and color blue and mask ? at (?,center(^.layer_011) + 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 276.7 + 3193.7 = 3470.4
DL input+output M: L = 366.0 + 3213.7 = 3579.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _010: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (12,3)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
  _0111: a rectangle with size (1,6) and color blue and mask Full at (8,4)
diff: 
delta:
   (37.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _01: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
diff: 
delta: (13,0)=8  (13,1)=8 
   (0.0 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _010: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (6,3)
  _011: a rectangle with size (1,8) and color blue and mask Full at (13,2)
  _0111: a rectangle with size (1,6) and color blue and mask Full at (11,4)
diff: 
delta: (6,0)=8  (6,1)=8  (6,2)=8  (13,0)=8  (13,1)=8 
   (234.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
diff: 
delta: (13,0)=8  (13,1)=8 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _01: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
diff: 
delta: (13,0)=8  (13,1)=8 
! 33 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
  _011: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _010: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
  _01: a rectangle with size (2,7) and color blue and mask Odd Checkboard at (6,3)
  _011: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _0111: a rectangle with size (2,5) and color blue and mask Odd Checkboard at (10,5)
diff: 
delta:
   (47.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
  _011: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _01: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (1,2)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (3,2)
  _011: a rectangle with size (3,5) and color cyan and mask ...xx|xxx..|...xx at (8,0)
diff: 
delta: (2,0)=8  (2,1)=8 
! 26 wrong pixels (generated / expected)

TEST 90f3ed37.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.1 sec (14.1 sec/task)
bits-train-error = 3193.7 bits (3193.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-181] Checking task 913fb3ed.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3602.3 = 3615.0
DL output with Mo: L = 12.6 + 24735.7 = 24748.3
DL input+output M: L = 25.2 + 28338.0 = 28363.2

# learning a model for train pairs
2.000	
1.572	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.336	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.106	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.049	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.988	OUT ADD ^.layer_00 = ^.layer_0
0.957	OUT SPE ^.size = ^.size
0.929	IN  SPE ^.color = black
0.908	OUT SPE ^.layer_011.shape.size = '(3, 3)
0.890	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (1, 1)
0.880	OUT SPE ^.layer_0.shape.size.j = 3
0.875	OUT SPE ^.layer_0.shape.mask = Full
0.869	OUT SPE ^.layer_01.shape.mask = Full
0.864	OUT SPE ^.layer_011.shape.mask = Full
0.860	OUT SPE ^.color = black
0.132	
0.132	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,3) and color ? and mask Full at ^.layer_0.pos - (1, 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 2633.9 = 2663.6
DL output with Mo: L = 119.5 + 2933.7 = 3053.2
DL input+output M: L = 149.2 + 5567.6 = 5716.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,3) and color ? and mask Full at ^.layer_0.pos - (1, 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 119.5 + 2933.7 = 3053.2
DL input+output M: L = 149.1 + 2933.7 = 3082.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (4,5)
diff: 
delta: (5,1)=3  (6,8)=2 
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color cyan at (4,5)
  _0: a rectangle with size (3,3) and color yellow and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color pink and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (5,7)
diff: 
delta: (5,1)=3  (6,8)=2 
   (138.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (4,5)
diff: 
delta: (5,1)=3  (6,8)=2 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (5,1)
diff: 
delta: (4,5)=8  (6,8)=2 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a point with color red at (6,8)
diff: 
delta: (4,5)=8  (5,1)=3 
! 35 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color green at (1,3)
  _0: a rectangle with size (1,3) and color pink and mask Full at (0,2)
  _01: a rectangle with size (1,3) and color pink and mask Full at (2,2)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,2)
diff: 
delta:
   (49.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _0: a point with color green at (3,12)
diff: 
delta: (10,3)=2 
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _00: a point with color green at (3,12)
  _0: a rectangle with size (3,3) and color pink and mask Full at (2,11)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,3)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,2)
diff: 
delta:
   (55.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (3,12)
diff: 
delta: (10,3)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a point with color red at (10,3)
diff: 
delta: (3,12)=3 
! 26 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color cyan at (2,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (49.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (2,2)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (1,1)
diff: 
delta: (10,13)=2  (14,2)=8 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a point with color red at (10,13)
diff: 
delta: (1,1)=3  (14,2)=8 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a point with color cyan at (14,2)
diff: 
delta: (1,1)=3  (10,13)=2 
! 26 wrong pixels (generated / expected)

TEST 913fb3ed.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.5 sec (8.5 sec/task)
bits-train-error = 2933.7 bits (2933.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-180] Checking task 91413438.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5640.3 = 5652.9
DL output with Mo: L = 12.6 + 33644.8 = 33657.4
DL input+output M: L = 25.2 + 39285.0 = 39310.3

# learning a model for train pairs
2.000	
1.130	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.506	IN  SPE ^.color = black
0.491	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.484	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.482	OUT SPE ^.color = black
0.113	
0.113	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2083.1 = 2122.1
DL output with Mo: L = 37.2 + 3535.6 = 3572.7
DL input+output M: L = 76.1 + 5618.7 = 5694.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 37.2 + 3535.6 = 3572.7
DL input+output M: L = 76.0 + 3535.6 = 3611.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,12) and color pink and mask xx.xx.xx.xx.|.xx.xx.xx.xx|..x..x..x..x|xx..........|.xx.........|..x......... at (0,0)
diff: 
delta:
   (114.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color black and mask x.|xx at (1,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 12x12

TRAIN 91413438.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,12) and color yellow and mask .x..x..x..x.|.xx.xx.xx.xx|x..x..x..x.. at (0,0)
diff: 
delta:
   (81.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
diff: 
delta: (0,1)=4  (2,0)=4 
! size mismatch, 10x10 instead of 15x15

TRAIN 91413438.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|x.x|.xx at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,9) and color green and mask x.xx.xx.x|x.xx.xx.x|.xx.xx.xx|x.xx.xx.x|x.xx.xx.x|.xx.xx.xx at (0,0)
diff: 
delta:
   (94.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|x.x|.xx at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color black and mask .x|.x|x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN 91413438.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (2,9) and color red and mask x.xx.xx.x|.x..x..x. at (0,0)
diff: 
delta:
   (62.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 18x18

TRAIN 91413438.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
diff: 
delta: (1,1)=8 
! size mismatch, 10x10 instead of 21x21

TEST 91413438.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 3535.6 bits (3535.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-179] Checking task 91714a58.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 105975.3 = 105987.9
DL output with Mo: L = 12.6 + 14461.1 = 14473.7
DL input+output M: L = 25.2 + 120436.3 = 120461.5

# learning a model for train pairs
2.000	
1.128	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.005	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.937	OUT SPE ^.layer_0 = ^.layer_0
0.890	OUT SPE ^.size = ^.size
0.884	OUT SPE ^.color = black
0.883	IN  SPE ^.layer_0.shape.mask = Full
0.854	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.853	IN  SPE ^.color = black
0.002	
0.001	IN  DEL ^.layer_01
0.001	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 65.4 + 90261.3 = 90326.6
DL output with Mo: L = 15.3 + 0.0 = 15.3
DL input+output M: L = 80.6 + 90261.3 = 90341.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 39.8 + 0.0 = 39.8
DL output with Mo: L = 15.3 + 0.0 = 15.3
DL input+output M: L = 55.1 + 0.0 = 55.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,7)=7# (7,8)=7# (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,8)=7# (8,9)=7# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xxx|xxx|xxx|xxx at (2,3)
diff:   ^.layer_0.shape.mask
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,7)=7# (7,8)=7# (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,8)=7# (8,9)=7# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,7)=7# (7,8)=7# (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,8)=7# (8,9)=7# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
correct output grid

TRAIN 91714a58.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
diff: 
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,0)=2  (3,1)=2  (3,3)=2  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,2)=2  (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,8) and color pink and mask .......x|xxxxxxx.|xxxxxxx. at (10,2)
diff:   ^.layer_0.shape.mask
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,0)=2  (3,1)=2  (3,3)=2  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,2)=2  (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
diff: 
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,0)=2  (3,1)=2  (3,3)=2  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,2)=2  (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
correct output grid

TRAIN 91714a58.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (12,10)=5# (13,5)=1  (13,6)=7# (13,7)=2  (13,10)=5# (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,10)=5# (15,12)=2  (15,14)=3 
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,4) and color orange and mask .xxx|.xxx|xxxx at (2,7)
diff:   ^.layer_0.shape.mask
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (12,10)=5# (13,5)=1  (13,6)=7# (13,7)=2  (13,10)=5# (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,10)=5# (15,12)=2  (15,14)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (12,10)=5# (13,5)=1  (13,6)=7# (13,7)=2  (13,10)=5# (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,10)=5# (15,12)=2  (15,14)=3 
correct output grid

TRAIN 91714a58.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff:   ^.layer_0.shape.mask
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,1)=1  (6,2)=1  (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,6)=7# (14,7)=7# (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,6) and color grey and mask Full at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,1)=1  (6,2)=1  (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,5)=5# (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,6)=7# (14,7)=7# (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
correct output grid

TEST 91714a58.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.50
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-178] Checking task 9172f3a0.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3783.3 = 3796.0
DL output with Mo: L = 12.6 + 33849.5 = 33862.1
DL input+output M: L = 25.2 + 37632.9 = 37658.1

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = ^.grid * '3
0.709	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.586	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.473	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.444	IN  SPE ^.layer_01.shape.color = green
0.427	IN  SPE ^.layer_01.shape.mask = Full
0.414	IN  SPE ^.color = black
0.023	
0.015	IN  DEL ^.layer_01
0.009	IN  DEL ^.layer_0
0.004	IN  DEL ^.layer_011
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
^.grid * '3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 84.4 + 1483.8 = 1568.3
DL output with Mo: L = 23.3 + 0.0 = 23.3
DL input+output M: L = 107.7 + 1483.8 = 1591.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
^.grid * '3
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 23.3 + 0.0 = 23.3
DL input+output M: L = 35.9 + 0.0 = 35.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (1,0)=7# (1,1)=4  (2,2)=4 
   (0.0 bits)
data: 
3 3 3 3 3 3 0 0 0 
3 3 3 3 3 3 0 0 0 
3 3 3 3 3 3 0 0 0 
7#7#7#4 4 4 0 0 0 
7#7#7#4 4 4 0 0 0 
7#7#7#4 4 4 0 0 0 
0 0 0 0 0 0 4 4 4 
0 0 0 0 0 0 4 4 4 
0 0 0 0 0 0 4 4 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (1,0)=7# (1,1)=4  (2,2)=4 
correct output grid

TRAIN 9172f3a0.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,2)=2  (1,1)=2  (1,2)=2  (2,2)=3 
   (0.0 bits)
data: 
3 3 3 0 0 0 2 2 2 
3 3 3 0 0 0 2 2 2 
3 3 3 0 0 0 2 2 2 
0 0 0 2 2 2 2 2 2 
0 0 0 2 2 2 2 2 2 
0 0 0 2 2 2 2 2 2 
0 0 0 0 0 0 3 3 3 
0 0 0 0 0 0 3 3 3 
0 0 0 0 0 0 3 3 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,2)=2  (1,1)=2  (1,2)=2  (2,2)=3 
correct output grid

TRAIN 9172f3a0.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,2)=6  (2,0)=6  (2,1)=1 
correct output grid

TEST 9172f3a0.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-177] Checking task 928ad970.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16953.5 = 16966.1
DL output with Mo: L = 12.6 + 55139.1 = 55151.7
DL input+output M: L = 25.2 + 72092.6 = 72117.9

# learning a model for train pairs
2.000	
1.331	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.720	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	OUT ADD ^.layer_01 = ^.layer_0
0.475	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.439	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.402	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.363	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.342	OUT ADD ^.layer_011 = ^.layer_011
0.321	OUT ADD ^.layer_0111 = ^.layer_0111
0.300	OUT ADD ^.layer_01111 = ^.layer_01111
0.278	OUT ADD ^.layer_010 = ^.layer_01
0.267	OUT SPE ^.size = ^.size
0.257	IN  SPE ^.layer_0.shape.mask = Border
0.247	IN  SPE ^.layer_01.shape.color = grey
0.237	IN  SPE ^.layer_011.shape.color = grey
0.227	IN  SPE ^.layer_0111.shape.color = grey
0.218	IN  SPE ^.layer_01111.shape.color = grey
0.212	OUT SPE ^.layer_0.pos = projI(^.layer_01.pos) + (1, 2)
0.207	OUT SPE ^.layer_0.shape.size.i = ^.size.j - ^.layer_0.shape.size.i
0.202	IN  SPE ^.color = black
0.199	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.196	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.195	OUT SPE ^.color = black
0.014	
0.014	IN  GEN ^.layer_01111.shape.color = ?
0.014	IN  GEN ^.layer_0111.shape.color = ?
0.014	IN  GEN ^.layer_011.shape.color = ?
0.014	IN  GEN ^.layer_01.shape.color = ?
0.013	IN  GEN ^.layer_0.shape.mask = ?
0.013	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.j - ^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at projI(^.layer_01.pos) + (1, 2)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a point with color grey at (?,?)

DL input  with Mi: L = 118.5 + 3062.1 = 3180.6
DL output with Mo: L = 115.6 + 289.5 = 405.1
DL input+output M: L = 234.1 + 3351.6 = 3585.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.j - ^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at projI(^.layer_01.pos) + (1, 2)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 0.0 = 101.7
DL output with Mo: L = 115.6 + 289.5 = 405.1
DL input+output M: L = 217.4 + 289.5 = 506.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (1,4)
  _011: a point with color grey at (6,1)
  _0111: a point with color grey at (6,11)
  _01111: a point with color grey at (11,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask Border at (2,2)
  _010: a point with color grey at (1,4)
  _01: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _011: a point with color grey at (6,1)
  _0111: a point with color grey at (6,11)
  _01111: a point with color grey at (11,4)
diff: 
delta:
   (9.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (1,4)
  _011: a point with color grey at (6,1)
  _0111: a point with color grey at (6,11)
  _01111: a point with color grey at (11,4)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN 928ad970.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (1,5)
  _011: a point with color grey at (5,1)
  _0111: a point with color grey at (8,10)
  _01111: a point with color grey at (12,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (10,8) and color green and mask Border at (2,2)
  _010: a point with color grey at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _011: a point with color grey at (5,1)
  _0111: a point with color grey at (8,10)
  _01111: a point with color grey at (12,5)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (1,5)
  _011: a point with color grey at (5,1)
  _0111: a point with color grey at (8,10)
  _01111: a point with color grey at (12,5)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN 928ad970.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (2,6)
  _011: a point with color grey at (6,12)
  _0111: a point with color grey at (8,1)
  _01111: a point with color grey at (13,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (10,10) and color yellow and mask Border at (3,2)
  _010: a point with color grey at (2,6)
  _01: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _011: a point with color grey at (6,12)
  _0111: a point with color grey at (8,1)
  _01111: a point with color grey at (13,7)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (2,6)
  _011: a point with color grey at (6,12)
  _0111: a point with color grey at (8,1)
  _01111: a point with color grey at (13,7)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 928ad970.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (5,5)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (6,2)
  _0111: a point with color grey at (9,12)
  _01111: a point with color grey at (13,5)
diff: 
delta:
! 38 wrong pixels (generated / expected)

TEST 928ad970.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.2 sec (8.2 sec/task)
bits-train-error = 289.5 bits (289.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-176] Checking task 93b581b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5007.9 = 5020.5
DL output with Mo: L = 12.6 + 19762.0 = 19774.6
DL input+output M: L = 25.2 + 24769.9 = 24795.1

# learning a model for train pairs
2.000	
1.828	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.691	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.554	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.433	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.310	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.185	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.055	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.001	OUT ADD ^.layer_0111 = ^.layer_0111
0.946	OUT ADD ^.layer_00 = ^.layer_0
0.891	OUT ADD ^.layer_010 = ^.layer_01
0.836	OUT ADD ^.layer_0110 = ^.layer_011
0.796	OUT ADD ^.layer_01111 = ^.layer_0111.shape at (?,?)
0.771	OUT SPE ^.size = ^.size
0.751	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, span(^.layer_0.pos, ^.layer_011.pos))
0.722	OUT SPE ^.layer_011.shape = ^.layer_0.shape * '2
0.708	IN  SPE ^.color = black
0.693	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos) + (2, 0)
0.679	OUT SPE ^.layer_011.pos = ^.layer_01.pos + (2, 1)
0.667	OUT SPE ^.layer_01111.pos = projJ(^.layer_0111.pos) + translationSym(flipWidth, ^.layer_0111, ^.layer_011)
0.654	OUT SPE ^.layer_0.pos = projJ(^.layer_0.pos) - translationSym(flipWidth, ^.layer_0111, ^.layer_011)
0.630	OUT SPE ^.layer_0.shape = scaleTo(^.layer_011.shape, span(^.layer_0.pos, ^.layer_011.pos) - translationSym(flipDiag1, ^.layer_0, ^.layer_011))
0.626	OUT SPE ^.color = black
0.155	
0.155	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: scaleTo(^.layer_011.shape, span(^.layer_0.pos, ^.layer_011.pos) - translationSym(flipDiag1, ^.layer_0, ^.layer_011)) at projJ(^.layer_0.pos) - translationSym(flipWidth, ^.layer_0111, ^.layer_011)
  _010: ^.layer_01
  _01: scaleTo(^.layer_01.shape, span(^.layer_0.pos, ^.layer_011.pos)) at projI(^.layer_01.pos) + (2, 0)
  _0110: ^.layer_011
  _011: ^.layer_0.shape * '2 at ^.layer_01.pos + (2, 1)
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at projJ(^.layer_0111.pos) + translationSym(flipWidth, ^.layer_0111, ^.layer_011)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.1 + 2404.4 = 2481.5
DL output with Mo: L = 379.3 + 2222.7 = 2601.9
DL input+output M: L = 456.4 + 4627.1 = 5083.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: scaleTo(^.layer_011.shape, span(^.layer_0.pos, ^.layer_011.pos) - translationSym(flipDiag1, ^.layer_0, ^.layer_011)) at projJ(^.layer_0.pos) - translationSym(flipWidth, ^.layer_0111, ^.layer_011)
  _010: ^.layer_01
  _01: scaleTo(^.layer_01.shape, span(^.layer_0.pos, ^.layer_011.pos)) at projI(^.layer_01.pos) + (2, 0)
  _0110: ^.layer_011
  _011: ^.layer_0.shape * '2 at ^.layer_01.pos + (2, 1)
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at projJ(^.layer_0111.pos) + translationSym(flipWidth, ^.layer_0111, ^.layer_011)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 40.0 = 117.0
DL output with Mo: L = 379.3 + 2222.7 = 2601.9
DL input+output M: L = 456.3 + 2262.7 = 2718.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color cyan at (3,3)
  _0111: a point with color orange at (3,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color brown at (2,2)
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _010: a point with color green at (2,3)
  _01: a rectangle with size (2,2) and color green and mask Full at (4,0)
  _0110: a point with color cyan at (3,3)
  _011: a rectangle with size (2,2) and color brown and mask Full at (4,4)
  _0111: a point with color orange at (3,2)
  _01111: a point with color orange at (0,4)
diff: 
delta: (0,5)=7# (1,4)=7# (1,5)=7#
   (111.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color orange at (3,2)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color cyan at (3,3)
  _0111: a point with color orange at (3,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color orange at (3,2)
  _011: a point with color green at (2,3)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 93b581b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color red at (2,1)
  _0111: a point with color blue at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (1,1)
  _0: a rectangle with size (1,2) and color red and mask Full at (0,3)
  _010: a point with color pink at (1,2)
  _01: a rectangle with size (2,1) and color pink and mask Full at (3,0)
  _0110: a point with color red at (2,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (3,3)
  _0111: a point with color blue at (2,2)
  _01111: a point with color blue at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color red at (2,1)
  _0111: a point with color blue at (2,2)
diff: 
delta:
correct output grid

TRAIN 93b581b8.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color red at (3,3)
  _0111: a point with color grey at (3,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color green at (2,2)
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _010: a point with color pink at (2,3)
  _01: a rectangle with size (2,2) and color pink and mask Full at (4,0)
  _0110: a point with color red at (3,3)
  _011: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _0111: a point with color grey at (3,2)
  _01111: a point with color grey at (0,4)
diff: 
delta: (0,5)=5# (1,4)=5# (1,5)=5#
   (111.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color grey at (3,2)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color red at (3,3)
  _0111: a point with color grey at (3,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color grey at (3,2)
  _011: a point with color pink at (2,3)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 93b581b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color blue at (3,3)
  _011: a point with color red at (4,2)
  _0111: a point with color grey at (4,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color blue at (3,3)
  _011: a point with color grey at (4,3)
  _0111: a point with color red at (4,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color red at (4,2)
  _011: a point with color blue at (3,3)
  _0111: a point with color grey at (4,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 93b581b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.7 sec (12.7 sec/task)
bits-train-error = 2222.7 bits (2222.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-175] Checking task 941d9a10.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 50214.9 = 50227.5
DL output with Mo: L = 12.6 + 58409.1 = 58421.7
DL input+output M: L = 25.2 + 108624.0 = 108649.2

# learning a model for train pairs
2.000	
1.099	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.382	OUT ADD ^.layer_0 = ^.layer_0
0.252	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.191	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.160	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.149	OUT SPE ^.size = ^.size
0.144	OUT SPE ^.layer_011.pos = '(0, 0)
0.140	IN  SPE ^.layer_0.shape.color = grey
0.137	OUT SPE ^.layer_011.shape.color = blue
0.135	OUT SPE ^.layer_01.shape.color = red
0.132	OUT SPE ^.layer_0111.shape.color = green
0.129	OUT SPE ^.layer_01.pos.i = right(^.layer_0) / '2
0.128	OUT SPE ^.layer_01.shape.mask = Full
0.126	OUT SPE ^.layer_011.shape.mask = Full
0.124	OUT SPE ^.layer_0111.shape.mask = Full
0.123	IN  SPE ^.color = black
0.122	OUT SPE ^.color = black
0.028	
0.028	IN  GEN ^.layer_0.shape.color = ?
0.028	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (right(^.layer_0) / '2,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at '(0, 0)
  _0111: a rectangle with size (?,?) and color green and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 4706.2 = 4748.5
DL output with Mo: L = 134.4 + 1444.4 = 1578.8
DL input+output M: L = 176.7 + 6150.6 = 6327.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (right(^.layer_0) / '2,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at '(0, 0)
  _0111: a rectangle with size (?,?) and color green and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 134.4 + 1444.4 = 1578.8
DL input+output M: L = 173.3 + 1444.4 = 1617.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (4,3)
  _011: a rectangle with size (3,2) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (2,2) and color green and mask Full at (8,8)
diff: 
delta:
   (53.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 941d9a10.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
  _01: a rectangle with size (2,4) and color red and mask Full at (4,4)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (1,1) and color green and mask Full at (9,9)
diff: 
delta:
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 941d9a10.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,5)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,1) and color green and mask Full at (7,9)
diff: 
delta:
   (45.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 941d9a10.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x. at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TEST 941d9a10.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 1444.4 bits (1444.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-174] Checking task 94f9d214.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24972.3 = 24984.9
DL output with Mo: L = 12.6 + 4628.2 = 4640.8
DL input+output M: L = 25.2 + 29600.5 = 29625.7

# learning a model for train pairs
2.000	
1.507	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.023	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.688	OUT SPE ^.size = tiling('(2, 2), 2, 2)
0.640	OUT SPE ^.layer_0.shape.color = red
0.340	
0.339	IN  DEL ^.layer_01
0.338	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling('(2, 2), 2, 2) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 7513.8 = 7578.0
DL output with Mo: L = 62.3 + 1502.5 = 1564.9
DL input+output M: L = 126.6 + 9016.3 = 9142.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling('(2, 2), 2, 2) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 62.3 + 1502.5 = 1564.9
DL input+output M: L = 75.0 + 1502.5 = 1577.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,4) and color black and layers
diff: 
delta: (1,1)=3  (1,2)=3  (3,0)=3  (3,3)=3  (4,3)=1  (5,0)=1  (5,2)=1  (5,3)=1  (6,0)=1  (6,1)=1  (6,2)=1  (6,3)=1  (7,1)=1  (7,3)=1 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (3,2)=2 
   (60.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
diff: 
delta: (1,1)=3  (1,2)=3  (3,0)=3  (3,3)=3  (4,3)=1  (5,0)=1  (5,2)=1  (5,3)=1  (6,0)=1  (6,1)=1  (6,2)=1  (6,3)=1  (7,1)=1  (7,3)=1 
! 4 wrong pixels (generated / expected)

TRAIN 94f9d214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,4) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (1,1)=3  (1,2)=3  (2,2)=3  (2,3)=3  (3,0)=3  (4,3)=1  (5,3)=1  (6,1)=1  (7,0)=1  (7,3)=1 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|.xx at (1,0)
diff: 
delta:
   (39.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (1,1)=3  (1,2)=3  (2,2)=3  (2,3)=3  (3,0)=3  (4,3)=1  (5,3)=1  (6,1)=1  (7,0)=1  (7,3)=1 
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,4) and color black and layers
diff: 
delta: (0,1)=3  (0,2)=3  (1,1)=3  (1,3)=3  (2,2)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (5,0)=1  (5,1)=1  (6,0)=1  (6,1)=1  (7,1)=1  (7,2)=1 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Even Checkboard at (1,2)
diff: 
delta:
   (29.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
diff: 
delta: (0,1)=3  (0,2)=3  (1,1)=3  (1,3)=3  (2,2)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (5,0)=1  (5,1)=1  (6,0)=1  (6,1)=1  (7,1)=1  (7,2)=1 
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (8,4) and color blue and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (1,0)=3  (1,1)=0  (1,2)=0  (1,3)=0  (2,0)=3  (2,1)=0  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=0  (3,3)=3  (4,3)=0  (5,0)=0  (6,1)=0  (7,0)=0 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,1)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color blue and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (1,0)=3  (1,1)=0  (1,2)=0  (1,3)=0  (2,0)=3  (2,1)=0  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=0  (3,3)=3  (4,3)=0  (5,0)=0  (6,1)=0  (7,0)=0 
! 5 wrong pixels (generated / expected)

TRAIN 94f9d214.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
diff: 
delta: (0,1)=3  (0,3)=3  (1,0)=3  (1,1)=3  (1,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (4,2)=1  (4,3)=1  (5,2)=1  (5,3)=1  (6,1)=1  (7,0)=1  (7,1)=1 
! 6 wrong pixels (generated / expected)

TEST 94f9d214.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 53.1 sec (53.1 sec/task)
bits-train-error = 1502.5 bits (1502.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-173] Checking task 952a094c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24738.4 = 24751.0
DL output with Mo: L = 12.6 + 24738.4 = 24751.0
DL input+output M: L = 25.2 + 49476.9 = 49502.1

# learning a model for train pairs
2.000	
1.262	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.475	OUT ADD ^.layer_0 = ^.layer_0
0.451	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.426	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.401	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.374	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.350	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.325	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.299	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.273	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.249	OUT SPE ^.size = ^.size
0.235	OUT SPE ^.layer_01111.pos = ^.layer_01111.pos + (2, 2)
0.222	OUT SPE ^.layer_01.pos = ^.layer_01.pos - (2, 2)
0.215	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.208	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.202	IN  SPE ^.layer_0.shape.mask = Border
0.195	OUT SPE ^.layer_01111.shape = ^.layer_01.shape
0.189	OUT SPE ^.layer_01.shape = ^.layer_01111.shape
0.183	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j - 1
0.176	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.i - 1
0.170	OUT SPE ^.layer_0111.pos.j = ^.layer_011.pos.j + 2
0.164	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0) + 1
0.161	IN  SPE ^.color = black
0.158	OUT SPE ^.color = black
0.012	
0.012	IN  GEN ^.layer_0.shape.mask = ?
0.012	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01111.shape at ^.layer_01.pos - (2, 2)
  _011: ^.layer_011.shape at (bottom(^.layer_0) + 1,^.layer_0.pos.j - 1)
  _0111: ^.layer_0111.shape at (^.layer_0.pos.i - 1,^.layer_011.pos.j + 2)
  _01111: ^.layer_01.shape at ^.layer_01111.pos + (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 105.2 + 3625.0 = 3730.2
DL output with Mo: L = 190.1 + 0.0 = 190.1
DL input+output M: L = 295.3 + 3625.0 = 3920.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01111.shape at ^.layer_01.pos - (2, 2)
  _011: ^.layer_011.shape at (bottom(^.layer_0) + 1,^.layer_0.pos.j - 1)
  _0111: ^.layer_0111.shape at (^.layer_0.pos.i - 1,^.layer_011.pos.j + 2)
  _01111: ^.layer_01.shape at ^.layer_01111.pos + (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 0.0 = 101.7
DL output with Mo: L = 190.1 + 0.0 = 190.1
DL input+output M: L = 291.8 + 0.0 = 291.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color green at (3,5)
  _0111: a point with color red at (5,4)
  _01111: a point with color pink at (5,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color pink at (1,2)
  _011: a point with color green at (7,2)
  _0111: a point with color red at (1,7)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color green at (3,5)
  _0111: a point with color red at (5,4)
  _01111: a point with color pink at (5,5)
diff: 
delta:
correct output grid

TRAIN 952a094c.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color red at (3,3)
  _011: a point with color cyan at (3,6)
  _0111: a point with color brown at (6,3)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color cyan at (8,1)
  _0111: a point with color brown at (1,8)
  _01111: a point with color red at (8,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color red at (3,3)
  _011: a point with color cyan at (3,6)
  _0111: a point with color brown at (6,3)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN 952a094c.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color red at (2,2)
  _011: a point with color grey at (2,5)
  _0111: a point with color pink at (4,2)
  _01111: a point with color green at (4,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color green at (0,0)
  _011: a point with color grey at (6,0)
  _0111: a point with color pink at (0,7)
  _01111: a point with color red at (6,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color red at (2,2)
  _011: a point with color grey at (2,5)
  _0111: a point with color pink at (4,2)
  _01111: a point with color green at (4,5)
diff: 
delta:
correct output grid

TRAIN 952a094c.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask Border at (3,2)
  _01: a point with color pink at (4,3)
  _011: a point with color yellow at (4,6)
  _0111: a point with color cyan at (6,3)
  _01111: a point with color red at (6,6)
diff: 
delta:
correct output grid

TEST 952a094c.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 8.1 sec (8.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-172] Checking task 9565186b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6794.9 = 6807.5
DL output with Mo: L = 12.6 + 5425.0 = 5437.6
DL input+output M: L = 25.2 + 12219.9 = 12245.1

# learning a model for train pairs
2.000	
1.379	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.969	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.873	OUT SPE ^.size = ^.size
0.821	OUT SPE ^.layer_0.pos = projJ(^.layer_0.pos) + (1, 0)
0.793	OUT SPE ^.layer_0.shape.size.j = max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.pos.i - ^.layer_0.pos.i
0.213	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.pos.i - ^.layer_0.pos.i) and color ? and mask ? at projJ(^.layer_0.pos) + (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 3973.2 = 4037.4
DL output with Mo: L = 135.8 + 953.6 = 1089.4
DL input+output M: L = 200.0 + 4926.8 = 5126.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.pos.i - ^.layer_0.pos.i) and color ? and mask ? at projJ(^.layer_0.pos) + (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 135.8 + 953.6 = 1089.4
DL input+output M: L = 200.0 + 973.6 = 1173.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
diff: 
delta: (1,2)=3 
   (2.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,3) and color grey and mask x.x|xxx at (1,0)
diff: 
delta:
   (29.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (1,2)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
diff: 
delta: (1,2)=3 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (2,3) and color blue and mask Full at (0,0)
diff: 
delta: (1,2)=3 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
diff: 
delta:
   (21.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|..x|xxx at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (2,1)
diff: 
delta: (0,2)=8  (2,0)=8 
   (0.0 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (21.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (2,1)
diff: 
delta: (0,2)=8  (2,0)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color green and mask .x|xx|.x at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1 
! 9 wrong pixels (generated / expected)

TEST 9565186b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 52.6 sec (52.6 sec/task)
bits-train-error = 953.6 bits (953.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-171] Checking task 95990924.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11485.7 = 11498.3
DL output with Mo: L = 12.6 + 22139.1 = 22151.7
DL input+output M: L = 25.2 + 33624.8 = 33650.0

# learning a model for train pairs
2.000	
1.686	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.481	OUT ADD ^.layer_0 = ^.layer_0
1.369	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.305	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.241	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	OUT SPE ^.size = ^.size
1.185	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.170	IN  SPE ^.layer_0.shape.color = grey
1.162	IN  SPE ^.layer_0.shape.mask = Full
1.155	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.j - 1
1.147	OUT SPE ^.layer_01111.shape.color = green
1.140	OUT SPE ^.layer_01111.pos.i = ^.layer_0.pos.i + 2
1.134	IN  SPE ^.color = black
1.129	OUT SPE ^.layer_01.shape.mask = Full
1.125	OUT SPE ^.layer_011.shape.mask = Full
1.121	OUT SPE ^.layer_0111.shape.mask = Full
1.114	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.i * '2
0.462	
0.461	IN  GEN ^.layer_0.shape.color = ?
0.461	IN  GEN ^.layer_0.shape.mask = ?
0.461	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_0.pos.i * '2)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color green at (^.layer_0.pos.i + 2,^.layer_0.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 7501.4 = 7544.7
DL output with Mo: L = 180.2 + 9959.7 = 10139.9
DL input+output M: L = 223.5 + 17461.1 = 17684.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_0.pos.i * '2)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color green at (^.layer_0.pos.i + 2,^.layer_0.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 180.2 + 9959.7 = 10139.9
DL input+output M: L = 219.0 + 9959.7 = 10178.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,6)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (5,6)
  _01111: a point with color green at (5,3)
diff: 
delta:
   (67.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 95990924.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,2)
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full at (6,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01111: a point with color green at (4,1)
diff: 
delta: (4,4)=4  (5,5)=1  (5,8)=2  (8,5)=3  (8,8)=4 
   (262.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,2)
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
diff: 
delta: (2,2)=5# (2,3)=5# (3,2)=5# (3,3)=5#
! 14 wrong pixels (generated / expected)

TRAIN 95990924.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,3)
diff: 
delta: (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,3)
  _01: a rectangle with size (2,2) and color grey and mask Full at (4,8)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,4)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (11,9)
  _01111: a point with color green at (4,2)
diff: 
delta: (1,2)=1  (1,5)=2  (3,7)=1  (3,10)=2  (4,5)=4  (6,7)=3  (6,10)=4  (7,3)=1  (7,6)=2  (10,3)=3  (10,6)=4  (10,8)=1  (10,11)=2  (13,8)=3  (13,11)=4 
   (665.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,3)
diff: 
delta: (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (4,8)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,4)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 31 wrong pixels (generated / expected)

TRAIN 95990924.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
diff: 
delta: (1,11)=5# (1,12)=5# (2,11)=5# (2,12)=5# (4,5)=5# (4,6)=5# (5,5)=5# (5,6)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,11)
diff: 
delta: (1,1)=5# (1,2)=5# (2,1)=5# (2,2)=5# (4,5)=5# (4,6)=5# (5,5)=5# (5,6)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 47 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (4,5)
diff: 
delta: (1,1)=5# (1,2)=5# (1,11)=5# (1,12)=5# (2,1)=5# (2,2)=5# (2,11)=5# (2,12)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 49 wrong pixels (generated / expected)

TEST 95990924.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.5 sec (58.5 sec/task)
bits-train-error = 9959.7 bits (9959.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-170] Checking task 963e52fc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13284.8 = 13297.4
DL output with Mo: L = 12.6 + 26589.7 = 26602.3
DL input+output M: L = 25.2 + 39874.5 = 39899.7

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = fillResizeAlike(black, projJ(^.size) + ^.size, ^.grid)
0.533	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.343	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.322	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.310	IN  SPE ^.layer_0.shape.color = red
0.303	IN  SPE ^.layer_01.shape.mask = Full
0.296	IN  SPE ^.layer_011.shape.mask = Full
0.290	IN  SPE ^.color = black
0.288	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.280	IN  SPE ^.layer_0111.shape.mask = Full
0.011	
0.008	IN  DEL ^.layer_0
0.006	IN  DEL ^.layer_0111
0.005	IN  DEL ^.layer_011
0.002	IN  DEL ^.layer_01
0.002	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, projJ(^.size) + ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 120.6 + 3585.8 = 3706.4
DL output with Mo: L = 39.9 + 0.0 = 39.9
DL input+output M: L = 160.5 + 3585.8 = 3746.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, projJ(^.size) + ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 39.9 + 0.0 = 39.9
DL input+output M: L = 52.5 + 0.0 = 52.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,6) and color black and layers
diff: 
delta: (1,0)=2  (1,1)=8  (1,2)=2  (1,3)=8  (1,4)=2  (1,5)=8  (2,0)=2  (2,1)=8  (2,2)=2  (2,3)=8  (2,4)=2  (2,5)=8 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 0 0 0 
2 8 2 8 2 8 2 8 2 8 2 8 
2 8 2 8 2 8 2 8 2 8 2 8 
0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta: (1,0)=2  (1,1)=8  (1,2)=2  (1,3)=8  (1,4)=2  (1,5)=8  (2,0)=2  (2,1)=8  (2,2)=2  (2,3)=8  (2,4)=2  (2,5)=8 
correct output grid

TRAIN 963e52fc.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,7) and color black and layers
diff: 
delta: (2,0)=2  (2,1)=3  (2,2)=3  (2,3)=2  (2,4)=3  (2,5)=3  (2,6)=2 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
2 3 3 2 3 3 2 3 3 2 3 3 2 3 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
diff: 
delta: (2,0)=2  (2,1)=3  (2,2)=3  (2,3)=2  (2,4)=3  (2,5)=3  (2,6)=2 
correct output grid

TRAIN 963e52fc.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,8) and color black and layers
diff: 
delta: (2,0)=1  (2,1)=2  (2,2)=2  (2,3)=1  (2,4)=2  (2,5)=2  (2,6)=1  (2,7)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=2  (3,4)=1  (3,5)=2  (3,6)=2  (3,7)=1 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 2 2 1 2 2 1 2 2 1 2 2 1 2 2 1 
2 1 2 2 1 2 2 1 2 2 1 2 2 1 2 2 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,8) and color black and layers
diff: 
delta: (2,0)=1  (2,1)=2  (2,2)=2  (2,3)=1  (2,4)=2  (2,5)=2  (2,6)=1  (2,7)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=2  (3,4)=1  (3,5)=2  (3,6)=2  (3,7)=1 
correct output grid

TRAIN 963e52fc.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
diff: 
delta: (1,0)=3  (1,1)=1  (1,2)=1  (1,3)=3  (1,4)=1  (1,5)=1  (1,6)=3  (1,7)=1  (1,8)=1  (2,0)=3  (2,1)=1  (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=3  (2,7)=1  (2,8)=1 
correct output grid

TEST 963e52fc.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-169] Checking task 97999447.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2969.7 = 2982.3
DL output with Mo: L = 12.6 + 16856.7 = 16869.3
DL input+output M: L = 25.2 + 19826.4 = 19851.6

# learning a model for train pairs
2.000	
1.789	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.582	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.418	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.314	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.269	OUT ADD ^.layer_00 = ^.layer_0
1.229	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.194	OUT SPE ^.size = ^.size
1.169	IN  SPE ^.color = black
1.160	OUT SPE ^.layer_011.shape.color = grey
1.150	OUT SPE ^.layer_0.shape.color = grey
1.133	OUT SPE ^.layer_011.pos = ^.layer_0.pos + (0, 1)
1.127	OUT SPE ^.layer_01.shape.size.i = 1
1.121	OUT SPE ^.layer_01.shape.mask = Full
1.115	OUT SPE ^.layer_011.shape.size.i = 1
1.110	OUT SPE ^.layer_011.shape.mask = Full
1.104	OUT SPE ^.layer_0111.shape.size.i = 1
1.098	OUT SPE ^.layer_0111.shape.mask = Full
1.094	OUT SPE ^.color = black
0.340	
0.340	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color grey and mask Full at ^.layer_0.pos + (0, 1)
  _0111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 2248.3 = 2278.0
DL output with Mo: L = 145.1 + 5416.1 = 5561.2
DL input+output M: L = 174.8 + 7664.5 = 7839.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color grey and mask Full at ^.layer_0.pos + (0, 1)
  _0111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 145.1 + 5416.1 = 5561.2
DL input+output M: L = 174.6 + 5416.1 = 5590.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,8) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (5,3)=6 
   (0.0 bits)
data: a background with size (10,8) and color black and layers
  _00: a point with color red at (2,2)
  _0: a rectangle with size (1,1) and color grey and mask Full at (2,5)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _011: a rectangle with size (1,5) and color grey and mask Full at (2,3)
  _0111: a rectangle with size (1,5) and color pink and mask Full at (5,3)
diff: 
delta: (5,4)=5# (5,6)=5#
   (153.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (5,3)=6 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a point with color pink at (5,3)
diff: 
delta: (2,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 97999447.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,12) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (4,1)=3  (5,6)=6 
   (0.0 bits)
data: a background with size (10,12) and color black and layers
  _00: a point with color red at (1,2)
  _0: a rectangle with size (2,6) and color grey and mask Even Checkboard at (4,6)
  _01: a rectangle with size (1,11) and color green and mask Full at (4,1)
  _011: a rectangle with size (1,9) and color grey and mask Full at (1,3)
  _0111: a rectangle with size (1,5) and color pink and mask Full at (5,6)
diff: 
delta: (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (4,2)=5# (4,4)=5#
   (325.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (4,1)=3  (5,6)=6 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  _0: a point with color green at (4,1)
diff: 
delta: (1,2)=2  (5,6)=6 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,12) and color black and layers
  _0: a point with color pink at (5,6)
diff: 
delta: (1,2)=2  (4,1)=3 
! 29 wrong pixels (generated / expected)

TRAIN 97999447.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,8) and color black and layers
  _00: a point with color cyan at (3,3)
  _0: a rectangle with size (1,1) and color grey and mask Full at (3,6)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,5)
  _011: a rectangle with size (1,1) and color grey and mask Full at (3,4)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (3,7)
diff: 
delta:
   (62.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 97999447.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta: (2,2)=4  (4,4)=8  (6,3)=2 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  _0: a point with color yellow at (2,2)
diff: 
delta: (1,3)=3  (4,4)=8  (6,3)=2 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (4,4)
diff: 
delta: (1,3)=3  (2,2)=4  (6,3)=2 
! 22 wrong pixels (generated / expected)

TEST 97999447.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.8 sec (14.8 sec/task)
bits-train-error = 5416.1 bits (5416.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-168] Checking task 97a05b5b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 130748.8 = 130761.4
DL output with Mo: L = 12.6 + 14533.2 = 14545.8
DL input+output M: L = 25.2 + 145281.9 = 145307.1

# learning a model for train pairs
2.000	
1.245	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.057	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.928	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.812	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.770	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.729	OUT SPE ^.size = ^.layer_0.shape.size
0.701	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.527	
0.527	IN  DEL ^.layer_011
0.527	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 22762.6 = 22851.9
DL output with Mo: L = 118.1 + 7543.6 = 7661.7
DL input+output M: L = 207.3 + 30306.2 = 30513.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 118.1 + 7543.6 = 7661.7
DL input+output M: L = 156.9 + 7543.6 = 7700.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
diff: 
delta: (2,13)=1  (2,14)=2  (2,15)=1  (3,13)=2  (3,14)=2  (3,15)=2  (4,13)=1  (4,14)=2  (4,15)=1  (7,14)=3  (7,15)=3  (7,16)=3  (8,14)=2  (8,15)=2  (8,16)=2  (9,14)=3  (9,15)=3  (9,16)=3  (17,14)=8  (17,15)=8  (17,16)=8  (18,14)=2  (18,15)=8  (18,16)=2  (19,14)=2  (19,15)=2  (19,16)=2  (20,3)=4  (20,4)=4  (20,5)=4  (20,8)=5# (20,9)=5# (20,10)=2  (21,3)=4  (21,4)=2  (21,5)=4  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,5)=4  (22,8)=5# (22,9)=5# (22,10)=2 
   (0.0 bits)
data: a background with size (17,9) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask .xx|..x|xxx at (1,1)
  _01: a rectangle with size (2,3) and color grey and mask Full at (13,5)
  _011: a rectangle with size (3,2) and color cyan and mask x.|xx|x. at (13,0)
  _0111: a rectangle with size (3,1) and color green and mask Full at (1,6)
diff: 
delta: (1,8)=3  (2,8)=3  (3,8)=3  (6,3)=1  (6,5)=1  (8,3)=1  (8,5)=1  (13,6)=2  (14,6)=2 
   (504.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
diff: 
delta: (2,13)=1  (2,14)=2  (2,15)=1  (3,13)=2  (3,14)=2  (3,15)=2  (4,13)=1  (4,14)=2  (4,15)=1  (7,14)=3  (7,15)=3  (7,16)=3  (8,14)=2  (8,15)=2  (8,16)=2  (9,14)=3  (9,15)=3  (9,16)=3  (17,14)=8  (17,15)=8  (17,16)=8  (18,14)=2  (18,15)=8  (18,16)=2  (19,14)=2  (19,15)=2  (19,16)=2  (20,3)=4  (20,4)=4  (20,5)=4  (20,8)=5# (20,9)=5# (20,10)=2  (21,3)=4  (21,4)=2  (21,5)=4  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,5)=4  (22,8)=5# (22,9)=5# (22,10)=2 
! 153 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (5,9) and color red and mask Full at (9,2)
diff: 
delta: (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (2,2)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,10)=2  (2,13)=1  (2,14)=2  (2,15)=1  (3,2)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=2  (3,13)=2  (3,14)=2  (3,15)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=2  (4,8)=2  (4,10)=2  (4,13)=1  (4,14)=2  (4,15)=1  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (6,2)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,10)=2  (7,2)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,7)=2  (7,8)=2  (7,9)=2  (7,10)=2  (7,14)=3  (7,15)=3  (7,16)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,14)=2  (8,15)=2  (8,16)=2  (9,6)=0  (9,14)=3  (9,15)=3  (9,16)=3  (10,6)=2  (11,6)=2  (12,6)=2  (13,6)=2  (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,9)=2  (14,10)=2  (15,2)=2  (15,3)=2  (15,5)=2  (15,6)=2  (15,7)=2  (15,9)=2  (15,10)=2  (16,2)=2  (16,5)=2  (16,6)=2  (16,10)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,5)=2  (17,6)=2  (17,7)=2  (17,8)=2  (17,9)=2  (17,10)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,14)=2  (18,15)=8  (18,16)=2  (19,14)=2  (19,15)=2  (19,16)=2  (20,3)=4  (20,4)=4  (20,5)=4  (20,8)=5# (20,9)=5# (20,10)=2  (21,3)=4  (21,4)=2  (21,5)=4  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,5)=4  (22,8)=5# (22,9)=5# (22,10)=2 
! size mismatch, 5x9 instead of 17x9

TRAIN 97a05b5b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
diff: 
delta: (11,1)=4  (11,2)=2  (11,3)=4  (12,1)=2  (12,2)=2  (12,3)=4  (13,1)=4  (13,2)=2  (13,3)=4  (13,5)=2  (13,6)=2  (13,7)=3  (14,5)=2  (14,6)=3  (14,7)=2  (15,5)=3  (15,6)=2  (15,7)=2 
   (0.0 bits)
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (4,4)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (1,3)
diff: 
delta:
   (134.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
diff: 
delta: (11,1)=4  (11,2)=2  (11,3)=4  (12,1)=2  (12,2)=2  (12,3)=4  (13,1)=4  (13,2)=2  (13,3)=4  (13,5)=2  (13,6)=2  (13,7)=3  (14,5)=2  (14,6)=3  (14,7)=2  (15,5)=3  (15,6)=2  (15,7)=2 
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Full at (4,1)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,1)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (4,5)=2  (4,6)=2  (4,7)=2  (4,8)=2  (5,7)=2  (5,8)=2  (6,6)=2  (6,8)=2  (7,5)=2  (7,8)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (11,1)=4  (11,2)=2  (11,3)=4  (12,1)=2  (12,2)=2  (12,3)=4  (13,1)=4  (13,2)=2  (13,3)=4  (13,5)=2  (13,6)=2  (13,7)=3  (14,5)=2  (14,6)=3  (14,7)=2  (15,5)=3  (15,6)=2  (15,7)=2 
! size mismatch, 5x4 instead of 8x8

TRAIN 97a05b5b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
diff: 
delta: (1,5)=8  (1,6)=2  (1,7)=8  (2,5)=2  (2,6)=2  (2,7)=2  (3,5)=8  (3,6)=2  (3,7)=8 
   (0.0 bits)
data: a background with size (9,9) and color red and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,4)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (4,4)
diff: 
delta:
   (115.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
diff: 
delta: (1,5)=8  (1,6)=2  (1,7)=8  (2,5)=2  (2,6)=2  (2,7)=2  (3,5)=8  (3,6)=2  (3,7)=8 
! 81 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,15) and color black and layers
  _0: a rectangle with size (8,12) and color red and mask xxxxxxxxxxxx|x.xxxx.xxx.x|x..xx..xxxxx|xx..xx.xxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxx...xx|xxxxxxxxxxxx at (1,2)
diff: 
delta: (11,1)=1  (11,2)=1  (11,3)=1  (11,8)=2  (11,9)=3  (11,10)=3  (12,1)=1  (12,2)=2  (12,3)=1  (12,8)=2  (12,9)=2  (12,10)=3  (13,1)=1  (13,2)=1  (13,3)=1  (13,8)=2  (13,9)=3  (13,10)=3  (15,11)=8  (15,12)=8  (15,13)=2  (16,3)=4  (16,4)=2  (16,5)=4  (16,11)=8  (16,12)=2  (16,13)=2  (17,3)=4  (17,4)=2  (17,5)=4  (17,11)=2  (17,12)=2  (17,13)=8  (18,3)=4  (18,4)=2  (18,5)=4 
! 96 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,15) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask Full at (5,2)
diff: 
delta: (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=2  (1,12)=2  (1,13)=2  (2,2)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,13)=2  (3,2)=2  (3,5)=2  (3,6)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,2)=2  (4,3)=2  (4,6)=2  (4,7)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2  (7,12)=2  (7,13)=2  (8,9)=2  (8,10)=2  (8,11)=2  (8,12)=2  (8,13)=2  (11,1)=1  (11,2)=1  (11,3)=1  (11,8)=2  (11,9)=3  (11,10)=3  (12,1)=1  (12,2)=2  (12,3)=1  (12,8)=2  (12,9)=2  (12,10)=3  (13,1)=1  (13,2)=1  (13,3)=1  (13,8)=2  (13,9)=3  (13,10)=3  (15,11)=8  (15,12)=8  (15,13)=2  (16,3)=4  (16,4)=2  (16,5)=4  (16,11)=8  (16,12)=2  (16,13)=2  (17,3)=4  (17,4)=2  (17,5)=4  (17,11)=2  (17,12)=2  (17,13)=8  (18,3)=4  (18,4)=2  (18,5)=4 
! size mismatch, 4x7 instead of 8x12

TEST 97a05b5b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.5 sec (58.5 sec/task)
bits-train-error = 7543.6 bits (7543.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-167] Checking task 98cf29f8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 62739.0 = 62751.6
DL output with Mo: L = 12.6 + 58494.8 = 58507.4
DL input+output M: L = 25.2 + 121233.8 = 121259.0

# learning a model for train pairs
2.000	
1.241	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.522	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.311	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.102	OUT ADD ^.layer_01 = ^.layer_0
0.091	OUT SPE ^.size = ^.size
0.086	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.074	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.068	OUT SPE ^.layer_0.pos = ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
0.066	IN  SPE ^.layer_01.shape.mask = Full
0.065	IN  SPE ^.layer_0.shape.mask = Full
0.063	IN  SPE ^.layer_011.shape.mask = Full
0.062	OUT SPE ^.color = black
0.061	IN  SPE ^.color = black
0.003	
0.003	IN  DEL ^.layer_011
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_01.shape at ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 92.4 + 3638.5 = 3730.9
DL output with Mo: L = 81.0 + 0.0 = 81.0
DL input+output M: L = 173.4 + 3638.5 = 3811.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_01.shape at ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.2 + 20.0 = 86.2
DL output with Mo: L = 81.0 + 0.0 = 81.0
DL input+output M: L = 147.2 + 20.0 = 167.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (8,2)
diff: 
delta: (4,3)=5# (5,3)=5# (6,3)=5# (7,3)=5#
   (0.0 bits)
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (4,2)
  _01: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (7,4) and color grey and mask .x..|.x..|.x..|.x..|xxxx|xxxx|xxxx at (4,2)
diff:   ^.layer_01.shape.mask
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (8,2)
diff: 
delta: (4,3)=5# (5,3)=5# (6,3)=5# (7,3)=5#
correct output grid

TRAIN 98cf29f8.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
diff: 
delta: (6,4)=4  (6,5)=4  (6,6)=4 
   (0.0 bits)
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (5,4)
  _01: a rectangle with size (7,7) and color red and mask Full at (3,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,6) and color yellow and mask xxx...|xxxxxx|xxx... at (5,1)
diff:   ^.layer_01.shape.mask
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
diff: 
delta: (6,4)=4  (6,5)=4  (6,6)=4 
correct output grid

TRAIN 98cf29f8.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _01: a rectangle with size (6,8) and color green and mask Full at (7,3)
diff: 
delta: (3,7)=3  (4,7)=3  (5,7)=3  (6,7)=3 
   (2.0 bits)
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (3,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (10,8) and color green and mask ....x...|....x...|....x...|....x...|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx at (3,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
diff:   ^.layer_0.shape.mask
delta:
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
diff: 
delta: (3,7)=3  (4,7)=3  (5,7)=3  (6,7)=3 
! 74 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _01: a rectangle with size (3,9) and color orange and mask xxxxxxxxx|.....xxxx|.....xxxx at (4,6)
diff:   ^.layer_01.shape.mask
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _01: a rectangle with size (3,4) and color orange and mask Full at (4,11)
diff: 
delta: (4,6)=7# (4,7)=7# (4,8)=7# (4,9)=7# (4,10)=7#
correct output grid

TEST 98cf29f8.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-166] Checking task 995c5fa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23217.4 = 23230.0
DL output with Mo: L = 12.6 + 8165.8 = 8178.4
DL input+output M: L = 25.2 + 31383.1 = 31408.3

# learning a model for train pairs
2.000	
1.628	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.371	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.119	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.919	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	OUT SPE ^.size = '(3, 3)
0.594	IN  SPE ^.layer_01.shape.mask = Full
0.547	OUT SPE ^.layer_0.shape.size = '(1, 3)
0.504	OUT SPE ^.layer_01.shape.size = '(1, 3)
0.466	OUT SPE ^.layer_0.pos = '(0, 0)
0.448	OUT SPE ^.layer_01.pos.j = '0
0.432	OUT SPE ^.layer_0.shape.mask = Full
0.416	OUT SPE ^.layer_01.shape.mask = Full
0.402	OUT SPE ^.layer_01.pos.i = average(^.layer_0.pos.i, ^.layer_011.pos.i) + 1
0.120	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size '(1, 3) and color ? and mask Full at '(0, 0)
  _01: a rectangle with size '(1, 3) and color ? and mask Full at (average(^.layer_0.pos.i, ^.layer_011.pos.i) + 1,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 6541.7 = 6632.0
DL output with Mo: L = 139.8 + 810.1 = 950.0
DL input+output M: L = 230.1 + 7351.9 = 7582.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size '(1, 3) and color ? and mask Full at '(0, 0)
  _01: a rectangle with size '(1, 3) and color ? and mask Full at (average(^.layer_0.pos.i, ^.layer_011.pos.i) + 1,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 0.0 = 90.3
DL output with Mo: L = 139.8 + 810.1 = 950.0
DL input+output M: L = 230.1 + 810.1 = 1040.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,9)
  _01: a rectangle with size (2,2) and color black and mask Full at (1,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,4)
diff: 
delta: (1,13)=0  (2,13)=0 
   (0.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (1,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,9)
  _01: a rectangle with size (2,2) and color black and mask Full at (1,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,4)
diff: 
delta: (1,13)=0  (2,13)=0 
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,3)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta: (1,0)=0  (2,0)=0 
   (0.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,3)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta: (1,0)=0  (2,0)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,3)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color black and mask Full at (2,6)
diff: 
delta: (1,0)=0  (2,0)=0 
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,4)
  _01: a rectangle with size (2,5) and color black and mask Full at (1,8)
  _011: a rectangle with size (2,2) and color black and mask Full at (2,1)
diff: 
delta: (0,9)=0  (1,10)=5# (2,10)=5# (3,9)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,4)
  _01: a rectangle with size (2,2) and color black and mask Full at (1,11)
  _011: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,8)
diff: 
delta: (2,1)=0  (2,2)=0  (3,1)=0  (3,2)=0 
! 9 wrong pixels (generated / expected)

TEST 995c5fa3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 53.1 sec (53.1 sec/task)
bits-train-error = 810.1 bits (810.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-165] Checking task 99b1bc43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31261.4 = 31274.0
DL output with Mo: L = 12.6 + 10311.0 = 10323.6
DL input+output M: L = 25.2 + 41572.4 = 41597.6

# learning a model for train pairs
2.000	
1.406	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.031	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.904	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.765	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.710	OUT SPE ^.size = projI(^.layer_0.shape.size) + projJ(^.size)
0.657	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.631	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.601	OUT SPE ^.layer_0.pos = min(^.layer_0.pos, ^.layer_0111.pos)
0.579	OUT SPE ^.layer_0.shape.color = green
0.560	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.548	OUT SPE ^.layer_0.shape.size.i = ^.layer_011.shape.size.i - ^.layer_0111.pos.i - ^.layer_011.pos.i
0.538	OUT SPE ^.color = black
0.533	IN  SPE ^.layer_0111.shape.mask = Full
0.529	IN  SPE ^.layer_01.shape.mask = Full
0.254	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projI(^.layer_0.shape.size) + projJ(^.size) and color black and layers
  _0: a rectangle with size (^.layer_011.shape.size.i - ^.layer_0111.pos.i - ^.layer_011.pos.i,^.layer_0.shape.size.j) and color green and mask ? at min(^.layer_0.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 131.6 + 8629.5 = 8761.1
DL output with Mo: L = 170.5 + 2395.5 = 2566.0
DL input+output M: L = 302.1 + 11025.1 = 11327.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projI(^.layer_0.shape.size) + projJ(^.size) and color black and layers
  _0: a rectangle with size (^.layer_011.shape.size.i - ^.layer_0111.pos.i - ^.layer_011.pos.i,^.layer_0.shape.size.j) and color green and mask ? at min(^.layer_0.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 131.6 + 51.7 = 183.3
DL output with Mo: L = 170.5 + 2395.5 = 2566.0
DL input+output M: L = 302.1 + 2447.2 = 2749.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _01110: a point with color blue at (0,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,0)
diff: 
delta: (5,1)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask ..xx|xxxx at (2,0)
diff: 
delta:
   (12.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _01110: a point with color blue at (0,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,0)
diff: 
delta: (5,1)=2 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _01110: a point with color blue at (2,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,1)
diff: 
delta: (5,1)=2 
! 10 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color black and mask Full at (0,1)
  _01110: a point with color black at (6,1)
  _0111: a rectangle with size (3,1) and color black and mask Full at (3,0)
diff: 
delta: (6,3)=0 
   (3.2 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=0  (2,2)=3  (3,0)=3  (3,3)=3 
   (146.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
  _01: a rectangle with size (4,3) and color black and mask Full at (0,1)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _01110: a point with color black at (6,1)
  _0111: a rectangle with size (3,1) and color black and mask Full at (3,0)
diff: 
delta: (6,3)=0 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color black and mask Full at (0,1)
  _01110: a point with color black at (6,1)
  _0111: a rectangle with size (3,1) and color black and mask Full at (3,0)
diff: 
delta: (6,3)=0 
! 4 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (6,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (6,3)
  _01110: a point with color red at (7,0)
  _0111: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|xxx.|..xx|..x. at (0,0)
diff: 
delta: (3,0)=3 
   (58.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (6,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (6,3)
  _01110: a point with color red at (7,0)
  _0111: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,1)
  _01110: a point with color red at (7,0)
  _0111: a rectangle with size (2,1) and color red and mask Full at (6,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color black and mask .x..|xxx.|..xx|xx.. at (0,0)
  _01: a rectangle with size (4,2) and color blue and mask Full at (0,2)
  _011: a rectangle with size (3,2) and color black and mask x.|x.|.x at (5,0)
  _01110: a point with color blue at (0,0)
  _0111: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (2,0)=1  (2,1)=1 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xx..|.xx.|.xxx|xx.. at (0,0)
diff: 
delta:
   (22.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color black and mask .x..|xxx.|..xx|xx.. at (0,0)
  _01: a rectangle with size (4,2) and color blue and mask Full at (0,2)
  _011: a rectangle with size (3,2) and color black and mask x.|x.|.x at (5,0)
  _01110: a point with color blue at (0,0)
  _0111: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (2,0)=1  (2,1)=1 
! 7 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.xx|.xxx|..x.|..xx at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask xx.x|..x.|...x|...x at (5,0)
  _01110: a point with color blue at (3,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (7,0)
diff: 
delta: (8,1)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.xx|.xxx|..x.|..xx at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask xx.x|..x.|...x|...x at (5,0)
  _01110: a point with color blue at (3,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (8,1)
diff: 
delta: (7,0)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.xx|.xxx|..x.|..xx at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask xx.x|..x.|...x|...x at (5,0)
  _01110: a point with color red at (7,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (3,0)
diff: 
delta: (8,1)=2 
! 6 wrong pixels (generated / expected)

TEST 99b1bc43.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.9 sec (4.9 sec/task)
bits-train-error = 2395.5 bits (2395.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-164] Checking task 99fa7670.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3695.9 = 3708.5
DL output with Mo: L = 12.6 + 14860.8 = 14873.4
DL input+output M: L = 25.2 + 18556.7 = 18581.9

# learning a model for train pairs
2.000	
1.590	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.362	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.136	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.093	OUT SPE ^.size = ^.size
1.066	IN  SPE ^.color = black
1.041	OUT SPE ^.layer_0.pos = ^.layer_0.pos
1.026	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
1.017	OUT SPE ^.layer_01.shape.size.i = 2
1.005	OUT SPE ^.layer_0.shape.size.j = ^.size.j - 1
0.990	OUT SPE ^.layer_01.shape.color = majorityColor(^.grid)
0.977	OUT SPE ^.layer_0.shape.size.i = ^.size.j / '2
0.971	OUT SPE ^.color = black
0.233	
0.233	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.j / '2,^.size.j - 1) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (2,?) and color majorityColor(^.grid) and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 2775.8 = 2805.4
DL output with Mo: L = 118.3 + 3070.8 = 3189.0
DL input+output M: L = 147.9 + 5846.5 = 5994.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.j / '2,^.size.j - 1) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (2,?) and color majorityColor(^.grid) and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 40.0 = 69.5
DL output with Mo: L = 118.3 + 3070.8 = 3189.0
DL input+output M: L = 147.8 + 3110.8 = 3258.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,1)
diff: 
delta: (1,2)=2 
   (2.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxxxx|....x|....x at (3,1)
  _01: a rectangle with size (2,4) and color red and mask xxxx|...x at (1,2)
diff: 
delta:
   (52.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (3,1)=3 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,1)
diff: 
delta: (1,2)=2 
! 17 wrong pixels (generated / expected)

TRAIN 99fa7670.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,2)
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 99fa7670.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (4,3)=5#
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxxx|....x|....x at (1,1)
  _01: a rectangle with size (2,3) and color grey and mask xxx|..x at (4,3)
diff: 
delta:
   (48.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (4,3)=5#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,3)
diff: 
delta: (1,1)=8 
! 12 wrong pixels (generated / expected)

TRAIN 99fa7670.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (7,5) and color black and layers
  _0: a point with color orange at (3,1)
diff: 
delta: (1,2)=8  (5,2)=6 
   (2.0 bits)
data: a background with size (7,5) and color black and layers
  _0: a rectangle with size (2,4) and color orange and mask xxxx|...x at (3,1)
  _01: a rectangle with size (2,3) and color pink and mask xxx|..x at (5,2)
diff: 
delta: (1,2)=8  (1,3)=8  (1,4)=8  (2,4)=8 
   (188.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,5) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (3,1)=7# (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,5) and color black and layers
  _0: a point with color orange at (3,1)
diff: 
delta: (1,2)=8  (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,5) and color black and layers
  _0: a point with color pink at (5,2)
diff: 
delta: (1,2)=8  (3,1)=7#
! 15 wrong pixels (generated / expected)

TRAIN 99fa7670.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (2,2)=7# (4,5)=2 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  _0: a point with color orange at (2,2)
diff: 
delta: (0,3)=8  (4,5)=2 
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  _0: a point with color red at (4,5)
diff: 
delta: (0,3)=8  (2,2)=7#
! 21 wrong pixels (generated / expected)

TEST 99fa7670.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 3070.8 bits (3070.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-163] Checking task 9aec4887.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27890.3 = 27902.9
DL output with Mo: L = 12.6 + 25751.0 = 25763.6
DL input+output M: L = 25.2 + 53641.3 = 53666.5

# learning a model for train pairs
2.000	
1.697	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.523	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.377	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.231	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.973	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.856	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.739	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.629	IN  ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.508	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.493	OUT ADD ^.layer_0101 = ^.layer_010.shape at (?,?)
0.482	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.476	IN  SPE ^.layer_0.shape.color = cyan
0.473	IN  SPE ^.layer_010.shape.mask = Full
0.469	IN  SPE ^.layer_0101.shape.mask = Full
0.450	OUT SPE ^.size = ^.layer_0.shape.size + (2, 2)
0.439	OUT SPE ^.layer_0101.pos = '(0, 1)
0.428	OUT SPE ^.layer_010.pos = '(1, 0)
0.420	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i
0.406	OUT SPE ^.layer_0.shape.size = projJ(^.layer_0.shape.size) + (2, 0)
0.396	OUT SPE ^.layer_011.shape.color = cyan
0.191	
0.190	IN  DEL ^.layer_011
0.190	IN  GEN ^.layer_0.shape.color = ?
0.190	IN  GEN ^.layer_0101.shape.mask = ?
0.190	IN  GEN ^.layer_010.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 2) and color ? and layers
  _0: a rectangle with size projJ(^.layer_0.shape.size) + (2, 0) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at '(1, 0)
  _0101: ^.layer_010.shape at '(0, 1)
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 144.2 + 5736.3 = 5880.5
DL output with Mo: L = 222.8 + 4556.4 = 4779.2
DL input+output M: L = 367.0 + 10292.7 = 10659.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 2) and color ? and layers
  _0: a rectangle with size projJ(^.layer_0.shape.size) + (2, 0) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at '(1, 0)
  _0101: ^.layer_010.shape at '(0, 1)
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 222.8 + 4556.4 = 4779.2
DL input+output M: L = 336.9 + 4556.4 = 4893.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _0101: a rectangle with size (1,4) and color green and mask Full at (12,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (8,6)
diff: 
delta: (8,11)=1  (9,11)=1  (10,11)=1  (11,11)=1 
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask .x..|xxxx at (4,1)
  _010: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _0101: a rectangle with size (1,4) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (4,4) and color cyan and mask x...|.x..|.xx.|...x at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,4)
  _0111: a rectangle with size (4,2) and color blue and mask Full at (1,4)
  _01111: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
   (153.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _0101: a rectangle with size (1,4) and color green and mask Full at (12,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (8,6)
diff: 
delta: (8,11)=1  (9,11)=1  (10,11)=1  (11,11)=1 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _0101: a rectangle with size (1,4) and color green and mask Full at (12,7)
  _01: a rectangle with size (4,1) and color blue and mask Full at (8,11)
diff: 
delta: (8,6)=2  (9,6)=2  (10,6)=2  (11,6)=2 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _0101: a rectangle with size (4,1) and color red and mask Full at (8,6)
  _01: a rectangle with size (1,4) and color green and mask Full at (12,7)
diff: 
delta: (8,11)=1  (9,11)=1  (10,11)=1  (11,11)=1 
! 28 wrong pixels (generated / expected)

TRAIN 9aec4887.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _0101: a rectangle with size (1,3) and color red and mask Full at (10,2)
  _01: a rectangle with size (3,1) and color pink and mask Full at (7,1)
diff: 
delta: (7,5)=4  (8,5)=4  (9,5)=4 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask .x.|xxx at (3,1)
  _010: a rectangle with size (3,1) and color pink and mask Full at (1,0)
  _0101: a rectangle with size (1,3) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (1,3)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color green and mask Full at (0,2)
diff: 
delta:
   (137.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _0101: a rectangle with size (1,3) and color red and mask Full at (10,2)
  _01: a rectangle with size (3,1) and color pink and mask Full at (7,1)
diff: 
delta: (7,5)=4  (8,5)=4  (9,5)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _0101: a rectangle with size (1,3) and color red and mask Full at (10,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (7,5)
diff: 
delta: (7,1)=6  (8,1)=6  (9,1)=6 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _0101: a rectangle with size (3,1) and color pink and mask Full at (7,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,2)
diff: 
delta: (7,5)=4  (8,5)=4  (9,5)=4 
! 19 wrong pixels (generated / expected)

TRAIN 9aec4887.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _0101: a rectangle with size (1,4) and color blue and mask Full at (6,3)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (2,2)
diff: 
delta: (2,7)=6  (3,7)=6  (4,7)=6  (5,7)=6 
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask .x..|xxxx at (4,1)
  _010: a rectangle with size (4,1) and color yellow and mask Full at (1,0)
  _0101: a rectangle with size (1,4) and color orange and mask Full at (0,1)
  _01: a rectangle with size (4,4) and color cyan and mask x..x|.xx.|.x..|x... at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (4,4)
  _0111: a rectangle with size (4,2) and color pink and mask .x|.x|xx|.x at (1,4)
  _01111: a rectangle with size (2,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (164.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _0101: a rectangle with size (1,4) and color blue and mask Full at (6,3)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (2,2)
diff: 
delta: (2,7)=6  (3,7)=6  (4,7)=6  (5,7)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _0101: a rectangle with size (1,4) and color blue and mask Full at (6,3)
  _01: a rectangle with size (4,1) and color pink and mask Full at (2,7)
diff: 
delta: (2,2)=4  (3,2)=4  (4,2)=4  (5,2)=4 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _0101: a rectangle with size (4,1) and color yellow and mask Full at (2,2)
  _01: a rectangle with size (1,4) and color blue and mask Full at (6,3)
diff: 
delta: (2,7)=6  (3,7)=6  (4,7)=6  (5,7)=6 
! 27 wrong pixels (generated / expected)

TRAIN 9aec4887.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|x.xx.|.xxxx|..x..|xx.xx at (9,2)
  _010: a rectangle with size (1,5) and color blue and mask Full at (0,6)
  _0101: a rectangle with size (1,5) and color green and mask Full at (6,6)
  _01: a rectangle with size (5,1) and color red and mask Full at (1,5)
diff: 
delta: (1,11)=4  (2,11)=4  (3,11)=4  (4,11)=4  (5,11)=4 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|x.xx.|.xxxx|..x..|xx.xx at (9,2)
  _010: a rectangle with size (1,5) and color blue and mask Full at (0,6)
  _0101: a rectangle with size (1,5) and color green and mask Full at (6,6)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (1,11)
diff: 
delta: (1,5)=2  (2,5)=2  (3,5)=2  (4,5)=2  (5,5)=2 
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|x.xx.|.xxxx|..x..|xx.xx at (9,2)
  _010: a rectangle with size (1,5) and color blue and mask Full at (0,6)
  _0101: a rectangle with size (5,1) and color red and mask Full at (1,5)
  _01: a rectangle with size (1,5) and color green and mask Full at (6,6)
diff: 
delta: (1,11)=4  (2,11)=4  (3,11)=4  (4,11)=4  (5,11)=4 
! 37 wrong pixels (generated / expected)

TEST 9aec4887.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 4556.4 bits (4556.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-162] Checking task 9af7a82c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8954.0 = 8966.6
DL output with Mo: L = 12.6 + 16656.6 = 16669.2
DL input+output M: L = 25.2 + 25610.6 = 25635.8

# learning a model for train pairs
2.000	
1.594	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.203	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.974	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.814	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.705	OUT SPE ^.layer_0.pos = '(0, 0)
0.681	OUT SPE ^.layer_01.shape.size = projI(^.size) + (0, 1)
0.660	OUT SPE ^.layer_01.pos = '(0, 1)
0.639	OUT SPE ^.layer_011.pos = '(0, 2)
0.619	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.603	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape) + 3
0.585	OUT SPE ^.size.i = area(^.layer_0.shape) + 3
0.568	IN  SPE ^.layer_0.shape.mask = Full
0.554	OUT SPE ^.layer_0.shape.color = ^.color
0.547	OUT SPE ^.layer_0.shape.size.j = 1
0.539	OUT SPE ^.layer_0.shape.mask = Full
0.531	OUT SPE ^.layer_01.shape.mask = Full
0.523	OUT SPE ^.layer_011.shape.size.j = 1
0.515	OUT SPE ^.layer_011.shape.mask = Full
0.501	OUT SPE ^.size.j = area(^.layer_011.shape) * colorCount(^.grid)
0.495	OUT SPE ^.color = black
0.105	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape) + 3,area(^.layer_011.shape) * colorCount(^.grid)) and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) + 3,1) and color ^.color and mask Full at '(0, 0)
  _01: a rectangle with size projI(^.size) + (0, 1) and color ? and mask Full at '(0, 1)
  _011: a rectangle with size (?,1) and color ? and mask Full at '(0, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 81.0 + 3493.9 = 3574.9
DL output with Mo: L = 222.0 + 1384.3 = 1606.2
DL input+output M: L = 303.0 + 4878.2 = 5181.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape) + 3,area(^.layer_011.shape) * colorCount(^.grid)) and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) + 3,1) and color ^.color and mask Full at '(0, 0)
  _01: a rectangle with size projI(^.size) + (0, 1) and color ? and mask Full at '(0, 1)
  _011: a rectangle with size (?,1) and color ? and mask Full at '(0, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 81.0 + 0.0 = 81.0
DL output with Mo: L = 222.0 + 1384.3 = 1606.2
DL input+output M: L = 303.0 + 1384.3 = 1687.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _011: a point with color red at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _011: a point with color red at (1,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a point with color red at (1,0)
diff: 
delta:
! size mismatch, 4x3 instead of 5x3

TRAIN 9af7a82c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _011: a point with color green at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,4) and color black and layers
  _0: a rectangle with size (6,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (0,3)=3 
   (53.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _011: a point with color green at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _011: a point with color green at (0,0)
diff: 
delta:
! size mismatch, 5x4 instead of 6x4
>> Trial 3
data: a background with size (3,4) and color red and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a rectangle with size (3,4) and color yellow and mask ...x|...x|xxxx at (0,0)
  _011: a point with color green at (0,0)
diff: 
delta:
! size mismatch, 5x4 instead of 6x4

TRAIN 9af7a82c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,3) and color green and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _011: a point with color red at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color cyan and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,3)=2 
   (53.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color green and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _011: a point with color red at (0,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color green and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _011: a point with color yellow at (2,2)
diff: 
delta: (3,2)=4 
! size mismatch, 4x4 instead of 5x4

TRAIN 9af7a82c.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _011: a point with color red at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,2)
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _011: a point with color red at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (1,0)
  _011: a point with color red at (1,1)
diff: 
delta:
! size mismatch, 5x3 instead of 6x3

TRAIN 9af7a82c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _011: a point with color red at (1,3)
diff: 
delta: (2,1)=3  (2,2)=3  (2,3)=4 
! size mismatch, 5x5 instead of 6x5

TEST 9af7a82c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 45.4 sec (45.4 sec/task)
bits-train-error = 1384.3 bits (1384.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-161] Checking task 9d9215db.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6002.2 = 6014.8
DL output with Mo: L = 12.6 + 41689.9 = 41702.5
DL input+output M: L = 25.2 + 47692.1 = 47717.3

# learning a model for train pairs
2.000	
1.899	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.797	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.693	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.586	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.558	OUT ADD ^.layer_0 = ^.layer_0
1.530	OUT ADD ^.layer_01 = ^.layer_01
1.502	OUT ADD ^.layer_011 = ^.layer_011
1.474	OUT ADD ^.layer_0111 = ^.layer_0111
1.456	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
1.437	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
1.419	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
1.401	OUT ADD ^.layer_001 = ^.layer_0.shape at (?,?)
1.373	IN  SPE ^.layer_0111.shape.color = blue
1.356	OUT SPE ^.size = ^.size
1.344	IN  SPE ^.color = black
1.335	OUT SPE ^.layer_010.pos = ^.layer_01.pos - translationSym(flipWidth, ^.layer_01, ^.layer_0)
1.331	OUT SPE ^.layer_00.pos.i = 1
1.326	OUT SPE ^.layer_001.pos.j = 1
0.793	
0.793	IN  GEN ^.layer_0111.shape.color = ?
0.793	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0.shape at (1,?)
  _001: ^.layer_0.shape at (?,1)
  _0: ^.layer_0
  _010: ^.layer_01.shape at ^.layer_01.pos - translationSym(flipWidth, ^.layer_01, ^.layer_0)
  _01: ^.layer_01
  _0110: ^.layer_011.shape at (?,?)
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color blue at (?,?)

DL input  with Mi: L = 80.4 + 3204.2 = 3284.6
DL output with Mo: L = 152.1 + 32377.7 = 32529.8
DL input+output M: L = 232.5 + 35581.8 = 35814.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0.shape at (1,?)
  _001: ^.layer_0.shape at (?,1)
  _0: ^.layer_0
  _010: ^.layer_01.shape at ^.layer_01.pos - translationSym(flipWidth, ^.layer_01, ^.layer_0)
  _01: ^.layer_01
  _0110: ^.layer_011.shape at (?,?)
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 0.0 = 77.0
DL output with Mo: L = 152.1 + 32377.7 = 32529.8
DL input+output M: L = 229.1 + 32377.7 = 32606.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (3,1)
  _0111: a point with color red at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (19,19) and color black and layers
  _00: a point with color cyan at (1,17)
  _001: a point with color cyan at (17,1)
  _0: a point with color cyan at (1,1)
  _010: a point with color blue at (1,7)
  _01: a point with color blue at (1,3)
  _0110: a point with color blue at (1,5)
  _011: a point with color blue at (3,1)
  _0111: a point with color red at (3,3)
diff: 
delta: (1,9)=1  (1,11)=1  (1,13)=1  (1,15)=1  (3,15)=2  (3,17)=1  (5,1)=1  (5,17)=1  (7,1)=1  (7,17)=1  (9,1)=1  (9,17)=1  (11,1)=1  (11,17)=1  (13,1)=1  (13,17)=1  (15,1)=1  (15,3)=2  (15,15)=2  (15,17)=1  (17,3)=1  (17,5)=1  (17,7)=1  (17,9)=1  (17,11)=1  (17,13)=1  (17,15)=1  (17,17)=8 
   (1131.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (3,1)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (3,1)
  _011: a point with color blue at (1,3)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 35 wrong pixels (generated / expected)

TRAIN 9d9215db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color blue at (3,13)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
   (0.0 bits)
data: a background with size (19,19) and color black and layers
  _00: a point with color green at (1,1)
  _001: a point with color green at (17,1)
  _0: a point with color green at (1,17)
  _010: a point with color blue at (3,5)
  _01: a point with color blue at (3,13)
  _0110: a point with color yellow at (3,3)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta: (3,7)=1  (3,9)=1  (3,11)=1  (5,3)=1  (7,3)=1  (7,15)=1  (9,3)=1  (9,15)=1  (11,3)=1  (11,15)=1  (13,3)=1  (13,15)=1  (15,3)=4  (15,5)=1  (15,7)=1  (15,9)=1  (15,11)=1  (15,13)=1  (15,15)=4  (17,17)=3 
   (818.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color blue at (3,13)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color blue at (3,13)
  _011: a point with color blue at (5,15)
  _0111: a point with color yellow at (3,15)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color yellow at (3,15)
  _011: a point with color blue at (3,13)
  _0111: a point with color blue at (5,15)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN 9d9215db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
   (0.0 bits)
data: a background with size (19,19) and color black and layers
  _00: a point with color yellow at (1,17)
  _001: a point with color yellow at (17,1)
  _0: a point with color yellow at (1,1)
  _010: a point with color green at (1,7)
  _01: a point with color green at (1,3)
  _0110: a point with color green at (1,5)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (1,9)=3  (1,11)=3  (1,13)=3  (1,15)=3  (3,15)=1  (3,17)=3  (5,1)=3  (5,5)=8  (5,13)=8  (5,17)=3  (7,1)=3  (7,17)=3  (9,1)=3  (9,17)=3  (11,1)=3  (11,17)=3  (13,1)=3  (13,5)=8  (13,13)=8  (13,17)=3  (15,1)=3  (15,3)=1  (15,15)=1  (15,17)=3  (17,3)=3  (17,5)=3  (17,7)=3  (17,9)=3  (17,11)=3  (17,13)=3  (17,15)=3  (17,17)=4 
   (1288.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color green at (3,1)
  _0111: a point with color cyan at (5,5)
diff: 
delta: (3,3)=1 
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (3,1)
diff: 
delta: (5,5)=8 
! 38 wrong pixels (generated / expected)

TRAIN 9d9215db.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color cyan at (13,7)
  _0111: a point with color green at (15,1)
diff: 
delta: (15,3)=2  (17,1)=1  (17,3)=3 
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color cyan at (13,7)
  _0111: a point with color red at (15,3)
diff: 
delta: (15,1)=3  (17,1)=1  (17,3)=3 
! 51 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color green at (15,1)
  _0111: a point with color cyan at (13,7)
diff: 
delta: (15,3)=2  (17,1)=1  (17,3)=3 
! 51 wrong pixels (generated / expected)

TEST 9d9215db.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 32377.7 bits (32377.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-160] Checking task 9dfd6313.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7969.8 = 7982.4
DL output with Mo: L = 12.6 + 7969.8 = 7982.4
DL input+output M: L = 25.2 + 15939.6 = 15964.8

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = applySym(flipDiag1, ^.grid)
0.658	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.534	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  SPE ^.layer_0.shape.color = grey
0.496	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.484	IN  SPE ^.layer_01.shape.mask = Full
0.472	IN  SPE ^.layer_011.shape.mask = Full
0.462	IN  SPE ^.color = black
0.014	
0.010	IN  DEL ^.layer_0
0.007	IN  DEL ^.layer_011
0.003	IN  DEL ^.layer_01
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(flipDiag1, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 94.7 + 3581.3 = 3676.0
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 109.6 + 3581.3 = 3690.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(flipDiag1, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=5# (1,0)=3  (1,1)=5# (2,2)=5#
   (0.0 bits)
data: 
5#3 0 
0 5#0 
0 0 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=5# (1,0)=3  (1,1)=5# (2,2)=5#
correct output grid

TRAIN 9dfd6313.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (4,4) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=6  (2,2)=5# (3,0)=6  (3,2)=4  (3,3)=5#
   (0.0 bits)
data: 
5#0 6 6 
0 5#0 0 
0 0 5#4 
0 0 0 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=6  (2,2)=5# (3,0)=6  (3,2)=4  (3,3)=5#
correct output grid

TRAIN 9dfd6313.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=8  (2,1)=8  (2,2)=5# (3,1)=2  (3,3)=5# (4,1)=2  (4,3)=1  (4,4)=5#
   (0.0 bits)
data: 
5#0 8 0 0 
0 5#8 2 2 
0 0 5#0 0 
0 0 0 5#1 
0 0 0 0 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=8  (2,1)=8  (2,2)=5# (3,1)=2  (3,3)=5# (4,1)=2  (4,3)=1  (4,4)=5#
correct output grid

TRAIN 9dfd6313.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=3  (2,1)=3  (2,2)=5# (3,3)=5# (4,0)=2  (4,2)=8  (4,3)=8  (4,4)=5# (5,0)=2  (5,2)=6  (5,5)=5#
correct output grid

TEST 9dfd6313.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-159] Checking task 9ecd008a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 216461.0 = 216473.6
DL output with Mo: L = 12.6 + 4843.1 = 4855.7
DL input+output M: L = 25.2 + 221304.1 = 221329.3

# learning a model for train pairs
2.000	
1.756	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.587	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.457	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.374	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.296	OUT SPE ^.size = '(3, 3)
1.250	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.210	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.172	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.131	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
1.079	OUT SPE ^.layer_0.shape.mask = Full
1.059	OUT SPE ^.layer_011.pos.j = ^.layer_0111.pos.j - 2
1.042	OUT SPE ^.layer_0.shape.size.i = ^.layer_0111.shape.size.i / '2
1.026	OUT SPE ^.layer_01.pos.j = average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 2
1.011	OUT SPE ^.layer_01.pos.i = average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 1
0.997	OUT SPE ^.layer_011.pos.i = average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 1
0.984	OUT SPE ^.layer_0.shape.size.j = min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) - ^.layer_0111.shape.size.i
0.972	OUT SPE ^.layer_0.pos.i = min(^.layer_011.pos.j, ^.layer_0111.pos.j) - 2
0.962	OUT SPE ^.layer_0.pos.j = average(^.layer_011.pos.j, ^.layer_01111.pos.j) - ^.layer_0.shape.size.j
0.961	IN  SPE ^.layer_011.shape.mask = Full
0.945	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.945	IN  SPE ^.layer_0111.shape.mask = Full
0.294	
0.294	IN  DEL ^.layer_011111
0.293	IN  GEN ^.layer_0111.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (^.layer_0111.shape.size.i / '2,min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) - ^.layer_0111.shape.size.i) and color ^.layer_0.shape.color and mask Full at (min(^.layer_011.pos.j, ^.layer_0111.pos.j) - 2,average(^.layer_011.pos.j, ^.layer_01111.pos.j) - ^.layer_0.shape.size.j)
  _01: a point with color ? at (average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 1,average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 2)
  _011: a point with color ? at (average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 1,^.layer_0111.pos.j - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 165.5 + 140907.9 = 141073.5
DL output with Mo: L = 457.3 + 964.7 = 1422.0
DL input+output M: L = 622.8 + 141872.6 = 142495.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (^.layer_0111.shape.size.i / '2,min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) - ^.layer_0111.shape.size.i) and color ^.layer_0.shape.color and mask Full at (min(^.layer_011.pos.j, ^.layer_0111.pos.j) - 2,average(^.layer_011.pos.j, ^.layer_01111.pos.j) - ^.layer_0.shape.size.j)
  _01: a point with color ? at (average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 1,average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 2)
  _011: a point with color ? at (average(^.layer_01.pos.j, ^.layer_01111.pos.j) - 1,^.layer_0111.pos.j - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 0.0 = 139.9
DL output with Mo: L = 457.3 + 964.7 = 1422.0
DL input+output M: L = 597.2 + 964.7 = 1561.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask ..xx|..xx|xx..|.x.. at (2,10)
  _01: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x........x...|..xx........xx..|.x............x.|xx............xx|xx............xx|.x............x.|..xx........xx..|...x........x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _011: a rectangle with size (4,12) and color yellow and mask Full at (10,2)
  _0111: a rectangle with size (3,3) and color black and mask Full at (5,4)
  _01111: a rectangle with size (4,4) and color green and mask .xx.|...x|x..x|.xx. at (6,6)
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,2)=4  (2,3)=4  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,2)=4  (3,3)=4  (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,14)=7# (3,15)=5# (4,4)=4  (4,5)=4  (5,1)=7# (5,7)=9# (5,8)=9# (5,10)=7# (5,14)=7# (6,2)=2  (6,3)=9# (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,6)=1  (10,7)=9# (10,8)=9# (10,9)=1  (10,10)=7# (10,14)=7# (11,2)=1  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,13)=1  (12,0)=5# (12,1)=7# (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,11)=1  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
   (0.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a point with color brown at (2,1)
  _011: a point with color green at (2,2)
diff: 
delta: (0,1)=7#
   (56.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask ..xx|..xx|xx..|.x.. at (2,10)
  _01: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x........x...|..xx........xx..|.x............x.|xx............xx|xx............xx|.x............x.|..xx........xx..|...x........x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _011: a rectangle with size (4,12) and color yellow and mask Full at (10,2)
  _0111: a rectangle with size (3,3) and color black and mask Full at (5,4)
  _01111: a rectangle with size (4,4) and color green and mask .xx.|...x|x..x|.xx. at (6,6)
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,2)=4  (2,3)=4  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,2)=4  (3,3)=4  (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,14)=7# (3,15)=5# (4,4)=4  (4,5)=4  (5,1)=7# (5,7)=9# (5,8)=9# (5,10)=7# (5,14)=7# (6,2)=2  (6,3)=9# (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,6)=1  (10,7)=9# (10,8)=9# (10,9)=1  (10,10)=7# (10,14)=7# (11,2)=1  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,13)=1  (12,0)=5# (12,1)=7# (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,11)=1  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x........x...|..xx........xx..|.x............x.|xx............xx|xx............xx|.x............x.|..xx........xx..|...x........x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (4,12) and color yellow and mask Full at (10,2)
  _011: a rectangle with size (3,3) and color black and mask Full at (5,4)
  _0111: a rectangle with size (2,12) and color yellow and mask Full at (2,2)
  _01111: a rectangle with size (4,4) and color green and mask .xx.|...x|x..x|.xx. at (6,6)
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,4)=1  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,11)=1  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,14)=7# (3,15)=5# (4,4)=4  (4,5)=4  (4,10)=4  (4,11)=4  (5,1)=7# (5,7)=9# (5,8)=9# (5,10)=7# (5,11)=4  (5,14)=7# (6,2)=2  (6,3)=9# (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,6)=1  (10,7)=9# (10,8)=9# (10,9)=1  (10,10)=7# (10,14)=7# (11,2)=1  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,13)=1  (12,0)=5# (12,1)=7# (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,11)=1  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
! 9 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (4,4) and color green and mask xxx.|xx.x|x...|.x.. at (0,0)
  _01: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _011: a rectangle with size (3,3) and color black and mask Full at (8,4)
  _0111: a rectangle with size (2,8) and color orange and mask Full at (0,4)
  _01111: a rectangle with size (2,8) and color orange and mask Full at (14,4)
diff: 
delta: (0,13)=3  (0,14)=3  (0,15)=3  (1,7)=1  (1,8)=1  (1,12)=3  (1,14)=3  (1,15)=3  (2,2)=8  (2,3)=8  (2,6)=9# (2,7)=7# (2,8)=7# (2,9)=9# (2,12)=8  (2,13)=8  (2,15)=3  (3,2)=8  (3,3)=5# (3,6)=7# (3,7)=9# (3,8)=9# (3,9)=7# (3,12)=5# (3,13)=8  (3,14)=3  (4,0)=7# (4,1)=7# (4,4)=3  (4,5)=3  (4,6)=5# (4,9)=5# (4,10)=3  (4,11)=3  (4,14)=7# (4,15)=7# (5,0)=7# (5,1)=7# (5,4)=3  (5,5)=3  (5,10)=3  (5,11)=3  (5,14)=7# (5,15)=7# (6,2)=9# (6,3)=7# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,12)=7# (6,13)=9# (7,2)=7# (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,13)=7# (8,2)=7# (8,3)=9# (8,7)=4  (8,8)=4  (8,12)=9# (8,13)=7# (9,2)=9# (9,3)=7# (9,9)=6  (9,11)=5# (9,12)=7# (9,13)=9# (10,0)=7# (10,1)=7# (10,10)=3  (10,11)=3  (10,14)=7# (10,15)=7# (11,0)=7# (11,1)=7# (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (11,14)=7# (11,15)=7# (12,1)=3  (12,2)=8  (12,3)=5# (12,6)=7# (12,7)=9# (12,8)=9# (12,9)=7# (12,12)=5# (12,13)=8  (12,14)=3  (13,0)=3  (13,2)=8  (13,3)=8  (13,6)=9# (13,7)=7# (13,8)=7# (13,9)=9# (13,12)=8  (13,13)=8  (13,15)=3  (14,0)=3  (14,1)=3  (14,3)=3  (14,7)=1  (14,8)=1  (14,12)=3  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,13)=3  (15,14)=3  (15,15)=3 
   (0.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,0)
  _01: a point with color grey at (1,0)
  _011: a point with color pink at (1,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (4,4) and color green and mask xxx.|xx.x|x...|.x.. at (0,0)
  _01: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _011: a rectangle with size (3,3) and color black and mask Full at (8,4)
  _0111: a rectangle with size (2,8) and color orange and mask Full at (0,4)
  _01111: a rectangle with size (2,8) and color orange and mask Full at (14,4)
diff: 
delta: (0,13)=3  (0,14)=3  (0,15)=3  (1,7)=1  (1,8)=1  (1,12)=3  (1,14)=3  (1,15)=3  (2,2)=8  (2,3)=8  (2,6)=9# (2,7)=7# (2,8)=7# (2,9)=9# (2,12)=8  (2,13)=8  (2,15)=3  (3,2)=8  (3,3)=5# (3,6)=7# (3,7)=9# (3,8)=9# (3,9)=7# (3,12)=5# (3,13)=8  (3,14)=3  (4,0)=7# (4,1)=7# (4,4)=3  (4,5)=3  (4,6)=5# (4,9)=5# (4,10)=3  (4,11)=3  (4,14)=7# (4,15)=7# (5,0)=7# (5,1)=7# (5,4)=3  (5,5)=3  (5,10)=3  (5,11)=3  (5,14)=7# (5,15)=7# (6,2)=9# (6,3)=7# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,12)=7# (6,13)=9# (7,2)=7# (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,13)=7# (8,2)=7# (8,3)=9# (8,7)=4  (8,8)=4  (8,12)=9# (8,13)=7# (9,2)=9# (9,3)=7# (9,9)=6  (9,11)=5# (9,12)=7# (9,13)=9# (10,0)=7# (10,1)=7# (10,10)=3  (10,11)=3  (10,14)=7# (10,15)=7# (11,0)=7# (11,1)=7# (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (11,14)=7# (11,15)=7# (12,1)=3  (12,2)=8  (12,3)=5# (12,6)=7# (12,7)=9# (12,8)=9# (12,9)=7# (12,12)=5# (12,13)=8  (12,14)=3  (13,0)=3  (13,2)=8  (13,3)=8  (13,6)=9# (13,7)=7# (13,8)=7# (13,9)=9# (13,12)=8  (13,13)=8  (13,15)=3  (14,0)=3  (14,1)=3  (14,3)=3  (14,7)=1  (14,8)=1  (14,12)=3  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,13)=3  (15,14)=3  (15,15)=3 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (4,4) and color green and mask xxx.|xx.x|x...|.x.. at (0,0)
  _01: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _011: a rectangle with size (2,8) and color orange and mask Full at (0,4)
  _0111: a rectangle with size (3,3) and color black and mask Full at (8,4)
  _01111: a rectangle with size (2,8) and color orange and mask Full at (14,4)
diff: 
delta: (0,13)=3  (0,14)=3  (0,15)=3  (1,7)=1  (1,8)=1  (1,12)=3  (1,14)=3  (1,15)=3  (2,2)=8  (2,3)=8  (2,6)=9# (2,7)=7# (2,8)=7# (2,9)=9# (2,12)=8  (2,13)=8  (2,15)=3  (3,2)=8  (3,3)=5# (3,6)=7# (3,7)=9# (3,8)=9# (3,9)=7# (3,12)=5# (3,13)=8  (3,14)=3  (4,0)=7# (4,1)=7# (4,4)=3  (4,5)=3  (4,6)=5# (4,9)=5# (4,10)=3  (4,11)=3  (4,14)=7# (4,15)=7# (5,0)=7# (5,1)=7# (5,4)=3  (5,5)=3  (5,10)=3  (5,11)=3  (5,14)=7# (5,15)=7# (6,2)=9# (6,3)=7# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,12)=7# (6,13)=9# (7,2)=7# (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,13)=7# (8,2)=7# (8,3)=9# (8,7)=4  (8,8)=4  (8,12)=9# (8,13)=7# (9,2)=9# (9,3)=7# (9,9)=6  (9,11)=5# (9,12)=7# (9,13)=9# (10,0)=7# (10,1)=7# (10,10)=3  (10,11)=3  (10,14)=7# (10,15)=7# (11,0)=7# (11,1)=7# (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (11,14)=7# (11,15)=7# (12,1)=3  (12,2)=8  (12,3)=5# (12,6)=7# (12,7)=9# (12,8)=9# (12,9)=7# (12,12)=5# (12,13)=8  (12,14)=3  (13,0)=3  (13,2)=8  (13,3)=8  (13,6)=9# (13,7)=7# (13,8)=7# (13,9)=9# (13,12)=8  (13,13)=8  (13,15)=3  (14,0)=3  (14,1)=3  (14,3)=3  (14,7)=1  (14,8)=1  (14,12)=3  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,13)=3  (15,14)=3  (15,15)=3 
! 8 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
  _01: a rectangle with size (5,5) and color green and mask .x.xx|x.x..|.xxx.|x.x..|x.... at (0,0)
  _011: a rectangle with size (3,3) and color black and mask Full at (7,10)
  _0111: a rectangle with size (4,12) and color pink and mask Full at (6,2)
  _01111: a rectangle with size (12,4) and color pink and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,5)=9# (0,10)=9# (0,11)=3  (0,12)=3  (0,14)=3  (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,13)=3  (1,14)=9# (1,15)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,1)=6  (3,3)=6  (3,5)=8  (3,10)=8  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (4,15)=3  (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (7,1)=8  (7,5)=6  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,14)=8  (8,1)=8  (8,5)=6  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,14)=8  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (11,15)=3  (12,0)=3  (12,1)=6  (12,2)=3  (12,3)=6  (12,5)=8  (12,10)=8  (12,12)=6  (12,13)=3  (12,14)=6  (12,15)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=3  (14,1)=9# (14,2)=3  (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,13)=3  (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,11)=3  (15,12)=3  (15,14)=3  (15,15)=9#
   (0.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _01: a point with color red at (2,1)
  _011: a point with color blue at (2,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
  _01: a rectangle with size (5,5) and color green and mask .x.xx|x.x..|.xxx.|x.x..|x.... at (0,0)
  _011: a rectangle with size (3,3) and color black and mask Full at (7,10)
  _0111: a rectangle with size (4,12) and color pink and mask Full at (6,2)
  _01111: a rectangle with size (12,4) and color pink and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,5)=9# (0,10)=9# (0,11)=3  (0,12)=3  (0,14)=3  (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,13)=3  (1,14)=9# (1,15)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,1)=6  (3,3)=6  (3,5)=8  (3,10)=8  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (4,15)=3  (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (7,1)=8  (7,5)=6  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,14)=8  (8,1)=8  (8,5)=6  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,14)=8  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (11,15)=3  (12,0)=3  (12,1)=6  (12,2)=3  (12,3)=6  (12,5)=8  (12,10)=8  (12,12)=6  (12,13)=3  (12,14)=6  (12,15)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=3  (14,1)=9# (14,2)=3  (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,13)=3  (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,11)=3  (15,12)=3  (15,14)=3  (15,15)=9#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask .x.xx|x.x..|.xxx.|x.x..|x.... at (0,0)
  _01: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
  _011: a rectangle with size (3,3) and color black and mask Full at (7,10)
  _0111: a rectangle with size (4,12) and color pink and mask Full at (6,2)
  _01111: a rectangle with size (12,4) and color pink and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,5)=9# (0,10)=9# (0,11)=3  (0,12)=3  (0,14)=3  (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,13)=3  (1,14)=9# (1,15)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,1)=6  (3,3)=6  (3,5)=8  (3,10)=8  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (4,15)=3  (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (7,1)=8  (7,5)=6  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,14)=8  (8,1)=8  (8,5)=6  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,14)=8  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (11,15)=3  (12,0)=3  (12,1)=6  (12,2)=3  (12,3)=6  (12,5)=8  (12,10)=8  (12,12)=6  (12,13)=3  (12,14)=6  (12,15)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=3  (14,1)=9# (14,2)=3  (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,13)=3  (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,11)=3  (15,12)=3  (15,14)=3  (15,15)=9#
! 9 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST 9ecd008a.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 24.2 sec (24.2 sec/task)
bits-train-error = 964.7 bits (964.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-158] Checking task 9edfc990.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 132687.0 = 132699.7
DL output with Mo: L = 12.6 + 139817.5 = 139830.1
DL input+output M: L = 25.2 + 272504.5 = 272529.8

# learning a model for train pairs
2.000	
1.947	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.922	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.892	OUT ADD ^.layer_01 = ^.layer_0
1.871	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.843	OUT ADD ^.layer_00 = ^.layer_00
1.820	OUT ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.803	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.778	OUT ADD ^.layer_001 = ^.layer_01
1.763	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.828	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_00
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 124164.7 = 124253.9
DL output with Mo: L = 116.4 + 115494.7 = 115611.1
DL input+output M: L = 205.7 + 239659.4 = 239865.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_00
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 51.7 = 141.0
DL output with Mo: L = 116.4 + 115494.7 = 115611.1
DL input+output M: L = 205.7 + 115546.4 = 115752.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _0: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _01: a rectangle with size (1,2) and color brown and mask Full at (8,0)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (0.0 bits)
data: a background with size (13,13) and color blue and layers
  _000: a rectangle with size (1,2) and color black and mask Full at (5,11)
  _00: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _001: a rectangle with size (1,2) and color brown and mask Full at (8,0)
  _0: a rectangle with size (1,2) and color brown and mask Full at (10,6)
  _010: a rectangle with size (1,3) and color cyan and mask Full at (2,10)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,11)=0  (0,12)=9# (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,11)=0  (3,2)=8  (3,3)=6  (3,5)=6  (3,11)=4  (4,0)=3  (4,1)=6  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,0)=0  (5,1)=8  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (2370.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _0: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _01: a rectangle with size (1,2) and color brown and mask Full at (8,0)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _0: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _01: a rectangle with size (1,2) and color brown and mask Full at (10,6)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,0)=9# (8,1)=9# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! size mismatch, 10x10 instead of 13x13

TRAIN 9edfc990.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (1,3) and color grey and mask Full at (0,6)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
   (3.2 bits)
data: a background with size (15,15) and color black and layers
  _000: a rectangle with size (15,15) and color blue and mask ...........xxxx|.....xxx..xxx.x|...xxx..xxx.x.x|...x.xxx.x..x..|....xx....xx...|....x.xx.x.xx..|......x.xx.x...|..xx.xxxxx.xxxx|..xx.xx.x..xxxx|xxxxx.xxx.x.x..|xx.x..x.xxx.xx.|..xx..xx.xx..xx|xxxx...x...xxx.|x.x.....xxxx..x|x......xxx.xxxx at (0,0)
  _00: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _001: a rectangle with size (1,3) and color grey and mask Full at (0,6)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (14,2)
  _010: a rectangle with size (1,14) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,1)=9# (2,2)=2  (2,6)=6  (3,0)=6  (3,2)=4  (3,4)=4  (3,8)=6  (3,10)=6  (3,11)=9# (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,10)=2  (8,0)=3  (8,1)=3  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,4)=4  (10,5)=9# (10,7)=7# (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,4)=0  (14,5)=6 
   (3526.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _0: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _01: a rectangle with size (1,3) and color grey and mask Full at (0,6)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 9edfc990.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color black and layers
  _00: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _0: a rectangle with size (4,3) and color brown and mask ..x|.x.|.x.|x.. at (7,7)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (2.0 bits)
data: a background with size (16,16) and color blue and layers
  _000: a rectangle with size (4,7) and color black and mask .x.....|x.xx...|..xxx.x|.....x. at (7,0)
  _00: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _001: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _0: a rectangle with size (3,3) and color black and mask Full at (11,10)
  _010: a rectangle with size (1,4) and color black and mask Full at (15,12)
  _01: a rectangle with size (4,3) and color brown and mask ..x|.x.|.x.|x.. at (7,7)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,3)=0  (0,4)=4  (0,5)=0  (0,6)=0  (0,7)=6  (0,13)=6  (0,14)=0  (0,15)=5# (1,2)=3  (1,3)=3  (1,4)=4  (1,5)=0  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,0)=0  (3,1)=2  (3,2)=6  (3,7)=3  (3,11)=8  (3,12)=0  (3,13)=4  (3,14)=0  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,13)=0  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,11)=7# (7,12)=3  (7,13)=0  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,8)=0  (11,9)=2  (12,0)=9# (12,4)=6  (12,6)=8  (12,8)=3  (12,9)=3  (12,15)=4  (13,0)=0  (13,1)=4  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,0)=0  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,8)=5# (14,9)=9# (14,11)=8  (14,12)=7# (14,13)=0  (14,14)=2  (14,15)=7# (15,0)=0  (15,1)=9# (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (5652.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _00: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _0: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _01: a rectangle with size (4,3) and color brown and mask ..x|.x.|.x.|x.. at (7,7)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN 9edfc990.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _00: a rectangle with size (2,3) and color brown and mask xxx|.x. at (4,12)
  _0: a rectangle with size (3,2) and color red and mask xx|.x|.x at (3,7)
  _01: a rectangle with size (3,3) and color yellow and mask x..|.x.|.xx at (7,13)
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,10)=6  (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,11)=6  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (2,12)=6  (3,1)=5# (3,2)=8  (3,4)=9# (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,4)=7# (14,5)=7# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,6)=7# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! size mismatch, 10x10 instead of 16x16

TEST 9edfc990.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 115494.7 bits (115494.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-157] Checking task 9f236235.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 180333.3 = 180345.9
DL output with Mo: L = 12.6 + 5798.7 = 5811.3
DL input+output M: L = 25.2 + 186132.0 = 186157.2

# learning a model for train pairs
2.000	
1.511	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.042	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.873	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.790	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.708	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.637	OUT SPE ^.size = ^.layer_011.shape.size
0.573	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.546	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.525	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.512	OUT SPE ^.color = black
0.512	IN  SPE ^.layer_01.shape.mask = Full
0.511	IN  SPE ^.layer_011.shape.mask = Full
0.511	IN  SPE ^.layer_0111.shape.mask = Full
0.510	IN  SPE ^.layer_01111.shape.mask = Full
0.510	IN  SPE ^.color = black
0.400	
0.400	IN  DEL ^.layer_01111
0.400	IN  DEL ^.layer_0111
0.400	IN  GEN ^.layer_011.shape.mask = ?
0.400	IN  GEN ^.layer_01.shape.mask = ?
0.400	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 143.0 + 19787.5 = 19930.5
DL output with Mo: L = 63.3 + 2255.7 = 2319.0
DL input+output M: L = 206.3 + 22043.3 = 22249.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 63.3 + 2255.7 = 2319.0
DL input+output M: L = 152.6 + 2255.7 = 2408.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color red and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (15,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,0)
diff: 
delta: (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (6,5)=3  (6,6)=3  (6,7)=3  (6,8)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask ..x|.x.|x..|xxx at (0,1)
diff: 
delta:
   (36.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color red and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (15,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,0)
diff: 
delta: (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (6,5)=3  (6,6)=3  (6,7)=3  (6,8)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3 
! 10 wrong pixels (generated / expected)

TRAIN 9f236235.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color cyan and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color red and mask Full at (5,0)
diff: 
delta: (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (8,5)=1  (8,6)=1  (8,7)=1  (8,8)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (12,10)=1  (12,11)=1  (12,12)=1  (12,13)=1  (13,10)=1  (13,11)=1  (13,12)=1  (13,13)=1  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,2)
diff: 
delta: (1,2)=1  (2,1)=1  (3,0)=3 
   (130.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color cyan and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color red and mask Full at (5,0)
diff: 
delta: (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,8)=1  (8,5)=1  (8,6)=1  (8,7)=1  (8,8)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (12,10)=1  (12,11)=1  (12,12)=1  (12,13)=1  (13,10)=1  (13,11)=1  (13,12)=1  (13,13)=1  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
! 9 wrong pixels (generated / expected)

TRAIN 9f236235.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,7) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (0,1)
diff: 
delta: (2,0)=4 
   (59.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,7) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
! 4 wrong pixels (generated / expected)

TRAIN 9f236235.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color cyan and mask .....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (23,5) and color green and mask Full at (0,6)
  _011: a rectangle with size (5,23) and color blue and mask Full at (0,0)
diff: 
delta: (12,0)=2  (12,1)=2  (12,2)=2  (12,3)=2  (12,4)=2  (12,18)=2  (12,19)=2  (12,20)=2  (12,21)=2  (12,22)=2  (13,0)=2  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (13,18)=2  (13,19)=2  (13,20)=2  (13,21)=2  (13,22)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,18)=2  (14,19)=2  (14,20)=2  (14,21)=2  (14,22)=2  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=2  (15,18)=2  (15,19)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=2  (16,1)=2  (16,2)=2  (16,3)=2  (16,4)=2  (16,18)=2  (16,19)=2  (16,20)=2  (16,21)=2  (16,22)=2 
! size mismatch, 5x23 instead of 4x4
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,5) and color green and mask Full at (0,6)
  _01: a rectangle with size (23,23) and color cyan and mask .....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x..... at (0,0)
  _011: a rectangle with size (5,23) and color blue and mask Full at (0,0)
diff: 
delta: (5,6)=8  (5,7)=8  (5,8)=8  (5,9)=8  (5,10)=8  (11,6)=8  (11,7)=8  (11,8)=8  (11,9)=8  (11,10)=8  (12,0)=2  (12,1)=2  (12,2)=2  (12,3)=2  (12,4)=2  (12,18)=2  (12,19)=2  (12,20)=2  (12,21)=2  (12,22)=2  (13,0)=2  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (13,18)=2  (13,19)=2  (13,20)=2  (13,21)=2  (13,22)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,18)=2  (14,19)=2  (14,20)=2  (14,21)=2  (14,22)=2  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=2  (15,18)=2  (15,19)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=2  (16,1)=2  (16,2)=2  (16,3)=2  (16,4)=2  (16,18)=2  (16,19)=2  (16,20)=2  (16,21)=2  (16,22)=2  (17,6)=8  (17,7)=8  (17,8)=8  (17,9)=8  (17,10)=8 
! size mismatch, 5x23 instead of 4x4
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color cyan and mask .....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (5,23) and color blue and mask Full at (0,0)
  _011: a rectangle with size (17,5) and color green and mask Full at (6,6)
diff: 
delta: (0,6)=3  (0,7)=3  (0,8)=3  (0,9)=3  (0,10)=3  (1,6)=3  (1,7)=3  (1,8)=3  (1,9)=3  (1,10)=3  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (12,0)=2  (12,1)=2  (12,2)=2  (12,3)=2  (12,4)=2  (12,18)=2  (12,19)=2  (12,20)=2  (12,21)=2  (12,22)=2  (13,0)=2  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (13,18)=2  (13,19)=2  (13,20)=2  (13,21)=2  (13,22)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,18)=2  (14,19)=2  (14,20)=2  (14,21)=2  (14,22)=2  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=2  (15,18)=2  (15,19)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=2  (16,1)=2  (16,2)=2  (16,3)=2  (16,4)=2  (16,18)=2  (16,19)=2  (16,20)=2  (16,21)=2  (16,22)=2 
! size mismatch, 17x5 instead of 4x4

TEST 9f236235.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.7 sec (38.7 sec/task)
bits-train-error = 2255.7 bits (2255.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-156] Checking task a1570a43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24306.7 = 24319.3
DL output with Mo: L = 12.6 + 24306.7 = 24319.3
DL input+output M: L = 25.2 + 48613.4 = 48638.6

# learning a model for train pairs
2.000	
1.391	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.694	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.661	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.599	OUT ADD ^.layer_01 = ^.layer_01
0.556	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.512	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.467	OUT ADD ^.layer_0111 = ^.layer_01.shape at (?,?)
0.433	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.399	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.363	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.331	OUT SPE ^.size = ^.size
0.313	OUT SPE ^.layer_0111 = ^.layer_0111
0.295	OUT SPE ^.layer_011 = ^.layer_011
0.277	OUT SPE ^.layer_010 = ^.layer_01111
0.260	OUT SPE ^.layer_0.pos = ^.layer_01.pos + (1, 1)
0.251	IN  SPE ^.layer_0.shape.color = red
0.242	IN  SPE ^.layer_01.shape.color = green
0.232	IN  SPE ^.layer_011.shape.color = green
0.223	IN  SPE ^.layer_0111.shape.color = green
0.214	IN  SPE ^.layer_01111.shape.color = green
0.210	IN  SPE ^.color = black
0.206	OUT SPE ^.color = black
0.008	
0.008	IN  GEN ^.layer_01111.shape.color = ?
0.008	IN  GEN ^.layer_0111.shape.color = ?
0.008	IN  GEN ^.layer_011.shape.color = ?
0.007	IN  GEN ^.layer_01.shape.color = ?
0.007	IN  GEN ^.layer_0.shape.color = ?
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_01.pos + (1, 1)
  _010: ^.layer_01111
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color green at (?,?)

DL input  with Mi: L = 118.5 + 4818.0 = 4936.5
DL output with Mo: L = 76.5 + 0.0 = 76.5
DL input+output M: L = 195.0 + 4818.0 = 5012.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_01.pos + (1, 1)
  _010: ^.layer_01111
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 0.0 = 101.7
DL output with Mo: L = 76.5 + 0.0 = 76.5
DL input+output M: L = 178.2 + 0.0 = 178.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (1,1)
  _010: a point with color green at (6,6)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,0)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,2)
  _010: a point with color green at (7,7)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,0)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (2,2)
  _010: a point with color green at (7,7)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,1)
  _010: a point with color green at (6,6)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x....|xx...|xxx..|xxxxx|x.... at (2,0)
  _01: a point with color green at (1,0)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (7,0)
  _01111: a point with color green at (7,6)
diff: 
delta:
correct output grid

TEST a1570a43.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 6.5 sec (6.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-155] Checking task a2fd1cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3101.7 = 3114.4
DL output with Mo: L = 12.6 + 21149.7 = 21162.3
DL input+output M: L = 25.2 + 24251.5 = 24276.7

# learning a model for train pairs
2.000	
1.284	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.083	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.874	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.819	OUT ADD ^.layer_01 = ^.layer_01
0.762	OUT ADD ^.layer_00 = ^.layer_0
0.709	IN  SPE ^.layer_0.shape.color = red
0.656	IN  SPE ^.layer_01.shape.color = green
0.617	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.586	OUT SPE ^.size = ^.size
0.562	IN  SPE ^.color = black
0.554	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j
0.546	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.538	OUT SPE ^.layer_0.shape.color = cyan
0.530	OUT SPE ^.layer_011.shape.color = cyan
0.525	OUT SPE ^.layer_0.shape.mask = Full
0.521	OUT SPE ^.layer_011.shape.mask = Full
0.516	OUT SPE ^.layer_0.shape.size.i = 1
0.511	OUT SPE ^.layer_011.shape.size.j = 1
0.508	OUT SPE ^.color = black
0.065	
0.064	IN  GEN ^.layer_01.shape.color = ?
0.064	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color green at (?,?)

DL input  with Mi: L = 52.4 + 1379.1 = 1431.5
DL output with Mo: L = 95.1 + 925.0 = 1020.1
DL input+output M: L = 147.5 + 2304.1 = 2451.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color red at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 49.0 + 0.0 = 49.0
DL output with Mo: L = 95.1 + 925.0 = 1020.1
DL input+output M: L = 144.1 + 925.0 = 1069.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color green at (13,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _00: a point with color red at (1,4)
  _0: a rectangle with size (1,6) and color cyan and mask Full at (1,5)
  _01: a point with color green at (13,10)
  _011: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
diff: 
delta:
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color green at (13,10)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (13,10)
  _01: a point with color red at (1,4)
diff:   ^.layer_0.shape.color
delta:
! 20 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,16) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color green at (1,11)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,16) and color black and layers
  _00: a point with color red at (7,1)
  _0: a rectangle with size (1,10) and color cyan and mask Full at (7,2)
  _01: a point with color green at (1,11)
  _011: a rectangle with size (6,1) and color cyan and mask Full at (2,11)
diff: 
delta:
   (30.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color green at (1,11)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color black and layers
  _0: a point with color green at (1,11)
  _01: a point with color red at (7,1)
diff:   ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,14) and color black and layers
  _0: a point with color red at (1,11)
  _01: a point with color green at (10,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,14) and color black and layers
  _00: a point with color red at (1,11)
  _0: a rectangle with size (1,7) and color cyan and mask Full at (1,4)
  _01: a point with color green at (10,4)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (1,4)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (1,11)
  _01: a point with color green at (10,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a point with color green at (10,4)
  _01: a point with color red at (1,11)
diff:   ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (10,10)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a point with color green at (10,10)
  _01: a point with color red at (2,1)
diff:   ^.layer_0.shape.color
delta:
! 20 wrong pixels (generated / expected)

TEST a2fd1cf0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 925.0 bits (925.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-154] Checking task a3325580.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31906.9 = 31919.5
DL output with Mo: L = 12.6 + 11108.4 = 11121.0
DL input+output M: L = 25.2 + 43015.3 = 43040.5

# learning a model for train pairs
2.000	
1.510	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.255	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.020	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.851	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.811	OUT SPE ^.layer_0.pos = '(0, 0)
0.771	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape)
0.732	OUT SPE ^.size.i = area(^.layer_0.shape)
0.714	OUT SPE ^.layer_0.shape.size.j = 1
0.696	OUT SPE ^.layer_0.shape.mask = Full
0.692	IN  SPE ^.color = black
0.357	
0.357	IN  DEL ^.layer_011
0.356	IN  DEL ^.layer_01
0.356	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape),?) and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape),1) and color ? and mask Full at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 10667.6 = 10757.0
DL output with Mo: L = 68.4 + 3874.6 = 3943.0
DL input+output M: L = 157.8 + 14542.1 = 14700.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape),?) and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape),1) and color ? and mask Full at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 68.4 + 3874.6 = 3943.0
DL input+output M: L = 107.3 + 3874.6 = 3981.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
diff: 
delta: (1,7)=8  (1,8)=8  (1,9)=8  (2,2)=4  (2,9)=8  (3,2)=4  (3,9)=8  (4,2)=4  (4,3)=4  (5,2)=4  (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
   (0.0 bits)
data: a background with size (5,3) and color pink and layers
  _0: a rectangle with size (5,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=8  (1,2)=8  (2,2)=8  (3,2)=8  (4,2)=8 
   (198.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
diff: 
delta: (1,7)=8  (1,8)=8  (1,9)=8  (2,2)=4  (2,9)=8  (3,2)=4  (3,9)=8  (4,2)=4  (4,3)=4  (5,2)=4  (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 5x10 instead of 5x3

TRAIN a3325580.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
diff: 
delta: (3,1)=9# (3,5)=6  (4,1)=9# (4,2)=9# (4,5)=6  (5,0)=9# (5,1)=9# (5,4)=6  (5,5)=6  (5,6)=6  (6,1)=9# (6,6)=6  (7,1)=9# (7,2)=9# (8,1)=9#
   (0.0 bits)
data: a background with size (9,2) and color yellow and layers
  _0: a rectangle with size (9,1) and color brown and mask Full at (0,0)
diff: 
delta:
   (19.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
diff: 
delta: (3,1)=9# (3,5)=6  (4,1)=9# (4,2)=9# (4,5)=6  (5,0)=9# (5,1)=9# (5,4)=6  (5,5)=6  (5,6)=6  (6,1)=9# (6,6)=6  (7,1)=9# (7,2)=9# (8,1)=9#
! size mismatch, 9x10 instead of 9x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color brown and mask Full at (3,1)
diff: 
delta: (0,7)=4  (0,8)=4  (0,9)=4  (1,7)=4  (1,9)=4  (2,9)=4  (3,5)=6  (3,8)=4  (3,9)=4  (4,2)=9# (4,5)=6  (4,9)=4  (5,0)=9# (5,4)=6  (5,5)=6  (5,6)=6  (6,6)=6  (7,2)=9#
! size mismatch, 6x10 instead of 9x2

TRAIN a3325580.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
diff: 
delta: (0,9)=1  (1,0)=7# (1,1)=7# (1,2)=7# (1,9)=1  (2,2)=7# (2,9)=1  (3,9)=1  (5,3)=3  (6,3)=3  (6,4)=3 
   (0.0 bits)
data: a background with size (5,1) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (0,0)
diff: 
delta:
   (11.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
diff: 
delta: (0,9)=1  (1,0)=7# (1,1)=7# (1,2)=7# (1,9)=1  (2,2)=7# (2,9)=1  (3,9)=1  (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 5x10 instead of 5x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,9)
diff: 
delta: (1,0)=7# (1,1)=7# (1,2)=7# (1,5)=2  (1,6)=2  (2,2)=7# (2,6)=2  (2,7)=2  (3,6)=2  (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 4x10 instead of 5x1

TRAIN a3325580.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
diff: 
delta: (4,6)=6  (5,6)=6  (8,4)=4  (8,5)=4 
   (0.0 bits)
data: a background with size (3,1) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (11.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
diff: 
delta: (4,6)=6  (5,6)=6  (8,4)=4  (8,5)=4 
! size mismatch, 3x10 instead of 3x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
diff: 
delta: (3,2)=8  (4,2)=8  (4,6)=6  (5,2)=8  (5,6)=6 
! size mismatch, 2x10 instead of 3x1

TRAIN a3325580.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
diff: 
delta: (4,1)=2  (5,1)=2  (5,2)=2 
   (0.0 bits)
data: a background with size (3,2) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
diff: 
delta:
   (19.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
diff: 
delta: (4,1)=2  (5,1)=2  (5,2)=2 
! size mismatch, 3x10 instead of 3x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,5)
diff: 
delta: (3,6)=3  (4,1)=2  (5,1)=2  (5,2)=2 
! size mismatch, 2x10 instead of 3x2

TRAIN a3325580.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
diff: 
delta: (2,1)=1  (3,1)=1  (4,1)=1  (5,3)=4  (5,4)=4  (6,3)=4 
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=8  (1,2)=8  (2,2)=8 
   (126.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
diff: 
delta: (2,1)=1  (3,1)=1  (4,1)=1  (5,3)=4  (5,4)=4  (6,3)=4 
! size mismatch, 3x10 instead of 3x3

TRAIN a3325580.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,7)
diff: 
delta: (1,2)=5# (2,1)=5# (2,2)=5# (3,2)=5# (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (7,3)=2  (7,4)=2  (8,0)=8  (8,3)=2  (9,3)=2 
! size mismatch, 4x10 instead of 4x3

TEST a3325580.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 3874.6 bits (3874.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-153] Checking task a3df8b1e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1685.8 = 1698.4
DL output with Mo: L = 12.6 + 11389.1 = 11401.7
DL input+output M: L = 25.2 + 13074.9 = 13100.1

# learning a model for train pairs
2.000	
1.207	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.726	IN  SPE ^.layer_0.shape.color = blue
0.683	IN  SPE ^.color = black
0.640	OUT SPE ^.size = ^.size
0.597	OUT SPE ^.layer_0.shape.size = ^.size
0.572	OUT SPE ^.layer_0.pos = '(0, 0)
0.557	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.551	OUT SPE ^.color = black
0.095	
0.093	IN  GEN ^.layer_0.shape.color = ?
0.093	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)

DL input  with Mi: L = 33.0 + 775.2 = 808.2
DL output with Mo: L = 41.5 + 815.5 = 857.0
DL input+output M: L = 74.5 + 1590.7 = 1665.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 41.5 + 815.5 = 857.0
DL input+output M: L = 71.1 + 815.5 = 886.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,2) and color black and layers
  _0: a rectangle with size (10,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (10,3) and color blue and mask .x.|x..|.x.|..x|.x.|x..|.x.|..x|.x.|x.. at (0,0)
diff: 
delta:
   (34.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,4) and color blue and mask ...x|..x.|.x..|x...|.x..|..x.|...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (39.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST a3df8b1e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 815.5 bits (815.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-152] Checking task a416b8f3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8203.1 = 8215.7
DL output with Mo: L = 12.6 + 16293.8 = 16306.4
DL input+output M: L = 25.2 + 24496.9 = 24522.1

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = tiling(^.grid, 1, 2)
0.779	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.548	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.504	IN  SPE ^.layer_01.shape.mask = Full
0.492	IN  SPE ^.layer_0111.shape.mask = Full
0.480	IN  SPE ^.layer_011.shape.mask = Full
0.015	
0.012	IN  DEL ^.layer_0111
0.009	IN  DEL ^.layer_011
0.006	IN  DEL ^.layer_01
0.003	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
tiling(^.grid, 1, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 117.1 + 3821.8 = 3939.0
DL output with Mo: L = 15.9 + 0.0 = 15.9
DL input+output M: L = 133.0 + 3821.8 = 3954.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
tiling(^.grid, 1, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 15.9 + 0.0 = 15.9
DL input+output M: L = 28.5 + 0.0 = 28.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=5# (1,0)=5# (1,1)=5# (1,2)=2 
   (0.0 bits)
data: 
0 5#0 0 5#0 
5#5#2 5#5#2 
0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=5# (1,0)=5# (1,1)=5# (1,2)=2 
correct output grid

TRAIN a416b8f3.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (4,3) and color black and layers
diff: 
delta: (0,0)=3  (1,0)=2  (1,1)=3  (2,0)=2  (2,1)=1  (2,2)=8  (3,1)=1 
   (0.0 bits)
data: 
3 0 0 3 0 0 
2 3 0 2 3 0 
2 1 8 2 1 8 
0 1 0 0 1 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
diff: 
delta: (0,0)=3  (1,0)=2  (1,1)=3  (2,0)=2  (2,1)=1  (2,2)=8  (3,1)=1 
correct output grid

TRAIN a416b8f3.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (4,4) and color black and layers
diff: 
delta: (0,0)=5# (0,1)=2  (0,2)=3  (1,0)=2  (1,1)=5# (1,2)=3  (2,0)=5# (2,1)=2  (2,2)=8  (2,3)=8  (3,2)=6 
   (0.0 bits)
data: 
5#2 3 0 5#2 3 0 
2 5#3 0 2 5#3 0 
5#2 8 8 5#2 8 8 
0 0 6 0 0 0 6 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
diff: 
delta: (0,0)=5# (0,1)=2  (0,2)=3  (1,0)=2  (1,1)=5# (1,2)=3  (2,0)=5# (2,1)=2  (2,2)=8  (2,3)=8  (3,2)=6 
correct output grid

TRAIN a416b8f3.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
diff: 
delta: (0,0)=4  (1,0)=4  (1,1)=5# (2,1)=5# (2,2)=6  (3,0)=6  (3,1)=6  (3,2)=1  (4,3)=1 
correct output grid

TEST a416b8f3.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-151] Checking task a48eeaf7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6148.9 = 6161.6
DL output with Mo: L = 12.6 + 6148.9 = 6161.6
DL input+output M: L = 25.2 + 12297.9 = 12323.1

# learning a model for train pairs
2.000	
1.616	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.128	OUT ADD ^.layer_0 = ^.layer_0
1.048	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.981	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.911	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.846	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.779	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.711	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.646	OUT SPE ^.size = ^.size
0.611	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos - (2, 2)
0.592	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.574	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.556	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.524	OUT SPE ^.layer_011.pos = ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
0.494	OUT SPE ^.layer_01.pos = ^.layer_011.pos - translationOnto(^.layer_0, ^.layer_011)
0.476	IN  SPE ^.layer_0.shape.color = red
0.459	IN  SPE ^.layer_01.shape.color = grey
0.441	IN  SPE ^.layer_011.shape.color = grey
0.423	IN  SPE ^.layer_0111.shape.color = grey
0.412	IN  SPE ^.layer_0.shape.mask = Full
0.404	IN  SPE ^.color = black
0.396	OUT SPE ^.color = black
0.392	OUT SPE ^.layer_01.shape.size.i = area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i
0.388	OUT SPE ^.layer_01.shape.size.j = area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i
0.078	
0.078	IN  GEN ^.layer_0111.shape.color = ?
0.077	IN  GEN ^.layer_011.shape.color = ?
0.077	IN  GEN ^.layer_01.shape.color = ?
0.076	IN  GEN ^.layer_0.shape.color = ?
0.076	IN  GEN ^.layer_0.shape.mask = ?
0.076	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i,area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i) and color ^.layer_01.shape.color and mask ? at ^.layer_011.pos - translationOnto(^.layer_0, ^.layer_011)
  _011: ^.layer_011.shape at ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
  _0111: ^.layer_0111.shape at ^.layer_0111.pos - (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color grey at (?,?)

DL input  with Mi: L = 100.7 + 1906.4 = 2007.1
DL output with Mo: L = 273.1 + 109.7 = 382.7
DL input+output M: L = 373.8 + 2016.0 = 2389.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i,area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i) and color ^.layer_01.shape.color and mask ? at ^.layer_011.pos - translationOnto(^.layer_0, ^.layer_011)
  _011: ^.layer_011.shape at ^.layer_01.pos - translationOnto(^.layer_0, ^.layer_01)
  _0111: ^.layer_0111.shape at ^.layer_0111.pos - (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 86.3 + 0.0 = 86.3
DL output with Mo: L = 273.1 + 109.7 = 382.7
DL input+output M: L = 359.3 + 109.7 = 469.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (3,8)
  _0111: a point with color grey at (7,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color grey and mask Full at (3,5)
  _011: a point with color grey at (2,3)
  _0111: a point with color grey at (5,5)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (3,8)
  _0111: a point with color grey at (7,7)
diff: 
delta:
correct output grid

TRAIN a48eeaf7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (6,9)
diff: 
delta: (8,5)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color grey and mask Even Checkboard at (3,4)
  _011: a point with color grey at (1,7)
  _0111: a point with color grey at (4,7)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (6,9)
diff: 
delta: (8,5)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (8,5)
diff: 
delta: (6,9)=5#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (6,9)
  _0111: a point with color grey at (3,1)
diff: 
delta: (8,5)=5#
! 5 wrong pixels (generated / expected)

TRAIN a48eeaf7.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-2,-2) and color grey and mask Full at (5,4)

TEST a48eeaf7.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 22.1 sec (22.1 sec/task)
bits-train-error = 109.7 bits (109.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-150] Checking task a5313dff.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33661.7 = 33674.3
DL output with Mo: L = 12.6 + 47834.3 = 47846.9
DL input+output M: L = 25.2 + 81496.0 = 81521.2

# learning a model for train pairs
2.000	
1.174	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.535	OUT ADD ^.layer_0 = ^.layer_0
0.306	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.261	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.242	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.230	OUT SPE ^.size = ^.size
0.222	OUT ADD ^.layer_010 = ^.layer_01
0.216	OUT SPE ^.layer_01.pos = ^.layer_01.pos - (1, 1)
0.211	IN  SPE ^.layer_0.shape.color = red
0.206	IN  SPE ^.layer_01.shape.color = red
0.202	OUT SPE ^.layer_01.shape.size.j = 3
0.199	OUT SPE ^.layer_01.shape.color = blue
0.196	OUT SPE ^.layer_011.shape.size.i = ^.size.i - ^.layer_0.shape.size.j
0.194	IN  SPE ^.color = black
0.192	OUT SPE ^.layer_01.shape.mask = Full
0.190	OUT SPE ^.layer_011.shape.mask = Full
0.188	OUT SPE ^.color = black
0.047	
0.047	IN  GEN ^.layer_01.shape.color = ?
0.047	IN  GEN ^.layer_0.shape.color = ?
0.047	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,3) and color blue and mask Full at ^.layer_01.pos - (1, 1)
  _011: a rectangle with size (^.size.i - ^.layer_0.shape.size.j,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 61.7 + 4779.3 = 4841.0
DL output with Mo: L = 124.6 + 2010.5 = 2135.1
DL input+output M: L = 186.3 + 6789.8 = 6976.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,3) and color blue and mask Full at ^.layer_01.pos - (1, 1)
  _011: a rectangle with size (^.size.i - ^.layer_0.shape.size.j,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 20.0 = 74.9
DL output with Mo: L = 124.6 + 2010.5 = 2135.1
DL input+output M: L = 179.5 + 2030.5 = 2210.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color red at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (2,2)
diff: 
delta: (4,3)=1 
   (64.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color red at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN a5313dff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (5,4)
diff: 
delta: (1,1)=2 
   (2.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _010: a point with color red at (5,4)
  _01: a rectangle with size (3,3) and color blue and mask Full at (4,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (26.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta: (5,4)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (5,4)
diff: 
delta: (1,1)=2 
! 6 wrong pixels (generated / expected)

TRAIN a5313dff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (2,5)
diff: 
delta: (6,5)=2  (11,9)=2 
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _010: a point with color red at (2,5)
  _01: a rectangle with size (7,3) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,2) and color blue and mask Full at (3,8)
diff: 
delta: (6,5)=2  (11,9)=2 
   (110.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (2,5)
diff: 
delta: (6,5)=2  (11,9)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (6,5)
diff: 
delta: (2,5)=2  (11,9)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (11,9)
diff: 
delta: (2,5)=2  (6,5)=2 
! 35 wrong pixels (generated / expected)

TRAIN a5313dff.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,2) and color col10 and mask Full at (0,0)

TEST a5313dff.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.4 sec (7.4 sec/task)
bits-train-error = 2010.5 bits (2010.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-149] Checking task a5f85a15.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7894.3 = 7906.9
DL output with Mo: L = 12.6 + 7894.3 = 7906.9
DL input+output M: L = 25.2 + 15788.6 = 15813.8

# learning a model for train pairs
2.000	
1.602	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.444	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.368	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.290	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.212	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.150	OUT SPE ^.size = ^.size
1.114	OUT SPE ^.layer_0.pos = ^.layer_0.pos
1.078	OUT SPE ^.layer_01.pos = ^.layer_01.pos
1.044	OUT SPE ^.layer_011.pos = ^.layer_01.pos + (1, 1)
1.023	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
1.013	IN  SPE ^.color = black
1.004	OUT SPE ^.color = black
0.577	
0.577	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos
  _01: a point with color ? at ^.layer_01.pos
  _011: a point with color ? at ^.layer_01.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 3373.6 = 3438.0
DL output with Mo: L = 68.6 + 4431.4 = 4500.0
DL input+output M: L = 133.0 + 7805.0 = 7938.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos
  _01: a point with color ? at ^.layer_01.pos
  _011: a point with color ? at ^.layer_01.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 68.6 + 4431.4 = 4500.0
DL input+output M: L = 132.8 + 4431.4 = 4564.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta: (2,2)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (1,1)
  _011: a point with color red at (2,2)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta: (2,2)=2 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta: (1,1)=2 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (2,2)=2 
! 3 wrong pixels (generated / expected)

TRAIN a5f85a15.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
  _01: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a point with color brown at (0,2)
  _01: a point with color brown at (4,0)
  _011: a point with color yellow at (5,1)
diff: 
delta: (1,3)=4  (2,4)=9# (3,5)=4  (4,6)=9# (5,7)=4  (6,2)=9# (7,3)=4 
   (273.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
  _01: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
  _01: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a5f85a15.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
  _01: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color green at (3,0)
  _011: a point with color yellow at (4,1)
diff: 
delta: (1,3)=4  (2,4)=3  (3,5)=4  (5,2)=3 
   (158.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
  _01: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
  _01: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN a5f85a15.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,11) and color pink and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (1,0)
  _01: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,4)
diff: 
delta: (8,0)=6  (9,1)=6  (10,2)=6  (11,3)=6 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,4)
  _01: a rectangle with size (11,11) and color pink and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (1,0)
diff: 
delta: (8,0)=6  (9,1)=6  (10,2)=6  (11,3)=6 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,11) and color pink and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (1,0)
  _01: a rectangle with size (4,4) and color pink and mask x...|.x..|..x.|...x at (8,0)
diff: 
delta: (0,4)=6  (1,5)=6  (2,6)=6  (3,7)=6  (4,8)=6  (5,9)=6  (6,10)=6  (7,11)=6 
! 22 wrong pixels (generated / expected)

TEST a5f85a15.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 4431.4 bits (4431.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-148] Checking task a61ba2ce.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9732.2 = 9744.8
DL output with Mo: L = 12.6 + 8779.9 = 8792.6
DL input+output M: L = 25.2 + 18512.1 = 18537.4

# learning a model for train pairs
2.000	
1.842	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.684	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.524	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.045	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.887	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.723	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.665	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.607	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.549	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.491	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.459	OUT SPE ^.size = ^.layer_0.shape.size + (2, 2)
0.440	OUT SPE ^.layer_0111.pos = '(2, 0)
0.421	OUT SPE ^.layer_011.pos = '(2, 2)
0.404	IN  SPE ^.layer_011.shape.mask = .x|xx
0.387	OUT SPE ^.layer_0.pos = '(0, 0)
0.367	IN  SPE ^.layer_0.shape.mask = xx|x.
0.348	OUT SPE ^.layer_01.pos = '(0, 2)
0.331	IN  SPE ^.layer_01.shape.mask = xx|.x
0.314	IN  SPE ^.layer_0111.shape.mask = x.|xx
0.308	OUT SPE ^.color = black
0.303	IN  SPE ^.color = black
0.026	
0.026	IN  GEN ^.layer_011.shape.mask = ?
0.025	IN  GEN ^.layer_0111.shape.mask = ?
0.025	IN  GEN ^.layer_01.shape.mask = ?
0.024	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 2) and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
  _01: ^.layer_01.shape at '(0, 2)
  _011: ^.layer_011.shape at '(2, 2)
  _0111: ^.layer_0111.shape at '(2, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask xx|x. at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask xx|.x at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask .x|xx at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask x.|xx at (?,?)

DL input  with Mi: L = 139.9 + 2695.5 = 2835.4
DL output with Mo: L = 106.6 + 0.0 = 106.6
DL input+output M: L = 246.5 + 2695.5 = 2942.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 2) and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
  _01: ^.layer_01.shape at '(0, 2)
  _011: ^.layer_011.shape at '(2, 2)
  _0111: ^.layer_0111.shape at '(2, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask xx|x. at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 120.5 + 0.0 = 120.5
DL output with Mo: L = 106.6 + 0.0 = 106.6
DL input+output M: L = 227.2 + 0.0 = 227.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,6)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (3,1)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (7,7)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (9,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (0,2)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,6)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (3,1)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (7,7)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (9,3)
diff: 
delta:
correct output grid

TRAIN a61ba2ce.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (3,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (1,8)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (5,7)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (9,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,2)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (3,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (1,8)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (5,7)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (9,4)
diff: 
delta:
correct output grid

TRAIN a61ba2ce.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (9,2)
  _01: a rectangle with size (2,2) and color pink and mask .x|xx at (2,2)
  _011: a rectangle with size (2,2) and color cyan and mask xx|.x at (2,10)
  _0111: a rectangle with size (2,2) and color blue and mask x.|xx at (6,6)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (9,2)
  _01: a rectangle with size (2,2) and color pink and mask .x|xx at (2,2)
  _011: a rectangle with size (2,2) and color blue and mask x.|xx at (6,6)
  _0111: a rectangle with size (2,2) and color cyan and mask xx|.x at (2,10)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (9,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (2,10)
  _011: a rectangle with size (2,2) and color pink and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color blue and mask x.|xx at (6,6)
diff: 
delta:
correct output grid

TEST a61ba2ce.json/1: 1 3rd (SUCCESS)

# Performance measures on task
runtime-learning = 9.5 sec (9.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.33

=====================================
[-147] Checking task a61f2674.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19803.8 = 19816.4
DL output with Mo: L = 12.6 + 8692.9 = 8705.5
DL input+output M: L = 25.2 + 28496.7 = 28521.9

# learning a model for train pairs
2.000	
1.350	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.724	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.496	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.413	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.336	OUT SPE ^.layer_0 = coloring(^.layer_0, blue)
0.292	OUT SPE ^.size = ^.size
0.279	OUT SPE ^.layer_01.shape.color = red
0.268	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j + 2
0.260	OUT SPE ^.layer_01.shape.size.j = 1
0.253	OUT SPE ^.layer_01.shape.mask = Full
0.244	OUT SPE ^.layer_01.shape.size = average(^.layer_011.shape.size, ^.layer_0111.shape.size) - (2, 0)
0.237	OUT SPE ^.layer_01.pos.i = span(^.layer_0.pos.i, ^.layer_011.pos.i) + 3
0.029	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, blue)
  _01: a rectangle with size average(^.layer_011.shape.size, ^.layer_0111.shape.size) - (2, 0) and color red and mask Full at (span(^.layer_0.pos.i, ^.layer_011.pos.i) + 3,^.layer_01.pos.j + 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 4108.6 = 4222.8
DL output with Mo: L = 156.6 + 49.2 = 205.8
DL input+output M: L = 270.8 + 4157.8 = 4428.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, blue)
  _01: a rectangle with size average(^.layer_011.shape.size, ^.layer_0111.shape.size) - (2, 0) and color red and mask Full at (span(^.layer_0.pos.i, ^.layer_011.pos.i) + 3,^.layer_01.pos.j + 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 156.6 + 49.2 = 205.8
DL input+output M: L = 270.8 + 49.2 = 319.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,0)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,4)
diff: 
delta: (6,8)=5# (7,8)=5# (8,8)=5#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (1,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (6,8)
diff: 
delta:
   (2.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,0)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,4)
diff: 
delta: (6,8)=5# (7,8)=5# (8,8)=5#
correct output grid

TRAIN a61f2674.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,0)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,6)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (7,2)
diff: 
delta:
   (2.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,0)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,6)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,2)
diff: 
delta:
correct output grid

TRAIN a61f2674.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,3)
  _011: a rectangle with size (5,1) and color grey and mask Full at (4,5)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (8,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (5,1) and color grey and mask Full at (4,5)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST a61f2674.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.5 sec (56.5 sec/task)
bits-train-error = 49.2 bits (49.2 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-146] Checking task a64e4611.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 308845.4 = 308858.0
DL output with Mo: L = 12.6 + 632555.7 = 632568.3
DL input+output M: L = 25.2 + 941401.0 = 941426.3

# learning a model for train pairs
2.000	
1.519	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.285	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.095	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.941	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	OUT ADD ^.layer_01 = ^.layer_0
0.701	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.599	OUT ADD ^.layer_011 = ^.layer_01
0.517	OUT ADD ^.layer_0111 = ^.layer_011
0.447	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.385	OUT ADD ^.layer_01111 = ^.layer_0111
0.344	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.306	OUT ADD ^.layer_011111 = ^.layer_01111
0.282	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.111	
0.111	IN  DEL ^.layer_0111111
0.111	IN  DEL ^.layer_011111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 52645.7 = 52833.8
DL output with Mo: L = 77.0 + 69819.7 = 69896.7
DL input+output M: L = 265.1 + 122465.4 = 122730.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 77.0 + 69819.7 = 69896.7
DL input+output M: L = 215.9 + 69819.7 = 70035.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _01: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _0111: a rectangle with size (6,12) and color cyan and mask ......xx....|......x.x...|.xxx.x.xx...|x.xx.xx.x...|.x..xx.xxx..|xx.x.xx.x.xx at (24,17)
  _01111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (29,4)=8  (29,7)=8 
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (25,30) and color green and mask .........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxxxxxxxxxxxx|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|xxxxxxxxxxxxxxxx..............|xxxxxxxxxxxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx.............. at (5,0)
  _01: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _011: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _0111: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _01111: a rectangle with size (6,12) and color cyan and mask ......xx....|......x.x...|.xxx.x.xx...|x.xx.xx.x...|.x..xx.xxx..|xx.x.xx.x.xx at (24,17)
  _011111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (29,4)=8  (29,7)=8 
   (2162.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _01: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _0111: a rectangle with size (6,12) and color cyan and mask ......xx....|......x.x...|.xxx.x.xx...|x.xx.xx.x...|.x..xx.xxx..|xx.x.xx.x.xx at (24,17)
  _01111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (29,4)=8  (29,7)=8 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _0111: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
  _01111: a rectangle with size (8,5) and color blue and mask x....|.x.x.|xxx.x|..x.x|..x..|..xxx|..x.x|..xx. at (22,0)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (28,0)=1  (28,14)=1  (29,0)=1  (29,16)=1  (29,17)=1  (29,18)=1 
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (30,24) and color green and mask xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx................. at (0,6)
  _01: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _011: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _0111: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _01111: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
  _011111: a rectangle with size (8,5) and color blue and mask x....|.x.x.|xxx.x|..x.x|..x..|..xxx|..x.x|..xx. at (22,0)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (28,0)=1  (28,14)=1  (29,0)=1  (29,16)=1  (29,17)=1  (29,18)=1 
   (2348.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _0111: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
  _01111: a rectangle with size (8,5) and color blue and mask x....|.x.x.|xxx.x|..x.x|..x..|..xxx|..x.x|..xx. at (22,0)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (28,0)=1  (28,14)=1  (29,0)=1  (29,16)=1  (29,17)=1  (29,18)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (8,13) and color red and mask ..x..........|.x...........|x.x..........|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _011: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _0111: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
  _01111: a rectangle with size (7,4) and color red and mask x.x.|xx..|.x..|xxx.|xx.x|.x..|..x. at (2,17)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (3,4)=2  (3,6)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,27)=2  (5,0)=2  (5,29)=2  (6,3)=2  (6,5)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (30,16) and color green and mask ........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx at (0,0)
  _01: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _011: a rectangle with size (8,13) and color red and mask ..x..........|.x...........|x.x..........|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _0111: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _01111: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
  _011111: a rectangle with size (7,4) and color red and mask x.x.|xx..|.x..|xxx.|xx.x|.x..|..x. at (2,17)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (3,4)=2  (3,6)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,27)=2  (5,0)=2  (5,29)=2  (6,3)=2  (6,5)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
   (2471.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (8,13) and color red and mask ..x..........|.x...........|x.x..........|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _011: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _0111: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
  _01111: a rectangle with size (7,4) and color red and mask x.x.|xx..|.x..|xxx.|xx.x|.x..|..x. at (2,17)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (3,4)=2  (3,6)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,27)=2  (5,0)=2  (5,29)=2  (6,3)=2  (6,5)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (14,8) and color yellow and mask x.xx..xx|.xxx.x..|xxxxxxxx|..x...x.|..x..x..|..x.xx.x|.x.x..xx|.x..xxxx|x.x.xxx.|x.xx.x.x|.xx...x.|...x..xx|x.xxx.xx|.x.xx... at (16,22)
  _01: a rectangle with size (9,9) and color yellow and mask .xx......|xxx......|...x.....|....xxx..|..xxx.x..|..x.x....|x.xx..x..|.x.xxx.x.|..x...xxx at (0,0)
  _011: a rectangle with size (7,7) and color yellow and mask ..xx...|..xxx..|x.xx.x.|xx.x..x|x.xx...|x.x.xxx|..x.x.. at (21,14)
  _0111: a rectangle with size (9,5) and color yellow and mask xxxxx|.xx.x|.x.xx|x...x|...x.|...x.|..xx.|...x.|....x at (0,14)
  _01111: a rectangle with size (7,5) and color yellow and mask x.x..|x.xx.|.xxxx|xx...|x.x..|.x.x.|..x.x at (21,0)
diff: 
delta: (0,4)=4  (0,6)=4  (0,7)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,5)=4  (1,6)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,8)=4  (2,9)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,8)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,9)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,23)=4  (6,9)=4  (6,14)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,27)=4  (8,14)=4  (8,15)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,6)=4  (22,6)=4  (22,7)=4  (22,21)=4  (23,6)=4  (24,6)=4  (24,7)=4  (24,9)=4  (25,6)=4  (25,9)=4  (26,9)=4  (27,6)=4  (27,7)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30

TEST a64e4611.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 69819.7 bits (69819.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-145] Checking task a65b410d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4031.6 = 4044.2
DL output with Mo: L = 12.6 + 21688.3 = 21700.9
DL input+output M: L = 25.2 + 25719.9 = 25745.1

# learning a model for train pairs
2.000	
1.382	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	OUT ADD ^.layer_01 = ^.layer_0
0.526	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.485	IN  SPE ^.layer_0.shape.color = red
0.460	OUT SPE ^.size = ^.size
0.435	IN  SPE ^.layer_0.shape.mask = Full
0.417	IN  SPE ^.color = black
0.402	OUT SPE ^.layer_0.pos = '(0, 0)
0.389	OUT SPE ^.layer_011.pos = ^.layer_0.pos + (1, 0)
0.381	OUT SPE ^.layer_0.shape.color = green
0.373	OUT SPE ^.layer_011.shape.color = blue
0.367	OUT SPE ^.layer_011.shape.size.j = ^.layer_0.shape.size.j - 1
0.361	OUT SPE ^.layer_011.shape.size.i = ^.layer_0.shape.size.j - 1
0.358	OUT SPE ^.color = black
0.070	
0.069	IN  GEN ^.layer_0.shape.color = ?
0.069	IN  GEN ^.layer_0.shape.mask = ?
0.069	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at '(0, 0)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_0.shape.size.j - 1,^.layer_0.shape.size.j - 1) and color blue and mask ? at ^.layer_0.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 1162.5 = 1205.8
DL output with Mo: L = 130.5 + 1162.1 = 1292.6
DL input+output M: L = 173.8 + 2324.6 = 2498.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at '(0, 0)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_0.shape.size.j - 1,^.layer_0.shape.size.j - 1) and color blue and mask ? at ^.layer_0.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 130.5 + 1162.1 = 1292.6
DL input+output M: L = 169.4 + 1162.1 = 1331.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxxxx|xxxx.|xxx.. at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (4,0)
diff: 
delta:
   (35.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN a65b410d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (3,6) and color green and mask xxxxxx|xxxxx.|xxxx.. at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (3,0)
  _011: a rectangle with size (2,2) and color blue and mask xx|x. at (4,0)
diff: 
delta:
   (41.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN a65b410d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (2,6) and color green and mask xxxxxx|xxxxx. at (0,0)
  _01: a rectangle with size (1,4) and color red and mask Full at (2,0)
  _011: a rectangle with size (3,3) and color blue and mask xxx|xx.|x.. at (3,0)
diff: 
delta:
   (39.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN a65b410d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (2,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST a65b410d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 1162.1 bits (1162.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-144] Checking task a68b268e.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 105611.2 = 105623.9
DL output with Mo: L = 12.6 + 17676.9 = 17689.5
DL input+output M: L = 25.2 + 123288.2 = 123313.4

# learning a model for train pairs
2.000	
1.668	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.380	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.231	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.091	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.974	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.898	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.835	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.778	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.723	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.673	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.624	OUT SPE ^.size = ^.size / '2
0.427	
0.427	IN  DEL ^.layer_01111
0.427	IN  DEL ^.layer_0111
0.427	IN  DEL ^.layer_011
0.426	IN  DEL ^.layer_01
0.426	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 20816.0 = 20954.8
DL output with Mo: L = 124.8 + 7412.6 = 7537.4
DL input+output M: L = 263.6 + 28228.6 = 28492.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 124.8 + 7412.6 = 7537.4
DL input+output M: L = 137.4 + 7412.6 = 7550.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,1)=7# (0,2)=7# (0,3)=7# (0,4)=1  (0,6)=4  (0,8)=4  (1,0)=7# (1,1)=7# (1,2)=7# (1,4)=1  (1,5)=4  (1,6)=4  (2,4)=1  (2,8)=4  (3,0)=7# (3,4)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,4)=1  (5,5)=6  (5,6)=6  (5,7)=6  (6,2)=8  (6,3)=8  (6,4)=1  (7,0)=8  (7,2)=8  (7,4)=1  (7,5)=6  (7,8)=6  (8,3)=8  (8,4)=1 
   (0.0 bits)
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (2,0)
  _01111: a point with color yellow at (2,3)
diff: 
delta:
   (113.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,1)=7# (0,2)=7# (0,3)=7# (0,4)=1  (0,6)=4  (0,8)=4  (1,0)=7# (1,1)=7# (1,2)=7# (1,4)=1  (1,5)=4  (1,6)=4  (2,4)=1  (2,8)=4  (3,0)=7# (3,4)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,4)=1  (5,5)=6  (5,6)=6  (5,7)=6  (6,2)=8  (6,3)=8  (6,4)=1  (7,0)=8  (7,2)=8  (7,4)=1  (7,5)=6  (7,8)=6  (8,3)=8  (8,4)=1 
! 13 wrong pixels (generated / expected)

TRAIN a68b268e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=7# (0,4)=1  (0,6)=4  (1,0)=7# (1,2)=7# (1,4)=1  (1,5)=4  (1,7)=4  (1,8)=4  (2,1)=7# (2,3)=7# (2,4)=1  (2,5)=4  (2,7)=4  (2,8)=4  (3,3)=7# (3,4)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,2)=8  (5,4)=1  (5,5)=6  (5,8)=6  (6,4)=1  (6,5)=6  (7,4)=1  (7,5)=6  (7,6)=6  (7,8)=6  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=1  (8,5)=6  (8,7)=6  (8,8)=6 
   (0.0 bits)
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,0)
  _01: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (1,2)
  _011: a point with color pink at (0,3)
  _0111: a point with color black at (1,1)
  _01111: a point with color yellow at (2,0)
diff: 
delta:
   (111.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=7# (0,4)=1  (0,6)=4  (1,0)=7# (1,2)=7# (1,4)=1  (1,5)=4  (1,7)=4  (1,8)=4  (2,1)=7# (2,3)=7# (2,4)=1  (2,5)=4  (2,7)=4  (2,8)=4  (3,3)=7# (3,4)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,2)=8  (5,4)=1  (5,5)=6  (5,8)=6  (6,4)=1  (6,5)=6  (7,4)=1  (7,5)=6  (7,6)=6  (7,8)=6  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=1  (8,5)=6  (8,7)=6  (8,8)=6 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,2)=7# (0,3)=7# (0,4)=1  (0,6)=4  (0,7)=4  (1,3)=7# (1,4)=1  (1,7)=4  (1,8)=4  (2,0)=7# (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=1  (2,8)=4  (3,1)=7# (3,4)=1  (3,6)=4  (3,7)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,2)=8  (5,3)=8  (5,4)=1  (5,6)=6  (5,7)=6  (5,8)=6  (6,4)=1  (6,7)=6  (7,3)=8  (7,4)=1  (7,5)=6  (7,7)=6  (8,0)=8  (8,4)=1  (8,5)=6  (8,6)=6 
   (0.0 bits)
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (2,2) and color black and mask x.|xx at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,1)
  _011: a point with color cyan at (3,0)
  _0111: a point with color yellow at (3,2)
  _01111: a point with color black at (3,3)
diff: 
delta:
   (118.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,2)=7# (0,3)=7# (0,4)=1  (0,6)=4  (0,7)=4  (1,3)=7# (1,4)=1  (1,7)=4  (1,8)=4  (2,0)=7# (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=1  (2,8)=4  (3,1)=7# (3,4)=1  (3,6)=4  (3,7)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,2)=8  (5,3)=8  (5,4)=1  (5,6)=6  (5,7)=6  (5,8)=6  (6,4)=1  (6,7)=6  (7,3)=8  (7,4)=1  (7,5)=6  (7,7)=6  (8,0)=8  (8,4)=1  (8,5)=6  (8,6)=6 
! 15 wrong pixels (generated / expected)

TRAIN a68b268e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=1  (0,5)=4  (0,6)=4  (0,8)=4  (1,0)=7# (1,2)=7# (1,4)=1  (1,5)=4  (2,0)=7# (2,3)=7# (2,4)=1  (2,5)=4  (2,6)=4  (2,7)=4  (3,0)=7# (3,2)=7# (3,3)=7# (3,4)=1  (3,5)=4  (3,7)=4  (3,8)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,2)=8  (5,4)=1  (6,2)=8  (6,4)=1  (6,5)=6  (6,6)=6  (7,2)=8  (7,4)=1  (7,6)=6  (7,7)=6  (7,8)=6  (8,1)=8  (8,3)=8  (8,4)=1  (8,6)=6  (8,7)=6 
   (0.0 bits)
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
  _011: a point with color yellow at (0,3)
  _0111: a point with color pink at (1,1)
  _01111: a point with color black at (1,3)
diff: 
delta: (3,1)=8 
   (138.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=1  (0,5)=4  (0,6)=4  (0,8)=4  (1,0)=7# (1,2)=7# (1,4)=1  (1,5)=4  (2,0)=7# (2,3)=7# (2,4)=1  (2,5)=4  (2,6)=4  (2,7)=4  (3,0)=7# (3,2)=7# (3,3)=7# (3,4)=1  (3,5)=4  (3,7)=4  (3,8)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,2)=8  (5,4)=1  (6,2)=8  (6,4)=1  (6,5)=6  (6,6)=6  (7,2)=8  (7,4)=1  (7,6)=6  (7,7)=6  (7,8)=6  (8,1)=8  (8,3)=8  (8,4)=1  (8,6)=6  (8,7)=6 
! 15 wrong pixels (generated / expected)

TRAIN a68b268e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=1  (0,8)=4  (1,0)=7# (1,4)=1  (1,5)=4  (1,6)=4  (1,7)=4  (1,8)=4  (2,0)=7# (2,2)=7# (2,4)=1  (2,5)=4  (3,1)=7# (3,2)=7# (3,4)=1  (3,5)=4  (3,6)=4  (3,7)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,0)=8  (5,2)=8  (5,4)=1  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,2)=8  (6,3)=8  (6,4)=1  (6,7)=6  (7,4)=1  (7,6)=6  (7,8)=6  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8  (8,4)=1  (8,8)=6 
   (0.0 bits)
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (2,3) and color yellow and mask ..x|xxx at (0,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
  _011: a point with color pink at (2,1)
  _0111: a point with color pink at (2,3)
  _01111: a point with color yellow at (3,0)
diff: 
delta: (3,3)=8 
   (150.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=1  (0,8)=4  (1,0)=7# (1,4)=1  (1,5)=4  (1,6)=4  (1,7)=4  (1,8)=4  (2,0)=7# (2,2)=7# (2,4)=1  (2,5)=4  (3,1)=7# (3,2)=7# (3,4)=1  (3,5)=4  (3,6)=4  (3,7)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,0)=8  (5,2)=8  (5,4)=1  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,2)=8  (6,3)=8  (6,4)=1  (6,7)=6  (7,4)=1  (7,6)=6  (7,8)=6  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8  (8,4)=1  (8,8)=6 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,3)=7# (0,4)=1  (0,5)=4  (0,6)=4  (0,7)=4  (1,1)=7# (1,2)=7# (1,3)=7# (1,4)=1  (1,5)=4  (1,6)=4  (1,8)=4  (2,0)=7# (2,1)=7# (2,2)=7# (2,4)=1  (2,5)=4  (2,6)=4  (2,8)=4  (3,0)=7# (3,1)=7# (3,2)=7# (3,4)=1  (3,6)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,0)=8  (5,1)=8  (5,3)=8  (5,4)=1  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=1  (6,8)=6  (7,1)=8  (7,3)=8  (7,4)=1  (7,7)=6  (8,0)=8  (8,1)=8  (8,3)=8  (8,4)=1  (8,6)=6 
   (0.0 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (2,3) and color orange and mask Full at (2,0)
  _01: a rectangle with size (1,3) and color orange and mask Full at (1,1)
  _011: a point with color orange at (0,0)
  _0111: a point with color orange at (0,3)
  _01111: a point with color cyan at (3,3)
diff: 
delta:
   (108.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,3)=7# (0,4)=1  (0,5)=4  (0,6)=4  (0,7)=4  (1,1)=7# (1,2)=7# (1,3)=7# (1,4)=1  (1,5)=4  (1,6)=4  (1,8)=4  (2,0)=7# (2,1)=7# (2,2)=7# (2,4)=1  (2,5)=4  (2,6)=4  (2,8)=4  (3,0)=7# (3,1)=7# (3,2)=7# (3,4)=1  (3,6)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,0)=8  (5,1)=8  (5,3)=8  (5,4)=1  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=1  (6,8)=6  (7,1)=8  (7,3)=8  (7,4)=1  (7,7)=6  (8,0)=8  (8,1)=8  (8,3)=8  (8,4)=1  (8,6)=6 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=7# (0,4)=1  (0,7)=4  (1,1)=7# (1,2)=7# (1,4)=1  (1,5)=4  (1,6)=4  (1,8)=4  (2,0)=7# (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=1  (2,6)=4  (2,8)=4  (3,0)=7# (3,4)=1  (3,5)=4  (3,7)=4  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,3)=8  (5,4)=1  (5,6)=6  (5,8)=6  (6,0)=8  (6,3)=8  (6,4)=1  (6,5)=6  (6,8)=6  (7,0)=8  (7,2)=8  (7,4)=1  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,1)=8  (8,3)=8  (8,4)=1  (8,6)=6 
! 16 wrong pixels (generated / expected)

TEST a68b268e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 7412.6 bits (7412.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-143] Checking task a699fb00.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10035.3 = 10047.9
DL output with Mo: L = 12.6 + 15235.2 = 15247.8
DL input+output M: L = 25.2 + 25270.4 = 25295.7

# learning a model for train pairs
2.000	
1.844	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.758	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.693	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.628	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.568	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.508	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.447	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.385	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.359	OUT ADD ^.layer_00 = ^.layer_0
1.308	OUT ADD ^.layer_010 = ^.layer_01
1.271	OUT SPE ^.size = ^.size
1.254	IN  SPE ^.layer_0.shape.color = blue
1.238	IN  SPE ^.layer_01.shape.color = blue
1.221	IN  SPE ^.layer_011.shape.color = blue
1.205	IN  SPE ^.layer_0111.shape.color = blue
1.188	OUT SPE ^.layer_011.pos = ^.layer_0111.pos
1.177	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
1.166	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
1.159	IN  SPE ^.color = black
1.152	OUT SPE ^.layer_0.shape.size.i = 1
1.143	OUT SPE ^.layer_01.pos.i = ^.layer_011.pos.i
1.136	OUT SPE ^.layer_0.shape.mask = Full
1.130	OUT SPE ^.layer_01.shape.size.i = 1
1.124	OUT SPE ^.layer_01.shape.mask = Full
1.117	OUT SPE ^.layer_0111.pos.i = ^.layer_0111.pos.j * '3
1.109	OUT SPE ^.layer_0.pos.j = max(^.layer_0.pos.j, ^.layer_011.pos.j) - 2
1.102	OUT SPE ^.layer_011.shape.size.i = 1
1.096	OUT SPE ^.layer_011.shape.mask = Full
1.089	OUT SPE ^.layer_0111.shape.size.i = 1
1.083	OUT SPE ^.layer_0111.shape.mask = Full
1.078	OUT SPE ^.color = black
0.403	
0.403	IN  GEN ^.layer_0111.shape.color = ?
0.402	IN  GEN ^.layer_011.shape.color = ?
0.402	IN  GEN ^.layer_01.shape.color = ?
0.402	IN  GEN ^.layer_0.shape.color = ?
0.402	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,max(^.layer_0.pos.j, ^.layer_011.pos.j) - 2)
  _010: ^.layer_01
  _01: a rectangle with size (1,?) and color ? and mask Full at (^.layer_011.pos.i,?)
  _011: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask Full at ^.layer_0111.pos
  _0111: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (^.layer_0111.pos.j * '3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color blue at (?,?)
  _0111: a point with color blue at (?,?)

DL input  with Mi: L = 90.4 + 6842.7 = 6933.1
DL output with Mo: L = 221.1 + 5696.5 = 5917.6
DL input+output M: L = 311.5 + 12539.2 = 12850.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,max(^.layer_0.pos.j, ^.layer_011.pos.j) - 2)
  _010: ^.layer_01
  _01: a rectangle with size (1,?) and color ? and mask Full at (^.layer_011.pos.i,?)
  _011: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask Full at ^.layer_0111.pos
  _0111: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (^.layer_0111.pos.j * '3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 60.0 = 137.0
DL output with Mo: L = 221.1 + 5696.5 = 5917.6
DL input+output M: L = 298.0 + 5756.5 = 6054.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (5,5) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _010: a point with color blue at (0,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,2)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (3,3)
diff: 
delta:
   (38.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (3,1)
  _011: a point with color blue at (0,2)
  _0111: a point with color blue at (3,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a699fb00.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (4,2)
diff: 
delta: (1,7)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (1,1)
  _0: a rectangle with size (1,3) and color blue and mask Full at (8,3)
  _010: a point with color blue at (1,3)
  _01: a rectangle with size (1,5) and color red and mask Full at (1,2)
  _011: a rectangle with size (1,3) and color blue and mask Full at (4,2)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (6,6)
diff: 
delta: (1,5)=1  (1,7)=1  (4,3)=2  (6,7)=2  (8,4)=2 
   (246.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (1,7)
diff: 
delta: (4,2)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (4,2)
diff: 
delta: (1,7)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,7)
  _0111: a point with color blue at (1,5)
diff: 
delta: (4,2)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 16 wrong pixels (generated / expected)

TRAIN a699fb00.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (5,3)
diff: 
delta: (2,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (1,6)
  _0: a rectangle with size (1,3) and color blue and mask Full at (7,4)
  _010: a point with color blue at (1,8)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _011: a rectangle with size (1,5) and color blue and mask Full at (5,3)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (9,1)
diff: 
delta: (1,7)=2  (2,2)=2  (5,4)=2  (5,6)=2  (7,5)=2  (9,2)=2 
   (284.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (2,3)
diff: 
delta: (5,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (5,3)
diff: 
delta: (2,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,3)
  _0111: a point with color blue at (2,1)
diff: 
delta: (5,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 20 wrong pixels (generated / expected)

TRAIN a699fb00.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,2)
  _0111: a point with color blue at (2,4)
diff: 
delta: (2,6)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,2)
  _0111: a point with color blue at (2,6)
diff: 
delta: (2,4)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,2)
diff: 
delta: (2,6)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 21 wrong pixels (generated / expected)

TEST a699fb00.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 34.0 sec (34.0 sec/task)
bits-train-error = 5696.5 bits (5696.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-142] Checking task a740d043.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6692.2 = 6704.8
DL output with Mo: L = 12.6 + 4030.6 = 4043.2
DL input+output M: L = 25.2 + 10722.8 = 10748.0

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = strip(^.grid)
0.558	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.402	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.362	IN  SPE ^.color = blue
0.348	IN  SPE ^.layer_01.shape.mask = Full
0.014	
0.010	IN  DEL ^.layer_01
0.006	IN  DEL ^.layer_0
0.005	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
strip(^.grid)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 71.9 + 2239.8 = 2311.7
DL output with Mo: L = 11.9 + 0.0 = 11.9
DL input+output M: L = 83.7 + 2239.8 = 2323.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
strip(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 11.9 + 0.0 = 11.9
DL input+output M: L = 24.5 + 0.0 = 24.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,7) and color blue and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (2,3)=3  (3,3)=2 
   (0.0 bits)
data: 
2 2 0 
2 2 3 
0 0 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color blue and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (2,3)=3  (3,3)=2 
correct output grid

TRAIN a740d043.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,7) and color blue and layers
diff: 
delta: (1,2)=3  (1,4)=2  (2,2)=3  (2,4)=2 
   (0.0 bits)
data: 
3 0 2 
3 0 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
diff: 
delta: (1,2)=3  (1,4)=2  (2,2)=3  (2,4)=2 
correct output grid

TRAIN a740d043.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (7,6) and color blue and layers
diff: 
delta: (2,1)=5# (2,2)=5# (3,1)=5# (3,2)=5# (4,1)=6  (4,2)=6 
   (0.0 bits)
data: 
5#5#
5#5#
6 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color blue and layers
diff: 
delta: (2,1)=5# (2,2)=5# (3,1)=5# (3,2)=5# (4,1)=6  (4,2)=6 
correct output grid

TRAIN a740d043.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
diff: 
delta: (2,3)=2  (3,2)=2  (3,3)=3 
correct output grid

TEST a740d043.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-141] Checking task a78176bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 18017.9 = 18030.5
DL output with Mo: L = 12.6 + 19512.0 = 19524.6
DL input+output M: L = 25.2 + 37529.9 = 37555.1

# learning a model for train pairs
2.000	
1.508	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.106	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.844	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.476	OUT ADD ^.layer_01 = ^.layer_0
0.446	OUT SPE ^.size = ^.size
0.434	IN  SPE ^.layer_01.shape.color = grey
0.426	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.418	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j / '3
0.411	OUT SPE ^.layer_0.pos.j = '0 + ^.layer_01.pos.j - ^.layer_0.pos.j
0.407	IN  SPE ^.color = black
0.404	OUT SPE ^.color = black
0.174	
0.174	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j / '3,'0 + ^.layer_01.pos.j - ^.layer_0.pos.j)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 67.7 + 4130.3 = 4198.0
DL output with Mo: L = 108.2 + 3224.7 = 3333.0
DL input+output M: L = 175.9 + 7355.0 = 7530.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j / '3,'0 + ^.layer_01.pos.j - ^.layer_0.pos.j)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 0.0 = 67.5
DL output with Mo: L = 108.2 + 3224.7 = 3333.0
DL input+output M: L = 175.8 + 3224.7 = 3400.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,4)
  _01: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
diff: 
delta:
   (47.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN a78176bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color brown and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
diff: 
delta:
   (67.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
diff: 
delta: (1,6)=9# (2,7)=9# (3,8)=9# (4,9)=9#
! 13 wrong pixels (generated / expected)

TRAIN a78176bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,3) and color grey and mask xx.|.x.|x..|xx.|xxx at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask x......|.x.....|..x....|...x...|....x..|.....x.|......x at (0,3)
  _01: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
diff: 
delta: (6,0)=2  (7,1)=2  (8,2)=2  (9,3)=2 
   (207.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,3) and color grey and mask xx.|.x.|x..|xx.|xxx at (3,3)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN a78176bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST a78176bb.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 4.0 sec (4.0 sec/task)
bits-train-error = 3224.7 bits (3224.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-140] Checking task a79310a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3428.7 = 3441.3
DL output with Mo: L = 12.6 + 3428.7 = 3441.3
DL input+output M: L = 25.2 + 6857.4 = 6882.6

# learning a model for train pairs
2.000	
1.397	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, red)
0.505	OUT SPE ^.size = ^.size
0.431	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 0)
0.382	IN  SPE ^.layer_0.shape.color = cyan
0.354	IN  SPE ^.layer_0.shape.mask = Full
0.332	IN  SPE ^.color = black
0.311	OUT SPE ^.color = black
0.025	
0.024	IN  GEN ^.layer_0.shape.color = ?
0.024	IN  GEN ^.layer_0.shape.mask = ?
0.024	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0.shape, red) at ^.layer_0.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 983.4 = 1026.7
DL output with Mo: L = 43.1 + 0.0 = 43.1
DL input+output M: L = 86.4 + 983.4 = 1069.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0.shape, red) at ^.layer_0.pos + (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 43.1 + 0.0 = 43.1
DL input+output M: L = 82.0 + 0.0 = 82.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|.x at (0,1)
diff: 
delta:
correct output grid

TEST a79310a0.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-139] Checking task a85d4709.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4823.0 = 4835.6
DL output with Mo: L = 12.6 + 5059.5 = 5072.1
DL input+output M: L = 25.2 + 9882.5 = 9907.7

# learning a model for train pairs
2.000	
1.411	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.002	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.899	OUT SPE ^.size = ^.size
0.849	OUT SPE ^.layer_0.shape.size.j = 3
0.803	IN  SPE ^.layer_0.shape.color = grey
0.773	OUT SPE ^.layer_0.pos.j = '0
0.747	OUT SPE ^.layer_0.shape.mask = Full
0.727	IN  SPE ^.color = black
0.391	
0.385	IN  DEL ^.layer_0
0.385	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1625.0 = 1667.3
DL output with Mo: L = 45.9 + 1891.5 = 1937.4
DL input+output M: L = 88.1 + 3516.5 = 3604.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 45.9 + 1891.5 = 1937.4
DL input+output M: L = 58.5 + 1891.5 = 1950.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=5# (1,1)=5# (2,0)=5#
   (0.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,0)=4  (1,1)=4  (1,2)=4 
   (127.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=5# (1,1)=5# (2,0)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=5# (1,2)=5# (2,2)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=5# (1,2)=5# (2,2)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=5#
   (0.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (21.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=5# (1,1)=5# (2,0)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=5# (1,2)=5# (2,1)=5#
   (0.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (1,0)
diff: 
delta:
   (21.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=5# (1,2)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,2)=5# (1,0)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)

TEST a85d4709.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.1 sec (9.1 sec/task)
bits-train-error = 1891.5 bits (1891.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-138] Checking task a87f7484.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 28680.1 = 28692.7
DL output with Mo: L = 12.6 + 4387.2 = 4399.8
DL input+output M: L = 25.2 + 33067.4 = 33092.6

# learning a model for train pairs
2.000	
1.477	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.217	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.958	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.841	OUT SPE ^.size = ^.layer_0.shape.size
0.770	OUT SPE ^.layer_0.pos = '(0, 0)
0.747	OUT SPE ^.color = black
0.744	IN  SPE ^.color = black
0.580	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.414	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.329	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.317	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.012	
0.012	IN  DEL ^.layer_01111
0.011	IN  DEL ^.layer_0111
0.010	IN  DEL ^.layer_011
0.009	IN  DEL ^.layer_01
0.009	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.0 + 8733.4 = 8872.4
DL output with Mo: L = 33.1 + 0.0 = 33.1
DL input+output M: L = 172.1 + 8733.4 = 8905.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 33.1 + 0.0 = 33.1
DL input+output M: L = 72.0 + 0.0 = 72.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,0)
diff: 
delta: (0,0)=6  (0,2)=6  (1,1)=6  (1,2)=6  (2,0)=6  (2,2)=6  (3,0)=4  (3,2)=4  (4,1)=4  (4,2)=4  (5,0)=4  (5,2)=4 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,0)
diff: 
delta: (0,0)=6  (0,2)=6  (1,1)=6  (1,2)=6  (2,0)=6  (2,2)=6  (3,0)=4  (3,2)=4  (4,1)=4  (4,2)=4  (5,0)=4  (5,2)=4 
correct output grid

TRAIN a87f7484.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (0,6)
diff: 
delta: (0,0)=2  (0,3)=3  (0,9)=1  (1,0)=2  (1,3)=3  (1,9)=1  (2,1)=2  (2,2)=2  (2,4)=3  (2,5)=3  (2,10)=1  (2,11)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (0,6)
diff: 
delta: (0,0)=2  (0,3)=3  (0,9)=1  (1,0)=2  (1,3)=3  (1,9)=1  (2,1)=2  (2,2)=2  (2,4)=3  (2,5)=3  (2,10)=1  (2,11)=1 
correct output grid

TRAIN a87f7484.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,3)
diff: 
delta: (0,0)=3  (0,6)=2  (0,9)=8  (0,12)=1  (1,1)=3  (1,2)=3  (1,7)=2  (1,8)=2  (1,10)=8  (1,11)=8  (1,13)=1  (1,14)=1  (2,1)=3  (2,7)=2  (2,10)=8  (2,13)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,3)
diff: 
delta: (0,0)=3  (0,6)=2  (0,9)=8  (0,12)=1  (1,1)=3  (1,2)=3  (1,7)=2  (1,8)=2  (1,10)=8  (1,11)=8  (1,13)=1  (1,14)=1  (2,1)=3  (2,7)=2  (2,10)=8  (2,13)=1 
correct output grid

TRAIN a87f7484.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (12,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta: (3,0)=3  (4,1)=3  (4,2)=3  (5,0)=3  (6,0)=2  (7,1)=2  (7,2)=2  (8,0)=2  (9,0)=8  (10,1)=8  (10,2)=8  (11,0)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta: (3,0)=3  (4,1)=3  (4,2)=3  (5,0)=3  (6,0)=2  (7,1)=2  (7,2)=2  (8,0)=2  (9,0)=8  (10,1)=8  (10,2)=8  (11,0)=8 
correct output grid

TRAIN a87f7484.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask x.x|xx.|x.x at (6,0)
diff: 
delta: (0,1)=5# (1,0)=5# (1,2)=5# (2,1)=5# (3,1)=3  (4,0)=3  (4,2)=3  (5,1)=3  (9,1)=4  (10,0)=4  (10,2)=4  (11,1)=4  (12,1)=8  (13,0)=8  (13,2)=8  (14,1)=8 
correct output grid

TEST a87f7484.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-137] Checking task a8c38be5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 62713.4 = 62726.0
DL output with Mo: L = 12.6 + 21413.5 = 21426.1
DL input+output M: L = 25.2 + 84126.9 = 84152.1

# learning a model for train pairs
2.000	
1.895	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.795	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.695	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.595	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.495	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.415	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.346	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.532	
0.531	IN  DEL ^.layer_01
0.531	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 51042.7 = 51106.9
DL output with Mo: L = 138.9 + 11232.9 = 11371.7
DL input+output M: L = 203.1 + 62275.5 = 62478.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 11232.9 = 11371.7
DL input+output M: L = 151.5 + 11232.9 = 11384.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,14) and color black and layers
diff: 
delta: (0,0)=5# (0,1)=5# (0,2)=5# (1,0)=8  (1,1)=5# (1,2)=5# (1,8)=2  (1,9)=2  (1,10)=2  (2,0)=8  (2,1)=8  (2,2)=5# (2,8)=5# (2,9)=2  (2,10)=5# (3,2)=2  (3,3)=5# (3,4)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,2)=2  (4,3)=2  (4,4)=5# (5,2)=2  (5,3)=5# (5,4)=5# (5,6)=5# (5,7)=5# (5,8)=5# (6,6)=5# (6,7)=5# (6,8)=5# (6,10)=5# (6,11)=5# (6,12)=5# (7,1)=5# (7,2)=1  (7,3)=1  (7,6)=5# (7,7)=5# (7,8)=5# (7,10)=5# (7,11)=4  (7,12)=5# (8,1)=5# (8,2)=5# (8,3)=1  (8,10)=4  (8,11)=4  (8,12)=4  (9,1)=5# (9,2)=5# (9,3)=5# (9,6)=5# (9,7)=5# (9,8)=3  (10,6)=5# (10,7)=3  (10,8)=3  (11,0)=5# (11,1)=5# (11,2)=5# (11,6)=5# (11,7)=5# (11,8)=3  (11,10)=6  (11,11)=6  (11,12)=5# (12,0)=5# (12,1)=5# (12,2)=9# (12,10)=6  (12,11)=5# (12,12)=5# (13,0)=5# (13,1)=9# (13,2)=9# (13,10)=5# (13,11)=5# (13,12)=5#
   (0.0 bits)
data: a background with size (9,9) and color grey and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,3)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (7,3)
  _011: a rectangle with size (3,2) and color red and mask x.|xx|x. at (3,0)
  _0111: a rectangle with size (3,2) and color green and mask .x|xx|.x at (3,7)
  _01111: a rectangle with size (2,2) and color pink and mask xx|x. at (0,0)
diff: 
delta: (0,7)=1  (0,8)=1  (1,8)=1  (7,0)=8  (7,8)=9# (8,0)=8  (8,1)=8  (8,7)=9# (8,8)=9#
   (561.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
diff: 
delta: (0,0)=5# (0,1)=5# (0,2)=5# (1,0)=8  (1,1)=5# (1,2)=5# (1,8)=2  (1,9)=2  (1,10)=2  (2,0)=8  (2,1)=8  (2,2)=5# (2,8)=5# (2,9)=2  (2,10)=5# (3,2)=2  (3,3)=5# (3,4)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,2)=2  (4,3)=2  (4,4)=5# (5,2)=2  (5,3)=5# (5,4)=5# (5,6)=5# (5,7)=5# (5,8)=5# (6,6)=5# (6,7)=5# (6,8)=5# (6,10)=5# (6,11)=5# (6,12)=5# (7,1)=5# (7,2)=1  (7,3)=1  (7,6)=5# (7,7)=5# (7,8)=5# (7,10)=5# (7,11)=4  (7,12)=5# (8,1)=5# (8,2)=5# (8,3)=1  (8,10)=4  (8,11)=4  (8,12)=4  (9,1)=5# (9,2)=5# (9,3)=5# (9,6)=5# (9,7)=5# (9,8)=3  (10,6)=5# (10,7)=3  (10,8)=3  (11,0)=5# (11,1)=5# (11,2)=5# (11,6)=5# (11,7)=5# (11,8)=3  (11,10)=6  (11,11)=6  (11,12)=5# (12,0)=5# (12,1)=5# (12,2)=9# (12,10)=6  (12,11)=5# (12,12)=5# (13,0)=5# (13,1)=9# (13,2)=9# (13,10)=5# (13,11)=5# (13,12)=5#
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (16,14) and color black and layers
diff: 
delta: (0,11)=5# (0,12)=5# (0,13)=4  (1,1)=5# (1,2)=5# (1,3)=5# (1,11)=5# (1,12)=4  (1,13)=4  (2,1)=3  (2,2)=5# (2,3)=5# (2,5)=5# (2,6)=8  (2,7)=8  (2,11)=5# (2,12)=5# (2,13)=4  (3,1)=3  (3,2)=3  (3,3)=5# (3,5)=5# (3,6)=5# (3,7)=8  (4,5)=5# (4,6)=5# (4,7)=5# (5,10)=5# (5,11)=5# (5,12)=5# (6,10)=5# (6,11)=5# (6,12)=9# (7,10)=5# (7,11)=9# (7,12)=9# (8,1)=1  (8,2)=1  (8,3)=1  (8,6)=5# (8,7)=5# (8,8)=5# (9,1)=5# (9,2)=1  (9,3)=5# (9,6)=5# (9,7)=5# (9,8)=5# (9,10)=6  (9,11)=5# (9,12)=5# (10,1)=5# (10,2)=5# (10,3)=5# (10,6)=5# (10,7)=5# (10,8)=5# (10,10)=6  (10,11)=6  (10,12)=5# (11,10)=6  (11,11)=5# (11,12)=5# (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,5)=5# (13,6)=5# (13,9)=5# (13,10)=5# (13,11)=5# (14,4)=5# (14,5)=5# (14,6)=5# (14,9)=5# (14,10)=2  (14,11)=5# (15,9)=2  (15,10)=2  (15,11)=2 
   (0.0 bits)
data: a background with size (9,9) and color grey and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,3)
  _01: a rectangle with size (2,3) and color red and mask .x.|xxx at (7,3)
  _011: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (3,0)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (3,7)
  _01111: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
diff: 
delta: (0,7)=8  (0,8)=8  (1,8)=8  (7,0)=3  (7,8)=9# (8,0)=3  (8,1)=3  (8,7)=9# (8,8)=9#
   (561.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
diff: 
delta: (0,11)=5# (0,12)=5# (0,13)=4  (1,1)=5# (1,2)=5# (1,3)=5# (1,11)=5# (1,12)=4  (1,13)=4  (2,1)=3  (2,2)=5# (2,3)=5# (2,5)=5# (2,6)=8  (2,7)=8  (2,11)=5# (2,12)=5# (2,13)=4  (3,1)=3  (3,2)=3  (3,3)=5# (3,5)=5# (3,6)=5# (3,7)=8  (4,5)=5# (4,6)=5# (4,7)=5# (5,10)=5# (5,11)=5# (5,12)=5# (6,10)=5# (6,11)=5# (6,12)=9# (7,10)=5# (7,11)=9# (7,12)=9# (8,1)=1  (8,2)=1  (8,3)=1  (8,6)=5# (8,7)=5# (8,8)=5# (9,1)=5# (9,2)=1  (9,3)=5# (9,6)=5# (9,7)=5# (9,8)=5# (9,10)=6  (9,11)=5# (9,12)=5# (10,1)=5# (10,2)=5# (10,3)=5# (10,6)=5# (10,7)=5# (10,8)=5# (10,10)=6  (10,11)=6  (10,12)=5# (11,10)=6  (11,11)=5# (11,12)=5# (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,5)=5# (13,6)=5# (13,9)=5# (13,10)=5# (13,11)=5# (14,4)=5# (14,5)=5# (14,6)=5# (14,9)=5# (14,10)=2  (14,11)=5# (15,9)=2  (15,10)=2  (15,11)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
diff: 
delta: (0,10)=5# (0,11)=5# (0,12)=5# (1,1)=1  (1,2)=5# (1,3)=5# (1,10)=6  (1,11)=5# (1,12)=5# (2,1)=1  (2,2)=1  (2,3)=5# (2,5)=2  (2,6)=2  (2,7)=2  (2,10)=6  (2,11)=6  (2,12)=5# (3,1)=1  (3,2)=5# (3,3)=5# (3,5)=5# (3,6)=2  (3,7)=5# (4,5)=5# (4,6)=5# (4,7)=5# (5,10)=5# (5,11)=5# (5,12)=5# (6,2)=5# (6,3)=5# (6,4)=5# (6,10)=5# (6,11)=5# (6,12)=5# (7,2)=5# (7,3)=8  (7,4)=5# (7,6)=5# (7,7)=5# (7,8)=1  (7,10)=5# (7,11)=5# (7,12)=5# (8,2)=8  (8,3)=8  (8,4)=8  (8,6)=5# (8,7)=1  (8,8)=1  (9,6)=5# (9,7)=5# (9,8)=1  (10,1)=5# (10,2)=4  (10,3)=4  (10,11)=3  (10,12)=3  (10,13)=5# (11,1)=5# (11,2)=5# (11,3)=4  (11,11)=3  (11,12)=5# (11,13)=5# (12,1)=5# (12,2)=5# (12,3)=5# (12,6)=5# (12,7)=5# (12,8)=5# (12,11)=5# (12,12)=5# (12,13)=5# (13,6)=5# (13,7)=5# (13,8)=7# (14,6)=5# (14,7)=7# (14,8)=7#
! size mismatch, 10x10 instead of 9x9

TEST a8c38be5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 11232.9 bits (11232.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-136] Checking task a8d7556c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 149136.1 = 149148.7
DL output with Mo: L = 12.6 + 149136.1 = 149148.7
DL input+output M: L = 25.2 + 298272.1 = 298297.3

# learning a model for train pairs
2.000	
1.105	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.300	OUT ADD ^.layer_0 = ^.layer_0
0.255	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.225	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.200	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.183	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.178	OUT SPE ^.size = ^.size
0.176	OUT SPE ^.layer_0111.shape.size = '(2, 2)
0.175	OUT SPE ^.layer_01.shape.color = red
0.174	IN  SPE ^.layer_0.shape.color = grey
0.169	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.168	IN  SPE ^.layer_01.shape.color = grey
0.167	OUT SPE ^.layer_011.shape.color = red
0.165	OUT SPE ^.layer_011.shape.size = '(2, 2)
0.164	OUT SPE ^.layer_0111.shape.color = red
0.163	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j + 1
0.162	OUT SPE ^.layer_01.shape.mask = Full
0.161	IN  SPE ^.layer_01.shape.mask = Full
0.161	OUT SPE ^.layer_011.shape.mask = Full
0.160	OUT SPE ^.layer_0111.shape.mask = Full
0.159	OUT SPE ^.layer_01111.shape.mask = Full
0.062	
0.062	IN  GEN ^.layer_01.shape.color = ?
0.062	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_01.shape.size.j + 1) and color red and mask Full at (?,?)
  _011: a rectangle with size '(2, 2) and color red and mask Full at (?,?)
  _0111: a rectangle with size '(2, 2) and color red and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 71.9 + 14529.6 = 14601.5
DL output with Mo: L = 153.5 + 9023.1 = 9176.6
DL input+output M: L = 225.4 + 23552.7 = 23778.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_01.shape.size.j + 1) and color red and mask Full at (?,?)
  _011: a rectangle with size '(2, 2) and color red and mask Full at (?,?)
  _0111: a rectangle with size '(2, 2) and color red and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 0.0 = 67.5
DL output with Mo: L = 153.5 + 9023.1 = 9176.6
DL input+output M: L = 221.1 + 9023.1 = 9244.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (8,0)
diff: 
delta: (13,17)=5# (15,17)=5# (17,12)=5#
   (0.0 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (15,4)
  _011: a rectangle with size (2,2) and color red and mask Full at (5,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (6,0)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,15)
diff: 
delta: (8,0)=5# (13,17)=5# (15,13)=2  (15,14)=2  (15,17)=5# (16,13)=2  (16,14)=2  (17,12)=5#
   (394.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (8,0)
diff: 
delta: (13,17)=5# (15,17)=5# (17,12)=5#
! 26 wrong pixels (generated / expected)

TRAIN a8d7556c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (17,0)
diff: 
delta: (15,0)=5# (17,4)=5# (17,5)=5#
   (0.0 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a rectangle with size (2,3) and color red and mask Full at (3,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (1,13)
  _0111: a rectangle with size (2,2) and color red and mask Full at (15,6)
  _01111: a rectangle with size (3,2) and color red and mask Full at (4,11)
diff: 
delta: (15,0)=5# (16,2)=2  (16,3)=2  (17,0)=5# (17,1)=5# (17,2)=2  (17,3)=2  (17,4)=5# (17,5)=5#
   (433.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (17,0)
diff: 
delta: (15,0)=5# (17,4)=5# (17,5)=5#
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (17,0)
diff: 
delta: (15,0)=5# (17,2)=0  (17,3)=0 
! 33 wrong pixels (generated / expected)

TRAIN a8d7556c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a rectangle with size (4,2) and color red and mask Full at (7,10)
  _011: a rectangle with size (2,2) and color red and mask Full at (1,6)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,15)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff: 
delta:
   (74.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (1,18) and color grey and mask Full at (3,0)
  _01: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
diff: 
delta: (1,0)=5# (3,3)=0  (3,10)=0  (3,11)=0 
! 222 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (11,2) and color grey and mask Full at (0,4)
  _01: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
diff: 
delta: (1,0)=5# (8,4)=5# (8,5)=0  (9,4)=5# (9,5)=0 
! 216 wrong pixels (generated / expected)

TRAIN a8d7556c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ...x.x..xx.xxxxx..|..xx.x.x...xxxx.xx|x...xx.x..x.x.xx.x|.xxx.xx.xx...xx.xx|xxxxxxx..xx....xxx|.xxxx.xxx.x..xx.x.|xx.xxxxxx..x..x.xx|xxxx..xx.xxxxx.xx.|x.x..xxx...xxxx...|....x...xxxx..x.xx|..xx.xxx..x.xxxxx.|...xx.x..xx.xxxxxx|.xxxx..x...xxxxx.x|xxxxxxx.xxxxxxx..x|xx.xxx.x.xxxx.x..x|x.xxxx.xx...xxxx.x|.x..xxxxxxxxxxxxxx|x......x.x.xx.xx.. at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (10,0)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (1,15) and color grey and mask Full at (13,0)
  _01: a rectangle with size (18,18) and color grey and mask ...x.x..xx.xxxxx..|..xx.x.x...xxxx.xx|x...xx.x..x.x.xx.x|.xxx.xx.xx...xx.xx|xxxxxxx..xx....xxx|.xxxx.xxx.x..xx.x.|xx.xxxxxx..x..x.xx|xxxx..xx.xxxxx.xx.|x.x..xxx...xxxx...|....x...xxxx..x.xx|..xx.xxx..x.xxxxx.|...xx.x..xx.xxxxxx|.xxxx..x...xxxxx.x|xxxxxxx.xxxxxxx..x|xx.xxx.x.xxxx.x..x|x.xxxx.xx...xxxx.x|.x..xxxxxxxxxxxxxx|x......x.x.xx.xx.. at (0,0)
diff: 
delta: (10,0)=5# (13,7)=0 
! 213 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (1,17) and color grey and mask Full at (16,1)
  _01: a rectangle with size (18,18) and color grey and mask ...x.x..xx.xxxxx..|..xx.x.x...xxxx.xx|x...xx.x..x.x.xx.x|.xxx.xx.xx...xx.xx|xxxxxxx..xx....xxx|.xxxx.xxx.x..xx.x.|xx.xxxxxx..x..x.xx|xxxx..xx.xxxxx.xx.|x.x..xxx...xxxx...|....x...xxxx..x.xx|..xx.xxx..x.xxxxx.|...xx.x..xx.xxxxxx|.xxxx..x...xxxxx.x|xxxxxxx.xxxxxxx..x|xx.xxx.x.xxxx.x..x|x.xxxx.xx...xxxx.x|.x..xxxxxxxxxxxxxx|x......x.x.xx.xx.. at (0,0)
diff: 
delta: (10,0)=5# (16,2)=0  (16,3)=0 
! 211 wrong pixels (generated / expected)

TEST a8d7556c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.4 sec (58.4 sec/task)
bits-train-error = 9023.1 bits (9023.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-135] Checking task a9f96cdd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2134.5 = 2147.2
DL output with Mo: L = 12.6 + 4610.5 = 4623.1
DL input+output M: L = 25.2 + 6745.0 = 6770.3

# learning a model for train pairs
2.000	
1.593	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.412	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.286	OUT SPE ^.size = ^.size
1.183	IN  SPE ^.layer_0.shape.color = red
1.137	IN  SPE ^.color = black
1.099	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j - 1
1.077	OUT SPE ^.color = black
0.649	
0.647	IN  GEN ^.layer_0.shape.color = ?
0.647	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at (?,^.layer_0.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 33.0 + 920.3 = 953.3
DL output with Mo: L = 35.3 + 2893.4 = 2928.7
DL input+output M: L = 68.3 + 3813.7 = 3882.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at (?,^.layer_0.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 35.3 + 2893.4 = 2928.7
DL input+output M: L = 64.8 + 2893.4 = 2958.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (0,0)
diff: 
delta: (0,2)=6  (2,0)=8  (2,2)=7#
   (116.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,5) and color black and layers
  _0: a point with color red at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (2,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,3)=7#
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (0,4)=6  (2,2)=8  (2,4)=7#
   (116.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST a9f96cdd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 2893.4 bits (2893.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-134] Checking task aabf363d.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9959.5 = 9972.1
DL output with Mo: L = 12.6 + 9232.1 = 9244.7
DL input+output M: L = 25.2 + 19191.5 = 19216.7

# learning a model for train pairs
2.000	
1.172	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.352	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.309	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.241	OUT SPE ^.layer_0 = coloring(^.layer_0, ^.layer_01.shape.color)
0.202	OUT SPE ^.size = ^.size
0.196	OUT SPE ^.color = black
0.191	IN  SPE ^.color = black
0.009	
0.009	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, ^.layer_01.shape.color)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.1 + 1819.0 = 1874.0
DL output with Mo: L = 32.5 + 0.0 = 32.5
DL input+output M: L = 87.6 + 1819.0 = 1906.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, ^.layer_01.shape.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 0.0 = 54.9
DL output with Mo: L = 32.5 + 0.0 = 32.5
DL input+output M: L = 87.5 + 0.0 = 87.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
  _01: a point with color yellow at (6,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
  _01: a point with color yellow at (6,0)
diff: 
delta:
correct output grid

TRAIN aabf363d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
  _01: a point with color pink at (6,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color pink and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
  _01: a point with color pink at (6,0)
diff: 
delta:
correct output grid

TRAIN aabf363d.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxx..|xxxxx|..xx.|.xx..|.xxx. at (1,1)
  _01: a point with color red at (6,0)
diff: 
delta:
correct output grid

TEST aabf363d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-133] Checking task aba27056.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16095.3 = 16107.9
DL output with Mo: L = 12.6 + 33098.6 = 33111.2
DL input+output M: L = 25.2 + 49193.9 = 49219.1

# learning a model for train pairs
2.000	
1.156	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.255	OUT ADD ^.layer_00 = ^.layer_0
0.239	OUT SPE ^.size = ^.size
0.234	OUT SPE ^.layer_0.shape.color = yellow
0.229	IN  SPE ^.color = black
0.225	OUT SPE ^.layer_0.pos.j = '0
0.223	OUT SPE ^.color = black
0.073	
0.073	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2404.1 = 2443.0
DL output with Mo: L = 52.2 + 2295.1 = 2347.3
DL input+output M: L = 91.2 + 4699.2 = 4790.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 52.2 + 2295.1 = 2347.3
DL input+output M: L = 91.1 + 2295.1 = 2386.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
  _0: a rectangle with size (6,7) and color yellow and mask ...x...|x..x..x|.x.x.x.|..xxx..|...x...|..xxx.. at (0,0)
diff: 
delta:
   (68.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (4,1)
diff: 
delta: (4,3)=0  (5,2)=0  (5,3)=0  (5,4)=0 
! 16 wrong pixels (generated / expected)

TRAIN aba27056.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
  _0: a rectangle with size (9,8) and color yellow and mask x.......|.x......|..x.....|...x.xxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|...x.xxx|..x..... at (0,0)
diff: 
delta:
   (104.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN aba27056.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
  _0: a rectangle with size (5,6) and color yellow and mask .xxxx.|.xxxx.|..xx..|.xxxx.|x.xx.x at (1,0)
diff: 
delta:
   (57.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (5,6) and color black and mask .xxxx.|.xxxx.|..xx..|xxxxxx|xxxxxx at (1,0)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN aba27056.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,4) and color red and mask xxxx|x..x|x...|x...|x...|x...|x...|x..x|xxxx at (0,1)
diff: 
delta:
! 51 wrong pixels (generated / expected)

TEST aba27056.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 2295.1 bits (2295.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-132] Checking task ac0a08a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3957.8 = 3970.4
DL output with Mo: L = 12.6 + 61717.1 = 61729.7
DL input+output M: L = 25.2 + 65674.9 = 65700.1

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = ^.grid * colorCount(^.grid)
0.845	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.687	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.668	IN  SPE ^.color = black
0.012	
0.008	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_0
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
^.grid * colorCount(^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 2605.4 = 2651.2
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 69.8 + 2605.4 = 2675.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
^.grid * colorCount(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 36.6 + 0.0 = 36.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (1,2)=7#
   (0.0 bits)
data: 
2 2 0 0 0 0 
2 2 0 0 0 0 
0 0 0 0 7#7#
0 0 0 0 7#7#
0 0 0 0 0 0 
0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=2  (1,2)=7#
correct output grid

TRAIN ac0a08a4.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=4  (1,2)=8  (2,0)=6 
   (0.0 bits)
data: 
0 0 0 4 4 4 0 0 0 
0 0 0 4 4 4 0 0 0 
0 0 0 4 4 4 0 0 0 
0 0 0 0 0 0 8 8 8 
0 0 0 0 0 0 8 8 8 
0 0 0 0 0 0 8 8 8 
6 6 6 0 0 0 0 0 0 
6 6 6 0 0 0 0 0 0 
6 6 6 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=4  (1,2)=8  (2,0)=6 
correct output grid

TRAIN ac0a08a4.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=6  (0,2)=9# (1,0)=3  (1,2)=2  (2,1)=7#
   (0.0 bits)
data: 
0 0 0 0 0 6 6 6 6 6 9#9#9#9#9#
0 0 0 0 0 6 6 6 6 6 9#9#9#9#9#
0 0 0 0 0 6 6 6 6 6 9#9#9#9#9#
0 0 0 0 0 6 6 6 6 6 9#9#9#9#9#
0 0 0 0 0 6 6 6 6 6 9#9#9#9#9#
3 3 3 3 3 0 0 0 0 0 2 2 2 2 2 
3 3 3 3 3 0 0 0 0 0 2 2 2 2 2 
3 3 3 3 3 0 0 0 0 0 2 2 2 2 2 
3 3 3 3 3 0 0 0 0 0 2 2 2 2 2 
3 3 3 3 3 0 0 0 0 0 2 2 2 2 2 
0 0 0 0 0 7#7#7#7#7#0 0 0 0 0 
0 0 0 0 0 7#7#7#7#7#0 0 0 0 0 
0 0 0 0 0 7#7#7#7#7#0 0 0 0 0 
0 0 0 0 0 7#7#7#7#7#0 0 0 0 0 
0 0 0 0 0 7#7#7#7#7#0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=6  (0,2)=9# (1,0)=3  (1,2)=2  (2,1)=7#
correct output grid

TRAIN ac0a08a4.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (1,1)=9# (1,2)=6  (2,0)=8 
correct output grid

TEST ac0a08a4.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-131] Checking task ae3edfdc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10523.2 = 10535.8
DL output with Mo: L = 12.6 + 10523.2 = 10535.8
DL input+output M: L = 25.2 + 21046.4 = 21071.7

# learning a model for train pairs
2.000	
1.707	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.519	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.455	OUT SPE ^.size = ^.size
1.396	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.334	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.277	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.220	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.162	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.105	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.047	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.988	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.928	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.875	OUT SPE ^.layer_011 = ^.layer_011
0.857	OUT SPE ^.layer_0.shape.size.i = 3
0.841	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.826	IN  SPE ^.layer_011111.shape.color = green
0.810	OUT SPE ^.layer_0.pos.i = ^.layer_0111.pos.i - 1
0.796	OUT SPE ^.layer_01.pos.i = span(^.layer_01.pos.j, ^.layer_0111.pos.j)
0.782	OUT SPE ^.layer_01.pos.j = ^.layer_0111111.pos.j - 1
0.770	OUT SPE ^.layer_0111.pos.j = ^.layer_0111111.pos.j - ^.layer_011.pos.j - ^.layer_0.pos.j
0.763	OUT SPE ^.color = black
0.756	IN  SPE ^.color = black
0.197	
0.196	IN  GEN ^.layer_011111.shape.color = ?
0.196	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0111.pos.i - 1,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (span(^.layer_01.pos.j, ^.layer_0111.pos.j),^.layer_0111111.pos.j - 1)
  _011: ^.layer_011
  _0111: a point with color ? at (?,^.layer_0111111.pos.j - ^.layer_011.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color green at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 126.6 + 5914.3 = 6040.9
DL output with Mo: L = 227.9 + 1696.8 = 1924.7
DL input+output M: L = 354.5 + 7611.1 = 7965.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0111.pos.i - 1,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (span(^.layer_01.pos.j, ^.layer_0111.pos.j),^.layer_0111111.pos.j - 1)
  _011: ^.layer_011
  _0111: a point with color ? at (?,^.layer_0111111.pos.j - ^.layer_011.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 123.1 + 20.0 = 143.1
DL output with Mo: L = 227.9 + 1696.8 = 1924.7
DL input+output M: L = 351.0 + 1716.8 = 2067.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,3)
  _01: a point with color green at (4,0)
  _011: a point with color red at (4,3)
  _0111: a point with color green at (4,8)
  _01111: a point with color orange at (6,11)
  _011111: a point with color green at (9,3)
  _0111111: a point with color blue at (10,11)
diff: 
delta: (10,5)=7# (10,14)=7# (14,11)=7#
   (2.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (3,2)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (9,10)
  _011: a point with color red at (4,3)
  _0111: a point with color blue at (10,11)
diff: 
delta:
   (58.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,3)
  _01: a point with color green at (4,0)
  _011: a point with color red at (4,3)
  _0111: a point with color green at (4,8)
  _01111: a point with color orange at (6,11)
  _011111: a point with color green at (9,3)
  _0111111: a point with color orange at (10,5)
diff: 
delta: (10,11)=1  (10,14)=7# (14,11)=7#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,3)
  _01: a point with color green at (4,0)
  _011: a point with color red at (4,3)
  _0111: a point with color green at (4,8)
  _01111: a point with color orange at (6,11)
  _011111: a point with color green at (9,3)
  _0111111: a point with color blue at (10,11)
diff: 
delta: (10,5)=7# (10,14)=7# (14,11)=7#
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,3)
  _01: a point with color green at (4,0)
  _011: a point with color red at (4,3)
  _0111: a point with color green at (4,8)
  _01111: a point with color orange at (6,11)
  _011111: a point with color orange at (10,5)
  _0111111: a point with color green at (9,3)
diff: 
delta: (10,11)=1  (10,14)=7# (14,11)=7#
! 20 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (0,3)
  _01: a point with color orange at (2,0)
  _011: a point with color blue at (2,3)
  _0111: a point with color orange at (2,9)
  _01111: a point with color orange at (8,3)
  _011111: a point with color green at (10,5)
  _0111111: a point with color red at (10,11)
diff: 
delta: (14,11)=3 
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color green and mask Even Checkboard at (10,10)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (10,11)
diff: 
delta:
   (56.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (0,3)
  _01: a point with color orange at (2,0)
  _011: a point with color blue at (2,3)
  _0111: a point with color orange at (2,9)
  _01111: a point with color orange at (8,3)
  _011111: a point with color green at (10,5)
  _0111111: a point with color red at (10,11)
diff: 
delta: (14,11)=3 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (0,3)
  _01: a point with color orange at (2,0)
  _011: a point with color blue at (2,3)
  _0111: a point with color orange at (2,9)
  _01111: a point with color orange at (8,3)
  _011111: a point with color red at (10,11)
  _0111111: a point with color green at (10,5)
diff: 
delta: (14,11)=3 
! 18 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color orange at (6,1)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
  _01111: a point with color green at (11,14)
  _011111: a point with color green at (14,6)
  _0111111: a point with color orange at (14,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Even Checkboard at (10,6)
  _01: a rectangle with size (2,2) and color orange and mask Even Checkboard at (6,9)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
diff: 
delta:
   (55.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color orange at (6,1)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
  _01111: a point with color green at (11,14)
  _011111: a point with color green at (14,6)
  _0111111: a point with color orange at (14,10)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color orange at (6,1)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
  _01111: a point with color green at (11,14)
  _011111: a point with color orange at (14,10)
  _0111111: a point with color green at (14,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Span: same int

TEST ae3edfdc.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 1696.8 bits (1696.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-130] Checking task ae4f1146.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 54396.7 = 54409.4
DL output with Mo: L = 12.6 + 6114.0 = 6126.6
DL input+output M: L = 25.2 + 60510.7 = 60535.9

# learning a model for train pairs
2.000	
1.419	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.199	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.895	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.806	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.721	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.637	OUT SPE ^.size = ^.layer_0.shape.size
0.578	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.521	OUT SPE ^.color = cyan
0.470	OUT SPE ^.layer_0.pos = '(0, 0)
0.434	OUT SPE ^.layer_0.shape.color = blue
0.403	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.390	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.376	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.372	IN  SPE ^.layer_00.shape.color = cyan
0.368	IN  SPE ^.layer_01.shape.color = cyan
0.364	IN  SPE ^.layer_011.shape.color = blue
0.360	IN  SPE ^.layer_011111.shape.color = blue
0.357	IN  SPE ^.layer_01111.shape.mask = Full
0.354	IN  SPE ^.layer_0111.shape.mask = Full
0.352	IN  SPE ^.layer_0111111.shape.color = blue
0.350	IN  SPE ^.color = black
0.109	
0.108	IN  DEL ^.layer_011
0.108	IN  DEL ^.layer_01
0.107	IN  DEL ^.layer_01111
0.107	IN  DEL ^.layer_0111
0.106	IN  DEL ^.layer_0111111
0.106	IN  DEL ^.layer_011111
0.106	IN  GEN ^.layer_00.shape.color = ?
0.106	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color cyan and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a point with color blue at (?,?)
  _0111111: a point with color blue at (?,?)

DL input  with Mi: L = 212.9 + 13116.1 = 13328.9
DL output with Mo: L = 50.9 + 590.7 = 641.6
DL input+output M: L = 263.8 + 13706.7 = 13970.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color cyan and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 50.9 + 590.7 = 641.6
DL input+output M: L = 115.2 + 590.7 = 705.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (4,1)
diff: 
delta: (1,0)=1  (1,4)=8  (1,5)=1  (1,6)=8  (2,4)=1  (2,5)=1  (2,6)=8  (3,4)=8  (3,5)=8  (3,6)=8  (4,3)=1  (5,6)=8  (5,7)=1  (5,8)=8  (6,2)=1  (6,6)=1  (6,7)=8  (6,8)=1  (7,6)=1  (7,7)=8  (7,8)=1 
   (0.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|x.x|x.x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (4,1)
diff: 
delta: (1,0)=1  (1,4)=8  (1,5)=1  (1,6)=8  (2,4)=1  (2,5)=1  (2,6)=8  (3,4)=8  (3,5)=8  (3,6)=8  (4,3)=1  (5,6)=8  (5,7)=1  (5,8)=8  (6,2)=1  (6,6)=1  (6,7)=8  (6,8)=1  (7,6)=1  (7,7)=8  (7,8)=1 
! 4 wrong pixels (generated / expected)

TRAIN ae4f1146.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx.... at (1,2)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
diff: 
delta: (0,1)=8  (0,2)=8  (0,3)=1  (1,1)=8  (1,2)=1  (1,3)=8  (1,6)=1  (2,1)=8  (2,2)=8  (2,3)=8  (2,5)=1  (3,7)=1  (4,2)=8  (4,3)=1  (5,2)=1  (5,3)=1  (6,4)=1  (8,6)=1 
   (0.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx.... at (1,2)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
diff: 
delta: (0,1)=8  (0,2)=8  (0,3)=1  (1,1)=8  (1,2)=1  (1,3)=8  (1,6)=1  (2,1)=8  (2,2)=8  (2,3)=8  (2,5)=1  (3,7)=1  (4,2)=8  (4,3)=1  (5,2)=1  (5,3)=1  (6,4)=1  (8,6)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
  _0: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx.... at (1,2)
diff: 
delta: (0,1)=8  (0,2)=8  (0,3)=1  (1,1)=8  (1,2)=1  (1,3)=8  (1,6)=1  (2,1)=8  (2,2)=8  (2,3)=8  (2,5)=1  (3,7)=1  (4,2)=8  (4,3)=1  (5,2)=1  (5,3)=1  (6,4)=1  (8,6)=1 
! size mismatch, 6x6 instead of 3x3

TRAIN ae4f1146.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (7,3) and color cyan and mask Full at (1,0)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
diff: 
delta: (2,4)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,6)=8  (4,7)=1  (4,8)=8  (5,1)=1  (5,6)=1  (5,7)=1  (5,8)=8  (6,2)=1  (6,6)=1  (6,7)=8  (6,8)=1  (7,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|x.x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (7,3) and color cyan and mask Full at (1,0)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
diff: 
delta: (2,4)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,6)=8  (4,7)=1  (4,8)=8  (5,1)=1  (5,6)=1  (5,7)=1  (5,8)=8  (6,2)=1  (6,6)=1  (6,7)=8  (6,8)=1  (7,0)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _0: a rectangle with size (7,3) and color cyan and mask Full at (1,0)
diff: 
delta: (2,4)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,6)=8  (4,7)=1  (4,8)=8  (5,1)=1  (5,6)=1  (5,7)=1  (5,8)=8  (6,2)=1  (6,6)=1  (6,7)=8  (6,8)=1  (7,0)=1 
! size mismatch, 7x3 instead of 3x3

TRAIN ae4f1146.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _0: a rectangle with size (3,3) and color blue and mask Full at (1,6)
diff: 
delta: (0,2)=1  (0,3)=1  (0,4)=8  (1,2)=8  (1,3)=8  (1,4)=1  (1,6)=8  (2,2)=1  (2,3)=1  (2,4)=8  (3,6)=8  (3,8)=8  (5,2)=1  (5,4)=8  (5,5)=1  (5,6)=8  (6,0)=1  (6,4)=1  (6,5)=8  (6,6)=8  (7,4)=8  (7,5)=8  (7,6)=1 
   (0.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.x. at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _0: a rectangle with size (3,3) and color blue and mask Full at (1,6)
diff: 
delta: (0,2)=1  (0,3)=1  (0,4)=8  (1,2)=8  (1,3)=8  (1,4)=1  (1,6)=8  (2,2)=1  (2,3)=1  (2,4)=8  (3,6)=8  (3,8)=8  (5,2)=1  (5,4)=8  (5,5)=1  (5,6)=8  (6,0)=1  (6,4)=1  (6,5)=8  (6,6)=8  (7,4)=8  (7,5)=8  (7,6)=1 
! 3 wrong pixels (generated / expected)

TRAIN ae4f1146.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (6,9) and color cyan and mask xxx...x.x|xxx....x.|.xx...x.x|...x.x...|...xx....|....xx... at (0,0)
  _0: a rectangle with size (3,3) and color blue and mask Full at (6,6)
diff: 
delta: (0,7)=1  (1,6)=1  (1,8)=1  (2,0)=1  (2,7)=1  (3,4)=1  (4,5)=1  (5,3)=1  (6,8)=8  (7,6)=8  (8,8)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask Full at (6,6)
  _0: a rectangle with size (6,9) and color cyan and mask xxx...x.x|xxx....x.|.xx...x.x|...x.x...|...xx....|....xx... at (0,0)
diff: 
delta: (0,7)=1  (1,6)=1  (1,8)=1  (2,0)=1  (2,7)=1  (3,4)=1  (4,5)=1  (5,3)=1  (6,8)=8  (7,6)=8  (8,8)=8 
! size mismatch, 6x9 instead of 3x3

TEST ae4f1146.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.0 sec (8.0 sec/task)
bits-train-error = 590.7 bits (590.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-129] Checking task aedd82e4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8910.0 = 8922.6
DL output with Mo: L = 12.6 + 9464.6 = 9477.2
DL input+output M: L = 25.2 + 18374.5 = 18399.8

# learning a model for train pairs
2.000	
1.405	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT ADD ^.layer_0 = ^.layer_0
0.692	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.633	OUT SPE ^.size = ^.size
0.602	OUT SPE ^.color = ^.color
0.579	OUT SPE ^.layer_01.shape.color = blue
0.561	OUT SPE ^.layer_01.pos.i = 2
0.146	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: a point with color blue at (2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 3749.3 = 3788.1
DL output with Mo: L = 40.9 + 1255.7 = 1296.6
DL input+output M: L = 79.7 + 5005.0 = 5084.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: a point with color blue at (2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 40.0 = 78.8
DL output with Mo: L = 40.9 + 1255.7 = 1296.6
DL input+output M: L = 79.7 + 1295.7 = 1375.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (3.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
diff: 
delta:
correct output grid

TRAIN aedd82e4.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta: (2,3)=2  (3,1)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
  _01: a point with color blue at (2,3)
diff: 
delta: (3,1)=1 
   (40.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta: (2,3)=2  (3,1)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (1,1)=2  (2,3)=2  (3,1)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,1)
diff: 
delta: (0,0)=2  (0,2)=2  (2,3)=2  (3,1)=2 
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,4) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask ..xx|..xx|..x.|xxxx|x... at (0,0)
diff: 
delta: (1,0)=0 
   (0.0 bits)
data: a background with size (5,4) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask ..xx|..xx|..x.|xxxx|x... at (0,0)
  _01: a point with color blue at (2,3)
diff: 
delta: (1,0)=0 
   (41.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask ..xx|..xx|..x.|xxxx|x... at (0,0)
diff: 
delta: (1,0)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask xx|.x|xx at (0,0)
diff: 
delta: (2,3)=2  (4,1)=2  (4,2)=2  (4,3)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Full at (0,0)
diff: 
delta: (1,0)=0  (2,3)=2  (4,1)=2  (4,2)=2  (4,3)=2 
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.x.|x.x at (0,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.x.|x.x at (0,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (1,2)=1 
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.x.|x.x at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta: (1,0)=2  (1,2)=2  (2,1)=2 
! 4 wrong pixels (generated / expected)

TRAIN aedd82e4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,0)
diff: 
delta: (0,3)=2  (3,0)=2  (4,2)=2  (4,3)=2 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta: (0,3)=2  (1,1)=2  (2,2)=2  (3,0)=2  (4,2)=2  (4,3)=2 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,2)
diff: 
delta: (0,0)=2  (0,1)=2  (0,3)=2  (1,1)=2  (2,2)=2  (3,0)=2 
! 7 wrong pixels (generated / expected)

TEST aedd82e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 1255.7 bits (1255.7 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.12
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-128] Checking task af902bf9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6777.6 = 6790.2
DL output with Mo: L = 12.6 + 16512.4 = 16525.0
DL input+output M: L = 25.2 + 23289.9 = 23315.2

# learning a model for train pairs
2.000	
1.492	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.403	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.313	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.222	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.128	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.060	OUT ADD ^.layer_01 = ^.layer_01
0.991	OUT ADD ^.layer_011 = ^.layer_011
0.922	OUT ADD ^.layer_0111 = ^.layer_0111
0.853	OUT ADD ^.layer_00 = ^.layer_0
0.816	OUT SPE ^.size = ^.size
0.792	IN  SPE ^.layer_0.shape.color = yellow
0.767	IN  SPE ^.layer_01.shape.color = yellow
0.743	IN  SPE ^.layer_011.shape.color = yellow
0.718	IN  SPE ^.layer_0111.shape.color = yellow
0.708	IN  SPE ^.color = black
0.698	OUT SPE ^.layer_0.shape.color = red
0.692	OUT SPE ^.layer_0.shape.mask = Full
0.687	OUT SPE ^.color = black
0.174	
0.173	IN  GEN ^.layer_0111.shape.color = ?
0.173	IN  GEN ^.layer_011.shape.color = ?
0.172	IN  GEN ^.layer_01.shape.color = ?
0.172	IN  GEN ^.layer_0.shape.color = ?
0.172	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color yellow at (?,?)
  _01: a point with color yellow at (?,?)
  _011: a point with color yellow at (?,?)
  _0111: a point with color yellow at (?,?)

DL input  with Mi: L = 90.4 + 3486.3 = 3576.7
DL output with Mo: L = 61.3 + 2588.9 = 2650.2
DL input+output M: L = 151.7 + 6075.2 = 6227.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 0.0 = 77.0
DL output with Mo: L = 61.3 + 2588.9 = 2650.2
DL input+output M: L = 138.3 + 2588.9 = 2727.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,3)
  _0111: a point with color yellow at (5,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (4,4)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,3)
  _0111: a point with color yellow at (5,5)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,3)
  _0111: a point with color yellow at (5,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN af902bf9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,1)
  _0111: a point with color yellow at (6,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (1,1)
  _0: a rectangle with size (4,4) and color red and mask Full at (2,2)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,1)
  _0111: a point with color yellow at (6,6)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,1)
  _0111: a point with color yellow at (6,6)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN af902bf9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (3,3)
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (1,1)
  _0: a rectangle with size (2,4) and color red and mask Full at (7,5)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (3,3)
diff: 
delta: (2,2)=2  (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (215.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (3,3)
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (6,4)
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 16 wrong pixels (generated / expected)

TRAIN af902bf9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,5)
  _0111: a point with color yellow at (4,9)
diff: 
delta: (5,0)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,5)
  _0111: a point with color yellow at (5,0)
diff: 
delta: (4,9)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 21 wrong pixels (generated / expected)

TEST af902bf9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.3 sec (10.3 sec/task)
bits-train-error = 2588.9 bits (2588.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-127] Checking task b0c4d837.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 52174.6 = 52187.2
DL output with Mo: L = 12.6 + 6193.0 = 6205.6
DL input+output M: L = 25.2 + 58367.6 = 58392.8

# learning a model for train pairs
2.000	
1.420	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.561	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.437	OUT SPE ^.size = '(3, 3)
0.362	OUT SPE ^.layer_0.pos = '(0, 0)
0.308	OUT SPE ^.layer_0.shape.color = cyan
0.168	
0.167	IN  DEL ^.layer_01
0.167	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 7298.0 = 7362.2
DL output with Mo: L = 53.0 + 979.8 = 1032.9
DL input+output M: L = 117.3 + 8277.8 = 8395.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 53.0 + 979.8 = 1032.9
DL input+output M: L = 65.6 + 979.8 = 1045.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
diff: 
delta: (1,1)=5# (1,4)=5# (2,1)=5# (2,4)=5# (3,1)=5# (3,4)=5# (4,1)=5# (4,2)=8  (4,3)=8  (4,4)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta:
   (15.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta: (1,1)=5# (1,4)=5# (2,1)=5# (2,4)=5# (3,1)=5# (3,4)=5# (4,1)=5# (4,2)=8  (4,3)=8  (4,4)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5#
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=5# (1,6)=5# (2,2)=5# (2,6)=5# (3,2)=5# (3,6)=5# (4,2)=5# (4,6)=5# (5,2)=5# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=5# (6,2)=5# (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=5# (7,2)=5# (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (0,0)
diff: 
delta:
   (25.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=5# (1,6)=5# (2,2)=5# (2,6)=5# (3,2)=5# (3,6)=5# (4,2)=5# (4,6)=5# (5,2)=5# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=5# (6,2)=5# (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=5# (7,2)=5# (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5#
! 4 wrong pixels (generated / expected)

TRAIN b0c4d837.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (2,1)=5# (2,7)=5# (3,1)=5# (3,7)=5# (4,1)=5# (4,7)=5# (5,1)=5# (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=5# (6,1)=5# (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=5# (7,1)=5# (7,2)=8  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=5# (8,1)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5# (8,7)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta:
   (15.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (2,1)=5# (2,7)=5# (3,1)=5# (3,7)=5# (4,1)=5# (4,7)=5# (5,1)=5# (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=5# (6,1)=5# (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=5# (7,1)=5# (7,2)=8  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=5# (8,1)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5# (8,7)=5#
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (2,2)=5# (2,6)=5# (3,2)=5# (3,6)=5# (4,2)=5# (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=5# (5,2)=5# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=5# (6,2)=5# (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=5# (7,2)=5# (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (14.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (2,2)=5# (2,6)=5# (3,2)=5# (3,6)=5# (4,2)=5# (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=5# (5,2)=5# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=5# (6,2)=5# (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=5# (7,2)=5# (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5#
! 2 wrong pixels (generated / expected)

TRAIN b0c4d837.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (5,6) and color black and layers
diff: 
delta: (1,1)=5# (1,4)=5# (2,1)=5# (2,2)=8  (2,3)=8  (2,4)=5# (3,1)=5# (3,2)=8  (3,3)=8  (3,4)=5# (4,1)=5# (4,2)=5# (4,3)=5# (4,4)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (12.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta: (1,1)=5# (1,4)=5# (2,1)=5# (2,2)=8  (2,3)=8  (2,4)=5# (3,1)=5# (3,2)=8  (3,3)=8  (3,4)=5# (4,1)=5# (4,2)=5# (4,3)=5# (4,4)=5#
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (2,1)=5# (2,5)=5# (3,1)=5# (3,5)=5# (4,1)=5# (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=5# (5,1)=5# (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=5# (6,1)=5# (6,2)=5# (6,3)=5# (6,4)=5# (6,5)=5#
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (14.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (2,1)=5# (2,5)=5# (3,1)=5# (3,5)=5# (4,1)=5# (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=5# (5,1)=5# (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=5# (6,1)=5# (6,2)=5# (6,3)=5# (6,4)=5# (6,5)=5#
! 2 wrong pixels (generated / expected)

TRAIN b0c4d837.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=5# (1,6)=5# (2,2)=5# (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=5# (3,2)=5# (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=5# (4,2)=5# (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=5# (5,2)=5# (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=5# (6,2)=5# (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=5# (7,2)=5# (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5#
! 3 wrong pixels (generated / expected)

TEST b0c4d837.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 51.9 sec (51.9 sec/task)
bits-train-error = 979.8 bits (979.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-126] Checking task b190f7f5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11981.8 = 11994.4
DL output with Mo: L = 12.6 + 35462.6 = 35475.2
DL input+output M: L = 25.2 + 47444.4 = 47469.6

# learning a model for train pairs
2.000	
1.660	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.537	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.414	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.290	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.042	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.967	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.892	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.852	IN  SPE ^.layer_0.shape.color = cyan
0.838	IN  SPE ^.layer_011.shape.color = yellow
0.829	OUT SPE ^.layer_01.shape.size = projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size)
0.820	OUT SPE ^.layer_011.shape.size = projI(^.layer_011.shape.size) + projJ(^.layer_0.shape.size)
0.811	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos) * colorCount(^.grid)
0.805	IN  SPE ^.color = black
0.800	OUT SPE ^.layer_0111.shape.size.i = ^.layer_0.shape.size.i
0.795	OUT SPE ^.layer_01111.shape.size.i = ^.layer_0.shape.size.i
0.790	OUT SPE ^.layer_01.shape.color = yellow
0.785	OUT SPE ^.layer_0111.shape.color = yellow
0.781	OUT SPE ^.layer_011.pos.j = bottom(^.layer_0) + 1
0.777	OUT SPE ^.layer_0111.shape.size.j = ^.layer_011.shape.size.j
0.773	OUT SPE ^.layer_01111.shape.size.j = ^.layer_011.shape.size.j
0.769	OUT SPE ^.layer_01111.pos.i = ^.layer_01.pos.i + ^.size.i
0.766	OUT SPE ^.layer_01.pos.i = max(^.layer_0.pos.j, ^.layer_01.pos.j) - average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.764	OUT SPE ^.color = black
0.394	
0.393	IN  GEN ^.layer_0.shape.color = ?
0.393	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at projI(^.layer_0.pos) * colorCount(^.grid)
  _01: a rectangle with size projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size) and color yellow and mask ? at (max(^.layer_0.pos.j, ^.layer_01.pos.j) - average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?)
  _011: a rectangle with size projI(^.layer_011.shape.size) + projJ(^.layer_0.shape.size) and color ? and mask ? at (?,bottom(^.layer_0) + 1)
  _0111: a rectangle with size (^.layer_0.shape.size.i,^.layer_011.shape.size.j) and color yellow and mask ? at (?,?)
  _01111: a rectangle with size (^.layer_0.shape.size.i,^.layer_011.shape.size.j) and color ? and mask ? at (^.layer_01.pos.i + ^.size.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 96.0 + 4443.7 = 4539.8
DL output with Mo: L = 413.8 + 13266.8 = 13680.7
DL input+output M: L = 509.9 + 17710.5 = 18220.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at projI(^.layer_0.pos) * colorCount(^.grid)
  _01: a rectangle with size projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size) and color yellow and mask ? at (max(^.layer_0.pos.j, ^.layer_01.pos.j) - average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?)
  _011: a rectangle with size projI(^.layer_011.shape.size) + projJ(^.layer_0.shape.size) and color ? and mask ? at (?,bottom(^.layer_0) + 1)
  _0111: a rectangle with size (^.layer_0.shape.size.i,^.layer_011.shape.size.j) and color yellow and mask ? at (?,?)
  _01111: a rectangle with size (^.layer_0.shape.size.i,^.layer_011.shape.size.j) and color ? and mask ? at (^.layer_01.pos.i + ^.size.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 0.0 = 92.6
DL output with Mo: L = 413.8 + 13266.8 = 13680.7
DL input+output M: L = 506.4 + 13266.8 = 13773.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,1)=3 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask +-cross at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,6)
  _011: a rectangle with size (1,3) and color green and mask Full at (4,3)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (0,7)
  _01111: a rectangle with size (3,1) and color green and mask Full at (3,4)
diff: 
delta:
   (71.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,1)=3 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,0)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask +-cross at (0,3)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,1)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,3)
  _011: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,4)
diff: 
delta: (0,2)=8  (1,4)=2 
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask x.|xx at (4,0)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,3)
  _011: a rectangle with size (2,2) and color blue and mask x.|xx at (7,3)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (4,6)
  _01111: a rectangle with size (2,2) and color red and mask x.|xx at (4,3)
diff: 
delta: (0,5)=4  (3,2)=1  (3,5)=2  (3,8)=4  (6,5)=1 
   (282.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,3)
  _011: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,4)
diff: 
delta: (0,2)=8  (1,4)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,3)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
  _011: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,4)
diff: 
delta: (0,2)=8  (1,4)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
  _01: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (0,12)
  _011: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (4,4)
  _0111: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (8,4)
  _01111: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (4,8)
diff: 
delta: (8,10)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (10,10)=2  (11,10)=2  (12,2)=4  (12,14)=2  (13,0)=4  (13,1)=4  (13,2)=4  (13,3)=4  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (14,2)=4  (14,14)=2  (15,2)=4  (15,14)=2 
   (972.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
  _01: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask x-cross at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
  _011: a rectangle with size (4,4) and color yellow and mask x-cross at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 16x16

TRAIN b190f7f5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask .xx.|xxxx|x..x|xxxx at (4,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff:   ^.layer_011.shape.color
delta: (0,3)=1  (3,0)=3  (3,3)=3 
! size mismatch, 10x10 instead of 16x16

TEST b190f7f5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.7 sec (21.7 sec/task)
bits-train-error = 13266.8 bits (13266.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-125] Checking task b1948b0a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9594.7 = 9607.3
DL output with Mo: L = 12.6 + 9594.7 = 9607.3
DL input+output M: L = 25.2 + 19189.3 = 19214.6

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = swapColor(^.grid, pink, red)
0.249	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.222	IN  SPE ^.color = pink
0.204	IN  SPE ^.layer_0.shape.color = orange
0.008	
0.005	IN  DEL ^.layer_0
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
swapColor(^.grid, pink, red)
WHERE (Mi)
a background with size (?,?) and color pink and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 1886.0 = 1934.8
DL output with Mo: L = 29.8 + 0.0 = 29.8
DL input+output M: L = 78.6 + 1886.0 = 1964.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
swapColor(^.grid, pink, red)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 29.8 + 0.0 = 29.8
DL input+output M: L = 42.4 + 0.0 = 42.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,4) and color pink and layers
diff: 
delta: (0,2)=7# (1,2)=7# (1,3)=7# (2,0)=7# (2,1)=7# (2,3)=7#
   (0.0 bits)
data: 
2 2 7#2 
2 2 7#7#
7#7#2 7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color pink and layers
diff: 
delta: (0,2)=7# (1,2)=7# (1,3)=7# (2,0)=7# (2,1)=7# (2,3)=7#
correct output grid

TRAIN b1948b0a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (6,4) and color orange and layers
diff: 
delta: (0,3)=6  (1,0)=6  (1,1)=6  (1,3)=6  (2,2)=6  (3,1)=6  (4,1)=6  (4,3)=6  (5,0)=6  (5,1)=6  (5,2)=6 
   (0.0 bits)
data: 
7#7#7#2 
2 2 7#2 
7#7#2 7#
7#2 7#7#
7#2 7#2 
2 2 2 7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color orange and layers
diff: 
delta: (0,3)=6  (1,0)=6  (1,1)=6  (1,3)=6  (2,2)=6  (3,1)=6  (4,1)=6  (4,3)=6  (5,0)=6  (5,1)=6  (5,2)=6 
correct output grid

TRAIN b1948b0a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,6) and color orange and layers
diff: 
delta: (0,2)=6  (0,3)=6  (0,4)=6  (0,5)=6  (1,0)=6  (1,2)=6  (2,1)=6  (2,4)=6 
   (0.0 bits)
data: 
7#7#2 2 2 2 
2 7#2 7#7#7#
7#2 7#7#2 7#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color orange and layers
diff: 
delta: (0,2)=6  (0,3)=6  (0,4)=6  (0,5)=6  (1,0)=6  (1,2)=6  (2,1)=6  (2,4)=6 
correct output grid

TRAIN b1948b0a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color orange and layers
diff: 
delta: (0,0)=6  (0,3)=6  (1,0)=6  (1,2)=6  (2,3)=6  (3,1)=6  (3,3)=6 
correct output grid

TEST b1948b0a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-124] Checking task b230c067.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20720.0 = 20732.6
DL output with Mo: L = 12.6 + 20720.0 = 20732.6
DL input+output M: L = 25.2 + 41440.0 = 41465.2

# learning a model for train pairs
2.000	
1.702	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.403	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.105	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.807	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.555	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.304	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.260	OUT SPE ^.layer_01 = coloring(^.layer_01, blue)
0.217	OUT SPE ^.layer_0 = coloring(^.layer_0, blue)
0.176	OUT SPE ^.layer_011 = coloring(^.layer_011, red)
0.157	OUT SPE ^.size = ^.size
0.152	IN  SPE ^.layer_0.shape.color = cyan
0.146	IN  SPE ^.layer_01.shape.color = cyan
0.141	IN  SPE ^.layer_011.shape.color = cyan
0.139	IN  SPE ^.color = black
0.136	OUT SPE ^.color = black
0.008	
0.007	IN  GEN ^.layer_011.shape.color = ?
0.007	IN  GEN ^.layer_01.shape.color = ?
0.007	IN  GEN ^.layer_0.shape.color = ?
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, blue)
  _01: coloring(^.layer_01, blue)
  _011: coloring(^.layer_011, red)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 2669.4 = 2768.8
DL output with Mo: L = 56.4 + 0.0 = 56.4
DL input+output M: L = 155.7 + 2669.4 = 2825.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, blue)
  _01: coloring(^.layer_01, blue)
  _011: coloring(^.layer_011, red)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 56.4 + 0.0 = 56.4
DL input+output M: L = 145.6 + 0.0 = 145.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (1,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color blue and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color red and mask Border at (1,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (1,7)
diff: 
delta:
correct output grid

TRAIN b230c067.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color cyan and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color red and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color cyan and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
correct output grid

TRAIN b230c067.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xxx.|..x.|.x..|xxxx at (1,6)
  _01: a rectangle with size (4,4) and color cyan and mask xxx.|..x.|.x..|xxxx at (6,3)
  _011: a rectangle with size (4,3) and color cyan and mask xx.|.x.|x..|xxx at (1,1)
diff: 
delta:
correct output grid

TEST b230c067.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.6 sec (3.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-123] Checking task b27ca6d3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11052.3 = 11064.9
DL output with Mo: L = 12.6 + 22258.7 = 22271.3
DL input+output M: L = 25.2 + 33310.9 = 33336.2

# learning a model for train pairs
2.000	
1.649	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.540	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.457	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.404	OUT ADD ^.layer_00 = ^.layer_0
1.354	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.303	OUT ADD ^.layer_011 = ^.layer_01
1.253	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.201	OUT ADD ^.layer_0111 = ^.layer_011
1.165	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.129	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.093	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.056	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
1.020	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.985	OUT ADD ^.layer_01111 = ^.layer_01111
0.950	OUT ADD ^.layer_011111 = ^.layer_011111
0.915	OUT ADD ^.layer_0111111 = ^.layer_0111111
0.895	OUT SPE ^.size = ^.size
0.885	IN  SPE ^.layer_0.shape.color = red
0.875	IN  SPE ^.layer_01.shape.color = red
0.865	IN  SPE ^.layer_011.shape.color = red
0.855	IN  SPE ^.layer_0111.shape.color = red
0.845	IN  SPE ^.layer_01111.shape.color = red
0.835	IN  SPE ^.layer_011111.shape.color = red
0.826	IN  SPE ^.layer_0111111.shape.color = red
0.816	IN  SPE ^.layer_01111111.shape.color = red
0.810	IN  SPE ^.layer_0.shape.mask = Full
0.804	IN  SPE ^.layer_01.shape.mask = Full
0.798	IN  SPE ^.layer_011.shape.mask = Full
0.792	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j + 2
0.271	
0.269	IN  DEL ^.layer_01111111
0.267	IN  DEL ^.layer_0111
0.267	IN  GEN ^.layer_0111111.shape.color = ?
0.267	IN  GEN ^.layer_011111.shape.color = ?
0.266	IN  GEN ^.layer_01111.shape.color = ?
0.266	IN  GEN ^.layer_011.shape.color = ?
0.266	IN  GEN ^.layer_01.shape.color = ?
0.265	IN  GEN ^.layer_0.shape.color = ?
0.265	IN  GEN ^.layer_011.shape.mask = ?
0.265	IN  GEN ^.layer_01.shape.mask = ?
0.265	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_0.shape.size.j + 2) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0111: a point with color red at (?,?)
  _01111: a point with color red at (?,?)
  _011111: a point with color red at (?,?)
  _0111111: a point with color red at (?,?)
  _01111111: a point with color red at (?,?)

DL input  with Mi: L = 195.8 + 5771.3 = 5967.1
DL output with Mo: L = 106.9 + 5525.8 = 5632.7
DL input+output M: L = 302.8 + 11297.0 = 11599.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_0.shape.size.j + 2) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 0.0 = 135.7
DL output with Mo: L = 106.9 + 5525.8 = 5632.7
DL input+output M: L = 242.6 + 5525.8 = 5768.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _01111: a point with color red at (8,17)
  _011111: a point with color red at (11,4)
  _0111111: a point with color red at (11,8)
diff: 
delta: (12,0)=2  (14,0)=2  (14,17)=2 
   (0.0 bits)
data: a background with size (15,18) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _0: a rectangle with size (4,3) and color green and mask Full at (1,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (12,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _01111: a point with color red at (8,17)
  _011111: a point with color red at (11,4)
  _0111111: a point with color red at (11,8)
diff: 
delta: (14,0)=2  (14,17)=2 
   (140.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _01111: a point with color red at (8,17)
  _011111: a point with color red at (11,4)
  _0111111: a point with color red at (11,8)
diff: 
delta: (12,0)=2  (14,0)=2  (14,17)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _01111: a point with color red at (8,17)
  _011111: a point with color red at (11,4)
  _0111111: a point with color red at (12,0)
diff: 
delta: (11,8)=2  (14,0)=2  (14,17)=2 
! 19 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (3,8)
  _0111111: a point with color red at (4,2)
diff: 
delta: (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (0.0 bits)
data: a background with size (15,16) and color black and layers
  _00: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _0: a rectangle with size (7,4) and color green and mask x.x.|x.x.|xxx.|..xx|..x.|..x.|..xx at (0,12)
  _01: a rectangle with size (2,4) and color green and mask Full at (0,7)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _0111: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (3,8)
  _0111111: a point with color red at (4,2)
diff: 
delta: (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (412.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (3,8)
  _0111111: a point with color red at (4,2)
diff: 
delta: (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (3,8)
  _0111111: a point with color red at (4,2)
diff: 
delta: (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (3,8)
  _0111111: a point with color red at (4,10)
diff: 
delta: (4,2)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
! 35 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (13,6)
  _01111: a point with color red at (0,15)
  _011111: a point with color red at (1,4)
  _0111111: a point with color red at (3,13)
diff: 
delta: (3,15)=2  (5,12)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 75 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (13,6)
  _01111: a point with color red at (0,15)
  _011111: a point with color red at (1,4)
  _0111111: a point with color red at (3,15)
diff: 
delta: (3,13)=2  (5,12)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 75 wrong pixels (generated / expected)

TEST b27ca6d3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 63.6 sec (63.6 sec/task)
bits-train-error = 5525.8 bits (5525.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-122] Checking task b2862040.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 61427.0 = 61439.6
DL output with Mo: L = 12.6 + 61427.0 = 61439.6
DL input+output M: L = 25.2 + 122854.0 = 122879.2

# learning a model for train pairs
2.000	
1.266	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.986	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.470	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT SPE ^.size = ^.size
0.451	OUT SPE ^.color = brown
0.447	OUT SPE ^.layer_0.pos.j = 1
0.444	OUT SPE ^.layer_0.shape.color = cyan
0.440	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.j + 1
0.175	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color brown and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j + 1,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 16301.4 = 16340.2
DL output with Mo: L = 169.8 + 10530.3 = 10700.1
DL input+output M: L = 208.7 + 26831.7 = 27040.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color brown and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j + 1,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 169.8 + 10530.3 = 10700.1
DL input+output M: L = 208.7 + 10530.3 = 10739.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (2,1)
diff: 
delta: (2,7)=1  (3,7)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,7)=1  (6,7)=1 
   (0.0 bits)
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (4,1) and color cyan and mask Full at (2,1)
  _01: a rectangle with size (5,4) and color blue and mask .x..|.x..|xxxx|.x..|.x.. at (2,6)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (2,3)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (2,1)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (5,1)
diff: 
delta:
   (163.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (2,1)
diff: 
delta: (2,7)=1  (3,7)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,7)=1  (6,7)=1 
! 26 wrong pixels (generated / expected)

TRAIN b2862040.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,11) and color blue and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
diff: 
delta: (2,2)=9# (2,3)=9# (2,4)=9# (8,4)=9# (10,9)=9#
   (0.0 bits)
data: a background with size (12,11) and color brown and layers
  _0: a rectangle with size (3,5) and color cyan and mask Border at (1,1)
  _01: a rectangle with size (4,5) and color cyan and mask .x...|xxxxx|.x.x.|.xxx. at (6,2)
  _011: a rectangle with size (3,3) and color blue and mask x..|x.x|xxx at (1,8)
  _0111: a rectangle with size (3,3) and color cyan and mask Border at (9,8)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (11,0)
diff: 
delta:
   (189.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color blue and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
diff: 
delta: (2,2)=9# (2,3)=9# (2,4)=9# (8,4)=9# (10,9)=9#
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color brown and layers
  _0: a rectangle with size (3,5) and color blue and mask Border at (1,1)
diff: 
delta: (1,8)=1  (2,8)=1  (2,10)=1  (3,8)=1  (3,9)=1  (3,10)=1  (6,3)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (8,3)=1  (8,5)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,8)=1  (9,9)=1  (9,10)=1  (10,8)=1  (10,10)=1  (11,0)=1  (11,1)=1  (11,8)=1  (11,9)=1  (11,10)=1 
! 43 wrong pixels (generated / expected)

TRAIN b2862040.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
   (0.0 bits)
data: a background with size (12,13) and color brown and layers
  _0: a rectangle with size (6,4) and color cyan and mask .x..|xxxx|x..x|xxxx|...x|...x at (2,1)
  _01: a rectangle with size (4,4) and color blue and mask .xxx|...x|x.xx|xxx. at (8,6)
  _011: a rectangle with size (5,4) and color blue and mask .x..|xxxx|.x..|.x..|.xxx at (1,7)
  _0111: a rectangle with size (4,3) and color blue and mask .x.|xxx|.x.|xx. at (8,0)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (0,5)
diff: 
delta:
   (236.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
! 49 wrong pixels (generated / expected)

TRAIN b2862040.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (14,15) and color blue and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9#
   (0.0 bits)
data: a background with size (14,15) and color brown and layers
  _0: a rectangle with size (5,6) and color cyan and mask xxxxxx|.x...x|.xxx.x|...xxx|...x.. at (1,1)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|x..x|xxxx|x... at (8,0)
  _011: a rectangle with size (4,5) and color blue and mask .xxxx|.x..x|xxx.x|....x at (1,10)
  _0111: a rectangle with size (3,4) and color cyan and mask xxx.|x.xx|xxx. at (5,8)
  _01111: a rectangle with size (3,5) and color blue and mask x.x..|xxxxx|..x.. at (9,7)
diff: 
delta: (12,5)=1  (13,4)=1  (13,5)=1  (13,12)=1  (13,13)=1 
   (464.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color blue and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9#
! 64 wrong pixels (generated / expected)

TRAIN b2862040.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color blue and layers
  _0: a rectangle with size (16,15) and color brown and mask ..xxxxxxxxxxxxx|xxxxxxxxxxx.xxx|xxx.....xxx.xxx|xxxx....xxx.xxx|xxxx....xxx.xxx|xxxx....xxx.xx.|xxxxxxx.xxx....|....xxx.xxx.xx.|.xx.xxxxxxxxxx.|.xx.xxxxxxxxx..|..xxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxx......xxx..x|xxx......xxxx.x|xxx......xxxx.x|xxx.......xxx.x at (0,0)
diff: 
delta: (3,5)=9# (3,6)=9# (4,5)=9# (4,6)=9# (13,4)=9# (13,5)=9# (13,6)=9# (13,7)=9# (14,4)=9# (14,5)=9# (14,6)=9# (14,7)=9#
! 70 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,15) and color brown and layers
  _0: a rectangle with size (4,7) and color blue and mask xxxxxx.|x....x.|x....x.|xxxxxxx at (12,3)
diff: 
delta: (0,0)=1  (0,1)=1  (1,11)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (3,4)=1  (3,7)=1  (3,11)=1  (4,4)=1  (4,7)=1  (4,11)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,11)=1  (5,14)=1  (6,7)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,7)=1  (7,11)=1  (7,14)=1  (8,0)=1  (8,3)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,13)=1  (9,14)=1  (10,0)=1  (10,1)=1  (12,12)=1  (12,13)=1  (13,13)=1  (14,13)=1  (15,13)=1 
! 72 wrong pixels (generated / expected)

TEST b2862040.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.4 sec (14.4 sec/task)
bits-train-error = 10530.3 bits (10530.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-121] Checking task b527c5c6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 119434.1 = 119446.7
DL output with Mo: L = 12.6 + 200648.5 = 200661.1
DL input+output M: L = 25.2 + 320082.5 = 320107.8

# learning a model for train pairs
2.000	
1.323	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.766	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.385	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.208	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.153	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.146	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.141	OUT SPE ^.size = ^.size
0.137	IN  ADD ^.layer_0101 = a point with color ? at (?,?)
0.135	IN  SPE ^.layer_0.shape.color = green
0.133	IN  SPE ^.layer_010.shape.color = red
0.131	IN  SPE ^.layer_0101.shape.color = red
0.129	IN  SPE ^.layer_01.shape.color = green
0.128	OUT SPE ^.layer_011.pos.i = ^.layer_0101.pos.i
0.127	OUT SPE ^.layer_011.shape.color = red
0.126	IN  SPE ^.layer_01.shape.mask = Full
0.125	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.113	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.111	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.109	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i
0.108	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.107	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.106	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.105	OUT SPE ^.layer_0111.shape.color = red
0.104	OUT SPE ^.layer_0111.pos.j = ^.layer_010.pos.j
0.103	IN  SPE ^.color = black
0.102	OUT SPE ^.layer_011.shape.size.i = 1
0.102	OUT SPE ^.layer_011.shape.mask = Full
0.101	OUT SPE ^.layer_0111.shape.size.j = 1
0.100	OUT SPE ^.layer_0111.shape.mask = Full
0.060	
0.060	IN  GEN ^.layer_01.shape.color = ?
0.060	IN  GEN ^.layer_0.shape.color = ?
0.060	IN  GEN ^.layer_01.shape.mask = ?
0.060	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,?)
  _011: a rectangle with size (1,?) and color red and mask Full at (^.layer_0101.pos.i,?)
  _0111: a rectangle with size (?,1) and color red and mask Full at (?,^.layer_010.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _010: a point with color red at (?,?)
  _0101: a point with color red at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 110.0 + 4899.9 = 5009.8
DL output with Mo: L = 164.8 + 11526.3 = 11691.1
DL input+output M: L = 274.8 + 16426.1 = 16700.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,?)
  _011: a rectangle with size (1,?) and color red and mask Full at (^.layer_0101.pos.i,?)
  _0111: a rectangle with size (?,1) and color red and mask Full at (?,^.layer_010.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color red at (?,?)
  _0101: a point with color red at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 102.2 + 83.4 = 185.6
DL output with Mo: L = 164.8 + 11526.3 = 11691.1
DL input+output M: L = 267.0 + 11609.7 = 11876.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask xxxx|xx.x at (4,6)
  _010: a point with color red at (5,8)
  _0101: a point with color red at (4,3)
  _01: a rectangle with size (6,2) and color green and mask Full at (2,3)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color green and mask xxxx|xx.x|.x.x|.x.x|.x.x|.x.x at (4,6)
  _01: a rectangle with size (6,5) and color green and mask ...xx|xxxxx|....x|xxxxx|...xx|...xx at (2,0)
  _011: a rectangle with size (1,4) and color red and mask Full at (4,0)
  _0111: a rectangle with size (5,1) and color red and mask Full at (5,8)
diff: 
delta:
   (122.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask xxxx|xx.x at (4,6)
  _010: a point with color red at (4,3)
  _0101: a point with color red at (5,8)
  _01: a rectangle with size (6,2) and color green and mask Full at (2,3)
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask xxxx|xx.x at (4,6)
  _010: a point with color red at (5,8)
  _0101: a point with color red at (4,3)
  _01: a rectangle with size (6,2) and color green and mask Full at (2,3)
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,2) and color green and mask xx|xx|.x|xx|xx|xx at (2,3)
  _010: a point with color red at (4,3)
  _0101: a point with color red at (5,8)
  _01: a rectangle with size (2,4) and color green and mask Full at (4,6)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN b527c5c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,18) and color green and mask xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx at (4,1)
  _010: a point with color red at (4,14)
  _0101: a point with color red at (15,9)
  _01: a rectangle with size (10,3) and color green and mask Full at (10,7)
diff: 
delta:
   (3.2 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,18) and color green and mask ............x.x...|............x.x...|............x.x...|............x.x...|xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx at (0,1)
  _01: a rectangle with size (10,13) and color green and mask xxx..........|xxx..........|xxx..........|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx...........|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxx..........|xxx.......... at (10,7)
  _011: a rectangle with size (1,11) and color red and mask Full at (15,9)
  _0111: a rectangle with size (5,1) and color red and mask Full at (0,14)
diff: 
delta:
   (316.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,3) and color green and mask xxx|xxx|xxx|xxx|xxx|xx.|xxx|xxx|xxx|xxx at (10,7)
  _010: a point with color red at (4,14)
  _0101: a point with color red at (15,9)
  _01: a rectangle with size (2,18) and color green and mask Full at (4,1)
diff: 
delta:
! 134 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,3) and color green and mask xxx|xxx|xxx|xxx|xxx|xx.|xxx|xxx|xxx|xxx at (10,7)
  _010: a point with color red at (15,9)
  _0101: a point with color red at (4,14)
  _01: a rectangle with size (2,18) and color green and mask Full at (4,1)
diff: 
delta:
! 134 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,18) and color green and mask xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx at (4,1)
  _010: a point with color red at (4,14)
  _0101: a point with color red at (15,9)
  _01: a rectangle with size (10,3) and color green and mask Full at (10,7)
diff: 
delta:
! 174 wrong pixels (generated / expected)

TRAIN b527c5c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,14) and color green and mask xxxxx.xxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,0)
  _010: a point with color red at (3,5)
  _0101: a point with color red at (14,10)
  _01: a rectangle with size (11,5) and color green and mask Full at (9,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,14) and color green and mask ...xx.xx......|...xx.xx......|...xx.xx......|xxxxx.xxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (11,15) and color green and mask ..........xxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|...........xxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|..........xxxxx at (9,0)
  _011: a rectangle with size (1,11) and color red and mask Full at (14,0)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,5)
diff: 
delta:
   (276.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,14) and color green and mask xxxxx.xxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,0)
  _010: a point with color red at (3,5)
  _0101: a point with color red at (14,10)
  _01: a rectangle with size (11,5) and color green and mask Full at (9,10)
diff: 
delta:
! 200 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,14) and color green and mask xxxxx.xxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,0)
  _010: a point with color red at (14,10)
  _0101: a point with color red at (3,5)
  _01: a rectangle with size (11,5) and color green and mask Full at (9,10)
diff: 
delta:
! 200 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,5) and color green and mask xxxxx|xxxxx|xxxxx|xxxxx|xxxxx|.xxxx|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx at (9,10)
  _010: a point with color red at (3,5)
  _0101: a point with color red at (14,10)
  _01: a rectangle with size (3,14) and color green and mask Full at (3,0)
diff: 
delta:
! 202 wrong pixels (generated / expected)

TRAIN b527c5c6.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (5,15) and color green and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxx.xxxxxxxxxx at (0,0)
  _010: a point with color red at (4,4)
  _0101: a point with color red at (12,15)
  _01: a rectangle with size (11,4) and color green and mask Full at (6,12)
diff: 
delta:
   (3.2 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,15) and color green and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxx.xxxxxxxxxx|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx...... at (0,0)
  _01: a rectangle with size (11,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxx.... at (6,12)
  _011: a rectangle with size (1,5) and color red and mask Full at (12,15)
  _0111: a rectangle with size (16,1) and color red and mask Full at (4,4)
diff: 
delta:
   (436.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,4) and color green and mask xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxx.|xxxx|xxxx|xxxx|xxxx at (6,12)
  _010: a point with color red at (4,4)
  _0101: a point with color red at (12,15)
  _01: a rectangle with size (5,15) and color green and mask Full at (0,0)
diff: 
delta:
! 268 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,4) and color green and mask xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxx.|xxxx|xxxx|xxxx|xxxx at (6,12)
  _010: a point with color red at (12,15)
  _0101: a point with color red at (4,4)
  _01: a rectangle with size (5,15) and color green and mask Full at (0,0)
diff: 
delta:
! 268 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (5,15) and color green and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxx.xxxxxxxxxx at (0,0)
  _010: a point with color red at (4,4)
  _0101: a point with color red at (12,15)
  _01: a rectangle with size (11,4) and color green and mask Full at (6,12)
diff: 
delta:
! 230 wrong pixels (generated / expected)

TRAIN b527c5c6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,3) and color green and mask xxx|xxx|xxx|xxx|xxx|.xx|xxx|xxx|xxx|xxx|xxx at (0,4)
  _010: a point with color red at (5,4)
  _0101: a point with color red at (14,13)
  _01: a rectangle with size (6,13) and color green and mask Full at (14,7)
diff: 
delta:
! 291 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,3) and color green and mask xxx|xxx|xxx|xxx|xxx|.xx|xxx|xxx|xxx|xxx|xxx at (0,4)
  _010: a point with color red at (14,13)
  _0101: a point with color red at (5,4)
  _01: a rectangle with size (6,13) and color green and mask Full at (14,7)
diff: 
delta:
! 287 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,13) and color green and mask xxxxxx.xxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx at (14,7)
  _010: a point with color red at (5,4)
  _0101: a point with color red at (14,13)
  _01: a rectangle with size (11,3) and color green and mask Full at (0,4)
diff: 
delta:
! 275 wrong pixels (generated / expected)

TEST b527c5c6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.9 sec (58.9 sec/task)
bits-train-error = 11526.3 bits (11526.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-120] Checking task b548a754.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21236.9 = 21249.5
DL output with Mo: L = 12.6 + 45007.3 = 45019.9
DL input+output M: L = 25.2 + 66244.2 = 66269.4

# learning a model for train pairs
2.000	
1.375	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.440	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.252	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.221	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.204	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, ^.layer_01.shape.size + translationOnto(^.layer_0, ^.layer_011))
0.189	OUT SPE ^.layer_0.shape = scaleTo(^.layer_0.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_011))
0.175	OUT SPE ^.size = ^.size
0.168	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.160	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.152	IN  SPE ^.layer_011.shape.color = cyan
0.147	IN  SPE ^.layer_0.shape.mask = Full
0.143	IN  SPE ^.layer_01.shape.mask = Full
0.139	IN  SPE ^.color = black
0.138	OUT SPE ^.color = black
0.007	
0.007	IN  GEN ^.layer_011.shape.color = ?
0.007	IN  GEN ^.layer_01.shape.mask = ?
0.007	IN  GEN ^.layer_0.shape.mask = ?
0.006	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_0.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_011)) at ^.layer_0.pos
  _01: scaleTo(^.layer_01.shape, ^.layer_01.shape.size + translationOnto(^.layer_0, ^.layer_011)) at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color cyan at (?,?)

DL input  with Mi: L = 85.4 + 2778.7 = 2864.1
DL output with Mo: L = 123.0 + 0.0 = 123.0
DL input+output M: L = 208.4 + 2778.7 = 2987.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_0.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_011)) at ^.layer_0.pos
  _01: scaleTo(^.layer_01.shape, ^.layer_01.shape.size + translationOnto(^.layer_0, ^.layer_011)) at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 0.0 = 80.0
DL output with Mo: L = 123.0 + 0.0 = 123.0
DL input+output M: L = 202.9 + 0.0 = 202.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _011: a point with color cyan at (8,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (8,4) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _011: a point with color cyan at (8,3)
diff: 
delta:
correct output grid

TRAIN b548a754.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,10) and color green and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff: 
delta:
correct output grid

TRAIN b548a754.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,3) and color blue and mask Full at (1,2)
  _011: a point with color cyan at (5,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,7) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,9) and color blue and mask Full at (1,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,3) and color blue and mask Full at (1,2)
  _011: a point with color cyan at (5,10)
diff: 
delta:
correct output grid

TRAIN b548a754.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-4,5) and color pink and mask Full at (9,3)

TEST b548a754.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-119] Checking task b60334d2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3103.7 = 3116.4
DL output with Mo: L = 12.6 + 21282.8 = 21295.4
DL input+output M: L = 25.2 + 24386.5 = 24411.8

# learning a model for train pairs
2.000	
1.871	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.739	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.604	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.502	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.311	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.240	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.201	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.140	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.555	
0.550	IN  DEL ^.layer_01
0.545	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 1822.1 = 1883.5
DL output with Mo: L = 183.0 + 11224.0 = 11407.0
DL input+output M: L = 244.4 + 13046.1 = 13290.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 183.0 + 11224.0 = 11407.0
DL input+output M: L = 212.5 + 11224.0 = 11436.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _011: a point with color grey at (2,3)
diff: 
delta: (5,6)=5# (7,2)=5#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (1,2)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (4,5)
  _0110: a point with color grey at (1,2)
  _011: a rectangle with size (1,7) and color grey and mask Full at (6,1)
  _0111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (6,1)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (3,2)
  _011111: a rectangle with size (1,3) and color grey and mask Full at (4,5)
diff: 
delta: (1,4)=5# (6,2)=1  (6,4)=0  (8,1)=5# (8,3)=5#
   (425.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _011: a point with color grey at (2,3)
diff: 
delta: (5,6)=5# (7,2)=5#
! size mismatch, 10x10 instead of 9x9

TRAIN b60334d2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _011: a point with color grey at (1,2)
diff: 
delta: (1,7)=5# (5,2)=5# (7,6)=5#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,7) and color grey and mask Full at (6,1)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (0,1)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (0,6)
  _0111: a rectangle with size (1,8) and color grey and mask Full at (2,1)
  _01111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (4,1)
  _011111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (6,5)
diff: 
delta: (0,3)=5# (0,6)=5# (0,8)=5# (2,4)=0  (2,5)=0  (4,1)=5# (4,3)=5# (6,2)=1  (6,4)=0  (6,6)=1  (8,5)=5# (8,7)=5#
   (696.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _011: a point with color grey at (1,2)
diff: 
delta: (1,7)=5# (5,2)=5# (7,6)=5#
! size mismatch, 10x10 instead of 9x9

TRAIN b60334d2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _011: a point with color grey at (1,1)
diff: 
delta: (3,4)=5# (5,7)=5# (7,2)=5#
! size mismatch, 10x10 instead of 9x9

TEST b60334d2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.3 sec (59.3 sec/task)
bits-train-error = 11224.0 bits (11224.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-118] Checking task b6afb2da.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31219.9 = 31232.5
DL output with Mo: L = 12.6 + 34134.2 = 34146.8
DL input+output M: L = 25.2 + 65354.1 = 65379.3

# learning a model for train pairs
2.000	
1.268	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.938	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.732	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.637	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.462	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.315	OUT SPE ^.layer_01 = coloring(^.layer_0, yellow)
0.294	OUT SPE ^.layer_0111 = coloring(^.layer_01, yellow)
0.283	OUT SPE ^.size = ^.size
0.271	OUT ADD ^.layer_01110 = a point with color ? at (?,?)
0.259	OUT ADD ^.layer_011101 = a point with color ? at (?,?)
0.248	OUT ADD ^.layer_0111011 = a point with color ? at (?,?)
0.237	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.229	OUT SPE ^.layer_010.pos = ^.layer_0.pos
0.222	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size - (2, 2)
0.216	OUT SPE ^.layer_01110.pos = ^.layer_01.pos
0.209	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 1)
0.203	OUT SPE ^.layer_011.pos = ^.layer_01.pos + (1, 1)
0.200	IN  SPE ^.layer_0.shape.color = grey
0.196	IN  SPE ^.layer_01.shape.color = grey
0.190	OUT SPE ^.layer_0111011.pos = ^.layer_01.pos + (3, 0)
0.187	OUT SPE ^.layer_0.shape.color = red
0.181	OUT SPE ^.layer_011.shape.size = ^.layer_01.shape.size - (2, 2)
0.177	OUT SPE ^.layer_010.shape.color = blue
0.174	OUT SPE ^.layer_011.shape.color = red
0.171	OUT SPE ^.layer_011101.shape.color = blue
0.168	OUT SPE ^.layer_01110.shape.color = blue
0.165	OUT SPE ^.layer_0111011.shape.color = blue
0.162	OUT SPE ^.layer_011101.pos.i = ^.layer_01.pos.i
0.159	OUT SPE ^.layer_011101.pos.j = right(^.layer_01)
0.157	IN  SPE ^.layer_0.shape.mask = Full
0.155	IN  SPE ^.layer_01.shape.mask = Full
0.153	OUT SPE ^.layer_0.shape.mask = Full
0.151	OUT SPE ^.layer_011.shape.mask = Full
0.102	
0.102	IN  GEN ^.layer_01.shape.color = ?
0.102	IN  GEN ^.layer_0.shape.color = ?
0.102	IN  GEN ^.layer_01.shape.mask = ?
0.102	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size - (2, 2) and color red and mask Full at ^.layer_0.pos + (1, 1)
  _010: a point with color blue at ^.layer_0.pos
  _01: coloring(^.layer_0, yellow)
  _011: a rectangle with size ^.layer_01.shape.size - (2, 2) and color red and mask Full at ^.layer_01.pos + (1, 1)
  _01110: a point with color blue at ^.layer_01.pos
  _011101: a point with color blue at (^.layer_01.pos.i,right(^.layer_01))
  _0111011: a point with color blue at ^.layer_01.pos + (3, 0)
  _0111: coloring(^.layer_01, yellow)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 72.9 + 1521.3 = 1594.2
DL output with Mo: L = 287.1 + 3116.8 = 3403.9
DL input+output M: L = 359.9 + 4638.2 = 4998.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size - (2, 2) and color red and mask Full at ^.layer_0.pos + (1, 1)
  _010: a point with color blue at ^.layer_0.pos
  _01: coloring(^.layer_0, yellow)
  _011: a rectangle with size ^.layer_01.shape.size - (2, 2) and color red and mask Full at ^.layer_01.pos + (1, 1)
  _01110: a point with color blue at ^.layer_01.pos
  _011101: a point with color blue at (^.layer_01.pos.i,right(^.layer_01))
  _0111011: a point with color blue at ^.layer_01.pos + (3, 0)
  _0111: coloring(^.layer_01, yellow)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 287.1 + 3116.8 = 3403.9
DL input+output M: L = 351.3 + 3116.8 = 3468.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask Full at (5,6)
  _01: a rectangle with size (4,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Full at (6,7)
  _010: a point with color blue at (5,6)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (5,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (3,2)
  _01110: a point with color blue at (2,1)
  _011101: a point with color blue at (2,4)
  _0111011: a point with color blue at (5,1)
  _0111: a rectangle with size (4,4) and color yellow and mask Full at (2,1)
diff: 
delta: (5,4)=1  (5,9)=1  (9,6)=1  (9,9)=1 
   (155.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask Full at (5,6)
  _01: a rectangle with size (4,4) and color grey and mask Full at (2,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,1)
  _01: a rectangle with size (5,4) and color grey and mask Full at (5,6)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN b6afb2da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Full at (6,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,1)
  _010: a point with color blue at (0,0)
  _01: a rectangle with size (5,6) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,4) and color red and mask Full at (7,5)
  _01110: a point with color blue at (6,4)
  _011101: a point with color blue at (6,9)
  _0111011: a point with color blue at (9,4)
  _0111: a rectangle with size (4,6) and color yellow and mask Full at (6,4)
diff: 
delta: (0,5)=1  (4,0)=1  (4,5)=1  (9,9)=1 
   (155.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Full at (6,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Full at (6,4)
  _01: a rectangle with size (5,6) and color grey and mask Full at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  _0: a rectangle with size (6,4) and color black and mask Full at (0,6)
  _01: a rectangle with size (5,4) and color black and mask Full at (5,0)
diff: 
delta: (5,4)=0  (5,5)=0 
! 98 wrong pixels (generated / expected)

TRAIN b6afb2da.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color grey and mask Full at (0,1)
  _01: a rectangle with size (3,6) and color grey and mask Full at (7,4)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color grey and mask Full at (7,4)
  _01: a rectangle with size (6,4) and color grey and mask Full at (0,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TEST b6afb2da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 3116.8 bits (3116.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-117] Checking task b7249182.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3066.4 = 3079.0
DL output with Mo: L = 12.6 + 25903.1 = 25915.8
DL input+output M: L = 25.2 + 28969.5 = 28994.7

# learning a model for train pairs
2.000	
1.598	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.190	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.775	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.751	OUT SPE ^.size = ^.size
0.727	IN  SPE ^.color = black
0.720	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.714	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.711	OUT SPE ^.color = black
0.164	
0.164	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 1682.3 = 1728.1
DL output with Mo: L = 64.0 + 3811.6 = 3875.5
DL input+output M: L = 109.7 + 5493.9 = 5603.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 64.0 + 3811.6 = 3875.5
DL input+output M: L = 109.6 + 3811.6 = 3921.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,10) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color cyan at (10,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|..x..|..x..|xxxxx|x...x at (1,2)
  _01: a rectangle with size (5,5) and color cyan and mask x...x|xxxxx|..x..|..x..|..x.. at (6,2)
diff: 
delta:
   (117.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color cyan at (10,4)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (10,4)
  _01: a point with color red at (1,4)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN b7249182.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,13) and color black and layers
  _0: a point with color green at (6,1)
  _01: a point with color blue at (6,12)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,13) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ....xx|....x.|xxxxx.|....x.|....xx at (4,1)
  _01: a rectangle with size (5,6) and color blue and mask xx....|.x....|.xxxxx|.x....|xx.... at (4,7)
diff: 
delta:
   (126.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,13) and color black and layers
  _0: a point with color green at (6,1)
  _01: a point with color blue at (6,12)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,13) and color black and layers
  _0: a point with color blue at (6,12)
  _01: a point with color green at (6,1)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN b7249182.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,18) and color black and layers
  _0: a point with color grey at (5,3)
  _01: a point with color cyan at (5,16)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,18) and color black and layers
  _0: a rectangle with size (5,7) and color grey and mask .....xx|.....x.|xxxxxx.|.....x.|.....xx at (3,3)
  _01: a rectangle with size (5,7) and color cyan and mask xx.....|.x.....|.xxxxxx|.x.....|xx..... at (3,10)
diff: 
delta:
   (136.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,18) and color black and layers
  _0: a point with color grey at (5,3)
  _01: a point with color cyan at (5,16)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,18) and color black and layers
  _0: a point with color cyan at (5,16)
  _01: a point with color grey at (5,3)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN b7249182.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  _0: a point with color orange at (1,3)
  _01: a point with color pink at (16,3)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  _0: a point with color pink at (16,3)
  _01: a point with color orange at (1,3)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TEST b7249182.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 3811.6 bits (3811.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-116] Checking task b775ac94.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21556.9 = 21569.5
DL output with Mo: L = 12.6 + 53646.2 = 53658.8
DL input+output M: L = 25.2 + 75203.0 = 75228.2

# learning a model for train pairs
2.000	
1.654	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.485	OUT ADD ^.layer_0 = ^.layer_0
1.341	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.203	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.064	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.869	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.744	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.716	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.703	OUT SPE ^.size = ^.size
0.289	
0.288	IN  DEL ^.layer_011
0.286	IN  DEL ^.layer_01
0.286	IN  DEL ^.layer_0111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 104.8 + 8932.5 = 9037.4
DL output with Mo: L = 164.4 + 15065.0 = 15229.4
DL input+output M: L = 269.3 + 23997.5 = 24266.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 164.4 + 15065.0 = 15229.4
DL input+output M: L = 203.3 + 15065.0 = 15268.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
diff: 
delta: (9,16)=2  (9,17)=1  (10,15)=7# (10,16)=7# (10,17)=4  (11,6)=3  (11,7)=4  (11,15)=7# (12,7)=2  (12,14)=7# (12,16)=7# (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
   (0.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (4,4) and color green and mask ..x.|...x|xx.x|.xxx at (8,3)
  _011: a rectangle with size (4,4) and color yellow and mask .x..|x...|x.xx|xxx. at (8,7)
  _0111: a rectangle with size (4,4) and color red and mask xxx.|x.xx|x...|.x.. at (12,7)
  _01111: a rectangle with size (3,3) and color red and mask x.x|.x.|.xx at (7,14)
  _011111: a rectangle with size (3,3) and color blue and mask x.x|.x.|xx. at (7,17)
  _0111111: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
diff: 
delta: (10,17)=4  (10,18)=4  (11,18)=4  (12,17)=4  (12,19)=4  (19,12)=8  (20,11)=8  (20,12)=8  (21,13)=8  (22,13)=2  (22,14)=3  (23,11)=2  (23,12)=2  (23,15)=3  (23,16)=3  (24,12)=2  (24,15)=3 
   (1012.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
diff: 
delta: (9,16)=2  (9,17)=1  (10,15)=7# (10,16)=7# (10,17)=4  (11,6)=3  (11,7)=4  (11,15)=7# (12,7)=2  (12,14)=7# (12,16)=7# (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
diff: 
delta: (9,16)=2  (9,17)=1  (10,17)=4  (11,6)=3  (11,7)=4  (12,4)=1  (12,5)=1  (12,6)=1  (12,7)=2  (13,3)=1  (13,4)=1  (13,6)=1  (14,6)=1  (15,5)=1  (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
! 63 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.xx|.x. at (22,14)
diff: 
delta: (9,16)=2  (9,17)=1  (10,15)=7# (10,16)=7# (10,17)=4  (11,6)=3  (11,7)=4  (11,15)=7# (12,4)=1  (12,5)=1  (12,6)=1  (12,7)=2  (12,14)=7# (12,16)=7# (13,3)=1  (13,4)=1  (13,6)=1  (14,6)=1  (15,5)=1  (21,13)=8  (22,13)=2 
! 64 wrong pixels (generated / expected)

TRAIN b775ac94.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
diff: 
delta: (8,8)=8  (9,7)=4  (9,8)=3 
   (0.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxxx|xx... at (6,8)
  _011: a rectangle with size (3,5) and color yellow and mask ...xx|xxxxx|.x.x. at (9,3)
  _0111: a rectangle with size (1,5) and color green and mask Full at (10,8)
  _01111: a rectangle with size (2,2) and color green and mask Full at (9,8)
  _011111: a rectangle with size (2,1) and color green and mask Full at (10,11)
  _0111111: a rectangle with size (3,1) and color green and mask Full at (9,9)
diff: 
delta:
   (240.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
diff: 
delta: (8,8)=8  (9,7)=4  (9,8)=3 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (7,3)
diff: 
delta: (6,4)=2  (6,6)=2  (8,6)=2  (8,7)=2  (8,8)=8  (9,7)=4  (9,8)=3 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (7,6)
diff: 
delta: (6,4)=2  (6,6)=2  (7,3)=2  (7,4)=2  (7,5)=2  (8,8)=8  (9,7)=4  (9,8)=3 
! 36 wrong pixels (generated / expected)

TRAIN b775ac94.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
diff: 
delta: (1,7)=8  (1,8)=8  (2,7)=8  (2,8)=8  (3,9)=8  (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
   (0.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxxx|x... at (5,5)
  _011: a rectangle with size (3,4) and color yellow and mask x...|xxxx|.x.. at (8,5)
  _0111: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _01111: a rectangle with size (3,3) and color yellow and mask .xx|.xx|x.. at (1,10)
  _011111: a rectangle with size (2,2) and color pink and mask Full at (5,11)
  _0111111: a rectangle with size (1,1) and color pink and mask Full at (4,10)
diff: 
delta:
   (253.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
diff: 
delta: (1,7)=8  (1,8)=8  (2,7)=8  (2,8)=8  (3,9)=8  (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
diff: 
delta: (3,10)=4  (4,10)=6  (7,5)=1  (8,4)=2  (8,5)=4  (9,1)=2  (9,2)=2  (9,3)=2  (9,4)=2  (10,3)=2 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (9,1)
diff: 
delta: (1,7)=8  (1,8)=8  (2,7)=8  (2,8)=8  (3,9)=8  (3,10)=4  (4,10)=6  (7,5)=1  (8,4)=2  (8,5)=4  (10,3)=2 
! 33 wrong pixels (generated / expected)

TRAIN b775ac94.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask .x..|xxx.|.x.x|..xx at (3,4)
diff: 
delta: (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=8  (8,16)=1  (16,13)=1  (17,13)=2  (17,14)=4  (18,11)=2  (18,12)=2  (18,13)=2  (19,11)=2 
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|xxx|x.. at (17,11)
diff: 
delta: (3,5)=8  (4,4)=8  (4,5)=8  (4,6)=8  (5,5)=8  (5,7)=8  (6,6)=8  (6,7)=8  (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=8  (8,16)=1  (16,13)=1  (17,14)=4 
! 62 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (7,15)
diff: 
delta: (3,5)=8  (4,4)=8  (4,5)=8  (4,6)=8  (5,5)=8  (5,7)=8  (6,6)=8  (6,7)=8  (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,18)=8  (16,13)=1  (17,13)=2  (17,14)=4  (18,11)=2  (18,12)=2  (18,13)=2  (19,11)=2 
! 63 wrong pixels (generated / expected)

TEST b775ac94.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 15065.0 bits (15065.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-115] Checking task b782dc8a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 85218.5 = 85231.1
DL output with Mo: L = 12.6 + 85283.6 = 85296.2
DL input+output M: L = 25.2 + 170502.2 = 170527.4

# learning a model for train pairs
2.000	
1.693	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.493	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.312	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.993	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	OUT ADD ^.layer_011 = ^.layer_01
0.859	OUT ADD ^.layer_0111 = ^.layer_011
0.808	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.761	OUT ADD ^.layer_01111 = ^.layer_01111
0.729	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.475	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 21666.7 = 21805.6
DL output with Mo: L = 108.4 + 40208.2 = 40316.7
DL input+output M: L = 247.3 + 61874.9 = 62122.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 20.0 = 158.9
DL output with Mo: L = 108.4 + 40208.2 = 40316.7
DL input+output M: L = 247.3 + 40228.2 = 40475.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,24) and color cyan and layers
  _0: a rectangle with size (11,16) and color black and mask .xxxxx..........|xx...xxxxxx.....|.....x....x.....|.....x....xxx...|.....x....x.....|...xxxx...x.....|..........x.....|..........xxxxxx|..........x.....|........xxx.....|........x....... at (0,0)
  _01: a rectangle with size (8,8) and color black and mask ..x.....|xxx...xx|x......x|x......x|x......x|xxxxxxxx|.x...x..|.x...x.. at (2,1)
  _011: a rectangle with size (11,5) and color black and mask ....x|....x|....x|....x|....x|xxxxx|....x|....x|....x|....x|....x at (0,19)
  _0111: a rectangle with size (6,6) and color black and mask x.....|x....x|x....x|xxxxxx|.x....|.x.... at (0,16)
  _01111: a rectangle with size (6,4) and color black and mask x...|xxx.|..x.|..x.|..x.|xxxx at (0,12)
diff: 
delta: (0,19)=0  (1,18)=0  (1,19)=0  (6,17)=3  (7,16)=3  (7,17)=2  (7,18)=3  (7,19)=0  (7,20)=0  (7,21)=0  (8,17)=3  (8,21)=0  (9,0)=0  (9,4)=0  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,17)=0  (9,19)=0  (9,21)=0  (10,0)=0  (10,4)=0  (10,12)=0  (10,15)=0  (10,19)=0 
   (0.0 bits)
data: a background with size (11,24) and color cyan and layers
  _0: a rectangle with size (1,11) and color red and mask Full at (7,11)
  _01: a rectangle with size (2,4) and color black and mask xxxx|x..x at (9,12)
  _011: a rectangle with size (8,8) and color black and mask ..x.....|xxx...xx|x......x|x......x|x......x|xxxxxxxx|.x...x..|.x...x.. at (2,1)
  _0111: a rectangle with size (11,5) and color black and mask ....x|....x|....x|....x|....x|xxxxx|....x|....x|....x|....x|....x at (0,19)
  _01111: a rectangle with size (6,4) and color black and mask x...|xxx.|..x.|..x.|..x.|xxxx at (0,12)
  _011111: a rectangle with size (9,1) and color green and mask Full at (1,10)
diff: 
delta: (0,1)=3  (0,2)=2  (0,3)=3  (0,4)=2  (0,5)=3  (0,16)=2  (0,19)=0  (1,0)=3  (1,1)=2  (1,5)=2  (1,6)=3  (1,7)=2  (1,8)=3  (1,9)=2  (1,16)=3  (1,18)=0  (1,19)=0  (1,21)=2  (2,5)=3  (2,10)=2  (2,16)=2  (2,21)=3  (3,5)=2  (3,11)=2  (3,12)=3  (3,16)=3  (3,17)=2  (3,18)=3  (3,19)=2  (3,20)=3  (3,21)=2  (4,5)=3  (4,10)=2  (4,17)=3  (5,3)=2  (5,4)=3  (5,5)=2  (5,6)=3  (5,17)=2  (6,10)=2  (6,17)=3  (7,12)=3  (7,14)=3  (7,16)=3  (7,18)=3  (7,20)=3  (8,10)=2  (8,17)=3  (8,21)=3  (9,0)=0  (9,4)=0  (9,8)=3  (9,9)=2  (9,17)=2  (9,19)=0  (9,21)=2  (10,0)=0  (10,4)=0  (10,8)=2  (10,19)=0 
   (2472.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,24) and color cyan and layers
  _0: a rectangle with size (11,16) and color black and mask .xxxxx..........|xx...xxxxxx.....|.....x....x.....|.....x....xxx...|.....x....x.....|...xxxx...x.....|..........x.....|..........xxxxxx|..........x.....|........xxx.....|........x....... at (0,0)
  _01: a rectangle with size (8,8) and color black and mask ..x.....|xxx...xx|x......x|x......x|x......x|xxxxxxxx|.x...x..|.x...x.. at (2,1)
  _011: a rectangle with size (11,5) and color black and mask ....x|....x|....x|....x|....x|xxxxx|....x|....x|....x|....x|....x at (0,19)
  _0111: a rectangle with size (6,6) and color black and mask x.....|x....x|x....x|xxxxxx|.x....|.x.... at (0,16)
  _01111: a rectangle with size (6,4) and color black and mask x...|xxx.|..x.|..x.|..x.|xxxx at (0,12)
diff: 
delta: (0,19)=0  (1,18)=0  (1,19)=0  (6,17)=3  (7,16)=3  (7,17)=2  (7,18)=3  (7,19)=0  (7,20)=0  (7,21)=0  (8,17)=3  (8,21)=0  (9,0)=0  (9,4)=0  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,17)=0  (9,19)=0  (9,21)=0  (10,0)=0  (10,4)=0  (10,12)=0  (10,15)=0  (10,19)=0 
! size mismatch, 10x10 instead of 11x24

TRAIN b782dc8a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (4,13)
  _01111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
diff: 
delta: (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
   (2.0 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (1,7) and color yellow and mask Full at (9,4)
  _011: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _0111: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _01111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _011111: a rectangle with size (2,5) and color yellow and mask Full at (0,8)
diff: 
delta: (0,8)=1  (0,10)=1  (0,12)=1  (2,8)=1  (3,8)=4  (4,8)=1  (4,13)=8  (5,8)=4  (5,9)=1  (5,10)=4  (5,13)=8  (6,1)=4  (6,2)=1  (6,3)=4  (6,4)=1  (6,10)=1  (6,13)=8  (7,4)=4  (7,10)=4  (8,4)=1  (8,10)=1  (9,5)=1  (9,7)=1  (9,9)=1  (9,11)=1  (10,0)=1  (10,4)=1  (11,0)=4  (11,4)=4  (12,0)=1  (12,1)=4  (12,2)=1  (12,3)=4  (12,4)=1 
   (1548.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (4,13)
diff: 
delta: (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
! size mismatch, 10x10 instead of 13x14

TRAIN b782dc8a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (11,12) and color black and mask .......xxx..|.........x..|xxxx.....x..|...x.....x..|...xxx...x..|.....x...x..|.....xxxxxxx|.....x......|xx...x......|.x...x......|.xxxxx...... at (4,0)
  _01: a rectangle with size (13,8) and color black and mask ..xxxxx.|....x...|....x...|....x...|....x...|....x...|....xxxx|......x.|......x.|......x.|xxxxxxx.|x.......|x....... at (2,7)
  _011: a rectangle with size (8,8) and color black and mask x.......|x.......|x.......|xxxxxx..|.....x..|.....xxx|.......x|.......x at (1,0)
  _0111: a rectangle with size (1,11) and color black and mask Full at (0,4)
  _01111: a rectangle with size (5,4) and color black and mask xx..|.x..|.xxx|...x|...x at (8,0)
diff: 
delta: (0,2)=0  (0,6)=8  (1,2)=0  (1,7)=4  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=0  (2,6)=4  (2,7)=3  (3,7)=4  (4,13)=0  (4,14)=0  (5,13)=0  (6,13)=0  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,14)=0 
! size mismatch, 10x10 instead of 15x15

TEST b782dc8a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 40208.2 bits (40208.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-114] Checking task b8825c91.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 300952.6 = 300965.2
DL output with Mo: L = 12.6 + 293241.4 = 293254.0
DL input+output M: L = 25.2 + 594194.0 = 594219.2

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = closeSym(flipHeight; rotate90; rotate180; , yellow, ^.grid)
0.872	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.803	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.755	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.681	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.667	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.644	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.639	IN  SPE ^.layer_0111.shape.mask = Full
0.630	IN  SPE ^.layer_011.shape.mask = Full
0.630	IN  SPE ^.layer_01111.shape.mask = Full
0.629	IN  SPE ^.layer_011111.shape.mask = Full
0.629	IN  SPE ^.layer_0111111.shape.mask = Full
0.001	
0.001	IN  DEL ^.layer_0111111
0.001	IN  DEL ^.layer_011111
0.001	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01111111
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , yellow, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 217.7 + 189081.8 = 189299.5
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 241.7 + 189081.8 = 189323.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , yellow, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 36.6 + 0.0 = 36.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,16) and color brown and layers
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=7# (0,9)=7# (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=7# (1,9)=7# (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,4)=7# (2,5)=7# (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=7# (2,11)=7# (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,4)=7# (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,11)=7# (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,2)=7# (4,3)=7# (4,4)=3  (4,5)=8  (4,7)=1  (4,8)=1  (4,10)=8  (4,11)=3  (4,12)=7# (4,13)=7# (4,14)=6  (5,0)=6  (5,1)=1  (5,2)=7# (5,4)=8  (5,5)=3  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=1  (5,15)=6  (6,0)=7# (6,1)=7# (6,2)=3  (6,3)=3  (6,5)=1  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=7# (6,15)=7# (7,0)=7# (7,2)=3  (7,3)=3  (7,4)=1  (7,5)=1  (7,6)=6  (7,7)=1  (7,8)=1  (7,9)=6  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,15)=7# (8,0)=7# (8,2)=3  (8,3)=3  (8,4)=1  (8,5)=1  (8,6)=6  (8,7)=1  (8,8)=1  (8,9)=6  (8,10)=1  (8,11)=1  (8,12)=3  (8,13)=3  (8,15)=7# (9,0)=7# (9,1)=7# (9,2)=3  (9,3)=3  (9,5)=1  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=1  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,2)=7# (10,4)=8  (10,5)=3  (10,6)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=7# (10,14)=1  (10,15)=6  (11,1)=6  (11,2)=7# (11,3)=7# (11,4)=3  (11,5)=8  (11,7)=1  (11,8)=1  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=7# (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,4)=7# (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,4)=7# (13,5)=7# (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,6)=7# (14,9)=7# (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,6)=7# (15,7)=7# (15,8)=7# (15,9)=7# (15,10)=6  (15,12)=5# (15,13)=6 
   (0.0 bits)
data: 
9#9#6 5#9#6 7#7#7#7#6 9#5#6 9#9#
9#1 5#5#6 1 7#9#9#7#1 6 5#5#1 9#
6 5#1 9#7#7#3 3 3 3 7#7#9#1 5#6 
5#5#9#3 7#9#3 3 3 3 9#7#3 9#5#5#
9#6 7#7#3 8 9#1 1 9#8 3 7#7#6 9#
6 1 7#9#8 3 1 1 1 1 3 8 9#7#1 6 
7#7#3 3 9#1 6 6 6 6 1 9#3 3 7#7#
7#9#3 3 1 1 6 1 1 6 1 1 3 3 9#7#
7#9#3 3 1 1 6 1 1 6 1 1 3 3 9#7#
7#7#3 3 9#1 6 6 6 6 1 9#3 3 7#7#
6 1 7#9#8 3 1 1 1 1 3 8 9#7#1 6 
9#6 7#7#3 8 9#1 1 9#8 3 7#7#6 9#
5#5#9#3 7#9#3 3 3 3 9#7#3 9#5#5#
6 5#1 9#7#7#3 3 3 3 7#7#9#1 5#6 
9#1 5#5#6 1 7#9#9#7#1 6 5#5#1 9#
9#9#6 5#9#6 7#7#7#7#6 9#5#6 9#9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=7# (0,9)=7# (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=7# (1,9)=7# (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,4)=7# (2,5)=7# (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=7# (2,11)=7# (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,4)=7# (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,11)=7# (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,2)=7# (4,3)=7# (4,4)=3  (4,5)=8  (4,7)=1  (4,8)=1  (4,10)=8  (4,11)=3  (4,12)=7# (4,13)=7# (4,14)=6  (5,0)=6  (5,1)=1  (5,2)=7# (5,4)=8  (5,5)=3  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=1  (5,15)=6  (6,0)=7# (6,1)=7# (6,2)=3  (6,3)=3  (6,5)=1  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=7# (6,15)=7# (7,0)=7# (7,2)=3  (7,3)=3  (7,4)=1  (7,5)=1  (7,6)=6  (7,7)=1  (7,8)=1  (7,9)=6  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,15)=7# (8,0)=7# (8,2)=3  (8,3)=3  (8,4)=1  (8,5)=1  (8,6)=6  (8,7)=1  (8,8)=1  (8,9)=6  (8,10)=1  (8,11)=1  (8,12)=3  (8,13)=3  (8,15)=7# (9,0)=7# (9,1)=7# (9,2)=3  (9,3)=3  (9,5)=1  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=1  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,2)=7# (10,4)=8  (10,5)=3  (10,6)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=7# (10,14)=1  (10,15)=6  (11,1)=6  (11,2)=7# (11,3)=7# (11,4)=3  (11,5)=8  (11,7)=1  (11,8)=1  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=7# (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,4)=7# (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,4)=7# (13,5)=7# (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,6)=7# (14,9)=7# (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,6)=7# (15,7)=7# (15,8)=7# (15,9)=7# (15,10)=6  (15,12)=5# (15,13)=6 
correct output grid

TRAIN b8825c91.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (16,16) and color pink and layers
diff: 
delta: (0,0)=9# (0,1)=9# (0,3)=1  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,12)=1  (0,14)=9# (0,15)=9# (1,0)=9# (1,2)=1  (1,3)=3  (1,4)=9# (1,7)=1  (1,8)=1  (1,11)=9# (1,12)=3  (1,13)=1  (1,15)=9# (2,1)=4  (2,2)=4  (2,3)=2  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,12)=2  (2,13)=5# (2,14)=1  (3,0)=1  (3,1)=4  (3,2)=4  (3,3)=8  (3,5)=1  (3,6)=8  (3,7)=2  (3,8)=2  (3,9)=8  (3,10)=1  (3,12)=8  (3,13)=2  (3,14)=3  (3,15)=1  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,5)=1  (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=1  (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=1  (5,11)=1  (5,12)=1  (5,15)=9# (6,2)=8  (6,3)=8  (6,4)=5# (6,5)=5# (6,6)=9# (6,7)=5# (6,8)=5# (6,9)=9# (6,10)=5# (6,11)=5# (6,12)=8  (6,13)=8  (7,1)=1  (7,2)=8  (7,3)=2  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=8  (7,8)=8  (7,9)=5# (7,10)=5# (7,11)=5# (7,12)=2  (7,13)=8  (7,14)=1  (8,1)=1  (8,2)=8  (8,3)=2  (8,4)=5# (8,5)=5# (8,6)=5# (8,7)=8  (8,8)=8  (8,9)=5# (8,10)=5# (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=1  (9,2)=8  (9,3)=8  (9,4)=5# (9,5)=5# (9,6)=9# (9,7)=5# (9,8)=5# (9,9)=9# (9,10)=5# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,3)=1  (10,4)=1  (10,5)=1  (10,6)=5# (10,7)=5# (10,8)=5# (10,9)=5# (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,5)=1  (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=1  (11,11)=7# (11,14)=9# (11,15)=8  (12,0)=1  (12,1)=3  (12,2)=2  (12,3)=8  (12,5)=1  (12,6)=8  (12,7)=2  (12,8)=2  (12,9)=8  (12,10)=1  (12,12)=8  (12,13)=2  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=5# (13,3)=2  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,12)=2  (13,13)=5# (13,14)=1  (14,0)=9# (14,2)=1  (14,3)=3  (14,4)=9# (14,7)=1  (14,8)=1  (14,11)=9# (14,12)=3  (14,13)=1  (14,15)=9# (15,0)=9# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,12)=1  (15,14)=9# (15,15)=9#
   (0.0 bits)
data: 
9#9#6 1 8 9#6 6 6 6 9#8 1 6 9#9#
9#6 1 3 9#6 6 1 1 6 6 9#3 1 6 9#
6 1 5#2 6 6 8 8 8 8 6 6 2 5#1 6 
1 3 2 8 6 1 8 2 2 8 1 6 8 2 3 1 
8 9#6 6 7#1 5#5#5#5#1 7#6 6 9#8 
9#6 6 1 1 1 5#5#5#5#1 1 1 6 6 9#
6 6 8 8 5#5#9#5#5#9#5#5#8 8 6 6 
6 1 8 2 5#5#5#8 8 5#5#5#2 8 1 6 
6 1 8 2 5#5#5#8 8 5#5#5#2 8 1 6 
6 6 8 8 5#5#9#5#5#9#5#5#8 8 6 6 
9#6 6 1 1 1 5#5#5#5#1 1 1 6 6 9#
8 9#6 6 7#1 5#5#5#5#1 7#6 6 9#8 
1 3 2 8 6 1 8 2 2 8 1 6 8 2 3 1 
6 1 5#2 6 6 8 8 8 8 6 6 2 5#1 6 
9#6 1 3 9#6 6 1 1 6 6 9#3 1 6 9#
9#9#6 1 8 9#6 6 6 6 9#8 1 6 9#9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
diff: 
delta: (0,0)=9# (0,1)=9# (0,3)=1  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,12)=1  (0,14)=9# (0,15)=9# (1,0)=9# (1,2)=1  (1,3)=3  (1,4)=9# (1,7)=1  (1,8)=1  (1,11)=9# (1,12)=3  (1,13)=1  (1,15)=9# (2,1)=4  (2,2)=4  (2,3)=2  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,12)=2  (2,13)=5# (2,14)=1  (3,0)=1  (3,1)=4  (3,2)=4  (3,3)=8  (3,5)=1  (3,6)=8  (3,7)=2  (3,8)=2  (3,9)=8  (3,10)=1  (3,12)=8  (3,13)=2  (3,14)=3  (3,15)=1  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,5)=1  (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=1  (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=1  (5,11)=1  (5,12)=1  (5,15)=9# (6,2)=8  (6,3)=8  (6,4)=5# (6,5)=5# (6,6)=9# (6,7)=5# (6,8)=5# (6,9)=9# (6,10)=5# (6,11)=5# (6,12)=8  (6,13)=8  (7,1)=1  (7,2)=8  (7,3)=2  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=8  (7,8)=8  (7,9)=5# (7,10)=5# (7,11)=5# (7,12)=2  (7,13)=8  (7,14)=1  (8,1)=1  (8,2)=8  (8,3)=2  (8,4)=5# (8,5)=5# (8,6)=5# (8,7)=8  (8,8)=8  (8,9)=5# (8,10)=5# (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=1  (9,2)=8  (9,3)=8  (9,4)=5# (9,5)=5# (9,6)=9# (9,7)=5# (9,8)=5# (9,9)=9# (9,10)=5# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,3)=1  (10,4)=1  (10,5)=1  (10,6)=5# (10,7)=5# (10,8)=5# (10,9)=5# (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,5)=1  (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=1  (11,11)=7# (11,14)=9# (11,15)=8  (12,0)=1  (12,1)=3  (12,2)=2  (12,3)=8  (12,5)=1  (12,6)=8  (12,7)=2  (12,8)=2  (12,9)=8  (12,10)=1  (12,12)=8  (12,13)=2  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=5# (13,3)=2  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,12)=2  (13,13)=5# (13,14)=1  (14,0)=9# (14,2)=1  (14,3)=3  (14,4)=9# (14,7)=1  (14,8)=1  (14,11)=9# (14,12)=3  (14,13)=1  (14,15)=9# (15,0)=9# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,12)=1  (15,14)=9# (15,15)=9#
correct output grid

TRAIN b8825c91.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color cyan and layers
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=9# (0,3)=9# (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,12)=9# (0,13)=9# (0,14)=3  (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=9# (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,13)=9# (1,14)=9# (1,15)=3  (2,0)=9# (2,1)=9# (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (3,15)=9# (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,6)=9# (4,7)=7# (4,8)=7# (4,9)=9# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=7# (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,4)=9# (6,5)=7# (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=7# (6,11)=9# (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,4)=7# (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,11)=7# (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,4)=7# (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,11)=7# (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,4)=9# (9,5)=7# (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=7# (9,11)=9# (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,6)=7# (10,7)=6  (10,8)=6  (10,9)=7# (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=9# (11,7)=7# (11,8)=7# (11,9)=9# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,0)=9# (12,1)=3  (12,2)=4  (12,3)=4  (12,4)=4  (12,5)=4  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (12,15)=9# (13,0)=9# (13,1)=9# (13,2)=4  (13,3)=4  (13,4)=4  (13,5)=4  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (13,14)=9# (13,15)=9# (14,0)=3  (14,1)=9# (14,2)=4  (14,3)=4  (14,4)=4  (14,5)=4  (14,7)=5# (14,8)=5# (14,12)=3  (14,13)=9# (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,2)=9# (15,3)=9# (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,12)=9# (15,13)=9# (15,14)=3  (15,15)=9#
   (0.0 bits)
data: 
9#3 9#9#2 8 7#8 8 7#8 2 9#9#3 9#
3 9#9#3 8 8 8 5#5#8 8 8 3 9#9#3 
9#9#2 8 7#8 2 2 2 2 8 7#8 2 9#9#
9#3 8 8 8 5#2 1 1 2 5#8 8 8 3 9#
2 8 7#8 2 5#9#7#7#9#5#2 8 7#8 2 
8 8 8 5#5#5#7#6 6 7#5#5#5#8 8 8 
7#8 2 2 9#7#1 1 1 1 7#9#2 2 8 7#
8 5#2 1 7#6 1 3 3 1 6 7#1 2 5#8 
8 5#2 1 7#6 1 3 3 1 6 7#1 2 5#8 
7#8 2 2 9#7#1 1 1 1 7#9#2 2 8 7#
8 8 8 5#5#5#7#6 6 7#5#5#5#8 8 8 
2 8 7#8 2 5#9#7#7#9#5#2 8 7#8 2 
9#3 8 8 8 5#2 1 1 2 5#8 8 8 3 9#
9#9#2 8 7#8 2 2 2 2 8 7#8 2 9#9#
3 9#9#3 8 8 8 5#5#8 8 8 3 9#9#3 
9#3 9#9#2 8 7#8 8 7#8 2 9#9#3 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color cyan and layers
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=9# (0,3)=9# (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,12)=9# (0,13)=9# (0,14)=3  (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=9# (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,13)=9# (1,14)=9# (1,15)=3  (2,0)=9# (2,1)=9# (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (3,15)=9# (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,6)=9# (4,7)=7# (4,8)=7# (4,9)=9# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=7# (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,4)=9# (6,5)=7# (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=7# (6,11)=9# (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,4)=7# (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,11)=7# (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,4)=7# (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,11)=7# (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,4)=9# (9,5)=7# (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=7# (9,11)=9# (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,6)=7# (10,7)=6  (10,8)=6  (10,9)=7# (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=9# (11,7)=7# (11,8)=7# (11,9)=9# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,0)=9# (12,1)=3  (12,2)=4  (12,3)=4  (12,4)=4  (12,5)=4  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (12,15)=9# (13,0)=9# (13,1)=9# (13,2)=4  (13,3)=4  (13,4)=4  (13,5)=4  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (13,14)=9# (13,15)=9# (14,0)=3  (14,1)=9# (14,2)=4  (14,3)=4  (14,4)=4  (14,5)=4  (14,7)=5# (14,8)=5# (14,12)=3  (14,13)=9# (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,2)=9# (15,3)=9# (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,12)=9# (15,13)=9# (15,14)=3  (15,15)=9#
correct output grid

TRAIN b8825c91.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (16,16) and color blue and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,3)=6  (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,12)=6  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,2)=6  (1,3)=2  (1,4)=9# (1,5)=5# (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=2  (2,0)=7# (2,1)=6  (2,2)=3  (2,3)=3  (2,4)=9# (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,10)=4  (2,11)=4  (2,12)=4  (2,13)=4  (2,14)=6  (2,15)=7# (3,0)=6  (3,1)=2  (3,2)=3  (3,3)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=2  (3,15)=6  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,7)=3  (5,8)=3  (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,2)=6  (6,3)=6  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,12)=6  (6,13)=6  (6,15)=9# (7,2)=6  (7,3)=6  (7,5)=3  (7,6)=3  (7,7)=2  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=6  (7,13)=6  (8,2)=6  (8,3)=4  (8,4)=4  (8,5)=3  (8,6)=3  (8,7)=2  (8,8)=2  (8,9)=3  (8,10)=3  (8,12)=6  (8,13)=6  (9,0)=9# (9,2)=6  (9,3)=4  (9,4)=4  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,12)=6  (9,13)=6  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,7)=3  (10,8)=3  (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,0)=6  (12,1)=2  (12,2)=3  (12,3)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,12)=8  (12,13)=3  (12,14)=2  (12,15)=6  (13,0)=7# (13,1)=6  (13,2)=3  (13,3)=3  (13,4)=9# (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,11)=9# (13,12)=3  (13,13)=3  (13,14)=6  (13,15)=7# (14,0)=2  (14,2)=6  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,13)=6  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,3)=6  (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,12)=6  (15,13)=7# (15,14)=2  (15,15)=2 
   (0.0 bits)
data: 
2 2 7#6 8 9#9#1 1 9#9#8 6 7#2 2 
2 1 6 2 9#5#1 1 1 1 5#9#2 6 1 2 
7#6 3 3 9#1 6 6 6 6 1 9#3 3 6 7#
6 2 3 8 1 1 6 6 6 6 1 1 8 3 2 6 
8 9#9#1 1 7#1 1 1 1 7#1 1 9#9#8 
9#5#1 1 7#7#1 3 3 1 7#7#1 1 5#9#
9#1 6 6 1 1 3 3 3 3 1 1 6 6 1 9#
1 1 6 6 1 3 3 2 2 3 3 1 6 6 1 1 
1 1 6 6 1 3 3 2 2 3 3 1 6 6 1 1 
9#1 6 6 1 1 3 3 3 3 1 1 6 6 1 9#
9#5#1 1 7#7#1 3 3 1 7#7#1 1 5#9#
8 9#9#1 1 7#1 1 1 1 7#1 1 9#9#8 
6 2 3 8 1 1 6 6 6 6 1 1 8 3 2 6 
7#6 3 3 9#1 6 6 6 6 1 9#3 3 6 7#
2 1 6 2 9#5#1 1 1 1 5#9#2 6 1 2 
2 2 7#6 8 9#9#1 1 9#9#8 6 7#2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,3)=6  (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,12)=6  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,2)=6  (1,3)=2  (1,4)=9# (1,5)=5# (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=2  (2,0)=7# (2,1)=6  (2,2)=3  (2,3)=3  (2,4)=9# (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,10)=4  (2,11)=4  (2,12)=4  (2,13)=4  (2,14)=6  (2,15)=7# (3,0)=6  (3,1)=2  (3,2)=3  (3,3)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=2  (3,15)=6  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,7)=3  (5,8)=3  (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,2)=6  (6,3)=6  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,12)=6  (6,13)=6  (6,15)=9# (7,2)=6  (7,3)=6  (7,5)=3  (7,6)=3  (7,7)=2  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=6  (7,13)=6  (8,2)=6  (8,3)=4  (8,4)=4  (8,5)=3  (8,6)=3  (8,7)=2  (8,8)=2  (8,9)=3  (8,10)=3  (8,12)=6  (8,13)=6  (9,0)=9# (9,2)=6  (9,3)=4  (9,4)=4  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,12)=6  (9,13)=6  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,7)=3  (10,8)=3  (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,0)=6  (12,1)=2  (12,2)=3  (12,3)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,12)=8  (12,13)=3  (12,14)=2  (12,15)=6  (13,0)=7# (13,1)=6  (13,2)=3  (13,3)=3  (13,4)=9# (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,11)=9# (13,12)=3  (13,13)=3  (13,14)=6  (13,15)=7# (14,0)=2  (14,2)=6  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,13)=6  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,3)=6  (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,12)=6  (15,13)=7# (15,14)=2  (15,15)=2 
correct output grid

TRAIN b8825c91.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=8  (0,3)=1  (0,4)=9# (0,5)=8  (0,6)=2  (0,9)=2  (0,10)=8  (0,11)=9# (0,12)=1  (0,13)=8  (0,14)=7# (0,15)=7# (1,0)=7# (1,1)=1  (1,2)=1  (1,3)=8  (1,4)=8  (1,5)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=7# (2,0)=8  (2,1)=1  (2,3)=9# (2,4)=2  (2,6)=4  (2,7)=4  (2,8)=4  (2,11)=2  (2,12)=9# (2,14)=1  (2,15)=8  (3,0)=1  (3,1)=8  (3,2)=9# (3,3)=1  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=1  (3,12)=1  (3,13)=9# (3,14)=8  (3,15)=1  (4,0)=9# (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=7# (4,6)=4  (4,7)=4  (4,8)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=8  (4,15)=9# (5,0)=8  (5,1)=8  (5,4)=7# (5,5)=7# (5,7)=5# (5,8)=5# (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=8  (5,15)=8  (6,0)=2  (6,3)=1  (6,6)=5# (6,7)=5# (6,8)=5# (6,9)=5# (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,15)=2  (7,2)=1  (7,3)=1  (7,5)=5# (7,6)=5# (7,7)=7# (7,8)=7# (7,9)=5# (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (8,2)=1  (8,3)=1  (8,5)=5# (8,6)=5# (8,7)=7# (8,8)=7# (8,9)=5# (8,10)=5# (8,12)=1  (8,13)=1  (9,0)=2  (9,3)=1  (9,6)=5# (9,7)=5# (9,8)=5# (9,9)=5# (9,12)=1  (9,15)=2  (10,0)=8  (10,1)=8  (10,4)=7# (10,5)=7# (10,7)=5# (10,8)=5# (10,10)=7# (10,11)=7# (10,14)=8  (10,15)=8  (11,0)=9# (11,1)=8  (11,2)=2  (11,4)=8  (11,5)=7# (11,10)=7# (11,11)=8  (11,13)=2  (11,14)=8  (11,15)=9# (12,0)=1  (12,1)=8  (12,2)=9# (12,3)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,12)=1  (12,13)=9# (12,14)=8  (12,15)=1  (13,0)=8  (13,1)=1  (13,3)=9# (13,4)=2  (13,7)=1  (13,8)=1  (13,11)=2  (13,12)=9# (13,14)=1  (13,15)=8  (14,0)=7# (14,1)=1  (14,2)=1  (14,3)=8  (14,4)=8  (14,5)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=1  (14,14)=1  (14,15)=7# (15,0)=7# (15,1)=7# (15,2)=8  (15,3)=1  (15,4)=9# (15,5)=8  (15,6)=2  (15,9)=2  (15,10)=8  (15,11)=9# (15,12)=1  (15,13)=8  (15,14)=7# (15,15)=7#
correct output grid

TEST b8825c91.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.1 sec (5.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-113] Checking task b8cdaf2b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10850.6 = 10863.2
DL output with Mo: L = 12.6 + 15119.7 = 15132.3
DL input+output M: L = 25.2 + 25970.3 = 25995.6

# learning a model for train pairs
2.000	
1.500	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.029	OUT ADD ^.layer_0 = ^.layer_0
0.857	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.668	OUT ADD ^.layer_01 = ^.layer_01
0.602	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.534	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.492	OUT SPE ^.size = ^.size
0.473	OUT SPE ^.layer_011.pos = projI(^.layer_01.pos) - (2, 0)
0.462	OUT SPE ^.layer_0111.pos.j = ^.layer_01.pos.i
0.451	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.i - 2
0.440	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.i
0.430	OUT SPE ^.layer_0111.shape.size.i = ^.layer_01.shape.size.i
0.419	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.i
0.408	OUT SPE ^.layer_0111.shape.size.j = ^.layer_01.shape.size.i
0.399	IN  SPE ^.color = black
0.393	OUT SPE ^.color = black
0.080	
0.080	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.i) and color ? and mask ? at projI(^.layer_01.pos) - (2, 0)
  _0111: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.i) and color ? and mask ? at (^.layer_01.pos.i - 2,^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 3441.4 = 3505.7
DL output with Mo: L = 171.3 + 890.1 = 1061.4
DL input+output M: L = 235.6 + 4331.5 = 4567.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.i) and color ? and mask ? at projI(^.layer_01.pos) - (2, 0)
  _0111: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.i) and color ? and mask ? at (^.layer_01.pos.i - 2,^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 171.3 + 890.1 = 1061.4
DL input+output M: L = 235.5 + 930.1 = 1165.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (4,2)
  _01: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (4,2)
  _01: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _011: a rectangle with size (2,2) and color green and mask Even Checkboard at (1,0)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,3)
diff: 
delta:
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (4,2)
  _01: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,2)
diff: 
delta: (4,2)=3 
! 6 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
  _011: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,4)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (4,1)
  _01: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (3,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta: (4,0)=6  (4,4)=6 
! 4 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
  _01: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
  _01: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _011: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (3,0)
  _0111: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,5)
diff: 
delta:
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
  _01: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (5,2)
diff: 
delta: (6,2)=4  (6,3)=4  (6,4)=4 
! 8 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,9) and color cyan and mask ...xxx...|xxx...xxx at (7,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (8,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (8,3)
  _01: a rectangle with size (2,9) and color cyan and mask ...xxx...|xxx...xxx at (7,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (7,3)
diff: 
delta: (8,3)=2  (8,4)=2  (8,5)=2 
! 10 wrong pixels (generated / expected)

TEST b8cdaf2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 890.1 bits (890.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-112] Checking task b91ae062.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8431.2 = 8443.9
DL output with Mo: L = 12.6 + 73034.0 = 73046.6
DL input+output M: L = 25.2 + 81465.2 = 81490.4

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = ^.grid * colorCount(^.grid)
0.765	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.640	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.542	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.496	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.476	IN  SPE ^.layer_0.shape.mask = Full
0.011	
0.008	IN  DEL ^.layer_0
0.006	IN  DEL ^.layer_0111
0.004	IN  DEL ^.layer_011
0.002	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
^.grid * colorCount(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 87.3 + 3932.6 = 4019.8
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 111.3 + 3932.6 = 4043.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
^.grid * colorCount(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 36.6 + 0.0 = 36.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=6  (0,1)=7# (1,1)=6  (1,2)=6 
   (0.0 bits)
data: 
6 6 7#7#0 0 
6 6 7#7#0 0 
0 0 6 6 6 6 
0 0 6 6 6 6 
0 0 0 0 0 0 
0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=6  (0,1)=7# (1,1)=6  (1,2)=6 
correct output grid

TRAIN b91ae062.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,2)=4  (1,1)=4  (2,1)=1 
   (0.0 bits)
data: 
1 1 0 0 4 4 
1 1 0 0 4 4 
0 0 4 4 0 0 
0 0 4 4 0 0 
0 0 1 1 0 0 
0 0 1 1 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (0,2)=4  (1,1)=4  (2,1)=1 
correct output grid

TRAIN b91ae062.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=2  (1,1)=7# (1,2)=3 
   (0.0 bits)
data: 
3 3 3 2 2 2 0 0 0 
3 3 3 2 2 2 0 0 0 
3 3 3 2 2 2 0 0 0 
0 0 0 7#7#7#3 3 3 
0 0 0 7#7#7#3 3 3 
0 0 0 7#7#7#3 3 3 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=2  (1,1)=7# (1,2)=3 
correct output grid

TRAIN b91ae062.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=8  (1,1)=6  (1,2)=6  (2,0)=9# (2,1)=8 
   (0.0 bits)
data: 
0 0 0 8 8 8 0 0 0 
0 0 0 8 8 8 0 0 0 
0 0 0 8 8 8 0 0 0 
0 0 0 6 6 6 6 6 6 
0 0 0 6 6 6 6 6 6 
0 0 0 6 6 6 6 6 6 
9#9#9#8 8 8 0 0 0 
9#9#9#8 8 8 0 0 0 
9#9#9#8 8 8 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=8  (1,1)=6  (1,2)=6  (2,0)=9# (2,1)=8 
correct output grid

TRAIN b91ae062.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=4  (0,2)=3  (1,0)=2  (1,1)=2  (2,2)=8 
   (0.0 bits)
data: 
4 4 4 4 0 0 0 0 3 3 3 3 
4 4 4 4 0 0 0 0 3 3 3 3 
4 4 4 4 0 0 0 0 3 3 3 3 
4 4 4 4 0 0 0 0 3 3 3 3 
2 2 2 2 2 2 2 2 0 0 0 0 
2 2 2 2 2 2 2 2 0 0 0 0 
2 2 2 2 2 2 2 2 0 0 0 0 
2 2 2 2 2 2 2 2 0 0 0 0 
0 0 0 0 0 0 0 0 8 8 8 8 
0 0 0 0 0 0 0 0 8 8 8 8 
0 0 0 0 0 0 0 0 8 8 8 8 
0 0 0 0 0 0 0 0 8 8 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=4  (0,2)=3  (1,0)=2  (1,1)=2  (2,2)=8 
correct output grid

TRAIN b91ae062.json/5: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (1,1)=8  (1,2)=7# (2,0)=9# (2,1)=9#
correct output grid

TEST b91ae062.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-111] Checking task b94a9452.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19839.2 = 19851.8
DL output with Mo: L = 12.6 + 2861.6 = 2874.2
DL input+output M: L = 25.2 + 22700.8 = 22726.0

# learning a model for train pairs
2.000	
1.209	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.584	OUT SPE ^.size = ^.layer_0.shape.size
0.511	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.337	OUT SPE ^.layer_0.shape = scaleTo(^.layer_0.shape, ^.layer_00.shape.size)
0.247	OUT SPE ^.color = ^.layer_00.shape.color
0.169	OUT SPE ^.layer_0.pos = '(0, 0) + ^.layer_00.pos - ^.layer_0.pos
0.164	IN  SPE ^.layer_00.shape.mask = Full
0.159	IN  SPE ^.layer_0.shape.mask = Full
0.155	IN  SPE ^.color = black
0.037	
0.037	IN  GEN ^.layer_0.shape.mask = ?
0.037	IN  GEN ^.layer_00.shape.mask = ?
0.037	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_00.shape.color and layers
  _0: scaleTo(^.layer_0.shape, ^.layer_00.shape.size) at '(0, 0) + ^.layer_00.pos - ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.4 + 2356.1 = 2422.4
DL output with Mo: L = 95.8 + 0.0 = 95.8
DL input+output M: L = 162.2 + 2356.1 = 2518.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_00.shape.color and layers
  _0: scaleTo(^.layer_0.shape, ^.layer_00.shape.size) at '(0, 0) + ^.layer_00.pos - ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 95.8 + 0.0 = 95.8
DL input+output M: L = 160.0 + 0.0 = 160.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,3)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,4)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (8,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (6,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (8,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (6,2)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (3,4)
  _0: a rectangle with size (6,6) and color green and mask Full at (1,2)
diff: 
delta:
correct output grid

TEST b94a9452.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-110] Checking task b9b7f026.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 106959.5 = 106972.1
DL output with Mo: L = 12.6 + 468.3 = 480.9
DL input+output M: L = 25.2 + 107427.8 = 107453.0

# learning a model for train pairs
2.000	
1.597	OUT SPE ^.size = '(1, 1)
1.359	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.134	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.934	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.400	OUT SPE ^.color = ^.layer_01.shape.color
0.240	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.239	IN  SPE ^.layer_011.shape.mask = Full
0.238	IN  SPE ^.layer_0111.shape.mask = Full
0.237	IN  SPE ^.layer_0.shape.mask = Full
0.180	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.179	IN  SPE ^.layer_00.shape.mask = Full
0.178	IN  SPE ^.color = black
0.064	
0.064	IN  DEL ^.layer_0111
0.063	IN  DEL ^.layer_011
0.063	IN  GEN ^.layer_00.shape.mask = ?
0.063	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 143.0 + 12231.5 = 12374.5
DL output with Mo: L = 30.1 + 0.0 = 30.1
DL input+output M: L = 173.1 + 12231.5 = 12404.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 0.0 = 90.3
DL output with Mo: L = 30.1 + 0.0 = 30.1
DL input+output M: L = 120.4 + 0.0 = 120.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _0: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _01: a rectangle with size (4,3) and color pink and mask Border at (1,1)
diff: 
delta: (1,8)=3  (1,9)=3  (1,10)=3  (2,8)=3  (2,9)=3  (2,10)=3  (3,5)=1  (3,6)=1  (3,8)=3  (3,9)=3  (3,10)=3  (4,5)=1  (4,6)=1  (5,9)=7# (5,10)=7# (5,11)=7# (6,9)=7# (6,10)=7# (6,11)=7# (7,9)=7# (7,10)=7# (7,11)=7# (11,0)=4  (11,1)=4  (11,2)=4  (12,0)=4  (12,1)=4  (12,2)=4 
   (0.0 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _0: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _01: a rectangle with size (4,3) and color pink and mask Border at (1,1)
diff: 
delta: (1,8)=3  (1,9)=3  (1,10)=3  (2,8)=3  (2,9)=3  (2,10)=3  (3,5)=1  (3,6)=1  (3,8)=3  (3,9)=3  (3,10)=3  (4,5)=1  (4,6)=1  (5,9)=7# (5,10)=7# (5,11)=7# (6,9)=7# (6,10)=7# (6,11)=7# (7,9)=7# (7,10)=7# (7,11)=7# (11,0)=4  (11,1)=4  (11,2)=4  (12,0)=4  (12,1)=4  (12,2)=4 
correct output grid

TRAIN b9b7f026.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (6,4) and color orange and mask Full at (0,13)
  _0: a rectangle with size (4,5) and color yellow and mask Full at (11,10)
  _01: a rectangle with size (7,4) and color grey and mask xxxx|xxxx|xxxx|x..x|x..x|xxxx|xxxx at (3,7)
diff: 
delta: (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (6,3)=2  (6,4)=2  (6,5)=2  (7,3)=2  (7,4)=2  (7,5)=2  (8,3)=2  (8,4)=2  (8,5)=2  (9,3)=2  (9,4)=2  (9,5)=2  (10,3)=2  (10,4)=2  (10,5)=2  (11,3)=2  (11,4)=2  (11,5)=2 
   (0.0 bits)
data: a background with size (1,1) and color grey and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (6,4) and color orange and mask Full at (0,13)
  _0: a rectangle with size (4,5) and color yellow and mask Full at (11,10)
  _01: a rectangle with size (7,4) and color grey and mask xxxx|xxxx|xxxx|x..x|x..x|xxxx|xxxx at (3,7)
diff: 
delta: (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (6,3)=2  (6,4)=2  (6,5)=2  (7,3)=2  (7,4)=2  (7,5)=2  (8,3)=2  (8,4)=2  (8,5)=2  (9,3)=2  (9,4)=2  (9,5)=2  (10,3)=2  (10,4)=2  (10,5)=2  (11,3)=2  (11,4)=2  (11,5)=2 
correct output grid

TRAIN b9b7f026.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _01: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
diff: 
delta: (9,11)=7# (9,12)=7# (9,13)=7# (9,14)=7# (9,15)=7# (10,11)=7# (10,12)=7# (10,13)=7# (10,14)=7# (10,15)=7# (11,11)=7# (11,12)=7# (11,13)=7# (11,14)=7# (11,15)=7# (12,11)=7# (12,12)=7# (12,13)=7# (12,14)=7# (12,15)=7#
   (0.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _01: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
diff: 
delta: (9,11)=7# (9,12)=7# (9,13)=7# (9,14)=7# (9,15)=7# (10,11)=7# (10,12)=7# (10,13)=7# (10,14)=7# (10,15)=7# (11,11)=7# (11,12)=7# (11,13)=7# (11,14)=7# (11,15)=7# (12,11)=7# (12,12)=7# (12,13)=7# (12,14)=7# (12,15)=7#
correct output grid

TRAIN b9b7f026.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _00: a rectangle with size (6,8) and color red and mask Full at (1,0)
  _0: a rectangle with size (5,4) and color green and mask Full at (0,10)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (6,9)
diff: 
delta: (8,1)=5# (8,2)=5# (8,3)=5# (9,1)=5# (9,2)=5# (9,3)=5# (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,1)=5# (10,2)=5# (10,3)=5# (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (11,4)=8  (11,5)=8  (11,6)=8  (11,7)=8  (11,10)=7# (11,11)=7# (11,12)=7# (11,13)=7# (12,4)=8  (12,5)=8  (12,6)=8  (12,7)=8  (12,10)=7# (12,13)=7# (13,10)=7# (13,11)=7# (13,12)=7# (13,13)=7#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  _00: a rectangle with size (6,8) and color red and mask Full at (1,0)
  _0: a rectangle with size (5,4) and color green and mask Full at (0,10)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (9,4)
diff: 
delta: (6,9)=4  (6,10)=4  (6,11)=4  (6,12)=4  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (8,1)=5# (8,2)=5# (8,3)=5# (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (9,1)=5# (9,2)=5# (9,3)=5# (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (10,1)=5# (10,2)=5# (10,3)=5# (11,10)=7# (11,11)=7# (11,12)=7# (11,13)=7# (12,10)=7# (12,13)=7# (13,10)=7# (13,11)=7# (13,12)=7# (13,13)=7#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,15) and color black and layers
  _00: a rectangle with size (6,8) and color red and mask Full at (1,0)
  _0: a rectangle with size (4,4) and color yellow and mask Full at (6,9)
  _01: a rectangle with size (5,4) and color green and mask Full at (0,10)
diff: 
delta: (8,1)=5# (8,2)=5# (8,3)=5# (9,1)=5# (9,2)=5# (9,3)=5# (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,1)=5# (10,2)=5# (10,3)=5# (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (11,4)=8  (11,5)=8  (11,6)=8  (11,7)=8  (11,10)=7# (11,11)=7# (11,12)=7# (11,13)=7# (12,4)=8  (12,5)=8  (12,6)=8  (12,7)=8  (12,10)=7# (12,13)=7# (13,10)=7# (13,11)=7# (13,12)=7# (13,13)=7#
! 1 wrong pixels (generated / expected)

TEST b9b7f026.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-109] Checking task ba26e723.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22722.6 = 22735.2
DL output with Mo: L = 12.6 + 38503.7 = 38516.3
DL input+output M: L = 25.2 + 61226.3 = 61251.6

# learning a model for train pairs
2.000	
1.202	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.059	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.037	OUT SPE ^.size = ^.size
1.024	OUT SPE ^.layer_0.pos = '(1, 1)
0.967	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.933	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.887	OUT SPE ^.layer_00.shape = periodicFactor(black, ^.layer_0.shape)
0.849	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	OUT SPE ^.layer_001.shape = applySym(flipHeight, periodicFactor(black, ^.layer_0.shape))
0.759	OUT ADD ^.layer_0010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.738	OUT SPE ^.layer_01.shape.size = '(2, 1)
0.700	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.679	OUT SPE ^.layer_011.shape.size = '(2, 1)
0.661	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.628	OUT ADD ^.layer_00100 = a point with color ? at (?,?)
0.601	OUT SPE ^.layer_00100.shape.color = yellow
0.589	IN  SPE ^.layer_0.shape.color = yellow
0.578	OUT SPE ^.layer_0.shape.size = '(1, 2)
0.563	OUT SPE ^.layer_0110.shape.mask = Full
0.552	OUT SPE ^.layer_0110.shape.size = '(2, 1)
0.536	OUT SPE ^.layer_01.pos.i = '0
0.529	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.522	OUT SPE ^.layer_011.pos.j = right(^.layer_0)
0.515	OUT SPE ^.layer_01.shape.color = pink
0.507	OUT SPE ^.layer_0110.shape.color = pink
0.502	IN  SPE ^.color = black
0.497	OUT SPE ^.layer_0110.pos.i = 1
0.492	OUT SPE ^.layer_00.pos.i = '0
0.487	OUT SPE ^.layer_00100.pos.i = '0
0.482	OUT SPE ^.layer_0010.pos.i = '0
0.477	OUT SPE ^.layer_001.pos.i = '0
0.473	OUT SPE ^.layer_0.shape.mask = Full
0.469	OUT SPE ^.layer_01.shape.mask = Full
0.464	OUT SPE ^.layer_011.shape.mask = Full
0.461	OUT SPE ^.color = black
0.279	
0.278	IN  GEN ^.layer_0.shape.color = ?
0.278	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: periodicFactor(black, ^.layer_0.shape) at ('0,?)
  _00100: a point with color yellow at ('0,?)
  _0010: a rectangle with size (?,?) and color ? and mask ? at ('0,?)
  _001: applySym(flipHeight, periodicFactor(black, ^.layer_0.shape)) at ('0,?)
  _0: a rectangle with size '(1, 2) and color ^.layer_0.shape.color and mask Full at '(1, 1)
  _01: a rectangle with size '(2, 1) and color pink and mask Full at ('0,?)
  _0110: a rectangle with size '(2, 1) and color pink and mask Full at (1,?)
  _011: a rectangle with size '(2, 1) and color ? and mask Full at (?,right(^.layer_0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 4153.8 = 4196.1
DL output with Mo: L = 308.5 + 10349.5 = 10658.0
DL input+output M: L = 350.7 + 14503.3 = 14854.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: periodicFactor(black, ^.layer_0.shape) at ('0,?)
  _00100: a point with color yellow at ('0,?)
  _0010: a rectangle with size (?,?) and color ? and mask ? at ('0,?)
  _001: applySym(flipHeight, periodicFactor(black, ^.layer_0.shape)) at ('0,?)
  _0: a rectangle with size '(1, 2) and color ^.layer_0.shape.color and mask Full at '(1, 1)
  _01: a rectangle with size '(2, 1) and color pink and mask Full at ('0,?)
  _0110: a rectangle with size '(2, 1) and color pink and mask Full at (1,?)
  _011: a rectangle with size '(2, 1) and color ? and mask Full at (?,right(^.layer_0))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 308.5 + 10349.5 = 10658.0
DL input+output M: L = 347.3 + 10349.5 = 10696.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color yellow and mask x.x.x.x.x.|xxxxxxxxxx|.x.x.x.x.x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,10) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _00100: a point with color yellow at (0,2)
  _0010: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _001: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,7)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,6)
  _0110: a rectangle with size (2,1) and color pink and mask Full at (1,3)
  _011: a rectangle with size (2,1) and color pink and mask Full at (1,9)
diff: 
delta: (2,1)=4 
   (98.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color yellow and mask x.x.x.x.x.|xxxxxxxxxx|.x.x.x.x.x at (0,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN ba26e723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask .x.x.x.x.x.|xxxxxxxxxxx|x.x.x.x.x.x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,4)
  _00100: a point with color yellow at (0,1)
  _0010: a rectangle with size (2,1) and color pink and mask Full at (0,3)
  _001: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,7)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,9)
  _0110: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (1,10)
diff: 
delta: (1,6)=6  (2,2)=4  (2,6)=6 
   (172.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask .x.x.x.x.x.|xxxxxxxxxxx|x.x.x.x.x.x at (0,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN ba26e723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask x.x.x.x.x.x|xxxxxxxxxxx|.x.x.x.x.x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,11) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _00100: a point with color yellow at (0,2)
  _0010: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _001: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,7)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,6)
  _0110: a rectangle with size (2,1) and color pink and mask Full at (1,3)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,10)
diff: 
delta: (1,9)=6  (2,1)=4  (2,9)=6 
   (172.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask x.x.x.x.x.x|xxxxxxxxxxx|.x.x.x.x.x. at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN ba26e723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask x.x.x.x.x.x.x|xxxxxxxxxxxxx|.x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,13) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,10)
  _00100: a point with color yellow at (0,2)
  _0010: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _001: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,7)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _0110: a rectangle with size (2,1) and color pink and mask Full at (1,3)
  _011: a rectangle with size (2,1) and color pink and mask Full at (0,12)
diff: 
delta: (0,6)=6  (1,6)=6  (1,9)=6  (2,1)=4  (2,9)=6 
   (258.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask x.x.x.x.x.x.x|xxxxxxxxxxxxx|.x.x.x.x.x.x. at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN ba26e723.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,14) and color yellow and mask .x.x.x.x.x.x.x|xxxxxxxxxxxxxx|x.x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,14) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,10)
  _00100: a point with color yellow at (0,1)
  _0010: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,4)
  _001: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,7)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,3)
  _0110: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,13)
diff: 
delta: (0,9)=6  (1,6)=6  (1,9)=6  (1,12)=6  (2,2)=4  (2,6)=6  (2,12)=6 
   (332.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,14) and color yellow and mask .x.x.x.x.x.x.x|xxxxxxxxxxxxxx|x.x.x.x.x.x.x. at (0,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN ba26e723.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color yellow and mask .x.x.x.x.x.x.x.x.|xxxxxxxxxxxxxxxxx|x.x.x.x.x.x.x.x.x at (0,0)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TEST ba26e723.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.7 sec (15.7 sec/task)
bits-train-error = 10349.5 bits (10349.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-108] Checking task ba97ae07.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41061.0 = 41073.6
DL output with Mo: L = 12.6 + 41061.0 = 41073.6
DL input+output M: L = 25.2 + 82122.0 = 82147.2

# learning a model for train pairs
2.000	
1.414	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.902	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.502	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.142	OUT ADD ^.layer_00 = ^.layer_01
0.110	OUT SPE ^.layer_0 = ^.layer_0
0.091	OUT SPE ^.size = ^.size
0.088	IN  SPE ^.layer_0.shape.mask = Full
0.085	IN  SPE ^.layer_01.shape.mask = Full
0.082	IN  SPE ^.color = black
0.080	OUT SPE ^.color = black
0.002	
0.002	IN  GEN ^.layer_01.shape.mask = ?
0.002	IN  GEN ^.layer_0.shape.mask = ?
0.002	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.4 + 3178.2 = 3244.6
DL output with Mo: L = 30.5 + 0.0 = 30.5
DL input+output M: L = 96.9 + 3178.2 = 3275.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 30.5 + 0.0 = 30.5
DL input+output M: L = 94.7 + 0.0 = 94.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,13) and color green and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,13) and color green and mask Full at (3,0)
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,13) and color green and mask Full at (3,0)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
  _01: a rectangle with size (7,2) and color pink and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,9) and color black and layers
  _00: a rectangle with size (7,2) and color pink and mask Full at (0,2)
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
  _01: a rectangle with size (7,2) and color pink and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,7) and color black and layers
  _00: a rectangle with size (8,1) and color blue and mask Full at (0,2)
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,6) and color red and mask Full at (4,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,6) and color black and layers
  _00: a rectangle with size (1,6) and color red and mask Full at (4,0)
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,6) and color red and mask Full at (4,0)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,6) and color black and layers
  _0: a rectangle with size (11,2) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (2,6) and color grey and mask Full at (2,0)
diff: 
delta:
correct output grid

TEST ba97ae07.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-107] Checking task bb43febb.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31155.0 = 31167.6
DL output with Mo: L = 12.6 + 31155.0 = 31167.6
DL input+output M: L = 25.2 + 62309.9 = 62335.2

# learning a model for train pairs
2.000	
1.366	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.960	OUT ADD ^.layer_0 = ^.layer_0
0.655	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.392	OUT ADD ^.layer_01 = ^.layer_01
0.161	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.119	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.106	OUT SPE ^.size = ^.size
0.098	OUT SPE ^.layer_00.shape.size = ^.layer_0.shape.size - (2, 2)
0.091	OUT SPE ^.layer_010.pos = ^.layer_01.pos + (1, 1)
0.085	OUT SPE ^.layer_00.pos = ^.layer_0.pos + (1, 1)
0.079	OUT SPE ^.layer_010.shape.size = ^.layer_01.shape.size - (2, 2)
0.076	IN  SPE ^.layer_0.shape.color = grey
0.072	OUT SPE ^.layer_00.shape.color = red
0.069	OUT SPE ^.layer_010.shape.color = red
0.065	IN  SPE ^.layer_01.shape.color = grey
0.063	OUT SPE ^.layer_00.shape.mask = Full
0.061	OUT SPE ^.layer_010.shape.mask = Full
0.059	IN  SPE ^.layer_0.shape.mask = Full
0.057	IN  SPE ^.layer_01.shape.mask = Full
0.055	IN  SPE ^.color = black
0.054	OUT SPE ^.color = black
0.007	
0.007	IN  GEN ^.layer_01.shape.color = ?
0.007	IN  GEN ^.layer_0.shape.color = ?
0.007	IN  GEN ^.layer_01.shape.mask = ?
0.007	IN  GEN ^.layer_0.shape.mask = ?
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - (2, 2) and color red and mask Full at ^.layer_0.pos + (1, 1)
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - (2, 2) and color red and mask Full at ^.layer_01.pos + (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 73.0 + 1456.7 = 1529.7
DL output with Mo: L = 148.4 + 0.0 = 148.4
DL input+output M: L = 221.4 + 1456.7 = 1678.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - (2, 2) and color red and mask Full at ^.layer_0.pos + (1, 1)
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - (2, 2) and color red and mask Full at ^.layer_01.pos + (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 148.4 + 0.0 = 148.4
DL input+output M: L = 212.6 + 0.0 = 212.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (3,1)
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _010: a rectangle with size (2,1) and color red and mask Full at (4,7)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
correct output grid

TRAIN bb43febb.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,4) and color red and mask Full at (2,2)
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _010: a rectangle with size (1,3) and color red and mask Full at (8,5)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
correct output grid

TRAIN bb43febb.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,7) and color grey and mask Full at (4,3)
  _01: a rectangle with size (3,6) and color grey and mask Full at (0,0)
diff: 
delta:
correct output grid

TEST bb43febb.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 40.5 sec (40.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-106] Checking task bbc9ae5d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3952.7 = 3965.3
DL output with Mo: L = 12.6 + 20157.4 = 20170.0
DL input+output M: L = 25.2 + 24110.1 = 24135.4

# learning a model for train pairs
2.000	
1.170	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.638	IN  SPE ^.layer_0.shape.mask = Full
0.607	IN  SPE ^.color = black
0.585	OUT SPE ^.size.j = ^.size.j
0.566	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.550	OUT SPE ^.size.i = ^.size.j / '2
0.534	OUT SPE ^.layer_0.shape.size.i = ^.size.j / '2
0.520	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.514	OUT SPE ^.color = black
0.087	
0.087	IN  GEN ^.layer_0.shape.mask = ?
0.087	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.j / '2,^.size.j) and color black and layers
  _0: a rectangle with size (^.size.j / '2,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 40.0 + 1692.8 = 1732.7
DL output with Mo: L = 91.3 + 1458.4 = 1549.7
DL input+output M: L = 131.3 + 3151.2 = 3282.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.j / '2,^.size.j) and color black and layers
  _0: a rectangle with size (^.size.j / '2,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 91.3 + 1458.4 = 1549.7
DL input+output M: L = 130.2 + 1458.4 = 1588.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask xx..|xxx.|xxxx at (0,0)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,6) and color blue and layers
  _0: a rectangle with size (1,4) and color black and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (1,8) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x...|xx..|xxx.|xxxx at (0,0)
diff: 
delta:
   (29.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,8) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (1,10) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,7) and color grey and mask xxx....|xxxx...|xxxxx..|xxxxxx.|xxxxxxx at (0,0)
diff: 
delta:
   (46.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,10) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,10) and color grey and layers
  _0: a rectangle with size (1,7) and color black and mask Full at (0,3)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xxxx..|xxxxx.|xxxxxx at (0,0)
diff: 
delta:
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,6) and color cyan and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (0,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x..|xx.|xxx at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,6) and color orange and layers
  _0: a rectangle with size (1,5) and color black and mask Full at (0,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,12) and color blue and layers
  _0: a rectangle with size (1,9) and color black and mask Full at (0,3)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TEST bbc9ae5d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 1458.4 bits (1458.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-105] Checking task bc1d5164.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14826.7 = 14839.3
DL output with Mo: L = 12.6 + 6974.3 = 6986.9
DL input+output M: L = 25.2 + 21801.0 = 21826.2

# learning a model for train pairs
2.000	
1.399	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.193	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.955	OUT SPE ^.size = '(3, 3)
0.886	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT SPE ^.layer_0.pos = '(0, 0)
0.783	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.737	OUT SPE ^.layer_0.shape.size.j = 3
0.697	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.j + 1
0.688	IN  SPE ^.color = black
0.174	
0.172	IN  DEL ^.layer_011
0.172	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + 1,3) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 105.0 + 7668.2 = 7773.1
DL output with Mo: L = 68.7 + 1080.2 = 1148.9
DL input+output M: L = 173.7 + 8748.4 = 8922.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + 1,3) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.0 + 31.7 = 111.7
DL output with Mo: L = 68.7 + 1080.2 = 1148.9
DL input+output M: L = 148.7 + 1111.9 = 1260.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _00: a point with color cyan at (0,1)
  _0: a rectangle with size (4,2) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (0,5)
diff: 
delta: (1,6)=8  (2,0)=0  (2,1)=0  (2,5)=0  (3,6)=8  (4,0)=0 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,0)
diff: 
delta:
   (15.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a point with color cyan at (0,1)
  _0: a rectangle with size (4,2) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (0,5)
diff: 
delta: (1,6)=8  (2,0)=0  (2,1)=0  (2,5)=0  (3,6)=8  (4,0)=0 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,0)
diff: 
delta: (0,1)=2  (3,5)=2  (4,6)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.xx|x.x at (0,0)
diff: 
delta:
   (21.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,0)
diff: 
delta: (0,1)=2  (3,5)=2  (4,6)=2 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _00: a point with color yellow at (4,0)
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
diff: 
delta: (4,6)=4 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (0,0)
diff: 
delta:
   (22.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a point with color yellow at (4,0)
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
diff: 
delta: (4,6)=4 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _00: a point with color yellow at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
diff: 
delta: (4,0)=4 
   (3.2 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color black and mask .x.|xxx at (0,0)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a point with color yellow at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,6)
diff: 
delta: (4,0)=4 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a point with color yellow at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
diff: 
delta: (4,0)=4 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _00: a point with color green at (4,6)
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a point with color green at (4,6)
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a point with color blue at (1,0)
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,5)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,1)
diff: 
delta: (4,6)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a point with color blue at (1,0)
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,1)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,5)
diff: 
delta: (4,6)=1 
! 8 wrong pixels (generated / expected)

TEST bc1d5164.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.0 sec (4.0 sec/task)
bits-train-error = 1080.2 bits (1080.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-104] Checking task bd4472b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7050.5 = 7063.2
DL output with Mo: L = 12.6 + 20459.4 = 20472.0
DL input+output M: L = 25.2 + 27509.9 = 27535.1

# learning a model for train pairs
2.000	
1.666	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.511	OUT ADD ^.layer_0 = ^.layer_0
1.397	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.282	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.183	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.096	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.006	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.988	OUT ADD ^.layer_010 = ^.layer_01
0.888	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.811	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, ^.layer_0.shape.size)
0.787	OUT SPE ^.layer_011.shape = scaleTo(^.layer_011.shape, ^.layer_0.shape.size)
0.760	OUT SPE ^.layer_01111.shape = coloring(^.layer_0.shape, ^.layer_011.shape.color)
0.734	OUT SPE ^.layer_0111.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.710	IN  SPE ^.layer_0.shape.color = grey
0.687	OUT SPE ^.size = ^.size
0.673	IN  SPE ^.layer_0.shape.mask = Full
0.660	OUT SPE ^.layer_01.pos = '(2, 0)
0.650	IN  SPE ^.color = black
0.643	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.j + 2
0.637	OUT SPE ^.layer_011.pos.j = '0
0.631	OUT SPE ^.layer_0111.pos.i = right(^.layer_0) + 3
0.625	OUT SPE ^.layer_0111.pos.j = '0
0.620	OUT SPE ^.layer_01111.pos.j = '0
0.615	OUT SPE ^.layer_011111.shape.size.i = 1
0.610	OUT SPE ^.layer_011111.shape.mask = Full
0.180	
0.179	IN  GEN ^.layer_0.shape.color = ?
0.179	IN  GEN ^.layer_0.shape.mask = ?
0.179	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: scaleTo(^.layer_01.shape, ^.layer_0.shape.size) at '(2, 0)
  _011: scaleTo(^.layer_011.shape, ^.layer_0.shape.size) at (^.layer_011.pos.j + 2,'0)
  _0111: coloring(^.layer_0.shape, ^.layer_01.shape.color) at (right(^.layer_0) + 3,'0)
  _01111: coloring(^.layer_0.shape, ^.layer_011.shape.color) at (?,'0)
  _011111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 75.2 + 3061.7 = 3136.9
DL output with Mo: L = 248.8 + 3153.8 = 3402.6
DL input+output M: L = 324.0 + 6215.5 = 6539.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: scaleTo(^.layer_01.shape, ^.layer_0.shape.size) at '(2, 0)
  _011: scaleTo(^.layer_011.shape, ^.layer_0.shape.size) at (^.layer_011.pos.j + 2,'0)
  _0111: coloring(^.layer_0.shape, ^.layer_01.shape.color) at (right(^.layer_0) + 3,'0)
  _01111: coloring(^.layer_0.shape, ^.layer_011.shape.color) at (?,'0)
  _011111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 20.0 = 90.7
DL output with Mo: L = 248.8 + 3153.8 = 3402.6
DL input+output M: L = 319.5 + 3173.8 = 3493.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color yellow at (0,2)
diff: 
delta: (0,1)=1 
   (2.0 bits)
data: a background with size (8,3) and color blue and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _010: a point with color red at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,0)
  _0111: a rectangle with size (1,3) and color red and mask Full at (5,0)
  _01111: a rectangle with size (1,3) and color yellow and mask Full at (7,0)
  _011111: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (32.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta: (0,2)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color yellow at (0,2)
diff: 
delta: (0,1)=1 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color blue at (0,1)
  _011: a point with color red at (0,0)
diff: 
delta: (0,2)=4 
! 19 wrong pixels (generated / expected)

TRAIN bd4472b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=1  (0,3)=4 
   (0.0 bits)
data: a background with size (10,4) and color blue and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _010: a point with color green at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,0)
  _011: a rectangle with size (1,4) and color red and mask Full at (3,0)
  _0111: a rectangle with size (1,4) and color green and mask Full at (6,0)
  _01111: a rectangle with size (1,4) and color red and mask Full at (7,0)
  _011111: a rectangle with size (1,4) and color yellow and mask Full at (5,0)
diff: 
delta: (0,1)=2  (0,3)=4  (9,0)=4  (9,1)=4  (9,2)=4  (9,3)=4 
   (258.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=1  (0,3)=4 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color blue at (0,2)
diff: 
delta: (0,1)=2  (0,3)=4 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color green at (0,0)
diff: 
delta: (0,2)=1  (0,3)=4 
! 34 wrong pixels (generated / expected)

TRAIN bd4472b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _010: a point with color cyan at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _01111: a rectangle with size (1,2) and color green and mask Full at (5,0)
  _011111: a rectangle with size (1,1) and color green and mask Full at (0,1)
diff: 
delta:
   (24.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,1)
  _011: a point with color cyan at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color grey at (1,0)
diff: 
delta: (1,1)=5#
! 9 wrong pixels (generated / expected)

TRAIN bd4472b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (1,0)
  _01: a point with color blue at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=8 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (1,0)
  _01: a point with color blue at (0,0)
  _011: a point with color green at (0,2)
diff: 
delta: (0,1)=2  (0,3)=4  (0,4)=8 
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color blue at (0,0)
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=8 
! 53 wrong pixels (generated / expected)

TEST bd4472b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 43.8 sec (43.8 sec/task)
bits-train-error = 3153.8 bits (3153.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-103] Checking task bda2d7a6.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24115.1 = 24127.8
DL output with Mo: L = 12.6 + 24115.1 = 24127.8
DL input+output M: L = 25.2 + 48230.3 = 48255.5

# learning a model for train pairs
2.000	
1.382	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.765	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.498	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.232	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.189	OUT SPE ^.layer_01 = coloring(^.layer_01, ^.color)
0.150	OUT SPE ^.layer_0 = coloring(^.layer_0, ^.layer_01.shape.color)
0.128	OUT SPE ^.size = ^.size
0.120	OUT SPE ^.color = ^.layer_0.shape.color
0.116	IN  SPE ^.layer_0.shape.mask = Border
0.008	
0.006	IN  GEN ^.layer_0.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: coloring(^.layer_0, ^.layer_01.shape.color)
  _01: coloring(^.layer_01, ^.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 2679.0 = 2746.5
DL output with Mo: L = 59.5 + 0.0 = 59.5
DL input+output M: L = 127.1 + 2679.0 = 2806.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: coloring(^.layer_0, ^.layer_01.shape.color)
  _01: coloring(^.layer_01, ^.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 59.5 + 0.0 = 59.5
DL input+output M: L = 123.8 + 20.0 = 143.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color green and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color orange and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color black and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color orange and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (2,2)
  _01: a rectangle with size (6,6) and color black and mask Border at (1,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (8,8) and color grey and layers
  _0: a rectangle with size (4,4) and color black and mask Border at (2,2)
  _01: a rectangle with size (6,6) and color cyan and mask Border at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,2)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (2,2)
  _01: a rectangle with size (6,6) and color black and mask Border at (1,1)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Border at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta:
correct output grid

TEST bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color pink and mask Border at (2,2)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (4,4) and color pink and mask Border at (2,2)
  _01: a rectangle with size (6,6) and color orange and mask Border at (1,1)
diff: 
delta:
correct output grid

TEST bda2d7a6.json/2: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.75

=====================================
[-102] Checking task bdad9b1f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3338.6 = 3351.2
DL output with Mo: L = 12.6 + 8388.7 = 8401.3
DL input+output M: L = 25.2 + 11727.3 = 11752.5

# learning a model for train pairs
2.000	
1.647	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.289	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.026	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.752	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.651	OUT SPE ^.layer_01.shape = tiling(^.layer_01.shape, 3, 1)
0.602	OUT SPE ^.layer_0.shape = tiling(^.layer_0.shape, 1, 3)
0.561	OUT SPE ^.size = ^.size
0.528	IN  SPE ^.layer_0.shape.color = red
0.496	IN  SPE ^.layer_01.shape.color = cyan
0.472	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.449	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos)
0.428	OUT SPE ^.layer_00.pos = corner(^.layer_0.pos, ^.layer_01.pos)
0.409	IN  SPE ^.layer_0.shape.mask = Full
0.389	IN  SPE ^.layer_01.shape.mask = Full
0.375	IN  SPE ^.color = black
0.362	OUT SPE ^.layer_00.shape.color = yellow
0.356	OUT SPE ^.color = black
0.034	
0.033	IN  GEN ^.layer_01.shape.color = ?
0.032	IN  GEN ^.layer_0.shape.color = ?
0.032	IN  GEN ^.layer_01.shape.mask = ?
0.032	IN  GEN ^.layer_0.shape.mask = ?
0.032	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color yellow at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: tiling(^.layer_0.shape, 1, 3) at projI(^.layer_0.pos)
  _01: tiling(^.layer_01.shape, 3, 1) at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 73.0 + 1078.0 = 1151.0
DL output with Mo: L = 104.9 + 0.0 = 104.9
DL input+output M: L = 177.9 + 1078.0 = 1255.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color yellow at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: tiling(^.layer_0.shape, 1, 3) at projI(^.layer_0.pos)
  _01: tiling(^.layer_01.shape, 3, 1) at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 104.9 + 0.0 = 104.9
DL input+output M: L = 169.1 + 0.0 = 169.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (2,4)
  _0: a rectangle with size (1,6) and color red and mask Full at (2,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,4)
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (3,1)
  _0: a rectangle with size (1,6) and color red and mask Full at (3,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,3)
diff: 
delta:
correct output grid

TEST bdad9b1f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-101] Checking task be94b721.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24234.0 = 24246.7
DL output with Mo: L = 12.6 + 4411.8 = 4424.4
DL input+output M: L = 25.2 + 28645.8 = 28671.0

# learning a model for train pairs
2.000	
1.505	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.135	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.848	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.611	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.455	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	OUT SPE ^.size = ^.layer_0.shape.size
0.267	OUT SPE ^.layer_0.pos = '(0, 0)
0.245	OUT SPE ^.color = black
0.241	IN  SPE ^.color = black
0.011	
0.010	IN  DEL ^.layer_011
0.009	IN  DEL ^.layer_01
0.009	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 5560.6 = 5650.0
DL output with Mo: L = 33.1 + 0.0 = 33.1
DL input+output M: L = 122.5 + 5560.6 = 5683.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 33.1 + 0.0 = 33.1
DL input+output M: L = 72.0 + 0.0 = 72.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (1,1)
diff: 
delta: (1,5)=3  (1,6)=3  (2,6)=3  (2,9)=1  (3,8)=1  (3,9)=1  (4,8)=1  (4,9)=1  (4,10)=1 
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (1,1)
diff: 
delta: (1,5)=3  (1,6)=3  (2,6)=3  (2,9)=1  (3,8)=1  (3,9)=1  (4,8)=1  (4,9)=1  (4,10)=1 
correct output grid

TRAIN be94b721.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (1,4)
diff: 
delta: (0,7)=6  (0,8)=6  (1,1)=3  (1,8)=6  (2,0)=3  (2,1)=3  (2,2)=3  (3,1)=3 
   (0.0 bits)
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (1,4)
diff: 
delta: (0,7)=6  (0,8)=6  (1,1)=3  (1,8)=6  (2,0)=3  (2,1)=3  (2,2)=3  (3,1)=3 
correct output grid

TRAIN be94b721.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (1,1)
diff: 
delta: (1,8)=7# (1,9)=7# (2,6)=2  (2,9)=7# (3,5)=2  (3,6)=2  (3,9)=7# (4,6)=2  (4,9)=7#
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (1,1)
diff: 
delta: (1,8)=7# (1,9)=7# (2,6)=2  (2,9)=7# (3,5)=2  (3,6)=2  (3,9)=7# (4,6)=2  (4,9)=7#
correct output grid

TRAIN be94b721.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (1,6)
diff: 
delta: (1,3)=7# (2,3)=7# (2,4)=7# (3,4)=7# (4,0)=8  (4,1)=8  (4,2)=8  (5,1)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (1,6)
diff: 
delta: (1,3)=7# (2,3)=7# (2,4)=7# (3,4)=7# (4,0)=8  (4,1)=8  (4,2)=8  (5,1)=8 
correct output grid

TRAIN be94b721.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask xxx|xxx|x.x|x.x at (2,3)
diff: 
delta: (1,0)=4  (2,0)=4  (2,1)=4  (3,1)=4  (6,7)=6  (6,8)=6  (7,1)=5# (7,2)=5# (7,3)=5# (7,6)=6  (7,7)=6  (7,8)=6  (8,1)=5# (8,2)=5# (8,6)=6  (8,7)=6 
correct output grid

TEST be94b721.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-100] Checking task beb8660c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16602.9 = 16615.6
DL output with Mo: L = 12.6 + 16602.9 = 16615.6
DL input+output M: L = 25.2 + 33205.9 = 33231.1

# learning a model for train pairs
2.000	
1.752	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.449	OUT ADD ^.layer_0 = ^.layer_0
1.263	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.041	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.915	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.727	OUT SPE ^.size = ^.size
0.717	IN  SPE ^.layer_0.shape.color = cyan
0.710	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i - 1
0.702	OUT SPE ^.layer_01.pos.j = 1
0.694	OUT SPE ^.layer_011.pos.j = 2
0.686	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.i - 2
0.680	IN  SPE ^.layer_0.shape.mask = Full
0.675	IN  SPE ^.layer_01.shape.mask = Full
0.669	IN  SPE ^.layer_011.shape.mask = Full
0.664	IN  SPE ^.color = black
0.660	OUT SPE ^.color = black
0.259	
0.258	IN  GEN ^.layer_0.shape.color = ?
0.258	IN  GEN ^.layer_011.shape.mask = ?
0.258	IN  GEN ^.layer_01.shape.mask = ?
0.258	IN  GEN ^.layer_0.shape.mask = ?
0.258	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at (^.layer_0.pos.i - 1,1)
  _011: ^.layer_011.shape at (^.layer_0.pos.i - 2,2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 95.7 + 6666.6 = 6762.3
DL output with Mo: L = 90.1 + 4109.7 = 4199.8
DL input+output M: L = 185.8 + 10776.3 = 10962.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at (^.layer_0.pos.i - 1,1)
  _011: ^.layer_011.shape at (^.layer_0.pos.i - 2,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 90.1 + 4109.7 = 4199.8
DL input+output M: L = 179.3 + 4109.7 = 4289.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _011: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
   (0.0 bits)
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (8,1)
  _011: a rectangle with size (1,5) and color pink and mask Full at (7,2)
diff: 
delta: (3,6)=3  (4,5)=2  (4,6)=2  (5,4)=1  (5,5)=1  (5,6)=1  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4 
   (373.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _011: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,5) and color pink and mask Full at (6,0)
  _011: a rectangle with size (1,6) and color grey and mask Full at (4,1)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _011: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 42 wrong pixels (generated / expected)

TRAIN beb8660c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,1)
diff: 
delta: (0,3)=1 
   (0.0 bits)
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (5,1)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,2)
diff: 
delta: (3,3)=1 
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,1)
diff: 
delta: (0,3)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,1)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,0)
diff: 
delta: (0,3)=1 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,1)
diff: 
delta: (0,3)=1 
! 18 wrong pixels (generated / expected)

TRAIN beb8660c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN beb8660c.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _011: a rectangle with size (1,6) and color green and mask Full at (7,2)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (1,6) and color green and mask Full at (7,2)
  _011: a rectangle with size (1,7) and color red and mask Full at (6,0)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,8) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _011: a rectangle with size (1,6) and color green and mask Full at (7,2)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 48 wrong pixels (generated / expected)

TEST beb8660c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 4109.7 bits (4109.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-99] Checking task c0f76784.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 38719.9 = 38732.5
DL output with Mo: L = 12.6 + 54210.7 = 54223.3
DL input+output M: L = 25.2 + 92930.6 = 92955.8

# learning a model for train pairs
2.000	
1.562	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.228	OUT ADD ^.layer_0 = ^.layer_0
0.904	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.653	OUT ADD ^.layer_01 = ^.layer_01
0.483	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.361	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.311	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.239	OUT ADD ^.layer_0110 = ^.layer_011
0.213	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.201	OUT SPE ^.size = ^.size
0.194	OUT SPE ^.layer_011.shape.size = '(3, 3)
0.188	OUT SPE ^.layer_0111.pos = ^.layer_01.pos + (1, 1)
0.182	OUT SPE ^.layer_011.pos = ^.layer_0.pos + (1, 1)
0.176	OUT SPE ^.layer_0111.shape.size = '(2, 2)
0.172	IN  SPE ^.layer_0.shape.color = grey
0.167	IN  SPE ^.layer_0.shape.mask = Border
0.163	IN  SPE ^.layer_01.shape.color = grey
0.159	IN  SPE ^.layer_011.shape.color = grey
0.156	OUT SPE ^.layer_011.shape.color = cyan
0.153	OUT SPE ^.layer_0111.shape.color = orange
0.151	IN  SPE ^.color = black
0.149	OUT SPE ^.layer_011.shape.mask = Full
0.147	OUT SPE ^.layer_0111.shape.mask = Full
0.145	OUT SPE ^.layer_01111.pos.j = average(^.layer_0.pos.i, ^.layer_01.pos.i)
0.143	OUT SPE ^.layer_01111.shape.size.i = ^.layer_0.shape.size.i - ^.layer_01.shape.size.i
0.141	OUT SPE ^.layer_01111.shape.size.j = ^.layer_0.shape.size.j - ^.layer_01.shape.size.i
0.139	OUT SPE ^.layer_01111.shape.mask = Full
0.137	OUT SPE ^.color = black
0.014	
0.014	IN  GEN ^.layer_011.shape.color = ?
0.014	IN  GEN ^.layer_01.shape.color = ?
0.014	IN  GEN ^.layer_0.shape.mask = ?
0.014	IN  GEN ^.layer_0.shape.color = ?
0.014	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011
  _011: a rectangle with size '(3, 3) and color cyan and mask Full at ^.layer_0.pos + (1, 1)
  _0111: a rectangle with size '(2, 2) and color orange and mask Full at ^.layer_01.pos + (1, 1)
  _01111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.shape.size.i,^.layer_0.shape.size.j - ^.layer_01.shape.size.i) and color ? and mask Full at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 102.7 + 4783.2 = 4885.9
DL output with Mo: L = 265.5 + 346.5 = 612.0
DL input+output M: L = 368.2 + 5129.7 = 5497.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011
  _011: a rectangle with size '(3, 3) and color cyan and mask Full at ^.layer_0.pos + (1, 1)
  _0111: a rectangle with size '(2, 2) and color orange and mask Full at ^.layer_01.pos + (1, 1)
  _01111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.shape.size.i,^.layer_0.shape.size.j - ^.layer_01.shape.size.i) and color ? and mask Full at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 265.5 + 346.5 = 612.0
DL input+output M: L = 354.7 + 346.5 = 701.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _011: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _0110: a rectangle with size (3,3) and color grey and mask Border at (2,2)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (1,8)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (7,7)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (3,3)
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _011: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
  _011: a rectangle with size (4,4) and color grey and mask Border at (6,6)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN c0f76784.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _011: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _0110: a rectangle with size (3,3) and color grey and mask Border at (7,1)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (5,7)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (1,2)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (8,2)
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _011: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN c0f76784.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _011: a rectangle with size (1,4) and color grey and mask Full at (10,4)
diff: 
delta: (8,4)=5# (8,7)=5# (9,4)=5# (9,7)=5#
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _0110: a rectangle with size (1,4) and color grey and mask Full at (10,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (8,5)
  _01111: a rectangle with size (4,4) and color grey and mask Full at (7,4)
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _011: a rectangle with size (1,4) and color grey and mask Full at (10,4)
diff: 
delta: (8,4)=5# (8,7)=5# (9,4)=5# (9,7)=5#
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (4,1) and color grey and mask Full at (7,4)
  _011: a rectangle with size (4,1) and color grey and mask Full at (7,7)
diff: 
delta: (7,5)=5# (7,6)=5# (10,5)=5# (10,6)=5#
! 5 wrong pixels (generated / expected)

TRAIN c0f76784.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST c0f76784.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 9.4 sec (9.4 sec/task)
bits-train-error = 346.5 bits (346.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-98] Checking task c1d99e64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 103289.4 = 103302.0
DL output with Mo: L = 12.6 + 103289.4 = 103302.0
DL input+output M: L = 25.2 + 206578.8 = 206604.0

# learning a model for train pairs
2.000	
1.231	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.848	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.785	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.723	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.676	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.445	
0.445	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 23874.3 = 23913.1
DL output with Mo: L = 138.9 + 45797.6 = 45936.5
DL input+output M: L = 177.7 + 69671.9 = 69849.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 45797.6 = 45936.5
DL input+output M: L = 151.5 + 45797.6 = 45949.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,19) and color blue and layers
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,8)=0  (0,11)=0  (0,13)=0  (0,15)=0  (1,1)=0  (1,3)=0  (1,8)=0  (1,9)=0  (1,16)=0  (2,4)=0  (2,5)=0  (2,8)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,16)=0  (2,18)=0  (3,1)=0  (3,8)=0  (4,1)=0  (4,4)=0  (4,8)=0  (5,2)=0  (5,4)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,1)=0  (6,2)=0  (6,5)=0  (6,7)=0  (6,8)=0  (6,16)=0  (6,18)=0  (7,2)=0  (7,3)=0  (7,8)=0  (7,10)=0  (7,14)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,15)=0  (8,16)=0  (8,17)=0  (8,18)=0  (9,3)=0  (9,4)=0  (9,8)=0  (9,10)=0  (9,11)=0  (10,2)=0  (10,3)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,15)=0  (10,17)=0  (11,1)=0  (11,3)=0  (11,5)=0  (11,6)=0  (11,8)=0  (11,13)=0  (11,14)=0 
   (0.0 bits)
data: a background with size (12,19) and color blue and layers
  _0: a rectangle with size (12,19) and color red and mask ........x..........|........x..........|........x..........|........x..........|........x..........|........x..........|........x..........|........x..........|xxxxxxxxxxxxxxxxxxx|........x..........|........x..........|........x.......... at (0,0)
  _01: a rectangle with size (3,6) and color black and mask xx....|.xxx.x|...xx. at (9,10)
  _011: a rectangle with size (3,5) and color black and mask xxx..|x.x..|...xx at (0,1)
  _0111: a rectangle with size (5,3) and color black and mask x..|x..|.x.|xx.|.xx at (3,1)
  _01111: a rectangle with size (3,4) and color black and mask ..xx|.xx.|x.x. at (9,1)
diff: 
delta: (0,11)=0  (0,13)=0  (0,15)=0  (1,9)=0  (1,16)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,16)=0  (2,18)=0  (4,4)=0  (5,4)=0  (5,7)=0  (5,9)=0  (5,10)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,5)=0  (6,7)=0  (6,16)=0  (6,18)=0  (7,10)=0  (7,14)=0  (10,6)=0  (10,7)=0  (10,17)=0  (11,5)=0  (11,6)=0 
   (1623.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color blue and layers
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,8)=0  (0,11)=0  (0,13)=0  (0,15)=0  (1,1)=0  (1,3)=0  (1,8)=0  (1,9)=0  (1,16)=0  (2,4)=0  (2,5)=0  (2,8)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,16)=0  (2,18)=0  (3,1)=0  (3,8)=0  (4,1)=0  (4,4)=0  (4,8)=0  (5,2)=0  (5,4)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,1)=0  (6,2)=0  (6,5)=0  (6,7)=0  (6,8)=0  (6,16)=0  (6,18)=0  (7,2)=0  (7,3)=0  (7,8)=0  (7,10)=0  (7,14)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,15)=0  (8,16)=0  (8,17)=0  (8,18)=0  (9,3)=0  (9,4)=0  (9,8)=0  (9,10)=0  (9,11)=0  (10,2)=0  (10,3)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,15)=0  (10,17)=0  (11,1)=0  (11,3)=0  (11,5)=0  (11,6)=0  (11,8)=0  (11,13)=0  (11,14)=0 
! size mismatch, 10x10 instead of 12x19

TRAIN c1d99e64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,14) and color cyan and layers
diff: 
delta: (0,4)=0  (0,10)=0  (0,11)=0  (1,0)=0  (1,2)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,10)=0  (2,2)=0  (2,4)=0  (2,10)=0  (2,11)=0  (3,1)=0  (3,4)=0  (3,7)=0  (3,8)=0  (3,10)=0  (3,13)=0  (4,4)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (5,3)=0  (5,4)=0  (5,7)=0  (5,9)=0  (5,10)=0  (6,1)=0  (6,4)=0  (6,10)=0  (6,11)=0  (6,12)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,6)=0  (7,7)=0  (7,10)=0  (7,11)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,8)=0  (8,10)=0  (9,2)=0  (9,4)=0  (9,10)=0  (9,11)=0  (9,13)=0  (10,0)=0  (10,2)=0  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,12)=0  (11,4)=0  (11,10)=0  (11,11)=0  (11,13)=0 
   (0.0 bits)
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (12,1) and color red and mask Full at (0,10)
  _011: a rectangle with size (3,3) and color black and mask xx.|xxx|x.x at (3,7)
  _0111: a rectangle with size (5,3) and color black and mask x..|.xx|xx.|.x.|.x. at (6,1)
  _01111: a rectangle with size (1,5) and color black and mask Full at (10,5)
diff: 
delta: (0,11)=0  (1,0)=0  (1,2)=0  (1,3)=0  (1,5)=0  (2,2)=0  (2,11)=0  (3,1)=0  (3,13)=0  (5,3)=0  (6,11)=0  (6,12)=0  (7,6)=0  (7,7)=0  (7,11)=0  (8,8)=0  (9,11)=0  (9,13)=0  (10,0)=0  (10,12)=0  (11,11)=0  (11,13)=0 
   (1072.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color cyan and layers
diff: 
delta: (0,4)=0  (0,10)=0  (0,11)=0  (1,0)=0  (1,2)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,10)=0  (2,2)=0  (2,4)=0  (2,10)=0  (2,11)=0  (3,1)=0  (3,4)=0  (3,7)=0  (3,8)=0  (3,10)=0  (3,13)=0  (4,4)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (5,3)=0  (5,4)=0  (5,7)=0  (5,9)=0  (5,10)=0  (6,1)=0  (6,4)=0  (6,10)=0  (6,11)=0  (6,12)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,6)=0  (7,7)=0  (7,10)=0  (7,11)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,8)=0  (8,10)=0  (9,2)=0  (9,4)=0  (9,10)=0  (9,11)=0  (9,13)=0  (10,0)=0  (10,2)=0  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,12)=0  (11,4)=0  (11,10)=0  (11,11)=0  (11,13)=0 
! size mismatch, 10x10 instead of 12x14

TRAIN c1d99e64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,15) and color green and layers
diff: 
delta: (0,1)=0  (0,7)=0  (0,11)=0  (0,13)=0  (1,1)=0  (1,3)=0  (1,7)=0  (1,9)=0  (1,11)=0  (1,12)=0  (1,14)=0  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=0  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,14)=0  (3,1)=0  (3,2)=0  (3,4)=0  (3,5)=0  (3,8)=0  (3,10)=0  (3,13)=0  (3,14)=0  (4,1)=0  (4,10)=0  (5,1)=0  (5,8)=0  (5,9)=0  (5,12)=0  (6,0)=0  (6,1)=0  (6,3)=0  (6,5)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,14)=0  (7,1)=0  (7,2)=0  (7,6)=0  (7,7)=0  (7,9)=0  (7,12)=0  (7,13)=0  (8,1)=0  (8,7)=0  (8,13)=0  (9,1)=0  (9,2)=0  (9,5)=0  (9,14)=0  (10,1)=0  (10,8)=0  (10,12)=0  (11,1)=0  (11,5)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,14)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (13,1)=0  (13,3)=0  (13,4)=0  (13,6)=0  (13,9)=0  (13,14)=0  (14,1)=0  (14,2)=0  (14,4)=0  (14,7)=0  (14,9)=0  (14,12)=0  (14,13)=0  (15,1)=0  (15,2)=0  (15,8)=0  (15,11)=0  (15,12)=0  (16,0)=0  (16,1)=0  (16,4)=0  (16,7)=0  (16,8)=0  (16,10)=0  (16,12)=0  (16,14)=0 
   (0.0 bits)
data: a background with size (17,15) and color green and layers
  _0: a rectangle with size (17,15) and color red and mask .x.............|.x.............|xxxxxxxxxxxxxxx|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|xxxxxxxxxxxxxxx|.x.............|.x.............|.x.............|.x............. at (0,0)
  _01: a rectangle with size (6,6) and color black and mask .....x|.....x|...xx.|x.x.xx|.xx.x.|..x... at (3,5)
  _011: a rectangle with size (4,4) and color black and mask x..x|.x.x|..x.|.xx. at (13,6)
  _0111: a rectangle with size (4,5) and color black and mask ....x|..xx.|.xx..|x.x.. at (13,10)
  _01111: a rectangle with size (2,4) and color black and mask x.x.|xx.x at (0,11)
diff: 
delta: (0,7)=0  (1,3)=0  (1,7)=0  (1,9)=0  (3,2)=0  (3,4)=0  (3,5)=0  (3,8)=0  (3,13)=0  (3,14)=0  (5,12)=0  (6,0)=0  (6,3)=0  (6,14)=0  (7,2)=0  (7,12)=0  (7,13)=0  (8,13)=0  (9,2)=0  (9,5)=0  (9,14)=0  (10,8)=0  (10,12)=0  (11,5)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,14)=0  (13,3)=0  (13,4)=0  (14,2)=0  (14,4)=0  (15,2)=0  (16,0)=0  (16,4)=0  (16,14)=0 
   (1883.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color green and layers
diff: 
delta: (0,1)=0  (0,7)=0  (0,11)=0  (0,13)=0  (1,1)=0  (1,3)=0  (1,7)=0  (1,9)=0  (1,11)=0  (1,12)=0  (1,14)=0  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=0  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,14)=0  (3,1)=0  (3,2)=0  (3,4)=0  (3,5)=0  (3,8)=0  (3,10)=0  (3,13)=0  (3,14)=0  (4,1)=0  (4,10)=0  (5,1)=0  (5,8)=0  (5,9)=0  (5,12)=0  (6,0)=0  (6,1)=0  (6,3)=0  (6,5)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,14)=0  (7,1)=0  (7,2)=0  (7,6)=0  (7,7)=0  (7,9)=0  (7,12)=0  (7,13)=0  (8,1)=0  (8,7)=0  (8,13)=0  (9,1)=0  (9,2)=0  (9,5)=0  (9,14)=0  (10,1)=0  (10,8)=0  (10,12)=0  (11,1)=0  (11,5)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,14)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (13,1)=0  (13,3)=0  (13,4)=0  (13,6)=0  (13,9)=0  (13,14)=0  (14,1)=0  (14,2)=0  (14,4)=0  (14,7)=0  (14,9)=0  (14,12)=0  (14,13)=0  (15,1)=0  (15,2)=0  (15,8)=0  (15,11)=0  (15,12)=0  (16,0)=0  (16,1)=0  (16,4)=0  (16,7)=0  (16,8)=0  (16,10)=0  (16,12)=0  (16,14)=0 
! size mismatch, 10x10 instead of 17x15

TRAIN c1d99e64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color yellow and layers
diff: 
delta: (0,1)=0  (0,3)=0  (0,6)=0  (0,7)=0  (0,12)=0  (0,18)=0  (0,21)=0  (0,23)=0  (0,24)=0  (1,3)=0  (1,4)=0  (1,6)=0  (1,9)=0  (1,16)=0  (1,21)=0  (1,23)=0  (1,24)=0  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=0  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,14)=0  (2,15)=0  (2,16)=0  (2,17)=0  (2,18)=0  (2,19)=0  (2,20)=0  (2,21)=0  (2,22)=0  (2,23)=0  (2,24)=0  (3,1)=0  (3,5)=0  (3,6)=0  (3,12)=0  (3,21)=0  (3,24)=0  (4,2)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,14)=0  (4,18)=0  (4,21)=0  (5,3)=0  (5,6)=0  (5,17)=0  (5,19)=0  (5,21)=0  (5,23)=0  (6,1)=0  (6,2)=0  (6,4)=0  (6,6)=0  (6,13)=0  (6,15)=0  (6,19)=0  (6,21)=0  (7,5)=0  (7,6)=0  (7,8)=0  (7,10)=0  (7,11)=0  (7,14)=0  (7,15)=0  (7,19)=0  (7,20)=0  (7,21)=0  (7,22)=0  (7,24)=0  (8,0)=0  (8,3)=0  (8,6)=0  (8,9)=0  (8,12)=0  (8,15)=0  (8,16)=0  (8,18)=0  (8,20)=0  (8,21)=0  (8,23)=0  (9,3)=0  (9,6)=0  (9,7)=0  (9,13)=0  (9,14)=0  (9,16)=0  (9,20)=0  (9,21)=0  (10,1)=0  (10,5)=0  (10,6)=0  (10,8)=0  (10,11)=0  (10,14)=0  (10,17)=0  (10,20)=0  (10,21)=0  (10,22)=0  (10,23)=0  (11,2)=0  (11,4)=0  (11,5)=0  (11,6)=0  (11,10)=0  (11,17)=0  (11,21)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (12,16)=0  (12,17)=0  (12,18)=0  (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=0  (13,0)=0  (13,3)=0  (13,4)=0  (13,5)=0  (13,6)=0  (13,7)=0  (13,12)=0  (13,15)=0  (13,16)=0  (13,21)=0  (13,22)=0  (14,6)=0  (14,11)=0  (14,13)=0  (14,16)=0  (14,21)=0  (15,5)=0  (15,6)=0  (15,8)=0  (15,10)=0  (15,11)=0  (15,20)=0  (15,21)=0  (15,23)=0  (16,0)=0  (16,6)=0  (16,12)=0  (16,14)=0  (16,17)=0  (16,21)=0  (16,24)=0  (17,0)=0  (17,5)=0  (17,6)=0  (17,10)=0  (17,12)=0  (17,14)=0  (17,21)=0  (17,22)=0  (18,3)=0  (18,6)=0  (18,7)=0  (18,9)=0  (18,21)=0  (18,22)=0  (18,23)=0  (18,24)=0  (19,2)=0  (19,6)=0  (19,9)=0  (19,13)=0  (19,17)=0  (19,20)=0  (19,21)=0  (19,22)=0  (20,0)=0  (20,1)=0  (20,2)=0  (20,3)=0  (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=0  (20,8)=0  (20,9)=0  (20,10)=0  (20,11)=0  (20,12)=0  (20,13)=0  (20,14)=0  (20,15)=0  (20,16)=0  (20,17)=0  (20,18)=0  (20,19)=0  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (21,4)=0  (21,6)=0  (21,8)=0  (21,12)=0  (21,13)=0  (21,14)=0  (21,15)=0  (21,17)=0  (21,21)=0  (22,0)=0  (22,6)=0  (22,8)=0  (22,10)=0  (22,13)=0  (22,16)=0  (22,19)=0  (22,21)=0  (23,6)=0  (23,9)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,16)=0  (23,17)=0  (23,21)=0  (23,24)=0  (24,1)=0  (24,3)=0  (24,6)=0  (24,8)=0  (24,9)=0  (24,10)=0  (24,16)=0  (24,18)=0  (24,21)=0  (24,22)=0  (24,24)=0  (25,2)=0  (25,4)=0  (25,6)=0  (25,7)=0  (25,9)=0  (25,12)=0  (25,15)=0  (25,16)=0  (25,17)=0  (25,19)=0  (25,21)=0  (26,1)=0  (26,2)=0  (26,6)=0  (26,8)=0  (26,14)=0  (26,19)=0  (26,20)=0  (26,21)=0 
! size mismatch, 10x10 instead of 27x25

TEST c1d99e64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 45797.6 bits (45797.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-97] Checking task c3e719e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5525.9 = 5538.5
DL output with Mo: L = 12.6 + 40860.9 = 40873.5
DL input+output M: L = 25.2 + 46386.8 = 46412.0

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = compose(majorityColor(^.grid), ^.grid, ^.grid)
0.782	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.629	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.576	IN  SPE ^.layer_0.shape.color = cyan
0.551	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.018	
0.013	IN  DEL ^.layer_0
0.009	IN  DEL ^.layer_01
0.006	IN  DEL ^.layer_0111
0.003	IN  DEL ^.layer_011

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 98.9 + 2951.9 = 3050.7
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 124.5 + 2951.9 = 3076.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 38.3 + 0.0 = 38.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color green and layers
diff: 
delta: (0,1)=8  (0,2)=7# (1,0)=9# (1,2)=8  (2,0)=7# (2,1)=9#
   (0.0 bits)
data: 
3 8 7#0 0 0 0 0 0 
9#3 8 0 0 0 0 0 0 
7#9#3 0 0 0 0 0 0 
0 0 0 3 8 7#0 0 0 
0 0 0 9#3 8 0 0 0 
0 0 0 7#9#3 0 0 0 
0 0 0 0 0 0 3 8 7#
0 0 0 0 0 0 9#3 8 
0 0 0 0 0 0 7#9#3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
diff: 
delta: (0,1)=8  (0,2)=7# (1,0)=9# (1,2)=8  (2,0)=7# (2,1)=9#
correct output grid

TRAIN c3e719e8.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,1)=6  (1,0)=3  (1,1)=3 
   (0.0 bits)
data: 
8 6 8 0 0 0 8 6 8 
3 3 8 0 0 0 3 3 8 
8 8 8 0 0 0 8 8 8 
0 0 0 0 0 0 8 6 8 
0 0 0 0 0 0 3 3 8 
0 0 0 0 0 0 8 8 8 
8 6 8 8 6 8 8 6 8 
3 3 8 3 3 8 3 3 8 
8 8 8 8 8 8 8 8 8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,1)=6  (1,0)=3  (1,1)=3 
correct output grid

TRAIN c3e719e8.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=6  (1,0)=4  (1,1)=6  (1,2)=8  (2,2)=8 
   (0.0 bits)
data: 
0 0 0 6 9#9#6 9#9#
0 0 0 4 6 8 4 6 8 
0 0 0 9#9#8 9#9#8 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
6 9#9#6 9#9#0 0 0 
4 6 8 4 6 8 0 0 0 
9#9#8 9#9#8 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=6  (1,0)=4  (1,1)=6  (1,2)=8  (2,2)=8 
correct output grid

TRAIN c3e719e8.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,2)=7# (1,0)=7# (1,1)=4  (2,0)=5# (2,2)=7#
correct output grid

TEST c3e719e8.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-96] Checking task c3f564a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 249874.2 = 249886.8
DL output with Mo: L = 12.6 + 245763.3 = 245775.9
DL input+output M: L = 25.2 + 495637.6 = 495662.8

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.931	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.884	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.837	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.752	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.713	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.678	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.646	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.001	
0.001	IN  DEL ^.layer_01111111
0.001	IN  DEL ^.layer_0111111
0.001	IN  DEL ^.layer_011111
0.001	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 161197.5 = 161410.2
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 233.9 + 161197.5 = 161431.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,16) and color blue and layers
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,8)=4  (0,9)=5# (0,11)=2  (0,12)=3  (0,13)=4  (0,14)=5# (1,0)=2  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=2  (1,6)=3  (1,7)=4  (1,8)=5# (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=2  (2,5)=3  (2,6)=4  (2,7)=5# (2,9)=2  (2,10)=3  (2,11)=4  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,6)=5# (3,8)=2  (3,9)=3  (3,10)=4  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,5)=5# (4,7)=2  (4,8)=3  (4,9)=4  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,3)=4  (5,4)=5# (5,6)=2  (5,7)=3  (5,8)=4  (5,9)=5# (5,11)=2  (5,12)=0  (5,13)=0  (5,14)=5# (6,0)=2  (6,1)=3  (6,2)=4  (6,3)=5# (6,5)=2  (6,6)=3  (6,7)=4  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=0  (6,13)=0  (6,15)=2  (7,0)=3  (7,1)=4  (7,2)=5# (7,4)=2  (7,5)=3  (7,6)=4  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,0)=4  (8,1)=5# (8,3)=2  (8,4)=3  (8,5)=4  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,0)=5# (9,2)=2  (9,3)=3  (9,4)=4  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=0  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,14)=5# (11,0)=2  (11,1)=3  (11,2)=4  (11,3)=5# (11,5)=2  (11,6)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,15)=2  (12,0)=3  (12,1)=4  (12,2)=5# (12,4)=2  (12,5)=3  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,0)=4  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,6)=0  (14,7)=0  (14,8)=0  (14,9)=0  (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
   (0.0 bits)
data: 
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 
2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 
3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 4 
5#1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 
2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 
3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 4 
5#1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 
2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 
3 4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 
4 5#1 2 3 4 5#1 2 3 4 5#1 2 3 4 
5#1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#
1 2 3 4 5#1 2 3 4 5#1 2 3 4 5#1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,8)=4  (0,9)=5# (0,11)=2  (0,12)=3  (0,13)=4  (0,14)=5# (1,0)=2  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=2  (1,6)=3  (1,7)=4  (1,8)=5# (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=2  (2,5)=3  (2,6)=4  (2,7)=5# (2,9)=2  (2,10)=3  (2,11)=4  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,6)=5# (3,8)=2  (3,9)=3  (3,10)=4  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,5)=5# (4,7)=2  (4,8)=3  (4,9)=4  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,3)=4  (5,4)=5# (5,6)=2  (5,7)=3  (5,8)=4  (5,9)=5# (5,11)=2  (5,12)=0  (5,13)=0  (5,14)=5# (6,0)=2  (6,1)=3  (6,2)=4  (6,3)=5# (6,5)=2  (6,6)=3  (6,7)=4  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=0  (6,13)=0  (6,15)=2  (7,0)=3  (7,1)=4  (7,2)=5# (7,4)=2  (7,5)=3  (7,6)=4  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,0)=4  (8,1)=5# (8,3)=2  (8,4)=3  (8,5)=4  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,0)=5# (9,2)=2  (9,3)=3  (9,4)=4  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=0  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,14)=5# (11,0)=2  (11,1)=3  (11,2)=4  (11,3)=5# (11,5)=2  (11,6)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,15)=2  (12,0)=3  (12,1)=4  (12,2)=5# (12,4)=2  (12,5)=3  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,0)=4  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,6)=0  (14,7)=0  (14,8)=0  (14,9)=0  (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
correct output grid

TRAIN c3f564a4.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (16,16) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,13)=2  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,12)=2  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,11)=2  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,10)=2  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,9)=2  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,8)=2  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,7)=2  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (6,15)=4  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,6)=2  (7,7)=3  (7,12)=2  (7,13)=3  (7,14)=4  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,5)=2  (8,6)=3  (8,7)=4  (8,12)=3  (8,13)=4  (8,14)=5# (8,15)=6  (9,4)=2  (9,5)=3  (9,6)=4  (9,7)=5# (9,12)=4  (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,11)=4  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,10)=4  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,9)=4  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,8)=4  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,7)=4  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,6)=4  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
   (0.0 bits)
data: 
1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 
2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#
3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 
4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 1 
5#6 1 2 3 4 5#6 1 2 3 4 5#6 1 2 
6 1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 
1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 
2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#
3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 
4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 1 
5#6 1 2 3 4 5#6 1 2 3 4 5#6 1 2 
6 1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 
1 2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 
2 3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#
3 4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 
4 5#6 1 2 3 4 5#6 1 2 3 4 5#6 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,13)=2  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,12)=2  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,11)=2  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,10)=2  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,9)=2  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,8)=2  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,7)=2  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (6,15)=4  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,6)=2  (7,7)=3  (7,12)=2  (7,13)=3  (7,14)=4  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,5)=2  (8,6)=3  (8,7)=4  (8,12)=3  (8,13)=4  (8,14)=5# (8,15)=6  (9,4)=2  (9,5)=3  (9,6)=4  (9,7)=5# (9,12)=4  (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,11)=4  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,10)=4  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,9)=4  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,8)=4  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,7)=4  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,6)=4  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
correct output grid

TRAIN c3f564a4.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,8)=2  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (0,15)=2  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,14)=2  (1,15)=3  (2,0)=3  (2,5)=1  (2,6)=2  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,13)=2  (2,14)=3  (2,15)=4  (3,0)=4  (3,5)=2  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,12)=2  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,11)=2  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,10)=2  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,2)=2  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,9)=2  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,8)=2  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (7,15)=2  (8,0)=2  (8,5)=7# (8,6)=1  (8,7)=2  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,14)=2  (8,15)=3  (9,0)=3  (9,5)=1  (9,6)=2  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,13)=2  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,5)=2  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,4)=2  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,11)=2  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,3)=2  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,10)=2  (12,15)=7# (13,0)=7# (13,1)=1  (13,2)=2  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,9)=2  (13,10)=3  (13,15)=1  (14,0)=1  (14,1)=2  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,8)=2  (14,9)=3  (14,10)=4  (14,15)=2  (15,0)=2  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,7)=2  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,14)=2  (15,15)=3 
   (0.0 bits)
data: 
1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 
2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 
3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 
4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 5#
5#6 7#1 2 3 4 5#6 7#1 2 3 4 5#6 
6 7#1 2 3 4 5#6 7#1 2 3 4 5#6 7#
7#1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 
1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 
2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 
3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 
4 5#6 7#1 2 3 4 5#6 7#1 2 3 4 5#
5#6 7#1 2 3 4 5#6 7#1 2 3 4 5#6 
6 7#1 2 3 4 5#6 7#1 2 3 4 5#6 7#
7#1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 
1 2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 
2 3 4 5#6 7#1 2 3 4 5#6 7#1 2 3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,8)=2  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (0,15)=2  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,14)=2  (1,15)=3  (2,0)=3  (2,5)=1  (2,6)=2  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,13)=2  (2,14)=3  (2,15)=4  (3,0)=4  (3,5)=2  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,12)=2  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,11)=2  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,10)=2  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,2)=2  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,9)=2  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,8)=2  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (7,15)=2  (8,0)=2  (8,5)=7# (8,6)=1  (8,7)=2  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,14)=2  (8,15)=3  (9,0)=3  (9,5)=1  (9,6)=2  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,13)=2  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,5)=2  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,4)=2  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,11)=2  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,3)=2  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,10)=2  (12,15)=7# (13,0)=7# (13,1)=1  (13,2)=2  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,9)=2  (13,10)=3  (13,15)=1  (14,0)=1  (14,1)=2  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,8)=2  (14,9)=3  (14,10)=4  (14,15)=2  (15,0)=2  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,7)=2  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,14)=2  (15,15)=3 
correct output grid

TRAIN c3f564a4.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,10)=3  (0,11)=4  (0,12)=5# (0,13)=6  (0,14)=7# (0,15)=8  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=8  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,14)=8  (1,15)=1  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=8  (2,6)=1  (2,7)=2  (2,8)=3  (2,9)=4  (2,10)=5# (2,11)=6  (2,12)=7# (2,13)=8  (2,14)=1  (2,15)=2  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=8  (3,5)=1  (3,6)=2  (3,7)=3  (3,8)=4  (3,9)=5# (3,10)=6  (3,11)=7# (3,12)=8  (3,13)=1  (3,14)=2  (3,15)=3  (4,0)=5# (4,1)=6  (4,6)=3  (4,7)=4  (4,8)=5# (4,9)=6  (4,10)=7# (4,11)=8  (4,12)=1  (4,13)=2  (4,14)=3  (4,15)=4  (5,0)=6  (5,1)=7# (5,9)=7# (5,10)=8  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,15)=5# (6,0)=7# (6,1)=8  (6,9)=8  (6,10)=1  (6,11)=2  (6,12)=3  (6,13)=4  (6,14)=5# (6,15)=6  (7,0)=8  (7,1)=1  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,13)=5# (7,14)=6  (7,15)=7# (8,0)=1  (8,1)=2  (8,2)=3  (8,3)=4  (8,4)=5# (8,9)=2  (8,10)=3  (8,11)=4  (8,12)=5# (8,13)=6  (8,14)=7# (8,15)=8  (9,0)=2  (9,1)=3  (9,2)=4  (9,3)=5# (9,4)=6  (9,5)=7# (9,6)=8  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,11)=5# (9,12)=6  (9,13)=7# (9,14)=8  (9,15)=1  (10,0)=3  (10,1)=4  (10,2)=5# (10,3)=6  (10,4)=7# (10,5)=8  (10,6)=1  (10,7)=2  (10,8)=3  (10,9)=4  (10,10)=5# (10,11)=6  (10,12)=7# (10,13)=8  (10,14)=1  (10,15)=2  (11,0)=4  (11,1)=5# (11,2)=6  (11,3)=7# (11,4)=8  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,9)=5# (11,10)=6  (11,11)=7# (11,12)=8  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=5# (12,1)=6  (12,2)=7# (12,3)=8  (12,4)=1  (12,5)=2  (12,6)=3  (12,9)=6  (12,10)=7# (12,11)=8  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=6  (13,1)=7# (13,2)=8  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,9)=7# (13,10)=8  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=7# (14,1)=8  (14,2)=1  (14,3)=2  (14,4)=3  (14,5)=4  (14,6)=5# (14,7)=6  (14,8)=7# (14,9)=8  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=8  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,5)=5# (15,6)=6  (15,7)=7# (15,8)=8  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=7#
correct output grid

TEST c3f564a4.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 4.8 sec (4.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-95] Checking task c444b776.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26258.1 = 26270.7
DL output with Mo: L = 12.6 + 41790.8 = 41803.4
DL input+output M: L = 25.2 + 68048.9 = 68074.1

# learning a model for train pairs
2.000	
1.351	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.923	OUT ADD ^.layer_0 = ^.layer_0
0.890	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.854	OUT ADD ^.layer_01 = ^.layer_01
0.823	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.793	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.756	OUT ADD ^.layer_0111 = ^.layer_011
0.725	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.710	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.692	OUT ADD ^.layer_01111 = ^.layer_0111
0.677	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.658	OUT ADD ^.layer_011111 = ^.layer_01111
0.643	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.625	OUT ADD ^.layer_0111111 = ^.layer_011111
0.609	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.594	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.583	OUT SPE ^.size = ^.size
0.579	IN  SPE ^.layer_0.shape.color = yellow
0.576	OUT SPE ^.layer_0110.pos.j = ^.layer_011.pos.j
0.573	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j
0.571	IN  SPE ^.color = black
0.570	OUT SPE ^.color = black
0.372	
0.371	IN  DEL ^.layer_01111111
0.371	IN  DEL ^.layer_0111111
0.371	IN  GEN ^.layer_0.shape.color = ?
0.371	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011.shape at (?,^.layer_011.pos.j)
  _011: ^.layer_01.shape at (?,^.layer_01.pos.j)
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 169.7 + 5211.5 = 5381.2
DL output with Mo: L = 108.6 + 15164.4 = 15273.0
DL input+output M: L = 278.3 + 20375.9 = 20654.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011.shape at (?,^.layer_011.pos.j)
  _011: ^.layer_01.shape at (?,^.layer_01.pos.j)
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 0.0 = 135.7
DL output with Mo: L = 108.6 + 15164.4 = 15273.0
DL input+output M: L = 244.3 + 15164.4 = 15408.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
  _0111: a point with color orange at (11,5)
  _01111: a point with color green at (14,1)
  _011111: a point with color green at (14,5)
diff: 
delta: (16,4)=7# (17,7)=3  (18,1)=7#
   (0.0 bits)
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _0110: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,3)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
  _0111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
  _01111: a point with color orange at (11,5)
  _011111: a point with color green at (14,1)
  _0111111: a point with color green at (14,5)
diff: 
delta: (1,5)=7# (1,15)=7# (2,13)=2  (3,12)=2  (4,1)=3  (4,5)=3  (4,11)=3  (4,15)=3  (6,4)=7# (6,13)=8  (6,14)=7# (7,7)=3  (7,14)=8  (7,17)=3  (8,1)=7# (8,11)=7# (11,15)=7# (12,13)=2  (13,12)=2  (14,11)=3  (14,15)=3  (16,4)=7# (16,13)=8  (16,14)=7# (17,7)=3  (17,14)=8  (17,17)=3  (18,1)=7# (18,11)=7#
   (1155.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
  _0111: a point with color orange at (11,5)
  _01111: a point with color green at (14,1)
  _011111: a point with color green at (14,5)
diff: 
delta: (16,4)=7# (17,7)=3  (18,1)=7#
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
  _0111: a point with color orange at (11,5)
  _01111: a point with color green at (14,1)
  _011111: a point with color orange at (16,4)
diff: 
delta: (14,5)=3  (17,7)=3  (18,1)=7#
! 36 wrong pixels (generated / expected)

TRAIN c444b776.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (19,9) and color black and layers
  _0: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _0111: a point with color grey at (1,5)
  _01111: a point with color red at (1,7)
  _011111: a point with color blue at (2,2)
diff: 
delta: (4,4)=1  (5,2)=1  (6,7)=2 
   (0.0 bits)
data: a background with size (19,9) and color black and layers
  _0: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _0110: a rectangle with size (2,2) and color red and mask Odd Checkboard at (16,1)
  _011: a rectangle with size (1,2) and color grey and mask Full at (17,5)
  _0111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _01111: a point with color grey at (1,5)
  _011111: a point with color red at (1,7)
  _0111111: a point with color blue at (2,2)
diff: 
delta: (4,4)=1  (5,2)=1  (6,7)=2  (11,5)=5# (11,7)=2  (12,2)=1  (14,4)=1  (15,2)=1  (16,7)=2 
   (361.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  _0: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _0111: a point with color grey at (1,5)
  _01111: a point with color red at (1,7)
  _011111: a point with color blue at (2,2)
diff: 
delta: (4,4)=1  (5,2)=1  (6,7)=2 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  _0: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _0111: a point with color grey at (1,5)
  _01111: a point with color red at (1,7)
  _011111: a point with color blue at (4,4)
diff: 
delta: (2,2)=1  (5,2)=1  (6,7)=2 
! 17 wrong pixels (generated / expected)

TRAIN c444b776.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,29) and color black and layers
  _0: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _011: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
  _0111: a point with color green at (1,14)
  _01111: a point with color red at (2,11)
  _011111: a point with color red at (2,17)
diff: 
delta: (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,29) and color black and layers
  _0: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _011: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
  _0111: a point with color green at (1,14)
  _01111: a point with color red at (2,11)
  _011111: a point with color green at (3,11)
diff: 
delta: (2,17)=2  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 45 wrong pixels (generated / expected)

TEST c444b776.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.1 sec (15.1 sec/task)
bits-train-error = 15164.4 bits (15164.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-94] Checking task c59eb873.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5839.2 = 5851.8
DL output with Mo: L = 12.6 + 22587.9 = 22600.5
DL input+output M: L = 25.2 + 28427.0 = 28452.2

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = ^.grid * '2
0.686	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.515	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.487	IN  SPE ^.layer_01.shape.color = red
0.470	IN  SPE ^.layer_01.shape.mask = Full
0.458	IN  SPE ^.color = black
0.015	
0.010	IN  DEL ^.layer_01
0.006	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_011
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
^.grid * '2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 84.4 + 2587.2 = 2671.6
DL output with Mo: L = 22.4 + 0.0 = 22.4
DL input+output M: L = 106.9 + 2587.2 = 2694.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
^.grid * '2
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 22.4 + 0.0 = 22.4
DL input+output M: L = 35.1 + 0.0 = 35.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=0  (0,2)=1  (2,0)=2  (2,2)=0 
   (0.0 bits)
data: 
0 0 5#5#1 1 
0 0 5#5#1 1 
5#5#5#5#5#5#
5#5#5#5#5#5#
2 2 5#5#0 0 
2 2 5#5#0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=0  (0,2)=1  (2,0)=2  (2,2)=0 
correct output grid

TRAIN c59eb873.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (2,2) and color blue and layers
diff: 
delta: (0,0)=2  (1,0)=3 
   (0.0 bits)
data: 
2 2 1 1 
2 2 1 1 
3 3 1 1 
3 3 1 1 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color blue and layers
diff: 
delta: (0,0)=2  (1,0)=3 
correct output grid

TRAIN c59eb873.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (4,4) and color black and layers
diff: 
delta: (0,0)=2  (0,2)=3  (1,0)=2  (1,1)=1  (1,2)=3  (2,2)=3  (2,3)=3  (3,2)=3  (3,3)=5#
   (0.0 bits)
data: 
2 2 0 0 3 3 0 0 
2 2 0 0 3 3 0 0 
2 2 1 1 3 3 0 0 
2 2 1 1 3 3 0 0 
0 0 0 0 3 3 3 3 
0 0 0 0 3 3 3 3 
0 0 0 0 3 3 5#5#
0 0 0 0 3 3 5#5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
diff: 
delta: (0,0)=2  (0,2)=3  (1,0)=2  (1,1)=1  (1,2)=3  (2,2)=3  (2,3)=3  (3,2)=3  (3,3)=5#
correct output grid

TRAIN c59eb873.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (0,3)=7# (0,4)=8  (1,0)=2  (1,1)=1  (1,2)=1  (2,1)=5# (2,2)=6  (2,3)=6  (3,0)=3  (3,1)=5# (3,2)=6  (4,1)=5#
correct output grid

TEST c59eb873.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-93] Checking task c8cbb738.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13089.4 = 13102.0
DL output with Mo: L = 12.6 + 11044.3 = 11056.9
DL input+output M: L = 25.2 + 24133.7 = 24158.9

# learning a model for train pairs
2.000	
1.860	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.761	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.680	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.634	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.582	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.535	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.488	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.473	OUT SPE ^.layer_0.shape.size = ^.layer_011.shape.size
1.461	OUT SPE ^.layer_01.pos.i = '0
1.451	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.i - 1
1.442	OUT SPE ^.layer_0.shape.mask = Full
1.427	OUT SPE ^.size.i = ^.layer_0.shape.size.j + ^.layer_011.pos.i - ^.layer_01.pos.i
1.413	OUT SPE ^.size.j = ^.layer_0.shape.size.j + ^.layer_011.pos.i - ^.layer_01.pos.i
1.404	OUT SPE ^.layer_0.pos.j = right(^.layer_0) / colorCount(^.grid)
1.396	OUT SPE ^.layer_0.pos.i = min(^.layer_0.pos.j, ^.layer_01.pos.j)
0.662	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_0.shape.size.j + ^.layer_011.pos.i - ^.layer_01.pos.i) and color ? and layers
  _0: a rectangle with size ^.layer_011.shape.size and color ? and mask Full at (min(^.layer_0.pos.j, ^.layer_01.pos.j),right(^.layer_0) / colorCount(^.grid))
  _01: ^.layer_0.shape at ('0,^.layer_01.pos.i - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 9648.3 = 9759.3
DL output with Mo: L = 292.2 + 6901.8 = 7194.0
DL input+output M: L = 403.2 + 16550.1 = 16953.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_0.shape.size.j + ^.layer_011.pos.i - ^.layer_01.pos.i) and color ? and layers
  _0: a rectangle with size ^.layer_011.shape.size and color ? and mask Full at (min(^.layer_0.pos.j, ^.layer_01.pos.j),right(^.layer_0) / colorCount(^.grid))
  _01: ^.layer_0.shape at ('0,^.layer_01.pos.i - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 31.7 = 142.7
DL output with Mo: L = 292.2 + 6901.8 = 7194.0
DL input+output M: L = 403.2 + 6933.5 = 7336.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,11) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,7)
  _01: a point with color blue at (2,4)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,7)
  _0111: a point with color blue at (4,2)
  _01111: a point with color blue at (4,6)
diff: 
delta: (0,8)=3  (4,8)=3  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
   (3.2 bits)
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (4,1)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,1)
diff: 
delta: (0,0)=2  (0,2)=1  (0,4)=2  (1,0)=8  (1,4)=8  (2,0)=1  (2,4)=1  (3,0)=8  (3,4)=8  (4,0)=2  (4,2)=1  (4,4)=2 
   (444.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,7)
  _01: a point with color blue at (2,4)
  _011: a rectangle with size (1,1) and color blue and mask Full at (4,2)
  _0111: a point with color blue at (4,6)
  _01111: a point with color yellow at (4,7)
diff: 
delta: (0,8)=3  (4,9)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (4,7)
  _01: a point with color yellow at (0,7)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,9)
  _0111: a point with color blue at (2,4)
  _01111: a point with color blue at (4,2)
diff: 
delta: (4,6)=1  (4,8)=3  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! size mismatch, 3x3 instead of 5x5
>> Trial 3
data: a background with size (12,11) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,7)
  _01: a point with color blue at (2,4)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,7)
  _0111: a point with color blue at (4,2)
  _01111: a point with color blue at (4,6)
diff: 
delta: (0,8)=3  (4,8)=3  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! 23 wrong pixels (generated / expected)

TRAIN c8cbb738.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _01: a point with color cyan at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _0111: a point with color cyan at (3,1)
  _01111: a point with color cyan at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (0,0)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _01: a point with color cyan at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _0111: a point with color cyan at (3,1)
  _01111: a point with color cyan at (3,3)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _01: a point with color cyan at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (3,1)
  _0111: a point with color cyan at (1,3)
  _01111: a point with color cyan at (3,3)
diff: 
delta:
! size mismatch, 5x5 instead of 3x3

TRAIN c8cbb738.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,14) and color yellow and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01: a point with color blue at (1,6)
  _011: a rectangle with size (1,1) and color blue and mask Full at (5,2)
  _0111: a point with color blue at (5,6)
  _01111: a point with color orange at (5,9)
diff: 
delta: (7,7)=7# (7,11)=7# (9,9)=7#
   (0.0 bits)
data: a background with size (5,5) and color yellow and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=7# (0,4)=1  (2,4)=7# (4,0)=1  (4,2)=7# (4,4)=1 
   (231.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color yellow and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01: a point with color blue at (1,6)
  _011: a rectangle with size (1,1) and color blue and mask Full at (5,2)
  _0111: a point with color blue at (5,6)
  _01111: a point with color orange at (5,9)
diff: 
delta: (7,7)=7# (7,11)=7# (9,9)=7#
! 24 wrong pixels (generated / expected)

TRAIN c8cbb738.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST c8cbb738.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 55.8 sec (55.8 sec/task)
bits-train-error = 6901.8 bits (6901.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-92] Checking task c8f0f002.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9861.9 = 9874.5
DL output with Mo: L = 12.6 + 9861.9 = 9874.5
DL input+output M: L = 25.2 + 19723.9 = 19749.1

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = swapColor(^.grid, orange, grey)
0.607	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.473	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.443	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.430	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.420	IN  SPE ^.layer_01.shape.mask = Full
0.410	IN  SPE ^.layer_011.shape.mask = Full
0.014	
0.011	IN  DEL ^.layer_011
0.009	IN  DEL ^.layer_01
0.006	IN  DEL ^.layer_0
0.004	IN  DEL ^.layer_0111

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
swapColor(^.grid, orange, grey)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 106.8 + 3912.0 = 4018.9
DL output with Mo: L = 29.8 + 0.0 = 29.8
DL input+output M: L = 136.6 + 3912.0 = 4048.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
swapColor(^.grid, orange, grey)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 29.8 + 0.0 = 29.8
DL input+output M: L = 42.4 + 0.0 = 42.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,6) and color orange and layers
diff: 
delta: (0,0)=1  (0,1)=8  (0,2)=8  (0,5)=8  (1,0)=1  (1,1)=1  (1,4)=1  (1,5)=8  (2,1)=1  (2,2)=1  (2,5)=8 
   (0.0 bits)
data: 
1 8 8 5#5#8 
1 1 5#5#1 8 
5#1 1 5#5#8 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color orange and layers
diff: 
delta: (0,0)=1  (0,1)=8  (0,2)=8  (0,5)=8  (1,0)=1  (1,1)=1  (1,4)=1  (1,5)=8  (2,1)=1  (2,2)=1  (2,5)=8 
correct output grid

TRAIN c8f0f002.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,4) and color orange and layers
diff: 
delta: (0,3)=1  (1,0)=1  (1,1)=8  (1,2)=1  (2,1)=1  (2,2)=1 
   (0.0 bits)
data: 
5#5#5#1 
1 8 1 5#
5#1 1 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color orange and layers
diff: 
delta: (0,3)=1  (1,0)=1  (1,1)=8  (1,2)=1  (2,1)=1  (2,2)=1 
correct output grid

TRAIN c8f0f002.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,5) and color blue and layers
diff: 
delta: (0,1)=8  (0,3)=7# (1,0)=7# (1,1)=8  (1,2)=8  (2,0)=7# (2,2)=8  (2,3)=8  (2,4)=7#
   (0.0 bits)
data: 
1 8 1 5#1 
5#8 8 1 1 
5#1 8 8 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color blue and layers
diff: 
delta: (0,1)=8  (0,3)=7# (1,0)=7# (1,1)=8  (1,2)=8  (2,0)=7# (2,2)=8  (2,3)=8  (2,4)=7#
correct output grid

TRAIN c8f0f002.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color orange and layers
diff: 
delta: (0,0)=1  (0,3)=1  (1,0)=8  (1,1)=1  (2,0)=8  (2,2)=1  (2,4)=8 
correct output grid

TEST c8f0f002.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-91] Checking task c909285e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 537419.5 = 537432.1
DL output with Mo: L = 12.6 + 28204.1 = 28216.7
DL input+output M: L = 25.2 + 565623.7 = 565648.9

# learning a model for train pairs
2.000	
1.665	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.393	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.264	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.144	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.106	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.028	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.300	
0.300	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 391298.4 = 391337.2
DL output with Mo: L = 163.5 + 8297.2 = 8460.8
DL input+output M: L = 202.4 + 399595.6 = 399798.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 8297.2 = 8460.8
DL input+output M: L = 176.1 + 8297.2 = 8473.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (24,24) and color grey and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,3)=4  (0,4)=8  (0,6)=0  (0,7)=4  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,15)=4  (0,16)=0  (0,18)=0  (0,19)=4  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,3)=4  (1,4)=8  (1,6)=0  (1,7)=4  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,15)=4  (1,16)=0  (1,18)=0  (1,19)=4  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,3)=4  (2,4)=2  (2,6)=2  (2,7)=4  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,15)=4  (2,16)=2  (2,18)=2  (2,19)=4  (2,20)=2  (2,21)=2  (2,22)=2  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (3,16)=4  (3,18)=4  (3,19)=4  (3,20)=4  (3,21)=4  (3,22)=4  (4,0)=8  (4,1)=8  (4,2)=2  (4,3)=4  (4,4)=8  (4,6)=8  (4,7)=4  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,15)=4  (4,16)=8  (4,18)=8  (4,19)=4  (4,20)=2  (4,21)=8  (4,22)=8  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (6,0)=0  (6,1)=0  (6,2)=2  (6,3)=4  (6,4)=8  (6,5)=3  (6,6)=0  (6,7)=4  (6,8)=2  (6,9)=8  (6,10)=0  (6,11)=3  (6,12)=0  (6,13)=0  (6,14)=2  (6,15)=4  (6,16)=0  (6,18)=0  (6,19)=4  (6,20)=2  (6,21)=0  (6,22)=0  (7,0)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=3  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (7,10)=4  (7,11)=3  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=4  (7,16)=4  (7,18)=4  (7,19)=4  (7,20)=4  (7,21)=4  (7,22)=4  (8,0)=2  (8,1)=2  (8,2)=2  (8,3)=4  (8,4)=2  (8,5)=3  (8,6)=2  (8,7)=4  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=3  (8,12)=2  (8,13)=2  (8,14)=2  (8,15)=4  (8,16)=2  (8,18)=2  (8,19)=4  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,3)=4  (9,4)=8  (9,5)=3  (9,6)=8  (9,7)=4  (9,8)=2  (9,9)=8  (9,10)=8  (9,11)=3  (9,12)=8  (9,13)=8  (9,14)=2  (9,15)=4  (9,16)=8  (9,18)=8  (9,19)=4  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,3)=4  (10,4)=8  (10,5)=3  (10,6)=0  (10,7)=4  (10,8)=2  (10,9)=8  (10,10)=0  (10,11)=3  (10,12)=0  (10,13)=0  (10,14)=2  (10,15)=4  (10,16)=0  (10,18)=0  (10,19)=4  (10,20)=2  (10,21)=0  (10,22)=0  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=0  (12,1)=0  (12,2)=2  (12,3)=4  (12,4)=8  (12,6)=0  (12,7)=4  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,15)=4  (12,16)=0  (12,18)=0  (12,19)=4  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,3)=4  (13,4)=8  (13,6)=0  (13,7)=4  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,15)=4  (13,16)=0  (13,18)=0  (13,19)=4  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=4  (14,4)=2  (14,6)=2  (14,7)=4  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=4  (14,16)=2  (14,18)=2  (14,19)=4  (14,20)=2  (14,21)=2  (14,22)=2  (15,0)=4  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,8)=4  (15,9)=4  (15,10)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (15,16)=4  (15,18)=4  (15,19)=4  (15,20)=4  (15,21)=4  (15,22)=4  (16,0)=0  (16,1)=0  (16,2)=2  (16,3)=4  (16,4)=8  (16,6)=0  (16,7)=4  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,15)=4  (16,16)=0  (16,18)=0  (16,19)=4  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,3)=4  (18,4)=8  (18,6)=0  (18,7)=4  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,15)=4  (18,16)=0  (18,18)=0  (18,19)=4  (18,20)=2  (18,21)=0  (18,22)=0  (19,0)=4  (19,1)=4  (19,2)=4  (19,3)=4  (19,4)=4  (19,6)=4  (19,7)=4  (19,8)=4  (19,9)=4  (19,10)=4  (19,12)=4  (19,13)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,19)=4  (19,20)=4  (19,21)=4  (19,22)=4  (20,0)=2  (20,1)=2  (20,2)=2  (20,3)=4  (20,4)=2  (20,6)=2  (20,7)=4  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,15)=4  (20,16)=2  (20,18)=2  (20,19)=4  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,3)=4  (21,4)=8  (21,6)=0  (21,7)=4  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,15)=4  (21,16)=0  (21,18)=0  (21,19)=4  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,3)=4  (22,4)=8  (22,6)=0  (22,7)=4  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,15)=4  (22,16)=0  (22,18)=0  (22,19)=4  (22,20)=2  (22,21)=0  (22,22)=0 
   (0.0 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (5,5) and color yellow and mask .x...|xxxxx|.x...|.x...|.x... at (1,1)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,1)
  _011: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,4)
  _0111: a rectangle with size (5,1) and color red and mask Full at (1,3)
  _01111: a rectangle with size (1,5) and color black and mask Full at (1,1)
  _011111: a rectangle with size (1,5) and color black and mask Full at (5,1)
diff: 
delta: (1,4)=8  (4,1)=8 
   (321.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color grey and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,3)=4  (0,4)=8  (0,6)=0  (0,7)=4  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,15)=4  (0,16)=0  (0,18)=0  (0,19)=4  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,3)=4  (1,4)=8  (1,6)=0  (1,7)=4  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,15)=4  (1,16)=0  (1,18)=0  (1,19)=4  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,3)=4  (2,4)=2  (2,6)=2  (2,7)=4  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,15)=4  (2,16)=2  (2,18)=2  (2,19)=4  (2,20)=2  (2,21)=2  (2,22)=2  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (3,16)=4  (3,18)=4  (3,19)=4  (3,20)=4  (3,21)=4  (3,22)=4  (4,0)=8  (4,1)=8  (4,2)=2  (4,3)=4  (4,4)=8  (4,6)=8  (4,7)=4  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,15)=4  (4,16)=8  (4,18)=8  (4,19)=4  (4,20)=2  (4,21)=8  (4,22)=8  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (6,0)=0  (6,1)=0  (6,2)=2  (6,3)=4  (6,4)=8  (6,5)=3  (6,6)=0  (6,7)=4  (6,8)=2  (6,9)=8  (6,10)=0  (6,11)=3  (6,12)=0  (6,13)=0  (6,14)=2  (6,15)=4  (6,16)=0  (6,18)=0  (6,19)=4  (6,20)=2  (6,21)=0  (6,22)=0  (7,0)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=3  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (7,10)=4  (7,11)=3  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=4  (7,16)=4  (7,18)=4  (7,19)=4  (7,20)=4  (7,21)=4  (7,22)=4  (8,0)=2  (8,1)=2  (8,2)=2  (8,3)=4  (8,4)=2  (8,5)=3  (8,6)=2  (8,7)=4  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=3  (8,12)=2  (8,13)=2  (8,14)=2  (8,15)=4  (8,16)=2  (8,18)=2  (8,19)=4  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,3)=4  (9,4)=8  (9,5)=3  (9,6)=8  (9,7)=4  (9,8)=2  (9,9)=8  (9,10)=8  (9,11)=3  (9,12)=8  (9,13)=8  (9,14)=2  (9,15)=4  (9,16)=8  (9,18)=8  (9,19)=4  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,3)=4  (10,4)=8  (10,5)=3  (10,6)=0  (10,7)=4  (10,8)=2  (10,9)=8  (10,10)=0  (10,11)=3  (10,12)=0  (10,13)=0  (10,14)=2  (10,15)=4  (10,16)=0  (10,18)=0  (10,19)=4  (10,20)=2  (10,21)=0  (10,22)=0  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=0  (12,1)=0  (12,2)=2  (12,3)=4  (12,4)=8  (12,6)=0  (12,7)=4  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,15)=4  (12,16)=0  (12,18)=0  (12,19)=4  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,3)=4  (13,4)=8  (13,6)=0  (13,7)=4  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,15)=4  (13,16)=0  (13,18)=0  (13,19)=4  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=4  (14,4)=2  (14,6)=2  (14,7)=4  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=4  (14,16)=2  (14,18)=2  (14,19)=4  (14,20)=2  (14,21)=2  (14,22)=2  (15,0)=4  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,8)=4  (15,9)=4  (15,10)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (15,16)=4  (15,18)=4  (15,19)=4  (15,20)=4  (15,21)=4  (15,22)=4  (16,0)=0  (16,1)=0  (16,2)=2  (16,3)=4  (16,4)=8  (16,6)=0  (16,7)=4  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,15)=4  (16,16)=0  (16,18)=0  (16,19)=4  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,3)=4  (18,4)=8  (18,6)=0  (18,7)=4  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,15)=4  (18,16)=0  (18,18)=0  (18,19)=4  (18,20)=2  (18,21)=0  (18,22)=0  (19,0)=4  (19,1)=4  (19,2)=4  (19,3)=4  (19,4)=4  (19,6)=4  (19,7)=4  (19,8)=4  (19,9)=4  (19,10)=4  (19,12)=4  (19,13)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,19)=4  (19,20)=4  (19,21)=4  (19,22)=4  (20,0)=2  (20,1)=2  (20,2)=2  (20,3)=4  (20,4)=2  (20,6)=2  (20,7)=4  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,15)=4  (20,16)=2  (20,18)=2  (20,19)=4  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,3)=4  (21,4)=8  (21,6)=0  (21,7)=4  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,15)=4  (21,16)=0  (21,18)=0  (21,19)=4  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,3)=4  (22,4)=8  (22,6)=0  (22,7)=4  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,15)=4  (22,16)=0  (22,18)=0  (22,19)=4  (22,20)=2  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (26,26) and color cyan and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=3  (0,4)=1  (0,6)=0  (0,7)=3  (0,9)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=3  (0,16)=0  (0,18)=0  (0,19)=3  (0,21)=0  (0,22)=0  (0,24)=1  (0,25)=0  (1,0)=0  (1,1)=0  (1,3)=3  (1,4)=1  (1,6)=0  (1,7)=3  (1,9)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=3  (1,16)=0  (1,18)=0  (1,19)=3  (1,21)=0  (1,22)=0  (1,24)=1  (1,25)=0  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,0)=3  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=3  (3,15)=3  (3,16)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,22)=3  (3,24)=3  (3,25)=3  (4,0)=1  (4,1)=1  (4,2)=2  (4,3)=3  (4,4)=1  (4,6)=1  (4,7)=3  (4,8)=2  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,2)=2  (5,8)=2  (6,0)=0  (6,1)=0  (6,2)=2  (6,3)=3  (6,4)=1  (6,6)=0  (6,7)=3  (6,8)=2  (6,9)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=3  (6,16)=0  (6,18)=0  (6,19)=3  (6,21)=0  (6,22)=0  (6,24)=1  (6,25)=0  (7,0)=3  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=3  (7,6)=3  (7,7)=3  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,0)=0  (10,1)=0  (10,3)=3  (10,4)=1  (10,6)=0  (10,7)=3  (10,9)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=3  (10,16)=0  (10,18)=0  (10,19)=3  (10,21)=0  (10,22)=0  (10,24)=1  (10,25)=0  (12,0)=0  (12,1)=0  (12,3)=3  (12,4)=1  (12,6)=0  (12,7)=3  (12,9)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=3  (12,16)=0  (12,18)=0  (12,19)=3  (12,21)=0  (12,22)=0  (12,24)=1  (12,25)=0  (13,0)=0  (13,1)=0  (13,3)=3  (13,4)=1  (13,6)=0  (13,7)=3  (13,9)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=3  (13,16)=0  (13,18)=0  (13,19)=3  (13,21)=0  (13,22)=0  (13,24)=1  (13,25)=0  (15,0)=3  (15,1)=3  (15,3)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,9)=3  (15,10)=3  (15,12)=3  (15,13)=3  (15,15)=3  (15,16)=3  (15,18)=3  (15,19)=3  (15,21)=3  (15,22)=3  (15,24)=3  (15,25)=3  (16,0)=0  (16,1)=0  (16,3)=3  (16,4)=1  (16,6)=0  (16,7)=3  (16,9)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=3  (16,16)=0  (16,18)=0  (16,19)=3  (16,21)=0  (16,22)=0  (16,24)=1  (16,25)=0  (18,0)=0  (18,1)=0  (18,3)=3  (18,4)=1  (18,6)=0  (18,7)=3  (18,9)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=3  (18,16)=0  (18,18)=0  (18,19)=3  (18,21)=0  (18,22)=0  (18,24)=1  (18,25)=0  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,15)=3  (19,16)=3  (19,18)=3  (19,19)=3  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=3  (21,0)=0  (21,1)=0  (21,3)=3  (21,4)=1  (21,6)=0  (21,7)=3  (21,9)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=3  (21,16)=0  (21,18)=0  (21,19)=3  (21,21)=0  (21,22)=0  (21,24)=1  (21,25)=0  (22,0)=0  (22,1)=0  (22,3)=3  (22,4)=1  (22,6)=0  (22,7)=3  (22,9)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=3  (22,16)=0  (22,18)=0  (22,19)=3  (22,21)=0  (22,22)=0  (22,24)=1  (22,25)=0  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,0)=0  (25,1)=0  (25,3)=3  (25,4)=1  (25,6)=0  (25,7)=3  (25,9)=1  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=3  (25,16)=0  (25,18)=0  (25,19)=3  (25,21)=0  (25,22)=0  (25,24)=1  (25,25)=0 
   (0.0 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,5) and color cyan and mask +-cross at (1,1)
  _01: a rectangle with size (2,5) and color green and mask Full at (1,1)
  _011: a rectangle with size (1,5) and color green and mask Full at (5,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (4,2)
  _01111: a rectangle with size (1,1) and color black and mask Full at (4,4)
  _011111: a rectangle with size (2,5) and color green and mask Full at (4,1)
diff: 
delta: (2,2)=1  (2,4)=1 
   (289.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color cyan and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=3  (0,4)=1  (0,6)=0  (0,7)=3  (0,9)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=3  (0,16)=0  (0,18)=0  (0,19)=3  (0,21)=0  (0,22)=0  (0,24)=1  (0,25)=0  (1,0)=0  (1,1)=0  (1,3)=3  (1,4)=1  (1,6)=0  (1,7)=3  (1,9)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=3  (1,16)=0  (1,18)=0  (1,19)=3  (1,21)=0  (1,22)=0  (1,24)=1  (1,25)=0  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,0)=3  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=3  (3,15)=3  (3,16)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,22)=3  (3,24)=3  (3,25)=3  (4,0)=1  (4,1)=1  (4,2)=2  (4,3)=3  (4,4)=1  (4,6)=1  (4,7)=3  (4,8)=2  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,2)=2  (5,8)=2  (6,0)=0  (6,1)=0  (6,2)=2  (6,3)=3  (6,4)=1  (6,6)=0  (6,7)=3  (6,8)=2  (6,9)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=3  (6,16)=0  (6,18)=0  (6,19)=3  (6,21)=0  (6,22)=0  (6,24)=1  (6,25)=0  (7,0)=3  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=3  (7,6)=3  (7,7)=3  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,0)=0  (10,1)=0  (10,3)=3  (10,4)=1  (10,6)=0  (10,7)=3  (10,9)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=3  (10,16)=0  (10,18)=0  (10,19)=3  (10,21)=0  (10,22)=0  (10,24)=1  (10,25)=0  (12,0)=0  (12,1)=0  (12,3)=3  (12,4)=1  (12,6)=0  (12,7)=3  (12,9)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=3  (12,16)=0  (12,18)=0  (12,19)=3  (12,21)=0  (12,22)=0  (12,24)=1  (12,25)=0  (13,0)=0  (13,1)=0  (13,3)=3  (13,4)=1  (13,6)=0  (13,7)=3  (13,9)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=3  (13,16)=0  (13,18)=0  (13,19)=3  (13,21)=0  (13,22)=0  (13,24)=1  (13,25)=0  (15,0)=3  (15,1)=3  (15,3)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,9)=3  (15,10)=3  (15,12)=3  (15,13)=3  (15,15)=3  (15,16)=3  (15,18)=3  (15,19)=3  (15,21)=3  (15,22)=3  (15,24)=3  (15,25)=3  (16,0)=0  (16,1)=0  (16,3)=3  (16,4)=1  (16,6)=0  (16,7)=3  (16,9)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=3  (16,16)=0  (16,18)=0  (16,19)=3  (16,21)=0  (16,22)=0  (16,24)=1  (16,25)=0  (18,0)=0  (18,1)=0  (18,3)=3  (18,4)=1  (18,6)=0  (18,7)=3  (18,9)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=3  (18,16)=0  (18,18)=0  (18,19)=3  (18,21)=0  (18,22)=0  (18,24)=1  (18,25)=0  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,15)=3  (19,16)=3  (19,18)=3  (19,19)=3  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=3  (21,0)=0  (21,1)=0  (21,3)=3  (21,4)=1  (21,6)=0  (21,7)=3  (21,9)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=3  (21,16)=0  (21,18)=0  (21,19)=3  (21,21)=0  (21,22)=0  (21,24)=1  (21,25)=0  (22,0)=0  (22,1)=0  (22,3)=3  (22,4)=1  (22,6)=0  (22,7)=3  (22,9)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=3  (22,16)=0  (22,18)=0  (22,19)=3  (22,21)=0  (22,22)=0  (22,24)=1  (22,25)=0  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,0)=0  (25,1)=0  (25,3)=3  (25,4)=1  (25,6)=0  (25,7)=3  (25,9)=1  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=3  (25,16)=0  (25,18)=0  (25,19)=3  (25,21)=0  (25,22)=0  (25,24)=1  (25,25)=0 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (28,28) and color green and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,5)=5# (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,11)=5# (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,17)=5# (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,23)=5# (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,5)=5# (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,11)=5# (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,17)=5# (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,23)=5# (1,24)=8  (1,25)=0  (1,27)=1  (2,5)=5# (2,11)=5# (2,17)=5# (2,23)=5# (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,5)=5# (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,11)=5# (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,17)=5# (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,23)=5# (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,5)=5# (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,11)=5# (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,17)=5# (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,23)=5# (4,24)=8  (4,25)=8  (4,27)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (5,11)=5# (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (5,16)=5# (5,17)=5# (5,18)=5# (5,19)=5# (5,20)=5# (5,21)=5# (5,22)=5# (5,23)=5# (5,24)=5# (5,25)=5# (5,26)=5# (5,27)=5# (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,5)=5# (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,11)=5# (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,17)=5# (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,23)=5# (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,5)=5# (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,11)=5# (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,17)=5# (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,23)=5# (7,24)=8  (7,25)=1  (7,27)=1  (8,5)=5# (8,11)=5# (8,17)=5# (8,23)=5# (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,5)=5# (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,11)=5# (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,17)=5# (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,23)=5# (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,5)=5# (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,11)=5# (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,17)=5# (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,23)=5# (10,24)=8  (10,25)=0  (10,27)=1  (11,0)=5# (11,1)=5# (11,2)=5# (11,3)=5# (11,4)=5# (11,5)=5# (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=5# (11,11)=5# (11,12)=5# (11,13)=5# (11,14)=5# (11,15)=5# (11,16)=5# (11,17)=5# (11,18)=5# (11,19)=5# (11,20)=5# (11,21)=5# (11,22)=5# (11,23)=5# (11,24)=5# (11,25)=5# (11,26)=5# (11,27)=5# (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,5)=5# (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,11)=5# (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,17)=5# (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,23)=5# (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,5)=5# (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,11)=5# (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,17)=5# (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,23)=5# (13,24)=8  (13,25)=0  (13,27)=1  (14,5)=5# (14,11)=5# (14,17)=5# (14,23)=5# (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,5)=5# (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,11)=5# (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,17)=5# (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,23)=5# (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,5)=5# (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,11)=5# (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,17)=5# (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,23)=5# (16,24)=8  (16,25)=0  (16,27)=1  (17,0)=5# (17,1)=5# (17,2)=5# (17,3)=5# (17,4)=5# (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=5# (17,13)=5# (17,14)=5# (17,15)=5# (17,16)=5# (17,17)=5# (17,18)=5# (17,19)=5# (17,20)=5# (17,21)=5# (17,22)=5# (17,23)=5# (17,24)=5# (17,25)=5# (17,26)=5# (17,27)=5# (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,5)=6  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,11)=6  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,17)=5# (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,23)=5# (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,5)=6  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,11)=6  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,17)=5# (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,23)=5# (19,24)=8  (19,25)=8  (19,27)=8  (20,5)=6  (20,11)=6  (20,17)=5# (20,23)=5# (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,5)=6  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,11)=6  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,17)=5# (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,23)=5# (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,5)=6  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,11)=6  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,17)=5# (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,23)=5# (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (23,5)=6  (23,6)=6  (23,7)=6  (23,8)=6  (23,9)=6  (23,10)=6  (23,11)=6  (23,12)=5# (23,13)=5# (23,14)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,18)=5# (23,19)=5# (23,20)=5# (23,21)=5# (23,22)=5# (23,23)=5# (23,24)=5# (23,25)=5# (23,26)=5# (23,27)=5# (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,11)=5# (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,17)=5# (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,23)=5# (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,11)=5# (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,17)=5# (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,23)=5# (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (26,11)=5# (26,17)=5# (26,23)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,11)=5# (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,17)=5# (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,23)=5# (27,24)=8  (27,25)=1  (27,27)=1 
   (0.0 bits)
data: a background with size (7,7) and color pink and layers
  _0: a rectangle with size (5,5) and color green and mask +-cross at (1,1)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (5,1) and color black and mask Full at (1,1)
  _0111: a rectangle with size (5,1) and color blue and mask Full at (1,2)
  _01111: a rectangle with size (5,1) and color cyan and mask Full at (1,4)
  _011111: a rectangle with size (5,1) and color black and mask Full at (1,5)
diff: 
delta:
   (218.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color green and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,5)=5# (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,11)=5# (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,17)=5# (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,23)=5# (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,5)=5# (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,11)=5# (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,17)=5# (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,23)=5# (1,24)=8  (1,25)=0  (1,27)=1  (2,5)=5# (2,11)=5# (2,17)=5# (2,23)=5# (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,5)=5# (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,11)=5# (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,17)=5# (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,23)=5# (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,5)=5# (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,11)=5# (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,17)=5# (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,23)=5# (4,24)=8  (4,25)=8  (4,27)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (5,11)=5# (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (5,16)=5# (5,17)=5# (5,18)=5# (5,19)=5# (5,20)=5# (5,21)=5# (5,22)=5# (5,23)=5# (5,24)=5# (5,25)=5# (5,26)=5# (5,27)=5# (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,5)=5# (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,11)=5# (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,17)=5# (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,23)=5# (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,5)=5# (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,11)=5# (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,17)=5# (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,23)=5# (7,24)=8  (7,25)=1  (7,27)=1  (8,5)=5# (8,11)=5# (8,17)=5# (8,23)=5# (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,5)=5# (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,11)=5# (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,17)=5# (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,23)=5# (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,5)=5# (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,11)=5# (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,17)=5# (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,23)=5# (10,24)=8  (10,25)=0  (10,27)=1  (11,0)=5# (11,1)=5# (11,2)=5# (11,3)=5# (11,4)=5# (11,5)=5# (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=5# (11,11)=5# (11,12)=5# (11,13)=5# (11,14)=5# (11,15)=5# (11,16)=5# (11,17)=5# (11,18)=5# (11,19)=5# (11,20)=5# (11,21)=5# (11,22)=5# (11,23)=5# (11,24)=5# (11,25)=5# (11,26)=5# (11,27)=5# (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,5)=5# (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,11)=5# (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,17)=5# (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,23)=5# (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,5)=5# (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,11)=5# (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,17)=5# (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,23)=5# (13,24)=8  (13,25)=0  (13,27)=1  (14,5)=5# (14,11)=5# (14,17)=5# (14,23)=5# (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,5)=5# (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,11)=5# (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,17)=5# (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,23)=5# (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,5)=5# (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,11)=5# (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,17)=5# (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,23)=5# (16,24)=8  (16,25)=0  (16,27)=1  (17,0)=5# (17,1)=5# (17,2)=5# (17,3)=5# (17,4)=5# (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=5# (17,13)=5# (17,14)=5# (17,15)=5# (17,16)=5# (17,17)=5# (17,18)=5# (17,19)=5# (17,20)=5# (17,21)=5# (17,22)=5# (17,23)=5# (17,24)=5# (17,25)=5# (17,26)=5# (17,27)=5# (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,5)=6  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,11)=6  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,17)=5# (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,23)=5# (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,5)=6  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,11)=6  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,17)=5# (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,23)=5# (19,24)=8  (19,25)=8  (19,27)=8  (20,5)=6  (20,11)=6  (20,17)=5# (20,23)=5# (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,5)=6  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,11)=6  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,17)=5# (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,23)=5# (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,5)=6  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,11)=6  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,17)=5# (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,23)=5# (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (23,5)=6  (23,6)=6  (23,7)=6  (23,8)=6  (23,9)=6  (23,10)=6  (23,11)=6  (23,12)=5# (23,13)=5# (23,14)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,18)=5# (23,19)=5# (23,20)=5# (23,21)=5# (23,22)=5# (23,23)=5# (23,24)=5# (23,25)=5# (23,26)=5# (23,27)=5# (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,11)=5# (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,17)=5# (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,23)=5# (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,11)=5# (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,17)=5# (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,23)=5# (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (26,11)=5# (26,17)=5# (26,23)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,11)=5# (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,17)=5# (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,23)=5# (27,24)=8  (27,25)=1  (27,27)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color yellow and layers
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=1  (0,3)=2  (0,4)=3  (0,6)=0  (0,7)=2  (0,8)=1  (0,9)=3  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=3  (0,15)=2  (0,16)=0  (0,18)=0  (0,19)=3  (0,20)=1  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=1  (1,3)=2  (1,4)=3  (1,6)=0  (1,7)=2  (1,8)=1  (1,9)=3  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=3  (1,15)=2  (1,16)=0  (1,18)=0  (1,19)=3  (1,20)=1  (1,21)=0  (1,22)=0  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,4)=3  (2,6)=1  (2,7)=2  (2,8)=1  (2,9)=3  (2,10)=1  (2,12)=1  (2,13)=1  (2,14)=3  (2,15)=2  (2,16)=1  (2,18)=1  (2,19)=3  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=3  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=3  (3,10)=2  (3,12)=2  (3,13)=2  (3,14)=3  (3,15)=2  (3,16)=2  (3,18)=2  (3,19)=3  (3,20)=2  (3,21)=2  (3,22)=2  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=3  (4,20)=3  (4,21)=3  (4,22)=3  (6,0)=0  (6,1)=0  (6,2)=1  (6,3)=2  (6,4)=3  (6,6)=0  (6,7)=2  (6,8)=1  (6,9)=3  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=3  (6,15)=2  (6,16)=0  (6,18)=0  (6,19)=3  (6,20)=1  (6,21)=0  (6,22)=0  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=3  (7,6)=2  (7,7)=2  (7,8)=2  (7,9)=3  (7,10)=2  (7,12)=2  (7,13)=2  (7,14)=3  (7,15)=2  (7,16)=2  (7,18)=2  (7,19)=3  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,4)=3  (8,6)=1  (8,7)=2  (8,8)=1  (8,9)=3  (8,10)=1  (8,12)=1  (8,13)=1  (8,14)=3  (8,15)=2  (8,16)=1  (8,18)=1  (8,19)=3  (8,20)=1  (8,21)=1  (8,22)=1  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,18)=3  (9,19)=3  (9,20)=3  (9,21)=3  (9,22)=3  (10,0)=0  (10,1)=0  (10,2)=1  (10,3)=2  (10,4)=3  (10,6)=0  (10,7)=2  (10,8)=1  (10,9)=3  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=3  (10,15)=2  (10,16)=0  (10,18)=0  (10,19)=3  (10,20)=1  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=1  (12,3)=2  (12,4)=3  (12,6)=0  (12,7)=2  (12,8)=1  (12,9)=3  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=3  (12,15)=2  (12,16)=0  (12,18)=0  (12,19)=3  (12,20)=1  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=1  (13,3)=2  (13,4)=3  (13,6)=0  (13,7)=2  (13,8)=1  (13,9)=3  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=3  (13,15)=2  (13,16)=0  (13,18)=0  (13,19)=3  (13,20)=1  (13,21)=0  (13,22)=0  (14,0)=3  (14,1)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3  (14,14)=8  (14,15)=8  (14,16)=8  (14,17)=8  (14,18)=8  (14,19)=8  (14,20)=3  (14,21)=3  (14,22)=3  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=3  (15,6)=2  (15,7)=2  (15,8)=2  (15,9)=3  (15,10)=2  (15,12)=2  (15,13)=2  (15,14)=8  (15,15)=2  (15,16)=2  (15,18)=2  (15,19)=8  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=0  (16,1)=0  (16,2)=1  (16,3)=2  (16,4)=3  (16,6)=0  (16,7)=2  (16,8)=1  (16,9)=3  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=8  (16,15)=2  (16,16)=0  (16,18)=0  (16,19)=8  (16,20)=1  (16,21)=0  (16,22)=0  (17,14)=8  (17,19)=8  (18,0)=0  (18,1)=0  (18,2)=1  (18,3)=2  (18,4)=3  (18,6)=0  (18,7)=2  (18,8)=1  (18,9)=3  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=8  (18,15)=2  (18,16)=0  (18,18)=0  (18,19)=8  (18,20)=1  (18,21)=0  (18,22)=0  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,14)=8  (19,15)=8  (19,16)=8  (19,17)=8  (19,18)=8  (19,19)=8  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,4)=3  (20,6)=1  (20,7)=2  (20,8)=1  (20,9)=3  (20,10)=1  (20,12)=1  (20,13)=1  (20,14)=3  (20,15)=2  (20,16)=1  (20,18)=1  (20,19)=3  (20,20)=1  (20,21)=1  (20,22)=1  (21,0)=0  (21,1)=0  (21,2)=1  (21,3)=2  (21,4)=3  (21,6)=0  (21,7)=2  (21,8)=1  (21,9)=3  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=3  (21,15)=2  (21,16)=0  (21,18)=0  (21,19)=3  (21,20)=1  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=1  (22,3)=2  (22,4)=3  (22,6)=0  (22,7)=2  (22,8)=1  (22,9)=3  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=3  (22,15)=2  (22,16)=0  (22,18)=0  (22,19)=3  (22,20)=1  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 6x6

TEST c909285e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 8297.2 bits (8297.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-90] Checking task c9e6f938.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2921.2 = 2933.8
DL output with Mo: L = 12.6 + 5524.3 = 5537.0
DL input+output M: L = 25.2 + 8445.5 = 8470.7

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = unfoldSym( [ id flipWidth ], ^.grid)
0.465	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	IN  SPE ^.layer_0.shape.color = orange
0.383	IN  SPE ^.color = black
0.017	
0.007	IN  DEL ^.layer_0
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1073.9 = 1116.2
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 56.2 + 1073.9 = 1130.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ], ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 13.9 + 0.0 = 13.9
DL input+output M: L = 26.5 + 0.0 = 26.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=7# (1,2)=7# (2,1)=7# (2,2)=7#
   (0.0 bits)
data: 
0 7#0 0 7#0 
0 0 7#7#0 0 
0 7#7#7#7#0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=7# (1,2)=7# (2,1)=7# (2,2)=7#
correct output grid

TRAIN c9e6f938.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,1)=7# (1,2)=7#
   (0.0 bits)
data: 
0 0 0 0 0 0 
0 7#7#7#7#0 
0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,1)=7# (1,2)=7#
correct output grid

TRAIN c9e6f938.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=7#
   (0.0 bits)
data: 
0 0 0 0 0 0 
7#0 0 0 0 7#
0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=7#
correct output grid

TRAIN c9e6f938.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=7# (0,1)=7# (1,1)=7# (2,2)=7#
correct output grid

TEST c9e6f938.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-89] Checking task c9f8e694.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 45268.3 = 45280.9
DL output with Mo: L = 12.6 + 50865.5 = 50878.1
DL input+output M: L = 25.2 + 96133.8 = 96159.0

# learning a model for train pairs
2.000	
1.522	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.225	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.620	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.521	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.445	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	OUT ADD ^.layer_01110 = ^.layer_0111
0.332	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.311	IN  ADD ^.layer_01110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.302	OUT SPE ^.size = ^.size
0.294	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j
0.288	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.279	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.136	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos
  _01110: ^.layer_0111
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 6508.2 = 6647.1
DL output with Mo: L = 164.0 + 6539.9 = 6703.9
DL input+output M: L = 302.9 + 13048.1 = 13351.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos
  _01110: ^.layer_0111
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 31.7 = 170.6
DL output with Mo: L = 164.0 + 6539.9 = 6703.9
DL input+output M: L = 302.9 + 6571.6 = 6874.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,2) and color grey and mask Border at (1,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (5,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (9,4)
  _01110: a rectangle with size (2,1) and color red and mask Full at (6,0)
  _0111: a rectangle with size (10,1) and color blue and mask Full at (1,0)
diff: 
delta: (2,0)=2  (11,0)=2 
   (3.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,2) and color blue and mask Border at (1,2)
  _01: a rectangle with size (3,2) and color blue and mask Full at (8,8)
  _011: a rectangle with size (2,3) and color blue and mask Full at (9,4)
  _01110: a rectangle with size (10,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (6,2) and color red and mask Full at (6,8)
  _01111: a rectangle with size (2,2) and color red and mask Full at (6,2)
  _011111: a rectangle with size (1,3) and color red and mask Full at (11,4)
diff: 
delta: (2,0)=2  (2,2)=2  (2,3)=2  (5,8)=1  (5,9)=1  (6,0)=2  (7,0)=2  (11,0)=2 
   (474.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,2) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (5,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (9,4)
  _01110: a rectangle with size (2,1) and color red and mask Full at (6,0)
  _0111: a rectangle with size (10,1) and color blue and mask Full at (1,0)
diff: 
delta: (2,0)=2  (11,0)=2 
! 45 wrong pixels (generated / expected)

TRAIN c9f8e694.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,5) and color black and mask Full at (10,7)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,0)
  _01110: a rectangle with size (9,1) and color green and mask Full at (1,0)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (10,0)
diff: 
delta: (6,0)=4 
   (0.0 bits)
data: a background with size (12,12) and color green and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,5) and color black and mask Full at (10,7)
  _011: a rectangle with size (2,12) and color yellow and mask Full at (3,0)
  _01110: a rectangle with size (2,1) and color yellow and mask Full at (10,0)
  _0111: a rectangle with size (1,8) and color yellow and mask Full at (6,4)
  _01111: a rectangle with size (2,3) and color yellow and mask Full at (10,4)
  _011111: a rectangle with size (1,1) and color yellow and mask Full at (6,0)
diff: 
delta:
   (179.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,5) and color black and mask Full at (10,7)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,0)
  _01110: a rectangle with size (9,1) and color green and mask Full at (1,0)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (10,0)
diff: 
delta: (6,0)=4 
! 88 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,5) and color black and mask Full at (10,7)
  _011: a rectangle with size (3,1) and color green and mask Full at (7,0)
  _01110: a rectangle with size (9,1) and color yellow and mask Full at (3,0)
  _0111: a rectangle with size (2,1) and color green and mask Full at (1,0)
diff: 
delta: (5,0)=3 
! 91 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,5) and color black and mask Full at (10,7)
  _011: a rectangle with size (3,1) and color green and mask Full at (7,0)
  _01110: a rectangle with size (2,1) and color green and mask Full at (1,0)
  _0111: a rectangle with size (9,1) and color yellow and mask Full at (3,0)
diff: 
delta: (5,0)=3 
! 87 wrong pixels (generated / expected)

TRAIN c9f8e694.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,5) and color black and mask x....|x....|x....|x....|x....|x....|xxxxx|xxxxx|xxxxx|x...x|x...x|x...x at (0,1)
  _01: a rectangle with size (5,3) and color black and mask Full at (7,9)
  _011: a rectangle with size (6,4) and color black and mask xxxx|xxxx|xxxx|x...|x...|x... at (0,8)
  _01110: a rectangle with size (4,1) and color orange and mask Full at (4,0)
  _0111: a rectangle with size (11,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,0)=1  (2,0)=1  (3,0)=1 
! 89 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,5) and color black and mask x....|x....|x....|x....|x....|x....|xxxxx|xxxxx|xxxxx|x...x|x...x|x...x at (0,1)
  _01: a rectangle with size (6,4) and color black and mask xxxx|xxxx|xxxx|x...|x...|x... at (0,8)
  _011: a rectangle with size (5,3) and color black and mask Full at (7,9)
  _01110: a rectangle with size (4,1) and color orange and mask Full at (4,0)
  _0111: a rectangle with size (11,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,0)=1  (2,0)=1  (3,0)=1 
! 89 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,5) and color black and mask x....|x....|x....|x....|x....|x....|xxxxx|xxxxx|xxxxx|x...x|x...x|x...x at (0,1)
  _01: a rectangle with size (6,4) and color black and mask xxxx|xxxx|xxxx|x...|x...|x... at (0,8)
  _011: a rectangle with size (4,1) and color orange and mask Full at (4,0)
  _01110: a rectangle with size (5,3) and color black and mask Full at (7,9)
  _0111: a rectangle with size (11,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,0)=1  (2,0)=1  (3,0)=1 
! 87 wrong pixels (generated / expected)

TEST c9f8e694.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 6539.9 bits (6539.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-88] Checking task caa06a1f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41961.1 = 41973.8
DL output with Mo: L = 12.6 + 41731.8 = 41744.4
DL input+output M: L = 25.2 + 83692.9 = 83718.1

# learning a model for train pairs
2.000	
1.051	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.150	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.137	OUT SPE ^.size = ^.size
0.124	OUT SPE ^.layer_0.shape.size = ^.size
0.116	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.110	OUT SPE ^.color = ^.layer_0.shape.color
0.104	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.099	IN  SPE ^.layer_0.shape.mask = Odd Checkboard
0.007	
0.006	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 69.5 + 3860.3 = 3929.8
DL output with Mo: L = 45.1 + 169.3 = 214.4
DL input+output M: L = 114.7 + 4029.6 = 4144.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)

DL input  with Mi: L = 44.2 + 0.0 = 44.2
DL output with Mo: L = 45.1 + 169.3 = 214.4
DL input+output M: L = 89.3 + 169.3 = 258.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color orange and mask Odd Checkboard at (0,0)
diff: 
delta: (0,0)=6  (0,2)=6  (0,4)=6  (0,6)=6  (1,1)=6  (1,3)=6  (1,5)=6  (2,0)=6  (2,2)=6  (2,4)=6  (2,6)=6  (3,1)=6  (3,3)=6  (3,5)=6  (4,0)=6  (4,2)=6  (4,4)=6  (4,6)=6  (5,1)=6  (5,3)=6  (5,5)=6  (6,0)=6  (6,2)=6  (6,4)=6  (6,6)=6 
   (0.0 bits)
data: a background with size (11,11) and color orange and layers
  _0: a rectangle with size (11,11) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color pink and mask Full at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,1)=7# (0,3)=7# (0,5)=7# (1,0)=7# (1,2)=7# (1,4)=7# (1,6)=7# (2,1)=7# (2,3)=7# (2,5)=7# (3,0)=7# (3,2)=7# (3,4)=7# (3,6)=7# (4,1)=7# (4,3)=7# (4,5)=7# (5,0)=7# (5,2)=7# (5,4)=7# (5,6)=7# (6,1)=7# (6,3)=7# (6,5)=7#
! 121 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color pink and mask Even Checkboard at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,1)=7# (0,3)=7# (0,5)=7# (1,0)=7# (1,2)=7# (1,4)=7# (1,6)=7# (2,1)=7# (2,3)=7# (2,5)=7# (3,0)=7# (3,2)=7# (3,4)=7# (3,6)=7# (4,1)=7# (4,3)=7# (4,5)=7# (5,0)=7# (5,2)=7# (5,4)=7# (5,6)=7# (6,1)=7# (6,3)=7# (6,5)=7#
! 61 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color orange and mask Odd Checkboard at (0,0)
diff: 
delta: (0,0)=6  (0,2)=6  (0,4)=6  (0,6)=6  (1,1)=6  (1,3)=6  (1,5)=6  (2,0)=6  (2,2)=6  (2,4)=6  (2,6)=6  (3,1)=6  (3,3)=6  (3,5)=6  (4,0)=6  (4,2)=6  (4,4)=6  (4,6)=6  (5,1)=6  (5,3)=6  (5,5)=6  (6,0)=6  (6,2)=6  (6,4)=6  (6,6)=6 
! 60 wrong pixels (generated / expected)

TRAIN caa06a1f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color pink and layers
  _0: a rectangle with size (7,7) and color green and mask Odd Checkboard at (0,0)
diff: 
delta: (0,7)=1  (1,7)=1  (2,7)=1  (3,7)=1  (4,7)=1  (5,7)=1  (6,7)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1 
   (0.0 bits)
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (8,8) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color pink and layers
  _0: a rectangle with size (7,7) and color green and mask Odd Checkboard at (0,0)
diff: 
delta: (0,7)=1  (1,7)=1  (2,7)=1  (3,7)=1  (4,7)=1  (5,7)=1  (6,7)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (7,7) and color pink and mask Even Checkboard at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,7)=1  (1,7)=1  (2,7)=1  (3,7)=1  (4,7)=1  (5,7)=1  (6,7)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (7,7) and color pink and mask x.x.x.x|.x.x.x.|x.x.x.x|.x.x.x.|x.x.x.x|.x.x.x.|x.x.x.x at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,7)=1  (1,7)=1  (2,7)=1  (3,7)=1  (4,7)=1  (5,7)=1  (6,7)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1 
! 32 wrong pixels (generated / expected)

TRAIN caa06a1f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,6) and color grey and layers
  _0: a rectangle with size (5,5) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta: (0,5)=6  (1,5)=6  (2,5)=6  (3,5)=6  (4,5)=6  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
   (0.0 bits)
data: a background with size (6,6) and color yellow and layers
  _0: a rectangle with size (6,6) and color grey and mask Odd Checkboard at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color grey and layers
  _0: a rectangle with size (5,5) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta: (0,5)=6  (1,5)=6  (2,5)=6  (3,5)=6  (4,5)=6  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color yellow and layers
  _0: a rectangle with size (5,5) and color grey and mask Even Checkboard at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,5)=6  (1,5)=6  (2,5)=6  (3,5)=6  (4,5)=6  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color yellow and layers
  _0: a rectangle with size (5,5) and color grey and mask x.x.x|.x.x.|x.x.x|.x.x.|x.x.x at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,5)=6  (1,5)=6  (2,5)=6  (3,5)=6  (4,5)=6  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
! 18 wrong pixels (generated / expected)

TRAIN caa06a1f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (12,2) and color grey and mask Odd Checkboard at (0,0)
diff: 
delta: (0,0)=8  (0,2)=7# (0,3)=8  (0,4)=5# (0,5)=7# (0,6)=8  (0,7)=5# (0,8)=7# (0,9)=8  (0,10)=5# (0,11)=7# (1,1)=7# (1,2)=8  (1,3)=5# (1,4)=7# (1,5)=8  (1,6)=5# (1,7)=7# (1,8)=8  (1,9)=5# (1,10)=7# (1,11)=8  (2,0)=8  (2,2)=7# (2,3)=8  (2,4)=5# (2,5)=7# (2,6)=8  (2,7)=5# (2,8)=7# (2,9)=8  (2,10)=5# (2,11)=7# (3,1)=7# (3,2)=8  (3,3)=5# (3,4)=7# (3,5)=8  (3,6)=5# (3,7)=7# (3,8)=8  (3,9)=5# (3,10)=7# (3,11)=8  (4,0)=8  (4,2)=7# (4,3)=8  (4,4)=5# (4,5)=7# (4,6)=8  (4,7)=5# (4,8)=7# (4,9)=8  (4,10)=5# (4,11)=7# (5,1)=7# (5,2)=8  (5,3)=5# (5,4)=7# (5,5)=8  (5,6)=5# (5,7)=7# (5,8)=8  (5,9)=5# (5,10)=7# (5,11)=8  (6,0)=8  (6,2)=7# (6,3)=8  (6,4)=5# (6,5)=7# (6,6)=8  (6,7)=5# (6,8)=7# (6,9)=8  (6,10)=5# (6,11)=7# (7,1)=7# (7,2)=8  (7,3)=5# (7,4)=7# (7,5)=8  (7,6)=5# (7,7)=7# (7,8)=8  (7,9)=5# (7,10)=7# (7,11)=8  (8,0)=8  (8,2)=7# (8,3)=8  (8,4)=5# (8,5)=7# (8,6)=8  (8,7)=5# (8,8)=7# (8,9)=8  (8,10)=5# (8,11)=7# (9,1)=7# (9,2)=8  (9,3)=5# (9,4)=7# (9,5)=8  (9,6)=5# (9,7)=7# (9,8)=8  (9,9)=5# (9,10)=7# (9,11)=8  (10,0)=8  (10,2)=7# (10,3)=8  (10,4)=5# (10,5)=7# (10,6)=8  (10,7)=5# (10,8)=7# (10,9)=8  (10,10)=5# (10,11)=7# (11,1)=7# (11,2)=8  (11,3)=5# (11,4)=7# (11,5)=8  (11,6)=5# (11,7)=7# (11,8)=8  (11,9)=5# (11,10)=7# (11,11)=8 
! 270 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (12,2) and color orange and mask Odd Checkboard at (0,1)
diff: 
delta: (0,0)=8  (0,1)=5# (0,3)=8  (0,4)=5# (0,5)=7# (0,6)=8  (0,7)=5# (0,8)=7# (0,9)=8  (0,10)=5# (0,11)=7# (1,0)=5# (1,2)=8  (1,3)=5# (1,4)=7# (1,5)=8  (1,6)=5# (1,7)=7# (1,8)=8  (1,9)=5# (1,10)=7# (1,11)=8  (2,0)=8  (2,1)=5# (2,3)=8  (2,4)=5# (2,5)=7# (2,6)=8  (2,7)=5# (2,8)=7# (2,9)=8  (2,10)=5# (2,11)=7# (3,0)=5# (3,2)=8  (3,3)=5# (3,4)=7# (3,5)=8  (3,6)=5# (3,7)=7# (3,8)=8  (3,9)=5# (3,10)=7# (3,11)=8  (4,0)=8  (4,1)=5# (4,3)=8  (4,4)=5# (4,5)=7# (4,6)=8  (4,7)=5# (4,8)=7# (4,9)=8  (4,10)=5# (4,11)=7# (5,0)=5# (5,2)=8  (5,3)=5# (5,4)=7# (5,5)=8  (5,6)=5# (5,7)=7# (5,8)=8  (5,9)=5# (5,10)=7# (5,11)=8  (6,0)=8  (6,1)=5# (6,3)=8  (6,4)=5# (6,5)=7# (6,6)=8  (6,7)=5# (6,8)=7# (6,9)=8  (6,10)=5# (6,11)=7# (7,0)=5# (7,2)=8  (7,3)=5# (7,4)=7# (7,5)=8  (7,6)=5# (7,7)=7# (7,8)=8  (7,9)=5# (7,10)=7# (7,11)=8  (8,0)=8  (8,1)=5# (8,3)=8  (8,4)=5# (8,5)=7# (8,6)=8  (8,7)=5# (8,8)=7# (8,9)=8  (8,10)=5# (8,11)=7# (9,0)=5# (9,2)=8  (9,3)=5# (9,4)=7# (9,5)=8  (9,6)=5# (9,7)=7# (9,8)=8  (9,9)=5# (9,10)=7# (9,11)=8  (10,0)=8  (10,1)=5# (10,3)=8  (10,4)=5# (10,5)=7# (10,6)=8  (10,7)=5# (10,8)=7# (10,9)=8  (10,10)=5# (10,11)=7# (11,0)=5# (11,2)=8  (11,3)=5# (11,4)=7# (11,5)=8  (11,6)=5# (11,7)=7# (11,8)=8  (11,9)=5# (11,10)=7# (11,11)=8 
! 270 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (12,2) and color cyan and mask Odd Checkboard at (0,2)
diff: 
delta: (0,0)=8  (0,1)=5# (0,2)=7# (0,4)=5# (0,5)=7# (0,6)=8  (0,7)=5# (0,8)=7# (0,9)=8  (0,10)=5# (0,11)=7# (1,0)=5# (1,1)=7# (1,3)=5# (1,4)=7# (1,5)=8  (1,6)=5# (1,7)=7# (1,8)=8  (1,9)=5# (1,10)=7# (1,11)=8  (2,0)=8  (2,1)=5# (2,2)=7# (2,4)=5# (2,5)=7# (2,6)=8  (2,7)=5# (2,8)=7# (2,9)=8  (2,10)=5# (2,11)=7# (3,0)=5# (3,1)=7# (3,3)=5# (3,4)=7# (3,5)=8  (3,6)=5# (3,7)=7# (3,8)=8  (3,9)=5# (3,10)=7# (3,11)=8  (4,0)=8  (4,1)=5# (4,2)=7# (4,4)=5# (4,5)=7# (4,6)=8  (4,7)=5# (4,8)=7# (4,9)=8  (4,10)=5# (4,11)=7# (5,0)=5# (5,1)=7# (5,3)=5# (5,4)=7# (5,5)=8  (5,6)=5# (5,7)=7# (5,8)=8  (5,9)=5# (5,10)=7# (5,11)=8  (6,0)=8  (6,1)=5# (6,2)=7# (6,4)=5# (6,5)=7# (6,6)=8  (6,7)=5# (6,8)=7# (6,9)=8  (6,10)=5# (6,11)=7# (7,0)=5# (7,1)=7# (7,3)=5# (7,4)=7# (7,5)=8  (7,6)=5# (7,7)=7# (7,8)=8  (7,9)=5# (7,10)=7# (7,11)=8  (8,0)=8  (8,1)=5# (8,2)=7# (8,4)=5# (8,5)=7# (8,6)=8  (8,7)=5# (8,8)=7# (8,9)=8  (8,10)=5# (8,11)=7# (9,0)=5# (9,1)=7# (9,3)=5# (9,4)=7# (9,5)=8  (9,6)=5# (9,7)=7# (9,8)=8  (9,9)=5# (9,10)=7# (9,11)=8  (10,0)=8  (10,1)=5# (10,2)=7# (10,4)=5# (10,5)=7# (10,6)=8  (10,7)=5# (10,8)=7# (10,9)=8  (10,10)=5# (10,11)=7# (11,0)=5# (11,1)=7# (11,3)=5# (11,4)=7# (11,5)=8  (11,6)=5# (11,7)=7# (11,8)=8  (11,9)=5# (11,10)=7# (11,11)=8 
! 270 wrong pixels (generated / expected)

TEST caa06a1f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 169.3 bits (169.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-87] Checking task cbded52d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36210.4 = 36223.0
DL output with Mo: L = 12.6 + 38644.0 = 38656.6
DL input+output M: L = 25.2 + 74854.4 = 74879.6

# learning a model for train pairs
2.000	
1.236	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.442	OUT ADD ^.layer_0 = ^.layer_0
0.385	IN  SPE ^.layer_0.shape.mask = ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..
0.368	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.340	OUT ADD ^.layer_01 = ^.layer_01
0.320	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.299	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.282	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.268	OUT SPE ^.size = ^.size
0.260	IN  SPE ^.color = blue
0.253	OUT SPE ^.layer_011.pos = max(^.layer_01.pos, ^.layer_011.pos) - translationSym(flipHeight, ^.layer_011, ^.layer_01)
0.246	OUT SPE ^.color = ^.color
0.242	IN  SPE ^.layer_0.shape.color = black
0.240	OUT SPE ^.layer_010.pos.j = average(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_011.pos.i - ^.layer_01.pos.i
0.110	
0.108	IN  GEN ^.layer_0.shape.mask = ?
0.108	IN  GEN ^.color = ?
0.108	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,average(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_011.pos.i - ^.layer_01.pos.i)
  _01: ^.layer_01
  _011: ^.layer_01.shape at max(^.layer_01.pos, ^.layer_011.pos) - translationSym(flipHeight, ^.layer_011, ^.layer_01)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 149.0 + 4687.7 = 4836.7
DL output with Mo: L = 188.8 + 3917.2 = 4106.0
DL input+output M: L = 337.8 + 8604.9 = 8942.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,average(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_011.pos.i - ^.layer_01.pos.i)
  _01: ^.layer_01
  _011: ^.layer_01.shape at max(^.layer_01.pos, ^.layer_011.pos) - translationSym(flipHeight, ^.layer_011, ^.layer_01)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 0.0 = 70.7
DL output with Mo: L = 188.8 + 3917.2 = 4106.0
DL input+output M: L = 259.5 + 3917.2 = 4176.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color yellow at (0,1)
  _011: a point with color yellow at (0,7)
diff: 
delta: (4,0)=2  (4,6)=2  (6,1)=4 
   (0.0 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _010: a point with color yellow at (0,4)
  _01: a point with color yellow at (0,1)
  _011: a point with color yellow at (0,7)
diff: 
delta: (3,1)=4  (4,0)=2  (4,3)=2  (4,6)=2  (6,1)=4 
   (193.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color yellow at (0,1)
  _011: a point with color yellow at (0,7)
diff: 
delta: (4,0)=2  (4,6)=2  (6,1)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color yellow at (0,7)
  _011: a point with color yellow at (0,1)
diff: 
delta: (4,0)=2  (4,6)=2  (6,1)=4 
! 6 wrong pixels (generated / expected)

TRAIN cbded52d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color orange at (0,3)
  _011: a point with color green at (1,1)
diff: 
delta: (1,7)=3  (6,3)=7# (7,7)=3 
   (0.0 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _010: a point with color orange at (6,3)
  _01: a point with color orange at (0,3)
  _011: a point with color orange at (3,3)
diff: 
delta: (1,1)=3  (1,4)=3  (1,7)=3  (4,7)=3  (7,7)=3 
   (193.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color orange at (0,3)
  _011: a point with color green at (1,1)
diff: 
delta: (1,7)=3  (6,3)=7# (7,7)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color orange at (0,3)
  _011: a point with color green at (1,7)
diff: 
delta: (1,1)=3  (6,3)=7# (7,7)=3 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color green at (1,1)
  _011: a point with color orange at (0,3)
diff: 
delta: (1,7)=3  (6,3)=7# (7,7)=3 
! 8 wrong pixels (generated / expected)

TRAIN cbded52d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color green at (4,0)
  _011: a point with color green at (4,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _010: a point with color green at (4,3)
  _01: a point with color green at (4,0)
  _011: a point with color green at (4,6)
diff: 
delta:
   (5.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color green at (4,0)
  _011: a point with color green at (4,6)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color green at (4,6)
  _011: a point with color green at (4,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN cbded52d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color cyan at (1,7)
diff: 
delta: (6,0)=6  (6,6)=6  (7,7)=8 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
  _01: a point with color cyan at (1,7)
  _011: a point with color cyan at (1,1)
diff: 
delta: (6,0)=6  (6,6)=6  (7,7)=8 
! 8 wrong pixels (generated / expected)

TEST cbded52d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 3917.2 bits (3917.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-86] Checking task cce03e0d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5397.7 = 5410.3
DL output with Mo: L = 12.6 + 16356.3 = 16368.9
DL input+output M: L = 25.2 + 21754.0 = 21779.2

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = compose(red, ^.grid, ^.grid)
0.630	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.482	IN  SPE ^.layer_0.shape.color = blue
0.462	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.015	
0.010	IN  DEL ^.layer_0
0.007	IN  DEL ^.layer_011
0.004	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(red, ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 74.0 + 2415.4 = 2489.4
DL output with Mo: L = 26.6 + 0.0 = 26.6
DL input+output M: L = 100.6 + 2415.4 = 2515.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(red, ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 26.6 + 0.0 = 26.6
DL input+output M: L = 39.2 + 0.0 = 39.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (1,0)=2  (1,1)=1  (2,2)=1 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 
2 1 0 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,0)=1  (1,0)=2  (1,1)=1  (2,2)=1 
correct output grid

TRAIN cce03e0d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (0,2)=2  (1,0)=1  (1,1)=1  (2,0)=2 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 1 2 
0 0 0 0 0 0 1 1 0 
0 0 0 0 0 0 2 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 
0 1 2 0 0 0 0 0 0 
1 1 0 0 0 0 0 0 0 
2 0 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (0,1)=1  (0,2)=2  (1,0)=1  (1,1)=1  (2,0)=2 
correct output grid

TRAIN cce03e0d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=1  (1,0)=0  (1,2)=1  (2,1)=1  (2,2)=0 
   (0.0 bits)
data: 
2 1 2 0 0 0 2 1 2 
0 2 1 0 0 0 0 2 1 
2 1 0 0 0 0 2 1 0 
0 0 0 2 1 2 0 0 0 
0 0 0 0 2 1 0 0 0 
0 0 0 2 1 0 0 0 0 
2 1 2 0 0 0 0 0 0 
0 2 1 0 0 0 0 0 0 
2 1 0 0 0 0 0 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=1  (1,0)=0  (1,2)=1  (2,1)=1  (2,2)=0 
correct output grid

TRAIN cce03e0d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,0)=1  (1,1)=0  (1,2)=1  (2,0)=1  (2,2)=0 
correct output grid

TEST cce03e0d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-85] Checking task cdecee7f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9035.0 = 9047.6
DL output with Mo: L = 12.6 + 7446.7 = 7459.3
DL input+output M: L = 25.2 + 16481.7 = 16506.9

# learning a model for train pairs
2.000	
1.917	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.836	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.754	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.672	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.588	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.502	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.435	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.369	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.301	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.234	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.166	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.096	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.045	OUT SPE ^.size = '(3, 3)
1.014	OUT SPE ^.layer_01111.pos = '(1, 1)
0.983	OUT SPE ^.layer_01.pos = '(0, 1)
0.953	OUT SPE ^.layer_011.pos = '(0, 2)
0.931	OUT SPE ^.layer_011111.shape = ^.layer_01.shape
0.899	OUT SPE ^.layer_0111.pos = '(0, 0)
0.877	OUT SPE ^.layer_0.pos = '(1, 0)
0.866	OUT SPE ^.layer_011111.pos.i = min(^.layer_0.pos.j, ^.layer_01.pos.j)
0.857	OUT SPE ^.layer_011111.pos.j = min(^.layer_01.pos.j, ^.layer_01111.pos.j) / '2
0.849	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i
0.841	IN  SPE ^.color = black
0.833	OUT SPE ^.layer_0.shape.size.j = area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i
0.259	
0.257	IN  DEL ^.layer_011111
0.257	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i,area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i) and color ? and mask ? at '(1, 0)
  _01: a point with color ? at '(0, 1)
  _011: a point with color ? at '(0, 2)
  _0111: a point with color ? at '(0, 0)
  _01111: a point with color ? at '(1, 1)
  _011111: ^.layer_01.shape at (min(^.layer_0.pos.j, ^.layer_01.pos.j),min(^.layer_01.pos.j, ^.layer_01111.pos.j) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 107.9 + 5193.0 = 5301.0
DL output with Mo: L = 358.2 + 1485.4 = 1843.6
DL input+output M: L = 466.1 + 6678.4 = 7144.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i,area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_01.pos.i) and color ? and mask ? at '(1, 0)
  _01: a point with color ? at '(0, 1)
  _011: a point with color ? at '(0, 2)
  _0111: a point with color ? at '(0, 0)
  _01111: a point with color ? at '(1, 1)
  _011111: ^.layer_01.shape at (min(^.layer_0.pos.j, ^.layer_01.pos.j),min(^.layer_01.pos.j, ^.layer_01111.pos.j) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 92.4 + 0.0 = 92.4
DL output with Mo: L = 358.2 + 1485.4 = 1843.6
DL input+output M: L = 450.6 + 1485.4 = 1936.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (5,6)
  _01111: a point with color brown at (7,9)
diff: 
delta: (8,2)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (1,0)
  _01: a point with color blue at (0,1)
  _011: a point with color cyan at (0,2)
  _0111: a point with color green at (0,0)
  _01111: a point with color orange at (1,1)
  _011111: a point with color pink at (1,2)
diff: 
delta:
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (5,6)
  _01111: a point with color brown at (7,9)
diff: 
delta: (8,2)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (5,6)
  _01111: a point with color cyan at (8,2)
diff: 
delta: (7,9)=9#
! 6 wrong pixels (generated / expected)

TRAIN cdecee7f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
  _011: a point with color cyan at (2,6)
  _0111: a point with color pink at (4,4)
  _01111: a point with color brown at (5,0)
diff: 
delta: (6,8)=5# (7,1)=3 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,1)
  _011: a point with color yellow at (0,2)
  _0111: a point with color brown at (0,0)
  _01111: a point with color cyan at (1,1)
  _011111: a point with color red at (2,0)
diff: 
delta: (1,2)=6 
   (69.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
  _011: a point with color cyan at (2,6)
  _0111: a point with color pink at (4,4)
  _01111: a point with color brown at (5,0)
diff: 
delta: (6,8)=5# (7,1)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
  _011: a point with color cyan at (2,6)
  _0111: a point with color pink at (4,4)
  _01111: a point with color grey at (6,8)
diff: 
delta: (5,0)=9# (7,1)=3 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
  _011: a point with color cyan at (2,6)
  _0111: a point with color brown at (5,0)
  _01111: a point with color pink at (4,4)
diff: 
delta: (6,8)=5# (7,1)=3 
! 8 wrong pixels (generated / expected)

TRAIN cdecee7f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,9)
  _01: a point with color grey at (1,2)
  _011: a point with color brown at (1,5)
  _0111: a point with color blue at (2,8)
  _01111: a point with color yellow at (3,1)
diff: 
delta: (4,7)=5# (5,4)=3  (8,0)=2  (8,6)=1 
   (0.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
  _01: a point with color yellow at (0,1)
  _011: a point with color grey at (0,2)
  _0111: a point with color red at (0,0)
  _01111: a point with color brown at (1,1)
  _011111: a point with color grey at (2,0)
diff: 
delta:
   (44.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,9)
  _01: a point with color grey at (1,2)
  _011: a point with color brown at (1,5)
  _0111: a point with color blue at (2,8)
  _01111: a point with color yellow at (3,1)
diff: 
delta: (4,7)=5# (5,4)=3  (8,0)=2  (8,6)=1 
! 9 wrong pixels (generated / expected)

TRAIN cdecee7f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color brown at (1,6)
  _011: a point with color blue at (2,9)
  _0111: a point with color red at (3,1)
  _01111: a point with color pink at (4,7)
diff: 
delta: (5,3)=3  (7,0)=5# (8,5)=4  (9,2)=9#
! 9 wrong pixels (generated / expected)

TEST cdecee7f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 31.5 sec (31.5 sec/task)
bits-train-error = 1485.4 bits (1485.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-84] Checking task ce22a75a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3103.7 = 3116.4
DL output with Mo: L = 12.6 + 23871.0 = 23883.6
DL input+output M: L = 25.2 + 26974.8 = 27000.0

# learning a model for train pairs
2.000	
1.108	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.978	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.847	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.712	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.677	IN  SPE ^.layer_0.shape.color = grey
0.642	IN  SPE ^.layer_01.shape.color = grey
0.607	IN  SPE ^.layer_011.shape.color = grey
0.590	OUT SPE ^.size = ^.size
0.574	IN  SPE ^.color = black
0.566	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (1, 1)
0.558	OUT SPE ^.layer_0.shape.size.i = ^.size.i
0.553	OUT SPE ^.layer_0.shape.color = blue
0.551	OUT SPE ^.color = black
0.091	
0.085	IN  DEL ^.layer_011
0.079	IN  DEL ^.layer_01
0.078	IN  GEN ^.layer_0.shape.color = ?
0.078	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color blue and mask ? at ^.layer_0.pos - (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)

DL input  with Mi: L = 71.5 + 1434.3 = 1505.8
DL output with Mo: L = 58.0 + 1569.5 = 1627.6
DL input+output M: L = 129.5 + 3003.8 = 3133.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color blue and mask ? at ^.layer_0.pos - (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 58.0 + 1569.5 = 1627.6
DL input+output M: L = 87.6 + 1569.5 = 1657.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta: (4,4)=5# (7,7)=5#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask xxx......|xxx......|xxx......|...xxx...|...xxx...|...xxx...|......xxx|......xxx|......xxx at (0,0)
diff: 
delta:
   (91.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta: (4,4)=5# (7,7)=5#
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,4)
diff: 
delta: (1,1)=5# (7,7)=5#
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (7,7)
diff: 
delta: (1,1)=5# (4,4)=5#
! 21 wrong pixels (generated / expected)

TRAIN ce22a75a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
diff: 
delta: (4,4)=5# (7,4)=5# (7,7)=5#
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,6) and color blue and mask xxx...|xxx...|xxx...|xxx...|xxx...|xxx...|xxxxxx|xxxxxx|xxxxxx at (0,3)
diff: 
delta:
   (65.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
diff: 
delta: (4,4)=5# (7,4)=5# (7,7)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,4)
diff: 
delta: (1,4)=5# (7,4)=5# (7,7)=5#
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (7,4)
diff: 
delta: (1,4)=5# (4,4)=5# (7,7)=5#
! 30 wrong pixels (generated / expected)

TRAIN ce22a75a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
diff: 
delta: (4,1)=5# (4,7)=5# (7,1)=5#
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,1)
diff: 
delta: (1,7)=5# (4,7)=5# (7,1)=5#
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,7)
diff: 
delta: (1,7)=5# (4,1)=5# (7,1)=5#
! 36 wrong pixels (generated / expected)

TEST ce22a75a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.0 sec (2.0 sec/task)
bits-train-error = 1569.5 bits (1569.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-83] Checking task ce4f8723.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31848.4 = 31861.1
DL output with Mo: L = 12.6 + 5599.3 = 5611.9
DL input+output M: L = 25.2 + 37447.8 = 37473.0

# learning a model for train pairs
2.000	
1.450	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.054	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.800	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.653	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.550	OUT SPE ^.size = ^.layer_0.shape.size
0.457	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.396	OUT SPE ^.layer_0.pos = '(0, 0)
0.356	OUT SPE ^.layer_0.shape.color = green
0.339	OUT SPE ^.color = black
0.332	IN  SPE ^.layer_011.shape.color = yellow
0.327	IN  SPE ^.layer_011.shape.mask = Full
0.324	IN  SPE ^.color = black
0.138	
0.137	IN  DEL ^.layer_011
0.136	IN  DEL ^.layer_01
0.136	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color green and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 93.7 + 5932.8 = 6026.5
DL output with Mo: L = 44.4 + 714.6 = 759.1
DL input+output M: L = 138.2 + 6647.4 = 6785.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color green and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 44.4 + 714.6 = 759.1
DL input+output M: L = 83.3 + 714.6 = 797.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
diff: 
delta: (0,0)=1  (0,1)=1  (1,1)=1  (1,3)=1  (2,1)=1  (3,0)=1  (3,2)=1  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|.xxx|xx..|x.xx at (0,0)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
diff: 
delta: (0,0)=1  (0,1)=1  (1,1)=1  (1,3)=1  (2,1)=1  (3,0)=1  (3,2)=1  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
diff: 
delta: (1,3)=1  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (6,2)=2  (6,3)=2  (7,0)=2  (7,1)=2  (8,2)=2  (8,3)=2 
! size mismatch, 4x3 instead of 4x4
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (0,0)=1  (0,1)=1  (1,1)=1  (1,3)=1  (2,1)=1  (3,0)=1  (3,2)=1  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (6,2)=2  (6,3)=2  (7,0)=2  (7,1)=2  (8,2)=2  (8,3)=2 
! size mismatch, 1x4 instead of 4x4

TRAIN ce4f8723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.x.x|..xx|xx.x at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,3)=2  (6,3)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (8,0)=2  (8,1)=2  (8,3)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|.x.x|xxxx|xx.x at (0,0)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.x.x|..xx|xx.x at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,3)=2  (6,3)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (8,0)=2  (8,1)=2  (8,3)=2 
! 3 wrong pixels (generated / expected)

TRAIN ce4f8723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|xxxx at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=2  (5,1)=2  (5,3)=2  (6,2)=2  (7,1)=2  (8,0)=2  (8,2)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xx.x|x.x.|xx.x|xxxx at (0,0)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|xxxx at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=2  (5,1)=2  (5,3)=2  (6,2)=2  (7,1)=2  (8,0)=2  (8,2)=2 
! 4 wrong pixels (generated / expected)

TRAIN ce4f8723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=2  (5,1)=2  (6,2)=2  (7,0)=2  (7,1)=2  (8,2)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxx.|xxxx|xxxx|.xxx at (0,0)
diff: 
delta:
   (15.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=2  (5,1)=2  (6,2)=2  (7,0)=2  (7,1)=2  (8,2)=2 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
diff: 
delta: (0,0)=1  (0,2)=1  (1,0)=1  (1,1)=1  (1,3)=1  (2,0)=1  (2,2)=1  (2,3)=1  (3,1)=1  (3,3)=1  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4 
! size mismatch, 4x3 instead of 4x4
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (0,0)=1  (0,2)=1  (1,0)=1  (1,1)=1  (1,3)=1  (2,0)=1  (2,2)=1  (2,3)=1  (3,1)=1  (3,3)=1  (5,0)=2  (5,1)=2  (6,2)=2  (7,0)=2  (7,1)=2  (8,2)=2 
! size mismatch, 1x4 instead of 4x4

TRAIN ce4f8723.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|..x.|.x.x|xxx. at (5,0)
diff: 
delta: (0,0)=1  (0,2)=1  (1,0)=1  (1,2)=1  (2,1)=1  (3,0)=1  (3,2)=1  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask x.x|x.x|.x.|x.x at (0,0)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=2  (5,1)=2  (6,2)=2  (7,1)=2  (7,3)=2  (8,0)=2  (8,1)=2  (8,2)=2 
! size mismatch, 4x3 instead of 4x4
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (0,0)=1  (0,2)=1  (1,0)=1  (1,2)=1  (2,1)=1  (3,0)=1  (3,2)=1  (5,0)=2  (5,1)=2  (6,2)=2  (7,1)=2  (7,3)=2  (8,0)=2  (8,1)=2  (8,2)=2 
! size mismatch, 1x4 instead of 4x4

TEST ce4f8723.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 714.6 bits (714.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-82] Checking task ce602527.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 85405.2 = 85417.8
DL output with Mo: L = 12.6 + 9151.4 = 9164.0
DL input+output M: L = 25.2 + 94556.6 = 94581.8

# learning a model for train pairs
2.000	
1.318	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.862	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.675	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.467	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.319	
0.319	IN  DEL ^.layer_0111
0.318	IN  DEL ^.layer_011
0.318	IN  DEL ^.layer_01
0.318	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 12655.5 = 12769.7
DL output with Mo: L = 38.8 + 2870.8 = 2909.6
DL input+output M: L = 153.0 + 15526.3 = 15679.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 38.8 + 2870.8 = 2909.6
DL input+output M: L = 51.4 + 2870.8 = 2922.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,17) and color blue and layers
diff: 
delta: (2,11)=3  (2,12)=3  (2,14)=3  (2,15)=3  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,11)=3  (3,15)=3  (4,3)=2  (4,5)=2  (4,7)=2  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,7)=2  (5,13)=3  (6,3)=2  (6,5)=2  (6,7)=2  (6,11)=3  (6,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (9,8)=8  (9,9)=8  (9,10)=8  (9,11)=8  (9,12)=8  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=8  (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (11,3)=8  (11,4)=8  (11,7)=8  (11,8)=8  (11,11)=8  (11,12)=8  (12,3)=8  (12,4)=8  (12,7)=8  (12,8)=8  (12,11)=8  (12,12)=8  (13,11)=8  (13,12)=8  (14,11)=8  (14,12)=8  (15,3)=8  (15,4)=8  (15,7)=8  (15,8)=8  (15,11)=8  (15,12)=8  (16,3)=8  (16,4)=8  (16,7)=8  (16,8)=8  (16,11)=8  (16,12)=8 
   (0.0 bits)
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (3,4) and color blue and mask .x.x|xxxx|.x.x at (1,0)
diff: 
delta:
   (70.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color blue and layers
diff: 
delta: (2,11)=3  (2,12)=3  (2,14)=3  (2,15)=3  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,11)=3  (3,15)=3  (4,3)=2  (4,5)=2  (4,7)=2  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,7)=2  (5,13)=3  (6,3)=2  (6,5)=2  (6,7)=2  (6,11)=3  (6,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (9,8)=8  (9,9)=8  (9,10)=8  (9,11)=8  (9,12)=8  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=8  (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (11,3)=8  (11,4)=8  (11,7)=8  (11,8)=8  (11,11)=8  (11,12)=8  (12,3)=8  (12,4)=8  (12,7)=8  (12,8)=8  (12,11)=8  (12,12)=8  (13,11)=8  (13,12)=8  (14,11)=8  (14,12)=8  (15,3)=8  (15,4)=8  (15,7)=8  (15,8)=8  (15,11)=8  (15,12)=8  (16,3)=8  (16,4)=8  (16,7)=8  (16,8)=8  (16,11)=8  (16,12)=8 
! size mismatch, 10x10 instead of 5x5

TRAIN ce602527.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (18,18) and color cyan and layers
diff: 
delta: (4,4)=3  (4,6)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (6,4)=3  (6,6)=3  (8,12)=4  (9,11)=4  (9,12)=4  (9,13)=4  (10,1)=6  (10,2)=6  (10,12)=4  (11,1)=6  (11,2)=6  (11,11)=4  (11,12)=4  (11,13)=4  (12,0)=6  (12,1)=6  (12,2)=6  (12,3)=6  (12,4)=6  (12,12)=4  (13,0)=6  (13,1)=6  (13,2)=6  (13,3)=6  (13,4)=6  (14,1)=6  (14,2)=6  (15,1)=6  (15,2)=6  (16,0)=6  (16,1)=6  (16,2)=6  (16,3)=6  (16,4)=6  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6 
   (0.0 bits)
data: a background with size (5,3) and color cyan and layers
  _0: a rectangle with size (5,3) and color yellow and mask .x.|xxx|.x.|xxx|.x. at (0,0)
diff: 
delta:
   (73.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
diff: 
delta: (4,4)=3  (4,6)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (6,4)=3  (6,6)=3  (8,12)=4  (9,11)=4  (9,12)=4  (9,13)=4  (10,1)=6  (10,2)=6  (10,12)=4  (11,1)=6  (11,2)=6  (11,11)=4  (11,12)=4  (11,13)=4  (12,0)=6  (12,1)=6  (12,2)=6  (12,3)=6  (12,4)=6  (12,12)=4  (13,0)=6  (13,1)=6  (13,2)=6  (13,3)=6  (13,4)=6  (14,1)=6  (14,2)=6  (15,1)=6  (15,2)=6  (16,0)=6  (16,1)=6  (16,2)=6  (16,3)=6  (16,4)=6  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6 
! size mismatch, 10x10 instead of 5x3

TRAIN ce602527.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (19,17) and color red and layers
diff: 
delta: (2,4)=8  (2,5)=8  (2,6)=8  (3,4)=8  (4,4)=8  (4,5)=8  (4,6)=8  (5,6)=8  (6,4)=8  (6,5)=8  (6,6)=8  (10,8)=3  (10,10)=3  (10,12)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (12,10)=3  (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (17,0)=1  (17,1)=1  (17,2)=1  (17,3)=1  (18,0)=1  (18,1)=1  (18,2)=1  (18,3)=1 
   (0.0 bits)
data: a background with size (5,3) and color red and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x..|xxx|..x|xxx at (0,0)
diff: 
delta:
   (71.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color red and layers
diff: 
delta: (2,4)=8  (2,5)=8  (2,6)=8  (3,4)=8  (4,4)=8  (4,5)=8  (4,6)=8  (5,6)=8  (6,4)=8  (6,5)=8  (6,6)=8  (10,8)=3  (10,10)=3  (10,12)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (12,10)=3  (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (17,0)=1  (17,1)=1  (17,2)=1  (17,3)=1  (18,0)=1  (18,1)=1  (18,2)=1  (18,3)=1 
! size mismatch, 10x10 instead of 5x3

TRAIN ce602527.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (15,17) and color blue and layers
diff: 
delta: (2,5)=8  (2,8)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (4,5)=8  (4,8)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=8  (9,0)=2  (9,1)=2  (9,2)=2  (9,3)=2  (9,4)=2  (9,9)=3  (9,10)=3  (9,11)=3  (10,0)=2  (10,1)=2  (10,2)=2  (10,3)=2  (10,4)=2  (10,8)=3  (10,9)=3  (10,11)=3  (10,12)=3  (11,0)=2  (11,3)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=2  (12,3)=2  (12,4)=2  (12,5)=2  (12,6)=2  (13,0)=2  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2 
   (0.0 bits)
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,5) and color green and mask .xxx.|xx.xx|.xxx. at (0,0)
diff: 
delta:
   (72.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color blue and layers
diff: 
delta: (2,5)=8  (2,8)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (4,5)=8  (4,8)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=8  (9,0)=2  (9,1)=2  (9,2)=2  (9,3)=2  (9,4)=2  (9,9)=3  (9,10)=3  (9,11)=3  (10,0)=2  (10,1)=2  (10,2)=2  (10,3)=2  (10,4)=2  (10,8)=3  (10,9)=3  (10,11)=3  (10,12)=3  (11,0)=2  (11,3)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=2  (12,3)=2  (12,4)=2  (12,5)=2  (12,6)=2  (13,0)=2  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2 
! size mismatch, 10x10 instead of 3x5

TRAIN ce602527.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color green and layers
diff: 
delta: (2,9)=1  (2,11)=1  (2,12)=1  (3,9)=1  (3,10)=1  (3,12)=1  (4,9)=1  (4,11)=1  (4,12)=1  (5,3)=6  (6,2)=6  (6,3)=6  (6,4)=6  (7,3)=6  (8,2)=6  (8,3)=6  (8,4)=6  (12,8)=8  (12,9)=8  (13,8)=8  (13,9)=8  (14,6)=8  (14,7)=8  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (15,6)=8  (15,7)=8  (15,8)=8  (15,9)=8  (15,10)=8  (15,11)=8  (16,8)=8  (16,9)=8  (17,8)=8  (17,9)=8 
! size mismatch, 10x10 instead of 4x3

TEST ce602527.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.6 sec (55.6 sec/task)
bits-train-error = 2870.8 bits (2870.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-81] Checking task ce9e57f2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23303.9 = 23316.5
DL output with Mo: L = 12.6 + 23303.9 = 23316.5
DL input+output M: L = 25.2 + 46607.8 = 46633.0

# learning a model for train pairs
2.000	
1.710	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.466	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.299	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.165	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.939	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.796	OUT ADD ^.layer_011 = ^.layer_0111.shape at (?,?)
0.683	OUT ADD ^.layer_0111 = ^.layer_0111.shape at (?,?)
0.611	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.553	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.508	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
0.439	OUT SPE ^.size = ^.size
0.417	OUT SPE ^.layer_01111.shape = scaleTo(^.layer_0111.shape, '(2, 1))
0.403	OUT SPE ^.layer_01111.pos = ^.layer_0111.pos
0.390	OUT SPE ^.layer_0111.pos = ^.layer_01.pos
0.366	OUT SPE ^.layer_01.shape = coloring(^.layer_0111.shape, cyan)
0.355	OUT SPE ^.layer_0111111.shape.size = '(2, 1)
0.348	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.341	IN  SPE ^.layer_0.shape.color = red
0.333	IN  SPE ^.layer_01.shape.color = red
0.326	IN  SPE ^.layer_011.shape.color = red
0.319	IN  SPE ^.layer_0111.shape.color = red
0.312	OUT SPE ^.layer_011111.shape.color = cyan
0.299	OUT SPE ^.layer_01.pos = corner(^.layer_0111.pos, ^.layer_0.pos)
0.292	OUT SPE ^.layer_0111111.shape.color = cyan
0.285	OUT SPE ^.layer_01111111.shape.color = cyan
0.278	OUT SPE ^.layer_011111.pos.j = ^.layer_01.pos.j
0.272	OUT SPE ^.layer_01111111.pos.i = bottom(^.layer_0111)
0.268	OUT SPE ^.layer_0.shape.size.j = 1
0.264	OUT SPE ^.layer_0.shape.mask = Full
0.260	OUT SPE ^.layer_011111.shape.size.j = 1
0.254	OUT SPE ^.layer_0111111.pos.i = bottom(^.layer_0111) - 1
0.248	OUT SPE ^.layer_011111.pos = ^.layer_01.pos + projI(^.layer_0111.shape.size)
0.243	IN  SPE ^.layer_0.shape.mask = Full
0.239	IN  SPE ^.layer_01.shape.mask = Full
0.235	IN  SPE ^.layer_011.shape.mask = Full
0.231	IN  SPE ^.layer_0111.shape.mask = Full
0.226	OUT SPE ^.layer_011111.shape.mask = Full
0.222	OUT SPE ^.layer_0111111.shape.mask = Full
0.216	OUT SPE ^.layer_011111.shape.size.i = ^.layer_01.shape.size.i / '2
0.210	OUT SPE ^.layer_0111111.pos.j = span(^.layer_01.pos.j, ^.layer_0111.pos.j)
0.069	
0.069	IN  GEN ^.layer_0111.shape.color = ?
0.069	IN  GEN ^.layer_011.shape.color = ?
0.069	IN  GEN ^.layer_01.shape.color = ?
0.069	IN  GEN ^.layer_0.shape.color = ?
0.069	IN  GEN ^.layer_0111.shape.mask = ?
0.069	IN  GEN ^.layer_011.shape.mask = ?
0.069	IN  GEN ^.layer_01.shape.mask = ?
0.069	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: coloring(^.layer_0111.shape, cyan) at corner(^.layer_0111.pos, ^.layer_0.pos)
  _011: ^.layer_0111.shape at (?,?)
  _0111: ^.layer_0111.shape at ^.layer_01.pos
  _01111: scaleTo(^.layer_0111.shape, '(2, 1)) at ^.layer_0111.pos
  _011111: a rectangle with size (^.layer_01.shape.size.i / '2,1) and color cyan and mask Full at ^.layer_01.pos + projI(^.layer_0111.shape.size)
  _0111111: a rectangle with size '(2, 1) and color cyan and mask Full at (bottom(^.layer_0111) - 1,span(^.layer_01.pos.j, ^.layer_0111.pos.j))
  _01111111: a point with color cyan at (bottom(^.layer_0111),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 131.4 + 3300.5 = 3431.9
DL output with Mo: L = 396.6 + 1066.5 = 1463.1
DL input+output M: L = 528.0 + 4367.0 = 4895.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: coloring(^.layer_0111.shape, cyan) at corner(^.layer_0111.pos, ^.layer_0.pos)
  _011: ^.layer_0111.shape at (?,?)
  _0111: ^.layer_0111.shape at ^.layer_01.pos
  _01111: scaleTo(^.layer_0111.shape, '(2, 1)) at ^.layer_0111.pos
  _011111: a rectangle with size (^.layer_01.shape.size.i / '2,1) and color cyan and mask Full at ^.layer_01.pos + projI(^.layer_0111.shape.size)
  _0111111: a rectangle with size '(2, 1) and color cyan and mask Full at (bottom(^.layer_0111) - 1,span(^.layer_01.pos.j, ^.layer_0111.pos.j))
  _01111111: a point with color cyan at (bottom(^.layer_0111),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 396.6 + 1066.5 = 1463.1
DL input+output M: L = 510.7 + 1086.5 = 1597.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (3,5)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (4,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (1,1)
  _0111: a rectangle with size (3,1) and color red and mask Full at (2,3)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,7)
  _011111: a rectangle with size (2,1) and color cyan and mask Full at (5,3)
  _0111111: a rectangle with size (2,1) and color cyan and mask Full at (5,5)
  _01111111: a point with color cyan at (6,7)
diff: 
delta:
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (3,1) and color red and mask Full at (4,7)
  _0111: a rectangle with size (4,1) and color red and mask Full at (3,5)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _011: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (5,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (2,7)
  _01111: a rectangle with size (2,1) and color red and mask Full at (5,5)
  _011111: a rectangle with size (3,1) and color cyan and mask Full at (5,7)
  _0111111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111111: a point with color cyan at (7,5)
diff: 
delta:
   (36.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (3,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (5,1) and color red and mask Full at (3,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _011: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (6,3)
  _01: a rectangle with size (4,1) and color cyan and mask Full at (5,7)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,7)
  _0111: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _01111: a rectangle with size (2,1) and color red and mask Full at (5,5)
  _011111: a rectangle with size (3,1) and color cyan and mask Full at (6,1)
  _0111111: a rectangle with size (2,1) and color cyan and mask Full at (7,5)
  _01111111: a point with color cyan at (8,3)
diff: 
delta:
   (35.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (6,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (5,5)
  _011: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _0111: a rectangle with size (3,1) and color red and mask Full at (6,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (5,1) and color red and mask Full at (6,7)
  _0111: a rectangle with size (2,1) and color red and mask Full at (9,5)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (2,1) and color red and mask Full at (9,5)
  _0111: a rectangle with size (5,1) and color red and mask Full at (6,7)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (6,7)
  _011: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _0111: a rectangle with size (2,1) and color red and mask Full at (9,5)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST ce9e57f2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.4 sec (58.4 sec/task)
bits-train-error = 1066.5 bits (1066.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-80] Checking task cf98881b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 57147.2 = 57159.8
DL output with Mo: L = 12.6 + 12521.1 = 12533.7
DL input+output M: L = 25.2 + 69668.2 = 69693.4

# learning a model for train pairs
2.000	
1.726	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.470	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.165	OUT ADD ^.layer_00 = ^.layer_0
0.994	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.884	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.784	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.641	OUT SPE ^.size = ^.layer_0111.shape.size + (0, 3)
0.627	OUT SPE ^.layer_01.pos.j = ^.layer_011.pos.i * '2
0.618	OUT SPE ^.color = black
0.255	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0111.shape.size + (0, 3) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,^.layer_011.pos.i * '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20775.4 = 20889.5
DL output with Mo: L = 118.8 + 3042.1 = 3160.9
DL input+output M: L = 232.9 + 23817.5 = 24050.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0111.shape.size + (0, 3) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,^.layer_011.pos.i * '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 63.4 = 177.5
DL output with Mo: L = 118.8 + 3042.1 = 3160.9
DL input+output M: L = 232.9 + 3105.5 = 3338.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (0,5)=9# (0,6)=9# (1,7)=9# (1,8)=9# (3,5)=9# (3,7)=9#
   (3.2 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _0: a rectangle with size (1,2) and color brown and mask Full at (1,2)
  _01: a point with color brown at (0,0)
diff: 
delta: (0,3)=4  (2,1)=1  (2,2)=1 
   (143.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _01: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (0,5)=9# (0,6)=9# (1,7)=9# (1,8)=9# (3,5)=9# (3,7)=9#
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (0,5)=9# (0,6)=9# (1,7)=9# (1,8)=9# (3,5)=9# (3,7)=9#
! 7 wrong pixels (generated / expected)

TRAIN cf98881b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _011: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,9)=2  (0,13)=1  (1,9)=2  (2,8)=9# (2,9)=2  (3,7)=9# (3,9)=2 
   (3.2 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (2,0)
  _01: a point with color brown at (3,2)
diff: 
delta:
   (42.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _011: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,9)=2  (0,13)=1  (1,9)=2  (2,8)=9# (2,9)=2  (3,7)=9# (3,9)=2 
! 3 wrong pixels (generated / expected)

TRAIN cf98881b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,11)=1  (0,13)=1  (1,11)=1  (2,10)=1  (2,13)=1  (3,13)=1 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _0: a rectangle with size (4,3) and color brown and mask Full at (0,1)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (41.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,11)=1  (0,13)=1  (1,11)=1  (2,10)=1  (2,13)=1  (3,13)=1 
! 6 wrong pixels (generated / expected)

TRAIN cf98881b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _011: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,9)=2  (1,9)=2  (2,9)=2  (3,9)=2 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _0: a rectangle with size (2,2) and color brown and mask Full at (1,1)
  _01: a point with color blue at (3,0)
diff: 
delta:
   (38.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _011: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,9)=2  (1,9)=2  (2,9)=2  (3,9)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
diff: 
delta: (0,9)=2  (1,9)=2  (2,9)=2  (3,9)=2 
! size mismatch, 4x7 instead of 4x4

TRAIN cf98881b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (1,8)=9# (2,6)=9# (2,7)=9# (2,13)=1  (3,7)=9# (3,13)=1 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (38.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (1,8)=9# (2,6)=9# (2,7)=9# (2,13)=1  (3,7)=9# (3,13)=1 
! 4 wrong pixels (generated / expected)

TRAIN cf98881b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.x.|xxx.|.xxx|x.xx at (0,5)
  _01: a rectangle with size (4,4) and color blue and mask xx..|xxx.|xx.x|x... at (0,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,2)=4  (1,0)=4  (1,1)=4  (1,3)=4  (3,1)=4  (3,2)=4 
! 15 wrong pixels (generated / expected)

TEST cf98881b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.0 sec (56.0 sec/task)
bits-train-error = 3042.1 bits (3042.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-79] Checking task d037b0a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3271.8 = 3284.5
DL output with Mo: L = 12.6 + 6423.2 = 6435.8
DL input+output M: L = 25.2 + 9695.1 = 9720.3

# learning a model for train pairs
2.000	
1.692	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.490	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.301	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.108	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.985	OUT SPE ^.layer_0 = fillResizeAlike(blue, '(3, 1), ^.layer_0)
0.868	OUT SPE ^.layer_01 = fillResizeAlike(blue, '(2, 1), ^.layer_01)
0.807	OUT SPE ^.size = ^.size
0.785	IN  SPE ^.color = black
0.773	OUT SPE ^.color = black
0.191	
0.191	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: fillResizeAlike(blue, '(3, 1), ^.layer_0)
  _01: fillResizeAlike(blue, '(2, 1), ^.layer_01)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 1911.2 = 1957.0
DL output with Mo: L = 77.9 + 1063.0 = 1140.9
DL input+output M: L = 123.7 + 2974.2 = 3097.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: fillResizeAlike(blue, '(3, 1), ^.layer_0)
  _01: fillResizeAlike(blue, '(2, 1), ^.layer_01)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 77.9 + 1063.0 = 1140.9
DL input+output M: L = 123.5 + 1063.0 = 1186.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color yellow at (1,1)
diff: 
delta: (2,0)=3 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (1,1)
diff: 
delta: (2,0)=3 
   (35.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color yellow at (1,1)
diff: 
delta: (2,0)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color green at (2,0)
diff: 
delta: (1,1)=4 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (0,2)
diff: 
delta: (2,0)=3 
! 2 wrong pixels (generated / expected)

TRAIN d037b0a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color orange at (1,0)
diff: 
delta: (1,2)=8 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color orange and mask Full at (1,0)
diff: 
delta: (1,2)=8  (2,2)=8 
   (70.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color orange at (1,0)
diff: 
delta: (1,2)=8 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (1,0)=7#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (1,0)
  _01: a point with color red at (0,1)
diff: 
delta: (1,2)=8 
! 3 wrong pixels (generated / expected)

TRAIN d037b0a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta:
correct output grid

TRAIN d037b0a7.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (0,2)
diff: 
delta: (2,1)=7#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color orange at (2,1)
diff: 
delta: (0,2)=8 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color yellow at (0,0)
diff: 
delta: (2,1)=7#
! 2 wrong pixels (generated / expected)

TEST d037b0a7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 1063.0 bits (1063.0 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-78] Checking task d06dbe63.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1276.9 = 1289.5
DL output with Mo: L = 12.6 + 15448.9 = 15461.5
DL input+output M: L = 25.2 + 16725.8 = 16751.1

# learning a model for train pairs
2.000	
1.533	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.201	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.924	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.839	IN  SPE ^.layer_0.shape.color = cyan
0.788	OUT ADD ^.layer_00 = ^.layer_0
0.750	IN  SPE ^.color = black
0.722	OUT SPE ^.size = ^.size
0.707	OUT SPE ^.layer_0.pos = projJ(^.layer_0.pos)
0.699	OUT SPE ^.layer_0.shape.color = grey
0.692	OUT SPE ^.layer_01.shape.color = grey
0.686	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i + 1
0.683	OUT SPE ^.color = black
0.163	
0.161	IN  GEN ^.layer_0.shape.color = ?
0.160	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at projJ(^.layer_0.pos)
  _01: a rectangle with size (?,?) and color grey and mask ? at (^.layer_0.pos.i + 1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)

DL input  with Mi: L = 33.0 + 669.8 = 702.8
DL output with Mo: L = 95.9 + 2030.1 = 2126.0
DL input+output M: L = 128.9 + 2699.9 = 2828.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at projJ(^.layer_0.pos)
  _01: a rectangle with size (?,?) and color grey and mask ? at (^.layer_0.pos.i + 1,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 95.9 + 2030.1 = 2126.0
DL input+output M: L = 125.4 + 2030.1 = 2155.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (3,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a point with color cyan at (3,4)
  _0: a rectangle with size (3,3) and color grey and mask ..x|xxx|x.. at (0,4)
  _01: a rectangle with size (6,5) and color grey and mask ....x|..xxx|..x..|xxx..|x....|x.... at (4,0)
diff: 
delta:
   (84.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (3,4)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN d06dbe63.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (7,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a point with color cyan at (7,6)
  _0: a rectangle with size (7,7) and color grey and mask ......x|....xxx|....x..|..xxx..|..x....|xxx....|x...... at (0,6)
  _01: a rectangle with size (5,5) and color grey and mask ....x|..xxx|..x..|xxx..|x.... at (8,2)
diff: 
delta:
   (118.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (7,6)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN d06dbe63.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (5,5)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST d06dbe63.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 2030.1 bits (2030.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-77] Checking task d07ae81c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 101517.3 = 101529.9
DL output with Mo: L = 12.6 + 122180.7 = 122193.3
DL input+output M: L = 25.2 + 223698.0 = 223723.2

# learning a model for train pairs
2.000	
1.203	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.627	OUT ADD ^.layer_01 = ^.layer_01
0.620	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.611	OUT ADD ^.layer_011 = ^.layer_011
0.605	OUT SPE ^.size = ^.size
0.600	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.502	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.436	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.421	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	OUT ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.405	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.215	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 19257.7 = 19328.4
DL output with Mo: L = 162.1 + 26049.2 = 26211.2
DL input+output M: L = 232.7 + 45306.8 = 45539.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 0.0 = 70.7
DL output with Mo: L = 162.1 + 26049.2 = 26211.2
DL input+output M: L = 232.7 + 26049.2 = 26281.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...x.xx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a point with color yellow at (5,4)
  _011: a point with color blue at (8,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|x.xxxxx.xxxx|xx.xxx.xxxxx|xxx.x.xxxxxx|...x.xx.....|....x.x.....|...xxx......|...xxxx.....|...xxxx.....|....xxx.....|...x.xx.....|xxxxx.xxxxx.|xxxxxx.xxxxx|xxxxxxx.xxxx|xxxxxxxx.xxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a point with color yellow at (5,4)
  _011: a point with color blue at (8,1)
  _0111: a rectangle with size (6,6) and color yellow and mask x.....|.x....|..x...|...x..|....x.|.....x at (10,3)
  _01111: a rectangle with size (4,4) and color blue and mask x...|.x..|..x.|...x at (8,7)
  _011111: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (16,9)
  _0111111: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
  _01111111: a rectangle with size (1,3) and color yellow and mask Full at (6,3)
diff: 
delta: (0,9)=1  (1,0)=1  (1,8)=1  (2,1)=4  (2,7)=4  (3,2)=4  (3,6)=4  (7,0)=1  (7,2)=1  (7,6)=4  (9,0)=1  (9,2)=1  (12,11)=4 
   (982.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...x.xx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a point with color yellow at (5,4)
  _011: a point with color blue at (8,1)
diff: 
delta:
! 228 wrong pixels (generated / expected)

TRAIN d07ae81c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,14) and color blue and mask ...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxx.xx.....|...xxxxxx.....|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxxx..... at (0,0)
  _01: a point with color red at (3,6)
  _011: a point with color cyan at (8,11)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,14) and color blue and mask ....xxxxx.....|...x.xxx......|...xx.x.x.....|...xxx.xx.....|...xx.x.x.....|xxxx.xxx.xxxxx|xxx.xxxxx.xxx.|xx.xxxxxxx.x.x|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxx...... at (0,0)
  _01: a point with color red at (3,6)
  _011: a point with color cyan at (8,11)
  _0111: a rectangle with size (1,11) and color red and mask Full at (6,3)
  _01111: a rectangle with size (1,11) and color red and mask Full at (7,2)
  _011111: a rectangle with size (11,1) and color red and mask Full at (1,8)
  _0111111: a rectangle with size (1,3) and color red and mask Full at (2,5)
  _01111111: a rectangle with size (1,3) and color red and mask Full at (4,5)
diff: 
delta: (0,3)=2  (0,9)=8  (1,4)=2  (5,4)=2  (8,1)=8  (9,0)=8  (9,10)=8  (9,12)=8  (10,9)=8  (10,13)=8 
   (741.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,14) and color blue and mask ...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxx.xx.....|...xxxxxx.....|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxxx..... at (0,0)
  _01: a point with color red at (3,6)
  _011: a point with color cyan at (8,11)
diff: 
delta:
! 168 wrong pixels (generated / expected)

TRAIN d07ae81c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask Full at (0,6)
  _01: a point with color green at (8,4)
  _011: a point with color green at (10,12)
diff: 
delta: (0,0)=1  (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,0)=1  (3,1)=1  (4,0)=1  (4,1)=1  (5,0)=1  (5,1)=1  (5,7)=8  (6,0)=1  (6,1)=1  (7,0)=1  (7,1)=1  (8,0)=1  (8,1)=1  (9,0)=1  (9,1)=1  (10,0)=1  (10,1)=1  (11,0)=1  (11,1)=1  (12,0)=1  (12,1)=1  (13,0)=1  (13,1)=1  (14,0)=1  (14,1)=1 
   (0.0 bits)
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask xxxx|xxxx|xxxx|xxx.|.x.x|x.xx|.x.x|xxx.|xxxx|xxxx|.xxx|x.xx|xx.x|xxx.|xx.x at (0,6)
  _01: a point with color green at (8,4)
  _011: a point with color green at (10,12)
  _0111: a rectangle with size (15,2) and color blue and mask xx|xx|xx|xx|.x|x.|xx|xx|xx|xx|xx|x.|.x|xx|xx at (0,0)
  _01111: a rectangle with size (12,4) and color cyan and mask Full at (3,6)
  _011111: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
  _0111111: a rectangle with size (9,2) and color cyan and mask Full at (4,0)
  _01111111: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,10)
diff: 
delta: (6,2)=3  (7,3)=3  (7,5)=3  (8,10)=3  (8,14)=3  (9,3)=3  (9,5)=3  (9,11)=3  (9,13)=3  (10,2)=3  (11,11)=3  (11,13)=3  (12,10)=3  (12,14)=3  (14,10)=3 
   (880.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask Full at (0,6)
  _01: a point with color green at (8,4)
  _011: a point with color green at (10,12)
diff: 
delta: (0,0)=1  (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,0)=1  (3,1)=1  (4,0)=1  (4,1)=1  (5,0)=1  (5,1)=1  (5,7)=8  (6,0)=1  (6,1)=1  (7,0)=1  (7,1)=1  (8,0)=1  (8,1)=1  (9,0)=1  (9,1)=1  (10,0)=1  (10,1)=1  (11,0)=1  (11,1)=1  (12,0)=1  (12,1)=1  (13,0)=1  (13,1)=1  (14,0)=1  (14,1)=1 
! 223 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask xxxx|xxxx|xxxx|xxxx|xxxx|x.xx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx at (0,6)
  _01: a point with color cyan at (5,7)
  _011: a point with color green at (8,4)
diff: 
delta: (0,0)=1  (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,0)=1  (3,1)=1  (4,0)=1  (4,1)=1  (5,0)=1  (5,1)=1  (6,0)=1  (6,1)=1  (7,0)=1  (7,1)=1  (8,0)=1  (8,1)=1  (9,0)=1  (9,1)=1  (10,0)=1  (10,1)=1  (10,12)=3  (11,0)=1  (11,1)=1  (12,0)=1  (12,1)=1  (13,0)=1  (13,1)=1  (14,0)=1  (14,1)=1 
! 224 wrong pixels (generated / expected)

TRAIN d07ae81c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color green and layers
  _0: a rectangle with size (4,10) and color cyan and mask Full at (7,9)
  _01: a point with color yellow at (0,10)
  _011: a point with color blue at (4,6)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,9)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,18)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,17)=8  (1,18)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (3,15)=8  (3,16)=8  (3,17)=8  (3,18)=8  (7,0)=8  (7,1)=8  (7,2)=8  (8,0)=8  (8,1)=8  (8,2)=8  (9,0)=8  (9,1)=8  (9,2)=8  (10,0)=8  (10,1)=8  (10,2)=8  (12,14)=1  (15,0)=8  (15,1)=8  (15,2)=8  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=8  (16,0)=8  (16,1)=8  (16,2)=8  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8  (16,18)=8 
! 321 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,19) and color green and layers
  _0: a rectangle with size (4,10) and color cyan and mask Full at (7,9)
  _01: a point with color yellow at (0,10)
  _011: a point with color blue at (12,14)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,9)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,18)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,17)=8  (1,18)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (3,15)=8  (3,16)=8  (3,17)=8  (3,18)=8  (4,6)=1  (7,0)=8  (7,1)=8  (7,2)=8  (8,0)=8  (8,1)=8  (8,2)=8  (9,0)=8  (9,1)=8  (9,2)=8  (10,0)=8  (10,1)=8  (10,2)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=8  (16,0)=8  (16,1)=8  (16,2)=8  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8  (16,18)=8 
! 321 wrong pixels (generated / expected)

TEST d07ae81c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 26049.2 bits (26049.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-76] Checking task d0f5fe59.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20524.5 = 20537.1
DL output with Mo: L = 12.6 + 3618.4 = 3631.0
DL input+output M: L = 25.2 + 24142.9 = 24168.1

# learning a model for train pairs
2.000	
1.466	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.131	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.898	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.760	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.664	OUT SPE ^.layer_0.shape.size = max(^.layer_0.shape.size, ^.layer_011.shape.size)
0.567	OUT SPE ^.size = max(^.layer_0.shape.size, ^.layer_011.shape.size)
0.504	OUT SPE ^.layer_0.pos = '(0, 0)
0.457	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.437	OUT SPE ^.color = black
0.429	IN  SPE ^.layer_0.shape.color = cyan
0.421	IN  SPE ^.layer_01.shape.color = cyan
0.413	IN  SPE ^.layer_011.shape.color = cyan
0.409	IN  SPE ^.color = black
0.148	
0.147	IN  GEN ^.layer_011.shape.color = ?
0.147	IN  GEN ^.layer_01.shape.color = ?
0.147	IN  GEN ^.layer_0.shape.color = ?
0.147	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color black and layers
  _0: a rectangle with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 5427.1 = 5526.4
DL output with Mo: L = 95.8 + 413.1 = 508.9
DL input+output M: L = 195.2 + 5840.2 = 6035.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color black and layers
  _0: a rectangle with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 51.7 = 141.0
DL output with Mo: L = 95.8 + 413.1 = 508.9
DL input+output M: L = 185.1 + 464.8 = 649.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
diff: 
delta: (12,7)=8  (12,8)=8  (13,7)=8  (13,8)=8 
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x..|..x.|...x at (0,0)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
diff: 
delta: (12,7)=8  (12,8)=8  (13,7)=8  (13,8)=8 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
  _011: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
diff: 
delta: (12,7)=8  (12,8)=8  (13,7)=8  (13,8)=8 
! size mismatch, 4x3 instead of 4x4
>> Trial 3
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _01: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
diff: 
delta: (12,7)=8  (12,8)=8  (13,7)=8  (13,8)=8 
! size mismatch, 3x4 instead of 4x4

TRAIN d0f5fe59.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|xx. at (1,1)
  _01: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,3)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|xxx|xx. at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,3)
diff: 
delta:
! size mismatch, 3x4 instead of 3x3
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|xx. at (1,1)
  _01: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d0f5fe59.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (3,2) and color cyan and mask x.|xx|x. at (3,8)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
diff: 
delta:
   (3.2 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|xxx|.xx at (2,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
diff: 
delta:
! size mismatch, 3x3 instead of 2x2
>> Trial 2
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (3,2) and color cyan and mask x.|xx|x. at (3,8)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN d0f5fe59.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|.xx at (2,3)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (9,8)
  _011: a rectangle with size (3,2) and color cyan and mask .x|xx|xx at (1,8)
diff: 
delta: (9,1)=8  (9,2)=8  (10,2)=8  (10,3)=8  (11,3)=8  (13,6)=8  (13,7)=8 
! size mismatch, 3x3 instead of 5x5

TEST d0f5fe59.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 413.1 bits (413.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-75] Checking task d10ecb37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42221.9 = 42234.5
DL output with Mo: L = 12.6 + 3238.2 = 3250.8
DL input+output M: L = 25.2 + 45460.1 = 45485.3

# learning a model for train pairs
2.000	
1.009	OUT SPE ^ = fillResizeAlike(black, '(2, 2), ^.grid)
0.893	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.863	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.779	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.759	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.738	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.723	IN  ADD ^.layer_01111110 = a point with color ? at (?,?)
0.719	IN  SPE ^.layer_0111111.shape.color = yellow
0.717	IN  SPE ^.layer_0.shape.mask = Full
0.715	IN  SPE ^.layer_01.shape.mask = Full
0.712	IN  SPE ^.layer_011.shape.mask = Full
0.710	IN  SPE ^.layer_0111.shape.mask = Full
0.708	IN  SPE ^.layer_01111.shape.mask = Full
0.705	IN  SPE ^.layer_0111111.shape.mask = Full
0.014	
0.014	IN  DEL ^.layer_0111111
0.013	IN  DEL ^.layer_01111
0.012	IN  DEL ^.layer_0111
0.012	IN  DEL ^.layer_011
0.011	IN  DEL ^.layer_01
0.011	IN  DEL ^.layer_0
0.010	IN  DEL ^.layer_011111
0.010	IN  DEL ^.layer_01111110

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, '(2, 2), ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111110: a point with color ? at (?,?)
  _0111111: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 212.7 + 29182.2 = 29395.0
DL output with Mo: L = 30.1 + 0.0 = 30.1
DL input+output M: L = 242.8 + 29182.2 = 29425.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, '(2, 2), ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 30.1 + 0.0 = 30.1
DL input+output M: L = 42.7 + 0.0 = 42.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
diff: 
delta: (0,0)=4  (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,3)=3  (1,4)=3  (1,5)=4  (2,0)=6  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=3  (3,1)=3  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,2)=3  (4,4)=4  (4,5)=3  (5,0)=3  (5,1)=4  (5,2)=4  (5,3)=6  (5,4)=6 
   (0.0 bits)
data: 
4 3 
6 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta: (0,0)=4  (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,3)=3  (1,4)=3  (1,5)=4  (2,0)=6  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=3  (3,1)=3  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,2)=3  (4,4)=4  (4,5)=3  (5,0)=3  (5,1)=4  (5,2)=4  (5,3)=6  (5,4)=6 
correct output grid

TRAIN d10ecb37.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color red and layers
diff: 
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (1,1)=5# (1,2)=5# (1,3)=4  (1,4)=4  (2,0)=4  (2,1)=5# (2,2)=5# (2,7)=4  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,4)=5# (4,6)=4  (4,7)=5# (5,1)=5# (5,2)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,1)=5# (6,2)=5# (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
   (0.0 bits)
data: 
2 4 
2 5#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color red and layers
diff: 
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (1,1)=5# (1,2)=5# (1,3)=4  (1,4)=4  (2,0)=4  (2,1)=5# (2,2)=5# (2,7)=4  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,4)=5# (4,6)=4  (4,7)=5# (5,1)=5# (5,2)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,1)=5# (6,2)=5# (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
correct output grid

TRAIN d10ecb37.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (12,6) and color blue and layers
diff: 
delta: (0,0)=3  (0,1)=2  (0,3)=3  (0,4)=4  (1,1)=4  (1,2)=4  (1,3)=2  (1,4)=2  (1,5)=3  (2,1)=3  (2,2)=3  (2,3)=2  (2,4)=2  (2,5)=4  (3,0)=4  (3,1)=2  (3,3)=4  (3,4)=3  (4,0)=4  (4,2)=2  (4,3)=4  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (5,5)=4  (6,0)=2  (6,1)=4  (6,2)=4  (6,5)=3  (7,0)=3  (7,2)=2  (7,3)=3  (7,4)=4  (7,5)=2  (8,0)=3  (8,1)=2  (8,3)=3  (8,4)=4  (9,1)=4  (9,2)=4  (9,3)=2  (9,4)=2  (9,5)=3  (10,1)=3  (10,2)=3  (10,3)=2  (10,4)=2  (10,5)=4  (11,0)=4  (11,1)=2  (11,3)=4  (11,4)=3 
   (0.0 bits)
data: 
3 2 
1 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,6) and color blue and layers
diff: 
delta: (0,0)=3  (0,1)=2  (0,3)=3  (0,4)=4  (1,1)=4  (1,2)=4  (1,3)=2  (1,4)=2  (1,5)=3  (2,1)=3  (2,2)=3  (2,3)=2  (2,4)=2  (2,5)=4  (3,0)=4  (3,1)=2  (3,3)=4  (3,4)=3  (4,0)=4  (4,2)=2  (4,3)=4  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (5,5)=4  (6,0)=2  (6,1)=4  (6,2)=4  (6,5)=3  (7,0)=3  (7,2)=2  (7,3)=3  (7,4)=4  (7,5)=2  (8,0)=3  (8,1)=2  (8,3)=3  (8,4)=4  (9,1)=4  (9,2)=4  (9,3)=2  (9,4)=2  (9,5)=3  (10,1)=3  (10,2)=3  (10,3)=2  (10,4)=2  (10,5)=4  (11,0)=4  (11,1)=2  (11,3)=4  (11,4)=3 
correct output grid

TRAIN d10ecb37.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color brown and layers
diff: 
delta: (0,1)=6  (0,2)=2  (0,5)=2  (0,6)=6  (1,0)=2  (1,3)=6  (1,4)=6  (1,7)=2  (2,0)=6  (2,3)=2  (2,4)=2  (2,7)=6  (3,1)=2  (3,2)=6  (3,5)=6  (3,6)=2 
correct output grid

TEST d10ecb37.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-74] Checking task d13f3404.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3617.3 = 3629.9
DL output with Mo: L = 12.6 + 16534.2 = 16546.8
DL input+output M: L = 25.2 + 20151.4 = 20176.6

# learning a model for train pairs
2.000	
1.760	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.536	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.342	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.000	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.820	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.777	OUT SPE ^.layer_01.shape.mask = x....|.x...|..x..|...x.|....x
0.733	OUT SPE ^.layer_0.shape.mask = x....|.x...|..x..|...x.|....x
0.703	OUT SPE ^.size = tiling(^.size, 2, 2)
0.675	OUT SPE ^.layer_0.shape.size = ^.size + (2, 2)
0.647	OUT SPE ^.layer_01.shape.size = ^.size + (2, 2)
0.627	IN  SPE ^.color = black
0.609	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.599	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.591	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.i
0.583	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j * '2
0.577	OUT SPE ^.layer_011.pos.i = min(^.layer_0.pos.j, ^.layer_01.pos.j) * '2
0.573	OUT SPE ^.layer_0.pos.i = max(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_01.pos.i - ^.layer_0.pos.i
0.568	OUT SPE ^.color = black
0.127	
0.127	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size ^.size + (2, 2) and color ? and mask x....|.x...|..x..|...x.|....x at (max(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_01.pos.i - ^.layer_0.pos.i,^.layer_01.pos.i)
  _01: a rectangle with size ^.size + (2, 2) and color ^.layer_01.shape.color and mask x....|.x...|..x..|...x.|....x at ^.layer_01.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_01.pos.j) * '2,^.layer_011.pos.j * '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.5 + 1600.7 = 1662.2
DL output with Mo: L = 330.7 + 1493.1 = 1823.7
DL input+output M: L = 392.2 + 3093.8 = 3486.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size ^.size + (2, 2) and color ? and mask x....|.x...|..x..|...x.|....x at (max(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_01.pos.i - ^.layer_0.pos.i,^.layer_01.pos.i)
  _01: a rectangle with size ^.size + (2, 2) and color ^.layer_01.shape.color and mask x....|.x...|..x..|...x.|....x at ^.layer_01.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_01.pos.j) * '2,^.layer_011.pos.j * '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 330.7 + 1493.1 = 1823.7
DL input+output M: L = 392.1 + 1493.1 = 1885.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color blue at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask x....|.x...|..x..|...x.|....x at (1,0)
  _01: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...x.|....x at (0,1)
  _011: a rectangle with size (6,6) and color pink and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
diff: 
delta:
   (58.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color blue at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color green at (1,0)
  _011: a point with color blue at (0,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color pink at (0,0)
  _011: a point with color green at (1,0)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN d13f3404.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (0,1)
  _01: a rectangle with size (5,5) and color cyan and mask x....|.x...|..x..|...x.|....x at (1,1)
  _011: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (2,0)
diff: 
delta:
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (2,0)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color red at (2,0)
  _011: a point with color cyan at (1,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color yellow at (0,1)
  _011: a point with color red at (2,0)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN d13f3404.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color blue at (1,0)
  _011: a point with color green at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask x....|.x...|..x..|...x.|....x at (1,1)
  _01: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...x.|....x at (1,0)
  _011: a rectangle with size (4,4) and color pink and mask x...|.x..|..x.|...x at (0,2)
diff: 
delta:
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color blue at (1,0)
  _011: a point with color green at (1,1)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color blue at (1,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color pink at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN d13f3404.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color yellow at (2,1)
  _011: a point with color brown at (2,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color brown at (2,2)
  _011: a point with color yellow at (2,1)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color green at (0,2)
  _011: a point with color brown at (2,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST d13f3404.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.0 sec (9.0 sec/task)
bits-train-error = 1493.1 bits (1493.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-73] Checking task d22278a0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4377.2 = 4389.8
DL output with Mo: L = 12.6 + 82383.0 = 82395.6
DL input+output M: L = 25.2 + 86760.2 = 86785.4

# learning a model for train pairs
2.000	
1.809	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.612	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.496	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.379	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.302	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.235	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.217	OUT ADD ^.layer_00 = ^.layer_0
1.152	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.134	OUT ADD ^.layer_010 = ^.layer_01
1.126	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
1.048	IN  SPE ^.color = black
1.038	OUT SPE ^.size = ^.size
1.035	OUT SPE ^.layer_011.pos.j = '0
1.030	OUT SPE ^.layer_01111.shape.color = ^.layer_01.shape.color
1.028	OUT SPE ^.layer_0111.shape.color = ^.layer_01.shape.color
1.025	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.i / '2
1.023	OUT SPE ^.layer_01.pos.i = '0
1.021	OUT SPE ^.layer_01111.shape.mask = Full
0.442	
0.441	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.i / '2)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ('0,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _0111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 2543.5 = 2589.3
DL output with Mo: L = 239.6 + 35279.8 = 35519.4
DL input+output M: L = 285.4 + 37823.3 = 38108.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.i / '2)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ('0,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _0111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 239.6 + 35279.8 = 35519.4
DL input+output M: L = 285.3 + 35279.8 = 35565.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (1,5) and color blue and mask Full at (6,0)
  _010: a point with color red at (0,9)
  _01: a rectangle with size (5,5) and color blue and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _011: a rectangle with size (1,5) and color blue and mask Full at (8,0)
  _0111: a rectangle with size (5,5) and color red and mask x....|x....|x....|x....|xxxxx at (0,5)
  _01111: a rectangle with size (1,5) and color red and mask Full at (6,5)
  _011111: a rectangle with size (1,5) and color red and mask Full at (8,5)
diff: 
delta: (0,2)=1  (0,7)=2  (1,2)=1  (1,7)=2  (2,0)=1  (2,1)=1  (2,2)=1  (2,7)=2  (2,8)=2  (2,9)=2 
   (596.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,9)
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,9)
  _01: a point with color blue at (0,0)
diff: 
delta:
! 52 wrong pixels (generated / expected)

TRAIN d22278a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color cyan at (11,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color green at (0,11)
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|....x|....x|....x|....x at (7,0)
  _010: a point with color cyan at (11,0)
  _01: a rectangle with size (5,5) and color green and mask x....|x....|x....|x....|xxxxx at (0,7)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (5,0)
  _0111: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (9,0)
  _01111: a rectangle with size (5,1) and color cyan and mask Full at (7,6)
  _011111: a rectangle with size (1,5) and color green and mask Full at (6,7)
diff: 
delta: (0,1)=3  (0,3)=3  (0,5)=3  (0,9)=3  (1,0)=8  (1,3)=3  (1,5)=3  (1,9)=3  (2,3)=3  (2,5)=3  (2,9)=3  (2,10)=3  (2,11)=3  (3,0)=8  (3,1)=8  (3,2)=8  (3,5)=3  (4,5)=3  (8,9)=3  (8,10)=3  (8,11)=3  (9,8)=8  (10,8)=8  (10,11)=3  (11,8)=8  (11,10)=8 
   (1223.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color cyan at (11,0)
diff: 
delta:
! 66 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (11,0)
  _01: a point with color green at (0,11)
diff: 
delta:
! 67 wrong pixels (generated / expected)

TRAIN d22278a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (12,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (5,5) and color red and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _010: a point with color yellow at (12,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (0,6)
  _011: a rectangle with size (5,5) and color yellow and mask xxxxx|....x|....x|....x|....x at (8,0)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (7,6)
  _01111: a rectangle with size (6,5) and color yellow and mask Full at (7,8)
  _011111: a rectangle with size (6,1) and color red and mask Full at (0,8)
diff: 
delta: (0,2)=2  (0,10)=2  (0,12)=2  (1,2)=2  (1,10)=2  (1,12)=2  (2,0)=2  (2,1)=2  (2,2)=2  (2,10)=2  (2,12)=2  (3,10)=2  (3,12)=2  (4,10)=2  (4,12)=2  (5,10)=2  (5,12)=2  (7,9)=0  (7,11)=0  (8,9)=0  (8,11)=0  (9,9)=0  (9,11)=0  (10,0)=4  (10,1)=4  (10,2)=4  (10,9)=0  (10,11)=0  (11,2)=4  (11,9)=0  (11,11)=0  (12,2)=4  (12,9)=0  (12,11)=0 
   (1528.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (12,0)
diff: 
delta:
! 79 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a point with color yellow at (12,0)
  _01: a point with color red at (0,0)
diff: 
delta:
! 81 wrong pixels (generated / expected)

TRAIN d22278a0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,6)
diff: 
delta: (6,0)=8 
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (4,0)
  _010: a point with color red at (0,6)
  _01: a rectangle with size (3,3) and color blue and mask ..x|..x|xxx at (0,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (6,0)
  _0111: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (0,4)
  _01111: a rectangle with size (1,2) and color red and mask Full at (4,5)
  _011111: a rectangle with size (2,1) and color cyan and mask Full at (5,4)
diff: 
delta:
   (179.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,6)
diff: 
delta: (6,0)=8 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color cyan at (6,0)
diff: 
delta: (0,6)=2 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,6)
  _01: a point with color blue at (0,0)
diff: 
delta: (6,0)=8 
! 24 wrong pixels (generated / expected)

TRAIN d22278a0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (16,0)
diff: 
delta: (16,16)=1 
! 125 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color blue at (16,16)
diff: 
delta: (16,0)=8 
! 125 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a point with color cyan at (16,0)
  _01: a point with color yellow at (0,0)
diff: 
delta: (16,16)=1 
! 127 wrong pixels (generated / expected)

TEST d22278a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.1 sec (59.1 sec/task)
bits-train-error = 35279.8 bits (35279.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-72] Checking task d23f8c26.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10851.7 = 10864.3
DL output with Mo: L = 12.6 + 3777.5 = 3790.1
DL input+output M: L = 25.2 + 14629.2 = 14654.5

# learning a model for train pairs
2.000	
1.741	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.572	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.452	OUT SPE ^.size = ^.size
1.364	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.275	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.980	OUT SPE ^.layer_0 = ^.layer_011
0.949	OUT SPE ^.layer_01.pos.j = ^.layer_011.pos.j
0.927	OUT SPE ^.layer_01.pos.i = bottom(^.layer_011) + ^.layer_01.shape.size.i
0.908	OUT SPE ^.color = black
0.899	IN  SPE ^.layer_0.shape.mask = Full
0.890	IN  SPE ^.layer_01.shape.mask = Full
0.881	IN  SPE ^.layer_011.shape.mask = Full
0.874	IN  SPE ^.color = black
0.182	
0.182	IN  GEN ^.layer_011.shape.mask = ?
0.182	IN  GEN ^.layer_01.shape.mask = ?
0.182	IN  GEN ^.layer_0.shape.mask = ?
0.182	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_011
  _01: a point with color ? at (bottom(^.layer_011) + ^.layer_01.shape.size.i,^.layer_011.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 92.4 + 7581.0 = 7673.4
DL output with Mo: L = 94.0 + 541.2 = 635.1
DL input+output M: L = 186.4 + 8122.1 = 8308.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_011
  _01: a point with color ? at (bottom(^.layer_011) + ^.layer_01.shape.size.i,^.layer_011.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 63.4 = 152.7
DL output with Mo: L = 94.0 + 541.2 = 635.1
DL input+output M: L = 183.2 + 604.6 = 787.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta: (1,2)=9# (2,0)=1 
   (3.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color green at (1,1)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta: (1,2)=9# (2,0)=1 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color brown and mask Full at (1,2)
diff: 
delta: (1,1)=3  (2,0)=1 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta: (1,2)=9# (2,0)=1 
! 1 wrong pixels (generated / expected)

TRAIN d23f8c26.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _011: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta: (1,2)=5# (1,3)=6  (2,0)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
   (3.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _01: a point with color brown at (4,2)
diff: 
delta: (1,2)=5#
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _011: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta: (0,2)=3  (1,2)=5# (1,3)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,2)=5# (1,3)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _011: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta: (1,2)=5# (1,3)=6  (2,0)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 2 wrong pixels (generated / expected)

TRAIN d23f8c26.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01: a point with color cyan at (3,2)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _011: a rectangle with size (2,1) and color green and mask Full at (0,0)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 2 wrong pixels (generated / expected)

TRAIN d23f8c26.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (1,3)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (5,1)
diff: 
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (2,2)=3  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (6,5)=1 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (5,1)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (1,3)
diff: 
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (2,2)=3  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (6,5)=1 
! 5 wrong pixels (generated / expected)

TEST d23f8c26.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 541.2 bits (541.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-71] Checking task d2abd087.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30330.8 = 30343.4
DL output with Mo: L = 12.6 + 30330.8 = 30343.4
DL input+output M: L = 25.2 + 60661.7 = 60686.9

# learning a model for train pairs
2.000	
1.804	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.609	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.420	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.231	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.076	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.920	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.742	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.672	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.602	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.531	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.501	OUT SPE ^.layer_01111 = coloring(^.layer_01111, blue)
0.481	OUT SPE ^.size = ^.size
0.468	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.456	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.444	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.433	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.421	OUT SPE ^.layer_011111.pos = ^.layer_011111.pos
0.410	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.150	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ? at (?,?)
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at ^.layer_0111.pos
  _01111: coloring(^.layer_01111, blue)
  _011111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 7899.1 = 8062.7
DL output with Mo: L = 131.0 + 4251.1 = 4382.1
DL input+output M: L = 294.5 + 12150.2 = 12444.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ? at (?,?)
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at ^.layer_0111.pos
  _01111: coloring(^.layer_01111, blue)
  _011111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 0.0 = 163.5
DL output with Mo: L = 131.0 + 4251.1 = 4382.1
DL input+output M: L = 294.5 + 4251.1 = 4545.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,6)
  _011: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (6,5)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (8,1)
  _011111: a rectangle with size (3,1) and color grey and mask Full at (5,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (5,6)
  _011: a rectangle with size (2,2) and color blue and mask Full at (7,1)
  _0111: a rectangle with size (1,3) and color red and mask Full at (6,5)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (8,1)
  _011111: a rectangle with size (3,1) and color red and mask Full at (5,6)
diff: 
delta:
   (91.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,6)
  _011: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (6,5)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (8,1)
  _011111: a rectangle with size (3,1) and color grey and mask Full at (5,6)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,6)
  _011: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (6,5)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (5,6)
  _011111: a rectangle with size (1,3) and color grey and mask Full at (8,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,6)
  _011: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (8,1)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (6,5)
  _011111: a rectangle with size (3,1) and color grey and mask Full at (5,6)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN d2abd087.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color blue and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color blue and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
  _011111: a rectangle with size (2,1) and color blue and mask Full at (4,8)
diff: 
delta:
   (110.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (7,1)
  _01111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _011111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _011111: a rectangle with size (2,2) and color grey and mask Full at (7,1)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TRAIN d2abd087.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (1,4)
  _011111: a rectangle with size (3,1) and color grey and mask Full at (4,9)
diff: 
delta: (5,1)=5# (5,2)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color blue and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color red and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color red and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (1,4)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (4,9)
diff: 
delta: (5,1)=1  (5,2)=1 
   (223.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (1,4)
  _011111: a rectangle with size (3,1) and color grey and mask Full at (4,9)
diff: 
delta: (5,1)=5# (5,2)=5#
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (1,4)
  _01111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
  _011111: a rectangle with size (3,1) and color grey and mask Full at (4,9)
diff: 
delta: (5,1)=5# (5,2)=5#
! 43 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (4,9)
  _011111: a rectangle with size (2,2) and color grey and mask Full at (1,4)
diff: 
delta: (5,1)=5# (5,2)=5#
! 46 wrong pixels (generated / expected)

TRAIN d2abd087.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,2) and color grey and mask Full at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask .xx|.xx|xx. at (0,5)
  _011: a rectangle with size (1,5) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (4,7)
  _01111: a rectangle with size (1,4) and color grey and mask Full at (2,0)
  _011111: a rectangle with size (1,4) and color grey and mask Full at (5,1)
diff: 
delta: (3,1)=0  (3,2)=0 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,2) and color grey and mask Full at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask .xx|.xx|xx. at (0,5)
  _011: a rectangle with size (1,5) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (4,7)
  _01111: a rectangle with size (1,4) and color grey and mask Full at (5,1)
  _011111: a rectangle with size (1,4) and color grey and mask Full at (2,0)
diff: 
delta: (3,1)=0  (3,2)=0 
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,2) and color grey and mask Full at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask .xx|.xx|xx. at (0,5)
  _011: a rectangle with size (1,5) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (2,0)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (4,7)
  _011111: a rectangle with size (1,4) and color grey and mask Full at (5,1)
diff: 
delta: (3,1)=0  (3,2)=0 
! 35 wrong pixels (generated / expected)

TEST d2abd087.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 4251.1 bits (4251.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-70] Checking task d364b489.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4646.0 = 4658.6
DL output with Mo: L = 12.6 + 18482.3 = 18494.9
DL input+output M: L = 25.2 + 23128.3 = 23153.5

# learning a model for train pairs
2.000	
1.915	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.829	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.742	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.654	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.564	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.523	OUT ADD ^.layer_0 = ^.layer_0
1.483	OUT ADD ^.layer_01 = ^.layer_01
1.443	OUT ADD ^.layer_011 = ^.layer_011
1.403	OUT ADD ^.layer_0111 = ^.layer_0111
1.363	OUT ADD ^.layer_01111 = ^.layer_01111
1.340	IN  SPE ^.layer_0.shape.color = blue
1.316	IN  SPE ^.layer_01.shape.color = blue
1.293	IN  SPE ^.layer_011.shape.color = blue
1.269	IN  SPE ^.layer_0111.shape.color = blue
1.245	IN  SPE ^.layer_01111.shape.color = blue
1.224	OUT SPE ^.size = ^.size
1.203	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.181	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
1.160	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
1.149	OUT SPE ^.layer_0111111.pos = ^.layer_0.pos + (0, 1)
1.137	OUT SPE ^.layer_011111.pos = ^.layer_0.pos - (0, 1)
1.126	OUT SPE ^.layer_01111111.pos = ^.layer_01.pos - (1, 0)
1.115	IN  SPE ^.color = black
1.109	OUT SPE ^.layer_011111.shape.color = orange
1.104	OUT SPE ^.layer_0111111.shape.color = pink
1.098	OUT SPE ^.layer_01111111.shape.color = red
1.095	OUT SPE ^.color = black
0.683	
0.682	IN  GEN ^.layer_01111.shape.color = ?
0.682	IN  GEN ^.layer_0111.shape.color = ?
0.681	IN  GEN ^.layer_011.shape.color = ?
0.680	IN  GEN ^.layer_01.shape.color = ?
0.679	IN  GEN ^.layer_0.shape.color = ?
0.679	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: a point with color orange at ^.layer_0.pos - (0, 1)
  _0111111: a point with color pink at ^.layer_0.pos + (0, 1)
  _01111111: a point with color red at ^.layer_01.pos - (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color blue at (?,?)
  _0111: a point with color blue at (?,?)
  _01111: a point with color blue at (?,?)

DL input  with Mi: L = 109.2 + 1919.3 = 2028.4
DL output with Mo: L = 136.0 + 12062.6 = 12198.6
DL input+output M: L = 245.2 + 13981.9 = 14227.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: a point with color orange at ^.layer_0.pos - (0, 1)
  _0111111: a point with color pink at ^.layer_0.pos + (0, 1)
  _01111111: a point with color red at ^.layer_01.pos - (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 92.4 + 0.0 = 92.4
DL output with Mo: L = 136.0 + 12062.6 = 12198.6
DL input+output M: L = 228.4 + 12062.6 = 12291.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (7,7)
  _01111: a point with color blue at (9,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (7,7)
  _01111: a point with color blue at (9,1)
  _011111: a point with color orange at (1,5)
  _0111111: a point with color pink at (1,7)
  _01111111: a point with color red at (2,9)
diff: 
delta: (0,6)=2  (2,6)=8  (3,8)=7# (4,3)=2  (4,9)=8  (5,2)=7# (5,4)=6  (6,3)=8  (6,7)=2  (7,6)=7# (7,8)=6  (8,1)=2  (8,7)=8  (9,0)=7# (9,2)=6 
   (565.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (7,7)
  _01111: a point with color blue at (9,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN d364b489.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
diff: 
delta: (9,9)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
  _011111: a point with color orange at (0,4)
  _0111111: a point with color pink at (0,6)
  _01111111: a point with color red at (1,0)
diff: 
delta: (1,5)=8  (2,1)=6  (2,9)=2  (3,0)=8  (3,8)=7# (4,5)=2  (4,9)=8  (5,4)=7# (5,6)=6  (6,5)=8  (7,2)=2  (8,1)=7# (8,3)=6  (8,9)=2  (9,2)=8  (9,8)=7# (9,9)=1 
   (640.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
diff: 
delta: (9,9)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (9,9)
diff: 
delta: (8,2)=1 
! 17 wrong pixels (generated / expected)

TRAIN d364b489.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,7)
  _0111: a point with color blue at (3,3)
  _01111: a point with color blue at (6,0)
diff: 
delta: (6,7)=1  (9,4)=1 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,7)
  _0111: a point with color blue at (3,3)
  _01111: a point with color blue at (6,7)
diff: 
delta: (6,0)=1  (9,4)=1 
! 23 wrong pixels (generated / expected)

TEST d364b489.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.2 sec (10.2 sec/task)
bits-train-error = 12062.6 bits (12062.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-69] Checking task d406998b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 18594.9 = 18607.6
DL output with Mo: L = 12.6 + 18594.9 = 18607.6
DL input+output M: L = 25.2 + 37189.9 = 37215.1

# learning a model for train pairs
2.000	
1.776	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.623	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.512	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.443	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.356	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.313	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.270	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.226	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.183	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.139	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.702	
0.701	IN  DEL ^.layer_0111
0.700	IN  DEL ^.layer_011
0.698	IN  DEL ^.layer_01
0.697	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 8121.2 = 8235.3
DL output with Mo: L = 123.1 + 12834.3 = 12957.5
DL input+output M: L = 237.3 + 20955.5 = 21192.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 123.1 + 12834.3 = 12957.5
DL input+output M: L = 135.7 + 12834.3 = 12970.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,10) and color black and layers
diff: 
delta: (0,0)=5# (0,2)=5# (0,5)=5# (0,9)=5# (1,1)=5# (1,4)=5# (1,7)=5# (2,3)=5# (2,6)=5# (2,8)=5#
   (0.0 bits)
data: a background with size (3,10) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color grey at (0,2)
  _011: a point with color green at (0,5)
  _0111: a point with color green at (0,9)
  _01111: a point with color green at (1,1)
  _011111: a point with color grey at (1,4)
  _0111111: a point with color green at (1,7)
diff: 
delta: (2,3)=3  (2,6)=5# (2,8)=5#
   (235.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
diff: 
delta: (0,0)=5# (0,2)=5# (0,5)=5# (0,9)=5# (1,1)=5# (1,4)=5# (1,7)=5# (2,3)=5# (2,6)=5# (2,8)=5#
! size mismatch, 10x10 instead of 3x10

TRAIN d406998b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,12) and color black and layers
diff: 
delta: (0,1)=5# (0,3)=5# (0,6)=5# (0,8)=5# (1,0)=5# (1,4)=5# (1,7)=5# (1,10)=5# (2,2)=5# (2,5)=5# (2,9)=5# (2,11)=5#
   (0.0 bits)
data: a background with size (3,12) and color black and layers
  _0: a point with color green at (0,1)
  _01: a point with color green at (0,3)
  _011: a point with color grey at (0,6)
  _0111: a point with color grey at (0,8)
  _01111: a point with color grey at (1,0)
  _011111: a point with color grey at (1,4)
  _0111111: a point with color green at (1,7)
diff: 
delta: (1,10)=5# (2,2)=5# (2,5)=3  (2,9)=3  (2,11)=3 
   (311.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
diff: 
delta: (0,1)=5# (0,3)=5# (0,6)=5# (0,8)=5# (1,0)=5# (1,4)=5# (1,7)=5# (1,10)=5# (2,2)=5# (2,5)=5# (2,9)=5# (2,11)=5#
! size mismatch, 10x10 instead of 3x12

TRAIN d406998b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,13) and color black and layers
diff: 
delta: (0,2)=5# (0,5)=5# (0,7)=5# (0,11)=5# (1,0)=5# (1,4)=5# (1,6)=5# (1,9)=5# (1,12)=5# (2,1)=5# (2,3)=5# (2,8)=5# (2,10)=5#
   (0.0 bits)
data: a background with size (3,13) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color grey at (0,5)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (0,11)
  _01111: a point with color green at (1,0)
  _011111: a point with color green at (1,4)
  _0111111: a point with color green at (1,6)
diff: 
delta: (1,9)=5# (1,12)=3  (2,1)=5# (2,3)=5# (2,8)=3  (2,10)=3 
   (349.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
diff: 
delta: (0,2)=5# (0,5)=5# (0,7)=5# (0,11)=5# (1,0)=5# (1,4)=5# (1,6)=5# (1,9)=5# (1,12)=5# (2,1)=5# (2,3)=5# (2,8)=5# (2,10)=5#
! size mismatch, 10x10 instead of 3x13

TRAIN d406998b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,14) and color black and layers
diff: 
delta: (0,2)=5# (0,5)=5# (0,7)=5# (0,9)=5# (0,11)=5# (1,0)=5# (1,4)=5# (1,8)=5# (1,10)=5# (1,13)=5# (2,1)=5# (2,3)=5# (2,6)=5# (2,12)=5#
   (0.0 bits)
data: a background with size (3,14) and color black and layers
  _0: a point with color grey at (0,2)
  _01: a point with color green at (0,5)
  _011: a point with color green at (0,7)
  _0111: a point with color green at (0,9)
  _01111: a point with color green at (0,11)
  _011111: a point with color grey at (1,0)
  _0111111: a point with color grey at (1,4)
diff: 
delta: (1,8)=5# (1,10)=5# (1,13)=3  (2,1)=3  (2,3)=3  (2,6)=5# (2,12)=5#
   (387.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
diff: 
delta: (0,2)=5# (0,5)=5# (0,7)=5# (0,9)=5# (0,11)=5# (1,0)=5# (1,4)=5# (1,8)=5# (1,10)=5# (1,13)=5# (2,1)=5# (2,3)=5# (2,6)=5# (2,12)=5#
! size mismatch, 10x10 instead of 3x14

TRAIN d406998b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
diff: 
delta: (0,3)=5# (0,7)=5# (0,9)=5# (0,12)=5# (0,14)=5# (1,0)=5# (1,2)=5# (1,5)=5# (1,8)=5# (1,11)=5# (1,15)=5# (2,1)=5# (2,4)=5# (2,6)=5# (2,10)=5# (2,13)=5# (2,16)=5#
! size mismatch, 10x10 instead of 3x17

TEST d406998b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 12834.3 bits (12834.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-68] Checking task d43fd935.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13156.0 = 13168.6
DL output with Mo: L = 12.6 + 20630.4 = 20643.0
DL input+output M: L = 25.2 + 33786.4 = 33811.7

# learning a model for train pairs
2.000	
1.731	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.488	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.271	OUT ADD ^.layer_01 = ^.layer_0
1.142	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.095	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.050	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.996	OUT ADD ^.layer_010 = ^.layer_01
0.951	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.921	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.872	IN  ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT SPE ^.size = ^.size
0.817	OUT SPE ^.layer_0111.shape = ^.layer_0101.shape
0.804	IN  SPE ^.layer_0.shape.color = green
0.796	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.788	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.780	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.773	IN  SPE ^.layer_0.shape.mask = Full
0.767	IN  SPE ^.color = black
0.763	OUT SPE ^.layer_0.shape.size.j = 1
0.758	OUT SPE ^.layer_0.shape.mask = Full
0.751	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.i + 3
0.744	OUT SPE ^.layer_011.pos.i = min(^.layer_011.pos.i, ^.layer_0101.pos.i)
0.739	OUT SPE ^.layer_0111.pos.j = min(^.layer_011.pos.j, ^.layer_0101.pos.j)
0.734	OUT SPE ^.layer_011.pos.j = min(^.layer_011.pos.j, ^.layer_0101.pos.j) - ^.layer_011.pos.j - ^.layer_0101.pos.j
0.223	
0.223	IN  GEN ^.layer_0.shape.color = ?
0.223	IN  GEN ^.layer_0.shape.mask = ?
0.223	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_0.pos.j)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (min(^.layer_011.pos.i, ^.layer_0101.pos.i),min(^.layer_011.pos.j, ^.layer_0101.pos.j) - ^.layer_011.pos.j - ^.layer_0101.pos.j)
  _0111: ^.layer_0101.shape at (^.layer_0.pos.i + 3,min(^.layer_011.pos.j, ^.layer_0101.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 115.5 + 6752.5 = 6868.0
DL output with Mo: L = 288.8 + 4107.1 = 4395.8
DL input+output M: L = 404.2 + 10859.6 = 11263.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_0.pos.j)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (min(^.layer_011.pos.i, ^.layer_0101.pos.i),min(^.layer_011.pos.j, ^.layer_0101.pos.j) - ^.layer_011.pos.j - ^.layer_0101.pos.j)
  _0111: ^.layer_0101.shape at (^.layer_0.pos.i + 3,min(^.layer_011.pos.j, ^.layer_0101.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 20.0 = 131.0
DL output with Mo: L = 288.8 + 4107.1 = 4395.8
DL input+output M: L = 399.8 + 4127.1 = 4526.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,6)
  _01: a point with color pink at (1,8)
  _011: a point with color blue at (3,8)
diff: 
delta: (8,2)=6  (9,4)=1 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,1) and color pink and mask Full at (5,2)
  _010: a point with color pink at (1,8)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _011: a rectangle with size (1,5) and color blue and mask Full at (3,4)
  _0111: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,6)
diff: 
delta: (0,0)=1  (9,4)=1 
   (107.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,6)
  _01: a point with color pink at (1,8)
  _011: a point with color blue at (3,8)
diff: 
delta: (8,2)=6  (9,4)=1 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,6)
  _01: a point with color pink at (1,8)
  _011: a point with color pink at (8,2)
diff: 
delta: (3,8)=1  (9,4)=1 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,6)
  _01: a point with color blue at (3,8)
  _011: a point with color pink at (1,8)
diff: 
delta: (8,2)=6  (9,4)=1 
! 17 wrong pixels (generated / expected)

TRAIN d43fd935.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a rectangle with size (1,1) and color cyan and mask Full at (0,6)
  _01: a point with color orange at (2,3)
  _011: a point with color cyan at (5,1)
diff: 
delta: (2,9)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color orange and mask Full at (4,5)
  _010: a point with color orange at (2,3)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _011: a rectangle with size (3,4) and color cyan and mask x...|x...|.xxx at (0,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,1)
diff: 
delta: (0,1)=7# (2,4)=7# (6,8)=8  (7,3)=8  (8,1)=7# (9,9)=7#
   (277.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a rectangle with size (1,1) and color cyan and mask Full at (0,6)
  _01: a point with color orange at (2,3)
  _011: a point with color cyan at (2,9)
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a rectangle with size (1,1) and color cyan and mask Full at (0,6)
  _01: a point with color orange at (2,3)
  _011: a point with color cyan at (5,1)
diff: 
delta: (2,9)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a rectangle with size (1,1) and color cyan and mask Full at (0,6)
  _01: a point with color cyan at (2,9)
  _011: a point with color orange at (2,3)
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 23 wrong pixels (generated / expected)

TRAIN d43fd935.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _01: a point with color blue at (5,9)
  _011: a point with color blue at (9,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (1,4)
  _010: a point with color blue at (5,9)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _011: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (9,1)
diff: 
delta:
   (26.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _01: a point with color blue at (5,9)
  _011: a point with color blue at (9,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _01: a point with color blue at (9,1)
  _011: a point with color blue at (5,9)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a rectangle with size (1,1) and color blue and mask Full at (5,9)
  _01: a point with color blue at (2,1)
  _011: a point with color blue at (9,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d43fd935.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _010: a point with color red at (0,3)
  _0101: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _01: a point with color red at (2,7)
  _011: a point with color pink at (3,0)
diff: 
delta: (4,7)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _010: a point with color red at (0,3)
  _0101: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _01: a point with color red at (2,7)
  _011: a point with color pink at (4,7)
diff: 
delta: (3,0)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _010: a point with color red at (0,3)
  _0101: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _01: a point with color pink at (3,0)
  _011: a point with color red at (2,7)
diff: 
delta: (4,7)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 18 wrong pixels (generated / expected)

TEST d43fd935.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.6 sec (56.6 sec/task)
bits-train-error = 4107.1 bits (4107.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-67] Checking task d4469b4b.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27238.9 = 27251.5
DL output with Mo: L = 12.6 + 11300.7 = 11313.3
DL input+output M: L = 25.2 + 38539.5 = 38564.8

# learning a model for train pairs
2.000	
1.277	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.526	OUT SPE ^.size = '(3, 3)
0.460	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.412	OUT SPE ^.layer_0.pos = '(0, 0)
0.377	OUT SPE ^.layer_0.shape.color = grey
0.362	OUT SPE ^.color = black
0.086	
0.085	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color grey and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 7507.0 = 7545.8
DL output with Mo: L = 62.6 + 899.4 = 962.0
DL input+output M: L = 101.4 + 8406.3 = 8507.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color grey and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 62.6 + 899.4 = 962.0
DL input+output M: L = 75.2 + 899.4 = 974.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (1,1)=2  (1,4)=2  (2,0)=2  (2,3)=2  (3,3)=2  (3,4)=2  (4,2)=2  (4,3)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (1,1)=2  (1,4)=2  (2,0)=2  (2,3)=2  (3,3)=2  (3,4)=2  (4,2)=2  (4,3)=2 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (1,2)=1  (1,3)=1  (1,4)=1  (2,1)=1  (2,3)=1  (2,4)=1  (3,1)=1  (3,3)=1  (4,4)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (1,2)=1  (1,3)=1  (1,4)=1  (2,1)=1  (2,3)=1  (2,4)=1  (3,1)=1  (3,3)=1  (4,4)=1 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=3  (1,3)=3  (1,4)=3  (2,1)=3  (2,2)=3  (3,1)=3  (3,3)=3  (4,0)=3  (4,2)=3  (4,3)=3 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=3  (1,3)=3  (1,4)=3  (2,1)=3  (2,2)=3  (3,1)=3  (3,3)=3  (4,0)=3  (4,2)=3  (4,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=1  (0,2)=1  (1,0)=1  (1,3)=1  (1,4)=1  (2,0)=1  (2,1)=1  (2,3)=1  (3,1)=1  (3,3)=1  (4,0)=1  (4,4)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=1  (0,2)=1  (1,0)=1  (1,3)=1  (1,4)=1  (2,0)=1  (2,1)=1  (2,3)=1  (3,1)=1  (3,3)=1  (4,0)=1  (4,4)=1 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (5,5) and color red and layers
diff: 
delta: (0,1)=0  (0,3)=0  (1,1)=0  (1,2)=0  (1,3)=0  (2,2)=0  (2,3)=0  (2,4)=0  (3,1)=0  (3,2)=0  (4,3)=0 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
diff: 
delta: (0,1)=0  (0,3)=0  (1,1)=0  (1,2)=0  (1,3)=0  (2,2)=0  (2,3)=0  (2,4)=0  (3,1)=0  (3,2)=0  (4,3)=0 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (5,5) and color red and layers
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,0)=0  (1,4)=0  (2,0)=0  (2,3)=0  (3,3)=0  (3,4)=0  (4,0)=0  (4,1)=0  (4,3)=0 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,0)=0  (1,4)=0  (2,0)=0  (2,3)=0  (3,3)=0  (3,4)=0  (4,0)=0  (4,1)=0  (4,3)=0 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,1)=3  (0,3)=3  (1,0)=3  (1,1)=3  (2,1)=3  (3,2)=3  (4,0)=3  (4,1)=3  (4,2)=3 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,1)=3  (0,3)=3  (1,0)=3  (1,1)=3  (2,1)=3  (3,2)=3  (4,0)=3  (4,1)=3  (4,2)=3 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (1,2)=1  (1,4)=1  (2,1)=1  (3,1)=1  (3,4)=1  (4,2)=1 
! 4 wrong pixels (generated / expected)

TEST d4469b4b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,1)=3  (0,3)=3  (0,4)=3  (1,2)=3  (2,0)=3  (3,2)=3  (3,4)=3  (4,4)=3 
! 4 wrong pixels (generated / expected)

TEST d4469b4b.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 899.4 bits (899.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-66] Checking task d4a91cb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3017.1 = 3029.7
DL output with Mo: L = 12.6 + 16988.0 = 17000.6
DL input+output M: L = 25.2 + 20005.1 = 20030.3

# learning a model for train pairs
2.000	
1.319	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.112	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.897	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.829	OUT ADD ^.layer_01 = ^.layer_01
0.760	OUT ADD ^.layer_00 = ^.layer_0
0.706	IN  SPE ^.layer_0.shape.color = cyan
0.651	IN  SPE ^.layer_01.shape.color = red
0.615	OUT SPE ^.size = ^.size
0.587	OUT SPE ^.layer_0.shape.size = span(^.layer_0.pos, ^.layer_01.pos) - (1, 1)
0.562	IN  SPE ^.color = black
0.553	OUT SPE ^.layer_0.shape.color = yellow
0.548	OUT SPE ^.color = black
0.121	
0.120	IN  GEN ^.layer_01.shape.color = ?
0.119	IN  GEN ^.layer_0.shape.color = ?
0.119	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - (1, 1) and color yellow and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 52.4 + 1294.4 = 1346.8
DL output with Mo: L = 94.0 + 1669.6 = 1763.6
DL input+output M: L = 146.4 + 2964.0 = 3110.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - (1, 1) and color yellow and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 94.0 + 1669.6 = 1763.6
DL input+output M: L = 139.7 + 1669.6 = 1809.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,12) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color red at (8,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,12) and color black and layers
  _00: a point with color cyan at (2,1)
  _0: a rectangle with size (6,8) and color yellow and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (3,1)
  _01: a point with color red at (8,9)
diff: 
delta:
   (59.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color red at (8,9)
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (8,9)
  _01: a point with color cyan at (2,1)
diff: 
delta:
! 55 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,11) and color black and layers
  _0: a point with color cyan at (1,8)
  _01: a point with color red at (5,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,11) and color black and layers
  _00: a point with color cyan at (1,8)
  _0: a rectangle with size (4,7) and color yellow and mask ......x|......x|......x|xxxxxxx at (2,2)
  _01: a point with color red at (5,1)
diff: 
delta:
   (44.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  _0: a point with color cyan at (1,8)
  _01: a point with color red at (5,1)
diff: 
delta:
! 38 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,11) and color black and layers
  _0: a point with color red at (1,8)
  _01: a point with color cyan at (10,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,11) and color black and layers
  _00: a point with color red at (1,8)
  _0: a rectangle with size (9,6) and color yellow and mask xxxxxx|x.....|x.....|x.....|x.....|x.....|x.....|x.....|x..... at (1,2)
  _01: a point with color cyan at (10,2)
diff: 
delta:
   (63.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color red at (1,8)
  _01: a point with color cyan at (10,2)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a point with color red at (2,11)
  _01: a point with color cyan at (8,3)
diff: 
delta:
! 45 wrong pixels (generated / expected)

TEST d4a91cb9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 1669.6 bits (1669.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-65] Checking task d4f3cd78.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14004.3 = 14016.9
DL output with Mo: L = 12.6 + 27802.0 = 27814.6
DL input+output M: L = 25.2 + 41806.2 = 41831.5

# learning a model for train pairs
2.000	
1.139	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.657	OUT ADD ^.layer_0 = ^.layer_0
0.208	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.194	OUT SPE ^.size = ^.size
0.186	IN  SPE ^.layer_0.shape.color = grey
0.181	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j - 2
0.177	OUT SPE ^.layer_01.shape.color = cyan
0.174	OUT SPE ^.layer_01.pos.j = 3
0.170	IN  SPE ^.color = black
0.168	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.163	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size - (2, 2)
0.159	OUT SPE ^.layer_011.shape.color = cyan
0.156	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.152	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j + 3
0.150	OUT SPE ^.layer_01.shape.mask = Full
0.148	OUT SPE ^.layer_011.shape.size.j = 1
0.145	OUT SPE ^.layer_011.shape.mask = Full
0.143	OUT SPE ^.color = black
0.018	
0.018	IN  GEN ^.layer_0.shape.color = ?
0.018	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color cyan and mask Full at ^.layer_0.pos + (1, 1)
  _011: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_0.pos.j + 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1752.4 = 1794.7
DL output with Mo: L = 131.1 + 298.9 = 429.9
DL input+output M: L = 173.3 + 2051.3 = 2224.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color cyan and mask Full at ^.layer_0.pos + (1, 1)
  _011: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_0.pos.j + 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 131.1 + 298.9 = 429.9
DL input+output M: L = 169.9 + 298.9 = 468.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (7,1) and color cyan and mask Full at (3,5)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
  _01: a rectangle with size (3,4) and color cyan and mask Full at (6,3)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,5)
diff: 
delta:
   (15.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxxxx|x...x|x...x|x....|x...x|xxxxx at (2,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TEST d4f3cd78.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 298.9 bits (298.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-64] Checking task d511f180.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11604.8 = 11617.4
DL output with Mo: L = 12.6 + 11604.8 = 11617.4
DL input+output M: L = 25.2 + 23209.7 = 23234.9

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = swapColor(^.grid, cyan, grey)
0.813	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.785	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.733	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.680	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.626	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.603	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.589	IN  SPE ^.layer_01111.shape.color = red
0.581	IN  SPE ^.layer_0.shape.mask = Full
0.014	
0.012	IN  DEL ^.layer_0
0.009	IN  DEL ^.layer_01
0.008	IN  DEL ^.layer_01111
0.006	IN  DEL ^.layer_0111
0.005	IN  DEL ^.layer_011
0.004	IN  DEL ^.layer_00

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
swapColor(^.grid, cyan, grey)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 130.7 + 6583.5 = 6714.2
DL output with Mo: L = 29.8 + 0.0 = 29.8
DL input+output M: L = 160.5 + 6583.5 = 6744.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
swapColor(^.grid, cyan, grey)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 29.8 + 0.0 = 29.8
DL input+output M: L = 42.4 + 0.0 = 42.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color grey and layers
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=8  (0,3)=8  (0,4)=8  (1,2)=6  (1,4)=4  (2,0)=8  (2,4)=2  (3,0)=8  (3,1)=8  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,2)=1  (4,3)=9# (4,4)=3 
   (0.0 bits)
data: 
2 7#5#5#5#
8 8 6 8 4 
5#8 8 8 2 
5#5#4 3 6 
6 8 1 9#3 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=8  (0,3)=8  (0,4)=8  (1,2)=6  (1,4)=4  (2,0)=8  (2,4)=2  (3,0)=8  (3,1)=8  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,2)=1  (4,3)=9# (4,4)=3 
correct output grid

TRAIN d511f180.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=3  (0,1)=5# (0,2)=1  (1,1)=5# (1,2)=8  (2,0)=2  (2,2)=9#
   (0.0 bits)
data: 
3 8 1 
4 8 5#
2 4 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=3  (0,1)=5# (0,2)=1  (1,1)=5# (1,2)=8  (2,0)=2  (2,2)=9#
correct output grid

TRAIN d511f180.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=6  (0,2)=3  (1,1)=7# (2,0)=8  (2,1)=8  (2,2)=2 
   (0.0 bits)
data: 
6 8 3 
8 7#8 
5#5#2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
diff: 
delta: (0,0)=6  (0,2)=3  (1,1)=7# (2,0)=8  (2,1)=8  (2,2)=2 
correct output grid

TRAIN d511f180.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
diff: 
delta: (0,2)=4  (0,3)=5# (1,0)=3  (1,2)=7# (1,3)=5# (2,0)=3  (2,1)=7# (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
correct output grid

TEST d511f180.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-63] Checking task d5d6de2d.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20512.8 = 20525.4
DL output with Mo: L = 12.6 + 7651.8 = 7664.4
DL input+output M: L = 25.2 + 28164.6 = 28189.9

# learning a model for train pairs
2.000	
1.271	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.588	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.447	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.365	OUT SPE ^.size = ^.size
0.321	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 1)
0.298	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i - 2
0.277	OUT SPE ^.layer_0.shape.color = green
0.264	OUT SPE ^.layer_0.shape.mask = Full
0.254	OUT SPE ^.color = black
0.246	IN  SPE ^.layer_0.shape.color = red
0.238	IN  SPE ^.layer_01.shape.color = red
0.235	IN  SPE ^.color = black
0.082	
0.081	IN  DEL ^.layer_01
0.081	IN  GEN ^.layer_0.shape.color = ?
0.081	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color green and mask Full at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 3127.7 = 3198.7
DL output with Mo: L = 60.1 + 543.2 = 603.3
DL input+output M: L = 131.1 + 3670.9 = 3802.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color green and mask Full at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 60.1 + 543.2 = 603.3
DL input+output M: L = 98.9 + 543.2 = 642.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Border at (5,4)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (2,1)=2  (2,3)=2  (3,1)=2  (3,2)=2  (3,3)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (6,5)
diff: 
delta: (2,2)=3 
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Border at (5,4)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (2,1)=2  (2,3)=2  (3,1)=2  (3,2)=2  (3,3)=2 
! 1 wrong pixels (generated / expected)

TRAIN d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Border at (1,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,5)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Border at (1,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN d5d6de2d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
diff: 
delta: (7,10)=2  (7,11)=2  (8,10)=2  (8,11)=2 
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,2)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
diff: 
delta: (7,10)=2  (7,11)=2  (8,10)=2  (8,11)=2 
! 3 wrong pixels (generated / expected)

TRAIN d5d6de2d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,8) and color red and mask Border at (4,1)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,2)=2  (2,0)=2  (2,1)=2  (2,2)=2 
! 17 wrong pixels (generated / expected)

TEST d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (4,9) and color red and mask Border at (9,15)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2  (18,1)=2  (18,2)=2  (18,3)=2  (18,4)=2  (18,5)=2  (19,1)=2  (19,5)=2  (20,1)=2  (20,5)=2  (21,1)=2  (21,5)=2  (22,1)=2  (22,5)=2  (23,1)=2  (23,2)=2  (23,3)=2  (23,4)=2  (23,5)=2 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Border at (18,1)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2  (9,15)=2  (9,16)=2  (9,17)=2  (9,18)=2  (9,19)=2  (9,20)=2  (9,21)=2  (9,22)=2  (9,23)=2  (10,15)=2  (10,23)=2  (11,15)=2  (11,23)=2  (12,15)=2  (12,16)=2  (12,17)=2  (12,18)=2  (12,19)=2  (12,20)=2  (12,21)=2  (12,22)=2  (12,23)=2 
! 23 wrong pixels (generated / expected)

TEST d5d6de2d.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 543.2 bits (543.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-62] Checking task d631b094.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4126.9 = 4139.5
DL output with Mo: L = 12.6 + 716.1 = 728.7
DL input+output M: L = 25.2 + 4843.0 = 4868.2

# learning a model for train pairs
2.000	
1.460	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.978	OUT SPE ^.color = majorityColor(^.grid)
0.691	OUT SPE ^.size.j = area(^.layer_0.shape)
0.510	OUT SPE ^.size.i = 1
0.486	IN  SPE ^.color = black
0.060	
0.059	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (1,area(^.layer_0.shape)) and color majorityColor(^.grid) and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 1765.4 = 1804.4
DL output with Mo: L = 36.5 + 0.0 = 36.5
DL input+output M: L = 75.5 + 1765.4 = 1840.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (1,area(^.layer_0.shape)) and color majorityColor(^.grid) and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 36.5 + 0.0 = 36.5
DL input+output M: L = 75.3 + 0.0 = 75.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (1,2) and color blue and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
diff: 
delta:
correct output grid

TRAIN d631b094.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (1,3) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
correct output grid

TRAIN d631b094.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN d631b094.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (1,4) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|x. at (0,0)
diff: 
delta:
correct output grid

TRAIN d631b094.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|..x at (0,0)
diff: 
delta:
correct output grid

TEST d631b094.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-61] Checking task d687bc17.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 55422.6 = 55435.2
DL output with Mo: L = 12.6 + 53910.2 = 53922.8
DL input+output M: L = 25.2 + 109332.8 = 109358.1

# learning a model for train pairs
2.000	
1.748	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.516	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.077	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.876	OUT ADD ^.layer_00 = ^.layer_0
0.691	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.525	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.359	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.339	OUT ADD ^.layer_0111 = ^.layer_011
0.328	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.318	IN  ADD ^.layer_0101 = a point with color ? at (?,?)
0.307	IN  ADD ^.layer_01011 = a point with color ? at (?,?)
0.295	IN  ADD ^.layer_010111 = a point with color ? at (?,?)
0.287	OUT ADD ^.layer_0110 = ^.layer_0111
0.280	OUT ADD ^.layer_010 = ^.layer_010111.shape at (?,?)
0.272	OUT ADD ^.layer_001 = ^.layer_01
0.260	OUT SPE ^.size = ^.size
0.255	OUT SPE ^.layer_011.shape.size = '(1, 2)
0.250	OUT SPE ^.layer_01.shape.size = '(2, 1)
0.247	OUT SPE ^.layer_01.pos.i = '0
0.244	OUT SPE ^.layer_011.pos.j = right(^.layer_011)
0.241	OUT SPE ^.layer_0.shape.size.i = 2
0.238	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.j + 3
0.235	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.233	OUT SPE ^.layer_0.shape.mask = Full
0.232	OUT SPE ^.layer_01.shape.mask = Full
0.230	OUT SPE ^.layer_011.shape.mask = Full
0.227	OUT SPE ^.layer_010.pos.i = ^.layer_010111.pos.i
0.225	OUT SPE ^.layer_0.pos.i = ^.layer_01.pos.j + ^.layer_01.pos.i - ^.layer_010.pos.i
0.223	IN  SPE ^.layer_0.shape.mask = Full
0.221	IN  SPE ^.layer_01.shape.mask = Full
0.219	IN  SPE ^.layer_011.shape.mask = Full
0.218	IN  SPE ^.layer_0111.shape.mask = Full
0.216	OUT SPE ^.color = black
0.215	IN  SPE ^.color = black
0.042	
0.042	IN  GEN ^.layer_0111.shape.mask = ?
0.042	IN  GEN ^.layer_011.shape.mask = ?
0.042	IN  GEN ^.layer_01.shape.mask = ?
0.042	IN  GEN ^.layer_0.shape.mask = ?
0.042	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: ^.layer_01
  _0: a rectangle with size (2,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.j + ^.layer_01.pos.i - ^.layer_010.pos.i,?)
  _010: ^.layer_010111.shape at (^.layer_010111.pos.i,?)
  _01: a rectangle with size '(2, 1) and color ? and mask Full at ('0,?)
  _0110: ^.layer_0111
  _011: a rectangle with size '(1, 2) and color ? and mask Full at (^.layer_011.pos.j + 3,right(^.layer_011))
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01011: a point with color ? at (?,?)
  _010111: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 179.7 + 9568.4 = 9748.1
DL output with Mo: L = 306.3 + 1802.9 = 2109.2
DL input+output M: L = 486.0 + 11371.3 = 11857.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: ^.layer_01
  _0: a rectangle with size (2,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.j + ^.layer_01.pos.i - ^.layer_010.pos.i,?)
  _010: ^.layer_010111.shape at (^.layer_010111.pos.i,?)
  _01: a rectangle with size '(2, 1) and color ? and mask Full at ('0,?)
  _0110: ^.layer_0111
  _011: a rectangle with size '(1, 2) and color ? and mask Full at (^.layer_011.pos.j + 3,right(^.layer_011))
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01011: a point with color ? at (?,?)
  _010111: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 175.6 + 0.0 = 175.6
DL output with Mo: L = 306.3 + 1802.9 = 2109.2
DL input+output M: L = 481.8 + 1802.9 = 2284.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a point with color green at (2,10)
  _0101: a point with color red at (3,3)
  _01011: a point with color orange at (4,7)
  _010111: a point with color green at (5,3)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _0111: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (6,5)=8  (7,9)=4  (7,11)=2 
   (0.0 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _001: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _0: a rectangle with size (2,1) and color cyan and mask Full at (8,5)
  _010: a point with color green at (5,13)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,9)
  _0110: a rectangle with size (8,1) and color green and mask Full at (1,14)
  _011: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _0111: a rectangle with size (8,1) and color red and mask Full at (1,0)
diff: 
delta: (2,13)=3  (7,1)=2 
   (112.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a point with color green at (2,10)
  _0101: a point with color red at (3,3)
  _01011: a point with color orange at (4,7)
  _010111: a point with color green at (5,3)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _0111: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (6,5)=8  (7,9)=4  (7,11)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a point with color green at (2,10)
  _0101: a point with color red at (3,3)
  _01011: a point with color orange at (4,7)
  _010111: a point with color green at (5,3)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
  _0111: a rectangle with size (8,1) and color red and mask Full at (1,0)
diff: 
delta: (6,5)=8  (7,9)=4  (7,11)=2 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a point with color green at (2,10)
  _0101: a point with color red at (3,3)
  _01011: a point with color orange at (4,7)
  _010111: a point with color green at (5,3)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _0111: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (6,5)=8  (7,9)=4  (7,11)=2 
! 8 wrong pixels (generated / expected)

TRAIN d687bc17.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a point with color orange at (2,9)
  _0101: a point with color red at (3,7)
  _01011: a point with color green at (4,4)
  _010111: a point with color yellow at (6,8)
  _01: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _011: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _0111: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (8,3)=8  (9,5)=1  (9,8)=7#
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _001: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _0: a rectangle with size (2,2) and color orange and mask Full at (10,8)
  _010: a point with color yellow at (6,10)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,5)
  _0110: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
  _011: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _0111: a rectangle with size (10,1) and color red and mask Full at (1,0)
diff: 
delta:
   (34.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a point with color orange at (2,9)
  _0101: a point with color red at (3,7)
  _01011: a point with color green at (4,4)
  _010111: a point with color yellow at (6,8)
  _01: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _011: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _0111: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (8,3)=8  (9,5)=1  (9,8)=7#
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a point with color orange at (2,9)
  _0101: a point with color red at (3,7)
  _01011: a point with color green at (4,4)
  _010111: a point with color yellow at (6,8)
  _01: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
  _0111: a rectangle with size (10,1) and color red and mask Full at (1,0)
diff: 
delta: (8,3)=8  (9,5)=1  (9,8)=7#
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a point with color orange at (2,9)
  _0101: a point with color red at (3,7)
  _01011: a point with color green at (4,4)
  _010111: a point with color yellow at (6,8)
  _01: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _0111: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (8,3)=8  (9,5)=1  (9,8)=7#
! 7 wrong pixels (generated / expected)

TRAIN d687bc17.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a point with color red at (2,2)
  _0101: a point with color pink at (3,8)
  _01011: a point with color cyan at (4,4)
  _010111: a point with color yellow at (7,3)
  _01: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _011: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _0111: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (9,6)=8  (10,2)=8 
   (0.0 bits)
data: a background with size (14,11) and color black and layers
  _00: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _001: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _0: a rectangle with size (2,2) and color cyan and mask Full at (9,9)
  _010: a point with color yellow at (7,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,8)
  _0110: a rectangle with size (1,9) and color green and mask Full at (13,1)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,9)
  _0111: a rectangle with size (1,9) and color pink and mask Full at (0,1)
diff: 
delta:
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a point with color red at (2,2)
  _0101: a point with color pink at (3,8)
  _01011: a point with color cyan at (4,4)
  _010111: a point with color yellow at (7,3)
  _01: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _011: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _0111: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (9,6)=8  (10,2)=8 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a point with color red at (2,2)
  _0101: a point with color pink at (3,8)
  _01011: a point with color cyan at (4,4)
  _010111: a point with color yellow at (7,3)
  _01: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _011: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _0111: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (9,6)=8  (10,2)=8 
! 7 wrong pixels (generated / expected)

TRAIN d687bc17.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a point with color cyan at (2,7)
  _0101: a point with color blue at (2,12)
  _01011: a point with color red at (3,3)
  _010111: a point with color green at (3,14)
  _01: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _011: a rectangle with size (12,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (12,1) and color red and mask Full at (1,16)
diff: 
delta: (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a point with color cyan at (2,7)
  _0101: a point with color blue at (2,12)
  _01011: a point with color red at (3,3)
  _010111: a point with color green at (3,14)
  _01: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _011: a rectangle with size (12,1) and color red and mask Full at (1,16)
  _0111: a rectangle with size (12,1) and color blue and mask Full at (1,0)
diff: 
delta: (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a point with color cyan at (2,7)
  _0101: a point with color blue at (2,12)
  _01011: a point with color red at (3,3)
  _010111: a point with color green at (3,14)
  _01: a rectangle with size (12,1) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _0111: a rectangle with size (12,1) and color red and mask Full at (1,16)
diff: 
delta: (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! 12 wrong pixels (generated / expected)

TEST d687bc17.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 52.4 sec (52.4 sec/task)
bits-train-error = 1802.9 bits (1802.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-60] Checking task d6ad076f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41143.5 = 41156.1
DL output with Mo: L = 12.6 + 54181.0 = 54193.6
DL input+output M: L = 25.2 + 95324.5 = 95349.7

# learning a model for train pairs
2.000	
1.401	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	OUT ADD ^.layer_0 = ^.layer_0
0.595	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.290	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.101	OUT ADD ^.layer_011 = ^.layer_01
0.090	OUT SPE ^.size = ^.size
0.087	OUT SPE ^.layer_01.shape.color = cyan
0.084	IN  SPE ^.layer_0.shape.mask = Full
0.082	IN  SPE ^.layer_01.shape.mask = Full
0.080	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i + 3
0.078	OUT SPE ^.layer_01.shape.mask = Full
0.076	OUT SPE ^.layer_01.pos.j = right(^.layer_0) / '2
0.074	IN  SPE ^.color = black
0.073	OUT SPE ^.color = black
0.012	
0.012	IN  GEN ^.layer_01.shape.mask = ?
0.012	IN  GEN ^.layer_0.shape.mask = ?
0.012	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color cyan and mask Full at (^.layer_01.pos.i + 3,right(^.layer_0) / '2)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.4 + 2544.2 = 2610.6
DL output with Mo: L = 94.2 + 400.9 = 495.0
DL input+output M: L = 160.5 + 2945.1 = 3105.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color cyan and mask Full at (^.layer_01.pos.i + 3,right(^.layer_0) / '2)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 94.2 + 400.9 = 495.0
DL input+output M: L = 158.4 + 440.9 = 599.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (4,2)
  _011: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
   (11.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,6) and color orange and mask Full at (7,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d6ad076f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _011: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (13.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (5,3) and color pink and mask Full at (3,7)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN d6ad076f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (5,4) and color cyan and mask Full at (3,4)
  _011: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
   (15.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,9) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,6) and color brown and mask Full at (8,3)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN d6ad076f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,4) and color blue and mask Full at (0,0)
  _01: a rectangle with size (6,3) and color red and mask Full at (1,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Full at (1,7)
  _01: a rectangle with size (8,4) and color blue and mask Full at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color blue and layers
  _0: a rectangle with size (10,10) and color black and mask ....xxxxxx|....xxx...|....xxx...|....xxx...|....xxx...|....xxx...|....xxx...|....xxxxxx|xxxxxxxxxx|xxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,3) and color red and mask Full at (1,7)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TEST d6ad076f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.7 sec (15.7 sec/task)
bits-train-error = 400.9 bits (400.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-59] Checking task d89b689b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9786.3 = 9798.9
DL output with Mo: L = 12.6 + 5273.2 = 5285.8
DL input+output M: L = 25.2 + 15059.5 = 15084.7

# learning a model for train pairs
2.000	
1.637	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.521	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.405	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.286	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.163	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.049	OUT SPE ^.size = ^.size
0.984	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.922	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.859	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.795	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.728	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.667	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (0, 1)
0.606	OUT SPE ^.layer_011.pos = ^.layer_0.pos + (1, 0)
0.545	OUT SPE ^.layer_0111.pos = ^.layer_0.pos + (1, 1)
0.514	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.484	OUT SPE ^.layer_011.shape = ^.layer_01111.shape
0.467	IN  SPE ^.layer_0.shape.color = cyan
0.453	OUT SPE ^.color = black
0.443	IN  SPE ^.layer_0.shape.mask = Full
0.436	IN  SPE ^.color = black
0.100	
0.100	IN  GEN ^.layer_0.shape.color = ?
0.100	IN  GEN ^.layer_0.shape.mask = ?
0.100	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at ^.layer_0.pos
  _01: a point with color ? at ^.layer_0.pos + (0, 1)
  _011: ^.layer_01111.shape at ^.layer_0.pos + (1, 0)
  _0111: ^.layer_0111.shape at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 106.2 + 3307.7 = 3413.9
DL output with Mo: L = 122.9 + 338.6 = 461.5
DL input+output M: L = 229.1 + 3646.3 = 3875.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at ^.layer_0.pos
  _01: a point with color ? at ^.layer_0.pos + (0, 1)
  _011: ^.layer_01111.shape at ^.layer_0.pos + (1, 0)
  _0111: ^.layer_0111.shape at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 20.0 = 121.7
DL output with Mo: L = 122.9 + 338.6 = 461.5
DL input+output M: L = 224.6 + 358.6 = 583.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
  _0111: a point with color brown at (9,9)
  _01111: a point with color yellow at (8,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (4,4)
  _01: a point with color orange at (4,5)
  _011: a point with color yellow at (5,4)
  _0111: a point with color brown at (5,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
  _0111: a point with color yellow at (8,1)
  _01111: a point with color brown at (9,9)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
  _0111: a point with color brown at (9,9)
  _01111: a point with color yellow at (8,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color yellow at (8,1)
  _0111: a point with color pink at (3,1)
  _01111: a point with color brown at (9,9)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d89b689b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color grey at (0,2)
  _011: a point with color brown at (1,8)
  _0111: a point with color blue at (6,9)
  _01111: a point with color red at (8,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (4,4)
  _01: a point with color brown at (4,5)
  _011: a point with color red at (5,4)
  _0111: a point with color blue at (5,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color grey at (0,2)
  _011: a point with color brown at (1,8)
  _0111: a point with color blue at (6,9)
  _01111: a point with color red at (8,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color grey at (0,2)
  _011: a point with color brown at (1,8)
  _0111: a point with color red at (8,1)
  _01111: a point with color blue at (6,9)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color grey at (0,2)
  _011: a point with color blue at (6,9)
  _0111: a point with color brown at (1,8)
  _01111: a point with color red at (8,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN d89b689b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color yellow at (0,9)
  _0111: a point with color pink at (6,9)
  _01111: a point with color green at (7,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,5)
  _01: a point with color yellow at (2,6)
  _011: a point with color green at (3,5)
  _0111: a point with color pink at (3,6)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color yellow at (0,9)
  _0111: a point with color pink at (6,9)
  _01111: a point with color green at (7,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color yellow at (0,9)
  _0111: a point with color green at (7,2)
  _01111: a point with color pink at (6,9)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color pink at (6,9)
  _0111: a point with color yellow at (0,9)
  _01111: a point with color green at (7,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN d89b689b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color green at (3,1)
  _0111: a point with color orange at (8,8)
  _01111: a point with color pink at (9,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color green at (3,1)
  _0111: a point with color pink at (9,2)
  _01111: a point with color orange at (8,8)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color orange at (8,8)
  _0111: a point with color green at (3,1)
  _01111: a point with color pink at (9,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TEST d89b689b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.5 sec (6.5 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-58] Checking task d8c310e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16322.3 = 16335.0
DL output with Mo: L = 12.6 + 29612.2 = 29624.8
DL input+output M: L = 25.2 + 45934.5 = 45959.8

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.676	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.530	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.401	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.364	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.321	IN  ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.315	IN  SPE ^.layer_0.shape.mask = Full
0.309	IN  SPE ^.layer_0100.shape.mask = Full
0.303	IN  SPE ^.layer_01.shape.mask = Full
0.297	IN  SPE ^.layer_011.shape.mask = Full
0.293	IN  SPE ^.color = black
0.009	
0.007	IN  DEL ^.layer_011
0.006	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_0100
0.003	IN  DEL ^.layer_0
0.001	IN  DEL ^.layer_010
0.001	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 133.7 + 4634.0 = 4767.7
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 154.9 + 4634.0 = 4788.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,15) and color black and layers
diff: 
delta: (3,1)=2  (3,2)=2  (3,4)=2  (3,5)=2  (4,0)=1  (4,1)=2  (4,2)=2  (4,3)=1  (4,4)=2  (4,5)=2  (4,6)=1 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 2 2 0 2 2 0 2 2 0 2 2 0 2 2 
1 2 2 1 2 2 1 2 2 1 2 2 1 2 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
diff: 
delta: (3,1)=2  (3,2)=2  (3,4)=2  (3,5)=2  (4,0)=1  (4,1)=2  (4,2)=2  (4,3)=1  (4,4)=2  (4,5)=2  (4,6)=1 
correct output grid

TRAIN d8c310e9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,15) and color black and layers
diff: 
delta: (2,2)=2  (2,6)=2  (3,2)=2  (3,6)=2  (4,0)=3  (4,1)=3  (4,2)=2  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=2  (4,7)=1 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 
0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 
3 3 2 1 3 3 2 1 3 3 2 1 3 3 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
diff: 
delta: (2,2)=2  (2,6)=2  (3,2)=2  (3,6)=2  (4,0)=3  (4,1)=3  (4,2)=2  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=2  (4,7)=1 
correct output grid

TRAIN d8c310e9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,15) and color black and layers
diff: 
delta: (2,0)=4  (2,5)=4  (2,6)=4  (3,0)=4  (3,1)=3  (3,4)=3  (3,5)=4  (3,6)=4  (3,7)=3  (4,0)=4  (4,1)=3  (4,2)=2  (4,3)=2  (4,4)=3  (4,5)=4  (4,6)=4  (4,7)=3  (4,8)=2  (4,9)=2 
   (0.0 bits)
data: 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
4 0 0 0 0 4 4 0 0 0 0 4 4 0 0 
4 3 0 0 3 4 4 3 0 0 3 4 4 3 0 
4 3 2 2 3 4 4 3 2 2 3 4 4 3 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
diff: 
delta: (2,0)=4  (2,5)=4  (2,6)=4  (3,0)=4  (3,1)=3  (3,4)=3  (3,5)=4  (3,6)=4  (3,7)=3  (4,0)=4  (4,1)=3  (4,2)=2  (4,3)=2  (4,4)=3  (4,5)=4  (4,6)=4  (4,7)=3  (4,8)=2  (4,9)=2 
correct output grid

TRAIN d8c310e9.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
diff: 
delta: (2,2)=2  (2,6)=2  (3,0)=6  (3,1)=2  (3,2)=2  (3,4)=6  (3,5)=2  (3,6)=2  (3,8)=6  (3,9)=2  (4,0)=6  (4,1)=6  (4,2)=2  (4,3)=3  (4,4)=6  (4,5)=6  (4,6)=2  (4,7)=3  (4,8)=6  (4,9)=6 
correct output grid

TEST d8c310e9.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.0 sec (2.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-57] Checking task d90796e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8594.9 = 8607.5
DL output with Mo: L = 12.6 + 6430.5 = 6443.2
DL input+output M: L = 25.2 + 15025.4 = 15050.6

# learning a model for train pairs
2.000	
1.905	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.809	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.734	OUT SPE ^.size = ^.size
1.663	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.592	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.520	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.476	OUT SPE ^.layer_0.pos = ^.layer_0.pos
1.435	OUT SPE ^.layer_01.pos = ^.layer_01.pos
1.423	OUT SPE ^.color = black
1.415	IN  SPE ^.color = black
0.643	
0.641	IN  DEL ^.layer_011
0.641	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at ^.layer_0.pos
  _01: a point with color ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.5 + 6658.3 = 6719.8
DL output with Mo: L = 36.1 + 4047.9 = 4084.0
DL input+output M: L = 97.6 + 10706.2 = 10803.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at ^.layer_0.pos
  _01: a point with color ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 20.0 = 65.6
DL output with Mo: L = 36.1 + 4047.9 = 4084.0
DL input+output M: L = 81.7 + 4067.9 = 4149.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color grey at (2,1)
diff: 
delta: (0,1)=2 
   (2.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color grey at (2,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color red at (0,1)
diff: 
delta: (2,1)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color grey at (2,1)
diff: 
delta: (0,1)=2 
! 2 wrong pixels (generated / expected)

TRAIN d90796e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,6) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color green at (1,2)
diff: 
delta: (1,3)=2  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
   (0.0 bits)
data: a background with size (7,6) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color cyan at (1,2)
diff: 
delta: (3,1)=8  (3,5)=2  (5,0)=5# (5,3)=3 
   (159.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color green at (1,2)
diff: 
delta: (1,3)=2  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,6) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color red at (1,3)
diff: 
delta: (1,2)=3  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 7 wrong pixels (generated / expected)

TRAIN d90796e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color green at (1,0)
diff: 
delta: (1,6)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color green at (1,0)
diff: 
delta: (1,6)=3  (2,0)=5# (2,3)=8  (5,0)=8  (5,5)=8  (6,3)=5#
   (233.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color green at (1,0)
diff: 
delta: (1,6)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color green at (1,6)
diff: 
delta: (1,0)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 8 wrong pixels (generated / expected)

TRAIN d90796e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a point with color red at (0,4)
  _01: a point with color grey at (0,8)
diff: 
delta: (1,1)=2  (1,6)=3  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,9) and color black and layers
  _0: a point with color red at (0,4)
  _01: a point with color red at (1,1)
diff: 
delta: (0,8)=5# (1,6)=3  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 13 wrong pixels (generated / expected)

TEST d90796e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 4047.9 bits (4047.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-56] Checking task d9f24cd1.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4646.0 = 4658.6
DL output with Mo: L = 12.6 + 25566.1 = 25578.7
DL input+output M: L = 25.2 + 30212.1 = 30237.3

# learning a model for train pairs
2.000	
1.726	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.461	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.195	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.109	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.023	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.937	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.849	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.758	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.729	OUT ADD ^.layer_00 = ^.layer_0
0.699	OUT ADD ^.layer_010 = ^.layer_01
0.675	IN  SPE ^.layer_0.shape.color = grey
0.652	IN  SPE ^.layer_01.shape.color = grey
0.628	IN  SPE ^.layer_0111.shape.color = red
0.605	IN  SPE ^.layer_01111.shape.color = red
0.589	OUT SPE ^.layer_011.shape = scaleTo(^.layer_0111.shape, projI(^.size) + (0, 1))
0.572	OUT SPE ^.layer_01.shape = scaleTo(^.layer_0111.shape, projI(^.size) + (0, 1))
0.557	OUT SPE ^.size = ^.size
0.546	OUT SPE ^.layer_0.shape.size = projI(^.size) + (0, 2)
0.535	IN  SPE ^.color = black
0.531	OUT SPE ^.layer_0.shape.color = red
0.527	OUT SPE ^.layer_0.pos.i = '0
0.522	OUT SPE ^.layer_01.pos.i = '0
0.518	OUT SPE ^.layer_011.pos.i = '0
0.514	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.i - 1
0.511	OUT SPE ^.layer_011.pos.j = span(^.layer_01.pos.j, ^.layer_011.pos.j) - 1
0.509	OUT SPE ^.layer_0.pos = projJ(^.layer_01.pos) - translationSym(flipWidth, ^.layer_0111, ^.layer_01)
0.507	OUT SPE ^.color = black
0.071	
0.066	IN  DEL ^.layer_01111
0.066	IN  GEN ^.layer_0111.shape.color = ?
0.065	IN  GEN ^.layer_01.shape.color = ?
0.064	IN  GEN ^.layer_0.shape.color = ?
0.064	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size projI(^.size) + (0, 2) and color red and mask ? at projJ(^.layer_01.pos) - translationSym(flipWidth, ^.layer_0111, ^.layer_01)
  _010: ^.layer_01
  _01: scaleTo(^.layer_0111.shape, projI(^.size) + (0, 1)) at ('0,^.layer_01.pos.i - 1)
  _011: scaleTo(^.layer_0111.shape, projI(^.size) + (0, 1)) at ('0,span(^.layer_01.pos.j, ^.layer_011.pos.j) - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color red at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 105.9 + 2032.1 = 2138.0
DL output with Mo: L = 302.3 + 920.2 = 1222.6
DL input+output M: L = 408.2 + 2952.4 = 3360.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size projI(^.size) + (0, 2) and color red and mask ? at projJ(^.layer_01.pos) - translationSym(flipWidth, ^.layer_0111, ^.layer_01)
  _010: ^.layer_01
  _01: scaleTo(^.layer_0111.shape, projI(^.size) + (0, 1)) at ('0,^.layer_01.pos.i - 1)
  _011: scaleTo(^.layer_0111.shape, projI(^.size) + (0, 1)) at ('0,span(^.layer_01.pos.j, ^.layer_011.pos.j) - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 0.0 = 77.0
DL output with Mo: L = 302.3 + 920.2 = 1222.6
DL input+output M: L = 379.3 + 920.2 = 1299.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,4)
diff: 
delta: (9,6)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (3,6)
  _0: a rectangle with size (10,2) and color red and mask .x|.x|.x|.x|xx|x.|x.|x.|x.|x. at (0,6)
  _010: a point with color grey at (5,2)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,1)
diff: 
delta:
   (26.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,4)
diff: 
delta: (9,6)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,6)
diff: 
delta: (9,4)=2 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,4)
  _0111: a point with color red at (9,1)
diff: 
delta: (9,6)=2 
! 30 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,1)
diff: 
delta: (9,4)=2  (9,7)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (3,5)
  _0: a rectangle with size (10,2) and color red and mask .x|.x|.x|.x|.x|.x|xx|x.|x.|x. at (0,1)
  _010: a point with color grey at (5,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,7)
diff: 
delta: (6,8)=5#
   (65.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,1)
diff: 
delta: (9,4)=2  (9,7)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,4)
diff: 
delta: (9,1)=2  (9,7)=2 
! 21 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (2,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (6,4)
  _0111: a point with color red at (9,1)
diff: 
delta: (9,4)=2  (9,8)=2 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (2,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (6,4)
  _0111: a point with color red at (9,4)
diff: 
delta: (9,1)=2  (9,8)=2 
! 42 wrong pixels (generated / expected)

TEST d9f24cd1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.8 sec (19.8 sec/task)
bits-train-error = 920.2 bits (920.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-55] Checking task d9fac9be.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35985.2 = 35997.8
DL output with Mo: L = 12.6 + 624.4 = 637.0
DL input+output M: L = 25.2 + 36609.6 = 36634.8

# learning a model for train pairs
2.000	
1.591	OUT SPE ^.size = '(1, 1)
1.284	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.199	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.169	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.629	OUT SPE ^.color = ^.layer_011.shape.color
0.601	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.578	IN  ADD ^.layer_01101 = a point with color ? at (?,?)
0.556	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.553	IN  SPE ^.color = black
0.552	IN  ADD ^.layer_011011 = a point with color ? at (?,?)
0.530	IN  ADD ^.layer_0110111 = a point with color ? at (?,?)
0.526	IN  SPE ^.layer_011.shape.mask = Full
0.055	
0.055	IN  DEL ^.layer_0110
0.054	IN  DEL ^.layer_0111
0.054	IN  DEL ^.layer_0110111
0.054	IN  GEN ^.layer_011.shape.mask = ?
0.054	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ^.layer_011.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011011: a point with color ? at (?,?)
  _0110111: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 176.7 + 16931.7 = 17108.4
DL output with Mo: L = 32.2 + 0.0 = 32.2
DL input+output M: L = 208.9 + 16931.7 = 17140.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ^.layer_011.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011011: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 120.3 + 0.0 = 120.3
DL output with Mo: L = 32.2 + 0.0 = 32.2
DL input+output M: L = 152.5 + 0.0 = 152.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (2,6)
  _01101: a point with color red at (0,0)
  _011011: a point with color red at (0,5)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (2,2)=2  (4,0)=2  (4,5)=2 
   (0.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (2,6)
  _01101: a point with color red at (0,0)
  _011011: a point with color red at (0,5)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (2,2)=2  (4,0)=2  (4,5)=2 
correct output grid

TRAIN d9fac9be.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,2)
  _01101: a point with color cyan at (0,0)
  _011011: a point with color cyan at (0,2)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,8)
diff: 
delta: (1,4)=8  (2,2)=8  (3,0)=8  (3,3)=3  (3,6)=8  (6,0)=3  (6,7)=8 
   (0.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,2)
  _01101: a point with color cyan at (0,0)
  _011011: a point with color cyan at (0,2)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,8)
diff: 
delta: (1,4)=8  (2,2)=8  (3,0)=8  (3,3)=3  (3,6)=8  (6,0)=3  (6,7)=8 
correct output grid

TRAIN d9fac9be.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,1)
  _01: a rectangle with size (4,5) and color red and mask x....|.x...|..x.x|...x. at (0,1)
  _01101: a point with color blue at (0,0)
  _011011: a point with color red at (0,5)
  _011: a rectangle with size (1,2) and color blue and mask Full at (2,7)
diff: 
delta: (2,0)=2  (2,2)=1  (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
   (0.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,1)
  _01: a rectangle with size (4,5) and color red and mask x....|.x...|..x.x|...x. at (0,1)
  _01101: a point with color blue at (0,0)
  _011011: a point with color red at (0,5)
  _011: a rectangle with size (1,2) and color blue and mask Full at (2,7)
diff: 
delta: (2,0)=2  (2,2)=1  (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
correct output grid

TRAIN d9fac9be.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xxx|xx.x|.xxx|x... at (7,2)
  _01: a rectangle with size (3,4) and color green and mask x...|.xx.|...x at (1,0)
  _01101: a point with color cyan at (0,1)
  _011011: a point with color green at (0,10)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (2,3)
diff: 
delta: (0,11)=8  (1,7)=8  (1,9)=3  (2,11)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,4)=8 
   (0.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xxx|xx.x|.xxx|x... at (7,2)
  _01: a rectangle with size (3,4) and color green and mask x...|.xx.|...x at (1,0)
  _01101: a point with color cyan at (0,1)
  _011011: a point with color green at (0,10)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (2,3)
diff: 
delta: (0,11)=8  (1,7)=8  (1,9)=3  (2,11)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,4)=8 
correct output grid

TRAIN d9fac9be.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask x....|.xxx.|.x.xx|.xxx.|....x at (7,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _01101: a point with color blue at (0,9)
  _011011: a point with color blue at (1,0)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (11,2)
diff: 
delta: (1,6)=4  (1,9)=1  (3,4)=1  (3,5)=4  (3,8)=4  (4,1)=4  (4,3)=1  (5,5)=1  (5,11)=1  (6,0)=1  (7,8)=4  (8,11)=4  (9,0)=4  (9,5)=4  (10,11)=4 
correct output grid

TEST d9fac9be.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-54] Checking task dae9d2b5.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12967.1 = 12979.7
DL output with Mo: L = 12.6 + 6560.4 = 6573.0
DL input+output M: L = 25.2 + 19527.5 = 19552.7

# learning a model for train pairs
2.000	
1.437	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.134	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.951	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.853	OUT SPE ^.size = ^.size - (0, 3)
0.789	OUT SPE ^.color = pink
0.746	OUT SPE ^.layer_0.shape.color = black
0.708	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.646	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.623	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.i / '2
0.597	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.i + ^.layer_0111.pos.i - ^.layer_01.pos.i
0.572	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.i / '2
0.559	IN  SPE ^.layer_01.shape.mask = Full
0.550	IN  SPE ^.color = black
0.167	
0.167	IN  GEN ^.layer_01.shape.mask = ?
0.167	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - (0, 3) and color pink and layers
  _0: a rectangle with size (^.layer_01.shape.size.i + ^.layer_0111.pos.i - ^.layer_01.pos.i,?) and color black and mask ? at (^.layer_011.pos.i / '2,^.layer_011.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 96.7 + 5047.5 = 5144.2
DL output with Mo: L = 197.2 + 812.9 = 1010.1
DL input+output M: L = 293.9 + 5860.4 = 6154.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - (0, 3) and color pink and layers
  _0: a rectangle with size (^.layer_01.shape.size.i + ^.layer_0111.pos.i - ^.layer_01.pos.i,?) and color black and mask ? at (^.layer_011.pos.i / '2,^.layer_011.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 95.6 + 71.7 = 167.3
DL output with Mo: L = 197.2 + 812.9 = 1010.1
DL input+output M: L = 292.8 + 884.6 = 1177.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,3)
  _011: a point with color green at (1,3)
  _0111: a point with color green at (2,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.xx|xx. at (0,0)
diff: 
delta:
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,3)
  _011: a point with color green at (1,3)
  _0111: a point with color green at (2,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,3)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (1,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _011: a point with color yellow at (2,2)
  _0111: a point with color yellow at (0,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color black and mask xx|x. at (1,1)
diff: 
delta:
   (14.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _011: a point with color yellow at (0,2)
  _0111: a point with color yellow at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _011: a point with color yellow at (2,2)
  _0111: a point with color yellow at (0,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _01: a rectangle with size (2,1) and color green and mask Full at (1,5)
  _011: a point with color green at (1,3)
  _0111: a point with color green at (0,4)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _01: a rectangle with size (2,1) and color green and mask Full at (1,5)
  _011: a point with color green at (0,4)
  _0111: a point with color green at (1,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _01: a rectangle with size (2,1) and color green and mask Full at (1,5)
  _011: a point with color green at (1,3)
  _0111: a point with color green at (0,4)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
  _011: a point with color green at (1,5)
  _0111: a point with color yellow at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|xx.|.xx at (0,0)
diff: 
delta:
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
  _011: a point with color green at (1,5)
  _0111: a point with color yellow at (2,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
  _011: a point with color yellow at (2,0)
  _0111: a point with color green at (1,5)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,5)
  _011: a point with color green at (0,3)
  _0111: a point with color yellow at (2,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _011: a point with color green at (0,4)
  _0111: a point with color yellow at (2,2)
diff: 
delta:
   (3.2 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color black and mask x.x|.xx at (0,0)
diff: 
delta:
   (17.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,4)
  _011: a point with color yellow at (1,0)
  _0111: a point with color yellow at (2,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,4)
  _011: a point with color yellow at (2,2)
  _0111: a point with color yellow at (1,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _011: a point with color green at (0,4)
  _0111: a point with color yellow at (2,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask x.|xx|x. at (0,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,1)
  _011: a point with color yellow at (1,0)
  _0111: a point with color yellow at (2,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask x.|xx|x. at (0,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,1)
  _011: a point with color yellow at (2,1)
  _0111: a point with color yellow at (1,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|x.. at (0,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
  _011: a point with color yellow at (1,1)
  _0111: a point with color yellow at (2,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|x.. at (0,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
  _011: a point with color yellow at (2,0)
  _0111: a point with color yellow at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|x.. at (0,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color yellow at (0,2)
  _0111: a point with color yellow at (2,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TEST dae9d2b5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 32.8 sec (32.8 sec/task)
bits-train-error = 812.9 bits (812.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-53] Checking task db3e9e38.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3743.2 = 3755.8
DL output with Mo: L = 12.6 + 14277.0 = 14289.6
DL input+output M: L = 25.2 + 18020.1 = 18045.3

# learning a model for train pairs
2.000	
1.277	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.946	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.741	OUT ADD ^.layer_00 = ^.layer_0
0.533	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.472	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.442	IN  SPE ^.layer_0.shape.color = orange
0.418	OUT SPE ^.size = ^.size
0.400	OUT SPE ^.layer_0.shape.size = tiling(^.layer_0.shape.size - (1, 0), 1, 3)
0.383	IN  SPE ^.layer_0.shape.mask = Full
0.369	OUT SPE ^.layer_011.pos = '(0, 0)
0.355	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (0, 1)
0.342	IN  SPE ^.color = black
0.334	OUT SPE ^.layer_0.shape.color = cyan
0.327	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.314	OUT SPE ^.layer_0111.pos = tiling('(0, 3), 1, 2)
0.306	OUT SPE ^.layer_01.shape.size.i = 2
0.300	OUT SPE ^.layer_01.pos.i = '0
0.295	OUT SPE ^.layer_0.shape.mask = Full
0.291	OUT SPE ^.layer_01.shape.mask = Full
0.286	OUT SPE ^.layer_011.shape.mask = Full
0.283	OUT SPE ^.color = black
0.077	
0.076	IN  GEN ^.layer_0.shape.color = ?
0.076	IN  GEN ^.layer_0.shape.mask = ?
0.076	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size tiling(^.layer_0.shape.size - (1, 0), 1, 3) and color cyan and mask Full at ^.layer_0.pos - (0, 1)
  _01: a rectangle with size (2,?) and color ? and mask Full at ('0,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at '(0, 0)
  _0111: a point with color ? at tiling('(0, 3), 1, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 773.2 = 816.5
DL output with Mo: L = 166.8 + 767.0 = 933.9
DL input+output M: L = 210.1 + 1540.2 = 1750.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size tiling(^.layer_0.shape.size - (1, 0), 1, 3) and color cyan and mask Full at ^.layer_0.pos - (0, 1)
  _01: a rectangle with size (2,?) and color ? and mask Full at ('0,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at '(0, 0)
  _0111: a point with color ? at tiling('(0, 3), 1, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 166.8 + 767.0 = 933.9
DL input+output M: L = 205.7 + 767.0 = 972.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (4,1) and color orange and mask Full at (0,3)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,2)
  _01: a rectangle with size (2,5) and color orange and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _0111: a point with color cyan at (0,6)
diff: 
delta:
   (36.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (0,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN db3e9e38.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,8) and color black and layers
  _00: a rectangle with size (5,1) and color orange and mask Full at (0,2)
  _0: a rectangle with size (4,3) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (3,5) and color orange and mask Full at (0,0)
  _0111: a point with color orange at (0,6)
diff: 
delta:
   (40.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,1) and color orange and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN db3e9e38.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,1) and color orange and mask Full at (0,5)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST db3e9e38.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.1 sec (9.1 sec/task)
bits-train-error = 767.0 bits (767.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-52] Checking task db93a21d.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 59025.2 = 59037.8
DL output with Mo: L = 12.6 + 267282.7 = 267295.3
DL input+output M: L = 25.2 + 326307.9 = 326333.1

# learning a model for train pairs
2.000	
1.416	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.494	OUT ADD ^.layer_00 = ^.layer_0
0.411	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.346	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.298	OUT ADD ^.layer_010 = ^.layer_01
0.265	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.253	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i + 2
0.080	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_01.shape.size.i + 2,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 10273.6 = 10337.9
DL output with Mo: L = 164.3 + 20694.3 = 20858.7
DL input+output M: L = 228.6 + 30968.0 = 31196.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_01.shape.size.i + 2,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 60.0 = 124.2
DL output with Mo: L = 164.3 + 20694.3 = 20858.7
DL input+output M: L = 228.6 + 20754.3 = 20982.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (0,6)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color brown and mask Full at (0,6)
  _0: a rectangle with size (7,2) and color blue and mask Full at (3,6)
  _010: a rectangle with size (2,2) and color brown and mask Full at (7,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (6,0)
  _011: a rectangle with size (1,4) and color green and mask Full at (2,5)
  _0111: a rectangle with size (3,1) and color green and mask Full at (0,5)
  _01111: a rectangle with size (3,1) and color green and mask Full at (0,8)
diff: 
delta:
   (175.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (0,6)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,1)
diff: 
delta:
! 42 wrong pixels (generated / expected)

TRAIN db93a21d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,8)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
   (2.0 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (2,2) and color brown and mask Full at (6,3)
  _0: a rectangle with size (12,13) and color green and mask ....xxxxxxxx.|....xxxxxxxx.|....xx....xx.|....xx....xx.|....xx....xx.|xxxxxx....xx.|x..xxxxxxxxx.|x..xxxxxxxxx.|xxxx......xxx|..........x..|..........x..|..........xxx at (0,2)
  _010: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (6,2) and color blue and mask Full at (9,3)
  _011: a rectangle with size (7,4) and color blue and mask Full at (8,8)
  _0111: a rectangle with size (3,2) and color blue and mask Full at (12,13)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (9,13)
diff: 
delta:
   (356.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (2,2) and color brown and mask Full at (6,3)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,8)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (2,2) and color brown and mask Full at (9,13)
diff: 
delta: (6,3)=9# (6,4)=9# (7,3)=9# (7,4)=9#
! size mismatch, 10x10 instead of 15x15

TRAIN db93a21d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (6,15)
  _01: a rectangle with size (6,6) and color brown and mask Full at (12,6)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,4) and color brown and mask Full at (6,15)
  _0: a rectangle with size (16,17) and color green and mask ..........xxxxxxx|..........xxxxxxx|..........xx....x|..........xx....x|..........xx....x|xxxxxxxxxxxx....x|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxxxxxxxxxxx.....|xxxxxxxxxxxx..... at (4,3)
  _010: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (8,4) and color blue and mask Full at (12,15)
  _011: a rectangle with size (14,2) and color blue and mask Full at (6,2)
  _0111: a rectangle with size (4,4) and color green and mask Border at (2,1)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (3,2)
diff: 
delta:
   (488.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (6,15)
  _01: a rectangle with size (6,6) and color brown and mask Full at (12,6)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (2,2) and color brown and mask Full at (3,2)
diff: 
delta: (6,15)=9# (6,16)=9# (6,17)=9# (6,18)=9# (7,15)=9# (7,16)=9# (7,17)=9# (7,18)=9# (8,15)=9# (8,16)=9# (8,17)=9# (8,18)=9# (9,15)=9# (9,16)=9# (9,17)=9# (9,18)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (8,2)
  _01: a rectangle with size (6,6) and color brown and mask Full at (9,14)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
   (2.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,4) and color brown and mask Full at (8,2)
  _0: a rectangle with size (16,4) and color blue and mask xxxx|xxxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx at (4,7)
  _010: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (8,8) and color green and mask Full at (6,0)
  _011: a rectangle with size (12,9) and color green and mask Full at (6,11)
  _0111: a rectangle with size (4,8) and color green and mask Full at (0,5)
  _01111: a rectangle with size (6,4) and color blue and mask Full at (14,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9# (18,14)=1  (18,15)=1  (18,16)=1  (18,17)=1  (18,18)=1  (18,19)=1  (19,14)=1  (19,15)=1  (19,16)=1  (19,17)=1  (19,18)=1  (19,19)=1 
   (1049.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (4,4) and color brown and mask Full at (8,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (8,2)
  _01: a rectangle with size (6,6) and color brown and mask Full at (9,14)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (2,4) and color brown and mask Full at (0,7)
diff: 
delta: (8,2)=9# (8,3)=9# (8,4)=9# (8,5)=9# (9,2)=9# (9,3)=9# (9,4)=9# (9,5)=9# (10,2)=9# (10,3)=9# (10,4)=9# (10,5)=9# (11,2)=9# (11,3)=9# (11,4)=9# (11,5)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (16,21)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,16)
diff: 
delta: (7,9)=9# (7,10)=9# (7,11)=9# (7,12)=9# (8,9)=9# (8,10)=9# (8,11)=9# (8,12)=9# (9,9)=9# (9,10)=9# (9,11)=9# (9,12)=9# (10,9)=9# (10,10)=9# (10,11)=9# (10,12)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (16,21)
  _01: a rectangle with size (4,4) and color brown and mask Full at (7,9)
diff: 
delta: (2,16)=9# (2,17)=9# (2,18)=9# (2,19)=9# (3,16)=9# (3,17)=9# (3,18)=9# (3,19)=9# (4,16)=9# (4,17)=9# (4,18)=9# (4,19)=9# (5,16)=9# (5,17)=9# (5,18)=9# (5,19)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30
>> Trial 3
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,16)
  _01: a rectangle with size (6,6) and color brown and mask Full at (16,21)
diff: 
delta: (7,9)=9# (7,10)=9# (7,11)=9# (7,12)=9# (8,9)=9# (8,10)=9# (8,11)=9# (8,12)=9# (9,9)=9# (9,10)=9# (9,11)=9# (9,12)=9# (10,9)=9# (10,10)=9# (10,11)=9# (10,12)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30

TEST db93a21d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 20694.3 bits (20694.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-51] Checking task dbc1a6ce.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14946.9 = 14959.5
DL output with Mo: L = 12.6 + 40069.5 = 40082.1
DL input+output M: L = 25.2 + 55016.4 = 55041.6

# learning a model for train pairs
2.000	
1.637	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.491	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.437	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.383	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.329	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.274	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.220	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.164	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.108	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
1.071	OUT ADD ^.layer_00 = ^.layer_0
1.034	OUT ADD ^.layer_011 = ^.layer_01
0.996	OUT ADD ^.layer_0111 = ^.layer_0111
0.959	OUT ADD ^.layer_01111 = ^.layer_011111
0.921	OUT ADD ^.layer_011111 = ^.layer_0111111
0.892	OUT ADD ^.layer_0110 = ^.layer_011
0.872	OUT SPE ^.size = ^.size
0.858	IN  SPE ^.layer_0.shape.color = blue
0.843	IN  SPE ^.layer_01.shape.color = blue
0.828	IN  SPE ^.layer_011.shape.color = blue
0.813	IN  SPE ^.layer_0111.shape.color = blue
0.798	IN  SPE ^.layer_01111.shape.color = blue
0.264	
0.263	IN  DEL ^.layer_01111
0.263	IN  GEN ^.layer_0111.shape.color = ?
0.262	IN  GEN ^.layer_011.shape.color = ?
0.262	IN  GEN ^.layer_01.shape.color = ?
0.262	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: ^.layer_011111
  _011111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color blue at (?,?)
  _0111: a point with color blue at (?,?)
  _01111: a point with color blue at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 139.7 + 7989.0 = 8128.7
DL output with Mo: L = 110.4 + 10099.7 = 10210.1
DL input+output M: L = 250.2 + 18088.7 = 18338.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: ^.layer_011111
  _011111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 107.8 + 0.0 = 107.8
DL output with Mo: L = 110.4 + 10099.7 = 10210.1
DL input+output M: L = 218.2 + 10099.7 = 10317.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,9) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (4,1)
  _0111: a point with color blue at (4,7)
  _011111: a point with color blue at (6,1)
  _0111111: a point with color blue at (8,6)
diff: 
delta: (9,3)=1 
   (0.0 bits)
data: a background with size (10,9) and color black and layers
  _00: a point with color blue at (0,3)
  _0: a rectangle with size (8,6) and color cyan and mask ..x...|..x...|..x...|.xxxxx|x.x...|..x...|..x...|..x... at (1,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (9,3)
  _0110: a point with color blue at (4,1)
  _011: a point with color blue at (1,8)
  _0111: a point with color blue at (4,7)
  _01111: a point with color blue at (6,1)
  _011111: a point with color blue at (8,6)
diff: 
delta:
   (111.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (4,1)
  _0111: a point with color blue at (4,7)
  _011111: a point with color blue at (6,1)
  _0111111: a point with color blue at (8,6)
diff: 
delta: (9,3)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (4,1)
  _0111: a point with color blue at (4,7)
  _011111: a point with color blue at (6,1)
  _0111111: a point with color blue at (9,3)
diff: 
delta: (8,6)=1 
! 18 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (0,4)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,8)
  _011111: a point with color blue at (3,2)
  _0111111: a point with color blue at (7,0)
diff: 
delta: (7,7)=1  (9,6)=1 
   (0.0 bits)
data: a background with size (10,11) and color black and layers
  _00: a point with color blue at (0,4)
  _0: a rectangle with size (3,5) and color cyan and mask .xxxx|x....|.xxx. at (0,4)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (7,1)
  _0110: a point with color blue at (2,4)
  _011: a point with color blue at (0,9)
  _0111: a point with color blue at (2,8)
  _01111: a point with color blue at (3,2)
  _011111: a point with color blue at (7,0)
diff: 
delta: (7,7)=1  (9,6)=1 
   (165.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (0,4)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,8)
  _011111: a point with color blue at (3,2)
  _0111111: a point with color blue at (7,0)
diff: 
delta: (7,7)=1  (9,6)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (0,4)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,8)
  _011111: a point with color blue at (3,2)
  _0111111: a point with color blue at (7,7)
diff: 
delta: (7,0)=1  (9,6)=1 
! 20 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (0,6)
  _01: a point with color blue at (0,11)
  _011: a point with color blue at (2,10)
  _0111: a point with color blue at (4,5)
  _011111: a point with color blue at (5,1)
  _0111111: a point with color blue at (5,9)
diff: 
delta: (6,6)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color blue at (0,6)
  _0: a rectangle with size (7,9) and color cyan and mask .....xxxx|....x....|....x....|....x...x|....x...x|xxxxxxx.x|.....xxx. at (0,2)
  _01: a rectangle with size (3,5) and color cyan and mask .xxx.|x...x|.xxx. at (9,4)
  _0110: a point with color blue at (2,10)
  _011: a point with color blue at (0,11)
  _0111: a point with color blue at (4,5)
  _01111: a point with color blue at (5,1)
  _011111: a point with color blue at (5,9)
diff: 
delta: (6,6)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
   (427.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (0,6)
  _01: a point with color blue at (0,11)
  _011: a point with color blue at (2,10)
  _0111: a point with color blue at (4,5)
  _011111: a point with color blue at (5,1)
  _0111111: a point with color blue at (5,9)
diff: 
delta: (6,6)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (0,6)
  _01: a point with color blue at (0,11)
  _011: a point with color blue at (2,10)
  _0111: a point with color blue at (4,5)
  _011111: a point with color blue at (5,1)
  _0111111: a point with color blue at (6,6)
diff: 
delta: (5,9)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
! 40 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (8,9) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,4)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,6)
  _011111: a point with color blue at (3,0)
  _0111111: a point with color blue at (4,5)
diff: 
delta: (5,2)=1  (5,7)=1  (7,0)=1 
   (0.0 bits)
data: a background with size (8,9) and color black and layers
  _00: a point with color blue at (0,1)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (3,4) and color cyan and mask xx..|..x.|...x at (0,2)
  _0110: a point with color blue at (2,4)
  _011: a point with color blue at (0,4)
  _0111: a point with color blue at (2,6)
  _01111: a point with color blue at (3,0)
  _011111: a point with color blue at (4,5)
diff: 
delta: (4,0)=8  (5,0)=8  (5,2)=1  (5,7)=1  (6,0)=8  (7,0)=1 
   (306.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,4)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,6)
  _011111: a point with color blue at (3,0)
  _0111111: a point with color blue at (4,5)
diff: 
delta: (5,2)=1  (5,7)=1  (7,0)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,9) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,4)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,6)
  _011111: a point with color blue at (3,0)
  _0111111: a point with color blue at (5,2)
diff: 
delta: (4,5)=1  (5,7)=1  (7,0)=1 
! 17 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  _0: a point with color blue at (0,7)
  _01: a point with color blue at (0,10)
  _011: a point with color blue at (0,14)
  _0111: a point with color blue at (1,2)
  _011111: a point with color blue at (2,10)
  _0111111: a point with color blue at (3,19)
diff: 
delta: (4,9)=1  (5,1)=1  (6,6)=1  (7,1)=1  (8,10)=1  (9,11)=1  (10,13)=1  (12,9)=1  (14,6)=1  (14,14)=1  (16,1)=1  (18,1)=1  (18,3)=1 
! 73 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,21) and color black and layers
  _0: a point with color blue at (0,7)
  _01: a point with color blue at (0,10)
  _011: a point with color blue at (0,14)
  _0111: a point with color blue at (1,2)
  _011111: a point with color blue at (2,10)
  _0111111: a point with color blue at (4,9)
diff: 
delta: (3,19)=1  (5,1)=1  (6,6)=1  (7,1)=1  (8,10)=1  (9,11)=1  (10,13)=1  (12,9)=1  (14,6)=1  (14,14)=1  (16,1)=1  (18,1)=1  (18,3)=1 
! 73 wrong pixels (generated / expected)

TEST dbc1a6ce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.6 sec (61.6 sec/task)
bits-train-error = 10099.7 bits (10099.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-50] Checking task dc0a314f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 206050.6 = 206063.2
DL output with Mo: L = 12.6 + 16112.6 = 16125.3
DL input+output M: L = 25.2 + 222163.2 = 222188.4

# learning a model for train pairs
2.000	
1.575	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.367	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.276	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.230	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.142	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
1.084	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.055	OUT SPE ^.size = ^.layer_0.shape.size
1.030	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.022	OUT SPE ^.layer_0.pos.i = '0
1.013	OUT SPE ^.layer_01.pos.j = '0
0.988	OUT SPE ^.layer_0111.pos.j = 2
0.982	OUT SPE ^.layer_01.shape.mask = Full
0.976	OUT SPE ^.layer_011.shape.size.i = 1
0.970	OUT SPE ^.layer_011.shape.mask = Full
0.268	
0.268	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,'0)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 144548.4 = 144612.7
DL output with Mo: L = 137.6 + 4179.5 = 4317.0
DL input+output M: L = 201.8 + 148727.9 = 148929.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,'0)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 31.7 = 70.5
DL output with Mo: L = 137.6 + 4179.5 = 4317.0
DL input+output M: L = 176.4 + 4211.2 = 4387.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,7)=8  (5,8)=8  (5,14)=6  (6,3)=2  (6,7)=8  (6,8)=8  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=8  (8,14)=2  (8,15)=6  (9,3)=2  (9,7)=8  (9,8)=8  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,7)=8  (10,8)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
   (0.0 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,2) and color red and mask x.|x.|xx|xx|x. at (0,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (0,1)
  _0111: a rectangle with size (2,1) and color orange and mask Full at (2,2)
diff: 
delta:
   (102.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,7)=8  (5,8)=8  (5,14)=6  (6,3)=2  (6,7)=8  (6,8)=8  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=8  (8,14)=2  (8,15)=6  (9,3)=2  (9,7)=8  (9,8)=8  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,7)=8  (10,8)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (6,4) and color cyan and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (5,5)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (5,13)=3  (5,14)=6  (6,3)=2  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (6,13)=3  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (8,14)=2  (8,15)=6  (9,3)=2  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
! size mismatch, 6x4 instead of 5x5
>> Trial 3
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (6,2) and color cyan and mask Full at (5,7)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (5,13)=3  (5,14)=6  (6,3)=2  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (6,13)=3  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (8,14)=2  (8,15)=6  (9,3)=2  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
! size mismatch, 6x2 instead of 5x5

TRAIN dc0a314f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,3)
diff: 
delta: (0,0)=8  (0,1)=9# (0,2)=9# (0,8)=2  (0,9)=2  (0,12)=8  (0,13)=9# (0,14)=9# (0,15)=8  (1,0)=9# (1,1)=8  (1,2)=9# (1,8)=2  (1,10)=1  (1,12)=9# (1,13)=9# (1,14)=8  (1,15)=9# (2,0)=9# (2,1)=9# (2,2)=8  (2,9)=2  (2,11)=2  (2,12)=2  (2,13)=8  (2,14)=9# (2,15)=9# (3,0)=8  (3,1)=9# (3,2)=2  (3,8)=1  (3,10)=2  (3,11)=2  (3,12)=9# (3,13)=2  (3,14)=9# (3,15)=8  (4,2)=2  (4,9)=8  (4,11)=2  (4,12)=2  (4,13)=2  (5,1)=1  (5,3)=2  (5,5)=2  (5,10)=2  (5,12)=2  (5,14)=1  (6,0)=2  (6,2)=2  (6,4)=8  (6,6)=2  (6,7)=8  (6,8)=8  (6,9)=2  (6,11)=8  (6,13)=2  (6,15)=2  (7,0)=2  (7,1)=2  (7,3)=1  (7,6)=8  (7,7)=2  (7,8)=2  (7,9)=8  (7,12)=1  (7,14)=2  (7,15)=2  (8,0)=2  (8,1)=2  (8,3)=1  (8,6)=8  (8,7)=2  (8,8)=2  (8,9)=8  (8,12)=1  (8,14)=2  (8,15)=2  (9,0)=2  (9,2)=2  (9,4)=8  (9,6)=2  (9,7)=8  (9,8)=8  (9,9)=2  (9,11)=8  (9,13)=2  (9,15)=2  (10,1)=1  (10,3)=2  (10,5)=2  (10,10)=2  (10,12)=2  (10,14)=1  (11,2)=2  (11,3)=2  (11,4)=2  (11,6)=8  (11,9)=8  (11,11)=2  (11,12)=2  (11,13)=2  (12,0)=8  (12,1)=9# (12,2)=2  (12,3)=9# (12,4)=2  (12,5)=2  (12,7)=1  (12,8)=1  (12,10)=2  (12,11)=2  (12,12)=9# (12,13)=2  (12,14)=9# (12,15)=8  (13,0)=9# (13,1)=9# (13,2)=8  (13,3)=2  (13,4)=2  (13,6)=2  (13,9)=2  (13,11)=2  (13,12)=2  (13,13)=8  (13,14)=9# (13,15)=9# (14,0)=9# (14,1)=8  (14,2)=9# (14,3)=9# (14,5)=1  (14,7)=2  (14,8)=2  (14,10)=1  (14,12)=9# (14,13)=9# (14,14)=8  (14,15)=9# (15,0)=8  (15,1)=9# (15,2)=9# (15,3)=8  (15,6)=2  (15,7)=2  (15,8)=2  (15,9)=2  (15,12)=8  (15,13)=9# (15,14)=9# (15,15)=8 
   (3.2 bits)
data: a background with size (5,5) and color orange and layers
  _0: a rectangle with size (5,5) and color red and mask ...xx|....x|xx.x.|.xx..|xx... at (0,0)
  _01: a rectangle with size (3,1) and color brown and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
diff: 
delta: (3,4)=1  (4,3)=8 
   (190.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (16,16) and color red and mask ........xx......|........x.......|.........x.xx...|..x.......xx.x..|..x........xxx..|...x.x....x.x...|x.x...x..x...x.x|xx.....xx.....xx|xx.....xx.....xx|x.x...x..x...x.x|...x.x....x.x...|..xxx......xxx..|..x.xx....xx.x..|...xx.x..x.xx...|.......xx.......|......xxxx...... at (0,0)
diff: 
delta: (0,0)=8  (0,1)=9# (0,2)=9# (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,12)=8  (0,13)=9# (0,14)=9# (0,15)=8  (1,0)=9# (1,1)=8  (1,2)=9# (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=3  (1,10)=1  (1,12)=9# (1,13)=9# (1,14)=8  (1,15)=9# (2,0)=9# (2,1)=9# (2,2)=8  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,13)=8  (2,14)=9# (2,15)=9# (3,0)=8  (3,1)=9# (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=1  (3,12)=9# (3,14)=9# (3,15)=8  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,7)=3  (4,9)=8  (5,1)=1  (5,14)=1  (6,4)=8  (6,7)=8  (6,8)=8  (6,11)=8  (7,3)=1  (7,6)=8  (7,9)=8  (7,12)=1  (8,3)=1  (8,6)=8  (8,9)=8  (8,12)=1  (9,4)=8  (9,7)=8  (9,8)=8  (9,11)=8  (10,1)=1  (10,14)=1  (11,6)=8  (11,9)=8  (12,0)=8  (12,1)=9# (12,3)=9# (12,7)=1  (12,8)=1  (12,12)=9# (12,14)=9# (12,15)=8  (13,0)=9# (13,1)=9# (13,2)=8  (13,13)=8  (13,14)=9# (13,15)=9# (14,0)=9# (14,1)=8  (14,2)=9# (14,3)=9# (14,5)=1  (14,10)=1  (14,12)=9# (14,13)=9# (14,14)=8  (14,15)=9# (15,0)=8  (15,1)=9# (15,2)=9# (15,3)=8  (15,12)=8  (15,13)=9# (15,14)=9# (15,15)=8 
! size mismatch, 16x16 instead of 5x5
>> Trial 2
data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,3)
diff: 
delta: (0,0)=8  (0,1)=9# (0,2)=9# (0,8)=2  (0,9)=2  (0,12)=8  (0,13)=9# (0,14)=9# (0,15)=8  (1,0)=9# (1,1)=8  (1,2)=9# (1,8)=2  (1,10)=1  (1,12)=9# (1,13)=9# (1,14)=8  (1,15)=9# (2,0)=9# (2,1)=9# (2,2)=8  (2,9)=2  (2,11)=2  (2,12)=2  (2,13)=8  (2,14)=9# (2,15)=9# (3,0)=8  (3,1)=9# (3,2)=2  (3,8)=1  (3,10)=2  (3,11)=2  (3,12)=9# (3,13)=2  (3,14)=9# (3,15)=8  (4,2)=2  (4,9)=8  (4,11)=2  (4,12)=2  (4,13)=2  (5,1)=1  (5,3)=2  (5,5)=2  (5,10)=2  (5,12)=2  (5,14)=1  (6,0)=2  (6,2)=2  (6,4)=8  (6,6)=2  (6,7)=8  (6,8)=8  (6,9)=2  (6,11)=8  (6,13)=2  (6,15)=2  (7,0)=2  (7,1)=2  (7,3)=1  (7,6)=8  (7,7)=2  (7,8)=2  (7,9)=8  (7,12)=1  (7,14)=2  (7,15)=2  (8,0)=2  (8,1)=2  (8,3)=1  (8,6)=8  (8,7)=2  (8,8)=2  (8,9)=8  (8,12)=1  (8,14)=2  (8,15)=2  (9,0)=2  (9,2)=2  (9,4)=8  (9,6)=2  (9,7)=8  (9,8)=8  (9,9)=2  (9,11)=8  (9,13)=2  (9,15)=2  (10,1)=1  (10,3)=2  (10,5)=2  (10,10)=2  (10,12)=2  (10,14)=1  (11,2)=2  (11,3)=2  (11,4)=2  (11,6)=8  (11,9)=8  (11,11)=2  (11,12)=2  (11,13)=2  (12,0)=8  (12,1)=9# (12,2)=2  (12,3)=9# (12,4)=2  (12,5)=2  (12,7)=1  (12,8)=1  (12,10)=2  (12,11)=2  (12,12)=9# (12,13)=2  (12,14)=9# (12,15)=8  (13,0)=9# (13,1)=9# (13,2)=8  (13,3)=2  (13,4)=2  (13,6)=2  (13,9)=2  (13,11)=2  (13,12)=2  (13,13)=8  (13,14)=9# (13,15)=9# (14,0)=9# (14,1)=8  (14,2)=9# (14,3)=9# (14,5)=1  (14,7)=2  (14,8)=2  (14,10)=1  (14,12)=9# (14,13)=9# (14,14)=8  (14,15)=9# (15,0)=8  (15,1)=9# (15,2)=9# (15,3)=8  (15,6)=2  (15,7)=2  (15,8)=2  (15,9)=2  (15,12)=8  (15,13)=9# (15,14)=9# (15,15)=8 
! 25 wrong pixels (generated / expected)

TRAIN dc0a314f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,2)=4  (1,3)=4  (1,5)=5# (1,6)=2  (1,12)=4  (1,13)=4  (1,14)=5# (1,15)=2  (2,0)=5# (2,1)=4  (2,2)=5# (2,3)=4  (2,5)=2  (2,6)=5# (2,12)=4  (2,13)=5# (2,14)=4  (2,15)=5# (3,0)=2  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=5# (3,6)=5# (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,1)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,2)=5# (6,3)=5# (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,2)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,2)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,2)=5# (9,3)=5# (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,1)=5# (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,6)=5# (12,7)=2  (12,8)=2  (12,9)=5# (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,6)=5# (13,7)=5# (13,8)=5# (13,9)=5# (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,5)=5# (14,6)=2  (14,9)=2  (14,10)=5# (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
   (0.0 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color brown and mask ..xxx|xx..x|....x|...x.|xxx.x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,1) and color pink and mask Full at (4,3)
  _0111: a rectangle with size (2,2) and color red and mask Even Checkboard at (1,2)
diff: 
delta:
   (124.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,2)=4  (1,3)=4  (1,5)=5# (1,6)=2  (1,12)=4  (1,13)=4  (1,14)=5# (1,15)=2  (2,0)=5# (2,1)=4  (2,2)=5# (2,3)=4  (2,5)=2  (2,6)=5# (2,12)=4  (2,13)=5# (2,14)=4  (2,15)=5# (3,0)=2  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=5# (3,6)=5# (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,1)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,2)=5# (6,3)=5# (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,2)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,2)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,2)=5# (9,3)=5# (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,1)=5# (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,6)=5# (12,7)=2  (12,8)=2  (12,9)=5# (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,6)=5# (13,7)=5# (13,8)=5# (13,9)=5# (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,5)=5# (14,6)=2  (14,9)=2  (14,10)=5# (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (3,6) and color grey and mask .x..x.|.xxxx.|x....x at (12,5)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,7)=3  (0,8)=3  (0,9)=3  (0,10)=3  (0,11)=3  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,2)=4  (1,3)=4  (1,5)=5# (1,6)=2  (1,7)=3  (1,8)=3  (1,9)=3  (1,10)=3  (1,11)=3  (1,12)=4  (1,13)=4  (1,14)=5# (1,15)=2  (2,0)=5# (2,1)=4  (2,2)=5# (2,3)=4  (2,5)=2  (2,6)=5# (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (2,11)=3  (2,12)=4  (2,13)=5# (2,14)=4  (2,15)=5# (3,0)=2  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=5# (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=2  (4,3)=5# (4,5)=6  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=5# (5,1)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,2)=5# (6,3)=5# (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,2)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,2)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,2)=5# (9,3)=5# (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,1)=5# (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,7)=2  (12,8)=2  (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,6)=2  (14,9)=2  (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
! size mismatch, 3x6 instead of 5x5
>> Trial 3
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (6,3) and color grey and mask x..|.xx|.x.|.x.|.xx|x.. at (5,1)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,7)=3  (0,8)=3  (0,9)=3  (0,10)=3  (0,11)=3  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,2)=4  (1,3)=4  (1,5)=5# (1,6)=2  (1,7)=3  (1,8)=3  (1,9)=3  (1,10)=3  (1,11)=3  (1,12)=4  (1,13)=4  (1,14)=5# (1,15)=2  (2,0)=5# (2,1)=4  (2,2)=5# (2,3)=4  (2,5)=2  (2,6)=5# (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (2,11)=3  (2,12)=4  (2,13)=5# (2,14)=4  (2,15)=5# (3,0)=2  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=5# (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=2  (4,3)=5# (4,5)=6  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,6)=5# (12,7)=2  (12,8)=2  (12,9)=5# (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,6)=5# (13,7)=5# (13,8)=5# (13,9)=5# (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,5)=5# (14,6)=2  (14,9)=2  (14,10)=5# (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
! size mismatch, 6x3 instead of 5x5

TRAIN dc0a314f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color red and layers
  _0: a rectangle with size (16,16) and color grey and mask ...x.xxxxxx.x...|...xxx....xxx...|..x.x......x.x..|xx.xx......xx.xx|.xxx.........xx.|xx............xx|x..............x|x..............x|x..............x|x..............x|xx............xx|.xxx........xxx.|xx.xx......xx.xx|..x.x......x.x..|...xxx....xxx...|...x.xxxxxx.x... at (0,0)
diff: 
delta: (0,0)=5# (0,1)=5# (0,14)=5# (0,15)=5# (1,0)=5# (1,15)=5# (2,3)=8  (2,7)=5# (2,8)=5# (2,12)=8  (3,2)=8  (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,13)=8  (4,4)=4  (4,5)=6  (4,6)=6  (4,7)=9# (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,4)=6  (5,5)=6  (5,6)=9# (5,7)=9# (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,3)=5# (6,4)=6  (6,5)=9# (6,6)=6  (6,7)=9# (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,2)=5# (7,3)=5# (7,4)=9# (7,5)=9# (7,6)=9# (7,7)=9# (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=5# (8,2)=5# (8,3)=5# (8,4)=9# (8,5)=9# (8,6)=9# (8,7)=9# (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=5# (9,3)=5# (9,4)=6  (9,5)=9# (9,6)=6  (9,7)=9# (9,8)=9# (9,9)=6  (9,10)=9# (9,11)=6  (9,12)=5# (10,4)=6  (10,5)=6  (10,6)=9# (10,7)=9# (10,8)=9# (10,9)=9# (10,10)=6  (10,11)=6  (11,4)=4  (11,5)=6  (11,6)=6  (11,7)=9# (11,8)=9# (11,9)=6  (11,10)=6  (11,11)=4  (12,2)=8  (12,6)=5# (12,7)=5# (12,8)=5# (12,9)=5# (12,13)=8  (13,3)=8  (13,7)=5# (13,8)=5# (13,12)=8  (14,0)=5# (14,15)=5# (15,0)=5# (15,1)=5# (15,14)=5# (15,15)=5#
! size mismatch, 16x16 instead of 5x5
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (4,8)
diff: 
delta: (0,2)=2  (0,4)=2  (0,11)=2  (0,13)=2  (1,1)=2  (1,2)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,13)=2  (1,14)=2  (2,0)=2  (2,1)=2  (2,3)=8  (2,5)=2  (2,6)=2  (2,9)=2  (2,10)=2  (2,12)=8  (2,14)=2  (2,15)=2  (3,2)=8  (3,5)=2  (3,10)=2  (3,13)=8  (4,0)=2  (4,4)=4  (4,5)=6  (4,6)=6  (4,7)=9# (4,15)=2  (5,2)=2  (5,3)=2  (5,4)=6  (5,5)=6  (5,6)=9# (5,7)=9# (5,13)=2  (6,1)=2  (6,2)=2  (6,4)=6  (6,5)=9# (6,6)=6  (6,7)=9# (6,13)=2  (6,14)=2  (7,1)=2  (7,4)=9# (7,5)=9# (7,6)=9# (7,7)=9# (7,14)=2  (8,1)=2  (8,4)=9# (8,5)=9# (8,6)=9# (8,7)=9# (8,14)=2  (9,1)=2  (9,2)=2  (9,4)=6  (9,5)=9# (9,6)=6  (9,7)=9# (9,8)=9# (9,9)=6  (9,10)=9# (9,11)=6  (9,13)=2  (9,14)=2  (10,2)=2  (10,3)=2  (10,4)=6  (10,5)=6  (10,6)=9# (10,7)=9# (10,8)=9# (10,9)=9# (10,10)=6  (10,11)=6  (10,12)=2  (10,13)=2  (11,0)=2  (11,4)=4  (11,5)=6  (11,6)=6  (11,7)=9# (11,8)=9# (11,9)=6  (11,10)=6  (11,11)=4  (11,15)=2  (12,2)=8  (12,5)=2  (12,10)=2  (12,13)=8  (13,0)=2  (13,1)=2  (13,3)=8  (13,5)=2  (13,6)=2  (13,9)=2  (13,10)=2  (13,12)=8  (13,14)=2  (13,15)=2  (14,1)=2  (14,2)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,13)=2  (14,14)=2  (15,2)=2  (15,4)=2  (15,11)=2  (15,13)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (8,7) and color brown and mask ...x...|..xx...|.x.x...|xxxx...|xxxx...|.x.xx.x|..xxxx.|...xx.. at (4,4)
diff: 
delta: (0,2)=2  (0,4)=2  (0,11)=2  (0,13)=2  (1,1)=2  (1,2)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,13)=2  (1,14)=2  (2,0)=2  (2,1)=2  (2,3)=8  (2,5)=2  (2,6)=2  (2,9)=2  (2,10)=2  (2,12)=8  (2,14)=2  (2,15)=2  (3,2)=8  (3,5)=2  (3,10)=2  (3,13)=8  (4,0)=2  (4,4)=4  (4,5)=6  (4,6)=6  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,15)=2  (5,2)=2  (5,3)=2  (5,4)=6  (5,5)=6  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (5,13)=2  (6,1)=2  (6,2)=2  (6,4)=6  (6,6)=6  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (6,13)=2  (6,14)=2  (7,1)=2  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,14)=2  (8,1)=2  (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,14)=2  (9,1)=2  (9,2)=2  (9,4)=6  (9,6)=6  (9,9)=6  (9,11)=6  (9,13)=2  (9,14)=2  (10,2)=2  (10,3)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,12)=2  (10,13)=2  (11,0)=2  (11,4)=4  (11,5)=6  (11,6)=6  (11,9)=6  (11,10)=6  (11,11)=4  (11,15)=2  (12,2)=8  (12,5)=2  (12,10)=2  (12,13)=8  (13,0)=2  (13,1)=2  (13,3)=8  (13,5)=2  (13,6)=2  (13,9)=2  (13,10)=2  (13,12)=8  (13,14)=2  (13,15)=2  (14,1)=2  (14,2)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,13)=2  (14,14)=2  (15,2)=2  (15,4)=2  (15,11)=2  (15,13)=2 
! size mismatch, 8x7 instead of 5x5

TEST dc0a314f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.7 sec (57.7 sec/task)
bits-train-error = 4179.5 bits (4179.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-49] Checking task dc1df850.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3544.6 = 3557.3
DL output with Mo: L = 12.6 + 14341.7 = 14354.3
DL input+output M: L = 25.2 + 17886.4 = 17911.6

# learning a model for train pairs
2.000	
1.405	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.229	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.153	OUT ADD ^.layer_00 = ^.layer_0
1.106	IN  SPE ^.layer_0.shape.color = red
1.071	OUT SPE ^.size = ^.size
1.051	IN  SPE ^.color = black
1.033	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.975	OUT SPE ^.layer_0.shape.size.i = 3
0.964	OUT SPE ^.layer_0.shape.color = blue
0.957	OUT SPE ^.layer_01.shape.mask = Full
0.952	OUT SPE ^.color = black
0.948	OUT SPE ^.layer_01.pos.i = '0
0.939	OUT SPE ^.layer_010.pos.j = ^.layer_0.pos.j / '2
0.192	
0.191	IN  GEN ^.layer_0.shape.color = ?
0.191	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (3,?) and color blue and mask ? at (?,?)
  _010: a point with color ? at (?,^.layer_0.pos.j / '2)
  _01: a rectangle with size (?,?) and color ? and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 33.0 + 2679.2 = 2712.2
DL output with Mo: L = 125.3 + 2415.2 = 2540.5
DL input+output M: L = 158.3 + 5094.5 = 5252.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (3,?) and color blue and mask ? at (?,?)
  _010: a point with color ? at (?,^.layer_0.pos.j / '2)
  _01: a rectangle with size (?,?) and color ? and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 20.0 = 49.5
DL output with Mo: L = 125.3 + 2415.2 = 2540.5
DL input+output M: L = 154.9 + 2435.2 = 2590.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta: (0,0)=2  (3,1)=6 
   (2.0 bits)
data: a background with size (5,5) and color black and layers
  _00: a point with color red at (1,3)
  _0: a rectangle with size (3,5) and color blue and mask .xxxx|xxx.x|..xxx at (0,0)
  _010: a point with color pink at (3,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (63.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (1,3)=2  (3,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta: (0,0)=2  (3,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (3,1)
diff: 
delta: (0,0)=2  (1,3)=2 
! 12 wrong pixels (generated / expected)

TRAIN dc1df850.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a point with color red at (0,7)
diff: 
delta: (2,3)=3  (4,6)=8  (6,2)=2 
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _00: a point with color red at (0,7)
  _0: a rectangle with size (3,3) and color blue and mask Full at (5,1)
  _010: a point with color green at (2,3)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,6)
diff: 
delta: (4,6)=8  (6,2)=2 
   (129.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a point with color red at (0,7)
diff: 
delta: (2,3)=3  (4,6)=8  (6,2)=2 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a point with color green at (2,3)
diff: 
delta: (0,7)=2  (4,6)=8  (6,2)=2 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a point with color cyan at (4,6)
diff: 
delta: (0,7)=2  (2,3)=3  (6,2)=2 
! 21 wrong pixels (generated / expected)

TRAIN dc1df850.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,5) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,2)
  _010: a point with color blue at (1,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (48.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN dc1df850.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color orange at (0,8)
diff: 
delta: (1,2)=2  (3,7)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (0,8)=7# (3,7)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (3,7)
diff: 
delta: (0,8)=7# (1,2)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 29 wrong pixels (generated / expected)

TEST dc1df850.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.8 sec (4.8 sec/task)
bits-train-error = 2415.2 bits (2415.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-48] Checking task dc433765.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6497.5 = 6510.1
DL output with Mo: L = 12.6 + 6497.5 = 6510.1
DL input+output M: L = 25.2 + 12995.0 = 13020.2

# learning a model for train pairs
2.000	
1.772	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.398	OUT ADD ^.layer_0 = ^.layer_0
1.146	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.848	OUT ADD ^.layer_00 = ^.layer_00.shape at (?,?)
0.672	OUT SPE ^.size = ^.size
0.574	OUT SPE ^.layer_00.pos = ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_00)
0.511	IN  SPE ^.layer_00.shape.color = green
0.451	IN  SPE ^.layer_0.shape.color = yellow
0.424	IN  SPE ^.color = black
0.398	OUT SPE ^.color = black
0.017	
0.017	IN  GEN ^.layer_0.shape.color = ?
0.017	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00.shape at ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_00)
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color green at (?,?)
  _0: a point with color yellow at (?,?)

DL input  with Mi: L = 52.4 + 2477.9 = 2530.4
DL output with Mo: L = 58.7 + 0.0 = 58.7
DL input+output M: L = 111.1 + 2477.9 = 2589.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00.shape at ^.layer_0.pos + translationOnto(^.layer_0, ^.layer_00)
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color green at (?,?)
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 49.0 + 0.0 = 49.0
DL output with Mo: L = 58.7 + 0.0 = 58.7
DL input+output M: L = 107.6 + 0.0 = 107.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color yellow at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color yellow at (2,2)
diff: 
delta:
correct output grid

TRAIN dc433765.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,3) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color yellow at (1,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,3) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (1,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color yellow at (1,2)
diff: 
delta:
correct output grid

TRAIN dc433765.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color black and layers
  _00: a point with color green at (2,1)
  _0: a point with color yellow at (2,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _00: a point with color green at (2,2)
  _0: a point with color yellow at (2,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a point with color green at (2,1)
  _0: a point with color yellow at (2,4)
diff: 
delta:
correct output grid

TRAIN dc433765.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (4,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (2,2)
  _0: a point with color yellow at (4,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (4,4)
diff: 
delta:
correct output grid

TRAIN dc433765.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _00: a point with color green at (7,2)
  _0: a point with color yellow at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (6,2)
  _0: a point with color yellow at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (7,2)
  _0: a point with color yellow at (2,2)
diff: 
delta:
correct output grid

TRAIN dc433765.json/5: 1 1st (SUCCESS)

## instance 6

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _00: a point with color green at (2,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (11,11) and color black and layers
  _00: a point with color green at (3,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a point with color green at (2,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
correct output grid

TRAIN dc433765.json/6: 1 1st (SUCCESS)

## instance 7

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a point with color yellow at (2,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a point with color yellow at (2,0)
diff: 
delta:
correct output grid

TRAIN dc433765.json/7: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a point with color green at (2,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
correct output grid

TEST dc433765.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (2,2)
  _0: a point with color yellow at (0,0)
diff: 
delta:
correct output grid

TEST dc433765.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-47] Checking task ddf7fa4f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 38533.6 = 38546.2
DL output with Mo: L = 12.6 + 38533.6 = 38546.2
DL input+output M: L = 25.2 + 77067.3 = 77092.5

# learning a model for train pairs
2.000	
1.582	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.968	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.723	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.525	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.374	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.358	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.328	OUT ADD ^.layer_0111 = ^.layer_0111
0.312	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.282	OUT ADD ^.layer_01111 = ^.layer_01111
0.265	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.241	OUT SPE ^.layer_01 = coloring(^.layer_01, ^.layer_01111.shape.color)
0.225	OUT SPE ^.size = ^.size
0.211	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.197	OUT SPE ^.layer_011111 = ^.layer_011111
0.186	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.176	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.167	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.159	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.154	IN  SPE ^.layer_0.shape.color = grey
0.150	IN  SPE ^.layer_01.shape.color = grey
0.146	IN  SPE ^.layer_011.shape.color = grey
0.143	IN  SPE ^.layer_0.shape.mask = Full
0.140	OUT SPE ^.layer_0.shape.mask = Full
0.138	OUT SPE ^.layer_011.shape.mask = Full
0.135	IN  SPE ^.layer_01.shape.mask = Full
0.133	IN  SPE ^.layer_011.shape.mask = Full
0.131	IN  SPE ^.color = black
0.129	OUT SPE ^.color = black
0.017	
0.017	IN  GEN ^.layer_011.shape.color = ?
0.017	IN  GEN ^.layer_01.shape.color = ?
0.017	IN  GEN ^.layer_0.shape.color = ?
0.017	IN  GEN ^.layer_011.shape.mask = ?
0.016	IN  GEN ^.layer_01.shape.mask = ?
0.016	IN  GEN ^.layer_0.shape.mask = ?
0.016	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_0.pos
  _01: coloring(^.layer_01, ^.layer_01111.shape.color)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask Full at ^.layer_011.pos
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 148.8 + 4395.7 = 4544.4
DL output with Mo: L = 88.5 + 338.6 = 427.2
DL input+output M: L = 237.3 + 4734.3 = 4971.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_0.pos
  _01: coloring(^.layer_01, ^.layer_01111.shape.color)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask Full at ^.layer_011.pos
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 71.7 = 207.4
DL output with Mo: L = 88.5 + 338.6 = 427.2
DL input+output M: L = 224.2 + 410.3 = 634.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color pink at (0,5)
  _01111: a point with color red at (0,2)
  _011111: a point with color cyan at (0,9)
diff: 
delta:
   (3.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color red and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (7,7)
  _0111: a point with color pink at (0,5)
  _01111: a point with color red at (0,2)
  _011111: a point with color cyan at (0,9)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color red at (0,2)
  _01111: a point with color pink at (0,5)
  _011111: a point with color cyan at (0,9)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color red at (0,2)
  _01111: a point with color cyan at (0,9)
  _011111: a point with color pink at (0,5)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color pink at (0,5)
  _01111: a point with color red at (0,2)
  _011111: a point with color cyan at (0,9)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
  _011111: a point with color yellow at (0,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color orange and mask Full at (2,7)
  _011: a rectangle with size (2,4) and color yellow and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
  _011111: a point with color yellow at (0,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color yellow at (0,5)
  _011111: a point with color orange at (0,8)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
  _011111: a point with color yellow at (0,5)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color blue at (0,1)
  _011111: a point with color orange at (0,8)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
  _011111: a point with color pink at (0,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color orange and mask Full at (3,7)
  _011: a rectangle with size (3,2) and color blue and mask Full at (2,1)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
  _011111: a point with color pink at (0,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color blue at (0,1)
  _01111: a point with color pink at (0,5)
  _011111: a point with color orange at (0,8)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
  _011111: a point with color pink at (0,5)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color blue at (0,1)
  _011111: a point with color orange at (0,8)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color green at (0,0)
  _01111: a point with color pink at (0,4)
  _011111: a point with color brown at (0,8)
diff: 
delta:
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color green at (0,0)
  _01111: a point with color brown at (0,8)
  _011111: a point with color pink at (0,4)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color pink at (0,4)
  _01111: a point with color green at (0,0)
  _011111: a point with color brown at (0,8)
diff: 
delta:
! 42 wrong pixels (generated / expected)

TEST ddf7fa4f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.4 sec (17.4 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-46] Checking task de1cd16c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 258750.9 = 258763.5
DL output with Mo: L = 12.6 + 624.4 = 637.0
DL input+output M: L = 25.2 + 259375.3 = 259400.5

# learning a model for train pairs
2.000	
1.551	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.143	OUT SPE ^.size = '(1, 1)
0.777	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.646	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.643	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.643	IN  SPE ^.layer_01.shape.mask = Full
0.642	IN  SPE ^.layer_011.shape.mask = Full
0.592	
0.592	IN  DEL ^.layer_011
0.592	IN  DEL ^.layer_01
0.592	IN  DEL ^.layer_0
0.591	IN  DEL ^.layer_0111
0.591	IN  DEL ^.layer_010

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 122.3 + 13069.7 = 13192.0
DL output with Mo: L = 18.1 + 358.6 = 376.7
DL input+output M: L = 140.4 + 13428.3 = 13568.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 18.1 + 358.6 = 376.7
DL input+output M: L = 30.7 + 358.6 = 389.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,13) and color cyan and layers
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (0,5)=4  (0,6)=4  (0,7)=4  (0,8)=0  (0,9)=0  (0,10)=0  (0,11)=0  (0,12)=0  (1,0)=4  (1,1)=4  (1,2)=4  (1,3)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=4  (1,8)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=6  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (2,8)=0  (2,9)=0  (2,10)=6  (2,11)=0  (2,12)=0  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=0  (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (4,4)=4  (4,5)=6  (4,6)=4  (4,7)=4  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (5,0)=4  (5,1)=4  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,0)=4  (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (9,8)=1  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (10,5)=6  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,11)=6  (11,12)=1  (12,2)=6  (12,8)=1  (12,9)=1  (12,10)=1  (12,11)=1  (12,12)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=1  (13,12)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=1  (14,12)=1  (15,5)=6  (15,8)=1  (15,9)=1  (15,10)=1  (15,11)=1  (15,12)=1  (16,8)=1  (16,9)=1  (16,10)=1  (16,11)=1  (16,12)=1 
   (0.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,13) and color cyan and layers
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (0,5)=4  (0,6)=4  (0,7)=4  (0,8)=0  (0,9)=0  (0,10)=0  (0,11)=0  (0,12)=0  (1,0)=4  (1,1)=4  (1,2)=4  (1,3)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=4  (1,8)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=6  (2,4)=4  (2,5)=4  (2,6)=4  (2,7)=4  (2,8)=0  (2,9)=0  (2,10)=6  (2,11)=0  (2,12)=0  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=0  (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (4,4)=4  (4,5)=6  (4,6)=4  (4,7)=4  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (5,0)=4  (5,1)=4  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,0)=4  (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (9,8)=1  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (10,5)=6  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,11)=6  (11,12)=1  (12,2)=6  (12,8)=1  (12,9)=1  (12,10)=1  (12,11)=1  (12,12)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=1  (13,12)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=1  (14,12)=1  (15,5)=6  (15,8)=1  (15,9)=1  (15,10)=1  (15,11)=1  (15,12)=1  (16,8)=1  (16,9)=1  (16,10)=1  (16,11)=1  (16,12)=1 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (16,15) and color cyan and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=2  (0,8)=2  (0,9)=2  (0,10)=2  (0,11)=2  (0,12)=2  (0,13)=2  (0,14)=2  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=1  (1,11)=2  (1,12)=2  (1,13)=1  (1,14)=2  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (2,14)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=2  (3,8)=2  (3,9)=1  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (3,14)=2  (4,0)=3  (4,1)=3  (4,2)=1  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,7)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (4,14)=2  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (6,0)=3  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,6)=3  (6,7)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=1  (6,12)=2  (6,13)=2  (6,14)=2  (7,0)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=2  (7,8)=2  (7,9)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,14)=2  (8,0)=3  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=2  (8,12)=2  (8,13)=2  (8,14)=2  (12,11)=1  (13,6)=1 
   (0.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color cyan and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=2  (0,8)=2  (0,9)=2  (0,10)=2  (0,11)=2  (0,12)=2  (0,13)=2  (0,14)=2  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=1  (1,11)=2  (1,12)=2  (1,13)=1  (1,14)=2  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (2,14)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=2  (3,8)=2  (3,9)=1  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (3,14)=2  (4,0)=3  (4,1)=3  (4,2)=1  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,7)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (4,14)=2  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (6,0)=3  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,6)=3  (6,7)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=1  (6,12)=2  (6,13)=2  (6,14)=2  (7,0)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=2  (7,8)=2  (7,9)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,14)=2  (8,0)=3  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=2  (8,12)=2  (8,13)=2  (8,14)=2  (12,11)=1  (13,6)=1 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,17) and color grey and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (0,6)=1  (1,0)=1  (1,1)=4  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=4  (3,4)=1  (3,5)=1  (3,6)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,11)=4  (6,0)=1  (6,1)=1  (6,2)=4  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=6  (8,8)=6  (8,9)=6  (8,10)=6  (8,11)=6  (8,12)=6  (8,13)=6  (8,14)=6  (8,15)=6  (8,16)=6  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=6  (9,11)=6  (9,12)=4  (9,13)=6  (9,14)=6  (9,15)=6  (9,16)=6  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=6  (10,8)=6  (10,9)=6  (10,10)=6  (10,11)=6  (10,12)=6  (10,13)=6  (10,14)=6  (10,15)=6  (10,16)=6  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,4)=0  (11,5)=0  (11,6)=0  (11,7)=6  (11,8)=6  (11,9)=6  (11,10)=4  (11,11)=6  (11,12)=6  (11,13)=6  (11,14)=6  (11,15)=4  (11,16)=6  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=6  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=6  (12,15)=6  (12,16)=6  (13,0)=0  (13,1)=0  (13,2)=0  (13,3)=0  (13,4)=0  (13,5)=0  (13,6)=0  (13,7)=6  (13,8)=6  (13,9)=6  (13,10)=6  (13,11)=6  (13,12)=6  (13,13)=6  (13,14)=6  (13,15)=6  (13,16)=6  (14,0)=0  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,6)=0  (14,7)=6  (14,8)=6  (14,9)=6  (14,10)=6  (14,11)=6  (14,12)=6  (14,13)=4  (14,14)=6  (14,15)=6  (14,16)=6  (15,0)=0  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=6  (15,8)=6  (15,9)=6  (15,10)=6  (15,11)=6  (15,12)=6  (15,13)=6  (15,14)=6  (15,15)=6  (15,16)=6 
   (0.0 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color grey and layers
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (0,6)=1  (1,0)=1  (1,1)=4  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=4  (3,4)=1  (3,5)=1  (3,6)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,5)=1  (4,6)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,11)=4  (6,0)=1  (6,1)=1  (6,2)=4  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=6  (8,8)=6  (8,9)=6  (8,10)=6  (8,11)=6  (8,12)=6  (8,13)=6  (8,14)=6  (8,15)=6  (8,16)=6  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=6  (9,11)=6  (9,12)=4  (9,13)=6  (9,14)=6  (9,15)=6  (9,16)=6  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=6  (10,8)=6  (10,9)=6  (10,10)=6  (10,11)=6  (10,12)=6  (10,13)=6  (10,14)=6  (10,15)=6  (10,16)=6  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,4)=0  (11,5)=0  (11,6)=0  (11,7)=6  (11,8)=6  (11,9)=6  (11,10)=4  (11,11)=6  (11,12)=6  (11,13)=6  (11,14)=6  (11,15)=4  (11,16)=6  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=6  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=6  (12,15)=6  (12,16)=6  (13,0)=0  (13,1)=0  (13,2)=0  (13,3)=0  (13,4)=0  (13,5)=0  (13,6)=0  (13,7)=6  (13,8)=6  (13,9)=6  (13,10)=6  (13,11)=6  (13,12)=6  (13,13)=6  (13,14)=6  (13,15)=6  (13,16)=6  (14,0)=0  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,6)=0  (14,7)=6  (14,8)=6  (14,9)=6  (14,10)=6  (14,11)=6  (14,12)=6  (14,13)=4  (14,14)=6  (14,15)=6  (14,16)=6  (15,0)=0  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=6  (15,8)=6  (15,9)=6  (15,10)=6  (15,11)=6  (15,12)=6  (15,13)=6  (15,14)=6  (15,15)=6  (15,16)=6 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (16,19) and color blue and layers
diff: 
delta: (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,18)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,17)=8  (1,18)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (3,15)=8  (3,16)=8  (3,17)=8  (3,18)=8  (4,7)=8  (4,8)=8  (4,9)=8  (4,10)=8  (4,11)=2  (4,12)=8  (4,13)=8  (4,14)=8  (4,15)=8  (4,16)=8  (4,17)=8  (4,18)=8  (5,7)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,11)=8  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,16)=8  (5,17)=8  (5,18)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,11)=8  (6,12)=8  (6,13)=8  (6,14)=8  (6,15)=8  (6,16)=8  (6,17)=8  (6,18)=8  (7,7)=8  (7,8)=8  (7,9)=8  (7,10)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=8  (7,17)=8  (7,18)=8  (8,7)=8  (8,8)=8  (8,9)=8  (8,10)=8  (8,11)=8  (8,12)=8  (8,13)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (9,7)=4  (9,8)=4  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=4  (9,16)=4  (9,17)=4  (9,18)=4  (10,7)=4  (10,8)=4  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,18)=4  (11,7)=4  (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (11,15)=4  (11,16)=4  (11,17)=4  (11,18)=4  (12,7)=4  (12,8)=4  (12,9)=4  (12,10)=4  (12,11)=4  (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=4  (12,16)=4  (12,17)=4  (12,18)=4  (13,7)=4  (13,8)=4  (13,9)=2  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,15)=4  (13,16)=4  (13,17)=4  (13,18)=4  (14,7)=4  (14,8)=4  (14,9)=4  (14,10)=4  (14,11)=4  (14,12)=2  (14,13)=4  (14,14)=4  (14,15)=4  (14,16)=4  (14,17)=4  (14,18)=4  (15,7)=4  (15,8)=4  (15,9)=4  (15,10)=4  (15,11)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (15,16)=4  (15,17)=4  (15,18)=4 
   (0.0 bits)
data: a background with size (1,1) and color yellow and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color blue and layers
diff: 
delta: (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,16)=8  (0,17)=8  (0,18)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=8  (1,17)=8  (1,18)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (3,15)=8  (3,16)=8  (3,17)=8  (3,18)=8  (4,7)=8  (4,8)=8  (4,9)=8  (4,10)=8  (4,11)=2  (4,12)=8  (4,13)=8  (4,14)=8  (4,15)=8  (4,16)=8  (4,17)=8  (4,18)=8  (5,7)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,11)=8  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,16)=8  (5,17)=8  (5,18)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,11)=8  (6,12)=8  (6,13)=8  (6,14)=8  (6,15)=8  (6,16)=8  (6,17)=8  (6,18)=8  (7,7)=8  (7,8)=8  (7,9)=8  (7,10)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=8  (7,17)=8  (7,18)=8  (8,7)=8  (8,8)=8  (8,9)=8  (8,10)=8  (8,11)=8  (8,12)=8  (8,13)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (9,7)=4  (9,8)=4  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=4  (9,16)=4  (9,17)=4  (9,18)=4  (10,7)=4  (10,8)=4  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,18)=4  (11,7)=4  (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (11,15)=4  (11,16)=4  (11,17)=4  (11,18)=4  (12,7)=4  (12,8)=4  (12,9)=4  (12,10)=4  (12,11)=4  (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=4  (12,16)=4  (12,17)=4  (12,18)=4  (13,7)=4  (13,8)=4  (13,9)=2  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,15)=4  (13,16)=4  (13,17)=4  (13,18)=4  (14,7)=4  (14,8)=4  (14,9)=4  (14,10)=4  (14,11)=4  (14,12)=2  (14,13)=4  (14,14)=4  (14,15)=4  (14,16)=4  (14,17)=4  (14,18)=4  (15,7)=4  (15,8)=4  (15,9)=4  (15,10)=4  (15,11)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (15,16)=4  (15,17)=4  (15,18)=4 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color cyan and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,8)=3  (0,9)=3  (0,10)=3  (0,11)=3  (0,12)=3  (0,13)=3  (0,14)=3  (0,15)=3  (0,16)=3  (0,17)=3  (0,18)=3  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=3  (1,14)=3  (1,15)=3  (1,16)=3  (1,17)=3  (1,18)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (2,11)=3  (2,12)=3  (2,13)=3  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (3,13)=3  (3,14)=3  (3,15)=3  (3,16)=3  (3,17)=3  (3,18)=3  (4,0)=2  (4,1)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=2  (4,8)=2  (5,0)=2  (5,1)=4  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=4  (5,8)=2  (6,0)=2  (6,1)=2  (6,2)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=4  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=2  (8,0)=2  (8,1)=2  (8,2)=4  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=2  (9,1)=2  (9,2)=2  (9,3)=2  (9,4)=2  (9,5)=2  (9,6)=4  (9,7)=2  (9,8)=2  (9,14)=4  (10,0)=2  (10,1)=2  (10,2)=2  (10,3)=2  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (11,0)=2  (11,1)=2  (11,2)=2  (11,3)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,12)=4  (12,0)=1  (12,1)=1  (12,2)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (12,7)=1  (12,8)=1  (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,6)=1  (13,7)=1  (13,8)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (14,4)=1  (14,5)=1  (14,6)=1  (14,7)=1  (14,8)=1  (14,14)=4  (15,0)=1  (15,1)=1  (15,2)=1  (15,3)=1  (15,4)=4  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1  (16,0)=1  (16,1)=4  (16,2)=1  (16,3)=1  (16,4)=1  (16,5)=1  (16,6)=1  (16,7)=1  (16,8)=1  (17,0)=1  (17,1)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,5)=1  (17,6)=1  (17,7)=1  (17,8)=1 
! 1 wrong pixels (generated / expected)

TEST de1cd16c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.0 sec (2.0 sec/task)
bits-train-error = 358.6 bits (358.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-45] Checking task ded97339.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6403.7 = 6416.3
DL output with Mo: L = 12.6 + 17269.7 = 17282.3
DL input+output M: L = 25.2 + 23673.4 = 23698.7

# learning a model for train pairs
2.000	
1.339	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.234	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.044	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.948	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.849	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.814	OUT SPE ^.size = ^.size
0.789	IN  SPE ^.layer_0.shape.color = cyan
0.763	IN  SPE ^.layer_01.shape.color = cyan
0.737	IN  SPE ^.layer_011.shape.color = cyan
0.711	IN  SPE ^.layer_0111.shape.color = cyan
0.696	OUT SPE ^.layer_01.pos = min(^.layer_01.pos, ^.layer_011.pos)
0.684	IN  SPE ^.color = black
0.674	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.665	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.659	OUT SPE ^.layer_0.shape.size.i = 1
0.653	OUT SPE ^.layer_0.shape.mask = Full
0.649	OUT SPE ^.color = black
0.163	
0.160	IN  DEL ^.layer_0111
0.159	IN  GEN ^.layer_011.shape.color = ?
0.159	IN  GEN ^.layer_01.shape.color = ?
0.158	IN  GEN ^.layer_0.shape.color = ?
0.158	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at min(^.layer_01.pos, ^.layer_011.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)
  _011: a point with color cyan at (?,?)
  _0111: a point with color cyan at (?,?)

DL input  with Mi: L = 90.4 + 3139.7 = 3230.1
DL output with Mo: L = 86.0 + 2430.8 = 2516.9
DL input+output M: L = 176.4 + 5570.6 = 5747.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at min(^.layer_01.pos, ^.layer_011.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 20.0 = 81.4
DL output with Mo: L = 86.0 + 2430.8 = 2516.9
DL input+output M: L = 147.4 + 2450.8 = 2598.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (3,6)
  _011: a point with color cyan at (9,6)
diff: 
delta: (7,4)=8 
   (2.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color cyan and mask Full at (3,1)
  _01: a rectangle with size (7,1) and color cyan and mask Full at (3,6)
diff: 
delta: (7,4)=8 
   (74.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (3,6)
  _011: a point with color cyan at (7,4)
diff: 
delta: (9,6)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (3,6)
  _011: a point with color cyan at (9,6)
diff: 
delta: (7,4)=8 
! 15 wrong pixels (generated / expected)

TRAIN ded97339.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
  _011: a point with color cyan at (6,5)
diff: 
delta: (6,9)=8  (8,2)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (6,5)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (3,2)
diff: 
delta: (1,7)=8 
   (73.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
  _011: a point with color cyan at (6,5)
diff: 
delta: (6,9)=8  (8,2)=8 
! 14 wrong pixels (generated / expected)

TRAIN ded97339.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (4,1)
diff: 
delta: (7,5)=8  (7,9)=8  (9,2)=8 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (9,2)
  _01: a rectangle with size (7,9) and color cyan and mask xxxxx....|x...x....|x...x....|x...x....|....x....|....x....|....xxxxx at (1,1)
diff: 
delta:
   (95.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (4,1)
diff: 
delta: (7,5)=8  (7,9)=8  (9,2)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (7,5)
diff: 
delta: (4,1)=8  (7,9)=8  (9,2)=8 
! 21 wrong pixels (generated / expected)

TRAIN ded97339.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (2,3)
  _011: a point with color cyan at (3,7)
diff: 
delta: (5,1)=8  (8,4)=8  (8,7)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (2,3)
  _011: a point with color cyan at (5,1)
diff: 
delta: (3,7)=8  (8,4)=8  (8,7)=8 
! 17 wrong pixels (generated / expected)

TEST ded97339.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.1 sec (10.1 sec/task)
bits-train-error = 2430.8 bits (2430.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-44] Checking task e179c5f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1685.8 = 1698.4
DL output with Mo: L = 12.6 + 11584.3 = 11596.9
DL input+output M: L = 25.2 + 13270.1 = 13295.3

# learning a model for train pairs
2.000	
1.221	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.837	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.740	IN  SPE ^.layer_0.shape.color = blue
0.696	IN  SPE ^.color = black
0.654	OUT SPE ^.size = ^.size
0.612	OUT SPE ^.layer_0.shape.size = ^.size
0.587	OUT SPE ^.layer_0.pos = '(0, 0)
0.565	OUT SPE ^.color = cyan
0.550	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.094	
0.092	IN  GEN ^.layer_0.shape.color = ?
0.092	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color cyan and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)

DL input  with Mi: L = 33.0 + 775.2 = 808.2
DL output with Mo: L = 48.0 + 815.5 = 863.5
DL input+output M: L = 81.0 + 1590.7 = 1671.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color cyan and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 48.0 + 815.5 = 863.5
DL input+output M: L = 77.6 + 815.5 = 893.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,2) and color cyan and layers
  _0: a rectangle with size (10,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,3) and color cyan and layers
  _0: a rectangle with size (10,3) and color blue and mask .x.|x..|.x.|..x|.x.|x..|.x.|..x|.x.|x.. at (0,0)
diff: 
delta:
   (34.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN e179c5f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,4) and color cyan and layers
  _0: a rectangle with size (10,4) and color blue and mask ...x|..x.|.x..|x...|.x..|..x.|...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (39.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN e179c5f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST e179c5f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 815.5 bits (815.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-43] Checking task e21d9049.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5146.1 = 5158.7
DL output with Mo: L = 12.6 + 19645.2 = 19657.8
DL input+output M: L = 25.2 + 24791.3 = 24816.5

# learning a model for train pairs
2.000	
1.847	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.750	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.670	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.589	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.512	OUT ADD ^.layer_0 = ^.layer_0
1.454	OUT ADD ^.layer_01 = ^.layer_01
1.354	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.236	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.191	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
1.166	OUT ADD ^.layer_01110 = ^.layer_0111.shape at (?,?)
1.158	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.135	OUT ADD ^.layer_011111 = ^.layer_011.shape at (?,?)
1.113	OUT SPE ^.size = ^.size
1.093	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.072	IN  SPE ^.layer_0111.shape.color = green
1.051	IN  SPE ^.layer_0.shape.color = cyan
1.038	OUT SPE ^.layer_0110 = ^.layer_011
1.026	OUT SPE ^.layer_01111.pos = projI(^.layer_01111.pos) + (0, 1)
1.017	OUT SPE ^.layer_01111.shape.size.j = ^.size.j - 1
1.007	IN  SPE ^.color = black
1.000	OUT SPE ^.layer_011111.pos = projJ(^.layer_011.pos)
0.989	OUT SPE ^.layer_011.pos = ^.layer_0.pos - translationSym(flipHeight, ^.layer_011, ^.layer_0)
0.983	OUT SPE ^.layer_0111.pos.j = 2
0.978	OUT SPE ^.layer_0111.shape.color = ^.layer_01111.shape.color
0.973	OUT SPE ^.layer_01110.pos.j = ^.layer_0111.pos.i - 2
0.969	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.j - ^.layer_01.shape.size.i
0.965	OUT SPE ^.layer_01110.pos.i = span(^.layer_0.pos.i, ^.layer_0111.pos.i) * '3
0.962	OUT SPE ^.layer_0111.shape.mask = Full
0.958	OUT SPE ^.layer_01111.shape.size.i = 1
0.955	OUT SPE ^.layer_01111.shape.mask = Full
0.953	OUT SPE ^.color = black
0.951	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.j + ^.layer_011.pos.i - ^.layer_0.pos.i
0.460	
0.460	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011
  _011: a rectangle with size (?,^.layer_01.shape.size.j + ^.layer_011.pos.i - ^.layer_0.pos.i) and color ? and mask ? at ^.layer_0.pos - translationSym(flipHeight, ^.layer_011, ^.layer_0)
  _01110: ^.layer_0111.shape at (span(^.layer_0.pos.i, ^.layer_0111.pos.i) * '3,^.layer_0111.pos.i - 2)
  _0111: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask Full at (^.layer_011.pos.j - ^.layer_01.shape.size.i,2)
  _01111: a rectangle with size (1,^.size.j - 1) and color ? and mask Full at projI(^.layer_01111.pos) + (0, 1)
  _011111: ^.layer_011.shape at projJ(^.layer_011.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 117.8 + 2554.1 = 2671.9
DL output with Mo: L = 400.5 + 8114.2 = 8514.7
DL input+output M: L = 518.3 + 10668.3 = 11186.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: ^.layer_011
  _011: a rectangle with size (?,^.layer_01.shape.size.j + ^.layer_011.pos.i - ^.layer_0.pos.i) and color ? and mask ? at ^.layer_0.pos - translationSym(flipHeight, ^.layer_011, ^.layer_0)
  _01110: ^.layer_0111.shape at (span(^.layer_0.pos.i, ^.layer_0111.pos.i) * '3,^.layer_0111.pos.i - 2)
  _0111: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask Full at (^.layer_011.pos.j - ^.layer_01.shape.size.i,2)
  _01111: a rectangle with size (1,^.size.j - 1) and color ? and mask Full at projI(^.layer_01111.pos) + (0, 1)
  _011111: ^.layer_011.shape at projJ(^.layer_011.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 117.7 + 20.0 = 137.7
DL output with Mo: L = 400.5 + 8114.2 = 8514.7
DL input+output M: L = 518.2 + 8134.2 = 8652.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,0)
  _011: a point with color green at (3,2)
  _0111: a point with color green at (4,1)
  _01111: a point with color red at (4,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,0)
  _0110: a point with color green at (3,2)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (4,2)
  _01110: a point with color green at (9,2)
  _0111: a rectangle with size (10,1) and color red and mask Full at (1,2)
  _01111: a rectangle with size (1,10) and color green and mask Full at (4,1)
  _011111: a point with color green at (0,2)
diff: 
delta: (4,5)=2  (4,6)=8  (4,8)=2  (4,9)=8  (6,2)=3  (8,2)=8  (11,2)=8 
   (306.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,2)
  _011: a point with color cyan at (4,0)
  _0111: a point with color green at (4,1)
  _01111: a point with color red at (4,2)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,0)
  _011: a point with color green at (3,2)
  _0111: a point with color green at (4,1)
  _01111: a point with color red at (4,2)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN e21d9049.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,7)
  _011: a point with color yellow at (4,8)
  _0111: a point with color green at (6,8)
  _01111: a point with color yellow at (6,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,7)
  _0110: a point with color yellow at (4,8)
  _011: a rectangle with size (13,1) and color green and mask Full at (2,8)
  _01110: a point with color green at (6,4)
  _0111: a rectangle with size (1,9) and color yellow and mask Full at (6,2)
  _01111: a rectangle with size (1,13) and color cyan and mask Full at (6,1)
  _011111: a point with color yellow at (0,8)
diff: 
delta: (1,8)=8  (3,8)=2  (6,0)=3  (6,3)=2  (6,5)=8  (6,11)=2  (6,12)=3  (8,8)=4  (9,8)=8  (11,8)=2  (12,8)=4  (13,8)=8 
   (504.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,7)
  _011: a point with color yellow at (4,8)
  _0111: a point with color green at (6,8)
  _01111: a point with color yellow at (6,10)
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,7)
  _011: a point with color yellow at (6,10)
  _0111: a point with color green at (6,8)
  _01111: a point with color yellow at (4,8)
diff: 
delta:
! 41 wrong pixels (generated / expected)

TRAIN e21d9049.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,6)
  _011: a point with color green at (6,7)
  _0111: a point with color green at (7,6)
  _01111: a point with color blue at (6,8)
diff:   ^.layer_0.shape.color
delta: (8,6)=1 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,6)
  _011: a point with color green at (6,7)
  _0111: a point with color green at (7,6)
  _01111: a point with color blue at (8,6)
diff:   ^.layer_0.shape.color
delta: (6,8)=1 
! 58 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,6)
  _011: a point with color blue at (6,8)
  _0111: a point with color green at (6,7)
  _01111: a point with color green at (7,6)
diff:   ^.layer_0.shape.color
delta: (8,6)=1 
! 56 wrong pixels (generated / expected)

TEST e21d9049.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 37.1 sec (37.1 sec/task)
bits-train-error = 8114.2 bits (8114.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-42] Checking task e26a3af2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 163062.7 = 163075.3
DL output with Mo: L = 12.6 + 148914.7 = 148927.3
DL input+output M: L = 25.2 + 311977.3 = 312002.6

# learning a model for train pairs
2.000	
1.531	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.581	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.409	OUT ADD ^.layer_011 = ^.layer_01
0.404	OUT SPE ^.size = ^.size
0.402	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.400	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.398	OUT SPE ^.layer_0.shape.size.i = average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.397	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.396	IN  SPE ^.layer_01.shape.mask = Full
0.260	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.256	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.248	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.244	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.236	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.228	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.228	IN  SPE ^.layer_011.shape.mask = Full
0.227	OUT SPE ^.layer_0.shape.mask = Full
0.226	OUT SPE ^.layer_01.shape.mask = Full
0.225	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.j - ^.layer_011111.pos.j - ^.layer_01.pos.j
0.224	OUT SPE ^.layer_01.shape.size.j = ^.layer_011111.shape.size.i + ^.layer_011.pos.i - ^.layer_0110.pos.i
0.223	IN  SPE ^.layer_0111.shape.mask = Full
0.008	
0.008	IN  GEN ^.layer_0111.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.j - ^.layer_011111.pos.j - ^.layer_01.pos.j,^.layer_011111.shape.size.i + ^.layer_011.pos.i - ^.layer_0110.pos.i) and color ? and mask Full at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 197.1 + 35157.7 = 35354.8
DL output with Mo: L = 248.3 + 742.6 = 991.0
DL input+output M: L = 445.5 + 35900.3 = 36345.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.j - ^.layer_011111.pos.j - ^.layer_01.pos.j,^.layer_011111.shape.size.i + ^.layer_011.pos.i - ^.layer_0110.pos.i) and color ? and mask Full at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 196.1 + 20.0 = 216.1
DL output with Mo: L = 248.3 + 742.6 = 991.0
DL input+output M: L = 444.5 + 762.6 = 1207.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,17) and color red and layers
  _00: a point with color cyan at (0,15)
  _0: a rectangle with size (13,5) and color blue and mask xxxxx|..x.x|.xx.x|xxxxx|.xxx.|.x.xx|xxxx.|xxxxx|xxx.x|.xx.x|xxxxx|xxxxx|x.x.x at (0,0)
  _01: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _0110: a point with color brown at (1,0)
  _011: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (1,1)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (5,14)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (2,0)
diff: 
delta: (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,5)=7# (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
   (0.0 bits)
data: a background with size (13,17) and color red and layers
  _0: a rectangle with size (13,5) and color blue and mask Full at (0,0)
  _01: a rectangle with size (13,3) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (13,4) and color green and mask Full at (0,8)
diff: 
delta:
   (27.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color red and layers
  _00: a point with color cyan at (0,15)
  _0: a rectangle with size (13,5) and color blue and mask xxxxx|..x.x|.xx.x|xxxxx|.xxx.|.x.xx|xxxx.|xxxxx|xxx.x|.xx.x|xxxxx|xxxxx|x.x.x at (0,0)
  _01: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _0110: a point with color brown at (1,0)
  _011: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (1,1)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (5,14)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (2,0)
diff: 
delta: (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,5)=7# (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,17) and color red and layers
  _00: a point with color cyan at (0,15)
  _0: a rectangle with size (13,5) and color blue and mask xxxxx|..x.x|.xx.x|xxxxx|.xxx.|.x.xx|xxxx.|xxxxx|xxx.x|.xx.x|xxxxx|xxxxx|x.x.x at (0,0)
  _01: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
  _0110: a point with color brown at (1,0)
  _011: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (1,1)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (5,14)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (2,0)
diff: 
delta: (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,5)=7# (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
! 117 wrong pixels (generated / expected)

TRAIN e26a3af2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,14) and color cyan and layers
  _00: a point with color blue at (0,7)
  _0: a rectangle with size (13,5) and color red and mask xxxxx|xx.xx|xxxxx|xxxxx|xxxxx|xxxxx|xxx.x|x..xx|xxxxx|xxx.x|xxxx.|xxxxx|x.xxx at (0,0)
  _01: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _0110: a point with color pink at (3,8)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,10)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (9,8)
  _01111: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (2,6)
  _011111: a rectangle with size (4,1) and color pink and mask Full at (6,3)
diff: 
delta: (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,11)=8  (11,13)=3  (12,9)=3  (12,11)=9#
   (0.0 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (13,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (13,6) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (13,3) and color blue and mask Full at (0,11)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color cyan and layers
  _00: a point with color blue at (0,7)
  _0: a rectangle with size (13,5) and color red and mask xxxxx|xx.xx|xxxxx|xxxxx|xxxxx|xxxxx|xxx.x|x..xx|xxxxx|xxx.x|xxxx.|xxxxx|x.xxx at (0,0)
  _01: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _0110: a point with color pink at (3,8)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,10)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (9,8)
  _01111: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (2,6)
  _011111: a rectangle with size (4,1) and color pink and mask Full at (6,3)
diff: 
delta: (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,11)=8  (11,13)=3  (12,9)=3  (12,11)=9#
! 78 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,14) and color cyan and layers
  _00: a point with color blue at (0,7)
  _0: a rectangle with size (13,5) and color red and mask xxxxx|xx.xx|xxxxx|xxxxx|xxxxx|xxxxx|xxx.x|x..xx|xxxxx|xxx.x|xxxx.|xxxxx|x.xxx at (0,0)
  _01: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _0110: a point with color brown at (2,7)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,10)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (9,8)
  _01111: a rectangle with size (4,1) and color pink and mask Full at (6,3)
  _011111: a rectangle with size (1,1) and color brown and mask Full at (3,6)
diff: 
delta: (3,8)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,11)=8  (11,13)=3  (12,9)=3  (12,11)=9#
! 78 wrong pixels (generated / expected)

TRAIN e26a3af2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,14) and color orange and layers
  _00: a point with color yellow at (0,1)
  _0: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _01: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _0110: a point with color red at (1,5)
  _011: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _0111: a rectangle with size (2,2) and color red and mask Full at (1,7)
  _01111: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
diff: 
delta: (3,2)=4  (3,5)=2  (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
   (2.0 bits)
data: a background with size (15,14) and color orange and layers
  _0: a rectangle with size (4,14) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _011: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
diff: 
delta:
   (27.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color orange and layers
  _00: a point with color yellow at (0,1)
  _0: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _01: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _0110: a point with color red at (1,8)
  _011: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _0111: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _01111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
  _011111: a rectangle with size (3,1) and color red and mask Full at (1,5)
diff: 
delta: (2,7)=2  (3,2)=4  (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 112 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color orange and layers
  _00: a point with color yellow at (0,1)
  _0: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _01: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _0110: a point with color red at (1,5)
  _011: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _0111: a rectangle with size (2,2) and color red and mask Full at (1,7)
  _01111: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
diff: 
delta: (3,2)=4  (3,5)=2  (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 112 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color orange and layers
  _00: a point with color yellow at (0,1)
  _0: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _01: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _0110: a point with color red at (1,5)
  _011: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _0111: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _01111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
  _011111: a rectangle with size (1,1) and color red and mask Full at (1,8)
diff: 
delta: (2,7)=2  (3,2)=4  (3,5)=2  (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 112 wrong pixels (generated / expected)

TRAIN e26a3af2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST e26a3af2.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 14.1 sec (14.1 sec/task)
bits-train-error = 742.6 bits (742.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-41] Checking task e3497940.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27233.1 = 27245.7
DL output with Mo: L = 12.6 + 13724.4 = 13737.0
DL input+output M: L = 25.2 + 40957.6 = 40982.8

# learning a model for train pairs
2.000	
1.489	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.117	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.966	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.842	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.765	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.705	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.658	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.627	OUT ADD ^.layer_011 = ^.layer_01111.shape at (?,?)
0.614	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.576	OUT ADD ^.layer_0111 = ^.layer_01110.shape at (?,?)
0.540	OUT SPE ^.size = ^.layer_0.shape.size + (0, 3)
0.519	OUT SPE ^.layer_0111.pos = projI(^.layer_0111.pos) + (2, 2)
0.507	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.487	OUT SPE ^.layer_011.pos = projI(^.layer_01111.pos) + (0, 1)
0.472	OUT SPE ^.layer_0.shape.size = max(^.layer_01.shape.size, ^.layer_01111.shape.size) - (2, 1)
0.464	OUT SPE ^.layer_0.pos.i = min(^.layer_01111.pos.j, ^.layer_01110.pos.j)
0.456	OUT SPE ^.layer_01.pos.i = right(^.layer_0111) - ^.layer_0111.pos.i - ^.layer_011.pos.i
0.450	OUT SPE ^.layer_01.shape.size.j = min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.444	OUT SPE ^.layer_01.pos.j = center(^.layer_0) - ^.layer_011.pos.j - ^.layer_01.pos.j
0.438	IN  SPE ^.layer_0.shape.color = grey
0.432	OUT SPE ^.layer_0.pos.j = min(^.layer_0111.pos.j, ^.layer_01110.pos.j)
0.426	OUT SPE ^.color = black
0.423	IN  SPE ^.layer_0.shape.mask = Full
0.419	IN  SPE ^.layer_011.shape.mask = Full
0.416	IN  SPE ^.layer_0111.shape.mask = Full
0.412	IN  SPE ^.layer_01111.shape.mask = Full
0.409	IN  SPE ^.color = black
0.158	
0.158	IN  GEN ^.layer_01111.shape.mask = ?
0.158	IN  GEN ^.layer_0111.shape.mask = ?
0.158	IN  GEN ^.layer_011.shape.mask = ?
0.158	IN  GEN ^.layer_0.shape.mask = ?
0.157	IN  GEN ^.layer_0.shape.color = ?
0.157	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (0, 3) and color black and layers
  _0: a rectangle with size max(^.layer_01.shape.size, ^.layer_01111.shape.size) - (2, 1) and color ? and mask ? at (min(^.layer_01111.pos.j, ^.layer_01110.pos.j),min(^.layer_0111.pos.j, ^.layer_01110.pos.j))
  _01: a rectangle with size (?,min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)) and color ^.layer_01.shape.color and mask ? at (right(^.layer_0111) - ^.layer_0111.pos.i - ^.layer_011.pos.i,center(^.layer_0) - ^.layer_011.pos.j - ^.layer_01.pos.j)
  _011: ^.layer_01111.shape at projI(^.layer_01111.pos) + (0, 1)
  _0111: ^.layer_01110.shape at projI(^.layer_0111.pos) + (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 161.7 + 6894.0 = 7055.7
DL output with Mo: L = 474.9 + 1589.1 = 2064.1
DL input+output M: L = 636.6 + 8483.1 = 9119.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (0, 3) and color black and layers
  _0: a rectangle with size max(^.layer_01.shape.size, ^.layer_01111.shape.size) - (2, 1) and color ? and mask ? at (min(^.layer_01111.pos.j, ^.layer_01110.pos.j),min(^.layer_0111.pos.j, ^.layer_01110.pos.j))
  _01: a rectangle with size (?,min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)) and color ^.layer_01.shape.color and mask ? at (right(^.layer_0111) - ^.layer_0111.pos.i - ^.layer_011.pos.i,center(^.layer_0) - ^.layer_011.pos.j - ^.layer_01.pos.j)
  _011: ^.layer_01111.shape at projI(^.layer_01111.pos) + (0, 1)
  _0111: ^.layer_01110.shape at projI(^.layer_0111.pos) + (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 154.3 + 40.0 = 194.3
DL output with Mo: L = 474.9 + 1589.1 = 2064.1
DL input+output M: L = 629.2 + 1629.1 = 2258.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,1) and color green and mask Full at (4,3)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _01110: a point with color green at (4,2)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _01111: a rectangle with size (1,3) and color green and mask Full at (6,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask .x|xx at (2,2)
  _01: a rectangle with size (4,1) and color green and mask Full at (4,3)
  _011: a rectangle with size (1,3) and color green and mask Full at (6,1)
  _0111: a point with color green at (4,2)
diff: 
delta:
   (25.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,1) and color green and mask Full at (4,3)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _01110: a point with color green at (4,2)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _01111: a rectangle with size (1,3) and color green and mask Full at (6,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN e3497940.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _01110: a point with color red at (2,5)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
  _01111: a rectangle with size (1,3) and color red and mask Full at (4,5)
diff: 
delta: (2,6)=6  (7,5)=2 
   (2.0 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (5,2)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (4,1)
  _0111: a point with color red at (7,2)
diff: 
delta: (2,2)=6  (7,1)=2 
   (96.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _01110: a point with color red at (2,5)
  _0111: a rectangle with size (1,3) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
diff: 
delta: (2,6)=6  (7,5)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _01110: a point with color red at (2,5)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
  _01111: a rectangle with size (1,3) and color red and mask Full at (4,5)
diff: 
delta: (2,6)=6  (7,5)=2 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _01110: a point with color pink at (2,6)
  _0111: a rectangle with size (1,3) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
diff: 
delta: (2,5)=2  (7,5)=2 
! 14 wrong pixels (generated / expected)

TRAIN e3497940.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _01110: a point with color orange at (1,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (4,1)
diff: 
delta: (8,5)=8  (8,6)=7#
   (0.0 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,3)
  _01: a rectangle with size (7,2) and color cyan and mask .x|.x|xx|xx|.x|.x|.x at (2,2)
  _011: a rectangle with size (1,1) and color orange and mask Full at (4,1)
  _0111: a point with color orange at (8,2)
diff: 
delta:
   (37.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _01110: a point with color orange at (1,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (4,1)
diff: 
delta: (8,5)=8  (8,6)=7#
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _01110: a point with color orange at (1,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (8,5)
diff: 
delta: (4,1)=7# (8,6)=7#
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _01110: a point with color orange at (1,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (4,1)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
diff: 
delta: (8,5)=8  (8,6)=7#
! 16 wrong pixels (generated / expected)

TRAIN e3497940.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (1,7) and color blue and mask Full at (3,1)
  _011: a rectangle with size (7,1) and color blue and mask Full at (1,3)
  _01110: a point with color blue at (2,5)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (5,5)
  _01111: a rectangle with size (5,2) and color pink and mask Full at (4,5)
diff: 
delta: (3,8)=6  (4,3)=6  (5,3)=0  (6,5)=0  (6,6)=0  (7,5)=1  (8,6)=0 
! 18 wrong pixels (generated / expected)

TEST e3497940.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.3 sec (29.3 sec/task)
bits-train-error = 1589.1 bits (1589.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-40] Checking task e40b9e2f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10908.7 = 10921.3
DL output with Mo: L = 12.6 + 16523.0 = 16535.6
DL input+output M: L = 25.2 + 27431.7 = 27456.9

# learning a model for train pairs
2.000	
1.426	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.916	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.745	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.548	OUT SPE ^.size = ^.size
0.528	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (1, 1)
0.518	OUT SPE ^.layer_01.pos.i = 3
0.510	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.501	OUT SPE ^.layer_01.pos.j = center(^.layer_01) / '2
0.495	IN  SPE ^.color = black
0.490	OUT SPE ^.color = black
0.237	
0.237	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos - (1, 1)
  _01: a rectangle with size (?,?) and color ? and mask ^.layer_01.shape.mask at (3,center(^.layer_01) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 2768.8 = 2833.2
DL output with Mo: L = 104.6 + 3711.2 = 3815.9
DL input+output M: L = 169.0 + 6480.1 = 6649.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos - (1, 1)
  _01: a rectangle with size (?,?) and color ? and mask ^.layer_01.shape.mask at (3,center(^.layer_01) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 104.6 + 3711.2 = 3815.9
DL input+output M: L = 168.8 + 3711.2 = 3880.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|.x..|x.x.|...x at (4,3)
  _01: a rectangle with size (4,3) and color orange and mask +-cross at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask x-cross at (3,2)
  _01: a rectangle with size (5,5) and color orange and mask +-cross at (3,2)
diff: 
delta:
   (50.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|.x..|x.x.|...x at (4,3)
  _01: a rectangle with size (4,3) and color orange and mask +-cross at (3,3)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask .x..|.xxx|xxx.|..x. at (3,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=3  (6,1)=3  (6,4)=3 
   (170.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color brown and mask Full at (2,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
diff: 
delta: (2,6)=9# (6,2)=9# (6,6)=9#
   (149.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color brown and mask Full at (2,6)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (2,6)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxx.x|...x.|xxx.x at (3,1)
  _01: a rectangle with size (4,3) and color red and mask +-cross at (2,3)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxx.x|...x.|xxx.x at (3,1)
  _01: a rectangle with size (4,3) and color red and mask .x.|.x.|x.x|.x. at (2,3)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .x.|.x.|x.x|.x. at (2,3)
  _01: a rectangle with size (3,5) and color green and mask xxx.x|...x.|xxx.x at (3,1)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST e40b9e2f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 3711.2 bits (3711.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-39] Checking task e48d4e1a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 32860.9 = 32873.5
DL output with Mo: L = 12.6 + 29502.0 = 29514.6
DL input+output M: L = 25.2 + 62362.9 = 62388.1

# learning a model for train pairs
2.000	
1.187	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.461	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.312	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.240	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.209	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.182	OUT SPE ^.size = ^.size
0.168	OUT SPE ^.layer_0.pos = ^.layer_0.pos + projI(^.layer_011.shape.size)
0.160	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.153	IN  SPE ^.layer_011.shape.color = grey
0.147	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j - area(^.layer_011.shape)
0.143	IN  SPE ^.layer_0.shape.mask = Full
0.139	IN  SPE ^.layer_01.shape.mask = Full
0.135	IN  SPE ^.layer_011.shape.mask = Full
0.131	OUT SPE ^.color = black
0.128	IN  SPE ^.color = black
0.006	
0.006	IN  GEN ^.layer_011.shape.color = ?
0.006	IN  GEN ^.layer_011.shape.mask = ?
0.006	IN  GEN ^.layer_01.shape.mask = ?
0.006	IN  GEN ^.layer_0.shape.mask = ?
0.006	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + projI(^.layer_011.shape.size)
  _01: ^.layer_01.shape at (^.layer_01.pos.i,^.layer_01.pos.j - area(^.layer_011.shape))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 95.7 + 4015.5 = 4111.2
DL output with Mo: L = 98.7 + 0.0 = 98.7
DL input+output M: L = 194.4 + 4015.5 = 4209.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + projI(^.layer_011.shape.size)
  _01: ^.layer_01.shape at (^.layer_01.pos.i,^.layer_01.pos.j - area(^.layer_011.shape))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 98.7 + 0.0 = 98.7
DL input+output M: L = 188.0 + 0.0 = 188.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (8,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (7,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (2,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (2,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TEST e48d4e1a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-38] Checking task e5062a87.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 47980.3 = 47992.9
DL output with Mo: L = 12.6 + 51769.4 = 51782.0
DL input+output M: L = 25.2 + 99749.7 = 99774.9

# learning a model for train pairs
2.000	
1.461	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.019	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	OUT ADD ^.layer_01 = ^.layer_0
0.724	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.688	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.677	OUT SPE ^.size = ^.size
0.673	IN  SPE ^.layer_0.shape.color = grey
0.495	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.439	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	OUT ADD ^.layer_01111 = ^.layer_01
0.389	OUT SPE ^.layer_011 = ^.layer_011
0.386	OUT SPE ^.layer_0.shape.size.j = ^.size.j - average(^.layer_01.shape.size.i, ^.layer_011.shape.size.i)
0.383	OUT SPE ^.layer_0111.shape.color = red
0.380	OUT SPE ^.layer_0111.pos.i = span(^.layer_01.pos.i, ^.layer_011.pos.i) - ^.layer_011.shape.size.i
0.379	IN  SPE ^.color = black
0.377	OUT SPE ^.color = black
0.151	
0.151	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j - average(^.layer_01.shape.size.i, ^.layer_011.shape.size.i)) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color red and mask ? at (span(^.layer_01.pos.i, ^.layer_011.pos.i) - ^.layer_011.shape.size.i,?)
  _01111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.7 + 10865.9 = 10958.6
DL output with Mo: L = 202.6 + 7509.9 = 7712.5
DL input+output M: L = 295.3 + 18375.8 = 18671.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j - average(^.layer_01.shape.size.i, ^.layer_011.shape.size.i)) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color red and mask ? at (span(^.layer_01.pos.i, ^.layer_011.pos.i) - ^.layer_011.shape.size.i,?)
  _01111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 0.0 = 89.4
DL output with Mo: L = 202.6 + 7509.9 = 7712.5
DL input+output M: L = 292.0 + 7509.9 = 7801.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _01: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _011: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (8,0)=5# (8,3)=5# (9,3)=5# (9,4)=5#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask .x...|x.xx.|.xx.x|...x. at (0,5)
  _01: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _011: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
  _0111: a rectangle with size (5,4) and color red and mask ..x.|.x.x|.xx.|x.x.|.x.. at (5,5)
  _01111: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
diff: 
delta: (6,1)=2  (7,0)=2  (7,1)=5# (7,2)=2  (7,3)=5# (7,4)=5# (8,0)=5# (8,1)=2  (8,3)=5# (9,3)=5# (9,4)=5#
   (513.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _01: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _011: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (8,0)=5# (8,3)=5# (9,3)=5# (9,4)=5#
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _01: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
  _011: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (8,0)=5# (8,3)=5# (9,3)=5# (9,4)=5#
! 38 wrong pixels (generated / expected)

TRAIN e5062a87.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _01: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
  _011: a rectangle with size (1,4) and color red and mask Full at (5,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,7) and color grey and mask Full at (2,0)
  _01: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _011: a rectangle with size (1,4) and color red and mask Full at (5,1)
  _0111: a rectangle with size (1,4) and color red and mask Full at (5,6)
  _01111: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
diff: 
delta: (2,5)=0 
   (82.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _01: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
  _011: a rectangle with size (1,4) and color red and mask Full at (5,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _01: a rectangle with size (1,4) and color red and mask Full at (5,1)
  _011: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN e5062a87.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,8) and color grey and mask Full at (0,0)
  _01: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,7)
  _0111: a rectangle with size (6,4) and color red and mask x.x.|x.x.|xxxx|..x.|..x.|..xx at (2,1)
  _01111: a rectangle with size (3,1) and color red and mask Full at (7,7)
diff: 
delta: (0,4)=0  (1,4)=0 
   (155.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,7)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (9,7)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,7)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN e5062a87.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST e5062a87.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 18.2 sec (18.2 sec/task)
bits-train-error = 7509.9 bits (7509.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-37] Checking task e509e548.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41729.7 = 41742.3
DL output with Mo: L = 12.6 + 41729.7 = 41742.3
DL input+output M: L = 25.2 + 83459.4 = 83484.6

# learning a model for train pairs
2.000	
1.786	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.572	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.372	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.172	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.037	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.903	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.827	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.750	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.675	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.599	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.542	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.275	
0.274	IN  DEL ^.layer_011111
0.274	IN  DEL ^.layer_01111
0.273	IN  DEL ^.layer_0111
0.273	IN  DEL ^.layer_011
0.272	IN  DEL ^.layer_01
0.271	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 11147.9 = 11311.5
DL output with Mo: L = 163.5 + 11147.9 = 11311.5
DL input+output M: L = 327.1 + 22295.9 = 22622.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 11147.9 = 11311.5
DL input+output M: L = 176.1 + 11147.9 = 11324.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,21) and color black and layers
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (3,3)=3  (3,6)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,12)=3  (4,13)=3  (4,14)=3  (5,3)=3  (5,12)=3  (6,12)=3  (7,12)=3  (7,13)=3  (7,14)=3  (9,1)=3  (9,2)=3  (10,1)=3  (10,16)=3  (10,17)=3  (11,1)=3  (11,17)=3  (12,1)=3  (12,16)=3  (12,17)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (14,6)=3  (15,6)=3  (15,15)=3  (15,16)=3  (15,17)=3  (16,15)=3  (16,17)=3  (17,2)=3  (17,15)=3  (17,17)=3  (18,1)=3  (18,2)=3  (18,17)=3 
   (0.0 bits)
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color pink and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color pink and mask xxx|x.x|x.x|..x at (15,15)
  _0111: a rectangle with size (3,4) and color red and mask x..x|xxxx|x... at (3,3)
  _01111: a rectangle with size (3,5) and color blue and mask xxxxx|x....|x.... at (13,6)
  _011111: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (10,16)
diff: 
delta: (0,17)=1  (0,18)=1  (1,18)=1  (2,18)=1  (17,2)=1  (18,1)=1  (18,2)=1 
   (613.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (3,3)=3  (3,6)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (4,12)=3  (4,13)=3  (4,14)=3  (5,3)=3  (5,12)=3  (6,12)=3  (7,12)=3  (7,13)=3  (7,14)=3  (9,1)=3  (9,2)=3  (10,1)=3  (10,16)=3  (10,17)=3  (11,1)=3  (11,17)=3  (12,1)=3  (12,16)=3  (12,17)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (14,6)=3  (15,6)=3  (15,15)=3  (15,16)=3  (15,17)=3  (16,15)=3  (16,17)=3  (17,2)=3  (17,15)=3  (17,17)=3  (18,1)=3  (18,2)=3  (18,17)=3 
! size mismatch, 10x10 instead of 19x21

TRAIN e509e548.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,11) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (1,2)=3  (1,6)=3  (1,7)=3  (1,8)=3  (1,9)=3  (2,2)=3  (2,6)=3  (2,9)=3  (3,6)=3  (3,9)=3  (4,6)=3  (4,9)=3  (6,0)=3  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (7,2)=3  (8,2)=3  (9,2)=3  (9,3)=3  (9,4)=3 
   (0.0 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (1,5) and color red and mask Full at (6,0)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (1,3) and color red and mask Full at (9,2)
  _01111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
  _011111: a rectangle with size (4,1) and color red and mask Full at (6,2)
diff: 
delta:
   (229.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (1,2)=3  (1,6)=3  (1,7)=3  (1,8)=3  (1,9)=3  (2,2)=3  (2,6)=3  (2,9)=3  (3,6)=3  (3,9)=3  (4,6)=3  (4,9)=3  (6,0)=3  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (7,2)=3  (8,2)=3  (9,2)=3  (9,3)=3  (9,4)=3 
! size mismatch, 10x10 instead of 10x11

TRAIN e509e548.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (14,12) and color black and layers
diff: 
delta: (1,1)=3  (1,9)=3  (2,1)=3  (2,9)=3  (2,10)=3  (2,11)=3  (3,1)=3  (3,5)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (7,7)=3  (8,5)=3  (8,6)=3  (8,7)=3  (9,5)=3  (9,7)=3  (10,5)=3  (10,7)=3  (11,0)=3  (11,1)=3  (11,2)=3  (12,2)=3  (12,9)=3  (12,11)=3  (13,9)=3  (13,10)=3  (13,11)=3 
   (0.0 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color red and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color pink and mask x.x|xxx at (12,9)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (1,9)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (11,0)
  _011111: a rectangle with size (2,1) and color blue and mask Full at (11,2)
diff: 
delta:
   (272.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
diff: 
delta: (1,1)=3  (1,9)=3  (2,1)=3  (2,9)=3  (2,10)=3  (2,11)=3  (3,1)=3  (3,5)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,5)=3  (7,7)=3  (8,5)=3  (8,6)=3  (8,7)=3  (9,5)=3  (9,7)=3  (10,5)=3  (10,7)=3  (11,0)=3  (11,1)=3  (11,2)=3  (12,2)=3  (12,9)=3  (12,11)=3  (13,9)=3  (13,10)=3  (13,11)=3 
! size mismatch, 10x10 instead of 14x12

TRAIN e509e548.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
diff: 
delta: (0,1)=3  (0,3)=3  (0,12)=3  (1,1)=3  (1,3)=3  (1,12)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,12)=3  (3,14)=3  (4,6)=3  (4,7)=3  (4,14)=3  (5,6)=3  (6,3)=3  (6,4)=3  (6,5)=3  (6,6)=3  (6,7)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,12)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (10,11)=3  (11,1)=3  (11,2)=3  (11,3)=3  (11,4)=3  (11,5)=3  (11,6)=3  (11,11)=3  (12,6)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,6)=3 
! size mismatch, 10x10 instead of 14x16

TEST e509e548.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.5 sec (60.5 sec/task)
bits-train-error = 11147.9 bits (11147.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-36] Checking task e50d258f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 61322.8 = 61335.4
DL output with Mo: L = 12.6 + 6064.5 = 6077.1
DL input+output M: L = 25.2 + 67387.3 = 67412.5

# learning a model for train pairs
2.000	
1.524	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.377	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.053	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.021	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.982	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos) + (1, 2)
0.956	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.940	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.i / '2
0.900	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos) + (1, 1)
0.897	IN  SPE ^.layer_01.shape.mask = Full
0.886	OUT SPE ^.layer_011.pos.i = max(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_011.pos.i - ^.layer_01.pos.i
0.513	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at projI(^.layer_0.pos) + (1, 1)
  _01: a point with color ? at projI(^.layer_01.pos) + (1, 2)
  _011: a point with color ^.layer_011.shape.color at (max(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 22989.7 = 23080.0
DL output with Mo: L = 196.5 + 2902.1 = 3098.7
DL input+output M: L = 286.8 + 25891.8 = 26178.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at projI(^.layer_0.pos) + (1, 1)
  _01: a point with color ? at projI(^.layer_01.pos) + (1, 2)
  _011: a point with color ^.layer_011.shape.color at (max(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 83.4 = 173.7
DL output with Mo: L = 196.5 + 2902.1 = 3098.7
DL input+output M: L = 286.8 + 2985.5 = 3272.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
   (3.2 bits)
data: a background with size (5,4) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _01: a point with color blue at (3,2)
  _011: a point with color red at (3,1)
diff: 
delta:
   (47.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _011: a rectangle with size (1,1) and color blue and mask Full at (2,2)
diff: 
delta: (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x10 instead of 5x4
>> Trial 2
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (2,2)=1  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x10 instead of 5x4
>> Trial 3
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x10 instead of 5x4

TRAIN e50d258f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
   (3.2 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (1,1)
  _01: a point with color cyan at (2,2)
  _011: a point with color cyan at (0,0)
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask ...x|xx.x|.xx. at (5,5)
  _01: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _011: a rectangle with size (5,4) and color blue and mask Full at (0,0)
diff: 
delta: (0,3)=8  (1,1)=8  (1,5)=1  (1,8)=1  (2,0)=8  (2,1)=2  (2,2)=8  (2,6)=1  (2,8)=2  (3,3)=8  (3,9)=1  (4,0)=8  (4,2)=8  (4,3)=8  (4,6)=1  (4,7)=2  (4,9)=2  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _01: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN e50d258f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (4,8)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,6)=1  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1  (7,6)=1 
   (2.0 bits)
data: a background with size (6,4) and color cyan and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (4,1)
  _01: a point with color blue at (1,2)
  _011: a point with color blue at (2,0)
diff: 
delta: (0,0)=2  (3,3)=2  (4,3)=1  (5,1)=1 
   (191.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (3,6)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (4,8)=1  (5,1)=1  (5,7)=2  (6,9)=1  (8,8)=1 
! size mismatch, 10x10 instead of 6x4
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (4,8)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,6)=1  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1  (7,6)=1 
! size mismatch, 10x10 instead of 6x4
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xxx|xx.x|.xxx|xxx.|x.x.|x.xx at (0,0)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (1,2)=1  (2,0)=1  (3,3)=2  (3,6)=1  (3,9)=2  (4,1)=2  (4,3)=1  (4,8)=1  (5,1)=1  (5,7)=2  (6,9)=1  (7,6)=1  (8,8)=1 
! size mismatch, 10x10 instead of 6x4

TRAIN e50d258f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (6,3) and color cyan and mask Full at (1,6)
  _011: a rectangle with size (3,4) and color cyan and mask ..x.|xx.x|..x. at (6,1)
diff: 
delta: (0,0)=2  (1,2)=1  (1,6)=2  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,6)=2  (3,7)=1  (4,8)=2  (5,6)=2  (5,8)=1  (6,1)=1  (6,2)=2  (6,4)=2  (6,6)=1  (7,3)=1  (8,1)=1  (8,2)=2  (8,4)=1 
! size mismatch, 10x10 instead of 6x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask Full at (1,6)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (3,4) and color cyan and mask ..x.|xx.x|..x. at (6,1)
diff: 
delta: (0,0)=2  (1,2)=1  (1,6)=2  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,6)=2  (3,7)=1  (4,8)=2  (5,6)=2  (5,8)=1  (6,1)=1  (6,2)=2  (6,4)=2  (6,6)=1  (7,3)=1  (8,1)=1  (8,2)=2  (8,4)=1 
! size mismatch, 10x10 instead of 6x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xx.x|..x. at (6,1)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (6,3) and color cyan and mask Full at (1,6)
diff: 
delta: (0,0)=2  (1,2)=1  (1,6)=2  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,6)=2  (3,7)=1  (4,8)=2  (5,6)=2  (5,8)=1  (6,1)=1  (6,2)=2  (6,4)=2  (6,6)=1  (7,3)=1  (8,1)=1  (8,2)=2  (8,4)=1 
! size mismatch, 10x10 instead of 6x3

TEST e50d258f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.6 sec (14.6 sec/task)
bits-train-error = 2902.1 bits (2902.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-35] Checking task e6721834.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 180008.0 = 180020.6
DL output with Mo: L = 12.6 + 29800.5 = 29813.1
DL input+output M: L = 25.2 + 209808.5 = 209833.7

# learning a model for train pairs
2.000	
1.241	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.522	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.463	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.406	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.336	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.314	OUT ADD ^.layer_0110 = ^.layer_01.shape at (?,?)
0.287	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.266	OUT SPE ^.size = ^.layer_0.shape.size
0.254	OUT ADD ^.layer_00 = ^.layer_0111.shape at (?,?)
0.244	OUT SPE ^.layer_01.shape.size = '(1, 1)
0.238	OUT SPE ^.color = ^.color
0.232	OUT SPE ^.layer_01.shape.color = red
0.226	OUT SPE ^.layer_011.shape.size.j = min(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i) + 2
0.221	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.j - 2
0.216	OUT SPE ^.layer_00.pos.i = bottom(^.layer_0111) - 2
0.212	OUT SPE ^.layer_0.pos.j = right(^.layer_0111) - 2
0.207	OUT SPE ^.layer_0.shape.size.i = ^.layer_0111.shape.size.i
0.203	OUT SPE ^.layer_0110.pos.i = span(^.layer_0.pos.i, ^.layer_01.pos.i) - ^.layer_0111.shape.size.j
0.199	OUT SPE ^.layer_011.pos.j = ^.layer_0111.pos.i + ^.layer_0111.pos.j - ^.layer_0.pos.j
0.196	OUT SPE ^.layer_0.shape.mask = Full
0.193	OUT SPE ^.layer_01.shape.mask = Full
0.189	OUT SPE ^.layer_011.shape.mask = Full
0.186	OUT SPE ^.layer_0.pos.i = min(^.layer_01.pos.j, ^.layer_0110.pos.j) + ^.layer_0111.pos.i - ^.layer_0.pos.i
0.184	OUT SPE ^.layer_01.pos.j = min(^.layer_01.pos.i, ^.layer_0110.pos.i) + min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.181	OUT SPE ^.layer_0.shape.size.j = min(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i)
0.070	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.color and layers
  _00: ^.layer_0111.shape at (bottom(^.layer_0111) - 2,?)
  _0: a rectangle with size (^.layer_0111.shape.size.i,min(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i)) and color ? and mask Full at (min(^.layer_01.pos.j, ^.layer_0110.pos.j) + ^.layer_0111.pos.i - ^.layer_0.pos.i,right(^.layer_0111) - 2)
  _01: a rectangle with size '(1, 1) and color red and mask Full at (?,min(^.layer_01.pos.i, ^.layer_0110.pos.i) + min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j))
  _0110: ^.layer_01.shape at (span(^.layer_0.pos.i, ^.layer_01.pos.i) - ^.layer_0111.shape.size.j,?)
  _011: a rectangle with size (?,min(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i) + 2) and color ? and mask Full at (^.layer_011.pos.j - 2,^.layer_0111.pos.i + ^.layer_0111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 20065.8 = 20195.4
DL output with Mo: L = 639.8 + 1415.6 = 2055.4
DL input+output M: L = 769.4 + 21481.4 = 22250.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.color and layers
  _00: ^.layer_0111.shape at (bottom(^.layer_0111) - 2,?)
  _0: a rectangle with size (^.layer_0111.shape.size.i,min(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i)) and color ? and mask Full at (min(^.layer_01.pos.j, ^.layer_0110.pos.j) + ^.layer_0111.pos.i - ^.layer_0.pos.i,right(^.layer_0111) - 2)
  _01: a rectangle with size '(1, 1) and color red and mask Full at (?,min(^.layer_01.pos.i, ^.layer_0110.pos.i) + min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j))
  _0110: ^.layer_01.shape at (span(^.layer_0.pos.i, ^.layer_01.pos.i) - ^.layer_0111.shape.size.j,?)
  _011: a rectangle with size (?,min(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i) + 2) and color ? and mask Full at (^.layer_011.pos.j - 2,^.layer_0111.pos.i + ^.layer_0111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 51.7 = 181.3
DL output with Mo: L = 639.8 + 1415.6 = 2055.4
DL input+output M: L = 769.4 + 1467.3 = 2236.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (4,2)
  _0110: a point with color red at (4,5)
  _011: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _0111: a rectangle with size (5,4) and color blue and mask xx.x|x.xx|xxxx|x.xx|xx.x at (7,2)
diff: 
delta: (5,3)=2  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
   (2.0 bits)
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (5,4) and color blue and mask xx.x|x.xx|xxxx|x.xx|xx.x at (9,2)
  _0: a rectangle with size (5,2) and color green and mask Full at (9,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,11)
  _0110: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (1,8)
  _011: a rectangle with size (1,5) and color red and mask Full at (2,9)
diff: 
delta:
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _0110: a point with color red at (4,5)
  _011: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (4,2)
  _0111: a rectangle with size (5,4) and color blue and mask xx.x|x.xx|xxxx|x.xx|xx.x at (7,2)
diff: 
delta: (5,3)=2  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 76 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (4,2)
  _0110: a point with color red at (4,5)
  _011: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _0111: a rectangle with size (5,4) and color blue and mask xx.x|x.xx|xxxx|x.xx|xx.x at (7,2)
diff: 
delta: (5,3)=2  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _0110: a point with color blue at (4,3)
  _011: a rectangle with size (5,4) and color blue and mask Full at (7,2)
  _0111: a rectangle with size (2,7) and color blue and mask Full at (4,2)
diff: 
delta: (4,5)=2  (4,7)=1  (5,3)=2  (5,5)=1  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 72 wrong pixels (generated / expected)

TRAIN e6721834.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,20) and color blue and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _01: a rectangle with size (3,4) and color green and mask Full at (8,4)
  _0110: a point with color cyan at (1,15)
  _011: a rectangle with size (4,3) and color green and mask xxx|.x.|xxx|xxx at (2,2)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,2)
diff: 
delta: (1,17)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
   (0.0 bits)
data: a background with size (11,10) and color blue and layers
  _00: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
  _0: a rectangle with size (1,1) and color red and mask Full at (7,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,4)
  _0110: a rectangle with size (3,4) and color green and mask Full at (6,1)
  _011: a rectangle with size (4,3) and color green and mask Full at (0,5)
diff: 
delta: (1,6)=3 
   (75.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color blue and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _01: a rectangle with size (3,4) and color green and mask Full at (8,4)
  _0110: a point with color cyan at (1,15)
  _011: a rectangle with size (4,3) and color green and mask xxx|.x.|xxx|xxx at (2,2)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,2)
diff: 
delta: (1,17)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color blue and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _01: a rectangle with size (3,4) and color green and mask xxx.|x.xx|xxxx at (8,4)
  _0110: a point with color cyan at (1,15)
  _011: a rectangle with size (4,3) and color green and mask xxx|.x.|xxx|xxx at (2,2)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,2)
diff: 
delta: (1,17)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 25 wrong pixels (generated / expected)

TRAIN e6721834.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask Full at (1,9)
  _0110: a point with color red at (2,4)
  _011: a rectangle with size (2,3) and color blue and mask xx.|xxx at (7,10)
  _0111: a rectangle with size (1,1) and color red and mask Full at (4,4)
diff: 
delta: (2,9)=2  (4,9)=2  (7,12)=6  (8,2)=6 
   (3.2 bits)
data: a background with size (10,8) and color yellow and layers
  _00: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _0: a rectangle with size (1,1) and color pink and mask Full at (8,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,4)
  _0110: a rectangle with size (4,3) and color blue and mask Full at (1,4)
  _011: a rectangle with size (2,3) and color blue and mask Full at (8,0)
diff: 
delta:
   (32.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask xxx|.xx|xxx|.xx at (1,9)
  _0110: a point with color red at (2,4)
  _011: a rectangle with size (2,3) and color blue and mask Full at (7,10)
  _0111: a rectangle with size (3,1) and color red and mask Full at (2,9)
diff: 
delta: (4,4)=2  (7,12)=6  (8,2)=6 
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask Full at (1,9)
  _0110: a point with color red at (2,4)
  _011: a rectangle with size (2,3) and color blue and mask xx.|xxx at (7,10)
  _0111: a rectangle with size (1,1) and color red and mask Full at (4,4)
diff: 
delta: (2,9)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 31 wrong pixels (generated / expected)

TRAIN e6721834.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,12) and color yellow and layers
  _0: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx.....xxxx|xxx.....xxxx|xxx.....xxxx|xxxxxxxxxxxx|x..xxxxxxxxx|x..xxx.....x|x..xxx.....x|x..xxx.....x|xxxxxxxxxxxx at (12,0)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (15,3)
  _0110: a point with color blue at (3,7)
  _011: a rectangle with size (3,5) and color cyan and mask Full at (20,6)
  _0111: a rectangle with size (4,2) and color cyan and mask Full at (19,1)
diff: 
delta: (4,8)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (20,1)=1  (20,8)=1  (21,6)=1  (22,8)=1 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,12) and color yellow and layers
  _0: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx.....xxxx|xxx.....xxxx|xxx.....xxxx|xxxxxxxxxxxx|x..xxxxxxxxx|x..xxx.....x|x..xxx.....x|x..xxx.....x|xxxxxxxxxxxx at (12,0)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (15,3)
  _0110: a point with color blue at (4,8)
  _011: a rectangle with size (3,5) and color cyan and mask Full at (20,6)
  _0111: a rectangle with size (4,2) and color cyan and mask Full at (19,1)
diff: 
delta: (3,7)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (20,1)=1  (20,8)=1  (21,6)=1  (22,8)=1 
! 46 wrong pixels (generated / expected)

TEST e6721834.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.0 sec (30.0 sec/task)
bits-train-error = 1415.6 bits (1415.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-34] Checking task e73095fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 76383.7 = 76396.3
DL output with Mo: L = 12.6 + 95220.9 = 95233.5
DL input+output M: L = 25.2 + 171604.6 = 171629.8

# learning a model for train pairs
2.000	
1.107	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.315	OUT ADD ^.layer_0 = ^.layer_0
0.213	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.170	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.163	OUT SPE ^.size = ^.size
0.157	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.154	IN  SPE ^.layer_0.shape.color = grey
0.152	OUT SPE ^.layer_01.shape.size.i = 3
0.151	OUT SPE ^.layer_01.shape.color = yellow
0.149	OUT SPE ^.layer_011.shape.color = yellow
0.148	OUT SPE ^.layer_00.shape.mask = Full
0.147	OUT SPE ^.layer_01.shape.mask = Full
0.146	OUT SPE ^.layer_011.shape.mask = Full
0.145	IN  SPE ^.color = black
0.144	OUT SPE ^.color = black
0.041	
0.041	IN  GEN ^.layer_0.shape.color = ?
0.041	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (3,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 7877.5 = 7919.8
DL output with Mo: L = 104.4 + 3749.6 = 3854.0
DL input+output M: L = 146.7 + 11627.1 = 11773.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (3,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 104.4 + 3749.6 = 3854.0
DL input+output M: L = 143.2 + 3749.6 = 3892.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,19) and color black and layers
  _00: a rectangle with size (5,2) and color yellow and mask Full at (2,6)
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (1,18)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (6,12)
diff: 
delta: (2,0)=4 
   (110.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN e73095fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (13,1) and color grey and mask Full at (0,5)
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,4)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (5,15)
diff: 
delta: (5,5)=4  (6,5)=4  (7,5)=4 
   (191.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN e73095fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (3,3) and color yellow and mask Full at (2,12)
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
  _01: a rectangle with size (3,2) and color yellow and mask Full at (5,4)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (11,11)
diff: 
delta:
   (72.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN e73095fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (16,18) and color grey and mask .......x..........|.......x..........|xxx....x..........|..xxxxxxxxxxxxxxxx|xxx....x......x...|.......x......x...|.......x......x...|.......x.....xxxx.|.....xxxxx...x..x.|xxxxxx...xxxxx..xx|.x...x...x...x..x.|.x...xxxxx...xxxx.|.x.....x..........|xxx....x..........|x.x....x..........|xxx....x.......... at (0,0)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST e73095fd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.1 sec (5.1 sec/task)
bits-train-error = 3749.6 bits (3749.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-33] Checking task e76a88a6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24074.7 = 24087.3
DL output with Mo: L = 12.6 + 24074.7 = 24087.3
DL input+output M: L = 25.2 + 48149.4 = 48174.7

# learning a model for train pairs
2.000	
1.704	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.407	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.264	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.094	OUT ADD ^.layer_0 = ^.layer_011
0.934	OUT ADD ^.layer_01 = ^.layer_011.shape at (?,?)
0.774	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
0.666	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.526	OUT ADD ^.layer_0111 = ^.layer_0111
0.396	OUT ADD ^.layer_01111 = ^.layer_0111.shape at (?,?)
0.264	OUT ADD ^.layer_01110 = ^.layer_0111.shape at (?,?)
0.248	OUT SPE ^.size = ^.size
0.239	OUT SPE ^.layer_01111.pos = ^.layer_01.pos
0.229	OUT SPE ^.layer_01110.pos = ^.layer_0.pos
0.220	OUT SPE ^.layer_01.pos = ^.layer_01.pos + (1, 0)
0.211	OUT SPE ^.layer_011.pos = ^.layer_0.pos + (1, 0)
0.207	IN  SPE ^.layer_0.shape.color = grey
0.202	IN  SPE ^.layer_01.shape.color = grey
0.200	IN  SPE ^.layer_0.shape.mask = Full
0.197	IN  SPE ^.layer_01.shape.mask = Full
0.194	IN  SPE ^.layer_0111.shape.mask = Full
0.192	IN  SPE ^.color = black
0.190	OUT SPE ^.color = black
0.059	
0.059	IN  GEN ^.layer_01.shape.color = ?
0.058	IN  GEN ^.layer_0.shape.color = ?
0.058	IN  GEN ^.layer_0111.shape.mask = ?
0.058	IN  GEN ^.layer_01.shape.mask = ?
0.058	IN  GEN ^.layer_0.shape.mask = ?
0.058	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_011
  _01: ^.layer_011.shape at ^.layer_01.pos + (1, 0)
  _011: ^.layer_011.shape at ^.layer_0.pos + (1, 0)
  _01110: ^.layer_0111.shape at ^.layer_0.pos
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 123.9 + 3165.3 = 3289.2
DL output with Mo: L = 136.1 + 1155.6 = 1291.6
DL input+output M: L = 260.0 + 4320.9 = 4580.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_011
  _01: ^.layer_011.shape at ^.layer_01.pos + (1, 0)
  _011: ^.layer_011.shape at ^.layer_0.pos + (1, 0)
  _01110: ^.layer_0111.shape at ^.layer_0.pos
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 136.1 + 1155.6 = 1291.6
DL input+output M: L = 250.2 + 1155.6 = 1405.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (4,6)
  _01: a rectangle with size (3,3) and color grey and mask Full at (7,2)
  _011: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (8,2)
  _011: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (5,6)
  _01110: a rectangle with size (2,3) and color red and mask Full at (4,6)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
  _01111: a rectangle with size (2,3) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (4,6)
  _01: a rectangle with size (3,3) and color grey and mask Full at (7,2)
  _011: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN e76a88a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _011: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (6,4)
  _011: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (1,6)
  _01110: a rectangle with size (2,4) and color pink and mask Full at (0,6)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
  _01111: a rectangle with size (2,4) and color pink and mask Full at (5,4)
diff: 
delta: (2,6)=6  (3,1)=6  (7,4)=6 
   (115.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _011: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
! 38 wrong pixels (generated / expected)

TRAIN e76a88a6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask Full at (1,6)
  _01: a rectangle with size (4,3) and color grey and mask Full at (5,2)
  _011: a rectangle with size (4,3) and color grey and mask Full at (6,7)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (0,1)
diff: 
delta: (1,1)=1  (2,1)=1  (2,3)=1  (3,1)=1  (3,2)=1  (3,3)=1 
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask Full at (1,6)
  _01: a rectangle with size (4,3) and color grey and mask Full at (6,7)
  _011: a rectangle with size (4,3) and color grey and mask Full at (5,2)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (0,1)
diff: 
delta: (1,1)=1  (2,1)=1  (2,3)=1  (3,1)=1  (3,2)=1  (3,3)=1 
! 39 wrong pixels (generated / expected)

TEST e76a88a6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 1155.6 bits (1155.6 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-32] Checking task e8593010.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30156.5 = 30169.1
DL output with Mo: L = 12.6 + 30156.5 = 30169.1
DL input+output M: L = 25.2 + 60313.1 = 60338.3

# learning a model for train pairs
2.000	
1.150	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.029	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.953	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	OUT ADD ^.layer_00 = ^.layer_0
0.796	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.718	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.628	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.584	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.564	OUT SPE ^.size = ^.size
0.555	OUT SPE ^.layer_0111111.shape.size = '(2, 1)
0.550	IN  SPE ^.layer_0.shape.color = grey
0.544	OUT SPE ^.layer_0111111.shape.color = red
0.539	OUT SPE ^.layer_01111.pos.i = '0
0.536	OUT SPE ^.layer_0.shape.mask = Full
0.532	OUT SPE ^.layer_01.shape.mask = Full
0.527	OUT SPE ^.layer_01.shape.size.i = 2
0.524	OUT SPE ^.layer_011.shape.mask = Full
0.521	OUT SPE ^.layer_0111.shape.mask = Full
0.517	OUT SPE ^.layer_01111.shape.size.i = 1
0.512	OUT SPE ^.layer_011.shape.color = blue
0.508	OUT SPE ^.layer_01111.shape.mask = Full
0.505	OUT SPE ^.layer_011111.shape.mask = Full
0.502	OUT SPE ^.layer_0111111.shape.mask = Full
0.499	OUT SPE ^.layer_011111.shape.size.j = 1
0.495	OUT SPE ^.layer_0111.shape.size.j = 1
0.490	OUT SPE ^.layer_0111.shape.color = red
0.484	OUT SPE ^.layer_011111.shape.color = green
0.479	OUT SPE ^.layer_0111.pos.i = 2
0.477	OUT SPE ^.color = black
0.474	IN  SPE ^.color = black
0.333	
0.333	IN  GEN ^.layer_0.shape.color = ?
0.333	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (2,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,1) and color red and mask Full at (2,?)
  _01111: a rectangle with size (1,?) and color ? and mask Full at ('0,?)
  _011111: a rectangle with size (?,1) and color green and mask Full at (?,?)
  _0111111: a rectangle with size '(2, 1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 4245.3 = 4287.6
DL output with Mo: L = 235.2 + 9779.2 = 10014.4
DL input+output M: L = 277.5 + 14024.6 = 14302.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (2,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,1) and color red and mask Full at (2,?)
  _01111: a rectangle with size (1,?) and color ? and mask Full at ('0,?)
  _011111: a rectangle with size (?,1) and color green and mask Full at (?,?)
  _0111111: a rectangle with size '(2, 1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 235.2 + 9779.2 = 10014.4
DL input+output M: L = 274.0 + 9779.2 = 10053.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
  _0: a rectangle with size (3,2) and color red and mask Full at (4,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (2,6)
  _0111: a rectangle with size (8,1) and color red and mask Full at (2,9)
  _01111: a rectangle with size (1,5) and color green and mask Full at (0,4)
  _011111: a rectangle with size (3,1) and color green and mask Full at (3,2)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (5,0)
diff: 
delta: (5,7)=3  (9,0)=3  (9,7)=3 
   (251.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN e8593010.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
  _0: a rectangle with size (6,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (6,6)
  _011: a rectangle with size (2,2) and color blue and mask Full at (8,0)
  _0111: a rectangle with size (2,1) and color red and mask Full at (2,5)
  _01111: a rectangle with size (1,2) and color red and mask Full at (0,5)
  _011111: a rectangle with size (8,1) and color green and mask Full at (1,9)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (5,4)
diff: 
delta: (1,3)=3  (2,7)=2  (2,8)=2  (3,1)=3  (4,8)=3  (8,6)=3  (9,8)=3 
   (400.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN e8593010.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
  _0: a rectangle with size (4,3) and color blue and mask Full at (1,2)
  _01: a rectangle with size (2,3) and color red and mask Full at (4,7)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,8)
  _0111: a rectangle with size (2,1) and color red and mask Full at (2,1)
  _01111: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011111: a rectangle with size (7,1) and color green and mask Full at (2,5)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (5,2)
diff: 
delta: (0,4)=3  (7,3)=3  (8,1)=3  (8,7)=3  (9,2)=3 
   (325.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN e8593010.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxxx..xx|xxx.xx.x.x|xx.xxxxx.x|x..xxxxxxx|.xxxxx.xxx|.xx.xx.x..|xx.xxxxx.x|xx.xxxxxx.|..xxxx.xxx|xxxx.x..x. at (0,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST e8593010.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.3 sec (15.3 sec/task)
bits-train-error = 9779.2 bits (9779.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-31] Checking task e8dc4411.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12161.1 = 12173.7
DL output with Mo: L = 12.6 + 27469.3 = 27481.9
DL input+output M: L = 25.2 + 39630.3 = 39655.6

# learning a model for train pairs
2.000	
1.292	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.777	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.410	OUT ADD ^.layer_01 = ^.layer_0
0.356	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.333	OUT SPE ^.size = ^.size
0.319	IN  SPE ^.layer_0.shape.color = black
0.309	OUT SPE ^.color = ^.color
0.304	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.083	
0.083	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 58.3 + 2684.8 = 2743.1
DL output with Mo: L = 58.3 + 2090.5 = 2148.8
DL input+output M: L = 116.6 + 4775.3 = 4891.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 0.0 = 54.9
DL output with Mo: L = 58.3 + 2090.5 = 2148.8
DL input+output M: L = 113.3 + 2090.5 = 2203.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (3,3) and color black and mask Odd Checkboard at (3,3)
  _01: a point with color red at (5,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (7,8) and color red and mask .x......|x.x.....|.x.x....|..x.x...|...x.x..|....x.x.|.....x.x at (5,5)
  _01: a rectangle with size (3,3) and color black and mask Odd Checkboard at (3,3)
diff: 
delta:
   (81.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (3,3) and color black and mask Odd Checkboard at (3,3)
  _01: a point with color red at (5,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxx.xxxxxxxxx|xxx.x.xxxxxxxx|xxxx.x.xxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (0,0)
  _01: a point with color red at (5,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN e8dc4411.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask +-cross at (5,5)
  _01: a point with color green at (7,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (6,6) and color green and mask ....x.|...xxx|..x.x.|.xxx..|x.x...|xx.... at (7,0)
  _01: a rectangle with size (3,3) and color black and mask +-cross at (5,5)
diff: 
delta:
   (70.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask +-cross at (5,5)
  _01: a point with color green at (7,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (13,15) and color blue and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxx.xxxxxxxx|xxxxx...xxxxxxx|xxxx.x.xxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx at (0,0)
  _01: a point with color green at (7,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN e8dc4411.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
  _01: a point with color cyan at (4,11)
diff: 
delta:
   (0.0 bits)
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (0,11)
  _01: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
diff: 
delta:
   (57.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
  _01: a point with color cyan at (4,11)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN e8dc4411.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color green and layers
  _0: a rectangle with size (3,3) and color black and mask Even Checkboard at (6,4)
  _01: a point with color pink at (5,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST e8dc4411.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 2090.5 bits (2090.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-30] Checking task e9614598.json: 2 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1998.6 = 2011.2
DL output with Mo: L = 12.6 + 5773.7 = 5786.3
DL input+output M: L = 25.2 + 7772.3 = 7797.5

# learning a model for train pairs
2.000	
1.482	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.277	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.064	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.932	OUT ADD ^.layer_01 = ^.layer_01
0.798	OUT ADD ^.layer_00 = ^.layer_0
0.729	OUT SPE ^.size = ^.size
0.674	IN  SPE ^.layer_0.shape.color = blue
0.620	IN  SPE ^.layer_01.shape.color = blue
0.577	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.543	OUT SPE ^.layer_0.pos = average(^.layer_0.pos, ^.layer_01.pos) - (1, 1)
0.518	OUT SPE ^.layer_0.shape.mask = +-cross
0.493	IN  SPE ^.color = black
0.474	OUT SPE ^.layer_0.shape.color = green
0.466	OUT SPE ^.color = black
0.043	
0.042	IN  GEN ^.layer_01.shape.color = ?
0.040	IN  GEN ^.layer_0.shape.color = ?
0.040	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size '(3, 3) and color green and mask +-cross at average(^.layer_0.pos, ^.layer_01.pos) - (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 52.4 + 850.1 = 902.6
DL output with Mo: L = 98.9 + 0.0 = 98.9
DL input+output M: L = 151.4 + 850.1 = 1001.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size '(3, 3) and color green and mask +-cross at average(^.layer_0.pos, ^.layer_01.pos) - (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 98.9 + 0.0 = 98.9
DL input+output M: L = 144.6 + 0.0 = 144.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (4,1)
  _0: a rectangle with size (3,3) and color green and mask +-cross at (3,3)
  _01: a point with color blue at (4,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
diff: 
delta:
correct output grid

TRAIN e9614598.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (8,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (0,3)
  _0: a rectangle with size (3,3) and color green and mask +-cross at (3,2)
  _01: a point with color blue at (8,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (8,3)
diff: 
delta:
correct output grid

TRAIN e9614598.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color blue at (3,11)
diff: 
delta:
correct output grid

TEST e9614598.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (6,3)
diff: 
delta:
correct output grid

TEST e9614598.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-29] Checking task e98196ab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 28689.3 = 28701.9
DL output with Mo: L = 12.6 + 15743.8 = 15756.4
DL input+output M: L = 25.2 + 44433.0 = 44458.3

# learning a model for train pairs
2.000	
1.604	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.527	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.487	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.448	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.410	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.372	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.334	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.295	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
1.257	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
1.225	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.166	OUT SPE ^.layer_01 = ^.layer_01
1.143	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.122	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.101	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.071	OUT SPE ^.layer_01111111 = ^.layer_01111
1.049	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
0.567	
0.567	IN  DEL ^.layer_011
0.567	IN  DEL ^.layer_011110
0.565	IN  DEL ^.layer_0111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 13847.5 = 13983.2
DL output with Mo: L = 129.9 + 8728.4 = 8858.3
DL input+output M: L = 265.6 + 22575.9 = 22841.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 0.0 = 80.0
DL output with Mo: L = 129.9 + 8728.4 = 8858.3
DL input+output M: L = 209.9 + 8728.4 = 8938.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _01111: a point with color cyan at (2,3)
diff: 
delta: (2,7)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
   (0.0 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,4)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _011: a point with color blue at (1,6)
  _0111: a point with color cyan at (2,7)
  _01111: a point with color blue at (3,2)
  _011111: a point with color blue at (3,8)
  _0111111: a point with color blue at (4,0)
  _01111111: a point with color cyan at (2,3)
diff: 
delta: (4,1)=8  (4,9)=8  (4,10)=1 
   (240.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _01111: a point with color cyan at (2,3)
diff: 
delta: (2,7)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
! size mismatch, 10x10 instead of 5x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _01111: a point with color cyan at (2,7)
diff: 
delta: (2,3)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _01111: a point with color green at (0,5)
diff: 
delta: (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
   (0.0 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,3) and color orange and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _011: a point with color green at (0,9)
  _0111: a point with color orange at (0,10)
  _01111: a point with color orange at (1,0)
  _011111: a point with color orange at (1,8)
  _0111111: a point with color green at (2,8)
  _01111111: a point with color green at (0,5)
diff: 
delta: (2,3)=3  (4,0)=7# (4,1)=3  (4,6)=7# (4,10)=7#
   (317.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _01111: a point with color green at (0,5)
diff: 
delta: (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
! size mismatch, 10x10 instead of 5x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _01111: a point with color green at (0,9)
diff: 
delta: (0,5)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _01111: a point with color blue at (1,1)
diff: 
delta: (1,3)=1  (1,4)=1  (1,9)=1  (3,2)=1  (3,4)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
   (0.0 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,3)
  _01: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _011: a point with color red at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (0,10)
  _011111: a point with color blue at (1,9)
  _0111111: a point with color blue at (3,2)
  _01111111: a point with color blue at (1,1)
diff: 
delta: (3,4)=1  (4,0)=2  (4,4)=2  (4,8)=2  (4,10)=1 
   (315.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _01111: a point with color blue at (1,1)
diff: 
delta: (1,3)=1  (1,4)=1  (1,9)=1  (3,2)=1  (3,4)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
! size mismatch, 10x10 instead of 5x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _01111: a point with color blue at (1,3)
diff: 
delta: (1,1)=1  (1,4)=1  (1,9)=1  (3,2)=1  (3,4)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
! size mismatch, 10x10 instead of 5x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _01: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01111: a point with color blue at (1,1)
diff: 
delta: (1,3)=1  (1,4)=1  (1,9)=1  (3,2)=1  (3,4)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (3,2) and color pink and mask .x|.x|x. at (7,9)
  _01111: a point with color orange at (0,10)
diff: 
delta: (1,2)=7# (1,3)=7# (1,8)=7# (2,6)=7# (3,1)=7# (3,3)=7# (3,10)=7# (4,6)=7# (6,0)=6  (6,4)=6  (6,6)=6  (8,0)=6  (8,4)=6  (10,0)=6  (10,3)=6 
! size mismatch, 10x10 instead of 5x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01: a rectangle with size (3,2) and color pink and mask .x|.x|x. at (7,9)
  _01111: a point with color orange at (1,2)
diff: 
delta: (0,10)=7# (1,3)=7# (1,8)=7# (2,6)=7# (3,1)=7# (3,3)=7# (3,10)=7# (4,6)=7# (6,0)=6  (6,4)=6  (6,6)=6  (8,0)=6  (8,4)=6  (10,0)=6  (10,3)=6 
! size mismatch, 10x10 instead of 5x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask .x|.x|x. at (7,9)
  _01: a rectangle with size (1,11) and color grey and mask Full at (5,0)
  _01111: a point with color orange at (0,10)
diff: 
delta: (1,2)=7# (1,3)=7# (1,8)=7# (2,6)=7# (3,1)=7# (3,3)=7# (3,10)=7# (4,6)=7# (6,0)=6  (6,4)=6  (6,6)=6  (8,0)=6  (8,4)=6  (10,0)=6  (10,3)=6 
! size mismatch, 10x10 instead of 5x11

TEST e98196ab.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 8728.4 bits (8728.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-28] Checking task e9afcf9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4663.0 = 4675.6
DL output with Mo: L = 12.6 + 4663.0 = 4675.6
DL input+output M: L = 25.2 + 9326.1 = 9351.3

# learning a model for train pairs
2.000	
1.230	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.427	OUT SPE ^.size = ^.size
0.368	OUT SPE ^.layer_0.shape.size = ^.size
0.330	OUT SPE ^.color = ^.color
0.296	OUT SPE ^.layer_0.pos = '(0, 0)
0.264	OUT SPE ^.layer_0.shape.mask = Odd Checkboard
0.240	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.226	IN  SPE ^.layer_0.shape.mask = Full
0.019	
0.019	IN  GEN ^.layer_0.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask Odd Checkboard at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 39.8 + 969.3 = 1009.1
DL output with Mo: L = 48.1 + 0.0 = 48.1
DL input+output M: L = 87.9 + 969.3 = 1057.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask Odd Checkboard at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 48.1 + 0.0 = 48.1
DL input+output M: L = 86.9 + 0.0 = 86.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (2,6) and color brown and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (2,6) and color yellow and layers
  _0: a rectangle with size (1,6) and color cyan and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (2,6) and color yellow and layers
  _0: a rectangle with size (2,6) and color cyan and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color yellow and layers
  _0: a rectangle with size (1,6) and color cyan and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,6) and color pink and mask Full at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,6) and color pink and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
diff: 
delta:
correct output grid

TEST e9afcf9a.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-27] Checking task ea32f347.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22031.3 = 22043.9
DL output with Mo: L = 12.6 + 22031.3 = 22043.9
DL input+output M: L = 25.2 + 44062.5 = 44087.7

# learning a model for train pairs
2.000	
1.635	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.003	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.737	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.583	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.429	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.370	OUT SPE ^.layer_0 = coloring(^.layer_0, blue)
0.313	OUT SPE ^.layer_01 = coloring(^.layer_01, yellow)
0.258	OUT SPE ^.layer_011 = coloring(^.layer_011, red)
0.221	OUT SPE ^.size = ^.size
0.211	IN  SPE ^.layer_0.shape.color = grey
0.201	IN  SPE ^.layer_01.shape.color = grey
0.191	IN  SPE ^.layer_011.shape.color = grey
0.185	IN  SPE ^.layer_0.shape.mask = Full
0.179	IN  SPE ^.layer_01.shape.mask = Full
0.173	IN  SPE ^.layer_011.shape.mask = Full
0.169	IN  SPE ^.color = black
0.164	OUT SPE ^.color = black
0.007	
0.007	IN  GEN ^.layer_011.shape.color = ?
0.007	IN  GEN ^.layer_01.shape.color = ?
0.007	IN  GEN ^.layer_0.shape.color = ?
0.007	IN  GEN ^.layer_011.shape.mask = ?
0.007	IN  GEN ^.layer_01.shape.mask = ?
0.007	IN  GEN ^.layer_0.shape.mask = ?
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, blue)
  _01: coloring(^.layer_01, yellow)
  _011: coloring(^.layer_011, red)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 102.4 + 3463.0 = 3565.4
DL output with Mo: L = 56.4 + 0.0 = 56.4
DL input+output M: L = 158.7 + 3463.0 = 3621.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, blue)
  _01: coloring(^.layer_01, yellow)
  _011: coloring(^.layer_011, red)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 56.4 + 0.0 = 56.4
DL input+output M: L = 145.6 + 0.0 = 145.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color grey and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color grey and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,7)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (5,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,7)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (7,2)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color grey and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color grey and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color grey and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (5,4)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,3)
diff: 
delta:
correct output grid

TEST ea32f347.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-26] Checking task ea786f4a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1847.4 = 1860.0
DL output with Mo: L = 12.6 + 10076.2 = 10088.8
DL input+output M: L = 25.2 + 11923.6 = 11948.8

# learning a model for train pairs
2.000	
1.183	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.834	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.744	IN  SPE ^.layer_0.shape.color = black
0.698	OUT SPE ^.size = ^.size
0.652	OUT SPE ^.layer_0.shape.size = ^.size
0.625	OUT SPE ^.layer_0.pos = '(0, 0)
0.605	OUT SPE ^.color = ^.color
0.582	OUT SPE ^.layer_0.shape.mask = x-cross
0.566	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.022	
0.021	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask x-cross at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color black at (?,?)

DL input  with Mi: L = 32.9 + 1010.5 = 1043.3
DL output with Mo: L = 48.1 + 0.0 = 48.1
DL input+output M: L = 81.0 + 1010.5 = 1091.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask x-cross at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 48.1 + 0.0 = 48.1
DL input+output M: L = 77.7 + 0.0 = 77.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color blue and layers
  _0: a point with color black at (1,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a point with color black at (1,1)
diff: 
delta:
correct output grid

TRAIN ea786f4a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color red and layers
  _0: a point with color black at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a point with color black at (2,2)
diff: 
delta:
correct output grid

TRAIN ea786f4a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color green and layers
  _0: a point with color black at (3,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (7,7) and color black and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color green and layers
  _0: a point with color black at (3,3)
diff: 
delta:
correct output grid

TRAIN ea786f4a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color pink and layers
  _0: a point with color black at (5,5)
diff: 
delta:
correct output grid

TEST ea786f4a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-25] Checking task eb281b96.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15908.1 = 15920.7
DL output with Mo: L = 12.6 + 54101.7 = 54114.3
DL input+output M: L = 25.2 + 70009.8 = 70035.1

# learning a model for train pairs
2.000	
1.093	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.244	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.240	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.236	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.231	OUT SPE ^.size.j = ^.size.j
0.228	IN  SPE ^.color = black
0.226	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.225	OUT SPE ^.color = black
0.080	
0.080	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,^.size.j) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2319.7 = 2358.6
DL output with Mo: L = 40.0 + 4134.7 = 4174.7
DL input+output M: L = 78.9 + 6454.4 = 6533.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,^.size.j) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 40.0 + 4134.7 = 4174.7
DL input+output M: L = 78.8 + 4134.7 = 4213.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,17) and color black and layers
  _0: a rectangle with size (9,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|..x...x...x...x.. at (0,0)
diff: 
delta:
   (170.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 9x17

TRAIN eb281b96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,17) and color black and layers
  _0: a rectangle with size (4,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,17) and color black and layers
  _0: a rectangle with size (13,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|..x...x...x...x.. at (0,0)
diff: 
delta:
   (242.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,17) and color black and layers
  _0: a rectangle with size (4,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 13x17

TRAIN eb281b96.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,17) and color black and layers
  _0: a rectangle with size (5,17) and color green and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 17x17

TEST eb281b96.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 4134.7 bits (4134.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-24] Checking task eb5a1d5d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 270678.8 = 270691.4
DL output with Mo: L = 12.6 + 13460.1 = 13472.7
DL input+output M: L = 25.2 + 284138.8 = 284164.0

# learning a model for train pairs
2.000	
1.181	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.579	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.395	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.250	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.211	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, '(3, 3))
0.194	OUT SPE ^.layer_0.shape.size = span(^.layer_0.pos, ^.layer_01.pos) - ^.layer_0.pos - ^.layer_01.pos
0.179	OUT SPE ^.color = ^.color
0.167	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.158	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j / '2
0.149	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i / '2
0.149	IN  SPE ^.layer_01.shape.mask = Full
0.107	
0.107	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - ^.layer_0.pos - ^.layer_01.pos and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: scaleTo(^.layer_01.shape, '(3, 3)) at (^.layer_01.pos.i / '2,^.layer_01.pos.j / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.2 + 11474.8 = 11540.0
DL output with Mo: L = 188.0 + 1245.9 = 1434.0
DL input+output M: L = 253.2 + 12720.7 = 12974.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - ^.layer_0.pos - ^.layer_01.pos and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: scaleTo(^.layer_01.shape, '(3, 3)) at (^.layer_01.pos.i / '2,^.layer_01.pos.j / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 31.7 = 95.9
DL output with Mo: L = 188.0 + 1245.9 = 1434.0
DL input+output M: L = 252.2 + 1277.6 = 1529.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (9,6)
  _01: a rectangle with size (16,18) and color green and mask Full at (2,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color green and mask Full at (1,1)
diff: 
delta:
   (28.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (9,6)
  _01: a rectangle with size (16,18) and color green and mask Full at (2,3)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (16,18) and color green and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (2,3)
  _01: a rectangle with size (6,6) and color red and mask Full at (9,6)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN eb5a1d5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (13,15) and color pink and mask Full at (3,4)
  _01: a rectangle with size (22,25) and color grey and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (24.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (13,15) and color pink and mask Full at (3,4)
  _01: a rectangle with size (22,25) and color grey and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN eb5a1d5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,3)
  _01: a rectangle with size (9,9) and color red and mask Full at (5,5)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
   (3.2 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (5,5) and color cyan and mask Border at (1,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,2)
diff: 
delta: (3,3)=1 
   (71.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (9,9) and color red and mask Full at (5,5)
  _01: a rectangle with size (14,14) and color cyan and mask Full at (3,3)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,3)
  _01: a rectangle with size (9,9) and color red and mask Full at (5,5)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN eb5a1d5d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,27) and color red and layers
  _0: a rectangle with size (14,14) and color green and mask Full at (7,6)
  _01: a rectangle with size (19,20) and color blue and mask Full at (5,3)
diff: 
delta: (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (11,9)=8  (11,10)=8  (11,11)=8  (11,12)=2  (11,13)=2  (11,14)=2  (11,15)=2  (11,16)=8  (11,17)=8  (12,9)=8  (12,10)=8  (12,11)=8  (12,12)=2  (12,13)=2  (12,14)=2  (12,15)=2  (12,16)=8  (12,17)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (13,16)=8  (13,17)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=2  (14,16)=8  (14,17)=8  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8 
! size mismatch, 10x10 instead of 9x9

TEST eb5a1d5d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.8 sec (12.8 sec/task)
bits-train-error = 1245.9 bits (1245.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-23] Checking task ec883f72.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26732.1 = 26744.7
DL output with Mo: L = 12.6 + 31554.7 = 31567.3
DL input+output M: L = 25.2 + 58286.8 = 58312.0

# learning a model for train pairs
2.000	
1.408	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT ADD ^.layer_0 = ^.layer_0
0.607	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.357	OUT ADD ^.layer_01 = ^.layer_01
0.276	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.252	OUT SPE ^.size = ^.size
0.246	OUT SPE ^.layer_011.shape.color = ^.layer_01.shape.color
0.076	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 4554.7 = 4618.9
DL output with Mo: L = 54.3 + 2260.8 = 2315.1
DL input+output M: L = 118.5 + 6815.4 = 6934.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 54.3 + 2260.8 = 2315.1
DL input+output M: L = 118.5 + 2280.8 = 2399.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color green and mask Even Checkboard at (4,4)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN ec883f72.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (3,0)
diff: 
delta: (3,7)=6 
   (69.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta: (0,4)=6  (0,6)=8  (1,6)=8 
! 10 wrong pixels (generated / expected)

TRAIN ec883f72.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,7)
diff: 
delta: (4,0)=2 
   (70.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _01: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN ec883f72.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
diff: 
delta:
   (2.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (5,5) and color yellow and mask ....x|...x.|..x..|.x...|x.... at (0,6)
diff: 
delta:
   (55.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (7,1) and color grey and mask Full at (5,5)
diff: 
delta: (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5#
! 14 wrong pixels (generated / expected)

TRAIN ec883f72.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask x....x|x....x|x....x|x....x|xxxxxx at (0,4)
  _01: a rectangle with size (3,2) and color yellow and mask Full at (0,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (0,6)
  _01: a rectangle with size (5,6) and color green and mask x....x|x....x|x....x|x....x|xxxxxx at (0,4)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST ec883f72.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 52.9 sec (52.9 sec/task)
bits-train-error = 2260.8 bits (2260.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-22] Checking task ecdecbb3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27001.2 = 27013.8
DL output with Mo: L = 12.6 + 49211.9 = 49224.6
DL input+output M: L = 25.2 + 76213.1 = 76238.3

# learning a model for train pairs
2.000	
1.500	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.059	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.723	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.458	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.328	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.305	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.283	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.270	OUT SPE ^.size = ^.size
0.263	IN  SPE ^.layer_0.shape.color = cyan
0.257	IN  SPE ^.layer_011.shape.color = red
0.254	IN  SPE ^.layer_0.shape.mask = Full
0.250	IN  SPE ^.layer_01.shape.mask = Full
0.247	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.243	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.240	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.236	OUT SPE ^.layer_0111.shape.color = red
0.233	OUT SPE ^.layer_011.pos.j = max(^.layer_01.pos.j, ^.layer_011.pos.j)
0.230	IN  SPE ^.color = black
0.228	OUT SPE ^.layer_011.shape.size.j = 1
0.226	OUT SPE ^.layer_011.shape.mask = Full
0.224	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.i - 2
0.222	OUT SPE ^.layer_0111.shape.mask = Full
0.107	
0.107	IN  GEN ^.layer_011.shape.color = ?
0.107	IN  GEN ^.layer_0.shape.color = ?
0.107	IN  GEN ^.layer_01.shape.mask = ?
0.107	IN  GEN ^.layer_0.shape.mask = ?
0.107	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_011.pos.i - 2)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at (?,max(^.layer_01.pos.j, ^.layer_011.pos.j))
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color red at (?,?)

DL input  with Mi: L = 88.8 + 3120.0 = 3208.7
DL output with Mo: L = 171.3 + 4902.0 = 5073.3
DL input+output M: L = 260.1 + 8022.0 = 8282.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_011.pos.i - 2)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at (?,max(^.layer_01.pos.j, ^.layer_011.pos.j))
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 20.0 = 100.0
DL output with Mo: L = 171.3 + 4902.0 = 5073.3
DL input+output M: L = 251.3 + 4922.0 = 5173.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,8)
  _011: a point with color red at (2,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,13) and color cyan and mask .xxx...xxx...|xx.xxxxx.xxxx|.xxx...xxx... at (5,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (3,1) and color red and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color red and mask Full at (6,8)
diff: 
delta:
   (128.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a point with color red at (10,8)
diff: 
delta:
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,8)
  _011: a point with color red at (2,2)
diff: 
delta:
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _011: a point with color red at (10,8)
diff: 
delta:
! 39 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
  _011: a point with color red at (4,8)
diff: 
delta:
   (0.0 bits)
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,3) and color cyan and mask .x.|.x.|.x.|xxx|x.x|xxx|.x.|.x.|.x.|.x.|.x.|.x.|.x. at (0,2)
  _01: a rectangle with size (13,3) and color cyan and mask .x.|.x.|.x.|xxx|x.x|xxx|.x.|.x.|.x.|.x.|.x.|.x.|.x. at (0,13)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,14)
  _0111: a rectangle with size (1,10) and color red and mask Full at (4,3)
diff: 
delta:
   (182.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
  _011: a point with color red at (4,8)
diff: 
delta:
! 50 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _011: a point with color red at (4,8)
diff: 
delta:
! 52 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
  _011: a point with color red at (2,8)
diff: 
delta: (10,4)=2 
   (0.0 bits)
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (3,12) and color cyan and mask ...xxx.xxx..|xxxx.xxx.xxx|...xxx.xxx.. at (6,0)
  _01: a rectangle with size (3,12) and color cyan and mask ...xxx......|xxxx.xxxxxxx|...xxx...... at (12,0)
  _011: a rectangle with size (6,1) and color red and mask Full at (2,8)
  _0111: a rectangle with size (7,1) and color red and mask Full at (7,4)
diff: 
delta:
   (179.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
  _011: a point with color red at (2,8)
diff: 
delta: (10,4)=2 
! 55 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
  _011: a point with color red at (10,4)
diff: 
delta: (2,8)=2 
! 59 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (17,1) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (17,1) and color cyan and mask Full at (0,12)
  _011: a point with color red at (1,15)
diff: 
delta: (2,1)=2  (8,8)=2  (14,16)=2 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (17,1) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (17,1) and color cyan and mask Full at (0,12)
  _011: a point with color red at (2,1)
diff: 
delta: (1,15)=2  (8,8)=2  (14,16)=2 
! 79 wrong pixels (generated / expected)

TEST ecdecbb3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.0 sec (58.0 sec/task)
bits-train-error = 4902.0 bits (4902.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-21] Checking task ed36ccf7.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5768.6 = 5781.2
DL output with Mo: L = 12.6 + 5768.6 = 5781.2
DL input+output M: L = 25.2 + 11537.1 = 11562.3

# learning a model for train pairs
2.000	
1.003	OUT SPE ^ = applySym(rotate270, ^.grid)
0.379	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.340	IN  SPE ^.layer_0.shape.color = black
0.010	
0.005	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
applySym(rotate270, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 1911.2 = 1953.3
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 57.0 + 1911.2 = 1968.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
applySym(rotate270, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.9 + 0.0 = 14.9
DL input+output M: L = 27.5 + 0.0 = 27.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,1)=0  (0,2)=0 
   (0.0 bits)
data: 
0 9#9#
0 9#9#
9#9#9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,1)=0  (0,2)=0 
correct output grid

TRAIN ed36ccf7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (3,3) and color pink and layers
diff: 
delta: (1,0)=0  (1,1)=0  (1,2)=0  (2,2)=0 
   (0.0 bits)
data: 
6 0 0 
6 0 6 
6 0 6 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
diff: 
delta: (1,0)=0  (1,1)=0  (1,2)=0  (2,2)=0 
correct output grid

TRAIN ed36ccf7.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=0  (0,1)=0  (1,0)=0  (1,1)=0 
   (0.0 bits)
data: 
9#9#9#
0 0 9#
0 0 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
diff: 
delta: (0,0)=0  (0,1)=0  (1,0)=0  (1,1)=0 
correct output grid

TRAIN ed36ccf7.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:

data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,1)=0  (2,0)=0 
   (0.0 bits)
data: 
2 2 2 
0 0 2 
2 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
diff: 
delta: (0,1)=0  (1,0)=0  (1,1)=0  (2,0)=0 
correct output grid

TRAIN ed36ccf7.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,0)=5# (2,1)=5# (2,2)=5#
correct output grid

TEST ed36ccf7.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-20] Checking task ef135b50.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41579.9 = 41592.5
DL output with Mo: L = 12.6 + 50895.2 = 50907.8
DL input+output M: L = 25.2 + 92475.1 = 92500.3

# learning a model for train pairs
2.000	
1.440	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.190	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.848	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.713	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.620	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.608	OUT SPE ^.size = ^.size
0.602	OUT SPE ^.layer_011.pos = ^.layer_0.pos
0.599	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.595	OUT SPE ^.layer_0111.shape.color = brown
0.592	OUT SPE ^.layer_0.pos.j = '0
0.589	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.586	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.583	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.i / '2
0.580	OUT SPE ^.color = ^.color
0.578	OUT SPE ^.layer_0111.pos.j = bottom(^.layer_0) / '2
0.576	OUT SPE ^.layer_0.shape.mask = Full
0.574	OUT SPE ^.layer_01.shape.mask = Full
0.572	OUT SPE ^.layer_011.shape.mask = Full
0.570	OUT SPE ^.layer_0111.shape.mask = Full
0.131	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,'0)
  _01: a rectangle with size (?,^.layer_0.shape.size.i / '2) and color ^.layer_0.shape.color and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _0111: a rectangle with size (?,?) and color brown and mask Full at (?,bottom(^.layer_0) / '2)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 18276.1 = 18314.9
DL output with Mo: L = 233.6 + 6363.2 = 6596.8
DL input+output M: L = 272.4 + 24639.3 = 24911.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,'0)
  _01: a rectangle with size (?,^.layer_0.shape.size.i / '2) and color ^.layer_0.shape.color and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _0111: a rectangle with size (?,?) and color brown and mask Full at (?,bottom(^.layer_0) / '2)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 233.6 + 6363.2 = 6596.8
DL input+output M: L = 272.4 + 6363.2 = 6635.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (3,7)
diff: 
delta: (2,0)=2  (2,1)=2  (2,2)=2  (3,0)=2  (3,1)=2  (3,2)=2  (4,0)=2  (4,1)=2  (4,2)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2  (9,3)=2  (9,4)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _01: a rectangle with size (4,2) and color red and mask Full at (6,3)
  _011: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _0111: a rectangle with size (2,4) and color brown and mask Full at (3,3)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (6,5)
diff: 
delta:
   (99.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (3,7)
diff: 
delta: (2,0)=2  (2,1)=2  (2,2)=2  (3,0)=2  (3,1)=2  (3,2)=2  (4,0)=2  (4,1)=2  (4,2)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2  (9,3)=2  (9,4)=2 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (2,0)
diff: 
delta: (3,7)=2  (3,8)=2  (4,7)=2  (4,8)=2  (5,7)=2  (5,8)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (7,3)=2  (7,4)=2  (7,7)=2  (7,8)=2  (8,3)=2  (8,4)=2  (9,3)=2  (9,4)=2 
! 43 wrong pixels (generated / expected)

TRAIN ef135b50.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (2,7)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (3,0)=2  (3,1)=2  (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2  (8,6)=2  (8,7)=2  (8,8)=2  (8,9)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2 
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (4,2) and color red and mask Full at (5,3)
  _011: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,5) and color brown and mask Full at (2,2)
  _01111: a rectangle with size (2,4) and color red and mask Full at (8,6)
diff: 
delta: (5,5)=9# (5,6)=9# (8,5)=9#
   (218.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (2,7)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (3,0)=2  (3,1)=2  (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2  (8,6)=2  (8,7)=2  (8,8)=2  (8,9)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (8,6)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (2,7)=2  (2,8)=2  (2,9)=2  (3,0)=2  (3,1)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,7)=2  (4,8)=2  (4,9)=2  (5,3)=2  (5,4)=2  (5,7)=2  (5,8)=2  (5,9)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color red and mask Full at (0,0)
diff: 
delta: (2,7)=2  (2,8)=2  (2,9)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,7)=2  (4,8)=2  (4,9)=2  (5,3)=2  (5,4)=2  (5,7)=2  (5,8)=2  (5,9)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2  (8,6)=2  (8,7)=2  (8,8)=2  (8,9)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2 
! 47 wrong pixels (generated / expected)

TRAIN ef135b50.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|....xx....|....xxxxxx|....x...xx|xxxxx...xx|xxxxx...xx|xxxxx...x.|....x...x.|....x...x.|....xxxxx. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (3,5) and color black and mask Full at (4,0)
  _01: a rectangle with size (1,5) and color black and mask Full at (9,4)
  _011: a rectangle with size (1,6) and color black and mask Full at (0,0)
  _0111: a rectangle with size (6,1) and color brown and mask Full at (3,4)
  _01111: a rectangle with size (4,6) and color black and mask xxxxxx|....xx|....xx|....xx at (2,4)
diff: 
delta: (1,4)=9# (1,5)=9# (6,8)=9# (7,8)=9# (8,8)=9#
   (318.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|....xx....|....xxxxxx|....x...xx|xxxxx...xx|xxxxx...xx|xxxxx...x.|....x...x.|....x...x.|....xxxxx. at (0,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN ef135b50.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask Full at (3,1)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (5,5)=2  (5,6)=2  (5,7)=2  (5,8)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=2 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,6)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2  (3,1)=2  (3,2)=2  (3,3)=2  (4,1)=2  (4,2)=2  (4,3)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,5)=2  (5,6)=2  (5,7)=2  (5,8)=2  (6,1)=2  (6,2)=2  (6,3)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=2  (7,1)=2  (7,2)=2  (7,3)=2 
! 40 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (5,5)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,1)=2  (4,2)=2  (4,3)=2  (5,1)=2  (5,2)=2  (5,3)=2  (6,1)=2  (6,2)=2  (6,3)=2  (7,1)=2  (7,2)=2  (7,3)=2 
! 40 wrong pixels (generated / expected)

TEST ef135b50.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.8 sec (19.8 sec/task)
bits-train-error = 6363.2 bits (6363.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-19] Checking task f15e1fac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6933.9 = 6946.5
DL output with Mo: L = 12.6 + 52665.9 = 52678.5
DL input+output M: L = 25.2 + 59599.8 = 59625.0

# learning a model for train pairs
2.000	
1.505	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.086	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.997	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.907	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.815	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.738	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	OUT ADD ^.layer_0111 = ^.layer_01111
0.692	IN  SPE ^.layer_0.shape.color = cyan
0.668	IN  SPE ^.layer_01.shape.color = cyan
0.644	IN  SPE ^.layer_01111.shape.color = red
0.620	IN  SPE ^.layer_0111.shape.color = red
0.608	OUT SPE ^.size = ^.size
0.598	IN  SPE ^.color = black
0.594	OUT SPE ^.layer_0.pos.i = '0
0.591	OUT SPE ^.layer_01.pos.j = '0
0.588	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.155	
0.152	IN  DEL ^.layer_0111
0.152	IN  GEN ^.layer_01.shape.color = ?
0.151	IN  GEN ^.layer_0.shape.color = ?
0.151	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color red at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 105.9 + 3005.4 = 3111.2
DL output with Mo: L = 109.2 + 7259.3 = 7368.5
DL input+output M: L = 215.0 + 10264.6 = 10479.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 80.3 + 0.0 = 80.3
DL output with Mo: L = 109.2 + 7259.3 = 7368.5
DL input+output M: L = 189.5 + 7259.3 = 7448.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _01111: a point with color red at (4,0)
diff: 
delta: (0,9)=8  (10,0)=2 
   (0.0 bits)
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (17,7) and color cyan and mask x.x.x..|x.x.x..|x.x.x..|x.x.x..|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x at (0,5)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,0)
  _011: a rectangle with size (17,3) and color cyan and mask x..|x..|x..|x..|.x.|.x.|.x.|.x.|.x.|.x.|..x|..x|..x|..x|..x|..x|..x at (0,1)
  _0111: a point with color red at (4,0)
diff: 
delta:
   (265.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _01111: a point with color red at (4,0)
diff: 
delta: (0,9)=8  (10,0)=2 
! 71 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _01111: a point with color red at (10,0)
diff: 
delta: (0,9)=8  (4,0)=2 
! 71 wrong pixels (generated / expected)

TRAIN f15e1fac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _01111: a point with color red at (7,9)
diff: 
delta: (11,9)=2 
   (0.0 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (14,4) and color cyan and mask ...x|...x|...x|..x.|..x.|..x.|..x.|.x..|.x..|.x..|.x..|x...|x...|x... at (0,3)
  _01: a rectangle with size (11,3) and color cyan and mask ..x|..x|..x|.x.|.x.|.x.|.x.|x..|x..|x..|x.. at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,9)
  _0111: a point with color red at (7,9)
diff: 
delta: (11,9)=2 
   (211.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _01111: a point with color red at (7,9)
diff: 
delta: (11,9)=2 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _01111: a point with color red at (11,9)
diff: 
delta: (7,9)=2 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (7,9)
  _01111: a point with color red at (3,9)
diff: 
delta: (11,9)=2 
! 31 wrong pixels (generated / expected)

TRAIN f15e1fac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _01111: a point with color red at (11,4)
diff: 
delta: (11,8)=2 
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (0,0)
  _01: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (4,0)
  _011: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (7,0)
  _0111: a point with color red at (11,4)
diff: 
delta: (11,8)=2 
   (248.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _01111: a point with color red at (11,4)
diff: 
delta: (11,8)=2 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _01111: a point with color red at (11,8)
diff: 
delta: (11,4)=2 
! 41 wrong pixels (generated / expected)

TRAIN f15e1fac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a point with color cyan at (2,16)
  _01: a point with color cyan at (5,16)
  _011: a point with color cyan at (8,16)
  _01111: a point with color red at (11,2)
diff: 
delta: (10,16)=8  (11,6)=2  (11,11)=2 
! 71 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,17) and color black and layers
  _0: a point with color cyan at (2,16)
  _01: a point with color cyan at (5,16)
  _011: a point with color cyan at (8,16)
  _01111: a point with color red at (11,6)
diff: 
delta: (10,16)=8  (11,2)=2  (11,11)=2 
! 71 wrong pixels (generated / expected)

TEST f15e1fac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 7259.3 bits (7259.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-18] Checking task f1cefba8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 148952.6 = 148965.2
DL output with Mo: L = 12.6 + 160602.7 = 160615.3
DL input+output M: L = 25.2 + 309555.3 = 309580.5

# learning a model for train pairs
2.000	
1.375	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.410	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.275	OUT ADD ^.layer_01 = ^.layer_01
0.243	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.235	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.201	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.190	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.186	OUT SPE ^.size = ^.size
0.183	OUT SPE ^.layer_0111.shape.size = projJ(^.size) + (1, 0)
0.182	OUT SPE ^.layer_011.pos.i = '0
0.181	OUT SPE ^.layer_0111.pos.j = '0
0.180	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.179	OUT SPE ^.layer_0111.shape.color = ^.layer_0.shape.color
0.178	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.j + 3
0.177	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j + 2
0.176	OUT SPE ^.layer_01111.shape.color = ^.layer_0.shape.color
0.175	IN  SPE ^.layer_01.shape.mask = Full
0.175	OUT SPE ^.layer_0.shape.mask = Full
0.174	OUT SPE ^.layer_011.shape.size.j = 1
0.157	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.154	OUT SPE ^.layer_010.shape.mask = Full
0.153	OUT SPE ^.layer_011.shape.mask = Full
0.152	OUT SPE ^.layer_0111.shape.mask = Full
0.152	OUT SPE ^.layer_01111.shape.size.j = 1
0.151	OUT SPE ^.layer_01111.shape.mask = Full
0.117	
0.117	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,^.layer_01.pos.j + 2)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ('0,?)
  _0111: a rectangle with size projJ(^.size) + (1, 0) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.j + 3,'0)
  _01111: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.2 + 5046.5 = 5111.7
DL output with Mo: L = 256.5 + 18492.8 = 18749.2
DL input+output M: L = 321.7 + 23539.3 = 23860.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,^.layer_01.pos.j + 2)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ('0,?)
  _0111: a rectangle with size projJ(^.size) + (1, 0) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.j + 3,'0)
  _01111: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 256.5 + 18492.8 = 18749.2
DL input+output M: L = 320.7 + 18492.8 = 18813.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (11,8) and color red and mask ....x...|xxxxxxx.|xxxxxxx.|xxxxxxxx|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|.x...... at (3,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (9,1) and color red and mask Full at (4,3)
  _010: a rectangle with size (6,5) and color red and mask Full at (7,5)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (19,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (1,13) and color red and mask Full at (6,0)
  _01111: a rectangle with size (19,1) and color red and mask Full at (0,7)
diff: 
delta: (4,5)=2  (4,6)=2  (4,8)=2  (4,9)=2  (5,5)=2  (5,6)=2  (5,8)=2  (5,9)=2  (6,3)=8  (7,7)=8  (8,7)=8  (9,7)=8  (10,7)=8  (11,7)=8  (12,7)=8 
   (684.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (11,8) and color red and mask ....x...|xxxxxxx.|xxxxxxx.|xxxxxxxx|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|.x...... at (3,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
diff: 
delta:
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (13,11) and color cyan and mask xxxxxxxxxxx|xxxxxx.xxxx|xx.......xx|xx.......xx|xx........x|xx.......xx|xx.......xx|xx.......xx|xx.......xx|xx.......xx|xx.......xx|xxx.xxxxxxx|xxxxxxxxxxx at (2,1)
  _01: a rectangle with size (11,8) and color red and mask Full at (3,3)
diff: 
delta:
! 124 wrong pixels (generated / expected)

TRAIN f1cefba8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..x......|xxxxxxxx.|xxxxxxxxx|xxxxxxxx.|xxxxxxxx.|....x.... at (5,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (2,8) and color yellow and mask Full at (8,4)
  _010: a rectangle with size (8,2) and color blue and mask Full at (4,2)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
  _011: a rectangle with size (15,1) and color yellow and mask Full at (0,6)
  _0111: a rectangle with size (1,17) and color yellow and mask Full at (7,0)
  _01111: a rectangle with size (15,1) and color yellow and mask Full at (0,8)
diff: 
delta: (6,4)=4  (6,5)=4  (6,6)=1  (6,7)=4  (6,8)=1  (6,9)=4  (6,10)=4  (6,11)=4  (6,12)=1  (6,13)=1  (8,6)=1  (8,8)=1  (8,12)=1  (8,13)=1  (9,6)=1  (9,8)=1  (9,12)=1  (9,13)=1 
   (799.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..x......|xxxxxxxx.|xxxxxxxxx|xxxxxxxx.|xxxxxxxx.|....x.... at (5,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
diff: 
delta:
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (8,12) and color blue and mask xxxxxxxxxxxx|xxxx.xxxxxxx|xx........xx|xx.........x|xx........xx|xx........xx|xxxxxx.xxxxx|xxxxxxxxxxxx at (4,2)
  _01: a rectangle with size (6,9) and color yellow and mask Full at (5,4)
diff: 
delta:
! 105 wrong pixels (generated / expected)

TRAIN f1cefba8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask ......x..|.xxxxxxxx|.xxxxxxxx|.xxxxxxxx|xxxxxxxxx|.xxxxxxxx|.xxxxxxxx|.xxxxxxxx|.xxxxxxxx at (4,5)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta:
   (0.0 bits)
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (5,6)
  _010: a rectangle with size (8,2) and color green and mask Full at (5,12)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
  _011: a rectangle with size (3,1) and color green and mask Full at (0,11)
  _0111: a rectangle with size (1,18) and color green and mask Full at (8,0)
  _01111: a rectangle with size (1,1) and color green and mask Full at (15,11)
diff: 
delta: (8,6)=2  (8,7)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,12)=2  (8,13)=2 
   (365.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask ......x..|.xxxxxxxx|.xxxxxxxx|.xxxxxxxx|xxxxxxxxx|.xxxxxxxx|.xxxxxxxx|.xxxxxxxx|.xxxxxxxx at (4,5)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta:
! 61 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (5,6)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta: (4,11)=3  (8,5)=3 
! 73 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxx.xxxx|xx........xx|xx........xx|xx........xx|x.........xx|xx........xx|xx........xx|xx........xx|xx........xx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,4)
  _01: a rectangle with size (9,9) and color green and mask Full at (4,5)
diff: 
delta:
! 116 wrong pixels (generated / expected)

TRAIN f1cefba8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (10,11) and color cyan and mask ....x...x..|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|xxxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx at (4,2)
  _01: a rectangle with size (13,14) and color blue and mask Full at (3,1)
diff: 
delta:
! 92 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (9,10) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (13,14) and color blue and mask Full at (3,1)
diff: 
delta: (4,6)=8  (4,10)=8  (9,2)=8 
! 92 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (13,14) and color blue and mask xxxxxxxxxxxxxx|xxxxx.xxx.xxxx|xx..........xx|xx..........xx|xx..........xx|xx..........xx|x...........xx|xx..........xx|xx..........xx|xx..........xx|xx..........xx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,1)
  _01: a rectangle with size (10,11) and color cyan and mask Full at (4,2)
diff: 
delta:
! 143 wrong pixels (generated / expected)

TEST f1cefba8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 18492.8 bits (18492.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-17] Checking task f25fbde4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7458.0 = 7470.6
DL output with Mo: L = 12.6 + 21085.6 = 21098.2
DL input+output M: L = 25.2 + 28543.6 = 28568.8

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = strip(^.grid) * '2
0.270	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.248	IN  SPE ^.layer_0.shape.color = yellow
0.238	IN  SPE ^.color = black
0.007	
0.003	IN  DEL ^.layer_0
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
strip(^.grid) * '2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1723.1 = 1765.4
DL output with Mo: L = 28.6 + 0.0 = 28.6
DL input+output M: L = 70.9 + 1723.1 = 1794.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
strip(^.grid) * '2
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 28.6 + 0.0 = 28.6
DL input+output M: L = 41.2 + 0.0 = 41.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (2,2)=4  (2,3)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (4,2)=4  (4,3)=4 
   (0.0 bits)
data: 
0 0 4 4 4 4 0 0 
0 0 4 4 4 4 0 0 
4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 
0 0 4 4 4 4 0 0 
0 0 4 4 4 4 0 0 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (2,2)=4  (2,3)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (4,2)=4  (4,3)=4 
correct output grid

TRAIN f25fbde4.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (1,4)=4  (2,3)=4  (2,4)=4  (3,5)=4 
   (0.0 bits)
data: 
0 0 4 4 0 0 
0 0 4 4 0 0 
4 4 4 4 0 0 
4 4 4 4 0 0 
0 0 0 0 4 4 
0 0 0 0 4 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,4)=4  (2,3)=4  (2,4)=4  (3,5)=4 
correct output grid

TRAIN f25fbde4.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:

data: a background with size (9,9) and color black and layers
diff: 
delta: (4,2)=4  (5,1)=4  (5,2)=4  (6,2)=4  (7,2)=4  (7,3)=4 
   (0.0 bits)
data: 
0 0 4 4 0 0 
0 0 4 4 0 0 
4 4 4 4 0 0 
4 4 4 4 0 0 
0 0 4 4 0 0 
0 0 4 4 0 0 
0 0 4 4 4 4 
0 0 4 4 4 4 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (4,2)=4  (5,1)=4  (5,2)=4  (6,2)=4  (7,2)=4  (7,3)=4 
correct output grid

TRAIN f25fbde4.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,4)=4  (1,6)=4  (2,3)=4  (2,5)=4  (2,7)=4  (3,4)=4  (3,6)=4 
correct output grid

TEST f25fbde4.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-16] Checking task f25ffba3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8789.1 = 8801.8
DL output with Mo: L = 12.6 + 17075.3 = 17087.9
DL input+output M: L = 25.2 + 25864.4 = 25889.7

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = closeSym(flipHeight; , black, ^.grid)
0.662	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.449	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.317	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.298	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.286	IN  SPE ^.layer_01.shape.color = green
0.273	IN  SPE ^.layer_0.shape.color = red
0.266	IN  SPE ^.layer_0.shape.mask = Full
0.258	IN  SPE ^.layer_011.shape.mask = Full
0.253	IN  SPE ^.color = black
0.014	
0.011	IN  DEL ^.layer_0
0.007	IN  DEL ^.layer_01
0.004	IN  DEL ^.layer_011
0.002	IN  DEL ^.layer_0111
0.002	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; , black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 113.6 + 2100.9 = 2214.5
DL output with Mo: L = 17.5 + 0.0 = 17.5
DL input+output M: L = 131.1 + 2100.9 = 2232.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; , black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 17.5 + 0.0 = 17.5
DL input+output M: L = 30.1 + 0.0 = 30.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,4) and color black and layers
diff: 
delta: (5,3)=9# (6,2)=3  (6,3)=9# (7,2)=3  (7,3)=9# (8,0)=2  (8,2)=3  (8,3)=9# (9,0)=2  (9,1)=4  (9,2)=3  (9,3)=9#
   (0.0 bits)
data: 
2 4 3 9#
2 0 3 9#
0 0 3 9#
0 0 3 9#
0 0 0 9#
0 0 0 9#
0 0 3 9#
0 0 3 9#
2 0 3 9#
2 4 3 9#

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
diff: 
delta: (5,3)=9# (6,2)=3  (6,3)=9# (7,2)=3  (7,3)=9# (8,0)=2  (8,2)=3  (8,3)=9# (9,0)=2  (9,1)=4  (9,2)=3  (9,3)=9#
correct output grid

TRAIN f25ffba3.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (10,4) and color black and layers
diff: 
delta: (5,3)=2  (6,3)=2  (7,1)=8  (7,3)=2  (8,1)=3  (8,2)=8  (8,3)=2  (9,0)=3  (9,1)=3  (9,2)=8  (9,3)=2 
   (0.0 bits)
data: 
3 3 8 2 
0 3 8 2 
0 8 0 2 
0 0 0 2 
0 0 0 2 
0 0 0 2 
0 0 0 2 
0 8 0 2 
0 3 8 2 
3 3 8 2 

diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
diff: 
delta: (5,3)=2  (6,3)=2  (7,1)=8  (7,3)=2  (8,1)=3  (8,2)=8  (8,3)=2  (9,0)=3  (9,1)=3  (9,2)=8  (9,3)=2 
correct output grid

TRAIN f25ffba3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
diff: 
delta: (5,1)=1  (6,0)=7# (6,1)=1  (7,0)=7# (7,1)=1  (7,2)=3  (8,0)=7# (8,1)=1  (8,2)=3  (8,3)=3  (9,0)=7# (9,1)=1  (9,2)=4  (9,3)=4 
correct output grid

TEST f25ffba3.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-15] Checking task f2829549.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27491.3 = 27503.9
DL output with Mo: L = 12.6 + 7519.1 = 7531.7
DL input+output M: L = 25.2 + 35010.4 = 35035.7

# learning a model for train pairs
2.000	
1.406	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.118	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.899	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.733	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.643	OUT SPE ^.size = projI(^.size) + (0, 3)
0.606	OUT SPE ^.layer_0.shape.color = green
0.571	OUT SPE ^.layer_0.shape.size.j = area(^.layer_011.shape) - 1
0.551	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2
0.535	OUT SPE ^.color = black
0.524	IN  SPE ^.layer_01.shape.color = grey
0.519	IN  SPE ^.color = black
0.211	
0.211	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + (0, 3) and color black and layers
  _0: a rectangle with size (?,area(^.layer_011.shape) - 1) and color green and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.7 + 8486.5 = 8579.3
DL output with Mo: L = 131.3 + 1430.4 = 1561.6
DL input+output M: L = 224.0 + 9916.9 = 10140.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + (0, 3) and color black and layers
  _0: a rectangle with size (?,area(^.layer_011.shape) - 1) and color green and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 0.0 = 92.6
DL output with Mo: L = 131.3 + 1430.4 = 1561.6
DL input+output M: L = 223.9 + 1430.4 = 1654.2

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _011: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask .x|xx|x.|.x at (0,1)
diff: 
delta:
   (25.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _011: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
  _01: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _011: a rectangle with size (1,2) and color orange and mask Full at (0,0)
diff: 
delta: (1,0)=7#
! 5 wrong pixels (generated / expected)

TRAIN f2829549.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|..x at (0,0)
diff: 
delta:
   (25.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
  _011: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
! 3 wrong pixels (generated / expected)

TRAIN f2829549.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask ..x|xx. at (2,0)
diff: 
delta: (1,0)=3 
   (57.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _011: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN f2829549.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask xx.|xxx at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,4)=5# (3,6)=5#
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask Even Checkboard at (2,0)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask xx.|xxx at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,4)=5# (3,6)=5#
! 9 wrong pixels (generated / expected)

TRAIN f2829549.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _011: a rectangle with size (1,3) and color orange and mask Full at (3,0)
diff: 
delta: (0,0)=7# (1,2)=7#
   (0.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _011: a rectangle with size (1,3) and color orange and mask Full at (3,0)
diff: 
delta: (0,0)=7# (1,2)=7#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (1,3) and color orange and mask Full at (3,0)
  _01: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (1,2)=7#
! 4 wrong pixels (generated / expected)

TRAIN f2829549.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (4,3) and color grey and mask .x.|xx.|x..|xxx at (0,4)
  _011: a rectangle with size (1,3) and color orange and mask Full at (1,0)
diff: 
delta: (3,0)=7#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (1,3) and color orange and mask Full at (1,0)
  _01: a rectangle with size (4,3) and color grey and mask .x.|xx.|x..|xxx at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,0)=7#
! 6 wrong pixels (generated / expected)

TEST f2829549.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.3 sec (3.3 sec/task)
bits-train-error = 1430.4 bits (1430.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-14] Checking task f35d900a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7337.5 = 7350.1
DL output with Mo: L = 12.6 + 75309.4 = 75322.0
DL input+output M: L = 25.2 + 82646.9 = 82672.1

# learning a model for train pairs
2.000	
1.855	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.710	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.566	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.422	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.310	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.198	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.083	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.964	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.943	OUT ADD ^.layer_00 = ^.layer_0
0.921	OUT ADD ^.layer_010 = ^.layer_01
0.901	OUT ADD ^.layer_0110 = ^.layer_011
0.880	OUT ADD ^.layer_01110 = ^.layer_0111
0.867	IN  SPE ^.color = black
0.855	OUT SPE ^.size = ^.size
0.843	OUT SPE ^.layer_0111.shape = ^.layer_011.shape * '3
0.832	OUT SPE ^.layer_01.shape = ^.layer_0.shape * '3
0.820	OUT SPE ^.layer_011.shape = ^.layer_0.shape * '3
0.809	OUT SPE ^.layer_0.shape = ^.layer_01.shape * '3
0.802	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos - (1, 1)
0.796	OUT SPE ^.layer_011.pos = ^.layer_011.pos - (1, 1)
0.789	OUT SPE ^.layer_01.pos = ^.layer_01.pos - (1, 1)
0.783	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (1, 1)
0.781	OUT SPE ^.color = black
0.263	
0.263	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: ^.layer_01.shape * '3 at ^.layer_0.pos - (1, 1)
  _010: ^.layer_01
  _01: ^.layer_0.shape * '3 at ^.layer_01.pos - (1, 1)
  _0110: ^.layer_011
  _011: ^.layer_0.shape * '3 at ^.layer_011.pos - (1, 1)
  _01110: ^.layer_0111
  _0111: ^.layer_011.shape * '3 at ^.layer_0111.pos - (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.1 + 3812.9 = 3890.0
DL output with Mo: L = 229.7 + 18769.4 = 18999.2
DL input+output M: L = 306.8 + 22582.3 = 22889.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: ^.layer_01.shape * '3 at ^.layer_0.pos - (1, 1)
  _010: ^.layer_01
  _01: ^.layer_0.shape * '3 at ^.layer_01.pos - (1, 1)
  _0110: ^.layer_011
  _011: ^.layer_0.shape * '3 at ^.layer_011.pos - (1, 1)
  _01110: ^.layer_0111
  _0111: ^.layer_011.shape * '3 at ^.layer_0111.pos - (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 0.0 = 77.0
DL output with Mo: L = 229.7 + 18769.4 = 18999.2
DL input+output M: L = 306.7 + 18769.4 = 19076.1

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color green at (8,1)
  _0111: a point with color red at (8,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (14,14) and color black and layers
  _00: a point with color red at (2,1)
  _0: a rectangle with size (3,3) and color green and mask Full at (1,0)
  _010: a point with color green at (2,6)
  _01: a rectangle with size (3,3) and color red and mask Full at (1,5)
  _0110: a point with color green at (8,1)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,0)
  _01110: a point with color red at (8,6)
  _0111: a rectangle with size (3,3) and color green and mask Full at (7,5)
diff: 
delta: (2,3)=5# (2,4)=5# (4,1)=5# (4,6)=5# (6,1)=5# (6,6)=5# (8,3)=5# (8,4)=5#
   (311.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color green at (8,1)
  _0111: a point with color red at (8,6)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color red at (8,6)
  _0111: a point with color green at (8,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN f35d900a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color cyan at (14,2)
  _0111: a point with color blue at (14,10)
diff: 
delta:
   (0.0 bits)
data: a background with size (17,14) and color black and layers
  _00: a point with color blue at (3,2)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (2,1)
  _010: a point with color cyan at (3,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (2,9)
  _0110: a point with color cyan at (14,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (13,1)
  _01110: a point with color blue at (14,10)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (13,9)
diff: 
delta: (3,4)=5# (3,6)=5# (3,8)=5# (5,2)=5# (5,10)=5# (7,2)=5# (7,10)=5# (10,2)=5# (10,10)=5# (12,2)=5# (12,10)=5# (14,4)=5# (14,6)=5# (14,8)=5#
   (545.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color cyan at (14,2)
  _0111: a point with color blue at (14,10)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color blue at (14,10)
  _0111: a point with color cyan at (14,2)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN f35d900a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color yellow at (13,2)
  _0111: a point with color red at (13,13)
diff: 
delta:
   (0.0 bits)
data: a background with size (17,16) and color black and layers
  _00: a point with color red at (3,2)
  _0: a rectangle with size (3,3) and color yellow and mask Full at (2,1)
  _010: a point with color yellow at (3,13)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,12)
  _0110: a point with color yellow at (13,2)
  _011: a rectangle with size (3,3) and color red and mask Full at (12,1)
  _01110: a point with color red at (13,13)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (12,12)
diff: 
delta: (3,4)=5# (3,6)=5# (3,9)=5# (3,11)=5# (5,2)=5# (5,13)=5# (7,2)=5# (7,13)=5# (9,2)=5# (9,13)=5# (11,2)=5# (11,13)=5# (13,4)=5# (13,6)=5# (13,9)=5# (13,11)=5#
   (626.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color yellow at (13,2)
  _0111: a point with color red at (13,13)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color red at (13,13)
  _0111: a point with color yellow at (13,2)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN f35d900a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color cyan at (8,4)
  _0111: a point with color green at (8,12)
diff: 
delta:
   (0.0 bits)
data: a background with size (17,16) and color black and layers
  _00: a point with color green at (3,4)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (2,3)
  _010: a point with color cyan at (3,12)
  _01: a rectangle with size (3,3) and color green and mask Full at (2,11)
  _0110: a point with color cyan at (8,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (7,3)
  _01110: a point with color green at (8,12)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (7,11)
diff: 
delta: (3,6)=5# (3,8)=5# (3,10)=5# (5,4)=5# (5,12)=5# (6,4)=5# (6,12)=5# (8,6)=5# (8,8)=5# (8,10)=5#
   (393.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color cyan at (8,4)
  _0111: a point with color green at (8,12)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color green at (8,12)
  _0111: a point with color cyan at (8,4)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN f35d900a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a point with color yellow at (4,2)
  _01: a point with color blue at (4,12)
  _011: a point with color blue at (15,2)
  _0111: a point with color yellow at (15,12)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a point with color yellow at (4,2)
  _01: a point with color blue at (4,12)
  _011: a point with color yellow at (15,12)
  _0111: a point with color blue at (15,2)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TEST f35d900a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.1 sec (28.1 sec/task)
bits-train-error = 18769.4 bits (18769.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-13] Checking task f5b8619d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2642.5 = 2655.1
DL output with Mo: L = 12.6 + 37997.5 = 38010.1
DL input+output M: L = 25.2 + 40640.0 = 40665.3

# learning a model for train pairs
2.000	
1.653	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.404	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.167	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.065	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.035	OUT ADD ^.layer_00 = ^.layer_0
1.007	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.980	IN  SPE ^.color = black
0.966	OUT SPE ^.size = tiling(^.size, 2, 2)
0.953	OUT ADD ^.layer_010 = ^.layer_0.shape at (?,?)
0.933	OUT ADD ^.layer_001 = ^.layer_0.shape at (?,?)
0.921	OUT ADD ^.layer_01111 = ^.layer_0.shape at (?,?)
0.914	OUT SPE ^.layer_001.pos = ^.layer_0.pos + projJ(^.size)
0.911	OUT SPE ^.layer_011.shape.size.j = 1
0.187	
0.187	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_0.shape at ^.layer_0.pos + projJ(^.size)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,1) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1921.2 = 1950.9
DL output with Mo: L = 223.0 + 6460.8 = 6683.8
DL input+output M: L = 252.7 + 8382.0 = 8634.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_0.shape at ^.layer_0.pos + projJ(^.size)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,1) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 223.0 + 6460.8 = 6683.8
DL input+output M: L = 252.5 + 6460.8 = 6713.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (2,2)=2 
   (0.0 bits)
data: a background with size (6,6) and color cyan and layers
  _00: a point with color red at (0,0)
  _001: a point with color red at (0,3)
  _0: a rectangle with size (6,1) and color black and mask Full at (0,1)
  _010: a point with color red at (2,5)
  _01: a rectangle with size (6,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,0)
  _0111: a rectangle with size (2,2) and color red and mask Even Checkboard at (2,2)
  _01111: a point with color red at (5,2)
diff: 
delta: (5,5)=2 
   (183.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (2,2)=2 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (0,0)=2 
! 24 wrong pixels (generated / expected)

TRAIN f5b8619d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (0,1)
diff: 
delta: (4,0)=5# (4,5)=5#
   (0.0 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color grey at (0,1)
  _001: a point with color grey at (0,7)
  _0: a rectangle with size (12,3) and color cyan and mask xx.|xxx|xxx|xxx|..x|xxx|xx.|xxx|xxx|xxx|..x|xxx at (0,5)
  _010: a point with color grey at (4,0)
  _01: a rectangle with size (12,2) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (12,1) and color cyan and mask Full at (0,11)
  _0111: a rectangle with size (7,2) and color grey and mask Full at (4,5)
  _01111: a point with color grey at (6,7)
diff: 
delta: (4,11)=5# (6,1)=5# (10,0)=5# (10,11)=5#
   (349.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (0,1)
diff: 
delta: (4,0)=5# (4,5)=5#
! 70 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,0)
diff: 
delta: (0,1)=5# (4,5)=5#
! 70 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,5)
diff: 
delta: (0,1)=5# (4,0)=5#
! 70 wrong pixels (generated / expected)

TRAIN f5b8619d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (4,4) and color black and layers
  _00: a point with color yellow at (0,1)
  _001: a point with color yellow at (0,3)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _010: a point with color yellow at (2,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (3,1)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (3,3)
  _01111: a point with color yellow at (2,3)
diff: 
delta:
   (113.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN f5b8619d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (2,3)=3  (3,0)=3 
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (2,3)
diff: 
delta: (0,2)=3  (3,0)=3 
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (3,0)
diff: 
delta: (0,2)=3  (2,3)=3 
! 48 wrong pixels (generated / expected)

TEST f5b8619d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 6460.8 bits (6460.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-12] Checking task f76d97a5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8223.0 = 8235.6
DL output with Mo: L = 12.6 + 8092.8 = 8105.4
DL input+output M: L = 25.2 + 16315.8 = 16341.0

# learning a model for train pairs
2.000	
1.301	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.621	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	OUT SPE ^.layer_0 = coloring(^.layer_0, ^.color)
0.378	OUT SPE ^.size = ^.size
0.358	IN  SPE ^.layer_0.shape.color = grey
0.349	OUT SPE ^.color = black
0.054	
0.054	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, ^.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 2427.0 = 2469.2
DL output with Mo: L = 27.9 + 371.9 = 399.7
DL input+output M: L = 70.0 + 2798.9 = 2868.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, ^.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 27.9 + 371.9 = 399.7
DL input+output M: L = 66.7 + 371.9 = 438.6

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=5#
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=6 
   (37.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,4) and color pink and mask x...|xx..|xxx.|.xxx at (1,0)
diff: 
delta: (0,2)=6  (0,3)=6  (0,4)=6  (1,3)=6  (1,4)=6  (2,4)=6 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
diff: 
delta: (1,1)=5# (1,2)=5# (2,2)=5# (2,3)=5# (3,3)=5# (3,4)=5# (4,0)=5# (4,4)=5#
! 8 wrong pixels (generated / expected)

TRAIN f76d97a5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (5,4) and color grey and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,4) and color brown and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (5,4) and color grey and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask xxx.x|x.xxx|x..x.|xxx.x|...xx at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|.xx.x|...x.|xxx.. at (1,0)
diff: 
delta: (0,3)=5#
! 1 wrong pixels (generated / expected)

TEST f76d97a5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 371.9 bits (371.9 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-11] Checking task f8a8fe49.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29020.3 = 29032.9
DL output with Mo: L = 12.6 + 29020.3 = 29032.9
DL input+output M: L = 25.2 + 58040.5 = 58065.7

# learning a model for train pairs
2.000	
1.709	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	OUT ADD ^.layer_0 = ^.layer_0
1.072	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	OUT ADD ^.layer_01 = ^.layer_01
0.592	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.385	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.312	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.286	OUT SPE ^.layer_011.shape = applySym(flipHeight, ^.layer_011.shape)
0.263	OUT SPE ^.size = ^.size
0.240	OUT SPE ^.layer_0111.shape = applySym(flipWidth, ^.layer_0111.shape)
0.234	IN  SPE ^.layer_0.shape.color = red
0.228	IN  SPE ^.layer_01.shape.color = red
0.223	IN  SPE ^.layer_011.shape.color = grey
0.217	IN  SPE ^.layer_0111.shape.color = grey
0.212	OUT SPE ^.layer_0111.pos.j = ^.layer_01.pos.i - 3
0.207	OUT SPE ^.layer_011.pos.j = span(^.layer_0.pos.j, ^.layer_011.pos.j) * '2
0.202	OUT SPE ^.layer_0111.pos.i = span(^.layer_0.pos.i, ^.layer_0111.pos.i) + ^.layer_01.shape.size.j
0.199	IN  SPE ^.color = black
0.197	OUT SPE ^.color = black
0.017	
0.017	IN  GEN ^.layer_0111.shape.color = ?
0.017	IN  GEN ^.layer_011.shape.color = ?
0.017	IN  GEN ^.layer_01.shape.color = ?
0.017	IN  GEN ^.layer_0.shape.color = ?
0.017	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: applySym(flipHeight, ^.layer_011.shape) at (?,span(^.layer_0.pos.j, ^.layer_011.pos.j) * '2)
  _0111: applySym(flipWidth, ^.layer_0111.shape) at (span(^.layer_0.pos.i, ^.layer_0111.pos.i) + ^.layer_01.shape.size.j,^.layer_01.pos.i - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 127.6 + 5229.9 = 5357.4
DL output with Mo: L = 170.7 + 186.9 = 357.6
DL input+output M: L = 298.3 + 5416.7 = 5715.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: applySym(flipHeight, ^.layer_011.shape) at (?,span(^.layer_0.pos.j, ^.layer_011.pos.j) * '2)
  _0111: applySym(flipWidth, ^.layer_0111.shape) at (span(^.layer_0.pos.i, ^.layer_0111.pos.i) + ^.layer_01.shape.size.j,^.layer_01.pos.i - 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 170.7 + 186.9 = 357.6
DL input+output M: L = 284.9 + 206.9 = 491.7

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,3) and color grey and mask x.x|xxx at (1,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (13,7)
diff: 
delta:
   (6.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _01: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _011: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
  _0111: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
diff: 
delta:
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,12)
  _0111: a rectangle with size (4,2) and color grey and mask .x|x.|x.|.x at (5,0)
diff: 
delta:
   (6.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
  _0111: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
  _0111: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
diff: 
delta:
   (2.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,12)
  _0111: a rectangle with size (3,2) and color grey and mask .x|xx|x. at (4,0)
diff: 
delta:
   (6.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _01: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _011: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST f8a8fe49.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.6 sec (7.6 sec/task)
bits-train-error = 186.9 bits (186.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-10] Checking task f8b3ba0a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 74294.2 = 74306.8
DL output with Mo: L = 12.6 + 3448.1 = 3460.7
DL input+output M: L = 25.2 + 77742.3 = 77767.5

# learning a model for train pairs
2.000	
1.757	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.505	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.393	OUT SPE ^.size = '(3, 1)
1.292	OUT SPE ^.color = red
1.213	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.155	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.087	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos) - (1, 0)
1.062	OUT SPE ^.layer_0.pos.j = '0
1.051	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.012	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.j
1.010	IN  SPE ^.layer_01.shape.mask = Full
0.956	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.946	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.944	IN  SPE ^.layer_0.shape.mask = Full
0.943	IN  SPE ^.layer_0110.shape.mask = Full
0.941	IN  SPE ^.color = black
0.161	
0.160	IN  DEL ^.layer_0111
0.160	IN  DEL ^.layer_0110
0.160	IN  GEN ^.layer_0.shape.mask = ?
0.160	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 1) and color red and layers
  _0: a point with color ? at (^.layer_011.pos.j,'0)
  _01: a point with color ? at projI(^.layer_01.pos) - (1, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 123.4 + 58059.8 = 58183.3
DL output with Mo: L = 95.9 + 451.5 = 547.4
DL input+output M: L = 219.3 + 58511.3 = 58730.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 1) and color red and layers
  _0: a point with color ? at (^.layer_011.pos.j,'0)
  _01: a point with color ? at projI(^.layer_01.pos) - (1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 81.0 + 40.0 = 121.0
DL output with Mo: L = 95.9 + 451.5 = 547.4
DL input+output M: L = 176.9 + 491.5 = 668.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a point with color green at (1,2)
diff: 
delta: (1,1)=3  (1,6)=0  (1,9)=0  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,7)=4  (3,8)=4  (3,10)=4  (3,11)=4  (5,1)=1  (5,2)=1  (5,4)=4  (5,5)=4  (5,7)=1  (5,8)=1  (5,10)=1  (5,11)=1  (7,1)=2  (7,2)=2  (7,4)=1  (7,5)=1  (7,7)=1  (7,8)=1  (7,10)=1  (7,11)=1  (9,1)=1  (9,2)=1  (9,4)=2  (9,5)=2  (9,7)=1  (9,8)=1  (9,10)=1  (9,11)=1  (11,3)=0  (11,6)=0  (11,9)=0 
   (2.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color green at (2,0)
  _01: a point with color yellow at (0,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a point with color green at (1,1)
diff: 
delta: (1,2)=3  (1,6)=0  (1,9)=0  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,7)=4  (3,8)=4  (3,10)=4  (3,11)=4  (5,1)=1  (5,2)=1  (5,4)=4  (5,5)=4  (5,7)=1  (5,8)=1  (5,10)=1  (5,11)=1  (7,1)=2  (7,2)=2  (7,4)=1  (7,5)=1  (7,7)=1  (7,8)=1  (7,10)=1  (7,11)=1  (9,1)=1  (9,2)=1  (9,4)=2  (9,5)=2  (9,7)=1  (9,8)=1  (9,10)=1  (9,11)=1  (11,3)=0  (11,6)=0  (11,9)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a point with color green at (1,2)
diff: 
delta: (1,1)=3  (1,6)=0  (1,9)=0  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,7)=4  (3,8)=4  (3,10)=4  (3,11)=4  (5,1)=1  (5,2)=1  (5,4)=4  (5,5)=4  (5,7)=1  (5,8)=1  (5,10)=1  (5,11)=1  (7,1)=2  (7,2)=2  (7,4)=1  (7,5)=1  (7,7)=1  (7,8)=1  (7,10)=1  (7,11)=1  (9,1)=1  (9,2)=1  (9,4)=2  (9,5)=2  (9,7)=1  (9,8)=1  (9,10)=1  (9,11)=1  (11,3)=0  (11,6)=0  (11,9)=0 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (7,4)
  _011: a point with color green at (1,1)
diff: 
delta: (1,2)=3  (1,4)=1  (1,5)=1  (1,7)=1  (1,8)=1  (1,10)=1  (1,11)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,7)=4  (3,8)=4  (3,10)=4  (3,11)=4  (5,1)=1  (5,2)=1  (5,4)=4  (5,5)=4  (5,7)=1  (5,8)=1  (5,10)=1  (5,11)=1  (7,1)=2  (7,2)=2  (7,6)=0  (7,9)=0  (9,1)=1  (9,2)=1  (9,4)=2  (9,5)=2  (9,7)=1  (9,8)=1  (9,10)=1  (9,11)=1  (11,3)=0  (11,6)=0  (11,9)=0 
! 3 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a point with color pink at (1,1)
diff: 
delta: (1,2)=6  (1,6)=0  (1,9)=0  (1,12)=0  (3,1)=8  (3,2)=8  (3,4)=8  (3,5)=8  (3,7)=2  (3,8)=2  (3,10)=6  (3,11)=6  (3,13)=8  (3,14)=8  (5,1)=1  (5,2)=1  (5,4)=8  (5,5)=8  (5,7)=1  (5,8)=1  (5,10)=8  (5,11)=8  (5,13)=8  (5,14)=8  (7,1)=8  (7,2)=8  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=8  (7,11)=8  (7,13)=8  (7,14)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=6  (9,8)=6  (9,10)=8  (9,11)=8  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
   (0.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color blue at (1,0)
  _01: a point with color pink at (0,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a point with color pink at (1,1)
diff: 
delta: (1,2)=6  (1,6)=0  (1,9)=0  (1,12)=0  (3,1)=8  (3,2)=8  (3,4)=8  (3,5)=8  (3,7)=2  (3,8)=2  (3,10)=6  (3,11)=6  (3,13)=8  (3,14)=8  (5,1)=1  (5,2)=1  (5,4)=8  (5,5)=8  (5,7)=1  (5,8)=1  (5,10)=8  (5,11)=8  (5,13)=8  (5,14)=8  (7,1)=8  (7,2)=8  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=8  (7,11)=8  (7,13)=8  (7,14)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=6  (9,8)=6  (9,10)=8  (9,11)=8  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a point with color pink at (1,2)
diff: 
delta: (1,1)=6  (1,6)=0  (1,9)=0  (1,12)=0  (3,1)=8  (3,2)=8  (3,4)=8  (3,5)=8  (3,7)=2  (3,8)=2  (3,10)=6  (3,11)=6  (3,13)=8  (3,14)=8  (5,1)=1  (5,2)=1  (5,4)=8  (5,5)=8  (5,7)=1  (5,8)=1  (5,10)=8  (5,11)=8  (5,13)=8  (5,14)=8  (7,1)=8  (7,2)=8  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=8  (7,11)=8  (7,13)=8  (7,14)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=6  (9,8)=6  (9,10)=8  (9,11)=8  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _011: a point with color pink at (1,1)
diff: 
delta: (1,2)=6  (1,6)=0  (1,9)=0  (1,12)=0  (3,1)=8  (3,2)=8  (3,4)=8  (3,5)=8  (3,7)=2  (3,8)=2  (3,10)=6  (3,11)=6  (3,13)=8  (3,14)=8  (5,1)=1  (5,2)=1  (5,4)=8  (5,5)=8  (5,7)=1  (5,8)=1  (5,10)=8  (5,11)=8  (5,13)=8  (5,14)=8  (7,1)=8  (7,2)=8  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=8  (7,11)=8  (7,13)=8  (7,14)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=6  (9,8)=6  (9,10)=8  (9,11)=8  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
! 2 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _011: a point with color blue at (3,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,2)=1  (3,6)=0  (5,1)=3  (5,2)=3  (5,4)=8  (5,5)=8  (5,7)=3  (5,8)=3  (7,1)=3  (7,2)=3  (7,4)=8  (7,5)=8  (7,7)=3  (7,8)=3  (9,1)=3  (9,2)=3  (9,4)=2  (9,5)=2  (9,7)=2  (9,8)=2  (11,1)=2  (11,2)=2  (11,4)=3  (11,5)=3  (11,7)=3  (11,8)=3 
   (0.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color cyan at (1,0)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _011: a point with color blue at (3,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,2)=1  (3,6)=0  (5,1)=3  (5,2)=3  (5,4)=8  (5,5)=8  (5,7)=3  (5,8)=3  (7,1)=3  (7,2)=3  (7,4)=8  (7,5)=8  (7,7)=3  (7,8)=3  (9,1)=3  (9,2)=3  (9,4)=2  (9,5)=2  (9,7)=2  (9,8)=2  (11,1)=2  (11,2)=2  (11,4)=3  (11,5)=3  (11,7)=3  (11,8)=3 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _011: a point with color blue at (3,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,2)=1  (3,6)=0  (5,1)=3  (5,2)=3  (5,4)=8  (5,5)=8  (5,7)=3  (5,8)=3  (7,1)=3  (7,2)=3  (7,4)=8  (7,5)=8  (7,7)=3  (7,8)=3  (9,1)=3  (9,2)=3  (9,4)=2  (9,5)=2  (9,7)=2  (9,8)=2  (11,1)=2  (11,2)=2  (11,4)=3  (11,5)=3  (11,7)=3  (11,8)=3 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _011: a point with color blue at (3,2)
diff: 
delta: (1,3)=0  (1,6)=0  (3,1)=1  (3,6)=0  (5,1)=3  (5,2)=3  (5,4)=8  (5,5)=8  (5,7)=3  (5,8)=3  (7,1)=3  (7,2)=3  (7,4)=8  (7,5)=8  (7,7)=3  (7,8)=3  (9,1)=3  (9,2)=3  (9,4)=2  (9,5)=2  (9,7)=2  (9,8)=2  (11,1)=2  (11,2)=2  (11,4)=3  (11,5)=3  (11,7)=3  (11,8)=3 
! 2 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a point with color blue at (3,2)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,1)=1  (3,4)=2  (3,5)=2  (3,7)=1  (3,8)=1  (3,10)=2  (3,11)=2  (5,1)=2  (5,2)=2  (5,6)=0  (5,9)=0  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=1  (7,11)=1  (9,1)=1  (9,2)=1  (9,4)=8  (9,5)=8  (9,7)=1  (9,8)=1  (9,10)=4  (9,11)=4  (11,1)=1  (11,2)=1  (11,4)=8  (11,5)=8  (11,7)=1  (11,8)=1  (11,10)=1  (11,11)=1 
   (2.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color yellow at (2,0)
  _01: a point with color cyan at (0,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a point with color blue at (3,1)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,2)=1  (3,4)=2  (3,5)=2  (3,7)=1  (3,8)=1  (3,10)=2  (3,11)=2  (5,1)=2  (5,2)=2  (5,6)=0  (5,9)=0  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=1  (7,11)=1  (9,1)=1  (9,2)=1  (9,4)=8  (9,5)=8  (9,7)=1  (9,8)=1  (9,10)=4  (9,11)=4  (11,1)=1  (11,2)=1  (11,4)=8  (11,5)=8  (11,7)=1  (11,8)=1  (11,10)=1  (11,11)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a point with color blue at (3,2)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,1)=1  (3,4)=2  (3,5)=2  (3,7)=1  (3,8)=1  (3,10)=2  (3,11)=2  (5,1)=2  (5,2)=2  (5,6)=0  (5,9)=0  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,7)=8  (7,8)=8  (7,10)=1  (7,11)=1  (9,1)=1  (9,2)=1  (9,4)=8  (9,5)=8  (9,7)=1  (9,8)=1  (9,10)=4  (9,11)=4  (11,1)=1  (11,2)=1  (11,4)=8  (11,5)=8  (11,7)=1  (11,8)=1  (11,10)=1  (11,11)=1 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (7,1)
  _011: a point with color blue at (1,1)
diff: 
delta: (1,2)=1  (1,4)=1  (1,5)=1  (1,7)=8  (1,8)=8  (1,10)=1  (1,11)=1  (3,1)=1  (3,2)=1  (3,4)=2  (3,5)=2  (3,7)=1  (3,8)=1  (3,10)=2  (3,11)=2  (5,1)=2  (5,2)=2  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,1)=1  (9,2)=1  (9,4)=8  (9,5)=8  (9,7)=1  (9,8)=1  (9,10)=4  (9,11)=4  (11,1)=1  (11,2)=1  (11,4)=8  (11,5)=8  (11,7)=1  (11,8)=1  (11,10)=1  (11,11)=1 
! 3 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (1,8) and color red and mask Full at (9,4)
  _01: a rectangle with size (1,5) and color red and mask Full at (5,4)
  _011: a point with color red at (1,1)
diff: 
delta: (1,2)=2  (1,4)=4  (1,5)=4  (1,7)=2  (1,8)=2  (1,10)=2  (1,11)=2  (3,1)=1  (3,2)=1  (3,4)=2  (3,5)=2  (3,7)=4  (3,8)=4  (3,10)=2  (3,11)=2  (5,1)=8  (5,2)=8  (5,6)=0  (5,10)=8  (5,11)=8  (7,1)=2  (7,2)=2  (7,4)=2  (7,5)=2  (7,7)=1  (7,8)=1  (7,10)=2  (7,11)=2  (9,1)=4  (9,2)=4  (9,6)=0  (9,9)=0  (11,1)=2  (11,2)=2  (11,4)=1  (11,5)=1  (11,7)=2  (11,8)=2  (11,10)=4  (11,11)=4  (13,1)=2  (13,2)=2  (13,4)=2  (13,5)=2  (13,7)=4  (13,8)=4  (13,10)=2  (13,11)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (1,8) and color red and mask Full at (9,4)
  _01: a rectangle with size (1,5) and color red and mask Full at (5,4)
  _011: a point with color red at (1,2)
diff: 
delta: (1,1)=2  (1,4)=4  (1,5)=4  (1,7)=2  (1,8)=2  (1,10)=2  (1,11)=2  (3,1)=1  (3,2)=1  (3,4)=2  (3,5)=2  (3,7)=4  (3,8)=4  (3,10)=2  (3,11)=2  (5,1)=8  (5,2)=8  (5,6)=0  (5,10)=8  (5,11)=8  (7,1)=2  (7,2)=2  (7,4)=2  (7,5)=2  (7,7)=1  (7,8)=1  (7,10)=2  (7,11)=2  (9,1)=4  (9,2)=4  (9,6)=0  (9,9)=0  (11,1)=2  (11,2)=2  (11,4)=1  (11,5)=1  (11,7)=2  (11,8)=2  (11,10)=4  (11,11)=4  (13,1)=2  (13,2)=2  (13,4)=2  (13,5)=2  (13,7)=4  (13,8)=4  (13,10)=2  (13,11)=2 
! 3 wrong pixels (generated / expected)

TEST f8b3ba0a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 451.5 bits (451.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-9] Checking task f8c80d96.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21379.4 = 21392.0
DL output with Mo: L = 12.6 + 47672.2 = 47684.8
DL input+output M: L = 25.2 + 69051.5 = 69076.8

# learning a model for train pairs
2.000	
1.489	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.152	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.916	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.531	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.433	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.403	OUT ADD ^.layer_00 = ^.layer_0
0.391	OUT SPE ^.size = ^.size
0.382	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.373	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.367	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.359	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.353	OUT SPE ^.color = grey
0.350	OUT SPE ^.layer_011.shape.size.i = ^.layer_011.shape.size.i
0.346	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.343	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.339	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.336	OUT SPE ^.layer_01111.pos.i = '0
0.331	OUT SPE ^.layer_0111.shape.size.j = area(^.layer_0.shape) - 3
0.327	IN  SPE ^.color = black
0.324	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
0.319	OUT SPE ^.layer_01111.shape.size.i = max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_0.shape.size.i
0.316	OUT SPE ^.layer_01111.shape.color = ^.layer_011.shape.color
0.314	OUT SPE ^.layer_01.shape.size.i = min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
0.312	OUT SPE ^.layer_0.shape.size.i = 1
0.310	OUT SPE ^.layer_0.shape.mask = Full
0.308	OUT SPE ^.layer_01111.shape.size.j = 1
0.305	OUT SPE ^.layer_01111.shape.mask = Full
0.303	OUT SPE ^.layer_011.shape.size.j = max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j) - average(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)
0.302	OUT SPE ^.layer_0111.shape.size.i = min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_011.pos.i - ^.layer_0.pos.i
0.070	
0.070	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color grey and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j),?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at (?,?)
  _011: a rectangle with size (^.layer_011.shape.size.i,max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j) - average(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
  _0111: a rectangle with size (min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_011.pos.i - ^.layer_0.pos.i,area(^.layer_0.shape) - 3) and color ^.layer_011.shape.color and mask ? at (?,?)
  _01111: a rectangle with size (max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_0.shape.size.i,1) and color ^.layer_011.shape.color and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 5006.2 = 5095.6
DL output with Mo: L = 438.2 + 2599.3 = 3037.5
DL input+output M: L = 527.6 + 7605.5 = 8133.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color grey and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j),?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at (?,?)
  _011: a rectangle with size (^.layer_011.shape.size.i,max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j) - average(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
  _0111: a rectangle with size (min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_011.pos.i - ^.layer_0.pos.i,area(^.layer_0.shape) - 3) and color ^.layer_011.shape.color and mask ? at (?,?)
  _01111: a rectangle with size (max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_0.shape.size.i,1) and color ^.layer_011.shape.color and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 40.0 = 129.3
DL output with Mo: L = 438.2 + 2599.3 = 3037.5
DL input+output M: L = 527.5 + 2639.3 = 3166.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
  _011: a rectangle with size (2,2) and color cyan and mask xx|.x at (8,0)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color grey and layers
  _00: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
  _011: a rectangle with size (2,2) and color cyan and mask xx|.x at (8,0)
  _0111: a rectangle with size (8,8) and color cyan and mask xxxxxxxx|.......x|.......x|.......x|.......x|.......x|.......x|.......x at (2,0)
  _01111: a rectangle with size (10,1) and color cyan and mask Full at (0,9)
diff: 
delta:
   (123.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
  _011: a rectangle with size (2,2) and color cyan and mask xx|.x at (8,0)
diff: 
delta:
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
  _01: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _011: a rectangle with size (2,2) and color cyan and mask xx|.x at (8,0)
diff: 
delta:
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (8,0)
  _011: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN f8c80d96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,4)
  _01: a rectangle with size (1,6) and color blue and mask Full at (5,4)
  _011: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
   (2.0 bits)
data: a background with size (10,10) and color grey and layers
  _00: a rectangle with size (6,1) and color blue and mask Full at (0,4)
  _0: a rectangle with size (1,9) and color blue and mask Full at (8,1)
  _01: a rectangle with size (1,6) and color blue and mask Full at (5,4)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,7)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (9,1) and color blue and mask Full at (0,1)
diff: 
delta:
   (64.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,4)
  _01: a rectangle with size (1,6) and color blue and mask Full at (5,4)
  _011: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN f8c80d96.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,3)
diff: 
delta: (1,4)=2 
   (2.0 bits)
data: a background with size (10,10) and color grey and layers
  _00: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _0: a rectangle with size (1,10) and color red and mask Full at (5,0)
  _01: a rectangle with size (1,10) and color red and mask Full at (7,0)
  _011: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
  _0111: a rectangle with size (1,10) and color red and mask Full at (9,0)
  _01111: a rectangle with size (6,1) and color red and mask Full at (0,9)
diff: 
delta:
   (72.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,5)
diff: 
delta: (1,4)=2 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,3)
diff: 
delta: (1,4)=2 
! 42 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (1,3)
diff: 
delta: (0,5)=2 
! 44 wrong pixels (generated / expected)

TRAIN f8c80d96.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST f8c80d96.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 46.4 sec (46.4 sec/task)
bits-train-error = 2599.3 bits (2599.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-8] Checking task f8ff0b80.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25106.4 = 25119.0
DL output with Mo: L = 12.6 + 2586.1 = 2598.7
DL input+output M: L = 25.2 + 27692.4 = 27717.6

# learning a model for train pairs
2.000	
1.600	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.354	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.114	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.863	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.713	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.602	OUT SPE ^.size = '(3, 1)
0.501	OUT SPE ^.color = red
0.430	OUT SPE ^.layer_0.pos = '(0, 0)
0.362	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos)
0.301	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
0.298	IN  SPE ^.color = black
0.100	
0.100	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 1) and color red and layers
  _0: a point with color majorityColor(^.grid) at '(0, 0)
  _01: a point with color ? at projI(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 5039.2 = 5128.6
DL output with Mo: L = 74.1 + 169.3 = 243.4
DL input+output M: L = 163.5 + 5208.5 = 5372.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 1) and color red and layers
  _0: a point with color majorityColor(^.grid) at '(0, 0)
  _01: a point with color ? at projI(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 71.7 = 161.0
DL output with Mo: L = 74.1 + 169.3 = 243.4
DL input+output M: L = 163.4 + 241.0 = 404.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
  _011: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
diff: 
delta:
   (3.2 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color green at (0,0)
  _01: a point with color cyan at (2,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _01: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _01: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
  _011: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
  _01: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color blue at (0,0)
  _01: a point with color orange at (1,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _01: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
  _01: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _01: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
  _011: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
diff: 
delta:
   (2.0 bits)
data: a background with size (3,1) and color red and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _01: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _01: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
  _011: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|.xx.|x.xx|..x. at (8,5)
  _01: a rectangle with size (2,3) and color blue and mask .xx|xxx at (5,3)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (1,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|xxx at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (1,1)
  _011: a rectangle with size (4,4) and color pink and mask ..x.|.xx.|x.xx|..x. at (8,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST f8ff0b80.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 169.3 bits (169.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-7] Checking task f9012d9b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17009.4 = 17022.0
DL output with Mo: L = 12.6 + 1239.1 = 1251.7
DL input+output M: L = 25.2 + 18248.5 = 18273.7

# learning a model for train pairs
2.000	
1.352	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.911	OUT SPE ^.layer_0.shape.color = ^.color
0.561	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ^.color at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 5949.2 = 5988.0
DL output with Mo: L = 37.0 + 662.5 = 699.5
DL input+output M: L = 75.8 + 6611.7 = 6687.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ^.color at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 37.0 + 662.5 = 699.5
DL input+output M: L = 75.8 + 662.5 = 738.3

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask .x.x.|xxxxx|.x.x.|..xxx|...x. at (0,0)
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
   (0.0 bits)
data: a background with size (2,2) and color blue and layers
  _0: a point with color red at (1,0)
diff: 
delta:
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask .x.x.|xxxxx|.x.x.|..xxx|...x. at (0,0)
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (3,0)
diff: 
delta: (0,0)=2  (0,2)=2  (0,4)=2  (2,0)=2  (2,2)=2  (2,4)=2  (4,2)=2  (4,4)=2 
! size mismatch, 10x10 instead of 2x2

TRAIN f9012d9b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta: (0,2)=0 
   (0.0 bits)
data: a background with size (1,1) and color black and layers
  _0: a point with color cyan at (0,0)
diff: 
delta:
   (13.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 1x1
>> Trial 2
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x.x|x.x.|.x.x at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 1x1

TRAIN f9012d9b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (7,7) and color grey and mask ..x..x.|..x..x.|xxxxxxx|..x..x.|..x..x.|xxxxx..|..x.... at (0,0)
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
   (0.0 bits)
data: a background with size (2,2) and color grey and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (7,7) and color grey and mask ..x..x.|..x..x.|xxxxxxx|..x..x.|..x..x.|xxxxx..|..x.... at (0,0)
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
! size mismatch, 10x10 instead of 2x2

TRAIN f9012d9b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (7,7) and color cyan and mask x.xx...|.xx....|xx.x...|x.xx.xx|.xx.xx.|xx.xx.x|x.xx.xx at (0,0)
diff: 
delta: (0,4)=0  (0,5)=0  (0,6)=0  (1,4)=0  (1,5)=0  (1,6)=0  (2,4)=0  (2,5)=0  (2,6)=0 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (7,7) and color cyan and layers
  _0: a rectangle with size (3,3) and color black and mask Full at (0,4)
diff: 
delta: (0,1)=1  (1,0)=1  (1,3)=1  (2,2)=1  (3,1)=1  (3,4)=1  (4,0)=1  (4,3)=1  (4,6)=1  (5,2)=1  (5,5)=1  (6,1)=1  (6,4)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color cyan and mask x.xx...|.xx....|xx.x...|x.xx.xx|.xx.xx.|xx.xx.x|x.xx.xx at (0,0)
diff: 
delta: (0,1)=1  (1,0)=1  (1,3)=1  (2,2)=1  (3,1)=1  (3,4)=1  (4,0)=1  (4,3)=1  (4,6)=1  (5,2)=1  (5,5)=1  (6,1)=1  (6,4)=1 
! size mismatch, 10x10 instead of 3x3

TEST f9012d9b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 662.5 bits (662.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-6] Checking task fafffa47.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16887.1 = 16899.7
DL output with Mo: L = 12.6 + 5055.7 = 5068.3
DL input+output M: L = 25.2 + 21942.8 = 21968.0

# learning a model for train pairs
2.000	
1.599	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.240	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.001	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.875	OUT SPE ^.size = ^.size - (3, 0)
0.820	OUT SPE ^.layer_0.shape.color = red
0.765	IN  SPE ^.layer_01.shape.color = blue
0.727	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.703	OUT SPE ^.color = black
0.686	IN  SPE ^.layer_0.shape.color = brown
0.679	IN  SPE ^.color = black
0.402	
0.401	IN  DEL ^.layer_01
0.401	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - (3, 0) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color brown and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 4679.9 = 4750.9
DL output with Mo: L = 52.9 + 1964.4 = 2017.3
DL input+output M: L = 123.9 + 6644.3 = 6768.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - (3, 0) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color brown and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 0.0 = 42.2
DL output with Mo: L = 52.9 + 1964.4 = 2017.3
DL input+output M: L = 95.0 + 1964.4 = 2059.5

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .xx|.xx|xxx at (0,0)
diff: 
delta: (3,1)=1  (4,2)=1  (5,0)=1  (5,1)=1  (5,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
   (15.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .xx|.xx|xxx at (0,0)
diff: 
delta: (3,1)=1  (4,2)=1  (5,0)=1  (5,1)=1  (5,2)=1 
! 2 wrong pixels (generated / expected)

TRAIN fafffa47.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
diff: 
delta: (3,0)=1  (3,2)=1  (4,0)=1  (5,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (2,1)=2 
   (49.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
diff: 
delta: (3,0)=1  (3,2)=1  (4,0)=1  (5,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
diff: 
delta: (4,2)=1  (5,0)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|.x.|.xx at (0,0)
diff: 
delta:
   (31.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
diff: 
delta: (4,2)=1  (5,0)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (1,0)
diff: 
delta: (0,1)=9# (1,2)=9# (4,2)=1  (5,0)=1 
! 5 wrong pixels (generated / expected)

TRAIN fafffa47.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
diff: 
delta: (3,0)=1  (4,1)=1  (4,2)=1  (5,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (2,0)=2 
   (49.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
diff: 
delta: (3,0)=1  (4,1)=1  (4,2)=1  (5,2)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|.xx|..x at (3,0)
diff:   ^.layer_0.shape.color
delta: (0,2)=9# (1,0)=9# (1,1)=9# (1,2)=9# (2,1)=9#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (1,3) and color brown and mask Full at (1,0)
diff: 
delta: (0,2)=9# (2,1)=9# (3,0)=1  (4,1)=1  (4,2)=1  (5,2)=1 
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask x.|xx|xx at (0,1)
diff: 
delta: (4,0)=1  (4,1)=1  (4,2)=1  (5,0)=1  (5,2)=1 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2 
   (49.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask x.|xx|xx at (0,1)
diff: 
delta: (4,0)=1  (4,1)=1  (4,2)=1  (5,0)=1  (5,2)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (4,0)
diff:   ^.layer_0.shape.color
delta: (0,1)=9# (1,1)=9# (1,2)=9# (2,1)=9# (2,2)=9#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (1,1)
diff: 
delta: (0,1)=9# (4,0)=1  (4,1)=1  (4,2)=1  (5,0)=1  (5,2)=1 
! 6 wrong pixels (generated / expected)

TRAIN fafffa47.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color brown and layers
  _0: a rectangle with size (6,3) and color black and mask .x.|xx.|.x.|x..|x.x|.xx at (0,0)
diff:   ^.layer_0.shape.color
delta: (3,1)=1  (3,2)=1  (4,1)=1  (5,0)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|.x.|x.. at (3,0)
diff:   ^.layer_0.shape.color
delta: (0,0)=9# (0,2)=9# (1,2)=9# (2,0)=9# (2,2)=9#
! 2 wrong pixels (generated / expected)

TEST fafffa47.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.0 sec (4.0 sec/task)
bits-train-error = 1964.4 bits (1964.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-5] Checking task fcb5c309.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 62646.9 = 62659.5
DL output with Mo: L = 12.6 + 23082.3 = 23094.9
DL input+output M: L = 25.2 + 85729.2 = 85754.4

# learning a model for train pairs
2.000	
1.103	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	OUT SPE ^.size = ^.layer_0.shape.size
0.340	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size - (2, 2)
0.327	OUT SPE ^.layer_0.pos = '(1, 1)
0.317	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.306	OUT SPE ^.color = ^.layer_0111.shape.color
0.296	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.286	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.279	OUT SPE ^.layer_0.shape.color = black
0.275	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.266	IN  ADD ^.layer_011101 = a point with color ? at (?,?)
0.263	IN  SPE ^.layer_0.shape.mask = Border
0.260	IN  SPE ^.layer_01.shape.mask = Border
0.259	IN  SPE ^.layer_011111.shape.mask = Full
0.257	IN  SPE ^.layer_0111.shape.mask = Full
0.256	IN  SPE ^.color = black
0.032	
0.031	IN  DEL ^.layer_011111
0.031	IN  DEL ^.layer_01111
0.031	IN  DEL ^.layer_011101
0.031	IN  DEL ^.layer_01110
0.030	IN  GEN ^.layer_01.shape.mask = ?
0.030	IN  GEN ^.layer_0.shape.mask = ?
0.030	IN  GEN ^.layer_0111.shape.mask = ?
0.030	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0111.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size - (2, 2) and color black and mask ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _011101: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 193.6 + 14052.3 = 14246.0
DL output with Mo: L = 78.7 + 581.6 = 660.3
DL input+output M: L = 272.4 + 14633.9 = 14906.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0111.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size - (2, 2) and color black and mask ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 78.7 + 581.6 = 660.3
DL input+output M: L = 192.9 + 581.6 = 774.4

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (2,0)
  _01: a rectangle with size (4,3) and color red and mask Border at (3,10)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (9,9)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (0,4)
diff: 
delta: (0,12)=4  (4,1)=4  (6,4)=4  (9,4)=4  (12,4)=4  (12,11)=4 
   (0.0 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xxxxx|.xxxx|xxxxx|xxx.x|xxxxx at (1,1)
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (2,0)
  _01: a rectangle with size (4,3) and color red and mask Border at (3,10)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (9,9)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (0,4)
diff: 
delta: (0,12)=4  (4,1)=4  (6,4)=4  (9,4)=4  (12,4)=4  (12,11)=4 
! 2 wrong pixels (generated / expected)

TRAIN fcb5c309.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask Border at (2,8)
  _01: a rectangle with size (5,6) and color blue and mask Border at (7,1)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (11,10)
  _0111: a rectangle with size (2,1) and color green and mask Full at (11,0)
diff: 
delta: (0,13)=3  (1,4)=3  (2,3)=3  (3,11)=3  (4,1)=3  (4,5)=3  (5,6)=3  (5,9)=3  (5,11)=3  (9,5)=3  (12,7)=3 
   (0.0 bits)
data: a background with size (6,7) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask xx.xx|xxxxx|.x.xx|xxxxx at (1,1)
diff: 
delta:
   (18.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask Border at (2,8)
  _01: a rectangle with size (5,6) and color blue and mask Border at (7,1)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (11,10)
  _0111: a rectangle with size (2,1) and color green and mask Full at (11,0)
diff: 
delta: (0,13)=3  (1,4)=3  (2,3)=3  (3,11)=3  (4,1)=3  (4,5)=3  (5,6)=3  (5,9)=3  (5,11)=3  (9,5)=3  (12,7)=3 
! 3 wrong pixels (generated / expected)

TRAIN fcb5c309.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color green and mask Border at (3,10)
  _011: a rectangle with size (4,3) and color green and mask Border at (10,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (1,10)=2  (2,3)=2  (2,5)=2  (4,8)=2  (4,12)=2  (5,3)=2  (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
   (0.0 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask x.x.x|xxxxx|xxxxx|x.xxx|xxxx. at (1,1)
diff: 
delta:
   (22.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color green and mask Border at (3,10)
  _011: a rectangle with size (4,3) and color green and mask Border at (10,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (1,10)=2  (2,3)=2  (2,5)=2  (4,8)=2  (4,12)=2  (5,3)=2  (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
! 4 wrong pixels (generated / expected)

TRAIN fcb5c309.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (1,4)
  _01: a rectangle with size (5,6) and color blue and mask Border at (11,10)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,0)
  _0111: a rectangle with size (2,3) and color cyan and mask ..x|xx. at (13,3)
diff: 
delta: (0,14)=8  (2,6)=8  (2,8)=8  (2,12)=8  (3,12)=8  (3,14)=8  (4,14)=8  (6,6)=8  (6,16)=8  (7,9)=8  (8,13)=8  (9,1)=8  (10,5)=8  (11,1)=8  (13,11)=8  (13,13)=8  (14,7)=8  (16,8)=8  (16,9)=8  (16,16)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (11,10)
  _01: a rectangle with size (8,8) and color blue and mask Border at (1,4)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,0)
  _0111: a rectangle with size (2,3) and color cyan and mask ..x|xx. at (13,3)
diff: 
delta: (0,14)=8  (2,6)=8  (2,8)=8  (2,12)=8  (3,12)=8  (3,14)=8  (4,14)=8  (6,6)=8  (6,16)=8  (7,9)=8  (8,13)=8  (9,1)=8  (10,5)=8  (11,1)=8  (13,11)=8  (13,13)=8  (14,7)=8  (16,8)=8  (16,9)=8  (16,16)=8 
! size mismatch, 5x6 instead of 8x8

TEST fcb5c309.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 581.6 bits (581.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-4] Checking task fcc82909.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11284.3 = 11296.9
DL output with Mo: L = 12.6 + 24737.2 = 24749.8
DL input+output M: L = 25.2 + 36021.5 = 36046.7

# learning a model for train pairs
2.000	
1.691	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.545	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.402	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.288	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.174	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	OUT ADD ^.layer_00 = ^.layer_0
0.977	OUT ADD ^.layer_011 = ^.layer_01
0.886	OUT ADD ^.layer_0111 = ^.layer_011
0.831	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.774	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.728	OUT ADD ^.layer_01111 = ^.layer_01111
0.681	OUT ADD ^.layer_01110 = ^.layer_0111
0.657	OUT SPE ^.size = ^.size
0.644	OUT SPE ^.layer_01.pos = ^.layer_01.pos + projI(^.layer_01.shape.size)
0.632	OUT SPE ^.layer_01.shape.size = '(2, 2)
0.623	IN  SPE ^.layer_011.shape.mask = Full
0.616	OUT SPE ^.layer_0.shape.size.j = area(^.layer_0.shape)
0.610	OUT SPE ^.layer_0.shape.color = green
0.603	OUT SPE ^.layer_01.shape.color = green
0.596	IN  SPE ^.color = black
0.591	OUT SPE ^.layer_0.pos.i = ^.layer_0111.pos.i + 2
0.585	OUT SPE ^.layer_0.pos = min(^.layer_0111.pos, ^.layer_01111.pos) + (2, 0)
0.581	OUT SPE ^.layer_01.shape.mask = Full
0.092	
0.092	IN  GEN ^.layer_011.shape.mask = ?
0.092	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,area(^.layer_0.shape)) and color green and mask ? at min(^.layer_0111.pos, ^.layer_01111.pos) + (2, 0)
  _01: a rectangle with size '(2, 2) and color green and mask Full at ^.layer_01.pos + projI(^.layer_01.shape.size)
  _011: ^.layer_01
  _01110: ^.layer_0111
  _0111: ^.layer_011
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 121.4 + 5520.2 = 5641.6
DL output with Mo: L = 194.2 + 1817.4 = 2011.6
DL input+output M: L = 315.6 + 7337.6 = 7653.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,area(^.layer_0.shape)) and color green and mask ? at min(^.layer_0111.pos, ^.layer_01111.pos) + (2, 0)
  _01: a rectangle with size '(2, 2) and color green and mask Full at ^.layer_01.pos + projI(^.layer_01.shape.size)
  _011: ^.layer_01
  _01110: ^.layer_0111
  _0111: ^.layer_011
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 120.3 + 0.0 = 120.3
DL output with Mo: L = 194.2 + 1817.4 = 2011.6
DL input+output M: L = 314.5 + 1817.4 = 2131.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _0111: a point with color cyan at (5,5)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _0: a rectangle with size (3,2) and color green and mask Full at (7,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (4,1)
  _011: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _01110: a point with color cyan at (5,5)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
   (12.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _0111: a point with color cyan at (5,5)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _011: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _0111: a point with color cyan at (5,5)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN fcc82909.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
  _0111: a point with color cyan at (1,3)
  _01111: a point with color brown at (2,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _0: a rectangle with size (3,2) and color green and mask Full at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,6)
  _011: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _01110: a point with color cyan at (1,3)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,6)
  _01111: a point with color brown at (2,2)
diff: 
delta:
   (12.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
  _0111: a point with color cyan at (1,3)
  _01111: a point with color brown at (2,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN fcc82909.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _0111: a point with color red at (1,2)
  _01111: a point with color yellow at (1,3)
diff: 
delta: (2,2)=6  (2,3)=7# (5,4)=7#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _0: a rectangle with size (6,4) and color green and mask xx..|xx..|xx..|xx..|..xx|..xx at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,6)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _01110: a point with color red at (1,2)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _01111: a point with color yellow at (1,3)
diff: 
delta: (2,2)=6  (2,3)=7# (5,4)=7#
   (157.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _0111: a point with color red at (1,2)
  _01111: a point with color yellow at (1,3)
diff: 
delta: (2,2)=6  (2,3)=7# (5,4)=7#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _0111: a point with color red at (1,2)
  _01111: a point with color pink at (2,2)
diff: 
delta: (1,3)=4  (2,3)=7# (5,4)=7#
! 15 wrong pixels (generated / expected)

TRAIN fcc82909.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (3,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,6)
  _0111: a point with color brown at (1,7)
  _01111: a point with color blue at (2,6)
diff: 
delta: (2,0)=2  (2,7)=6  (3,4)=7# (4,3)=8 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (3,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,6)
  _0111: a point with color brown at (1,7)
  _01111: a point with color pink at (2,7)
diff: 
delta: (2,0)=2  (2,6)=1  (3,4)=7# (4,3)=8 
! 20 wrong pixels (generated / expected)

TEST fcc82909.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.2 sec (57.2 sec/task)
bits-train-error = 1817.4 bits (1817.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-3] Checking task feca6190.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4125.3 = 4137.9
DL output with Mo: L = 12.6 + 39775.1 = 39787.7
DL input+output M: L = 25.2 + 43900.4 = 43925.6

# learning a model for train pairs
2.000	
1.671	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.414	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.201	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.081	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	IN  SPE ^.color = black
1.040	OUT SPE ^.size.j = ^.size.j * colorCount(^.grid)
1.029	OUT SPE ^.size.i = ^.size.j * colorCount(^.grid)
1.022	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
1.015	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j
1.009	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.j + 2
1.006	OUT SPE ^.color = black
0.300	
0.300	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.j * colorCount(^.grid),^.size.j * colorCount(^.grid)) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j + 2,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 2921.4 = 2951.1
DL output with Mo: L = 171.3 + 11463.1 = 11634.4
DL input+output M: L = 201.0 + 14384.5 = 14585.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.j * colorCount(^.grid),^.size.j * colorCount(^.grid)) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j + 2,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 171.3 + 11463.1 = 11634.4
DL input+output M: L = 200.8 + 11463.1 = 11664.0

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,0)
diff: 
delta: (0,2)=7#
   (0.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (2,9)
  _011: a rectangle with size (1,1) and color orange and mask Full at (3,8)
diff: 
delta: (4,7)=7# (5,6)=7# (6,5)=7# (7,4)=7# (8,3)=7# (9,2)=7#
   (357.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,0)
diff: 
delta: (0,2)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color orange at (0,2)
diff: 
delta: (0,0)=1 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (1,5) and color blue and layers
  _0: a point with color black at (0,1)
diff: 
delta: (0,2)=7# (0,3)=0  (0,4)=0 
! 24 wrong pixels (generated / expected)

TRAIN feca6190.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (1,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
   (59.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN feca6190.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,0)
diff: 
delta: (0,2)=6  (0,4)=8 
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color yellow and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (0,0)
  _01: a rectangle with size (13,13) and color pink and mask ............x|...........x.|..........x..|.........x...|........x....|.......x.....|......x......|.....x.......|....x........|...x.........|..x..........|.x...........|x............ at (2,2)
  _011: a rectangle with size (11,11) and color cyan and mask ..........x|.........x.|........x..|.......x...|......x....|.....x.....|....x......|...x.......|..x........|.x.........|x.......... at (4,4)
diff: 
delta:
   (323.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,0)
diff: 
delta: (0,2)=6  (0,4)=8 
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color pink at (0,2)
diff: 
delta: (0,0)=4  (0,4)=8 
! 51 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,4)
diff: 
delta: (0,0)=4  (0,2)=6 
! 51 wrong pixels (generated / expected)

TRAIN feca6190.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (1,5) and color black and layers
  _0: a point with color brown at (0,1)
diff: 
delta: (0,3)=8  (0,4)=4 
   (0.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (14,14) and color brown and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (1,1)
  _01: a rectangle with size (12,12) and color cyan and mask ...........x|..........x.|.........x..|........x...|.......x....|......x.....|.....x......|....x.......|...x........|..x.........|.x..........|x........... at (3,3)
  _011: a rectangle with size (11,11) and color yellow and mask ..........x|.........x.|........x..|.......x...|......x....|.....x.....|....x......|...x.......|..x........|.x.........|x.......... at (4,4)
diff: 
delta:
   (309.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color brown at (0,1)
diff: 
delta: (0,3)=8  (0,4)=4 
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (0,1)=9# (0,4)=4 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,4)
diff: 
delta: (0,1)=9# (0,3)=8 
! 49 wrong pixels (generated / expected)

TRAIN feca6190.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,4)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (2,3)
diff: 
delta: (4,1)=4 
   (96.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN feca6190.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color pink at (0,1)
diff: 
delta: (0,2)=7# (0,3)=8  (0,4)=9#
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color orange at (0,2)
diff: 
delta: (0,1)=6  (0,3)=8  (0,4)=9#
! 82 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (0,1)=6  (0,2)=7# (0,4)=9#
! 82 wrong pixels (generated / expected)

TEST feca6190.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.6 sec (11.6 sec/task)
bits-train-error = 11463.1 bits (11463.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-2] Checking task ff28f65a.json: 8 train, 3 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33642.2 = 33654.8
DL output with Mo: L = 12.6 + 8662.5 = 8675.1
DL input+output M: L = 25.2 + 42304.7 = 42329.9

# learning a model for train pairs
2.000	
1.510	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.071	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.952	OUT SPE ^.size = '(3, 3)
0.880	OUT SPE ^.layer_0.pos = '(0, 0)
0.829	OUT SPE ^.layer_0.shape.color = blue
0.806	OUT SPE ^.color = black
0.793	IN  SPE ^.layer_0.shape.color = red
0.787	IN  SPE ^.color = black
0.246	
0.245	IN  DEL ^.layer_0
0.245	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 18193.7 = 18235.9
DL output with Mo: L = 53.2 + 2072.0 = 2125.1
DL input+output M: L = 95.5 + 20265.6 = 20361.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 53.2 + 2072.0 = 2125.1
DL input+output M: L = 65.8 + 2072.0 = 2137.8

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2 
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (5,5) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=1 
   (45.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=2  (3,4)=2  (3,5)=2  (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask Even Checkboard at (0,0)
diff: 
delta:
   (19.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=2  (3,4)=2  (3,5)=2  (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:

data: a background with size (6,6) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=1 
   (45.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:

data: a background with size (3,3) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2 
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (0,4)=2  (0,5)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (3,1)=2  (3,2)=2  (3,4)=2  (3,5)=2  (4,4)=2  (4,5)=2  (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,4)=2  (0,5)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (3,1)=2  (3,2)=2  (3,4)=2  (3,5)=2  (4,4)=2  (4,5)=2  (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (0,4)=2  (0,5)=2  (1,1)=2  (1,2)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (3,5)=2  (3,6)=2  (4,0)=2  (4,1)=2  (4,5)=2  (4,6)=2  (5,0)=2  (5,1)=2  (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Even Checkboard at (0,0)
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,4)=2  (0,5)=2  (1,1)=2  (1,2)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (3,5)=2  (3,6)=2  (4,0)=2  (4,1)=2  (4,5)=2  (4,6)=2  (5,0)=2  (5,1)=2  (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2 
! 5 wrong pixels (generated / expected)

TRAIN ff28f65a.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:

data: a background with size (7,7) and color black and layers
diff: 
delta: (0,2)=2  (0,3)=2  (0,5)=2  (0,6)=2  (1,2)=2  (1,3)=2  (1,5)=2  (1,6)=2  (2,0)=2  (2,1)=2  (3,0)=2  (3,1)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
   (0.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,2)=2  (0,3)=2  (0,5)=2  (0,6)=2  (1,2)=2  (1,3)=2  (1,5)=2  (1,6)=2  (2,0)=2  (2,1)=2  (3,0)=2  (3,1)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/8: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta: (0,3)=2  (0,4)=2  (1,0)=2  (1,1)=2  (1,3)=2  (1,4)=2  (2,0)=2  (2,1)=2  (3,2)=2  (3,3)=2  (4,2)=2  (4,3)=2 
! 3 wrong pixels (generated / expected)

TEST ff28f65a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (1,0)=2  (1,1)=2  (1,3)=2  (1,4)=2  (2,0)=2  (2,1)=2  (2,3)=2  (2,4)=2  (3,5)=2  (3,6)=2  (4,2)=2  (4,3)=2  (4,5)=2  (4,6)=2  (5,2)=2  (5,3)=2 
! 4 wrong pixels (generated / expected)

TEST ff28f65a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,3)=2  (0,4)=2  (1,0)=2  (1,1)=2  (1,3)=2  (1,4)=2  (2,5)=2  (2,6)=2  (3,1)=2  (3,2)=2  (3,5)=2  (3,6)=2  (4,1)=2  (4,2)=2  (5,4)=2  (5,5)=2  (6,4)=2  (6,5)=2 
! 5 wrong pixels (generated / expected)

TEST ff28f65a.json/3: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 2072.0 bits (2072.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-1] Checking task ff805c23.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 404063.2 = 404075.8
DL output with Mo: L = 12.6 + 8245.0 = 8257.6
DL input+output M: L = 25.2 + 412308.2 = 412333.4

# learning a model for train pairs
2.000	
1.326	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.891	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	OUT SPE ^.layer_0.pos = '(0, 0)
0.848	OUT SPE ^.color = black
0.283	
0.283	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 228338.5 = 228377.3
DL output with Mo: L = 40.4 + 2298.9 = 2339.3
DL input+output M: L = 79.2 + 230637.3 = 230716.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 40.4 + 2298.9 = 2339.3
DL input+output M: L = 53.0 + 2298.9 = 2351.9

# train input/output grids

## instance 1

> Input and output best reading:

data: a background with size (24,24) and color red and layers
diff: 
delta: (0,0)=0  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=0  (0,6)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,17)=0  (0,18)=1  (0,19)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=0  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=0  (1,8)=0  (1,11)=0  (1,12)=0  (1,15)=0  (1,18)=1  (1,19)=1  (1,20)=1  (1,21)=1  (1,22)=1  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=0  (2,4)=0  (2,5)=3  (2,7)=0  (2,8)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,15)=0  (2,16)=0  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=3  (3,0)=3  (3,1)=3  (3,2)=0  (3,3)=3  (3,4)=3  (3,5)=3  (3,18)=1  (3,19)=1  (3,20)=1  (3,21)=1  (3,22)=1  (3,23)=3  (4,0)=3  (4,1)=3  (4,2)=0  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=0  (4,8)=0  (4,15)=0  (4,17)=0  (4,18)=1  (4,19)=1  (4,20)=1  (4,21)=1  (4,22)=1  (4,23)=3  (5,0)=0  (5,1)=0  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=0  (5,7)=0  (5,8)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=3  (5,19)=3  (5,20)=3  (5,21)=3  (5,22)=0  (5,23)=0  (6,0)=0  (6,4)=0  (6,5)=0  (6,7)=0  (6,8)=0  (6,15)=0  (6,16)=0  (6,18)=0  (6,19)=0  (6,23)=0  (7,2)=0  (7,5)=0  (7,6)=0  (7,9)=0  (7,14)=0  (7,17)=0  (7,18)=0  (7,21)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,9)=0  (8,10)=0  (8,13)=0  (8,14)=0  (8,17)=0  (8,18)=0  (8,19)=0  (8,21)=0  (8,22)=0  (9,7)=0  (9,8)=0  (9,15)=0  (9,16)=0  (10,0)=0  (10,2)=0  (10,8)=0  (10,10)=0  (10,13)=0  (10,15)=0  (10,21)=0  (10,23)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,11)=0  (11,12)=0  (11,21)=0  (11,22)=0  (11,23)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,11)=0  (12,12)=0  (12,21)=0  (12,22)=0  (12,23)=0  (13,0)=0  (13,2)=0  (13,8)=0  (13,10)=0  (13,13)=0  (13,15)=0  (13,21)=0  (13,23)=0  (14,7)=0  (14,8)=0  (14,15)=0  (14,16)=0  (15,1)=0  (15,2)=0  (15,4)=0  (15,5)=0  (15,6)=0  (15,9)=0  (15,10)=0  (15,13)=0  (15,14)=0  (15,17)=0  (15,18)=0  (15,19)=0  (15,21)=0  (15,22)=0  (16,2)=0  (16,5)=0  (16,6)=0  (16,9)=0  (16,14)=0  (16,17)=0  (16,18)=0  (16,21)=0  (17,0)=0  (17,4)=0  (17,5)=0  (17,7)=0  (17,8)=0  (17,15)=0  (17,16)=0  (17,18)=0  (17,19)=0  (17,23)=0  (18,0)=0  (18,1)=0  (18,2)=3  (18,3)=3  (18,4)=3  (18,5)=3  (18,6)=0  (18,7)=0  (18,8)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,18)=3  (18,19)=3  (18,20)=3  (18,21)=3  (18,22)=0  (18,23)=0  (19,0)=3  (19,1)=3  (19,2)=0  (19,3)=3  (19,4)=3  (19,5)=3  (19,6)=0  (19,8)=0  (19,15)=0  (19,17)=0  (19,18)=3  (19,19)=3  (19,20)=3  (19,21)=0  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,2)=0  (20,3)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,21)=0  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=0  (21,4)=0  (21,5)=3  (21,7)=0  (21,8)=0  (21,10)=0  (21,11)=0  (21,12)=0  (21,13)=0  (21,15)=0  (21,16)=0  (21,18)=3  (21,19)=0  (21,20)=0  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=0  (22,8)=0  (22,11)=0  (22,12)=0  (22,15)=0  (22,18)=0  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,0)=0  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,5)=0  (23,6)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,13)=0  (23,17)=0  (23,18)=0  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3  (23,23)=0 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask .xxxx|.xxxx|x..xx|xxx.x|xxx.x at (0,0)
diff: 
delta:
   (64.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color red and layers
diff: 
delta: (0,0)=0  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=0  (0,6)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,17)=0  (0,18)=1  (0,19)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=0  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=0  (1,8)=0  (1,11)=0  (1,12)=0  (1,15)=0  (1,18)=1  (1,19)=1  (1,20)=1  (1,21)=1  (1,22)=1  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=0  (2,4)=0  (2,5)=3  (2,7)=0  (2,8)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,15)=0  (2,16)=0  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=3  (3,0)=3  (3,1)=3  (3,2)=0  (3,3)=3  (3,4)=3  (3,5)=3  (3,18)=1  (3,19)=1  (3,20)=1  (3,21)=1  (3,22)=1  (3,23)=3  (4,0)=3  (4,1)=3  (4,2)=0  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=0  (4,8)=0  (4,15)=0  (4,17)=0  (4,18)=1  (4,19)=1  (4,20)=1  (4,21)=1  (4,22)=1  (4,23)=3  (5,0)=0  (5,1)=0  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=0  (5,7)=0  (5,8)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=3  (5,19)=3  (5,20)=3  (5,21)=3  (5,22)=0  (5,23)=0  (6,0)=0  (6,4)=0  (6,5)=0  (6,7)=0  (6,8)=0  (6,15)=0  (6,16)=0  (6,18)=0  (6,19)=0  (6,23)=0  (7,2)=0  (7,5)=0  (7,6)=0  (7,9)=0  (7,14)=0  (7,17)=0  (7,18)=0  (7,21)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,9)=0  (8,10)=0  (8,13)=0  (8,14)=0  (8,17)=0  (8,18)=0  (8,19)=0  (8,21)=0  (8,22)=0  (9,7)=0  (9,8)=0  (9,15)=0  (9,16)=0  (10,0)=0  (10,2)=0  (10,8)=0  (10,10)=0  (10,13)=0  (10,15)=0  (10,21)=0  (10,23)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,11)=0  (11,12)=0  (11,21)=0  (11,22)=0  (11,23)=0  (12,0)=0  (12,1)=0  (12,2)=0  (12,11)=0  (12,12)=0  (12,21)=0  (12,22)=0  (12,23)=0  (13,0)=0  (13,2)=0  (13,8)=0  (13,10)=0  (13,13)=0  (13,15)=0  (13,21)=0  (13,23)=0  (14,7)=0  (14,8)=0  (14,15)=0  (14,16)=0  (15,1)=0  (15,2)=0  (15,4)=0  (15,5)=0  (15,6)=0  (15,9)=0  (15,10)=0  (15,13)=0  (15,14)=0  (15,17)=0  (15,18)=0  (15,19)=0  (15,21)=0  (15,22)=0  (16,2)=0  (16,5)=0  (16,6)=0  (16,9)=0  (16,14)=0  (16,17)=0  (16,18)=0  (16,21)=0  (17,0)=0  (17,4)=0  (17,5)=0  (17,7)=0  (17,8)=0  (17,15)=0  (17,16)=0  (17,18)=0  (17,19)=0  (17,23)=0  (18,0)=0  (18,1)=0  (18,2)=3  (18,3)=3  (18,4)=3  (18,5)=3  (18,6)=0  (18,7)=0  (18,8)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,18)=3  (18,19)=3  (18,20)=3  (18,21)=3  (18,22)=0  (18,23)=0  (19,0)=3  (19,1)=3  (19,2)=0  (19,3)=3  (19,4)=3  (19,5)=3  (19,6)=0  (19,8)=0  (19,15)=0  (19,17)=0  (19,18)=3  (19,19)=3  (19,20)=3  (19,21)=0  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,2)=0  (20,3)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,21)=0  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=0  (21,4)=0  (21,5)=3  (21,7)=0  (21,8)=0  (21,10)=0  (21,11)=0  (21,12)=0  (21,13)=0  (21,15)=0  (21,16)=0  (21,18)=3  (21,19)=0  (21,20)=0  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=0  (22,8)=0  (22,11)=0  (22,12)=0  (22,15)=0  (22,18)=0  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,0)=0  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,5)=0  (23,6)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,13)=0  (23,17)=0  (23,18)=0  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3  (23,23)=0 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:

data: a background with size (24,24) and color black and layers
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,5)=3  (0,7)=8  (0,8)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,15)=8  (0,16)=8  (0,18)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,2)=3  (1,4)=3  (1,6)=8  (1,8)=8  (1,15)=8  (1,17)=8  (1,19)=3  (1,21)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=8  (2,7)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=3  (2,19)=3  (2,20)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,9)=8  (3,11)=8  (3,12)=8  (3,14)=8  (3,18)=3  (3,19)=3  (3,21)=3  (3,23)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,6)=8  (4,8)=8  (4,11)=8  (4,12)=8  (4,15)=8  (4,17)=8  (4,20)=3  (4,21)=3  (4,22)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,5)=3  (5,6)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,17)=8  (5,18)=3  (5,20)=3  (5,21)=3  (5,23)=3  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=6  (6,11)=6  (6,12)=6  (6,13)=6  (6,14)=6  (6,15)=6  (6,16)=6  (6,17)=6  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,0)=8  (7,2)=8  (7,6)=6  (7,7)=6  (7,9)=6  (7,10)=6  (7,11)=6  (7,12)=6  (7,13)=6  (7,14)=6  (7,16)=6  (7,17)=6  (7,21)=8  (7,23)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=8  (8,5)=8  (8,6)=6  (8,9)=6  (8,11)=6  (8,12)=6  (8,14)=6  (8,17)=6  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,3)=8  (9,5)=8  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=6  (9,11)=6  (9,12)=6  (9,13)=6  (9,14)=6  (9,15)=6  (9,16)=6  (9,17)=6  (9,18)=8  (9,20)=8  (10,0)=8  (10,2)=8  (10,5)=8  (10,6)=6  (10,7)=6  (10,9)=6  (10,10)=6  (10,11)=6  (10,12)=6  (10,13)=6  (10,14)=6  (10,16)=6  (10,17)=6  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,13)=6  (11,14)=6  (11,15)=6  (11,16)=6  (11,17)=6  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,2)=8  (12,3)=8  (12,4)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,13)=6  (12,14)=6  (12,15)=6  (12,16)=6  (12,17)=6  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,2)=8  (13,5)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=6  (13,12)=6  (13,13)=6  (13,14)=6  (13,16)=6  (13,17)=6  (13,18)=8  (13,21)=8  (13,23)=8  (14,3)=8  (14,5)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=6  (14,12)=6  (14,13)=6  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,18)=8  (14,20)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,4)=8  (15,5)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,11)=6  (15,12)=6  (15,14)=6  (15,17)=6  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,0)=8  (16,2)=8  (16,6)=6  (16,7)=6  (16,9)=6  (16,10)=6  (16,11)=6  (16,12)=6  (16,13)=6  (16,14)=6  (16,16)=6  (16,17)=6  (16,21)=8  (16,23)=8  (17,1)=8  (17,2)=8  (17,4)=8  (17,5)=8  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,0)=3  (18,2)=3  (18,3)=3  (18,5)=3  (18,6)=8  (18,8)=8  (18,9)=8  (18,10)=8  (18,13)=8  (18,14)=8  (18,15)=8  (18,17)=8  (18,18)=3  (18,20)=3  (18,21)=3  (18,23)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,6)=8  (19,8)=8  (19,11)=8  (19,12)=8  (19,15)=8  (19,17)=8  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=3  (20,2)=3  (20,4)=3  (20,5)=3  (20,9)=8  (20,11)=8  (20,12)=8  (20,14)=8  (20,18)=3  (20,19)=3  (20,21)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=3  (21,4)=3  (21,5)=3  (21,6)=8  (21,7)=8  (21,8)=8  (21,10)=8  (21,11)=8  (21,12)=8  (21,13)=8  (21,15)=8  (21,16)=8  (21,17)=8  (21,18)=3  (21,19)=3  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,2)=3  (22,4)=3  (22,6)=8  (22,8)=8  (22,15)=8  (22,17)=8  (22,19)=3  (22,21)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,5)=3  (23,7)=8  (23,8)=8  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8  (23,15)=8  (23,16)=8  (23,18)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xxxxx|xxxxx|xx.xx|xxxxx|x..x. at (0,0)
diff: 
delta:
   (60.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,5)=3  (0,7)=8  (0,8)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,15)=8  (0,16)=8  (0,18)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,2)=3  (1,4)=3  (1,6)=8  (1,8)=8  (1,15)=8  (1,17)=8  (1,19)=3  (1,21)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=8  (2,7)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=3  (2,19)=3  (2,20)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,9)=8  (3,11)=8  (3,12)=8  (3,14)=8  (3,18)=3  (3,19)=3  (3,21)=3  (3,23)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,6)=8  (4,8)=8  (4,11)=8  (4,12)=8  (4,15)=8  (4,17)=8  (4,20)=3  (4,21)=3  (4,22)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,5)=3  (5,6)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,17)=8  (5,18)=3  (5,20)=3  (5,21)=3  (5,23)=3  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=6  (6,11)=6  (6,12)=6  (6,13)=6  (6,14)=6  (6,15)=6  (6,16)=6  (6,17)=6  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,0)=8  (7,2)=8  (7,6)=6  (7,7)=6  (7,9)=6  (7,10)=6  (7,11)=6  (7,12)=6  (7,13)=6  (7,14)=6  (7,16)=6  (7,17)=6  (7,21)=8  (7,23)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=8  (8,5)=8  (8,6)=6  (8,9)=6  (8,11)=6  (8,12)=6  (8,14)=6  (8,17)=6  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,3)=8  (9,5)=8  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,10)=6  (9,11)=6  (9,12)=6  (9,13)=6  (9,14)=6  (9,15)=6  (9,16)=6  (9,17)=6  (9,18)=8  (9,20)=8  (10,0)=8  (10,2)=8  (10,5)=8  (10,6)=6  (10,7)=6  (10,9)=6  (10,10)=6  (10,11)=6  (10,12)=6  (10,13)=6  (10,14)=6  (10,16)=6  (10,17)=6  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,13)=6  (11,14)=6  (11,15)=6  (11,16)=6  (11,17)=6  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,2)=8  (12,3)=8  (12,4)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,13)=6  (12,14)=6  (12,15)=6  (12,16)=6  (12,17)=6  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,2)=8  (13,5)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=6  (13,12)=6  (13,13)=6  (13,14)=6  (13,16)=6  (13,17)=6  (13,18)=8  (13,21)=8  (13,23)=8  (14,3)=8  (14,5)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=6  (14,12)=6  (14,13)=6  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,18)=8  (14,20)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,4)=8  (15,5)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,11)=6  (15,12)=6  (15,14)=6  (15,17)=6  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,0)=8  (16,2)=8  (16,6)=6  (16,7)=6  (16,9)=6  (16,10)=6  (16,11)=6  (16,12)=6  (16,13)=6  (16,14)=6  (16,16)=6  (16,17)=6  (16,21)=8  (16,23)=8  (17,1)=8  (17,2)=8  (17,4)=8  (17,5)=8  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,0)=3  (18,2)=3  (18,3)=3  (18,5)=3  (18,6)=8  (18,8)=8  (18,9)=8  (18,10)=8  (18,13)=8  (18,14)=8  (18,15)=8  (18,17)=8  (18,18)=3  (18,20)=3  (18,21)=3  (18,23)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,6)=8  (19,8)=8  (19,11)=8  (19,12)=8  (19,15)=8  (19,17)=8  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=3  (20,2)=3  (20,4)=3  (20,5)=3  (20,9)=8  (20,11)=8  (20,12)=8  (20,14)=8  (20,18)=3  (20,19)=3  (20,21)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=3  (21,4)=3  (21,5)=3  (21,6)=8  (21,7)=8  (21,8)=8  (21,10)=8  (21,11)=8  (21,12)=8  (21,13)=8  (21,15)=8  (21,16)=8  (21,17)=8  (21,18)=3  (21,19)=3  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,2)=3  (22,4)=3  (22,6)=8  (22,8)=8  (22,15)=8  (22,17)=8  (22,19)=3  (22,21)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,5)=3  (23,7)=8  (23,8)=8  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8  (23,15)=8  (23,16)=8  (23,18)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:

data: a background with size (24,24) and color black and layers
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,6)=5# (0,7)=5# (0,8)=5# (0,11)=5# (0,12)=5# (0,15)=5# (0,16)=5# (0,17)=5# (0,19)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=5# (1,7)=5# (1,16)=5# (1,17)=5# (1,18)=3  (1,19)=3  (1,20)=3  (1,21)=3  (1,22)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,6)=5# (2,9)=5# (2,10)=5# (2,13)=5# (2,14)=5# (2,17)=5# (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,1)=3  (3,4)=3  (3,5)=3  (3,8)=5# (3,10)=5# (3,11)=5# (3,12)=5# (3,13)=5# (3,15)=5# (3,18)=3  (3,19)=3  (3,22)=3  (3,23)=3  (4,0)=3  (4,1)=3  (4,3)=3  (4,4)=3  (4,8)=5# (4,9)=5# (4,14)=5# (4,15)=5# (4,19)=3  (4,20)=3  (4,22)=3  (4,23)=3  (5,1)=3  (5,3)=3  (5,5)=3  (5,6)=5# (5,9)=5# (5,14)=5# (5,17)=5# (5,18)=3  (5,20)=3  (5,22)=3  (6,0)=5# (6,1)=5# (6,2)=5# (6,5)=5# (6,7)=5# (6,10)=5# (6,11)=5# (6,12)=5# (6,13)=5# (6,16)=5# (6,18)=5# (6,21)=5# (6,22)=5# (6,23)=5# (7,0)=5# (7,1)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,11)=5# (7,12)=5# (7,15)=5# (7,16)=5# (7,17)=5# (7,22)=5# (7,23)=5# (8,0)=5# (8,3)=5# (8,4)=5# (8,7)=5# (8,8)=5# (8,9)=5# (8,11)=5# (8,12)=5# (8,14)=5# (8,15)=5# (8,16)=5# (8,19)=5# (8,20)=5# (8,23)=5# (9,2)=5# (9,4)=5# (9,5)=5# (9,8)=5# (9,9)=5# (9,10)=5# (9,11)=5# (9,12)=5# (9,13)=5# (9,14)=5# (9,15)=5# (9,18)=5# (9,19)=5# (9,21)=5# (10,2)=5# (10,3)=5# (10,6)=5# (10,9)=5# (10,11)=5# (10,12)=5# (10,14)=5# (10,17)=5# (10,20)=5# (10,21)=5# (11,0)=5# (11,3)=5# (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=5# (11,13)=5# (11,14)=5# (11,15)=5# (11,16)=5# (11,17)=5# (11,20)=5# (11,23)=5# (12,0)=5# (12,3)=5# (12,6)=5# (12,7)=5# (12,8)=5# (12,9)=5# (12,10)=5# (12,13)=5# (12,14)=5# (12,15)=5# (12,16)=5# (12,17)=5# (12,20)=5# (12,23)=5# (13,2)=5# (13,3)=5# (13,6)=5# (13,9)=5# (13,11)=5# (13,12)=5# (13,14)=5# (13,17)=5# (13,20)=5# (13,21)=5# (14,2)=5# (14,4)=5# (14,5)=5# (14,8)=5# (14,9)=5# (14,10)=5# (14,11)=5# (14,12)=5# (14,13)=5# (14,14)=5# (14,15)=5# (14,18)=5# (14,19)=5# (14,21)=5# (15,0)=5# (15,3)=5# (15,4)=5# (15,7)=5# (15,8)=5# (15,9)=5# (15,10)=1  (15,11)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,15)=5# (15,16)=5# (15,19)=5# (15,20)=5# (15,23)=5# (16,0)=5# (16,1)=5# (16,6)=5# (16,7)=5# (16,8)=5# (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (16,15)=5# (16,16)=5# (16,17)=5# (16,22)=5# (16,23)=5# (17,0)=5# (17,1)=5# (17,2)=5# (17,5)=5# (17,7)=5# (17,10)=1  (17,11)=1  (17,12)=1  (17,13)=1  (17,14)=1  (17,16)=5# (17,18)=5# (17,21)=5# (17,22)=5# (17,23)=5# (18,1)=3  (18,3)=3  (18,5)=3  (18,6)=5# (18,9)=5# (18,10)=1  (18,11)=1  (18,12)=1  (18,13)=1  (18,14)=1  (18,17)=5# (18,18)=3  (18,20)=3  (18,22)=3  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,8)=5# (19,9)=5# (19,10)=1  (19,11)=1  (19,12)=1  (19,13)=1  (19,14)=1  (19,15)=5# (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,4)=3  (20,5)=3  (20,8)=5# (20,10)=5# (20,11)=5# (20,12)=5# (20,13)=5# (20,15)=5# (20,18)=3  (20,19)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,6)=5# (21,9)=5# (21,10)=5# (21,13)=5# (21,14)=5# (21,17)=5# (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,6)=5# (22,7)=5# (22,16)=5# (22,17)=5# (22,18)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,6)=5# (23,7)=5# (23,8)=5# (23,11)=5# (23,12)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (0.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask .xx..|.xx..|xxxx.|....x|....x at (0,0)
diff: 
delta: (0,4)=5#
   (105.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,6)=5# (0,7)=5# (0,8)=5# (0,11)=5# (0,12)=5# (0,15)=5# (0,16)=5# (0,17)=5# (0,19)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=5# (1,7)=5# (1,16)=5# (1,17)=5# (1,18)=3  (1,19)=3  (1,20)=3  (1,21)=3  (1,22)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,6)=5# (2,9)=5# (2,10)=5# (2,13)=5# (2,14)=5# (2,17)=5# (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,1)=3  (3,4)=3  (3,5)=3  (3,8)=5# (3,10)=5# (3,11)=5# (3,12)=5# (3,13)=5# (3,15)=5# (3,18)=3  (3,19)=3  (3,22)=3  (3,23)=3  (4,0)=3  (4,1)=3  (4,3)=3  (4,4)=3  (4,8)=5# (4,9)=5# (4,14)=5# (4,15)=5# (4,19)=3  (4,20)=3  (4,22)=3  (4,23)=3  (5,1)=3  (5,3)=3  (5,5)=3  (5,6)=5# (5,9)=5# (5,14)=5# (5,17)=5# (5,18)=3  (5,20)=3  (5,22)=3  (6,0)=5# (6,1)=5# (6,2)=5# (6,5)=5# (6,7)=5# (6,10)=5# (6,11)=5# (6,12)=5# (6,13)=5# (6,16)=5# (6,18)=5# (6,21)=5# (6,22)=5# (6,23)=5# (7,0)=5# (7,1)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,11)=5# (7,12)=5# (7,15)=5# (7,16)=5# (7,17)=5# (7,22)=5# (7,23)=5# (8,0)=5# (8,3)=5# (8,4)=5# (8,7)=5# (8,8)=5# (8,9)=5# (8,11)=5# (8,12)=5# (8,14)=5# (8,15)=5# (8,16)=5# (8,19)=5# (8,20)=5# (8,23)=5# (9,2)=5# (9,4)=5# (9,5)=5# (9,8)=5# (9,9)=5# (9,10)=5# (9,11)=5# (9,12)=5# (9,13)=5# (9,14)=5# (9,15)=5# (9,18)=5# (9,19)=5# (9,21)=5# (10,2)=5# (10,3)=5# (10,6)=5# (10,9)=5# (10,11)=5# (10,12)=5# (10,14)=5# (10,17)=5# (10,20)=5# (10,21)=5# (11,0)=5# (11,3)=5# (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=5# (11,13)=5# (11,14)=5# (11,15)=5# (11,16)=5# (11,17)=5# (11,20)=5# (11,23)=5# (12,0)=5# (12,3)=5# (12,6)=5# (12,7)=5# (12,8)=5# (12,9)=5# (12,10)=5# (12,13)=5# (12,14)=5# (12,15)=5# (12,16)=5# (12,17)=5# (12,20)=5# (12,23)=5# (13,2)=5# (13,3)=5# (13,6)=5# (13,9)=5# (13,11)=5# (13,12)=5# (13,14)=5# (13,17)=5# (13,20)=5# (13,21)=5# (14,2)=5# (14,4)=5# (14,5)=5# (14,8)=5# (14,9)=5# (14,10)=5# (14,11)=5# (14,12)=5# (14,13)=5# (14,14)=5# (14,15)=5# (14,18)=5# (14,19)=5# (14,21)=5# (15,0)=5# (15,3)=5# (15,4)=5# (15,7)=5# (15,8)=5# (15,9)=5# (15,10)=1  (15,11)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,15)=5# (15,16)=5# (15,19)=5# (15,20)=5# (15,23)=5# (16,0)=5# (16,1)=5# (16,6)=5# (16,7)=5# (16,8)=5# (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (16,15)=5# (16,16)=5# (16,17)=5# (16,22)=5# (16,23)=5# (17,0)=5# (17,1)=5# (17,2)=5# (17,5)=5# (17,7)=5# (17,10)=1  (17,11)=1  (17,12)=1  (17,13)=1  (17,14)=1  (17,16)=5# (17,18)=5# (17,21)=5# (17,22)=5# (17,23)=5# (18,1)=3  (18,3)=3  (18,5)=3  (18,6)=5# (18,9)=5# (18,10)=1  (18,11)=1  (18,12)=1  (18,13)=1  (18,14)=1  (18,17)=5# (18,18)=3  (18,20)=3  (18,22)=3  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,8)=5# (19,9)=5# (19,10)=1  (19,11)=1  (19,12)=1  (19,13)=1  (19,14)=1  (19,15)=5# (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,4)=3  (20,5)=3  (20,8)=5# (20,10)=5# (20,11)=5# (20,12)=5# (20,13)=5# (20,15)=5# (20,18)=3  (20,19)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,6)=5# (21,9)=5# (21,10)=5# (21,13)=5# (21,14)=5# (21,17)=5# (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,6)=5# (22,7)=5# (22,16)=5# (22,17)=5# (22,18)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,6)=5# (23,7)=5# (23,8)=5# (23,11)=5# (23,12)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color green and layers
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,3)=0  (0,4)=4  (0,5)=0  (0,6)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,17)=0  (0,18)=0  (0,19)=4  (0,20)=0  (0,21)=4  (0,22)=4  (0,23)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,3)=4  (1,4)=0  (1,5)=4  (1,10)=0  (1,13)=0  (1,18)=4  (1,19)=0  (1,20)=4  (1,21)=4  (1,22)=4  (1,23)=4  (2,0)=4  (2,1)=4  (2,2)=0  (2,3)=4  (2,4)=0  (2,5)=0  (2,8)=0  (2,9)=0  (2,14)=0  (2,15)=0  (2,18)=0  (2,19)=0  (2,20)=4  (2,21)=0  (2,22)=4  (2,23)=4  (3,0)=0  (3,1)=4  (3,2)=4  (3,3)=0  (3,4)=4  (3,5)=4  (3,8)=0  (3,9)=0  (3,14)=0  (3,15)=0  (3,18)=4  (3,19)=4  (3,20)=0  (3,21)=4  (3,22)=4  (3,23)=0  (4,0)=4  (4,1)=0  (4,2)=0  (4,3)=4  (4,4)=4  (4,5)=4  (4,6)=0  (4,7)=0  (4,10)=0  (4,13)=0  (4,16)=0  (4,17)=0  (4,18)=4  (4,19)=4  (4,20)=4  (4,21)=0  (4,22)=0  (4,23)=4  (5,0)=0  (5,1)=4  (5,2)=0  (5,3)=4  (5,4)=4  (5,5)=0  (5,6)=0  (5,17)=0  (5,18)=0  (5,19)=4  (5,20)=4  (5,21)=0  (5,22)=4  (5,23)=0  (6,0)=0  (6,4)=0  (6,5)=0  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=8  (6,15)=8  (6,16)=8  (6,17)=8  (6,18)=0  (6,19)=0  (6,23)=0  (7,4)=0  (7,6)=8  (7,7)=8  (7,8)=8  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=0  (7,15)=8  (7,16)=8  (7,17)=8  (7,19)=0  (8,2)=0  (8,3)=0  (8,6)=8  (8,7)=8  (8,8)=8  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=0  (8,15)=8  (8,16)=8  (8,17)=8  (8,20)=0  (8,21)=0  (9,2)=0  (9,3)=0  (9,6)=8  (9,7)=0  (9,8)=0  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=8  (9,15)=0  (9,16)=0  (9,17)=8  (9,20)=0  (9,21)=0  (10,0)=0  (10,1)=0  (10,4)=0  (10,6)=8  (10,7)=0  (10,8)=8  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=8  (10,15)=8  (10,16)=0  (10,17)=8  (10,19)=0  (10,22)=0  (10,23)=0  (11,0)=0  (11,6)=8  (11,7)=8  (11,8)=0  (11,9)=8  (11,10)=8  (11,11)=8  (11,12)=8  (11,13)=8  (11,14)=8  (11,15)=0  (11,16)=8  (11,17)=8  (11,23)=0  (12,0)=0  (12,6)=8  (12,7)=8  (12,8)=0  (12,9)=8  (12,10)=8  (12,11)=8  (12,12)=8  (12,13)=8  (12,14)=8  (12,15)=0  (12,16)=8  (12,17)=8  (12,23)=0  (13,0)=0  (13,1)=0  (13,4)=0  (13,6)=8  (13,7)=0  (13,8)=8  (13,9)=8  (13,10)=0  (13,11)=8  (13,12)=8  (13,13)=0  (13,14)=8  (13,15)=8  (13,16)=0  (13,17)=8  (13,19)=0  (13,22)=0  (13,23)=0  (14,2)=0  (14,3)=0  (14,6)=8  (14,7)=0  (14,8)=0  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=0  (14,16)=0  (14,17)=8  (14,20)=0  (14,21)=0  (15,2)=0  (15,3)=0  (15,6)=8  (15,7)=8  (15,8)=8  (15,9)=0  (15,10)=8  (15,11)=0  (15,12)=0  (15,13)=8  (15,14)=0  (15,15)=8  (15,16)=8  (15,17)=8  (15,20)=0  (15,21)=0  (16,4)=0  (16,6)=8  (16,7)=8  (16,8)=8  (16,9)=0  (16,10)=0  (16,11)=8  (16,12)=8  (16,13)=0  (16,14)=0  (16,15)=8  (16,16)=8  (16,17)=8  (16,19)=0  (17,0)=0  (17,4)=0  (17,5)=0  (17,6)=8  (17,7)=8  (17,8)=8  (17,9)=8  (17,10)=8  (17,11)=8  (17,12)=8  (17,13)=8  (17,14)=8  (17,15)=8  (17,16)=8  (17,17)=8  (17,18)=0  (17,19)=0  (17,23)=0  (18,0)=0  (18,1)=4  (18,2)=0  (18,3)=4  (18,4)=4  (18,5)=0  (18,6)=0  (18,17)=0  (18,18)=0  (18,19)=4  (18,20)=4  (18,21)=0  (18,22)=4  (18,23)=0  (19,0)=4  (19,1)=0  (19,2)=0  (19,3)=4  (19,4)=4  (19,5)=4  (19,6)=0  (19,7)=0  (19,10)=0  (19,13)=0  (19,16)=0  (19,17)=0  (19,18)=4  (19,19)=4  (19,20)=4  (19,21)=0  (19,22)=0  (19,23)=4  (20,0)=0  (20,1)=4  (20,2)=4  (20,3)=0  (20,4)=4  (20,5)=4  (20,8)=0  (20,9)=0  (20,14)=0  (20,15)=0  (20,18)=4  (20,19)=4  (20,20)=0  (20,21)=4  (20,22)=4  (20,23)=0  (21,0)=4  (21,1)=4  (21,2)=0  (21,3)=4  (21,4)=0  (21,5)=0  (21,8)=0  (21,9)=0  (21,14)=0  (21,15)=0  (21,18)=0  (21,19)=0  (21,20)=4  (21,21)=0  (21,22)=4  (21,23)=4  (22,0)=4  (22,1)=4  (22,2)=4  (22,3)=4  (22,4)=0  (22,5)=4  (22,10)=0  (22,13)=0  (22,18)=4  (22,19)=0  (22,20)=4  (22,21)=4  (22,22)=4  (22,23)=4  (23,0)=4  (23,1)=4  (23,2)=4  (23,3)=0  (23,4)=4  (23,5)=0  (23,6)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,13)=0  (23,17)=0  (23,18)=0  (23,19)=4  (23,20)=0  (23,21)=4  (23,22)=4  (23,23)=4 
! size mismatch, 10x10 instead of 5x5

TEST ff805c23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.1 sec (12.1 sec/task)
bits-train-error = 2298.9 bits (2298.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00


## performance measures averaged over 400 tasks
runtime-learning = 8248.0 sec (20.6 sec/task)
bits-train-error = 2730163.5 bits (6825.4 bits/task)
acc-train-micro = 107.83 tasks (26.96%)
acc-train-macro = 97.00 tasks (24.25%)
acc-train-mrr = 0.26
acc-test-micro = 94.50 tasks (23.62%)
acc-test-macro = 94.00 tasks (23.50%)
acc-test-mrr = 0.23

// Profiling...
#calls	#calls/s	Time (s)	Percentage	Section
//      1488	  696955.5	    0.0	  0.0%	Model2.model_refinements_prune
//      9983	  687818.7	    0.0	  0.0%	Model2.shape_refinements
//     58876	  292975.2	    0.2	  0.0%	Grid.split_part
//     13017	   28445.6	    0.5	  0.0%	Model2.defs_refinements/first/by_path
//      4346	    4699.8	    0.9	  0.0%	Model2.write_grid
//     13017	   10283.0	    1.3	  0.0%	Model2.defs_refinements/val_matrix
//      5547	    3342.2	    1.7	  0.0%	Grid.segment_by_color
//    837915	  241951.3	    3.5	  0.0%	Grid.points
//      1717	     415.8	    4.1	  0.1%	Model2.apply_model
//   1457311	   29172.0	   50.0	  0.6%	Grid.rectangles
// 228777868	 1540018.3	  148.6	  1.8%	Model2.parse_layers/seq
//     13016	      79.5	  163.7	  2.0%	Model2.defs_expressions
//     13012	      58.0	  224.4	  2.7%	Model2.defs_refinements/others
// 218344586	  753186.6	  289.9	  3.5%	Model2.parse_grid/seq
//     13016	       6.9	 1897.4	 23.0%	Model2.defs_refinements/first/by_expr
//     13017	       6.1	 2131.8	 25.8%	Model2.defs_refinements
//      6509	       3.1	 2131.9	 25.8%	Model2.model_refinements_build
//  16970165	    2816.8	 6024.6	 73.0%	Model2.read_grid/first_parses
//  19222059	    3153.9	 6094.7	 73.9%	Model2.read_grid
//   1837261	     300.5	 6113.6	 74.1%	Model2.read_grid_pairs
//       400	       0.0	 8248.0	 99.9%	Model2.learn_model
//       400	       0.0	 8252.2	100.0%	Test.print_learned_model

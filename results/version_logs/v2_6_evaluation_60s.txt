## seq = false
## max_seq_length = 1
## max_nb_layers = 8
## alpha = 10.
## max_nb_parse = 64
## max_parse_dl_factor = 3.
## max_relaxation_level_parse_layers = 16
## def_match_threshold = 1.
## max_nb_diff = 3
## max_nb_grid_reads = 3
## max_expressions = 100000
## max_refinements = 20
## options
alpha = 10.0
mode = evaluation
timeout_build = 60
timeout_prune = 10
timeout_predict = 3

=====================================
[-400] Checking task 00576224.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2091.0 = 2103.6
DL output with Mo: L = 12.6 + 16770.1 = 16782.7
DL input+output M: L = 25.2 + 18861.1 = 18886.3

# learning a model for train pairs
2.000	
1.806	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.606	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.414	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.362	IN  SPE ^.layer_01.shape.color = yellow
1.319	OUT ADD ^.layer_01 = ^.layer_0
1.300	OUT SPE ^.size = tiling(^.size, 3, 3)
1.294	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
1.203	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	OUT SPE ^.layer_011.shape = scaleTo(^.layer_0.shape, projJ(^.size) + (1, 3))
1.089	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	OUT SPE ^.layer_0111.shape = scaleTo(^.layer_0.shape, projJ(^.size) + (1, 3))
1.034	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.023	OUT SPE ^.layer_011.pos = '(2, 1)
1.012	OUT SPE ^.layer_0111.pos = tiling('(2, 0), 2, 1)
1.002	OUT SPE ^.layer_01111.pos = projJ(^.layer_01.pos) + (0, 1)
0.992	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.981	OUT SPE ^.layer_00.pos = tiling('(0, 2), 1, 2)
0.970	OUT SPE ^.color = yellow
0.967	OUT SPE ^.layer_01111.shape.size.i = 1
0.963	OUT SPE ^.layer_01111.shape.mask = Full
0.961	OUT ADD ^.layer_01110 = a point with color ? at (?,?)
0.956	OUT SPE ^.layer_01110.pos.j = ^.layer_01.pos.j + 1
0.950	OUT SPE ^.layer_01110.pos = ^.layer_01.pos + (3, 1)
0.948	OUT ADD ^.layer_0110 = a point with color ? at (?,?)
0.942	OUT SPE ^.layer_0110.pos.j = 3
0.938	OUT SPE ^.layer_0110.pos.i = ^.layer_01.pos.j + 1
0.407	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color yellow and layers
  _00: ^.layer_0.shape at tiling('(0, 2), 1, 2)
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_0
  _0110: a point with color ? at (^.layer_01.pos.j + 1,3)
  _011: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 3)) at '(2, 1)
  _01110: a point with color ? at ^.layer_01.pos + (3, 1)
  _0111: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 3)) at tiling('(2, 0), 2, 1)
  _01111: a rectangle with size (1,?) and color ? and mask Full at projJ(^.layer_01.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color yellow at (?,?)

DL input  with Mi: L = 49.0 + 1116.2 = 1165.2
DL output with Mo: L = 359.7 + 6080.4 = 6440.1
DL input+output M: L = 408.7 + 7196.6 = 7605.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color yellow and layers
  _00: ^.layer_0.shape at tiling('(0, 2), 1, 2)
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_0
  _0110: a point with color ? at (^.layer_01.pos.j + 1,3)
  _011: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 3)) at '(2, 1)
  _01110: a point with color ? at ^.layer_01.pos + (3, 1)
  _0111: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 3)) at tiling('(2, 0), 2, 1)
  _01111: a rectangle with size (1,?) and color ? and mask Full at projJ(^.layer_01.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color yellow at (?,?)

DL input  with Mi: L = 49.0 + 0.0 = 49.0
DL output with Mo: L = 359.7 + 6080.4 = 6440.1
DL input+output M: L = 408.7 + 6080.4 = 6489.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 00576224.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 00576224.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 00576224.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.9 sec (55.9 sec/task)
bits-train-error = 6080.4 bits (6080.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-399] Checking task 009d5c81.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 56264.3 = 56276.9
DL output with Mo: L = 12.6 + 45547.7 = 45560.3
DL input+output M: L = 25.2 + 101812.1 = 101837.3

# learning a model for train pairs
2.000	
1.130	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.430	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.273	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.210	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.186	OUT SPE ^.size = ^.size
0.166	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.153	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.148	IN  SPE ^.layer_0.shape.color = cyan
0.143	IN  SPE ^.layer_01.shape.color = blue
0.140	OUT SPE ^.color = black
0.138	IN  SPE ^.color = black
0.008	
0.008	IN  DEL ^.layer_01
0.008	IN  GEN ^.layer_0.shape.color = ?
0.008	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 7316.1 = 7387.1
DL output with Mo: L = 30.7 + 282.2 = 312.9
DL input+output M: L = 101.7 + 7598.3 = 7700.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 30.7 + 282.2 = 312.9
DL input+output M: L = 69.5 + 282.2 = 351.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 009d5c81.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 009d5c81.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 009d5c81.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 009d5c81.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 009d5c81.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 009d5c81.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 282.2 bits (282.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-398] Checking task 00dbd492.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 51786.8 = 51799.4
DL output with Mo: L = 12.6 + 97217.9 = 97230.5
DL input+output M: L = 25.2 + 149004.7 = 149029.9

# learning a model for train pairs
2.000	
1.333	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.914	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	OUT ADD ^.layer_00 = ^.layer_0
0.345	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.211	OUT ADD ^.layer_001 = ^.layer_01
0.173	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.164	OUT SPE ^.size = ^.size
0.157	OUT ADD ^.layer_0010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.153	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size - (2, 2)
0.148	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.144	IN  SPE ^.layer_0.shape.color = red
0.139	IN  SPE ^.layer_01.shape.color = red
0.135	IN  SPE ^.layer_0.shape.mask = Border
0.132	OUT SPE ^.layer_0010.pos.i = ^.layer_01.pos.i + 1
0.130	OUT SPE ^.layer_0010.pos.j = right(^.layer_01) / '2
0.128	IN  SPE ^.color = black
0.126	OUT SPE ^.layer_0010.shape.mask = ^.layer_01.shape.mask
0.124	OUT SPE ^.layer_0010.shape.size.i = average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) / '2
0.123	OUT SPE ^.layer_0.shape.mask = Full
0.122	OUT SPE ^.layer_01.shape.mask = Full
0.121	OUT SPE ^.color = black
0.031	
0.031	IN  GEN ^.layer_01.shape.color = ?
0.031	IN  GEN ^.layer_0.shape.mask = ?
0.031	IN  GEN ^.layer_0.shape.color = ?
0.031	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0010: a rectangle with size (average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) / '2,?) and color ? and mask ^.layer_01.shape.mask at (^.layer_01.pos.i + 1,right(^.layer_01) / '2)
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color ? and mask Full at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 74.3 + 4654.2 = 4728.5
DL output with Mo: L = 280.8 + 2576.0 = 2856.7
DL input+output M: L = 355.1 + 7230.2 = 7585.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0010: a rectangle with size (average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) / '2,?) and color ? and mask ^.layer_01.shape.mask at (^.layer_01.pos.i + 1,right(^.layer_01) / '2)
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color ? and mask Full at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 280.8 + 2576.0 = 2856.7
DL input+output M: L = 345.0 + 2576.0 = 2921.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 00dbd492.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 00dbd492.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 00dbd492.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 00dbd492.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 00dbd492.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.0 sec (15.0 sec/task)
bits-train-error = 2576.0 bits (2576.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-397] Checking task 03560426.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23992.3 = 24004.9
DL output with Mo: L = 12.6 + 21379.2 = 21391.8
DL input+output M: L = 25.2 + 45371.5 = 45396.7

# learning a model for train pairs
2.000	
1.611	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.233	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
0.710	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.543	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.381	OUT ADD ^.layer_00 = ^.layer_01.shape at (?,?)
0.353	OUT SPE ^.size = ^.size
0.337	OUT SPE ^.layer_01.pos = '(0, 0)
0.331	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.326	OUT SPE ^.layer_0.shape.mask = Full
0.320	OUT SPE ^.layer_00.pos.j = ^.layer_01.pos.j / '2
0.314	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.i - area(^.layer_011.shape)
0.308	OUT SPE ^.layer_0.pos.i = min(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_0.shape.size.j
0.303	OUT SPE ^.layer_0.shape.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_011.pos.i - ^.layer_01.pos.i
0.298	OUT SPE ^.layer_0.shape.size.j = ^.layer_011.shape.size.j
0.294	IN  SPE ^.layer_011.shape.mask = Full
0.290	IN  SPE ^.layer_0.shape.mask = Full
0.086	
0.086	IN  GEN ^.layer_0.shape.mask = ?
0.086	IN  GEN ^.layer_011.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_01.shape at (?,^.layer_01.pos.j / '2)
  _0: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask Full at (min(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_0.shape.size.j,^.layer_0.pos.i - area(^.layer_011.shape))
  _01: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 91.3 + 4931.9 = 5023.2
DL output with Mo: L = 321.4 + 1398.6 = 1720.0
DL input+output M: L = 412.7 + 6330.5 = 6743.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_01.shape at (?,^.layer_01.pos.j / '2)
  _0: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask Full at (min(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_0.shape.size.j,^.layer_0.pos.i - area(^.layer_011.shape))
  _01: ^.layer_0.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 40.0 = 129.3
DL output with Mo: L = 321.4 + 1398.6 = 1720.0
DL input+output M: L = 410.7 + 1438.6 = 1849.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 03560426.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 03560426.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 03560426.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 03560426.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.6 sec (54.6 sec/task)
bits-train-error = 1398.6 bits (1398.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-396] Checking task 05a7bcf2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 119903.3 = 119915.9
DL output with Mo: L = 12.6 + 375448.9 = 375461.5
DL input+output M: L = 25.2 + 495352.1 = 495377.4

# learning a model for train pairs
2.000	
1.406	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.913	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.620	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.441	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.399	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.364	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.336	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.222	
0.222	IN  DEL ^.layer_0111
0.222	IN  DEL ^.layer_011
0.222	IN  DEL ^.layer_01
0.221	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 13637.3 = 13751.4
DL output with Mo: L = 138.9 + 82977.5 = 83116.4
DL input+output M: L = 253.0 + 96614.8 = 96867.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 82977.5 = 83116.4
DL input+output M: L = 151.5 + 82977.5 = 83129.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 05a7bcf2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 05a7bcf2.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 05a7bcf2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 05a7bcf2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 82977.5 bits (82977.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-395] Checking task 0607ce86.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 252591.5 = 252604.1
DL output with Mo: L = 12.6 + 217858.4 = 217871.0
DL input+output M: L = 25.2 + 470449.9 = 470475.1

# learning a model for train pairs
2.000	
1.908	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.815	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.723	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.642	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.561	OUT ADD ^.layer_0111 = ^.layer_0.shape at (?,?)
1.481	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.407	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.336	OUT ADD ^.layer_0110 = ^.layer_0.shape at (?,?)
1.270	IN  ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.209	OUT ADD ^.layer_01101 = ^.layer_0
1.167	IN  ADD ^.layer_0011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.119	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.089	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.510	
0.510	IN  DEL ^.layer_0111
0.510	IN  DEL ^.layer_011
0.510	IN  DEL ^.layer_0011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0.shape at (?,?)
  _01101: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 146040.6 = 146228.7
DL output with Mo: L = 140.2 + 110910.7 = 111050.8
DL input+output M: L = 328.3 + 256951.3 = 257279.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0.shape at (?,?)
  _01101: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 40.0 = 154.1
DL output with Mo: L = 140.2 + 110910.7 = 111050.8
DL input+output M: L = 254.3 + 110950.7 = 111205.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 0607ce86.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 0607ce86.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0607ce86.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 0607ce86.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.5 sec (61.5 sec/task)
bits-train-error = 110910.7 bits (110910.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-394] Checking task 0692e18c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4369.4 = 4382.0
DL output with Mo: L = 12.6 + 22305.1 = 22317.7
DL input+output M: L = 25.2 + 26674.5 = 26699.8

# learning a model for train pairs
2.000	
1.380	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.125	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.867	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.820	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.795	OUT SPE ^.size = tiling(^.size, 3, 3)
0.778	IN  SPE ^.color = black
0.769	OUT SPE ^.layer_01.pos.j = '0
0.761	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.754	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.747	OUT SPE ^.layer_0.pos.i = 3
0.393	
0.393	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (3,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,'0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 1551.3 = 1590.2
DL output with Mo: L = 121.4 + 8450.9 = 8572.3
DL input+output M: L = 160.4 + 10002.1 = 10162.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (3,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,'0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 121.4 + 8450.9 = 8572.3
DL input+output M: L = 160.3 + 8450.9 = 8611.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0692e18c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0692e18c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0692e18c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 0692e18c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.8 sec (56.8 sec/task)
bits-train-error = 8450.9 bits (8450.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-393] Checking task 070dd51e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8453.4 = 8466.0
DL output with Mo: L = 12.6 + 28104.9 = 28117.5
DL input+output M: L = 25.2 + 36558.2 = 36583.5

# learning a model for train pairs
2.000	
1.733	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.522	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.365	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.236	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.146	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.052	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.006	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.959	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.912	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.864	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.817	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.769	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.752	OUT SPE ^.size = ^.size
0.739	IN  SPE ^.layer_01.shape.color = green
0.726	IN  SPE ^.layer_011.shape.color = green
0.717	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.708	OUT SPE ^.layer_011.pos = ^.layer_01.pos
0.698	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.689	OUT SPE ^.layer_01111.pos = ^.layer_01111111.pos
0.680	OUT SPE ^.layer_01.pos = ^.layer_0111111.pos
0.675	IN  SPE ^.color = black
0.671	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.667	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.659	OUT SPE ^.layer_011.shape.size = span(^.layer_01.pos, ^.layer_011.pos)
0.655	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.651	OUT SPE ^.layer_01111.shape.color = ^.layer_01111111.shape.color
0.648	OUT SPE ^.layer_01.shape.color = ^.layer_0111111.shape.color
0.646	OUT SPE ^.layer_0.shape.size.j = 1
0.643	OUT SPE ^.layer_0.shape.mask = Full
0.641	OUT SPE ^.layer_01.shape.size.j = 1
0.639	OUT SPE ^.layer_01.shape.mask = Full
0.636	OUT SPE ^.layer_011.shape.mask = Full
0.634	OUT SPE ^.layer_0111.shape.mask = Full
0.632	OUT SPE ^.layer_01111.shape.size.i = 1
0.628	OUT SPE ^.layer_01.shape.size.i = area(^.layer_01.shape) - ^.layer_01111111.pos.j - ^.layer_011.pos.j
0.625	OUT SPE ^.layer_01111.shape.mask = Full
0.624	OUT SPE ^.color = black
0.049	
0.049	IN  GEN ^.layer_011.shape.color = ?
0.048	IN  GEN ^.layer_01.shape.color = ?
0.048	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (area(^.layer_01.shape) - ^.layer_01111111.pos.j - ^.layer_011.pos.j,1) and color ^.layer_0111111.shape.color and mask Full at ^.layer_0111111.pos
  _011: a rectangle with size span(^.layer_01.pos, ^.layer_011.pos) and color ^.layer_011.shape.color and mask Full at ^.layer_01.pos
  _0111: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_0111.pos
  _01111: a rectangle with size (1,?) and color ^.layer_01111111.shape.color and mask Full at ^.layer_01111111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 145.2 + 4862.9 = 5008.1
DL output with Mo: L = 303.7 + 595.9 = 899.7
DL input+output M: L = 448.9 + 5458.9 = 5907.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (area(^.layer_01.shape) - ^.layer_01111111.pos.j - ^.layer_011.pos.j,1) and color ^.layer_0111111.shape.color and mask Full at ^.layer_0111111.pos
  _011: a rectangle with size span(^.layer_01.pos, ^.layer_011.pos) and color ^.layer_011.shape.color and mask Full at ^.layer_01.pos
  _0111: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_0111.pos
  _01111: a rectangle with size (1,?) and color ^.layer_01111111.shape.color and mask Full at ^.layer_01111111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.4 + 0.0 = 138.4
DL output with Mo: L = 303.7 + 595.9 = 899.7
DL input+output M: L = 442.1 + 595.9 = 1038.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 070dd51e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 070dd51e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-6,1) and color grey and mask Full at (9,9)

TEST 070dd51e.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 36.8 sec (36.8 sec/task)
bits-train-error = 595.9 bits (595.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-392] Checking task 08573cc6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4192.1 = 4204.8
DL output with Mo: L = 12.6 + 38963.1 = 38975.7
DL input+output M: L = 25.2 + 43155.2 = 43180.4

# learning a model for train pairs
2.000	
1.832	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.665	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.518	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.369	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.214	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.075	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.046	OUT ADD ^.layer_0111 = ^.layer_011
0.935	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.851	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.812	IN  SPE ^.layer_011.shape.color = blue
0.794	IN  SPE ^.color = black
0.779	OUT SPE ^.size = ^.size
0.774	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.770	OUT SPE ^.layer_011.pos.j = 2
0.766	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.761	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.757	OUT SPE ^.layer_01111.shape.color = ^.layer_01.shape.color
0.755	OUT SPE ^.layer_0.shape.size.i = 1
0.752	OUT SPE ^.layer_0.shape.mask = Full
0.750	OUT SPE ^.layer_01.shape.size.j = 1
0.746	OUT SPE ^.layer_011111.pos.i = ^.layer_011.pos.i - 2
0.742	OUT SPE ^.layer_01111.pos.j = ^.layer_011.pos.j / '3
0.739	OUT SPE ^.layer_01111.pos.i = span(^.layer_0.pos.j, ^.layer_01.pos.j) + 3
0.736	OUT SPE ^.layer_01.shape.mask = Full
0.734	OUT SPE ^.layer_011.shape.size.i = 1
0.731	OUT SPE ^.layer_011.shape.mask = Full
0.729	OUT SPE ^.layer_01111.shape.size.j = 1
0.726	OUT SPE ^.layer_01111.shape.mask = Full
0.724	OUT SPE ^.layer_011111.shape.mask = Full
0.722	OUT SPE ^.color = black
0.244	
0.244	IN  GEN ^.layer_011.shape.color = ?
0.244	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,2)
  _0111: ^.layer_011
  _01111: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (span(^.layer_0.pos.j, ^.layer_01.pos.j) + 3,^.layer_011.pos.j / '3)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (^.layer_011.pos.i - 2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color blue at (?,?)

DL input  with Mi: L = 64.9 + 2006.3 = 2071.1
DL output with Mo: L = 272.5 + 8654.8 = 8927.3
DL input+output M: L = 337.4 + 10661.1 = 10998.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (?,2)
  _0111: ^.layer_011
  _01111: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (span(^.layer_0.pos.j, ^.layer_01.pos.j) + 3,^.layer_011.pos.j / '3)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (^.layer_011.pos.i - 2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 272.5 + 8654.8 = 8927.3
DL input+output M: L = 333.9 + 8654.8 = 8988.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 08573cc6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 08573cc6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 08573cc6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 08573cc6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.4 sec (19.4 sec/task)
bits-train-error = 8654.8 bits (8654.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-391] Checking task 0934a4d8.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1122015.5 = 1122028.1
DL output with Mo: L = 12.6 + 20261.7 = 20274.3
DL input+output M: L = 25.2 + 1142277.2 = 1142302.4

# learning a model for train pairs
2.000	
1.797	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.676	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.584	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.507	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.450	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.400	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.363	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.333	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	
0.497	IN  DEL ^.layer_011
0.497	IN  DEL ^.layer_01
0.497	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 938279.0 = 938368.3
DL output with Mo: L = 129.6 + 9948.5 = 10078.1
DL input+output M: L = 218.9 + 948227.5 = 948446.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 129.6 + 9948.5 = 10078.1
DL input+output M: L = 142.2 + 9948.5 = 10090.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0934a4d8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0934a4d8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0934a4d8.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0934a4d8.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0934a4d8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 9948.5 bits (9948.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-390] Checking task 09c534e7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 229035.0 = 229047.6
DL output with Mo: L = 12.6 + 229035.0 = 229047.6
DL input+output M: L = 25.2 + 458070.0 = 458095.2

# learning a model for train pairs
2.000	
1.532	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.419	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.350	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.306	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.217	
0.217	IN  DEL ^.layer_011
0.217	IN  DEL ^.layer_01
0.217	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20355.4 = 20444.7
DL output with Mo: L = 114.1 + 49530.1 = 49644.3
DL input+output M: L = 203.4 + 69885.6 = 70089.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 49530.1 = 49644.3
DL input+output M: L = 126.7 + 49530.1 = 49656.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 09c534e7.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 09c534e7.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 09c534e7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 09c534e7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 49530.1 bits (49530.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-389] Checking task 0a1d4ef5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 624887.0 = 624899.6
DL output with Mo: L = 12.6 + 6516.9 = 6529.5
DL input+output M: L = 25.2 + 631403.9 = 631429.1

# learning a model for train pairs
2.000	
1.859	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.766	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.671	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.574	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.514	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.461	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.412	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.366	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.322	OUT ADD ^.layer_00 = a point with color ? at (?,?)
1.278	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.239	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.530	
0.530	IN  DEL ^.layer_0111111
0.530	IN  DEL ^.layer_011111
0.530	IN  DEL ^.layer_01111
0.530	IN  DEL ^.layer_0111
0.530	IN  DEL ^.layer_011
0.530	IN  DEL ^.layer_01
0.530	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 422607.2 = 422795.4
DL output with Mo: L = 101.7 + 3355.7 = 3457.4
DL input+output M: L = 289.9 + 425962.9 = 426252.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 101.7 + 3355.7 = 3457.4
DL input+output M: L = 114.3 + 3355.7 = 3470.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0a1d4ef5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0a1d4ef5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0a1d4ef5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0a1d4ef5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.9 sec (60.9 sec/task)
bits-train-error = 3355.7 bits (3355.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-388] Checking task 0a2355a6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 84157.6 = 84170.2
DL output with Mo: L = 12.6 + 84157.6 = 84170.2
DL input+output M: L = 25.2 + 168315.2 = 168340.5

# learning a model for train pairs
2.000	
1.682	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.081	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.798	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.600	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.402	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.317	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.231	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.214	OUT SPE ^.layer_011 = coloring(^.layer_011, blue)
0.200	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.188	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.178	OUT SPE ^.size = ^.size
0.170	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.163	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.157	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.151	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.145	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.139	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.135	OUT SPE ^.layer_0111.shape.mask = ^.layer_0111.shape.mask
0.133	IN  SPE ^.layer_0.shape.color = cyan
0.130	IN  SPE ^.layer_01.shape.color = cyan
0.127	IN  SPE ^.layer_011.shape.color = cyan
0.125	IN  SPE ^.layer_0111.shape.color = cyan
0.124	OUT SPE ^.color = black
0.122	IN  SPE ^.color = black
0.020	
0.020	IN  GEN ^.layer_0111.shape.color = ?
0.020	IN  GEN ^.layer_011.shape.color = ?
0.020	IN  GEN ^.layer_01.shape.color = ?
0.020	IN  GEN ^.layer_0.shape.color = ?
0.020	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: coloring(^.layer_011, blue)
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 127.6 + 8634.5 = 8762.0
DL output with Mo: L = 86.0 + 1452.4 = 1538.4
DL input+output M: L = 213.5 + 10086.8 = 10300.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: coloring(^.layer_011, blue)
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 86.0 + 1452.4 = 1538.4
DL input+output M: L = 200.1 + 1472.4 = 1672.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 0a2355a6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0a2355a6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0a2355a6.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 0a2355a6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 0a2355a6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.0 sec (23.0 sec/task)
bits-train-error = 1452.4 bits (1452.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-387] Checking task 0b17323b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2875.9 = 2888.5
DL output with Mo: L = 12.6 + 4820.1 = 4832.7
DL input+output M: L = 25.2 + 7696.0 = 7721.2

# learning a model for train pairs
2.000	
1.860	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.700	OUT ADD ^.layer_0 = ^.layer_0
1.557	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.397	OUT ADD ^.layer_01 = ^.layer_01
1.248	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.087	OUT ADD ^.layer_011 = ^.layer_011
0.994	OUT SPE ^.size = ^.size
0.908	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.861	OUT SPE ^.layer_0111.pos = ^.layer_01.pos * '3
0.823	IN  SPE ^.layer_0.shape.color = blue
0.785	IN  SPE ^.layer_01.shape.color = blue
0.747	IN  SPE ^.layer_011.shape.color = blue
0.725	OUT SPE ^.layer_0111.shape.color = red
0.708	IN  SPE ^.color = black
0.698	OUT SPE ^.color = black
0.285	
0.283	IN  GEN ^.layer_011.shape.color = ?
0.282	IN  GEN ^.layer_01.shape.color = ?
0.281	IN  GEN ^.layer_0.shape.color = ?
0.281	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a point with color red at ^.layer_01.pos * '3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color blue at (?,?)

DL input  with Mi: L = 71.5 + 1192.9 = 1264.4
DL output with Mo: L = 65.0 + 1190.6 = 1255.7
DL input+output M: L = 136.5 + 2383.5 = 2520.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a point with color red at ^.layer_01.pos * '3
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 65.0 + 1190.6 = 1255.7
DL input+output M: L = 126.4 + 1190.6 = 1317.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0b17323b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0b17323b.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 0b17323b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 1190.6 bits (1190.6 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-386] Checking task 0bb8deee.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 52408.7 = 52421.3
DL output with Mo: L = 12.6 + 21197.8 = 21210.5
DL input+output M: L = 25.2 + 73606.6 = 73631.8

# learning a model for train pairs
2.000	
1.522	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.296	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.104	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.942	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.796	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.616	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.482	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.387	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.339	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.295	OUT SPE ^.layer_0.shape = ^.layer_01111.shape
0.272	OUT SPE ^.size = ^.layer_01.shape.size + (3, 3)
0.259	OUT SPE ^.layer_0111.pos = '(3, 0)
0.252	OUT SPE ^.layer_0.pos.j = 3
0.246	OUT SPE ^.layer_011.pos.i = '0
0.240	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j / '3
0.234	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.j / '3
0.229	OUT SPE ^.layer_011.pos.j = span(^.layer_011.pos.i, ^.layer_01111.pos.i) / '3
0.225	OUT SPE ^.layer_0.pos.i = span(^.layer_011.pos.i, ^.layer_01111.pos.i) / '3
0.222	OUT SPE ^.color = black
0.221	IN  SPE ^.color = black
0.017	
0.017	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size + (3, 3) and color black and layers
  _0: ^.layer_01111.shape at (span(^.layer_011.pos.i, ^.layer_01111.pos.i) / '3,3)
  _01: ^.layer_01.shape at (^.layer_01.pos.j / '3,^.layer_01.pos.j / '3)
  _011: ^.layer_011.shape at ('0,span(^.layer_011.pos.i, ^.layer_01111.pos.i) / '3)
  _0111: ^.layer_0111.shape at '(3, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.0 + 10726.7 = 10865.7
DL output with Mo: L = 281.1 + 0.0 = 281.1
DL input+output M: L = 420.1 + 10726.7 = 11146.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size + (3, 3) and color black and layers
  _0: ^.layer_01111.shape at (span(^.layer_011.pos.i, ^.layer_01111.pos.i) / '3,3)
  _01: ^.layer_01.shape at (^.layer_01.pos.j / '3,^.layer_01.pos.j / '3)
  _011: ^.layer_011.shape at ('0,span(^.layer_011.pos.i, ^.layer_01111.pos.i) / '3)
  _0111: ^.layer_0111.shape at '(3, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 31.7 = 170.6
DL output with Mo: L = 281.1 + 0.0 = 281.1
DL input+output M: L = 420.0 + 31.7 = 451.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0bb8deee.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0bb8deee.json/2: 1 2nd (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0bb8deee.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 0bb8deee.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.0 sec (38.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-385] Checking task 0becf7df.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26602.9 = 26615.5
DL output with Mo: L = 12.6 + 26602.9 = 26615.5
DL input+output M: L = 25.2 + 53205.9 = 53231.1

# learning a model for train pairs
2.000	
1.794	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.589	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.437	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.285	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.156	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.915	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.803	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.780	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.738	OUT ADD ^.layer_01111 = ^.layer_01111
0.715	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.672	OUT ADD ^.layer_011111 = ^.layer_011111
0.649	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.606	OUT ADD ^.layer_0111111 = ^.layer_0111111
0.280	
0.279	IN  DEL ^.layer_0111
0.278	IN  DEL ^.layer_011
0.277	IN  DEL ^.layer_01
0.276	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 160.3 + 8685.4 = 8845.7
DL output with Mo: L = 126.7 + 7161.6 = 7288.3
DL input+output M: L = 287.0 + 15847.0 = 16134.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 126.7 + 7161.6 = 7288.3
DL input+output M: L = 188.1 + 7161.6 = 7349.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0becf7df.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0becf7df.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0becf7df.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0becf7df.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 7161.6 bits (7161.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-384] Checking task 0c786b71.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7339.1 = 7351.7
DL output with Mo: L = 12.6 + 28541.4 = 28554.1
DL input+output M: L = 25.2 + 35880.5 = 35905.7

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], applySym(rotate180, ^.grid))
0.702	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.527	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  SPE ^.layer_01.shape.mask = Full
0.010	
0.006	IN  DEL ^.layer_01
0.003	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], applySym(rotate180, ^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.2 + 3701.5 = 3766.7
DL output with Mo: L = 23.0 + 0.0 = 23.0
DL input+output M: L = 88.2 + 3701.5 = 3789.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], applySym(rotate180, ^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 23.0 + 0.0 = 23.0
DL input+output M: L = 35.6 + 0.0 = 35.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0c786b71.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0c786b71.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0c786b71.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0c786b71.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-383] Checking task 0c9aba6e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 40345.6 = 40358.2
DL output with Mo: L = 12.6 + 11514.7 = 11527.3
DL input+output M: L = 25.2 + 51860.3 = 51885.5

# learning a model for train pairs
2.000	
1.414	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.065	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.719	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.605	OUT SPE ^.size = ^.layer_0.shape.size - translationOnto(^.layer_0, ^.layer_011)
0.586	OUT SPE ^.layer_0.shape.color = cyan
0.569	OUT SPE ^.layer_0.shape.size.i = min(^.layer_0.shape.size.i, ^.layer_011.shape.size.i) + min(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i)
0.560	OUT SPE ^.color = black
0.554	IN  SPE ^.layer_0111.shape.color = pink
0.552	IN  SPE ^.color = black
0.322	
0.322	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size - translationOnto(^.layer_0, ^.layer_011) and color black and layers
  _0: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_011.shape.size.i) + min(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i),?) and color cyan and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color pink and mask ? at (?,?)

DL input  with Mi: L = 117.6 + 9329.5 = 9447.1
DL output with Mo: L = 167.7 + 3495.8 = 3663.5
DL input+output M: L = 285.3 + 12825.3 = 13110.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size - translationOnto(^.layer_0, ^.layer_011) and color black and layers
  _0: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_011.shape.size.i) + min(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i),?) and color cyan and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color pink and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 60.0 = 177.5
DL output with Mo: L = 167.7 + 3495.8 = 3663.5
DL input+output M: L = 285.1 + 3555.8 = 3841.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0c9aba6e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0c9aba6e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0c9aba6e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 0c9aba6e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0c9aba6e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.3 sec (11.3 sec/task)
bits-train-error = 3495.8 bits (3495.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-382] Checking task 0d87d2a6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 85073.0 = 85085.6
DL output with Mo: L = 12.6 + 99430.2 = 99442.8
DL input+output M: L = 25.2 + 184503.2 = 184528.4

# learning a model for train pairs
2.000	
1.446	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.143	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.979	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.828	OUT ADD ^.layer_01 = ^.layer_01
0.691	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
0.362	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.286	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.279	OUT SPE ^.size = ^.size
0.272	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.265	IN  ADD ^.layer_0100 = a point with color ? at (?,?)
0.261	OUT SPE ^.layer_011 = ^.layer_011
0.258	OUT SPE ^.layer_0.shape.size.i = ^.size.i
0.256	IN  SPE ^.layer_0.shape.color = red
0.254	IN  SPE ^.layer_0100.shape.color = blue
0.252	IN  SPE ^.layer_010.shape.color = red
0.250	IN  SPE ^.layer_01.shape.color = red
0.248	IN  SPE ^.layer_011.shape.color = red
0.246	IN  SPE ^.layer_0111.shape.color = red
0.245	OUT SPE ^.layer_0.pos.i = '0
0.243	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.241	OUT SPE ^.layer_0.shape.color = blue
0.240	IN  SPE ^.layer_0.shape.mask = Full
0.239	IN  SPE ^.layer_010.shape.mask = Full
0.238	OUT SPE ^.layer_0111.shape.size.i = ^.layer_01.shape.size.j - 1
0.236	IN  SPE ^.layer_01.shape.mask = Full
0.235	IN  SPE ^.layer_01111.shape.mask = Full
0.234	OUT SPE ^.layer_0111.shape.mask = Full
0.233	OUT SPE ^.layer_0.pos = projJ(^.layer_01111.pos) / '2
0.231	OUT SPE ^.layer_0111.pos.j = ^.layer_0.pos.i - ^.layer_0111.pos.j - ^.layer_010.pos.j
0.230	IN  SPE ^.color = black
0.230	OUT SPE ^.color = black
0.080	
0.080	IN  GEN ^.layer_0111.shape.color = ?
0.080	IN  GEN ^.layer_011.shape.color = ?
0.080	IN  GEN ^.layer_01.shape.color = ?
0.080	IN  GEN ^.layer_010.shape.color = ?
0.079	IN  GEN ^.layer_0100.shape.color = ?
0.079	IN  GEN ^.layer_0.shape.color = ?
0.079	IN  GEN ^.layer_01111.shape.mask = ?
0.079	IN  GEN ^.layer_01.shape.mask = ?
0.079	IN  GEN ^.layer_010.shape.mask = ?
0.079	IN  GEN ^.layer_0.shape.mask = ?
0.079	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color blue and mask ? at projJ(^.layer_01111.pos) / '2
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (^.layer_01.shape.size.j - 1,?) and color ^.layer_0111.shape.color and mask Full at (?,^.layer_0.pos.i - ^.layer_0111.pos.j - ^.layer_010.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0100: a point with color blue at (?,?)
  _010: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 202.9 + 12848.6 = 13051.5
DL output with Mo: L = 188.7 + 7388.0 = 7576.6
DL input+output M: L = 391.6 + 20236.5 = 20628.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color blue and mask ? at projJ(^.layer_01111.pos) / '2
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (^.layer_01.shape.size.j - 1,?) and color ^.layer_0111.shape.color and mask Full at (?,^.layer_0.pos.i - ^.layer_0111.pos.j - ^.layer_010.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a point with color ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 178.9 + 95.1 = 274.0
DL output with Mo: L = 188.7 + 7388.0 = 7576.6
DL input+output M: L = 367.5 + 7483.1 = 7850.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0d87d2a6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0d87d2a6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 0d87d2a6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0d87d2a6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 37.1 sec (37.1 sec/task)
bits-train-error = 7388.0 bits (7388.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-381] Checking task 0e671a1a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5669.2 = 5681.8
DL output with Mo: L = 12.6 + 38893.5 = 38906.1
DL input+output M: L = 25.2 + 44562.6 = 44587.9

# learning a model for train pairs
2.000	
1.266	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.120	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.972	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.818	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.779	OUT ADD ^.layer_01 = ^.layer_01
0.738	OUT ADD ^.layer_011 = ^.layer_011
0.698	OUT ADD ^.layer_00 = ^.layer_0
0.658	IN  SPE ^.layer_01.shape.color = red
0.619	IN  SPE ^.layer_0.shape.color = yellow
0.580	IN  SPE ^.layer_011.shape.color = green
0.558	OUT SPE ^.size = ^.size
0.541	IN  SPE ^.color = black
0.535	OUT SPE ^.layer_0.shape.color = grey
0.532	OUT SPE ^.color = black
0.127	
0.127	IN  GEN ^.layer_011.shape.color = ?
0.126	IN  GEN ^.layer_01.shape.color = ?
0.125	IN  GEN ^.layer_0.shape.color = ?
0.125	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color yellow at (?,?)
  _01: a point with color red at (?,?)
  _011: a point with color green at (?,?)

DL input  with Mi: L = 71.5 + 2303.2 = 2374.7
DL output with Mo: L = 56.1 + 4399.6 = 4455.7
DL input+output M: L = 127.6 + 6702.8 = 6830.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 56.1 + 4399.6 = 4455.7
DL input+output M: L = 117.5 + 4399.6 = 4517.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0e671a1a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0e671a1a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 0e671a1a.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0e671a1a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0e671a1a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 4399.6 bits (4399.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-380] Checking task 0f63c0b9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6141.8 = 6154.4
DL output with Mo: L = 12.6 + 152254.7 = 152267.4
DL input+output M: L = 25.2 + 158396.5 = 158421.7

# learning a model for train pairs
2.000	
1.636	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.316	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.133	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.863	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.722	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.686	IN  SPE ^.layer_01.shape.color = red
0.661	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.645	IN  SPE ^.color = black
0.629	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.624	OUT SPE ^.size = ^.size
0.621	OUT SPE ^.layer_0.shape.size.j = ^.size.j
0.618	OUT SPE ^.layer_01.shape.size.j = ^.size.j
0.615	OUT SPE ^.layer_011.shape.size.j = ^.size.j
0.612	OUT SPE ^.layer_01.pos = '(0, 0)
0.610	OUT SPE ^.layer_0.pos.j = '0
0.609	OUT SPE ^.layer_011.pos.j = '0
0.607	OUT SPE ^.layer_0111.pos.j = '0
0.605	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.605	OUT SPE ^.layer_01111.shape.size.j = 1
0.604	OUT SPE ^.layer_01111.shape.mask = Full
0.603	OUT SPE ^.color = black
0.077	
0.073	IN  DEL ^.layer_01
0.073	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j) and color ? and mask ? at (?,'0)
  _01: a rectangle with size (?,^.size.j) and color ? and mask ? at '(0, 0)
  _011: a rectangle with size (?,^.size.j) and color ^.layer_011.shape.color and mask ? at (?,'0)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color red at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 64.9 + 3240.8 = 3305.7
DL output with Mo: L = 186.8 + 9858.1 = 10044.9
DL input+output M: L = 251.7 + 13098.9 = 13350.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j) and color ? and mask ? at (?,'0)
  _01: a rectangle with size (?,^.size.j) and color ? and mask ? at '(0, 0)
  _011: a rectangle with size (?,^.size.j) and color ^.layer_011.shape.color and mask ? at (?,'0)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 186.8 + 9858.1 = 10044.9
DL input+output M: L = 232.4 + 9858.1 = 10090.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0f63c0b9.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0f63c0b9.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0f63c0b9.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 0f63c0b9.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 0f63c0b9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 34.1 sec (34.1 sec/task)
bits-train-error = 9858.1 bits (9858.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-379] Checking task 103eff5b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41361.1 = 41373.7
DL output with Mo: L = 12.6 + 41361.1 = 41373.7
DL input+output M: L = 25.2 + 82722.1 = 82747.3

# learning a model for train pairs
2.000	
1.212	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.949	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.807	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.665	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.432	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.375	OUT ADD ^.layer_011111 = ^.layer_01
0.362	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.333	OUT ADD ^.layer_0110 = ^.layer_011
0.169	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 6788.9 = 6878.2
DL output with Mo: L = 155.5 + 6756.2 = 6911.8
DL input+output M: L = 244.8 + 13545.2 = 13790.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 155.5 + 6756.2 = 6911.8
DL input+output M: L = 244.8 + 6756.2 = 7001.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 103eff5b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 103eff5b.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 103eff5b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.6 sec (60.6 sec/task)
bits-train-error = 6756.2 bits (6756.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-378] Checking task 11e1fe23.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2792.1 = 2804.7
DL output with Mo: L = 12.6 + 5833.4 = 5846.0
DL input+output M: L = 25.2 + 8625.5 = 8650.7

# learning a model for train pairs
2.000	
1.856	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.709	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.556	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.427	OUT ADD ^.layer_0 = ^.layer_0
1.298	OUT ADD ^.layer_01 = ^.layer_01
1.169	OUT ADD ^.layer_011 = ^.layer_011
1.081	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.993	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.904	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.830	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.759	OUT SPE ^.size = ^.size
0.720	IN  SPE ^.layer_0.shape.color = red
0.701	OUT SPE ^.layer_01111.shape.color = grey
0.669	OUT SPE ^.layer_01111.pos = max(^.layer_01.pos, ^.layer_011.pos) - (3, 3)
0.651	IN  SPE ^.color = black
0.635	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i - 2
0.618	OUT SPE ^.layer_00.pos.i = ^.layer_0.pos.i + 2
0.609	OUT SPE ^.layer_0111.pos.j = ^.layer_011.pos.j + 2
0.592	OUT SPE ^.layer_010.pos.j = ^.layer_01.pos.j - 2
0.583	OUT SPE ^.color = black
0.108	
0.106	IN  GEN ^.layer_0.shape.color = ?
0.106	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (^.layer_0.pos.i + 2,?)
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,^.layer_01.pos.j - 2)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_011.shape at (^.layer_011.pos.i - 2,^.layer_011.pos.j + 2)
  _01111: a point with color grey at max(^.layer_01.pos, ^.layer_011.pos) - (3, 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 64.9 + 1354.8 = 1419.7
DL output with Mo: L = 219.3 + 232.4 = 451.7
DL input+output M: L = 284.2 + 1587.2 = 1871.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (^.layer_0.pos.i + 2,?)
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,^.layer_01.pos.j - 2)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_011.shape at (^.layer_011.pos.i - 2,^.layer_011.pos.j + 2)
  _01111: a point with color grey at max(^.layer_01.pos, ^.layer_011.pos) - (3, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 20.0 = 81.4
DL output with Mo: L = 219.3 + 232.4 = 451.7
DL input+output M: L = 280.7 + 252.4 = 533.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 11e1fe23.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 11e1fe23.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 11e1fe23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 232.4 bits (232.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-377] Checking task 12422b43.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19514.5 = 19527.1
DL output with Mo: L = 12.6 + 35963.6 = 35976.2
DL input+output M: L = 25.2 + 55478.0 = 55503.3

# learning a model for train pairs
2.000	
1.798	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.616	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.402	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.266	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	OUT ADD ^.layer_00 = ^.layer_0
0.992	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.901	OUT ADD ^.layer_011 = ^.layer_011
0.868	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.827	OUT ADD ^.layer_001 = ^.layer_010
0.802	OUT SPE ^.size = ^.size
0.794	IN  SPE ^.layer_0.shape.mask = Full
0.785	IN  SPE ^.layer_011.shape.mask = Full
0.779	IN  SPE ^.color = black
0.774	OUT SPE ^.layer_0.shape.mask = Full
0.766	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.306	
0.305	IN  GEN ^.layer_011.shape.mask = ?
0.305	IN  GEN ^.layer_0.shape.mask = ?
0.305	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_010
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 107.0 + 9033.1 = 9140.1
DL output with Mo: L = 95.0 + 10641.0 = 10736.0
DL input+output M: L = 201.9 + 19674.1 = 19876.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_010
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 104.8 + 31.7 = 136.5
DL output with Mo: L = 95.0 + 10641.0 = 10736.0
DL input+output M: L = 199.8 + 10672.7 = 10872.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12422b43.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12422b43.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12422b43.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 12422b43.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12422b43.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 12422b43.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.5 sec (57.5 sec/task)
bits-train-error = 10641.0 bits (10641.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-376] Checking task 12997ef3.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13149.9 = 13162.5
DL output with Mo: L = 12.6 + 20677.2 = 20689.8
DL input+output M: L = 25.2 + 33827.1 = 33852.3

# learning a model for train pairs
2.000	
1.504	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.209	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.915	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.730	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.665	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.600	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.582	OUT SPE ^.layer_0.pos = '(0, 0)
0.565	IN  SPE ^.layer_0.shape.color = blue
0.556	OUT SPE ^.layer_011.shape.size.i = area(^.layer_0.shape) - 3
0.546	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.539	IN  SPE ^.color = black
0.533	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.i / '2
0.528	OUT SPE ^.color = black
0.183	
0.183	IN  GEN ^.layer_0.shape.color = ?
0.183	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at '(0, 0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01.pos.i / '2)
  _011: a rectangle with size (area(^.layer_0.shape) - 3,?) and color ^.layer_011.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 74.2 + 4561.1 = 4635.2
DL output with Mo: L = 151.7 + 3481.9 = 3633.6
DL input+output M: L = 225.8 + 8043.0 = 8268.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at '(0, 0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01.pos.i / '2)
  _011: a rectangle with size (area(^.layer_0.shape) - 3,?) and color ^.layer_011.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 20.0 = 90.7
DL output with Mo: L = 151.7 + 3481.9 = 3633.6
DL input+output M: L = 222.3 + 3501.9 = 3724.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12997ef3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12997ef3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 12997ef3.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 12997ef3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 12997ef3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 12997ef3.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.2 sec (11.2 sec/task)
bits-train-error = 3481.9 bits (3481.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-375] Checking task 12eac192.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36976.9 = 36989.5
DL output with Mo: L = 12.6 + 36976.9 = 36989.5
DL input+output M: L = 25.2 + 73953.8 = 73979.1

# learning a model for train pairs
2.000	
1.792	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.606	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.490	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.402	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.192	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	OUT SPE ^.size = ^.size
1.162	OUT SPE ^.layer_01.shape.size = projJ(^.layer_01.shape.size) + (2, 0)
1.151	OUT SPE ^.layer_011.pos = ^.layer_011.pos
1.141	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
1.135	OUT SPE ^.layer_0.shape.size.i = ^.layer_0111.shape.size.j
1.130	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
1.123	OUT SPE ^.layer_0.shape.size.j = max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + 1
1.118	OUT SPE ^.layer_0.pos.j = '0
1.113	OUT SPE ^.layer_01.pos.i = min(^.layer_0.pos.i, ^.layer_01.pos.i)
1.110	OUT SPE ^.layer_01.pos.j = max(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_011.shape.size.j
1.107	OUT SPE ^.color = black
0.529	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0111.shape.size.j,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + 1) and color ? and mask ? at (?,'0)
  _01: a rectangle with size projJ(^.layer_01.shape.size) + (2, 0) and color ? and mask ? at (min(^.layer_0.pos.i, ^.layer_01.pos.i),max(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_011.shape.size.j)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 21435.4 = 21549.6
DL output with Mo: L = 252.2 + 19153.4 = 19405.6
DL input+output M: L = 366.3 + 40588.9 = 40955.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0111.shape.size.j,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + 1) and color ? and mask ? at (?,'0)
  _01: a rectangle with size projJ(^.layer_01.shape.size) + (2, 0) and color ? and mask ? at (min(^.layer_0.pos.i, ^.layer_01.pos.i),max(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_011.shape.size.j)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 252.2 + 19153.4 = 19405.6
DL input+output M: L = 366.3 + 19185.1 = 19551.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 12eac192.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12eac192.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12eac192.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 12eac192.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 12eac192.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.2 sec (23.2 sec/task)
bits-train-error = 19153.4 bits (19153.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-374] Checking task 136b0064.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49991.5 = 50004.2
DL output with Mo: L = 12.6 + 18575.6 = 18588.2
DL input+output M: L = 25.2 + 68567.2 = 68592.4

# learning a model for train pairs
2.000	
1.770	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.569	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.437	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.306	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.189	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.077	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.984	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.898	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.826	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.771	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.718	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.685	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.659	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.631	OUT SPE ^.size = ^.size - translationSym(flipWidth, ^.layer_01, ^.layer_011111)
0.617	OUT SPE ^.layer_01111.shape.size = '(2, 1)
0.609	OUT SPE ^.layer_01111.shape.color = pink
0.600	OUT SPE ^.layer_0.shape.color = blue
0.591	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.575	OUT SPE ^.layer_0.shape.size = '(1, 3)
0.566	IN  SPE ^.layer_0111.shape.mask = xx.|x.x|.x.
0.558	OUT SPE ^.layer_01.shape.color = majorityColor(^.grid)
0.550	OUT SPE ^.layer_011.pos.i = ^.layer_01111.pos.i
0.544	OUT SPE ^.layer_0.shape.mask = Full
0.537	OUT SPE ^.layer_01111.pos.i = span(^.layer_01111.pos.i, ^.layer_0111111.pos.i)
0.531	OUT SPE ^.layer_011.shape.size.i = 1
0.524	OUT SPE ^.layer_0111.pos.j = right(^.layer_0) - 3
0.516	OUT SPE ^.layer_01.shape.size.j = area(^.layer_01111111.shape) + 1
0.511	OUT SPE ^.layer_011.shape.mask = Full
0.506	OUT SPE ^.layer_0111.shape.size.j = 1
0.497	OUT SPE ^.layer_011.shape.size.j = ^.layer_0.shape.size.j + ^.layer_01111111.shape.size.j
0.490	OUT SPE ^.layer_0111.pos.i = ^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_01.pos.i
0.483	OUT SPE ^.layer_0.pos.i = bottom(^.layer_0) - ^.layer_01.shape.size.j
0.246	
0.245	IN  GEN ^.layer_0111.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - translationSym(flipWidth, ^.layer_01, ^.layer_011111) and color ? and layers
  _0: a rectangle with size '(1, 3) and color blue and mask Full at (bottom(^.layer_0) - ^.layer_01.shape.size.j,?)
  _01: a rectangle with size (?,area(^.layer_01111111.shape) + 1) and color majorityColor(^.grid) and mask ? at (?,?)
  _011: a rectangle with size (1,^.layer_0.shape.size.j + ^.layer_01111111.shape.size.j) and color ^.layer_011.shape.color and mask Full at (^.layer_01111.pos.i,?)
  _0111: a rectangle with size (?,1) and color ? and mask ? at (^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_01.pos.i,right(^.layer_0) - 3)
  _01111: a rectangle with size '(2, 1) and color pink and mask ? at (span(^.layer_01111.pos.i, ^.layer_0111111.pos.i),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask xx.|x.x|.x. at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 225.3 + 11877.4 = 12102.7
DL output with Mo: L = 437.3 + 4034.9 = 4472.2
DL input+output M: L = 662.6 + 15912.3 = 16574.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - translationSym(flipWidth, ^.layer_01, ^.layer_011111) and color ? and layers
  _0: a rectangle with size '(1, 3) and color blue and mask Full at (bottom(^.layer_0) - ^.layer_01.shape.size.j,?)
  _01: a rectangle with size (?,area(^.layer_01111111.shape) + 1) and color majorityColor(^.grid) and mask ? at (?,?)
  _011: a rectangle with size (1,^.layer_0.shape.size.j + ^.layer_01111111.shape.size.j) and color ^.layer_011.shape.color and mask Full at (^.layer_01111.pos.i,?)
  _0111: a rectangle with size (?,1) and color ? and mask ? at (^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_01.pos.i,right(^.layer_0) - 3)
  _01111: a rectangle with size '(2, 1) and color pink and mask ? at (span(^.layer_01111.pos.i, ^.layer_0111111.pos.i),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 31.7 = 244.4
DL output with Mo: L = 437.3 + 4034.9 = 4472.2
DL input+output M: L = 650.0 + 4066.6 = 4716.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 136b0064.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 136b0064.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 136b0064.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 136b0064.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.9 sec (58.9 sec/task)
bits-train-error = 4034.9 bits (4034.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-373] Checking task 13713586.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 34250.2 = 34262.8
DL output with Mo: L = 12.6 + 147900.9 = 147913.5
DL input+output M: L = 25.2 + 182151.1 = 182176.3

# learning a model for train pairs
2.000	
1.490	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.059	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.727	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.564	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.308	OUT ADD ^.layer_00 = ^.layer_0
0.225	OUT ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.171	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.166	IN  SPE ^.layer_0.shape.color = grey
0.161	IN  SPE ^.layer_011.shape.color = green
0.157	OUT SPE ^.size = ^.size
0.154	IN  SPE ^.layer_0.shape.mask = Full
0.151	IN  SPE ^.layer_01.shape.mask = Full
0.148	IN  SPE ^.layer_011.shape.mask = Full
0.145	IN  SPE ^.layer_0111.shape.mask = Full
0.143	IN  SPE ^.color = black
0.142	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.140	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.139	OUT SPE ^.layer_000.shape.color = green
0.138	OUT SPE ^.layer_0.pos.i = ^.layer_0111.pos.i
0.137	OUT SPE ^.layer_000.pos.i = ^.layer_011.pos.i
0.136	OUT SPE ^.layer_0.shape.color = ^.layer_0111.shape.color
0.135	OUT SPE ^.layer_000.shape.mask = Full
0.135	OUT SPE ^.layer_0.shape.mask = Full
0.134	OUT SPE ^.layer_01.shape.mask = Full
0.133	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.j + ^.layer_0111.shape.size.j
0.132	OUT SPE ^.layer_01.pos.j = ^.layer_011.pos.j - ^.layer_01.shape.size.i
0.017	
0.017	IN  GEN ^.layer_0.shape.color = ?
0.017	IN  GEN ^.layer_0111.shape.mask = ?
0.017	IN  GEN ^.layer_011.shape.mask = ?
0.017	IN  GEN ^.layer_01.shape.mask = ?
0.017	IN  GEN ^.layer_0.shape.mask = ?
0.017	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,?) and color green and mask Full at (^.layer_011.pos.i,?)
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_01.shape.size.j + ^.layer_0111.shape.size.j,?) and color ^.layer_0111.shape.color and mask Full at (^.layer_0111.pos.i,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,^.layer_011.pos.j - ^.layer_01.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 124.9 + 3932.4 = 4057.3
DL output with Mo: L = 237.1 + 1752.6 = 1989.8
DL input+output M: L = 362.0 + 5685.0 = 6047.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,?) and color green and mask Full at (^.layer_011.pos.i,?)
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_01.shape.size.j + ^.layer_0111.shape.size.j,?) and color ^.layer_0111.shape.color and mask Full at (^.layer_0111.pos.i,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,^.layer_011.pos.j - ^.layer_01.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 237.1 + 1752.6 = 1989.8
DL input+output M: L = 354.6 + 1752.6 = 2107.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 13713586.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 13713586.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 13713586.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 13713586.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.9 sec (55.9 sec/task)
bits-train-error = 1752.6 bits (1752.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-372] Checking task 137f0df0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36670.6 = 36683.2
DL output with Mo: L = 12.6 + 68090.7 = 68103.3
DL input+output M: L = 25.2 + 104761.3 = 104786.5

# learning a model for train pairs
2.000	
1.566	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.351	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.136	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.980	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.940	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.829	OUT ADD ^.layer_011 = ^.layer_0
0.713	OUT ADD ^.layer_010 = ^.layer_0.shape at (?,?)
0.661	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.624	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.594	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.503	OUT SPE ^.layer_0.pos = projJ(^.layer_0.pos)
0.490	OUT ADD ^.layer_0100 = ^.layer_01
0.481	OUT SPE ^.size = ^.size
0.473	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + ^.layer_011.pos - ^.layer_0.pos
0.469	OUT SPE ^.layer_010.pos = ^.layer_011.pos
0.464	IN  SPE ^.layer_0.shape.color = grey
0.460	IN  SPE ^.layer_01.shape.color = grey
0.455	IN  SPE ^.layer_011.shape.color = grey
0.450	IN  SPE ^.layer_0111.shape.color = grey
0.447	IN  SPE ^.layer_01.shape.mask = Full
0.445	IN  SPE ^.layer_0.shape.mask = Full
0.442	IN  SPE ^.layer_0111.shape.mask = Full
0.440	OUT SPE ^.layer_0.shape.color = red
0.437	OUT SPE ^.layer_01.shape.color = blue
0.435	OUT SPE ^.layer_0111.shape.color = blue
0.432	OUT SPE ^.layer_01111.shape.color = blue
0.430	OUT SPE ^.layer_01.pos.i = 2
0.428	IN  SPE ^.layer_011.shape.mask = Full
0.425	OUT SPE ^.layer_0111.shape.size.i = ^.layer_0111.shape.size.i
0.423	IN  SPE ^.color = black
0.422	OUT SPE ^.layer_01.shape.mask = Full
0.420	OUT SPE ^.layer_0111.shape.mask = Full
0.418	OUT SPE ^.layer_01111.pos.i = ^.layer_01.pos.i + 2
0.417	OUT SPE ^.layer_01111.shape.mask = Full
0.073	
0.073	IN  GEN ^.layer_011.shape.mask = ?
0.073	IN  GEN ^.layer_0111.shape.color = ?
0.073	IN  GEN ^.layer_011.shape.color = ?
0.073	IN  GEN ^.layer_01.shape.color = ?
0.073	IN  GEN ^.layer_0.shape.color = ?
0.073	IN  GEN ^.layer_0111.shape.mask = ?
0.073	IN  GEN ^.layer_0.shape.mask = ?
0.073	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size + ^.layer_011.pos - ^.layer_0.pos and color red and mask ? at projJ(^.layer_0.pos)
  _0100: ^.layer_01
  _010: ^.layer_0.shape at ^.layer_011.pos
  _01: a rectangle with size (?,?) and color blue and mask Full at (2,?)
  _011: ^.layer_0
  _0111: a rectangle with size (^.layer_0111.shape.size.i,?) and color blue and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color blue and mask Full at (^.layer_01.pos.i + 2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 131.6 + 12623.5 = 12755.1
DL output with Mo: L = 244.6 + 4452.2 = 4696.8
DL input+output M: L = 376.1 + 17075.8 = 17451.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size + ^.layer_011.pos - ^.layer_0.pos and color red and mask ? at projJ(^.layer_0.pos)
  _0100: ^.layer_01
  _010: ^.layer_0.shape at ^.layer_011.pos
  _01: a rectangle with size (?,?) and color blue and mask Full at (2,?)
  _011: ^.layer_0
  _0111: a rectangle with size (^.layer_0111.shape.size.i,?) and color blue and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color blue and mask Full at (^.layer_01.pos.i + 2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.1 + 20.0 = 135.1
DL output with Mo: L = 244.6 + 4452.2 = 4696.8
DL input+output M: L = 359.7 + 4472.2 = 4831.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 137f0df0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 137f0df0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 137f0df0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 137f0df0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 4452.2 bits (4452.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-371] Checking task 140c817e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4378.7 = 4391.3
DL output with Mo: L = 12.6 + 73340.4 = 73353.0
DL input+output M: L = 25.2 + 77719.1 = 77744.3

# learning a model for train pairs
2.000	
1.315	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.174	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.030	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.992	IN  SPE ^.layer_0.shape.color = blue
0.955	IN  SPE ^.layer_01.shape.color = blue
0.946	OUT SPE ^.size = ^.size
0.938	OUT SPE ^.layer_0.shape.size = ^.size
0.915	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.879	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.861	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.852	OUT ADD ^.layer_0110 = a point with color ? at (?,?)
0.224	
0.220	IN  DEL ^.layer_01
0.215	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.size and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 52.3 + 2758.4 = 2810.7
DL output with Mo: L = 153.9 + 15416.0 = 15569.9
DL input+output M: L = 206.2 + 18174.4 = 18380.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.size and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 153.9 + 15416.0 = 15569.9
DL input+output M: L = 166.6 + 15416.0 = 15582.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 140c817e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 140c817e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 140c817e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 140c817e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 15416.0 bits (15416.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-370] Checking task 14754a24.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 191906.9 = 191919.5
DL output with Mo: L = 12.6 + 191906.9 = 191919.5
DL input+output M: L = 25.2 + 383813.8 = 383839.0

# learning a model for train pairs
2.000	
1.436	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.942	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.742	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.684	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.644	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	
0.359	IN  DEL ^.layer_011
0.359	IN  DEL ^.layer_01
0.359	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 54628.7 = 54718.0
DL output with Mo: L = 114.1 + 68813.8 = 68927.9
DL input+output M: L = 203.4 + 123442.5 = 123645.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 68813.8 = 68927.9
DL input+output M: L = 126.7 + 68813.8 = 68940.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 14754a24.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 14754a24.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 14754a24.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 14754a24.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 14754a24.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 68813.8 bits (68813.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-369] Checking task 15113be4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 381493.6 = 381506.2
DL output with Mo: L = 12.6 + 381493.6 = 381506.2
DL input+output M: L = 25.2 + 762987.2 = 763012.4

# learning a model for train pairs
2.000	
1.459	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.873	OUT ADD ^.layer_0 = ^.layer_0
0.837	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.821	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	OUT SPE ^.size = ^.size
0.360	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 174883.2 = 174922.0
DL output with Mo: L = 65.6 + 137367.5 = 137433.1
DL input+output M: L = 104.4 + 312250.7 = 312355.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 65.6 + 137367.5 = 137433.1
DL input+output M: L = 104.4 + 137367.5 = 137471.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 15113be4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 15113be4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 15113be4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 15113be4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 137367.5 bits (137367.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-368] Checking task 15663ba9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 60544.7 = 60557.3
DL output with Mo: L = 12.6 + 60544.7 = 60557.3
DL input+output M: L = 25.2 + 121089.4 = 121114.6

# learning a model for train pairs
2.000	
1.530	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.154	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.991	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.865	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.784	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.729	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.676	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.655	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	
0.523	IN  DEL ^.layer_011
0.523	IN  DEL ^.layer_01
0.522	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 7976.7 = 8066.0
DL output with Mo: L = 163.5 + 31448.9 = 31612.4
DL input+output M: L = 252.8 + 39425.6 = 39678.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 31448.9 = 31612.4
DL input+output M: L = 176.1 + 31448.9 = 31625.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 15663ba9.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 15663ba9.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 15663ba9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 15663ba9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 31448.9 bits (31448.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-367] Checking task 15696249.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8851.7 = 8864.3
DL output with Mo: L = 12.6 + 41087.4 = 41100.0
DL input+output M: L = 25.2 + 49939.1 = 49964.3

# learning a model for train pairs
2.000	
1.659	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.341	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.087	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.869	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.652	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.621	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.602	OUT SPE ^.size = tiling(^.size, 3, 3)
0.587	IN  SPE ^.layer_01.shape.mask = Full
0.577	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos) * '3
0.572	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.567	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j / '2
0.563	OUT SPE ^.layer_0.shape.mask = Full
0.560	OUT SPE ^.layer_011.shape.mask = Full
0.558	OUT SPE ^.color = black
0.172	
0.172	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at projI(^.layer_0.pos) * '3
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01.pos.j / '2)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 81.0 + 3419.0 = 3500.0
DL output with Mo: L = 143.7 + 6556.4 = 6700.1
DL input+output M: L = 224.7 + 9975.4 = 10200.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at projI(^.layer_0.pos) * '3
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01.pos.j / '2)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 0.0 = 80.0
DL output with Mo: L = 143.7 + 6556.4 = 6700.1
DL input+output M: L = 223.7 + 6556.4 = 6780.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 15696249.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 15696249.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 15696249.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 15696249.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 15696249.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.1 sec (56.1 sec/task)
bits-train-error = 6556.4 bits (6556.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-366] Checking task 16b78196.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 152208.1 = 152220.7
DL output with Mo: L = 12.6 + 152208.1 = 152220.7
DL input+output M: L = 25.2 + 304416.1 = 304441.3

# learning a model for train pairs
2.000	
1.251	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.485	OUT ADD ^.layer_0 = ^.layer_0
0.416	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.365	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.311	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.263	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.174	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.154	OUT ADD ^.layer_0100 = ^.layer_011.shape at (?,?)
0.135	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.122	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.103	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.084	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.080	OUT SPE ^.layer_011.shape = ^.layer_01111.shape
0.077	OUT SPE ^.size = ^.size
0.075	OUT SPE ^.layer_0111.shape.size = ^.layer_01.shape.size - (2, 0)
0.075	OUT SPE ^.layer_01.shape.size.i = area(^.layer_01111.shape) - 1
0.074	OUT SPE ^.layer_01.pos.j = bottom(^.layer_0) - 2
0.073	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i - ^.layer_01.shape.size.j
0.072	OUT SPE ^.layer_0111.pos.j = ^.layer_011111.pos.i / '2
0.072	OUT SPE ^.layer_011.pos.j = ^.layer_011111.pos.i / '2
0.071	OUT SPE ^.layer_010.pos.j = ^.layer_011111.pos.i / '2
0.070	OUT SPE ^.layer_011.pos.i = right(^.layer_01) + ^.layer_01111.shape.size.i
0.069	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.j + area(^.layer_0111111.shape)
0.069	OUT SPE ^.layer_0111.shape.color = ^.layer_011111.shape.color
0.068	OUT SPE ^.layer_01.shape.color = ^.layer_0111.shape.color
0.068	OUT SPE ^.layer_01.shape.size.j = ^.layer_0111111.shape.size.j
0.067	OUT SPE ^.layer_010.pos.i = ^.layer_0111111.pos.j + ^.layer_011111.pos.i - ^.layer_0.pos.i
0.067	OUT SPE ^.layer_0100.pos.j = middle(^.layer_01111) - ^.layer_01111.pos.i - ^.layer_0.pos.i
0.066	OUT SPE ^.layer_01.shape.mask = Full
0.066	OUT SPE ^.layer_0111.shape.mask = Full
0.065	OUT SPE ^.color = black
0.065	IN  SPE ^.color = black
0.006	
0.006	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: ^.layer_011.shape at (?,middle(^.layer_01111) - ^.layer_01111.pos.i - ^.layer_0.pos.i)
  _010: ^.layer_01.shape at (^.layer_0111111.pos.j + ^.layer_011111.pos.i - ^.layer_0.pos.i,^.layer_011111.pos.i / '2)
  _01: a rectangle with size (area(^.layer_01111.shape) - 1,^.layer_0111111.shape.size.j) and color ^.layer_0111.shape.color and mask Full at (^.layer_01.pos.i - ^.layer_01.shape.size.j,bottom(^.layer_0) - 2)
  _011: ^.layer_01111.shape at (right(^.layer_01) + ^.layer_01111.shape.size.i,^.layer_011111.pos.i / '2)
  _0111: a rectangle with size ^.layer_01.shape.size - (2, 0) and color ^.layer_011111.shape.color and mask Full at (^.layer_01.pos.j + area(^.layer_0111111.shape),^.layer_011111.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.3 + 8963.5 = 9151.7
DL output with Mo: L = 623.9 + 144.6 = 768.4
DL input+output M: L = 812.1 + 9108.0 = 9920.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: ^.layer_011.shape at (?,middle(^.layer_01111) - ^.layer_01111.pos.i - ^.layer_0.pos.i)
  _010: ^.layer_01.shape at (^.layer_0111111.pos.j + ^.layer_011111.pos.i - ^.layer_0.pos.i,^.layer_011111.pos.i / '2)
  _01: a rectangle with size (area(^.layer_01111.shape) - 1,^.layer_0111111.shape.size.j) and color ^.layer_0111.shape.color and mask Full at (^.layer_01.pos.i - ^.layer_01.shape.size.j,bottom(^.layer_0) - 2)
  _011: ^.layer_01111.shape at (right(^.layer_01) + ^.layer_01111.shape.size.i,^.layer_011111.pos.i / '2)
  _0111: a rectangle with size ^.layer_01.shape.size - (2, 0) and color ^.layer_011111.shape.color and mask Full at (^.layer_01.pos.j + area(^.layer_0111111.shape),^.layer_011111.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 0.0 = 188.1
DL output with Mo: L = 623.9 + 144.6 = 768.4
DL input+output M: L = 812.0 + 144.6 = 956.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 16b78196.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 16b78196.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Middle: no middle, even height

TEST 16b78196.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 34.9 sec (34.9 sec/task)
bits-train-error = 144.6 bits (144.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-365] Checking task 17b80ad2.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24163.8 = 24176.4
DL output with Mo: L = 12.6 + 54801.3 = 54813.9
DL input+output M: L = 25.2 + 78965.1 = 78990.3

# learning a model for train pairs
2.000	
1.798	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.647	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.614	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.580	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.564	OUT SPE ^.size = ^.size
1.560	IN  SPE ^.color = black
1.556	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
1.554	OUT SPE ^.layer_01.shape.size.j = 1
1.552	OUT SPE ^.layer_01.shape.mask = Full
1.550	OUT SPE ^.color = black
0.623	
0.623	IN  DEL ^.layer_01
0.622	IN  DEL ^.layer_0
0.622	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color majorityColor(^.grid) and mask ? at (?,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 22401.4 = 22447.2
DL output with Mo: L = 72.9 + 33983.2 = 34056.0
DL input+output M: L = 118.6 + 56384.6 = 56503.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color majorityColor(^.grid) and mask ? at (?,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 72.9 + 33983.2 = 34056.0
DL input+output M: L = 85.5 + 33983.2 = 34068.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 17b80ad2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 17b80ad2.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 17b80ad2.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 17b80ad2.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 17b80ad2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.4 sec (7.4 sec/task)
bits-train-error = 33983.2 bits (33983.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-364] Checking task 17cae0c1.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16624.0 = 16636.6
DL output with Mo: L = 12.6 + 26757.8 = 26770.4
DL input+output M: L = 25.2 + 43381.8 = 43407.0

# learning a model for train pairs
2.000	
1.302	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.872	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.436	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.411	OUT SPE ^.size = ^.size
0.392	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.373	OUT SPE ^.layer_01.shape.size = '(3, 3)
0.359	OUT SPE ^.layer_0.pos = '(0, 0)
0.349	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.336	OUT SPE ^.layer_01.pos = projJ(^.layer_0.pos)
0.331	OUT SPE ^.layer_0.shape.mask = Full
0.326	OUT SPE ^.layer_01.shape.mask = Full
0.039	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size '(3, 3) and color ? and mask Full at '(0, 0)
  _01: a rectangle with size '(3, 3) and color ? and mask Full at projJ(^.layer_0.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 4805.3 = 4869.6
DL output with Mo: L = 92.7 + 810.1 = 902.8
DL input+output M: L = 156.9 + 5615.5 = 5772.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size '(3, 3) and color ? and mask Full at '(0, 0)
  _01: a rectangle with size '(3, 3) and color ? and mask Full at projJ(^.layer_0.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 92.7 + 810.1 = 902.8
DL input+output M: L = 156.9 + 830.1 = 987.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 17cae0c1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 17cae0c1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 17cae0c1.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 17cae0c1.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 17cae0c1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 810.1 bits (810.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-363] Checking task 18419cfa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 61551.0 = 61563.6
DL output with Mo: L = 12.6 + 70534.2 = 70546.8
DL input+output M: L = 25.2 + 132085.2 = 132110.4

# learning a model for train pairs
2.000	
1.417	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.852	OUT ADD ^.layer_0 = ^.layer_0
0.561	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.314	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.287	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.263	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.253	OUT SPE ^.size = ^.size
0.250	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.238	OUT SPE ^.layer_00.shape.mask = ^.layer_01.shape.mask
0.231	OUT SPE ^.layer_01.shape.mask = unfoldSym( [ id ] [ flipHeight ], ^.layer_011.shape.mask)
0.226	OUT SPE ^.layer_01.pos = ^.layer_011.pos
0.223	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.j + 1
0.220	IN  SPE ^.layer_0.shape.color = cyan
0.218	IN  SPE ^.layer_011.shape.color = red
0.215	OUT SPE ^.layer_001.shape.size.j = ^.layer_0.shape.size.i - ^.layer_01.pos.i - ^.layer_0.pos.i
0.213	OUT SPE ^.layer_01.shape.color = red
0.210	OUT SPE ^.layer_00.shape.size.j = max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_01.pos.i - ^.layer_0.pos.i
0.208	OUT SPE ^.layer_001.pos.j = bottom(^.layer_011) - ^.layer_011.shape.size.j
0.207	IN  SPE ^.color = black
0.206	OUT SPE ^.color = black
0.048	
0.048	IN  GEN ^.layer_011.shape.color = ?
0.048	IN  GEN ^.layer_0.shape.color = ?
0.048	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_01.pos.i - ^.layer_0.pos.i) and color ? and mask ^.layer_01.shape.mask at (?,?)
  _001: a rectangle with size (?,^.layer_0.shape.size.i - ^.layer_01.pos.i - ^.layer_0.pos.i) and color ? and mask ? at (?,bottom(^.layer_011) - ^.layer_011.shape.size.j)
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_011.shape.size.j + 1,?) and color red and mask unfoldSym( [ id ] [ flipHeight ], ^.layer_011.shape.mask) at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 96.0 + 9766.4 = 9862.4
DL output with Mo: L = 376.7 + 2864.4 = 3241.0
DL input+output M: L = 472.7 + 12630.7 = 13103.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_01.pos.i - ^.layer_0.pos.i) and color ? and mask ^.layer_01.shape.mask at (?,?)
  _001: a rectangle with size (?,^.layer_0.shape.size.i - ^.layer_01.pos.i - ^.layer_0.pos.i) and color ? and mask ? at (?,bottom(^.layer_011) - ^.layer_011.shape.size.j)
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_011.shape.size.j + 1,?) and color red and mask unfoldSym( [ id ] [ flipHeight ], ^.layer_011.shape.mask) at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 376.7 + 2864.4 = 3241.0
DL input+output M: L = 465.9 + 2884.4 = 3350.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 18419cfa.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 18419cfa.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 18419cfa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 18419cfa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 34.2 sec (34.2 sec/task)
bits-train-error = 2864.4 bits (2864.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-362] Checking task 184a9768.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 168420.8 = 168433.4
DL output with Mo: L = 12.6 + 158198.2 = 158210.8
DL input+output M: L = 25.2 + 326619.0 = 326644.2

# learning a model for train pairs
2.000	
1.463	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.724	OUT ADD ^.layer_00 = ^.layer_0
0.506	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.428	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.371	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.323	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.279	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.236	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.210	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.192	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.179	OUT ADD ^.layer_01111 = ^.layer_01111.shape at (?,?)
0.170	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.166	OUT SPE ^.size = ^.size
0.162	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
0.161	OUT SPE ^.layer_011.shape.size.j = ^.layer_011.shape.size.j
0.159	OUT SPE ^.layer_0111.shape.size = ^.layer_0111111.shape.size
0.158	OUT SPE ^.layer_0111.pos.j = ^.layer_011.pos.i + 1
0.157	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.156	IN  SPE ^.layer_01110.shape.color = grey
0.155	OUT SPE ^.layer_0.shape.mask = Full
0.155	OUT SPE ^.layer_011.shape.mask = Full
0.154	OUT SPE ^.layer_0111.shape.mask = Full
0.153	OUT SPE ^.layer_0.pos.i = bottom(^.layer_0) - 3
0.152	OUT SPE ^.layer_01111.pos.i = center(^.layer_0) - area(^.layer_011111.shape)
0.151	OUT SPE ^.layer_0.shape.size.j = ^.layer_011.shape.size.i * '2
0.150	OUT SPE ^.layer_011.pos.j = bottom(^.layer_011111) - 1
0.149	OUT SPE ^.layer_0.pos.j = middle(^.layer_0111111) * '2
0.148	OUT SPE ^.layer_01.pos.j = right(^.layer_01) - max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.147	OUT SPE ^.layer_01.pos.i = center(^.layer_0) - ^.layer_01110.pos.j - ^.layer_0.pos.j
0.016	
0.016	IN  GEN ^.layer_01110.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_011.shape.size.i * '2) and color ? and mask Full at (bottom(^.layer_0) - 3,middle(^.layer_0111111) * '2)
  _01: ^.layer_01.shape at (center(^.layer_0) - ^.layer_01110.pos.j - ^.layer_0.pos.j,right(^.layer_01) - max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i))
  _011: a rectangle with size (?,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask Full at (?,bottom(^.layer_011111) - 1)
  _0111: a rectangle with size ^.layer_0111111.shape.size and color ? and mask Full at (?,^.layer_011.pos.i + 1)
  _01111: ^.layer_01111.shape at (center(^.layer_0) - area(^.layer_011111.shape),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color grey at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 206.7 + 22259.8 = 22466.6
DL output with Mo: L = 452.4 + 1752.4 = 2204.8
DL input+output M: L = 659.1 + 24012.2 = 24671.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_011.shape.size.i * '2) and color ? and mask Full at (bottom(^.layer_0) - 3,middle(^.layer_0111111) * '2)
  _01: ^.layer_01.shape at (center(^.layer_0) - ^.layer_01110.pos.j - ^.layer_0.pos.j,right(^.layer_01) - max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i))
  _011: a rectangle with size (?,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask Full at (?,bottom(^.layer_011111) - 1)
  _0111: a rectangle with size ^.layer_0111111.shape.size and color ? and mask Full at (?,^.layer_011.pos.i + 1)
  _01111: ^.layer_01111.shape at (center(^.layer_0) - area(^.layer_011111.shape),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 203.4 + 83.4 = 286.8
DL output with Mo: L = 452.4 + 1752.4 = 2204.8
DL input+output M: L = 655.8 + 1835.8 = 2491.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 184a9768.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 184a9768.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 184a9768.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Middle: no middle, even height

TEST 184a9768.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 58.4 sec (58.4 sec/task)
bits-train-error = 1752.4 bits (1752.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-361] Checking task 195ba7dc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49646.9 = 49659.5
DL output with Mo: L = 12.6 + 12971.1 = 12983.7
DL input+output M: L = 25.2 + 62618.0 = 62643.2

# learning a model for train pairs
2.000	
1.312	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.947	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.699	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.576	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.525	OUT SPE ^.size = ^.layer_0.shape.size
0.479	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size - translationOnto(^.layer_0, ^.layer_011)
0.437	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.410	OUT SPE ^.layer_0.pos = ^.layer_011.pos - projJ(^.layer_0.shape.size)
0.407	IN  SPE ^.layer_011.shape.mask = Full
0.191	
0.191	IN  DEL ^.layer_0111
0.190	IN  GEN ^.layer_011.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size - translationOnto(^.layer_0, ^.layer_011) and color ? and mask ? at ^.layer_011.pos - projJ(^.layer_0.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.1 + 10767.0 = 10882.1
DL output with Mo: L = 109.9 + 2331.8 = 2441.8
DL input+output M: L = 225.1 + 13098.8 = 13323.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size - translationOnto(^.layer_0, ^.layer_011) and color ? and mask ? at ^.layer_011.pos - projJ(^.layer_0.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 109.9 + 2331.8 = 2441.8
DL input+output M: L = 199.2 + 2351.8 = 2551.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 195ba7dc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 195ba7dc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 195ba7dc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 195ba7dc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 195ba7dc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 2331.8 bits (2331.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-360] Checking task 1990f7a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 28416.6 = 28429.2
DL output with Mo: L = 12.6 + 24446.2 = 24458.8
DL input+output M: L = 25.2 + 52862.7 = 52888.0

# learning a model for train pairs
2.000	
1.361	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.098	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.882	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.710	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.568	IN  SPE ^.layer_0.shape.color = red
0.562	IN  SPE ^.layer_01.shape.color = red
0.556	IN  SPE ^.layer_011.shape.color = red
0.550	IN  SPE ^.layer_0111.shape.color = red
0.547	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j - ^.layer_0111.pos.i - ^.layer_01.pos.i
0.515	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.506	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape) - 2
0.474	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.468	OUT SPE ^.layer_0.pos.i = '0
0.464	OUT SPE ^.layer_00.pos.i = min(^.layer_01.pos.i, ^.layer_011.pos.i) + 3
0.460	OUT SPE ^.layer_01.pos.j = min(^.layer_0.pos.i, ^.layer_0111.pos.i) / '3
0.457	IN  SPE ^.color = black
0.275	
0.275	IN  GEN ^.layer_0111.shape.color = ?
0.275	IN  GEN ^.layer_011.shape.color = ?
0.275	IN  GEN ^.layer_01.shape.color = ?
0.275	IN  GEN ^.layer_0.shape.color = ?
0.275	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_01.pos.i, ^.layer_011.pos.i) + 3,?)
  _0: a rectangle with size (area(^.layer_0.shape) - 2,?) and color ? and mask ? at ('0,^.layer_0.pos.j - ^.layer_0111.pos.i - ^.layer_01.pos.i)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,min(^.layer_0.pos.i, ^.layer_0111.pos.i) / '3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 127.6 + 5213.8 = 5341.4
DL output with Mo: L = 281.4 + 6307.8 = 6589.2
DL input+output M: L = 409.0 + 11521.6 = 11930.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_01.pos.i, ^.layer_011.pos.i) + 3,?)
  _0: a rectangle with size (area(^.layer_0.shape) - 2,?) and color ? and mask ? at ('0,^.layer_0.pos.j - ^.layer_0111.pos.i - ^.layer_01.pos.i)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,min(^.layer_0.pos.i, ^.layer_0111.pos.i) / '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 40.0 = 154.1
DL output with Mo: L = 281.4 + 6307.8 = 6589.2
DL input+output M: L = 395.6 + 6347.8 = 6743.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1990f7a8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1990f7a8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1990f7a8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1990f7a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.0 sec (12.0 sec/task)
bits-train-error = 6307.8 bits (6307.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-359] Checking task 19bb5feb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 113937.4 = 113950.0
DL output with Mo: L = 12.6 + 3108.1 = 3120.7
DL input+output M: L = 25.2 + 117045.5 = 117070.7

# learning a model for train pairs
2.000	
1.127	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.929	OUT ADD ^.layer_0 = a point with color ? at (?,?)
0.725	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.626	OUT SPE ^.size = '(2, 2)
0.548	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.485	OUT SPE ^.layer_01.pos = '(0, 1)
0.444	OUT SPE ^.layer_0.pos = '(1, 0)
0.442	IN  SPE ^.layer_0.shape.color = cyan
0.424	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.373	OUT SPE ^.layer_011.shape.color = ^.layer_01.shape.color
0.341	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.324	OUT SPE ^.layer_011.pos.j = min(^.layer_01.pos.j, ^.layer_010.pos.j) - 2
0.308	OUT SPE ^.layer_011.pos.i = min(^.layer_01.pos.j, ^.layer_010.pos.j) - 2
0.307	IN  SPE ^.layer_010.shape.mask = Full
0.306	IN  SPE ^.layer_01.shape.mask = Full
0.305	IN  SPE ^.color = black
0.233	
0.233	IN  GEN ^.layer_0.shape.color = ?
0.233	IN  GEN ^.layer_01.shape.mask = ?
0.233	IN  GEN ^.layer_010.shape.mask = ?
0.233	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color ? and layers
  _0: a point with color ? at '(1, 0)
  _01: a point with color ? at '(0, 1)
  _011: a point with color ^.layer_01.shape.color at (min(^.layer_01.pos.j, ^.layer_010.pos.j) - 2,min(^.layer_01.pos.j, ^.layer_010.pos.j) - 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 94.7 + 8271.3 = 8366.1
DL output with Mo: L = 180.9 + 542.5 = 723.4
DL input+output M: L = 275.6 + 8813.9 = 9089.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color ? and layers
  _0: a point with color ? at '(1, 0)
  _01: a point with color ? at '(0, 1)
  _011: a point with color ^.layer_01.shape.color at (min(^.layer_01.pos.j, ^.layer_010.pos.j) - 2,min(^.layer_01.pos.j, ^.layer_010.pos.j) - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 51.7 = 141.0
DL output with Mo: L = 180.9 + 542.5 = 723.4
DL input+output M: L = 270.2 + 594.2 = 864.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 19bb5feb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 19bb5feb.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 19bb5feb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 19bb5feb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 542.5 bits (542.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-358] Checking task 1a2e2828.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 102331.1 = 102343.7
DL output with Mo: L = 12.6 + 780.5 = 793.1
DL input+output M: L = 25.2 + 103111.6 = 103136.8

# learning a model for train pairs
2.000	
1.588	OUT SPE ^.size = '(1, 1)
1.295	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.056	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.889	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.762	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.710	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	IN  SPE ^.layer_0.shape.mask = Full
0.699	IN  SPE ^.layer_01.shape.mask = Full
0.698	IN  SPE ^.layer_011.shape.mask = Full
0.696	IN  SPE ^.layer_0111.shape.mask = Full
0.694	IN  SPE ^.layer_01111.shape.mask = Full
0.693	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.692	IN  SPE ^.layer_011111.shape.mask = Full
0.590	
0.589	IN  DEL ^.layer_011111
0.589	IN  DEL ^.layer_01111
0.589	IN  DEL ^.layer_0111
0.589	IN  DEL ^.layer_011
0.588	IN  DEL ^.layer_01
0.588	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 169.5 + 10432.2 = 10601.7
DL output with Mo: L = 18.1 + 448.3 = 466.3
DL input+output M: L = 187.6 + 10880.5 = 11068.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 18.1 + 448.3 = 466.3
DL input+output M: L = 30.7 + 448.3 = 479.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1a2e2828.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1a2e2828.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1a2e2828.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1a2e2828.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1a2e2828.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1a2e2828.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.7 sec (4.7 sec/task)
bits-train-error = 448.3 bits (448.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-357] Checking task 1a6449f1.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 194579.6 = 194592.2
DL output with Mo: L = 12.6 + 17177.0 = 17189.6
DL input+output M: L = 25.2 + 211756.6 = 211781.8

# learning a model for train pairs
2.000	
1.825	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.704	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.627	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.586	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.549	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.511	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.476	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.440	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.426	OUT SPE ^.size.j = ^.layer_0.shape.size.j - 2
1.415	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.405	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.395	OUT SPE ^.layer_0111.shape.color = pink
1.387	OUT SPE ^.layer_01111.pos.j = ^.layer_0111.pos.i + 1
1.375	OUT SPE ^.size.i = ^.layer_0.shape.size.j - area(^.layer_0111.shape)
1.369	OUT SPE ^.layer_01111.pos.i = ^.layer_01.pos.j - area(^.layer_0111.shape)
1.361	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.i / '3
1.355	OUT SPE ^.layer_011.pos.i = min(^.layer_0.pos.i, ^.layer_01.pos.i)
0.713	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j - area(^.layer_0111.shape),^.layer_0.shape.size.j - 2) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.i / '3)
  _011: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.i, ^.layer_01.pos.i),?)
  _0111: a point with color pink at (?,?)
  _01111: a point with color ? at (^.layer_01.pos.j - area(^.layer_0111.shape),^.layer_0111.pos.i + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 124908.0 = 125046.9
DL output with Mo: L = 303.2 + 11938.6 = 12241.7
DL input+output M: L = 442.0 + 136846.6 = 137288.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j - area(^.layer_0111.shape),^.layer_0.shape.size.j - 2) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.i / '3)
  _011: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.i, ^.layer_01.pos.i),?)
  _0111: a point with color pink at (?,?)
  _01111: a point with color ? at (^.layer_01.pos.j - area(^.layer_0111.shape),^.layer_0111.pos.i + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 40.0 = 178.9
DL output with Mo: L = 303.2 + 11938.6 = 12241.7
DL input+output M: L = 442.0 + 11978.6 = 12420.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1a6449f1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1a6449f1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1a6449f1.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1a6449f1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 11938.6 bits (11938.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-356] Checking task 1acc24af.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49231.3 = 49243.9
DL output with Mo: L = 12.6 + 49231.3 = 49243.9
DL input+output M: L = 25.2 + 98462.5 = 98487.8

# learning a model for train pairs
2.000	
1.510	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.957	OUT ADD ^.layer_0 = ^.layer_0
0.811	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.498	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.459	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.432	OUT SPE ^.layer_011 = coloring(^.layer_011, red)
0.415	OUT SPE ^.size = ^.size
0.404	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.378	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.369	OUT SPE ^.layer_01.pos = ^.layer_0111.pos
0.361	OUT SPE ^.layer_01.shape.size = ^.layer_0111.shape.size
0.355	OUT SPE ^.layer_01.shape.mask = ^.layer_0111.shape.mask
0.351	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.i
0.346	IN  SPE ^.layer_011.shape.color = grey
0.331	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.308	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.303	IN  SPE ^.layer_0.shape.color = blue
0.299	IN  SPE ^.layer_0111.shape.color = grey
0.288	OUT SPE ^.layer_00.shape.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.278	OUT SPE ^.layer_0111.shape.size = ^.layer_01.shape.size
0.270	OUT SPE ^.layer_0111.shape.mask = ^.layer_01.shape.mask
0.265	OUT SPE ^.layer_0111.pos = ^.layer_01.pos
0.261	OUT SPE ^.layer_00.pos.j = ^.layer_01111.pos.j
0.256	OUT SPE ^.layer_00.shape.color = ^.layer_01.shape.color
0.253	OUT SPE ^.layer_00.pos.i = bottom(^.layer_011) - ^.layer_01111.shape.size.j
0.250	IN  SPE ^.layer_0111.shape.mask = Full
0.247	IN  SPE ^.layer_01111.shape.mask = Full
0.245	OUT SPE ^.color = black
0.243	IN  SPE ^.color = black
0.045	
0.045	IN  GEN ^.layer_0.shape.color = ?
0.045	IN  GEN ^.layer_01111.shape.mask = ?
0.045	IN  GEN ^.layer_0111.shape.mask = ?
0.045	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ^.layer_01.shape.color and mask ? at (bottom(^.layer_011) - ^.layer_01111.shape.size.j,^.layer_01111.pos.j)
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0111.shape.size and color ? and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
  _011: coloring(^.layer_011, red)
  _0111: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 166.4 + 9791.3 = 9957.6
DL output with Mo: L = 289.4 + 1741.8 = 2031.1
DL input+output M: L = 455.7 + 11533.1 = 11988.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ^.layer_01.shape.color and mask ? at (bottom(^.layer_011) - ^.layer_01111.shape.size.j,^.layer_01111.pos.j)
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0111.shape.size and color ? and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
  _011: coloring(^.layer_011, red)
  _0111: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 160.9 + 40.0 = 200.9
DL output with Mo: L = 289.4 + 1741.8 = 2031.1
DL input+output M: L = 450.3 + 1781.8 = 2232.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1acc24af.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1acc24af.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1acc24af.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1acc24af.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 1acc24af.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 42.3 sec (42.3 sec/task)
bits-train-error = 1741.8 bits (1741.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-355] Checking task 1c02dbbe.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 108658.4 = 108671.0
DL output with Mo: L = 12.6 + 140066.8 = 140079.4
DL input+output M: L = 25.2 + 248725.2 = 248750.4

# learning a model for train pairs
2.000	
1.084	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.608	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.339	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.202	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.198	OUT SPE ^.size = ^.size
0.196	IN  SPE ^.layer_0.shape.color = grey
0.190	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.185	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.179	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.173	OUT SPE ^.layer_01.pos = max(^.layer_01.pos, ^.layer_00.pos) + (1, 0)
0.160	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.159	IN  SPE ^.layer_0.shape.mask = Full
0.159	OUT SPE ^.layer_0.shape.mask = Full
0.158	OUT SPE ^.layer_01.shape.mask = Full
0.157	OUT SPE ^.layer_011.pos.j = min(^.layer_01.pos.j, ^.layer_00.pos.j) - ^.layer_011.pos.i - ^.layer_01.pos.i
0.094	
0.094	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,?) and color ? and mask Full at max(^.layer_01.pos, ^.layer_00.pos) + (1, 0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,min(^.layer_01.pos.j, ^.layer_00.pos.j) - ^.layer_011.pos.i - ^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 90.6 + 6929.1 = 7019.7
DL output with Mo: L = 195.5 + 12770.4 = 12965.9
DL input+output M: L = 286.1 + 19699.5 = 19985.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,?) and color ? and mask Full at max(^.layer_01.pos, ^.layer_00.pos) + (1, 0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,min(^.layer_01.pos.j, ^.layer_00.pos.j) - ^.layer_011.pos.i - ^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 89.6 + 20.0 = 109.6
DL output with Mo: L = 195.5 + 12770.4 = 12965.9
DL input+output M: L = 285.1 + 12790.4 = 13075.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1c02dbbe.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1c02dbbe.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1c02dbbe.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 1c02dbbe.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.7 sec (56.7 sec/task)
bits-train-error = 12770.4 bits (12770.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-354] Checking task 1c0d0a4b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27243.5 = 27256.1
DL output with Mo: L = 12.6 + 17936.1 = 17948.7
DL input+output M: L = 25.2 + 45179.6 = 45204.8

# learning a model for train pairs
2.000	
1.776	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.573	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.400	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.145	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.035	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.941	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.908	OUT SPE ^.size = ^.size
0.882	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.846	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.835	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.823	OUT SPE ^.layer_0.pos.j = ^.layer_00.pos.j
0.813	OUT SPE ^.layer_0.shape.color = red
0.804	OUT SPE ^.layer_01.shape.color = red
0.795	OUT SPE ^.layer_011.shape.color = red
0.786	OUT SPE ^.layer_0111.shape.color = red
0.776	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j
0.766	OUT SPE ^.layer_011.shape.size = projJ(^.layer_011.shape.size) + (2, 0)
0.758	OUT SPE ^.layer_011.pos = ^.layer_01.pos + (1, 0)
0.749	OUT SPE ^.layer_01.pos.i = 1
0.741	OUT SPE ^.layer_0.shape.size.i = area(^.layer_01.shape) - 3
0.735	OUT SPE ^.layer_01.shape.size.j = ^.layer_011.shape.size.i - 1
0.729	OUT SPE ^.layer_0111.pos.j = min(^.layer_01.pos.i, ^.layer_0111.pos.i) - ^.layer_0111.pos.j - ^.layer_011.pos.j
0.722	IN  SPE ^.layer_00.shape.color = cyan
0.716	IN  SPE ^.layer_0.shape.color = cyan
0.710	IN  SPE ^.layer_01.shape.color = cyan
0.704	IN  SPE ^.layer_011.shape.color = cyan
0.698	IN  SPE ^.layer_0111.shape.color = cyan
0.693	OUT SPE ^.layer_0111.shape.mask = Full
0.688	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.i + ^.layer_0111.pos.j - ^.layer_011.pos.j
0.684	OUT SPE ^.color = black
0.680	OUT SPE ^.layer_0111.shape.size.i = area(^.layer_011.shape) - ^.layer_01.pos.i - ^.layer_0.pos.i
0.678	IN  SPE ^.color = black
0.299	
0.299	IN  GEN ^.layer_0111.shape.color = ?
0.299	IN  GEN ^.layer_011.shape.color = ?
0.299	IN  GEN ^.layer_01.shape.color = ?
0.299	IN  GEN ^.layer_0.shape.color = ?
0.299	IN  GEN ^.layer_00.shape.color = ?
0.299	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_01.shape) - 3,^.layer_0.shape.size.j) and color red and mask ? at (^.layer_011.pos.i + ^.layer_0111.pos.j - ^.layer_011.pos.j,^.layer_00.pos.j)
  _01: a rectangle with size (?,^.layer_011.shape.size.i - 1) and color red and mask ? at (1,?)
  _011: a rectangle with size projJ(^.layer_011.shape.size) + (2, 0) and color red and mask ? at ^.layer_01.pos + (1, 0)
  _0111: a rectangle with size (area(^.layer_011.shape) - ^.layer_01.pos.i - ^.layer_0.pos.i,?) and color red and mask Full at (?,min(^.layer_01.pos.i, ^.layer_0111.pos.i) - ^.layer_0111.pos.j - ^.layer_011.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color cyan at (?,?)
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 146.3 + 10352.8 = 10499.1
DL output with Mo: L = 418.4 + 4831.3 = 5249.7
DL input+output M: L = 564.8 + 15184.1 = 15748.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_01.shape) - 3,^.layer_0.shape.size.j) and color red and mask ? at (^.layer_011.pos.i + ^.layer_0111.pos.j - ^.layer_011.pos.j,^.layer_00.pos.j)
  _01: a rectangle with size (?,^.layer_011.shape.size.i - 1) and color red and mask ? at (1,?)
  _011: a rectangle with size projJ(^.layer_011.shape.size) + (2, 0) and color red and mask ? at ^.layer_01.pos + (1, 0)
  _0111: a rectangle with size (area(^.layer_011.shape) - ^.layer_01.pos.i - ^.layer_0.pos.i,?) and color red and mask Full at (?,min(^.layer_01.pos.i, ^.layer_0111.pos.i) - ^.layer_0111.pos.j - ^.layer_011.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 40.0 = 169.6
DL output with Mo: L = 418.4 + 4831.3 = 5249.7
DL input+output M: L = 548.0 + 4871.3 = 5419.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1c0d0a4b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1c0d0a4b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1c0d0a4b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1c0d0a4b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 46.5 sec (46.5 sec/task)
bits-train-error = 4831.3 bits (4831.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-353] Checking task 1c56ad9f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 64546.9 = 64559.5
DL output with Mo: L = 12.6 + 64546.9 = 64559.5
DL input+output M: L = 25.2 + 129093.9 = 129119.1

# learning a model for train pairs
2.000	
1.072	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.168	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.155	OUT SPE ^.size = ^.size
0.143	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + (0, 2)
0.135	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (0, 1)
0.132	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.130	OUT SPE ^.color = black
0.129	IN  SPE ^.color = black
0.059	
0.059	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (0, 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos - (0, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 4492.7 = 4531.7
DL output with Mo: L = 52.7 + 3717.1 = 3769.8
DL input+output M: L = 91.6 + 8209.8 = 8301.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + (0, 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos - (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 52.7 + 3717.1 = 3769.8
DL input+output M: L = 91.5 + 3717.1 = 3808.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1c56ad9f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1c56ad9f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1c56ad9f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1c56ad9f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1c56ad9f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 3717.1 bits (3717.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-352] Checking task 1d0a4b61.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 432083.4 = 432096.0
DL output with Mo: L = 12.6 + 397025.7 = 397038.3
DL input+output M: L = 25.2 + 829109.0 = 829134.3

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.813	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.000	
0.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 351301.8 = 351340.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 60.0 + 351301.8 = 351361.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1d0a4b61.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1d0a4b61.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1d0a4b61.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1d0a4b61.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 8.3 sec (8.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-351] Checking task 1d398264.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11259.7 = 11272.3
DL output with Mo: L = 12.6 + 56818.0 = 56830.6
DL input+output M: L = 25.2 + 68077.7 = 68102.9

# learning a model for train pairs
2.000	
1.668	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.452	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.171	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.929	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.897	OUT ADD ^.layer_011 = ^.layer_01
0.809	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	OUT ADD ^.layer_0110 = ^.layer_0110
0.732	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.693	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.677	IN  SPE ^.layer_01.shape.color = red
0.665	OUT SPE ^.size = ^.size
0.657	IN  SPE ^.layer_0.shape.mask = Full
0.648	IN  SPE ^.layer_01.shape.mask = Full
0.214	
0.214	IN  GEN ^.layer_01.shape.mask = ?
0.214	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 134.9 + 4919.2 = 5054.1
DL output with Mo: L = 147.1 + 11194.9 = 11342.0
DL input+output M: L = 282.0 + 16114.1 = 16396.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 132.9 + 31.7 = 164.6
DL output with Mo: L = 147.1 + 11194.9 = 11342.0
DL input+output M: L = 280.0 + 11226.6 = 11506.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1d398264.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1d398264.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1d398264.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 1d398264.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1d398264.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 11194.9 bits (11194.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-350] Checking task 1da012fc.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 63591.7 = 63604.3
DL output with Mo: L = 12.6 + 63591.7 = 63604.3
DL input+output M: L = 25.2 + 127183.5 = 127208.7

# learning a model for train pairs
2.000	
1.503	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.993	OUT ADD ^.layer_0 = ^.layer_0
0.863	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.734	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.613	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.493	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.386	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.278	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.256	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.230	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.219	OUT SPE ^.layer_01111 = coloring(^.layer_01111, green)
0.212	OUT SPE ^.size = ^.size
0.205	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.199	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.193	OUT SPE ^.layer_0111.shape.mask = ^.layer_0111.shape.mask
0.188	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.183	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.179	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.175	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.171	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.166	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.162	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.159	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
0.146	OUT ADD ^.layer_011110 = ^.layer_011110
0.140	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.134	OUT SPE ^.layer_00 = ^.layer_011111
0.132	IN  SPE ^.layer_0.shape.color = grey
0.130	IN  SPE ^.layer_011110.shape.color = red
0.129	IN  SPE ^.layer_011111.shape.color = yellow
0.127	OUT SPE ^.layer_0111 = coloring(^.layer_0111, red)
0.126	OUT SPE ^.layer_011 = coloring(^.layer_011, yellow)
0.125	IN  SPE ^.color = black
0.124	OUT SPE ^.color = black
0.020	
0.019	IN  GEN ^.layer_0.shape.color = ?
0.019	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_011111
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: coloring(^.layer_011, yellow)
  _0111: coloring(^.layer_0111, red)
  _011110: ^.layer_011110
  _01111: coloring(^.layer_01111, green)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color red at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color yellow at (?,?)

DL input  with Mi: L = 179.7 + 6690.4 = 6870.1
DL output with Mo: L = 105.7 + 918.0 = 1023.7
DL input+output M: L = 285.4 + 7608.4 = 7893.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_011111
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: coloring(^.layer_011, yellow)
  _0111: coloring(^.layer_0111, red)
  _011110: ^.layer_011110
  _01111: coloring(^.layer_01111, green)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color red at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color yellow at (?,?)

DL input  with Mi: L = 176.2 + 40.0 = 216.2
DL output with Mo: L = 105.7 + 918.0 = 1023.7
DL input+output M: L = 282.0 + 958.0 = 1239.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1da012fc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 1da012fc.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 1da012fc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.3 sec (57.3 sec/task)
bits-train-error = 918.0 bits (918.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-349] Checking task 1e81d6f9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39016.7 = 39029.4
DL output with Mo: L = 12.6 + 34018.8 = 34031.5
DL input+output M: L = 25.2 + 73035.6 = 73060.8

# learning a model for train pairs
2.000	
1.812	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.648	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.571	OUT ADD ^.layer_01 = ^.layer_0
1.546	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.501	OUT ADD ^.layer_011 = ^.layer_01
1.482	OUT SPE ^.size = ^.size
1.464	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.446	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.429	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.411	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
1.394	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
1.377	IN  SPE ^.layer_0.shape.mask = ...x|...x|...x|xxxx
1.361	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.781	OUT SPE ^ = closeSym(flipDiag1; , ^.layer_010.shape.color, applySym(flipDiag1, ^.grid))
0.766	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.751	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.747	IN  SPE ^.layer_0.shape.color = grey
0.745	IN  SPE ^.color = black
0.006	
0.004	IN  DEL ^.layer_0
0.004	IN  DEL ^.layer_0111
0.003	IN  DEL ^.layer_011
0.002	IN  DEL ^.layer_01
0.002	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipDiag1; , ^.layer_010.shape.color, applySym(flipDiag1, ^.grid))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ...x|...x|...x|xxxx at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 143.7 + 28895.7 = 29039.4
DL output with Mo: L = 40.2 + 0.0 = 40.2
DL input+output M: L = 183.9 + 28895.7 = 29079.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipDiag1; , ^.layer_010.shape.color, applySym(flipDiag1, ^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _010: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 20.0 = 49.5
DL output with Mo: L = 40.2 + 0.0 = 40.2
DL input+output M: L = 69.8 + 20.0 = 89.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1e81d6f9.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1e81d6f9.json/2: 1 2nd (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1e81d6f9.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 1e81d6f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.8 sec (15.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-348] Checking task 1e97544e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 535586.7 = 535599.3
DL output with Mo: L = 12.6 + 525292.0 = 525304.6
DL input+output M: L = 25.2 + 1060878.7 = 1060903.9

# learning a model for train pairs
2.000	
1.945	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.893	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.842	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.792	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.742	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.688	OUT ADD ^.layer_00 = ^.layer_0
1.639	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.589	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.694	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 479532.3 = 479596.5
DL output with Mo: L = 146.2 + 364270.0 = 364416.2
DL input+output M: L = 210.4 + 843802.3 = 844012.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 31.7 = 95.9
DL output with Mo: L = 146.2 + 364270.0 = 364416.2
DL input+output M: L = 210.4 + 364301.7 = 364512.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1e97544e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 1e97544e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 1e97544e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 1e97544e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.1 sec (59.1 sec/task)
bits-train-error = 364270.0 bits (364270.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-347] Checking task 2037f2c7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 164427.2 = 164439.8
DL output with Mo: L = 12.6 + 10190.9 = 10203.5
DL input+output M: L = 25.2 + 174618.1 = 174643.3

# learning a model for train pairs
2.000	
1.311	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.166	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.028	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.311	
0.311	IN  DEL ^.layer_01
0.311	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 117986.8 = 118051.0
DL output with Mo: L = 38.8 + 3129.4 = 3168.2
DL input+output M: L = 103.0 + 121116.2 = 121219.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 38.8 + 3129.4 = 3168.2
DL input+output M: L = 51.4 + 3129.4 = 3180.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2037f2c7.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2037f2c7.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2037f2c7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 2037f2c7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.9 sec (56.9 sec/task)
bits-train-error = 3129.4 bits (3129.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-346] Checking task 2072aba6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4434.5 = 4447.1
DL output with Mo: L = 12.6 + 19402.7 = 19415.4
DL input+output M: L = 25.2 + 23837.3 = 23862.5

# learning a model for train pairs
2.000	
1.374	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.660	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.623	IN  SPE ^.layer_0.shape.color = grey
0.597	OUT SPE ^.layer_0.shape.size = tiling(^.layer_0.shape.size, 2, 2)
0.571	OUT SPE ^.size = tiling(^.size, 2, 2)
0.555	IN  SPE ^.color = black
0.539	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.524	OUT SPE ^.layer_01.pos = '(0, 0)
0.516	OUT SPE ^.layer_0.shape.color = blue
0.507	OUT SPE ^.layer_01.shape.color = red
0.503	OUT SPE ^.color = black
0.192	
0.192	IN  GEN ^.layer_0.shape.color = ?
0.192	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size, 2, 2) and color blue and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color red and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1381.9 = 1424.2
DL output with Mo: L = 87.6 + 3464.5 = 3552.1
DL input+output M: L = 129.9 + 4846.5 = 4976.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size, 2, 2) and color blue and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color red and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 87.6 + 3464.5 = 3552.1
DL input+output M: L = 126.4 + 3464.5 = 3591.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2072aba6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2072aba6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2072aba6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 2072aba6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 3464.5 bits (3464.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-345] Checking task 20818e16.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 98310.2 = 98322.8
DL output with Mo: L = 12.6 + 27291.4 = 27304.1
DL input+output M: L = 25.2 + 125601.7 = 125626.9

# learning a model for train pairs
2.000	
1.397	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.823	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.533	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.247	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.161	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.140	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
0.129	OUT SPE ^.layer_01.pos = '(0, 0)
0.118	OUT SPE ^.layer_011.pos = '(0, 0)
0.109	OUT SPE ^.size.j = max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)
0.103	OUT SPE ^.layer_0.pos.i = '0
0.100	OUT SPE ^.layer_0.shape.mask = Full
0.092	OUT SPE ^.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) * '3
0.086	OUT SPE ^.layer_0.shape.size.j = ^.layer_011.shape.size.j / '2
0.085	IN  SPE ^.layer_01.shape.mask = Full
0.033	
0.033	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) * '3,max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)) and color ? and layers
  _0: a rectangle with size (?,^.layer_011.shape.size.j / '2) and color ? and mask Full at ('0,?)
  _01: ^.layer_01.shape at '(0, 0)
  _011: ^.layer_011.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 5232.9 = 5323.2
DL output with Mo: L = 203.6 + 640.8 = 844.4
DL input+output M: L = 293.8 + 5873.8 = 6167.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) * '3,max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)) and color ? and layers
  _0: a rectangle with size (?,^.layer_011.shape.size.j / '2) and color ? and mask Full at ('0,?)
  _01: ^.layer_01.shape at '(0, 0)
  _011: ^.layer_011.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 71.7 = 161.0
DL output with Mo: L = 203.6 + 640.8 = 844.4
DL input+output M: L = 292.8 + 712.5 = 1005.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 20818e16.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 20818e16.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 20818e16.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 20818e16.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.3 sec (56.3 sec/task)
bits-train-error = 640.8 bits (640.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-344] Checking task 20981f0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33945.7 = 33958.3
DL output with Mo: L = 12.6 + 33945.7 = 33958.3
DL input+output M: L = 25.2 + 67891.4 = 67916.6

# learning a model for train pairs
2.000	
1.893	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.769	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.701	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.611	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
1.521	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
1.453	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.384	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.316	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.248	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.223	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.142	IN  ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.094	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	OUT ADD ^.layer_010 = ^.layer_0101
1.024	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
1.004	OUT SPE ^.size = ^.size
0.995	OUT SPE ^.layer_0111.shape.size = ^.layer_01.shape.size
0.989	OUT SPE ^.layer_011111.shape.size = '(1, 1)
0.984	IN  SPE ^.layer_00.shape.color = blue
0.979	OUT SPE ^.layer_0111.shape.color = blue
0.974	IN  SPE ^.layer_0.shape.color = blue
0.970	IN  SPE ^.layer_010.shape.color = blue
0.965	IN  SPE ^.layer_0101.shape.color = blue
0.960	IN  SPE ^.layer_01.shape.color = blue
0.955	OUT SPE ^.layer_011111.shape.color = red
0.950	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.i - 1
0.945	OUT SPE ^.layer_011111.pos.j = ^.layer_0101.pos.j - 2
0.940	OUT SPE ^.layer_011111.pos = ^.layer_0101.pos - (2, 2)
0.935	OUT SPE ^.layer_01.pos.j = ^.layer_0101.pos.j
0.930	OUT SPE ^.layer_011.pos.i = ^.layer_0101.pos.i
0.925	OUT SPE ^.layer_01.pos.i = bottom(^.layer_00)
0.921	OUT SPE ^.layer_0110.pos.i = min(^.layer_01.pos.i, ^.layer_011.pos.i)
0.916	OUT SPE ^.layer_011.pos.j = bottom(^.layer_011) + area(^.layer_011.shape)
0.912	OUT SPE ^.layer_0111.pos.i = max(^.layer_011.pos.j, ^.layer_00.pos.j)
0.908	OUT SPE ^.layer_01111.pos.i = ^.layer_01.pos.i + area(^.layer_0.shape)
0.905	IN  SPE ^.layer_00.shape.mask = Full
0.902	OUT SPE ^.layer_011111.shape.mask = Full
0.899	OUT SPE ^.layer_01111.shape.size.i = area(^.layer_0.shape) - 2
0.895	OUT SPE ^.layer_0.pos.i = bottom(^.layer_00) + ^.layer_0.pos.i - ^.layer_00.pos.i
0.892	OUT SPE ^.layer_01111.shape.size.j = area(^.layer_0.shape) - 2
0.890	IN  SPE ^.color = black
0.888	OUT SPE ^.color = black
0.330	
0.330	IN  GEN ^.layer_01.shape.color = ?
0.330	IN  GEN ^.layer_0101.shape.color = ?
0.330	IN  GEN ^.layer_010.shape.color = ?
0.330	IN  GEN ^.layer_0.shape.color = ?
0.330	IN  GEN ^.layer_00.shape.color = ?
0.330	IN  GEN ^.layer_00.shape.mask = ?
0.330	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (bottom(^.layer_00) + ^.layer_0.pos.i - ^.layer_00.pos.i,?)
  _010: ^.layer_0101
  _01: ^.layer_01.shape at (bottom(^.layer_00),^.layer_0101.pos.j)
  _0110: ^.layer_011.shape at (min(^.layer_01.pos.i, ^.layer_011.pos.i),?)
  _011: ^.layer_01.shape at (^.layer_0101.pos.i,bottom(^.layer_011) + area(^.layer_011.shape))
  _0111: a rectangle with size ^.layer_01.shape.size and color blue and mask ? at (max(^.layer_011.pos.j, ^.layer_00.pos.j),?)
  _01111: a rectangle with size (area(^.layer_0.shape) - 2,area(^.layer_0.shape) - 2) and color ? and mask ? at (^.layer_01.pos.i + area(^.layer_0.shape),^.layer_0.pos.i - 1)
  _011111: a rectangle with size '(1, 1) and color red and mask Full at ^.layer_0101.pos - (2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0101: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 181.3 + 18969.0 = 19150.3
DL output with Mo: L = 530.0 + 10470.3 = 11000.3
DL input+output M: L = 711.3 + 29439.3 = 30150.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (bottom(^.layer_00) + ^.layer_0.pos.i - ^.layer_00.pos.i,?)
  _010: ^.layer_0101
  _01: ^.layer_01.shape at (bottom(^.layer_00),^.layer_0101.pos.j)
  _0110: ^.layer_011.shape at (min(^.layer_01.pos.i, ^.layer_011.pos.i),?)
  _011: ^.layer_01.shape at (^.layer_0101.pos.i,bottom(^.layer_011) + area(^.layer_011.shape))
  _0111: a rectangle with size ^.layer_01.shape.size and color blue and mask ? at (max(^.layer_011.pos.j, ^.layer_00.pos.j),?)
  _01111: a rectangle with size (area(^.layer_0.shape) - 2,area(^.layer_0.shape) - 2) and color ? and mask ? at (^.layer_01.pos.i + area(^.layer_0.shape),^.layer_0.pos.i - 1)
  _011111: a rectangle with size '(1, 1) and color red and mask Full at ^.layer_0101.pos - (2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 31.7 = 195.2
DL output with Mo: L = 530.0 + 10470.3 = 11000.3
DL input+output M: L = 693.6 + 10502.0 = 11195.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 20981f0e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 20981f0e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 20981f0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 20981f0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 52.0 sec (52.0 sec/task)
bits-train-error = 10470.3 bits (10470.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-343] Checking task 212895b5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42337.2 = 42349.8
DL output with Mo: L = 12.6 + 88380.9 = 88393.5
DL input+output M: L = 25.2 + 130718.0 = 130743.3

# learning a model for train pairs
2.000	
1.777	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.658	OUT ADD ^.layer_0 = ^.layer_0
1.549	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.454	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.390	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.327	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.274	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.235	OUT ADD ^.layer_010 = ^.layer_01
1.196	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.167	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.140	OUT ADD ^.layer_0110 = ^.layer_011
1.114	OUT ADD ^.layer_01110 = ^.layer_0111
1.100	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.086	IN  ADD ^.layer_01110 = a point with color ? at (?,?)
1.071	IN  ADD ^.layer_010 = a point with color ? at (?,?)
1.050	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.042	OUT SPE ^.size = ^.size
1.037	OUT SPE ^.layer_0111.shape.size = ^.layer_011111.shape.size + (3, 3)
1.033	OUT SPE ^.layer_01111.pos = ^.layer_0.pos + (3, 3)
1.029	IN  SPE ^.layer_0.shape.color = cyan
1.025	IN  SPE ^.layer_010.shape.color = grey
1.021	IN  SPE ^.layer_01.shape.color = grey
1.017	IN  SPE ^.layer_011.shape.color = grey
0.457	
0.456	IN  DEL ^.layer_01111
0.456	IN  DEL ^.layer_01110
0.456	IN  DEL ^.layer_010
0.455	IN  GEN ^.layer_011.shape.color = ?
0.455	IN  GEN ^.layer_01.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111
  _0111: a rectangle with size ^.layer_011111.shape.size + (3, 3) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos + (3, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _010: a point with color grey at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 198.1 + 23741.0 = 23939.2
DL output with Mo: L = 185.3 + 39772.8 = 39958.0
DL input+output M: L = 383.4 + 63513.8 = 63897.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111
  _0111: a rectangle with size ^.layer_011111.shape.size + (3, 3) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos + (3, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.2 + 0.0 = 142.2
DL output with Mo: L = 185.3 + 39772.8 = 39958.0
DL input+output M: L = 327.5 + 39772.8 = 40100.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 212895b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 212895b5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 212895b5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 212895b5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 64.8 sec (64.8 sec/task)
bits-train-error = 39772.8 bits (39772.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-342] Checking task 21f83797.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2059.2 = 2071.8
DL output with Mo: L = 12.6 + 52703.5 = 52716.1
DL input+output M: L = 25.2 + 54762.6 = 54787.9

# learning a model for train pairs
2.000	
1.381	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.097	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.899	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.692	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.639	IN  SPE ^.layer_0.shape.color = red
0.586	IN  SPE ^.layer_01.shape.color = red
0.562	IN  SPE ^.color = black
0.554	OUT SPE ^.size = ^.size
0.546	OUT SPE ^.layer_0.shape.size = ^.size
0.538	OUT SPE ^.layer_01.shape = scaleTo(coloring(^.layer_01.shape, blue), span(^.layer_0.pos, ^.layer_01.pos) - (2, 2))
0.533	OUT SPE ^.layer_0.pos = '(0, 0)
0.529	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.527	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.526	OUT SPE ^.color = black
0.086	
0.084	IN  GEN ^.layer_01.shape.color = ?
0.083	IN  GEN ^.layer_0.shape.color = ?
0.083	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
  _01: scaleTo(coloring(^.layer_01.shape, blue), span(^.layer_0.pos, ^.layer_01.pos) - (2, 2)) at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 52.4 + 910.7 = 963.1
DL output with Mo: L = 133.5 + 3071.5 = 3205.0
DL input+output M: L = 186.0 + 3982.2 = 4168.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
  _01: scaleTo(coloring(^.layer_01.shape, blue), span(^.layer_0.pos, ^.layer_01.pos) - (2, 2)) at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 133.5 + 3071.5 = 3205.0
DL input+output M: L = 179.2 + 3071.5 = 3250.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 21f83797.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 21f83797.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 21f83797.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.6 sec (3.6 sec/task)
bits-train-error = 3071.5 bits (3071.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-341] Checking task 22a4bbc2.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 68003.2 = 68015.8
DL output with Mo: L = 12.6 + 71294.5 = 71307.1
DL input+output M: L = 25.2 + 139297.7 = 139322.9

# learning a model for train pairs
2.000	
1.842	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.686	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.542	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.428	OUT ADD ^.layer_01 = ^.layer_0
1.328	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.219	OUT ADD ^.layer_00 = ^.layer_00
1.134	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.054	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	OUT ADD ^.layer_0111 = ^.layer_011
0.896	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
0.786	OUT SPE ^.size = ^.size
0.780	OUT SPE ^.layer_01111.shape.size = max(^.layer_01.shape.size, ^.layer_011.shape.size) - (0, 1)
0.777	OUT SPE ^.layer_011.shape.color = cyan
0.774	OUT SPE ^.layer_011111.shape.color = ^.layer_011.shape.color
0.772	OUT SPE ^.layer_011.pos.j = '0
0.770	IN  SPE ^.layer_01.shape.mask = Full
0.768	IN  SPE ^.layer_00.shape.mask = Full
0.766	IN  SPE ^.layer_0.shape.mask = Full
0.764	IN  SPE ^.layer_011.shape.mask = Full
0.762	OUT SPE ^.layer_0.shape.mask = Full
0.760	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j
0.758	OUT SPE ^.layer_010.shape.mask = Full
0.756	OUT SPE ^.layer_011.shape.mask = Full
0.754	OUT SPE ^.layer_01111.pos.j = ^.layer_00.pos.j
0.752	OUT SPE ^.layer_01111.shape.mask = Full
0.750	OUT SPE ^.layer_011111.shape.mask = Full
0.242	
0.242	IN  GEN ^.layer_011.shape.mask = ?
0.242	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,?) and color majorityColor(^.grid) and mask Full at (?,^.layer_01.pos.j)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,'0)
  _0111: ^.layer_011
  _01111: a rectangle with size max(^.layer_01.shape.size, ^.layer_011.shape.size) - (0, 1) and color ? and mask Full at (?,^.layer_00.pos.j)
  _011111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 118.1 + 34636.2 = 34754.3
DL output with Mo: L = 255.9 + 16810.5 = 17066.4
DL input+output M: L = 374.0 + 51446.7 = 51820.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,?) and color majorityColor(^.grid) and mask Full at (?,^.layer_01.pos.j)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,'0)
  _0111: ^.layer_011
  _01111: a rectangle with size max(^.layer_01.shape.size, ^.layer_011.shape.size) - (0, 1) and color ? and mask Full at (?,^.layer_00.pos.j)
  _011111: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 116.1 + 40.0 = 156.1
DL output with Mo: L = 255.9 + 16810.5 = 17066.4
DL input+output M: L = 372.0 + 16850.5 = 17222.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 22a4bbc2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 22a4bbc2.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 22a4bbc2.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 22a4bbc2.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 22a4bbc2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 16810.5 bits (16810.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-340] Checking task 25094a63.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 533765.4 = 533778.0
DL output with Mo: L = 12.6 + 543855.2 = 543867.8
DL input+output M: L = 25.2 + 1077620.5 = 1077645.8

# learning a model for train pairs
2.000	
1.915	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.839	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.765	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.704	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.661	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.633	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.609	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.814	
0.814	IN  DEL ^.layer_011
0.814	IN  DEL ^.layer_01
0.813	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 424546.7 = 424636.0
DL output with Mo: L = 114.1 + 442290.2 = 442404.4
DL input+output M: L = 203.4 + 866837.0 = 867040.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 442290.2 = 442404.4
DL input+output M: L = 126.7 + 442290.2 = 442417.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 25094a63.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 25094a63.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 25094a63.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.7 sec (60.7 sec/task)
bits-train-error = 442290.2 bits (442290.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-339] Checking task 2546ccf6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 96540.4 = 96553.0
DL output with Mo: L = 12.6 + 102383.5 = 102396.1
DL input+output M: L = 25.2 + 198923.9 = 198949.1

# learning a model for train pairs
2.000	
1.260	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.496	OUT ADD ^.layer_0 = ^.layer_0
0.454	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.409	OUT ADD ^.layer_01 = ^.layer_01
0.366	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.349	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.345	OUT SPE ^.size = ^.size
0.341	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.333	OUT ADD ^.layer_010 = ^.layer_010
0.326	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.318	IN  ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.307	OUT ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.299	OUT SPE ^.layer_0101.pos.i = ^.layer_0101.pos.j + 1
0.294	OUT ADD ^.layer_0100 = ^.layer_010.shape at (?,?)
0.290	IN  ADD ^.layer_01011 = a point with color ? at (?,?)
0.286	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.284	OUT SPE ^.layer_0100 = ^.layer_01011
0.281	OUT SPE ^.layer_0111.pos = ^.layer_0101.pos
0.280	OUT SPE ^.layer_0111.shape.size.i = ^.layer_0101.shape.size.i
0.279	OUT SPE ^.layer_0101.shape.color = ^.layer_0101.shape.color
0.278	OUT SPE ^.layer_0101.pos.j = bottom(^.layer_0101) - 2
0.277	OUT SPE ^.layer_0101.shape.size.j = ^.layer_0101.shape.size.j - ^.layer_01.shape.size.j
0.275	OUT SPE ^.layer_011.pos = max(^.layer_011.pos, ^.layer_0101.pos) - ^.layer_011.pos - ^.layer_01.pos
0.274	OUT SPE ^.layer_0110.shape.color = ^.layer_011.shape.color
0.273	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
0.272	OUT SPE ^.layer_0110.pos.j = ^.layer_01011.pos.j + 2
0.271	OUT SPE ^.layer_0110.pos = max(^.layer_011.pos, ^.layer_0101.pos) + ^.layer_01011.pos - ^.layer_010.pos
0.271	OUT SPE ^.layer_0101.shape.size.i = ^.layer_0101.shape.size.j / '3
0.270	OUT SPE ^.layer_0110.shape.size.j = area(^.layer_01.shape) - min(^.layer_01.shape.size.i, ^.layer_0101.shape.size.i)
0.269	OUT SPE ^.layer_0111.shape.size.j = area(^.layer_01.shape) - min(^.layer_01.shape.size.i, ^.layer_0101.shape.size.i)
0.269	OUT SPE ^.layer_0110.shape.size.i = ^.layer_0101.shape.size.j / '3
0.268	IN  SPE ^.color = black
0.268	OUT SPE ^.color = black
0.066	
0.066	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: ^.layer_01011
  _010: ^.layer_010
  _0101: a rectangle with size (^.layer_0101.shape.size.j / '3,^.layer_0101.shape.size.j - ^.layer_01.shape.size.j) and color ^.layer_0101.shape.color and mask ? at (^.layer_0101.pos.j + 1,bottom(^.layer_0101) - 2)
  _01: ^.layer_01
  _0110: a rectangle with size (^.layer_0101.shape.size.j / '3,area(^.layer_01.shape) - min(^.layer_01.shape.size.i, ^.layer_0101.shape.size.i)) and color ^.layer_011.shape.color and mask ? at max(^.layer_011.pos, ^.layer_0101.pos) + ^.layer_01011.pos - ^.layer_010.pos
  _011: ^.layer_01.shape at max(^.layer_011.pos, ^.layer_0101.pos) - ^.layer_011.pos - ^.layer_01.pos
  _0111: a rectangle with size (^.layer_0101.shape.size.i,area(^.layer_01.shape) - min(^.layer_01.shape.size.i, ^.layer_0101.shape.size.i)) and color ^.layer_011.shape.color and mask ? at ^.layer_0101.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01011: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 135.8 + 19552.7 = 19688.5
DL output with Mo: L = 590.0 + 5950.2 = 6540.2
DL input+output M: L = 725.8 + 25502.9 = 26228.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: ^.layer_01011
  _010: ^.layer_010
  _0101: a rectangle with size (^.layer_0101.shape.size.j / '3,^.layer_0101.shape.size.j - ^.layer_01.shape.size.j) and color ^.layer_0101.shape.color and mask ? at (^.layer_0101.pos.j + 1,bottom(^.layer_0101) - 2)
  _01: ^.layer_01
  _0110: a rectangle with size (^.layer_0101.shape.size.j / '3,area(^.layer_01.shape) - min(^.layer_01.shape.size.i, ^.layer_0101.shape.size.i)) and color ^.layer_011.shape.color and mask ? at max(^.layer_011.pos, ^.layer_0101.pos) + ^.layer_01011.pos - ^.layer_010.pos
  _011: ^.layer_01.shape at max(^.layer_011.pos, ^.layer_0101.pos) - ^.layer_011.pos - ^.layer_01.pos
  _0111: a rectangle with size (^.layer_0101.shape.size.i,area(^.layer_01.shape) - min(^.layer_01.shape.size.i, ^.layer_0101.shape.size.i)) and color ^.layer_011.shape.color and mask ? at ^.layer_0101.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01011: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 51.7 = 187.4
DL output with Mo: L = 590.0 + 5950.2 = 6540.2
DL input+output M: L = 725.7 + 6001.9 = 6727.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2546ccf6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2546ccf6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 2546ccf6.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 33.0 sec (33.0 sec/task)
bits-train-error = 5950.2 bits (5950.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-338] Checking task 256b0a75.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35121.3 = 35134.0
DL output with Mo: L = 12.6 + 327683.0 = 327695.6
DL input+output M: L = 25.2 + 362804.3 = 362829.5

# learning a model for train pairs
2.000	
1.416	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.348	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.280	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.154	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.137	IN  SPE ^.layer_0.shape.mask = xx|x.
1.120	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
1.113	IN  SPE ^.layer_01.shape.mask = xx|.x
1.096	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.079	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.072	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
1.055	IN  SPE ^.layer_0111.shape.mask = .x|xx
1.047	IN  SPE ^.layer_011.shape.mask = x.|xx
1.043	IN  SPE ^.layer_01.shape.color = cyan
1.039	OUT ADD ^.layer_01 = ^.layer_0110
1.035	OUT ADD ^.layer_011 = ^.layer_01111
1.033	OUT ADD ^.layer_0111 = ^.layer_011111
0.987	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.882	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.828	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.811	OUT ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	OUT SPE ^.size = ^.size
0.807	IN  SPE ^.color = black
0.806	OUT SPE ^.layer_01111.shape.size.i = area(^.layer_0111.shape) + 3
0.771	OUT SPE ^.layer_0111111.shape.size = ^.layer_0111.shape.size + ^.layer_0111.pos - ^.layer_0.pos
0.770	OUT SPE ^.layer_0111111.pos = ^.layer_0.pos
0.151	
0.150	IN  DEL ^.layer_0111111
0.149	IN  DEL ^.layer_01
0.148	IN  DEL ^.layer_011
0.148	IN  GEN ^.layer_0.shape.mask = ?
0.148	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0110
  _011: ^.layer_01111
  _0111: ^.layer_011111
  _01111: a rectangle with size (area(^.layer_0111.shape) + 3,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size ^.layer_0111.shape.size + ^.layer_0111.pos - ^.layer_0.pos and color ? and mask ? at ^.layer_0.pos
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask xx|x. at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask xx|.x at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask x.|xx at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask .x|xx at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 204.7 + 21794.4 = 21999.0
DL output with Mo: L = 258.1 + 46821.4 = 47079.5
DL input+output M: L = 462.8 + 68615.8 = 69078.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0110
  _011: ^.layer_01111
  _0111: ^.layer_011111
  _01111: a rectangle with size (area(^.layer_0111.shape) + 3,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size ^.layer_0111.shape.size + ^.layer_0111.pos - ^.layer_0.pos and color ? and mask ? at ^.layer_0.pos
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask .x|xx at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 117.4 + 40.0 = 157.4
DL output with Mo: L = 258.1 + 46821.4 = 47079.5
DL input+output M: L = 375.5 + 46861.4 = 47236.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 256b0a75.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 256b0a75.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 256b0a75.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 256b0a75.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.4 sec (60.4 sec/task)
bits-train-error = 46821.4 bits (46821.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-337] Checking task 2685904e.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 51716.5 = 51729.1
DL output with Mo: L = 12.6 + 70357.0 = 70369.7
DL input+output M: L = 25.2 + 122073.5 = 122098.8

# learning a model for train pairs
2.000	
1.606	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.288	OUT ADD ^.layer_0 = ^.layer_0
1.130	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.986	OUT ADD ^.layer_01 = ^.layer_01
0.891	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.747	OUT ADD ^.layer_0111 = ^.layer_011
0.698	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.648	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.585	OUT ADD ^.layer_0110 = ^.layer_0110
0.560	IN  ADD ^.layer_01100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.504	OUT ADD ^.layer_01100 = ^.layer_01100
0.487	OUT SPE ^.size = ^.size
0.476	IN  ADD ^.layer_011000 = a point with color ? at (?,?)
0.469	IN  SPE ^.layer_0.shape.color = grey
0.466	IN  SPE ^.layer_0.shape.mask = Full
0.462	IN  SPE ^.layer_01.shape.mask = Full
0.458	IN  SPE ^.layer_01100.shape.mask = Full
0.454	IN  SPE ^.layer_011.shape.mask = Full
0.451	IN  SPE ^.color = black
0.448	OUT SPE ^.layer_010.shape.mask = Full
0.446	OUT SPE ^.layer_011.shape.size.j = 1
0.443	OUT SPE ^.layer_011.shape.mask = Full
0.440	OUT SPE ^.layer_01111.shape.size.j = 1
0.437	OUT SPE ^.layer_01111.shape.mask = Full
0.433	OUT SPE ^.layer_011.shape.size.i = min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.167	
0.161	IN  DEL ^.layer_011000
0.161	IN  GEN ^.layer_0.shape.color = ?
0.161	IN  GEN ^.layer_011.shape.mask = ?
0.161	IN  GEN ^.layer_01100.shape.mask = ?
0.161	IN  GEN ^.layer_01.shape.mask = ?
0.160	IN  GEN ^.layer_0.shape.mask = ?
0.160	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_01
  _01100: ^.layer_01100
  _0110: ^.layer_0110
  _011: a rectangle with size (min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),1) and color ? and mask Full at (?,?)
  _0111: ^.layer_011
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011000: a point with color ? at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 152.4 + 13814.3 = 13966.7
DL output with Mo: L = 147.1 + 11326.6 = 11473.7
DL input+output M: L = 299.5 + 25140.9 = 25440.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_01
  _01100: ^.layer_01100
  _0110: ^.layer_0110
  _011: a rectangle with size (min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),1) and color ? and mask Full at (?,?)
  _0111: ^.layer_011
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 20.0 = 149.6
DL output with Mo: L = 147.1 + 10943.1 = 11090.2
DL input+output M: L = 276.7 + 10963.1 = 11239.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2685904e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2685904e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2685904e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2685904e.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2685904e.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2685904e.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 2685904e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 10943.1 bits (10943.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-336] Checking task 2697da3f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17145.9 = 17158.5
DL output with Mo: L = 12.6 + 68354.5 = 68367.1
DL input+output M: L = 25.2 + 85500.5 = 85525.7

# learning a model for train pairs
2.000	
1.180	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.395	IN  SPE ^.layer_0.shape.color = yellow
0.389	IN  SPE ^.color = black
0.386	OUT SPE ^.layer_0.pos.j = '0
0.382	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.381	OUT SPE ^.color = black
0.222	
0.222	IN  GEN ^.layer_0.shape.color = ?
0.222	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2724.9 = 2767.2
DL output with Mo: L = 45.5 + 14975.7 = 15021.2
DL input+output M: L = 87.8 + 17700.6 = 17788.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 45.5 + 14975.7 = 15021.2
DL input+output M: L = 84.3 + 14975.7 = 15060.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2697da3f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2697da3f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2697da3f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2697da3f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 2697da3f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 14975.7 bits (14975.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-335] Checking task 2753e76c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 99417.9 = 99430.5
DL output with Mo: L = 12.6 + 10011.7 = 10024.3
DL input+output M: L = 25.2 + 109429.5 = 109454.8

# learning a model for train pairs
2.000	
1.669	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.425	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.228	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.737	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.662	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT SPE ^.layer_01.shape.size = '(1, 3)
0.552	OUT SPE ^.layer_011.shape.size = '(1, 2)
0.542	OUT SPE ^.layer_0.shape.size.i = 1
0.532	OUT SPE ^.layer_0.shape.mask = Full
0.517	OUT SPE ^.layer_0.shape.color = ^.layer_0111.shape.color
0.508	OUT SPE ^.layer_01.shape.mask = Full
0.498	OUT SPE ^.layer_011.shape.mask = Full
0.479	OUT SPE ^.size.i = ^.layer_0111.shape.size.i + 1
0.465	OUT SPE ^.size.j = ^.layer_01111.shape.size.j + ^.layer_0111.pos.i - ^.layer_011.pos.i
0.456	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.i / colorCount(^.grid)
0.448	OUT SPE ^.color = black
0.447	IN  SPE ^.layer_0.shape.mask = Full
0.446	IN  SPE ^.layer_01.shape.mask = Full
0.445	IN  SPE ^.layer_011.shape.mask = Full
0.444	IN  SPE ^.layer_0111.shape.mask = Full
0.444	IN  SPE ^.layer_01111.shape.mask = Full
0.443	IN  SPE ^.layer_011111.shape.mask = Full
0.442	IN  SPE ^.color = black
0.217	
0.217	IN  GEN ^.layer_011111.shape.mask = ?
0.217	IN  GEN ^.layer_01111.shape.mask = ?
0.217	IN  GEN ^.layer_0111.shape.mask = ?
0.217	IN  GEN ^.layer_011.shape.mask = ?
0.217	IN  GEN ^.layer_01.shape.mask = ?
0.217	IN  GEN ^.layer_0.shape.mask = ?
0.217	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0111.shape.size.i + 1,^.layer_01111.shape.size.j + ^.layer_0111.pos.i - ^.layer_011.pos.i) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (?,?)
  _01: a rectangle with size '(1, 3) and color ? and mask Full at (?,^.layer_01.pos.i / colorCount(^.grid))
  _011: a rectangle with size '(1, 2) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 169.7 + 22421.0 = 22590.7
DL output with Mo: L = 259.5 + 1892.7 = 2152.3
DL input+output M: L = 429.2 + 24313.7 = 24742.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0111.shape.size.i + 1,^.layer_01111.shape.size.j + ^.layer_0111.pos.i - ^.layer_011.pos.i) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (?,?)
  _01: a rectangle with size '(1, 3) and color ? and mask Full at (?,^.layer_01.pos.i / colorCount(^.grid))
  _011: a rectangle with size '(1, 2) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 40.0 = 203.5
DL output with Mo: L = 259.5 + 1892.7 = 2152.3
DL input+output M: L = 423.1 + 1932.7 = 2355.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2753e76c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2753e76c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2753e76c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 2753e76c.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 50.2 sec (50.2 sec/task)
bits-train-error = 1892.7 bits (1892.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-334] Checking task 27a77e38.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 18199.0 = 18211.6
DL output with Mo: L = 12.6 + 18980.2 = 18992.8
DL input+output M: L = 25.2 + 37179.2 = 37204.5

# learning a model for train pairs
2.000	
1.757	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.476	OUT ADD ^.layer_0 = ^.layer_0
1.404	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.308	OUT ADD ^.layer_01 = ^.layer_01
1.217	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.086	OUT ADD ^.layer_011 = ^.layer_011
1.053	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.028	OUT SPE ^.size = ^.size
1.019	IN  SPE ^.layer_0.shape.color = grey
1.011	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
1.006	IN  SPE ^.layer_0.shape.mask = Full
1.001	IN  SPE ^.layer_01.shape.mask = Full
0.995	IN  SPE ^.layer_011.shape.mask = Full
0.990	OUT SPE ^.layer_0111.shape.size.i = 1
0.985	OUT SPE ^.layer_0111.shape.mask = Full
0.980	OUT SPE ^.layer_0111.pos.i = right(^.layer_01) - ^.layer_011.pos.i - ^.layer_01.pos.i
0.976	IN  SPE ^.color = black
0.972	OUT SPE ^.color = black
0.413	
0.412	IN  GEN ^.layer_0.shape.color = ?
0.412	IN  GEN ^.layer_011.shape.mask = ?
0.412	IN  GEN ^.layer_01.shape.mask = ?
0.412	IN  GEN ^.layer_0.shape.mask = ?
0.412	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask Full at (right(^.layer_01) - ^.layer_011.pos.i - ^.layer_01.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 95.7 + 10215.0 = 10310.7
DL output with Mo: L = 111.4 + 7603.4 = 7714.8
DL input+output M: L = 207.1 + 17818.4 = 18025.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (1,?) and color ^.layer_011.shape.color and mask Full at (right(^.layer_01) - ^.layer_011.pos.i - ^.layer_01.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 111.4 + 7603.4 = 7714.8
DL input+output M: L = 200.7 + 7623.4 = 7824.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 27a77e38.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 27a77e38.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 27a77e38.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 27a77e38.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 50.4 sec (50.4 sec/task)
bits-train-error = 7603.4 bits (7603.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-333] Checking task 27f8ce4f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8510.1 = 8522.7
DL output with Mo: L = 12.6 + 47742.1 = 47754.7
DL input+output M: L = 25.2 + 56252.2 = 56277.4

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = compose(majorityColor(^.grid), ^.grid, ^.grid)
0.782	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.619	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.603	IN  SPE ^.layer_01.shape.mask = Full
0.602	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.584	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.569	IN  SPE ^.layer_0.shape.mask = Full
0.012	
0.009	IN  DEL ^.layer_01
0.006	IN  DEL ^.layer_0
0.004	IN  DEL ^.layer_011
0.002	IN  DEL ^.layer_010

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 97.6 + 4745.7 = 4843.3
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 123.2 + 4745.7 = 4869.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 38.3 + 0.0 = 38.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 27f8ce4f.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 27f8ce4f.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 27f8ce4f.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 27f8ce4f.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 27f8ce4f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-332] Checking task 281123b4.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 99814.8 = 99827.4
DL output with Mo: L = 12.6 + 19769.9 = 19782.5
DL input+output M: L = 25.2 + 119584.7 = 119609.9

# learning a model for train pairs
2.000	
1.739	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.545	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.407	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.282	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.102	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.044	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.993	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.949	OUT SPE ^.size = projI(^.size) + projJ(^.layer_0.shape.size)
0.911	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.879	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.412	
0.411	IN  DEL ^.layer_01111
0.411	IN  DEL ^.layer_0111
0.411	IN  DEL ^.layer_011
0.411	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + projJ(^.layer_0.shape.size) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 46663.7 = 46802.6
DL output with Mo: L = 147.2 + 7967.4 = 8114.6
DL input+output M: L = 286.1 + 54631.1 = 54917.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + projJ(^.layer_0.shape.size) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 147.2 + 7967.4 = 8114.6
DL input+output M: L = 186.0 + 7967.4 = 8153.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 281123b4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 281123b4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 281123b4.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 281123b4.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 281123b4.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 281123b4.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 281123b4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 7967.4 bits (7967.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-331] Checking task 292dd178.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21514.2 = 21526.8
DL output with Mo: L = 12.6 + 33793.7 = 33806.3
DL input+output M: L = 25.2 + 55307.9 = 55333.2

# learning a model for train pairs
2.000	
1.502	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	OUT ADD ^.layer_0 = ^.layer_0
0.816	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.530	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.370	OUT ADD ^.layer_011 = ^.layer_01
0.194	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 3804.7 = 3868.9
DL output with Mo: L = 51.5 + 6373.4 = 6424.8
DL input+output M: L = 115.7 + 10178.1 = 10293.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 51.5 + 6373.4 = 6424.8
DL input+output M: L = 115.7 + 6393.4 = 6509.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 292dd178.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 292dd178.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 292dd178.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 292dd178.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.1 sec (56.1 sec/task)
bits-train-error = 6373.4 bits (6373.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-330] Checking task 29700607.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7303.1 = 7315.7
DL output with Mo: L = 12.6 + 40002.1 = 40014.7
DL input+output M: L = 25.2 + 47305.3 = 47330.5

# learning a model for train pairs
2.000	
1.629	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.387	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.174	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.092	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.009	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.925	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.840	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.753	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.737	OUT SPE ^.size = ^.size
0.727	IN  SPE ^.color = black
0.718	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.705	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.696	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.687	OUT SPE ^.layer_011.shape.size = span(^.layer_011.pos, ^.layer_01111.pos)
0.683	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.678	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.674	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.670	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.666	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_0111.pos.i
0.663	OUT SPE ^.layer_01.shape.size.j = 1
0.661	OUT SPE ^.layer_01.shape.mask = Full
0.658	OUT SPE ^.layer_0111.shape.size.i = 1
0.656	OUT SPE ^.layer_0111.shape.mask = Full
0.654	OUT SPE ^.color = black
0.098	
0.098	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_0111.pos.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos
  _011: a rectangle with size span(^.layer_011.pos, ^.layer_01111.pos) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
  _0111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 92.6 + 4087.4 = 4179.9
DL output with Mo: L = 208.6 + 3091.3 = 3299.9
DL input+output M: L = 301.2 + 7178.6 = 7479.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) - ^.layer_0.pos.i - ^.layer_0111.pos.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos
  _011: a rectangle with size span(^.layer_011.pos, ^.layer_01111.pos) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
  _0111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 92.4 + 20.0 = 112.4
DL output with Mo: L = 208.6 + 3091.3 = 3299.9
DL input+output M: L = 301.0 + 3111.3 = 3412.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 29700607.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 29700607.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 29700607.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 29700607.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 3091.3 bits (3091.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-329] Checking task 2a5f8217.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23823.3 = 23835.9
DL output with Mo: L = 12.6 + 23823.3 = 23835.9
DL input+output M: L = 25.2 + 47646.7 = 47671.9

# learning a model for train pairs
2.000	
1.819	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.590	OUT ADD ^.layer_0 = ^.layer_0
1.370	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.185	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.161	OUT SPE ^.size = ^.size
1.148	OUT SPE ^.layer_01.pos = ^.layer_00.pos
1.141	IN  SPE ^.layer_00.shape.color = blue
1.138	OUT SPE ^.color = black
1.135	IN  SPE ^.color = black
0.511	
0.511	IN  GEN ^.layer_00.shape.color = ?
0.511	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at ^.layer_00.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.7 + 14864.4 = 14932.1
DL output with Mo: L = 44.4 + 12079.6 = 12124.0
DL input+output M: L = 112.0 + 26944.0 = 27056.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at ^.layer_00.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 44.4 + 12079.6 = 12124.0
DL input+output M: L = 108.6 + 12079.6 = 12188.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2a5f8217.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2a5f8217.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2a5f8217.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 2a5f8217.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 12079.6 bits (12079.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-328] Checking task 2b01abd0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21622.7 = 21635.3
DL output with Mo: L = 12.6 + 30675.1 = 30687.7
DL input+output M: L = 25.2 + 52297.8 = 52323.0

# learning a model for train pairs
2.000	
1.507	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.126	OUT ADD ^.layer_0 = ^.layer_0
0.840	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.641	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.440	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.361	OUT SPE ^.layer_011 = coloring(^.layer_01, ^.layer_011.shape.color)
0.323	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.301	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.273	OUT SPE ^.layer_01111 = coloring(^.layer_011, ^.layer_01.shape.color)
0.252	OUT SPE ^.size = ^.size
0.239	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.229	IN  SPE ^.layer_0.shape.color = blue
0.211	OUT SPE ^.layer_01.shape = applySym(flipHeight, ^.layer_01.shape)
0.205	OUT SPE ^.layer_01.pos.j = 2
0.201	IN  SPE ^.layer_0.shape.mask = Full
0.196	OUT SPE ^.layer_0111.pos.j = span(^.layer_0.pos.j, ^.layer_011.pos.j) - 1
0.193	IN  SPE ^.color = black
0.190	OUT SPE ^.color = black
0.022	
0.021	IN  GEN ^.layer_0.shape.color = ?
0.021	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: applySym(flipHeight, ^.layer_01.shape) at (?,2)
  _011: coloring(^.layer_01, ^.layer_011.shape.color)
  _0111: ^.layer_011.shape at (?,span(^.layer_0.pos.j, ^.layer_011.pos.j) - 1)
  _01111: coloring(^.layer_011, ^.layer_01.shape.color)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 93.7 + 3672.5 = 3766.2
DL output with Mo: L = 143.8 + 356.4 = 500.1
DL input+output M: L = 237.5 + 4028.9 = 4266.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: applySym(flipHeight, ^.layer_01.shape) at (?,2)
  _011: coloring(^.layer_01, ^.layer_011.shape.color)
  _0111: ^.layer_011.shape at (?,span(^.layer_0.pos.j, ^.layer_011.pos.j) - 1)
  _01111: coloring(^.layer_011, ^.layer_01.shape.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 90.3 + 20.0 = 110.3
DL output with Mo: L = 143.8 + 356.4 = 500.1
DL input+output M: L = 234.0 + 376.4 = 610.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2b01abd0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2b01abd0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2b01abd0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 2b01abd0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.9 sec (4.9 sec/task)
bits-train-error = 356.4 bits (356.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-327] Checking task 2c0b0aff.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 375177.0 = 375189.6
DL output with Mo: L = 12.6 + 34103.7 = 34116.4
DL input+output M: L = 25.2 + 409280.8 = 409306.0

# learning a model for train pairs
2.000	
1.203	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.766	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.573	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.496	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.480	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.444	OUT SPE ^.layer_0.pos = '(0, 0)
0.434	OUT SPE ^.color = green
0.424	OUT SPE ^.layer_0.shape.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.414	OUT SPE ^.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.408	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.406	IN  SPE ^.layer_01.shape.mask = Full
0.388	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.386	IN  SPE ^.layer_011.shape.color = cyan
0.381	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	IN  SPE ^.layer_0.shape.color = cyan
0.380	IN  SPE ^.layer_01.shape.color = cyan
0.379	IN  SPE ^.layer_0110.shape.color = cyan
0.378	IN  SPE ^.layer_0111.shape.color = green
0.378	IN  SPE ^.layer_01111.shape.color = green
0.377	IN  SPE ^.layer_011111.shape.color = green
0.377	IN  SPE ^.layer_0111111.shape.color = green
0.376	IN  SPE ^.layer_0111.shape.mask = Full
0.376	IN  SPE ^.layer_01111.shape.mask = Full
0.376	IN  SPE ^.layer_011111.shape.mask = Full
0.375	IN  SPE ^.layer_0111111.shape.mask = Full
0.375	IN  SPE ^.color = black
0.154	
0.154	IN  DEL ^.layer_0111111
0.154	IN  DEL ^.layer_011111
0.154	IN  DEL ^.layer_01111
0.154	IN  DEL ^.layer_0111
0.154	IN  DEL ^.layer_011
0.154	IN  DEL ^.layer_0110
0.154	IN  GEN ^.layer_01.shape.color = ?
0.154	IN  GEN ^.layer_0.shape.color = ?
0.154	IN  GEN ^.layer_01.shape.mask = ?
0.154	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color green and layers
  _0: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _0110: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 244.4 + 82889.5 = 83134.0
DL output with Mo: L = 113.5 + 5122.4 = 5235.9
DL input+output M: L = 357.9 + 88012.0 = 88369.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color green and layers
  _0: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 113.5 + 5122.4 = 5235.9
DL input+output M: L = 177.7 + 5122.4 = 5300.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2c0b0aff.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2c0b0aff.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2c0b0aff.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 2c0b0aff.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 2c0b0aff.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.9 sec (24.9 sec/task)
bits-train-error = 5122.4 bits (5122.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-326] Checking task 2c737e39.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10601.2 = 10613.9
DL output with Mo: L = 12.6 + 16996.4 = 17009.0
DL input+output M: L = 25.2 + 27597.6 = 27622.8

# learning a model for train pairs
2.000	
1.809	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.632	OUT ADD ^.layer_0 = ^.layer_0
1.485	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.369	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.236	OUT ADD ^.layer_011 = ^.layer_01
1.124	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
1.062	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.899	OUT ADD ^.layer_0111 = ^.layer_011
0.863	OUT SPE ^.size = ^.size
0.853	IN  SPE ^.layer_01.shape.mask = Full
0.844	IN  SPE ^.layer_011.shape.mask = Full
0.837	OUT SPE ^.layer_01.pos.j = ^.layer_0110.pos.j - ^.layer_011.pos.j - ^.layer_01.pos.j
0.830	IN  SPE ^.color = black
0.823	OUT SPE ^.layer_010.pos.i = min(^.layer_011.pos.j, ^.layer_0110.pos.j) + 3
0.819	OUT SPE ^.color = black
0.815	OUT SPE ^.layer_010.pos.j = span(^.layer_011.pos.i, ^.layer_0110.pos.i) + ^.layer_011.shape.size.j
0.288	
0.287	IN  GEN ^.layer_011.shape.mask = ?
0.287	IN  GEN ^.layer_01.shape.mask = ?
0.287	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (min(^.layer_011.pos.j, ^.layer_0110.pos.j) + 3,span(^.layer_011.pos.i, ^.layer_0110.pos.i) + ^.layer_011.shape.size.j)
  _01: ^.layer_0.shape at (?,^.layer_0110.pos.j - ^.layer_011.pos.j - ^.layer_01.pos.j)
  _011: ^.layer_01
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 107.0 + 5652.0 = 5758.9
DL output with Mo: L = 254.0 + 4382.2 = 4636.2
DL input+output M: L = 361.0 + 10034.1 = 10395.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (min(^.layer_011.pos.j, ^.layer_0110.pos.j) + 3,span(^.layer_011.pos.i, ^.layer_0110.pos.i) + ^.layer_011.shape.size.j)
  _01: ^.layer_0.shape at (?,^.layer_0110.pos.j - ^.layer_011.pos.j - ^.layer_01.pos.j)
  _011: ^.layer_01
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 104.8 + 51.7 = 156.5
DL output with Mo: L = 254.0 + 4382.2 = 4636.2
DL input+output M: L = 358.8 + 4433.9 = 4792.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2c737e39.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2c737e39.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2c737e39.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 2c737e39.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 4382.2 bits (4382.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-325] Checking task 2f0c5170.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 101844.5 = 101857.2
DL output with Mo: L = 12.6 + 10942.9 = 10955.5
DL input+output M: L = 25.2 + 112787.4 = 112812.6

# learning a model for train pairs
2.000	
1.232	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.534	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.458	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.378	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.310	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.261	OUT SPE ^.size = ^.layer_0.shape.size
0.225	OUT SPE ^.layer_0.shape.size = min(^.layer_01.shape.size, ^.layer_011.shape.size)
0.210	OUT SPE ^.layer_0.shape.color = yellow
0.199	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.i, ^.layer_01.pos.i)
0.192	OUT SPE ^.layer_0.pos.i = min(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.layer_011.pos.j - ^.layer_01.pos.j
0.186	OUT SPE ^.color = black
0.183	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.159	OUT SPE ^.layer_00.pos = '(0, 0) + ^.layer_0111.pos - ^.layer_0.pos
0.144	OUT SPE ^.layer_00.shape = ^.layer_0111.shape
0.142	IN  SPE ^.color = cyan
0.140	IN  SPE ^.layer_0.shape.color = black
0.139	IN  SPE ^.layer_011.shape.mask = Full
0.073	
0.072	IN  GEN ^.color = ?
0.072	IN  GEN ^.layer_0.shape.color = ?
0.072	IN  GEN ^.layer_011.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _00: ^.layer_0111.shape at '(0, 0) + ^.layer_0111.pos - ^.layer_0.pos
  _0: a rectangle with size min(^.layer_01.shape.size, ^.layer_011.shape.size) and color yellow and mask ? at (min(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.layer_011.pos.j - ^.layer_01.pos.j,min(^.layer_0.pos.i, ^.layer_01.pos.i))
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 115.8 + 6787.2 = 6903.0
DL output with Mo: L = 267.9 + 514.4 = 782.3
DL input+output M: L = 383.7 + 7301.6 = 7685.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _00: ^.layer_0111.shape at '(0, 0) + ^.layer_0111.pos - ^.layer_0.pos
  _0: a rectangle with size min(^.layer_01.shape.size, ^.layer_011.shape.size) and color yellow and mask ? at (min(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.layer_011.pos.j - ^.layer_01.pos.j,min(^.layer_0.pos.i, ^.layer_01.pos.i))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 104.8 + 0.0 = 104.8
DL output with Mo: L = 267.9 + 514.4 = 782.3
DL input+output M: L = 372.7 + 514.4 = 887.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2f0c5170.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 2f0c5170.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 2f0c5170.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 2f0c5170.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.1 sec (25.1 sec/task)
bits-train-error = 514.4 bits (514.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-324] Checking task 310f3251.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3149.6 = 3162.2
DL output with Mo: L = 12.6 + 45053.1 = 45065.7
DL input+output M: L = 25.2 + 48202.7 = 48227.9

# learning a model for train pairs
2.000	
1.732	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.650	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.617	OUT ADD ^.layer_01 = ^.layer_0
1.586	IN  SPE ^.color = black
1.568	OUT SPE ^.size = tiling(^.size, 3, 3)
1.564	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j - 1
1.541	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
1.536	OUT SPE ^.layer_00.pos.i = 1
0.845	
0.845	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _00: ^.layer_0.shape at (1,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j - 1,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 2186.1 = 2215.7
DL output with Mo: L = 98.0 + 37543.3 = 37641.4
DL input+output M: L = 127.7 + 39729.4 = 39857.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _00: ^.layer_0.shape at (1,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j - 1,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 98.0 + 37543.3 = 37641.4
DL input+output M: L = 127.6 + 37543.3 = 37670.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 310f3251.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 310f3251.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 310f3251.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 310f3251.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 310f3251.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.7 sec (5.7 sec/task)
bits-train-error = 37543.3 bits (37543.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-323] Checking task 3194b014.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 285358.6 = 285371.2
DL output with Mo: L = 12.6 + 658.5 = 671.1
DL input+output M: L = 25.2 + 286017.1 = 286042.3

# learning a model for train pairs
2.000	
1.434	OUT SPE ^.size = '(3, 3)
1.314	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.926	OUT SPE ^.color = ^.layer_0.shape.color
0.837	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.766	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.714	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.670	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.635	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.602	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.572	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.572	IN  SPE ^.color = black
0.046	
0.046	IN  DEL ^.layer_01111111
0.046	IN  DEL ^.layer_0111111
0.046	IN  DEL ^.layer_011111
0.046	IN  DEL ^.layer_01111
0.046	IN  DEL ^.layer_0111
0.046	IN  DEL ^.layer_011
0.046	IN  DEL ^.layer_01
0.046	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.8 + 150103.9 = 150316.7
DL output with Mo: L = 30.5 + 0.0 = 30.5
DL input+output M: L = 243.3 + 150103.9 = 150347.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 30.5 + 0.0 = 30.5
DL input+output M: L = 69.3 + 0.0 = 69.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3194b014.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3194b014.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3194b014.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 3194b014.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-322] Checking task 319f2597.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 406666.5 = 406679.1
DL output with Mo: L = 12.6 + 393537.4 = 393550.0
DL input+output M: L = 25.2 + 800203.9 = 800229.1

# learning a model for train pairs
2.000	
1.981	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.964	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.951	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.938	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.926	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.914	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.902	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.891	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.877	OUT ADD ^.layer_010 = ^.layer_011
0.932	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 384214.0 = 384328.1
DL output with Mo: L = 128.7 + 366558.8 = 366687.5
DL input+output M: L = 242.9 + 750772.8 = 751015.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 63.4 = 177.5
DL output with Mo: L = 128.7 + 366558.8 = 366687.5
DL input+output M: L = 242.9 + 366622.2 = 366865.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 319f2597.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 319f2597.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 319f2597.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 319f2597.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 366558.8 bits (366558.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-321] Checking task 31adaf00.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 43752.2 = 43764.8
DL output with Mo: L = 12.6 + 69142.6 = 69155.2
DL input+output M: L = 25.2 + 112894.8 = 112920.0

# learning a model for train pairs
2.000	
1.273	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	OUT ADD ^.layer_0 = ^.layer_0
0.654	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.549	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.458	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.382	OUT ADD ^.layer_010 = ^.layer_01
0.331	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.306	OUT ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.298	OUT SPE ^.size = ^.size
0.289	OUT ADD ^.layer_01001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.285	OUT SPE ^.layer_01.shape.size = '(2, 2)
0.281	IN  SPE ^.layer_0.shape.color = grey
0.277	IN  SPE ^.layer_01.shape.color = grey
0.275	OUT SPE ^.layer_01.shape.color = blue
0.272	OUT SPE ^.layer_011.shape.color = blue
0.270	OUT SPE ^.layer_0100.pos.j = '0
0.268	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.j
0.265	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.j
0.263	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.i
0.261	OUT SPE ^.layer_01.pos.i = right(^.layer_01) + 3
0.259	OUT SPE ^.layer_01001.pos.j = right(^.layer_0) - area(^.layer_01.shape)
0.257	IN  SPE ^.color = black
0.256	OUT SPE ^.layer_01001.shape.mask = Full
0.253	OUT SPE ^.layer_0111.shape.color = blue
0.252	OUT SPE ^.layer_0100.shape.mask = Full
0.251	OUT SPE ^.layer_01.shape.mask = Full
0.249	OUT SPE ^.layer_011.shape.mask = Full
0.248	OUT SPE ^.color = black
0.078	
0.078	IN  GEN ^.layer_01.shape.color = ?
0.077	IN  GEN ^.layer_0.shape.color = ?
0.077	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: a rectangle with size (?,?) and color ? and mask Full at (?,'0)
  _01001: a rectangle with size (?,?) and color ? and mask Full at (?,right(^.layer_0) - area(^.layer_01.shape))
  _010: ^.layer_01
  _01: a rectangle with size '(2, 2) and color blue and mask Full at (right(^.layer_01) + 3,?)
  _011: a rectangle with size (^.layer_01.shape.size.j,^.layer_01.shape.size.j) and color blue and mask Full at (?,^.layer_01.pos.i)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 7461.9 = 7532.9
DL output with Mo: L = 268.9 + 4988.9 = 5257.8
DL input+output M: L = 339.9 + 12450.7 = 12790.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: a rectangle with size (?,?) and color ? and mask Full at (?,'0)
  _01001: a rectangle with size (?,?) and color ? and mask Full at (?,right(^.layer_0) - area(^.layer_01.shape))
  _010: ^.layer_01
  _01: a rectangle with size '(2, 2) and color blue and mask Full at (right(^.layer_01) + 3,?)
  _011: a rectangle with size (^.layer_01.shape.size.j,^.layer_01.shape.size.j) and color blue and mask Full at (?,^.layer_01.pos.i)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 268.9 + 4988.9 = 5257.8
DL input+output M: L = 333.2 + 4988.9 = 5322.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 31adaf00.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 31adaf00.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 31adaf00.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 31adaf00.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 43.3 sec (43.3 sec/task)
bits-train-error = 4988.9 bits (4988.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-320] Checking task 31d5ba1a.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27574.2 = 27586.9
DL output with Mo: L = 12.6 + 12157.0 = 12169.6
DL input+output M: L = 25.2 + 39731.3 = 39756.5

# learning a model for train pairs
2.000	
1.384	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.943	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	OUT SPE ^.size = ^.size - (3, 0)
0.583	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.548	OUT SPE ^.layer_0.pos = '(0, 0)
0.531	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.i + 1
0.521	IN  SPE ^.layer_0.shape.color = yellow
0.511	IN  SPE ^.layer_01.shape.color = brown
0.506	IN  SPE ^.color = black
0.237	
0.236	IN  DEL ^.layer_01
0.235	IN  GEN ^.layer_0.shape.color = ?
0.235	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - (3, 0) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _01: a point with color ? at (?,^.layer_0.pos.i + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color brown and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 7436.6 = 7507.6
DL output with Mo: L = 84.3 + 2764.3 = 2848.7
DL input+output M: L = 155.3 + 10200.9 = 10356.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - (3, 0) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _01: a point with color ? at (?,^.layer_0.pos.i + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 84.3 + 2764.3 = 2848.7
DL input+output M: L = 123.2 + 2764.3 = 2887.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 31d5ba1a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 31d5ba1a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 31d5ba1a.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 31d5ba1a.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 31d5ba1a.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 31d5ba1a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 31d5ba1a.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 2764.3 bits (2764.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-319] Checking task 32e9702f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8281.4 = 8294.0
DL output with Mo: L = 12.6 + 7767.4 = 7780.0
DL input+output M: L = 25.2 + 16048.8 = 16074.0

# learning a model for train pairs
2.000	
1.583	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.048	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.984	OUT SPE ^.size = ^.size
0.958	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j
0.927	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.890	OUT SPE ^.layer_011.pos = '(0, 0)
0.872	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j - 2
0.860	OUT SPE ^.layer_0.shape.mask = Full
0.847	OUT SPE ^.layer_01.shape.mask = Full
0.834	OUT SPE ^.layer_011.shape.mask = Full
0.819	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j * '2
0.804	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j / '2
0.792	IN  SPE ^.layer_0.shape.mask = Full
0.783	IN  SPE ^.color = black
0.226	
0.226	IN  GEN ^.layer_0.shape.mask = ?
0.226	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color ? and mask Full at (^.layer_0.pos.j * '2,?)
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask Full at (?,^.layer_0.pos.j / '2)
  _011: a rectangle with size (?,?) and color ? and mask Full at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 40.0 + 4622.4 = 4662.3
DL output with Mo: L = 163.6 + 1556.0 = 1719.6
DL input+output M: L = 203.6 + 6178.3 = 6381.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color ? and mask Full at (^.layer_0.pos.j * '2,?)
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask Full at (?,^.layer_0.pos.j / '2)
  _011: a rectangle with size (?,?) and color ? and mask Full at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 163.6 + 1556.0 = 1719.6
DL input+output M: L = 202.5 + 1556.0 = 1758.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 32e9702f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 32e9702f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 32e9702f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 32e9702f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.8 sec (23.8 sec/task)
bits-train-error = 1556.0 bits (1556.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-318] Checking task 332efdb3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 605.0 = 617.6
DL output with Mo: L = 12.6 + 11557.3 = 11569.9
DL input+output M: L = 25.2 + 12162.3 = 12187.5

# learning a model for train pairs
2.000	
1.254	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.135	IN  SPE ^.color = black
1.089	OUT SPE ^.size = ^.size
1.043	OUT SPE ^.layer_0.shape.size = ^.size
1.017	OUT SPE ^.layer_0.pos = '(0, 0)
1.003	OUT SPE ^.layer_0.shape.color = blue
0.996	OUT SPE ^.color = black
0.136	
0.136	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 12.7 + 531.3 = 544.0
DL output with Mo: L = 43.4 + 1291.4 = 1334.8
DL input+output M: L = 56.2 + 1822.7 = 1878.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 43.4 + 1291.4 = 1334.8
DL input+output M: L = 56.0 + 1291.4 = 1347.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 332efdb3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 332efdb3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 332efdb3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 332efdb3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 1291.4 bits (1291.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-317] Checking task 3391f8c0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24440.6 = 24453.2
DL output with Mo: L = 12.6 + 24813.0 = 24825.6
DL input+output M: L = 25.2 + 49253.6 = 49278.8

# learning a model for train pairs
2.000	
1.831	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.656	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.488	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.337	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.198	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.061	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.007	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.951	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.870	IN  ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.744	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.712	OUT SPE ^.size = ^.size
0.693	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.676	OUT SPE ^.layer_01.pos = min(^.layer_011.pos, ^.layer_00.pos)
0.661	OUT SPE ^.layer_0111.pos = max(^.layer_0111.pos, ^.layer_00.pos)
0.646	OUT SPE ^.layer_0111.shape.size = projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size)
0.637	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.j
0.222	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at min(^.layer_011.pos, ^.layer_00.pos)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size) and color ? and mask ? at max(^.layer_0111.pos, ^.layer_00.pos)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 10201.2 = 10364.7
DL output with Mo: L = 247.7 + 5042.9 = 5290.6
DL input+output M: L = 411.2 + 15244.1 = 15655.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at min(^.layer_011.pos, ^.layer_00.pos)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size projI(^.layer_01.shape.size) + projJ(^.layer_0.shape.size) and color ? and mask ? at max(^.layer_0111.pos, ^.layer_00.pos)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 51.7 = 215.2
DL output with Mo: L = 247.7 + 5042.9 = 5290.6
DL input+output M: L = 411.2 + 5094.6 = 5505.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3391f8c0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3391f8c0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3391f8c0.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3391f8c0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 3391f8c0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 5042.9 bits (5042.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-316] Checking task 33b52de3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 104943.2 = 104955.8
DL output with Mo: L = 12.6 + 104943.2 = 104955.8
DL input+output M: L = 25.2 + 209886.4 = 209911.6

# learning a model for train pairs
2.000	
1.880	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.759	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.639	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.576	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.454	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.396	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.347	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.299	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.250	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.671	
0.671	IN  DEL ^.layer_0111
0.671	IN  DEL ^.layer_011
0.670	IN  DEL ^.layer_01
0.670	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 60793.0 = 60907.1
DL output with Mo: L = 163.5 + 70149.8 = 70313.4
DL input+output M: L = 277.7 + 130942.8 = 131220.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 70149.8 = 70313.4
DL input+output M: L = 176.1 + 70149.8 = 70326.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 33b52de3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 33b52de3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 33b52de3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 70149.8 bits (70149.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-315] Checking task 3490cc26.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 52348.2 = 52360.8
DL output with Mo: L = 12.6 + 136035.7 = 136048.3
DL input+output M: L = 25.2 + 188383.9 = 188409.1

# learning a model for train pairs
2.000	
1.609	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.449	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.354	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.258	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.164	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.084	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.037	OUT ADD ^.layer_010 = ^.layer_0
1.019	IN  SPE ^.layer_01.shape.mask = Full
1.012	OUT SPE ^.size = ^.size
1.008	IN  SPE ^.layer_011.shape.color = cyan
1.003	IN  SPE ^.layer_01.shape.color = cyan
1.000	IN  SPE ^.layer_0.shape.mask = Full
0.996	OUT SPE ^.layer_01.pos = min(^.layer_01.pos, ^.layer_011.pos)
0.994	IN  SPE ^.layer_011.shape.mask = Full
0.992	IN  SPE ^.color = black
0.990	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.989	OUT SPE ^.layer_0.shape.color = orange
0.988	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i
0.985	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.985	OUT SPE ^.layer_011.shape.mask = Full
0.291	
0.291	IN  GEN ^.layer_01.shape.color = ?
0.291	IN  GEN ^.layer_011.shape.color = ?
0.291	IN  GEN ^.layer_0.shape.mask = ?
0.291	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _010: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at min(^.layer_01.pos, ^.layer_011.pos)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 99.0 + 36350.1 = 36449.2
DL output with Mo: L = 117.0 + 39120.3 = 39237.3
DL input+output M: L = 216.0 + 75470.4 = 75686.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _010: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at min(^.layer_01.pos, ^.layer_011.pos)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 91.3 + 40.0 = 131.3
DL output with Mo: L = 117.0 + 39120.3 = 39237.3
DL input+output M: L = 208.3 + 39160.3 = 39368.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3490cc26.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3490cc26.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3490cc26.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3490cc26.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 3490cc26.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.6 sec (61.6 sec/task)
bits-train-error = 39120.3 bits (39120.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-314] Checking task 34b99a2b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35043.5 = 35056.1
DL output with Mo: L = 12.6 + 13590.5 = 13603.1
DL input+output M: L = 25.2 + 48633.9 = 48659.1

# learning a model for train pairs
2.000	
1.307	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.998	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.759	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.563	OUT SPE ^.size = ^.layer_011.shape.size + (0, 3)
0.547	OUT SPE ^.layer_0.shape.color = red
0.533	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.516	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.j - ^.layer_011.pos.j - ^.layer_0.pos.j
0.509	IN  SPE ^.layer_01.shape.color = cyan
0.502	OUT SPE ^.color = black
0.496	IN  SPE ^.layer_0.shape.color = grey
0.489	IN  SPE ^.layer_011.shape.color = yellow
0.486	IN  SPE ^.layer_011.shape.mask = Full
0.483	IN  SPE ^.color = black
0.212	
0.212	IN  GEN ^.layer_011.shape.color = ?
0.212	IN  GEN ^.layer_0.shape.color = ?
0.212	IN  GEN ^.layer_011.shape.mask = ?
0.212	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (0, 3) and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.j - ^.layer_011.pos.j - ^.layer_0.pos.j,?) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 100.4 + 9481.0 = 9581.3
DL output with Mo: L = 135.4 + 2714.0 = 2849.4
DL input+output M: L = 235.8 + 12194.9 = 12430.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (0, 3) and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.j - ^.layer_011.pos.j - ^.layer_0.pos.j,?) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 0.0 = 92.6
DL output with Mo: L = 135.4 + 2714.0 = 2849.4
DL input+output M: L = 228.0 + 2714.0 = 2942.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 34b99a2b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 34b99a2b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 34b99a2b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 34b99a2b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 34b99a2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.9 sec (4.9 sec/task)
bits-train-error = 2714.0 bits (2714.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-313] Checking task 351d6448.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42681.9 = 42694.5
DL output with Mo: L = 12.6 + 5160.1 = 5172.7
DL input+output M: L = 25.2 + 47842.0 = 47867.2

# learning a model for train pairs
2.000	
1.272	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.057	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.551	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.494	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.455	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.432	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.369	OUT SPE ^.size = ^.layer_0.shape.size + (2, 0)
0.355	OUT SPE ^.layer_0.pos.i = 1
0.342	OUT SPE ^.layer_0.shape.size.i = 1
0.329	OUT SPE ^.layer_0.shape.mask = Full
0.311	OUT SPE ^.layer_0.shape.color = ^.layer_0111.shape.color
0.299	OUT SPE ^.layer_0.pos.j = ^.layer_0111111.pos.j + ^.layer_0111.pos.j - ^.layer_0.pos.j
0.289	OUT SPE ^.color = black
0.287	IN  SPE ^.layer_0.shape.color = grey
0.284	IN  SPE ^.layer_01.shape.color = grey
0.281	IN  SPE ^.layer_011.shape.color = grey
0.280	IN  SPE ^.layer_0.shape.mask = Full
0.278	IN  SPE ^.layer_01.shape.mask = Full
0.277	IN  SPE ^.layer_011.shape.mask = Full
0.134	
0.133	IN  DEL ^.layer_011111
0.133	IN  GEN ^.layer_011.shape.color = ?
0.133	IN  GEN ^.layer_01.shape.color = ?
0.133	IN  GEN ^.layer_0.shape.color = ?
0.133	IN  GEN ^.layer_011.shape.mask = ?
0.133	IN  GEN ^.layer_01.shape.mask = ?
0.133	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 0) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (1,^.layer_0111111.pos.j + ^.layer_0111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 201.1 + 6117.0 = 6318.1
DL output with Mo: L = 135.1 + 531.1 = 666.3
DL input+output M: L = 336.2 + 6648.2 = 6984.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 0) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (1,^.layer_0111111.pos.j + ^.layer_0111.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 20.0 = 183.5
DL output with Mo: L = 135.1 + 531.1 = 666.3
DL input+output M: L = 298.7 + 551.1 = 849.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 351d6448.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 351d6448.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 351d6448.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.5 sec (58.5 sec/task)
bits-train-error = 531.1 bits (531.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-312] Checking task 358ba94e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 168002.6 = 168015.2
DL output with Mo: L = 12.6 + 5012.7 = 5025.3
DL input+output M: L = 25.2 + 173015.2 = 173040.5

# learning a model for train pairs
2.000	
1.525	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.316	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.118	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.921	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.601	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.474	OUT SPE ^.size = ^.layer_0.shape.size
0.371	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.298	OUT SPE ^.layer_0.pos = '(0, 0)
0.253	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.234	OUT SPE ^.color = black
0.233	IN  SPE ^.color = black
0.159	
0.159	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.0 + 12407.6 = 12546.6
DL output with Mo: L = 42.5 + 753.5 = 796.0
DL input+output M: L = 181.5 + 13161.1 = 13342.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 42.5 + 753.5 = 796.0
DL input+output M: L = 181.4 + 753.5 = 934.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 358ba94e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 358ba94e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 358ba94e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 358ba94e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 358ba94e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.9 sec (15.9 sec/task)
bits-train-error = 753.5 bits (753.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-311] Checking task 37d3e8b2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 127827.7 = 127840.3
DL output with Mo: L = 12.6 + 127827.7 = 127840.3
DL input+output M: L = 25.2 + 255655.5 = 255680.7

# learning a model for train pairs
2.000	
1.715	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.430	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.243	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.056	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.884	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.713	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.547	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.333	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.287	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.246	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.145	
0.144	IN  DEL ^.layer_011111
0.144	IN  DEL ^.layer_01111
0.144	IN  DEL ^.layer_0111
0.144	IN  DEL ^.layer_011
0.144	IN  DEL ^.layer_01
0.143	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 12961.0 = 13124.5
DL output with Mo: L = 138.9 + 18177.5 = 18316.4
DL input+output M: L = 302.4 + 31138.5 = 31440.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 18177.5 = 18316.4
DL input+output M: L = 151.5 + 18177.5 = 18329.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 37d3e8b2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 37d3e8b2.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 37d3e8b2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 37d3e8b2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 18177.5 bits (18177.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-310] Checking task 3979b1a8.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6964.1 = 6976.7
DL output with Mo: L = 12.6 + 47671.1 = 47683.7
DL input+output M: L = 25.2 + 54635.3 = 54660.5

# learning a model for train pairs
2.000	
1.596	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.151	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.956	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.783	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.667	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.608	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.547	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.531	OUT ADD ^.layer_010 = ^.layer_01
0.504	OUT SPE ^.layer_0.shape.mask = ........x|........x|........x|........x|........x|........x|........x|.......xx|xxxxxxxx.
0.481	OUT SPE ^.layer_011.shape.mask = .......x|.......x|.......x|.......x|.......x|.......x|......xx|xxxxxxx.
0.460	IN  SPE ^.layer_0.shape.mask = +-cross
0.137	
0.133	IN  DEL ^.layer_0
0.130	IN  DEL ^.layer_01111
0.128	IN  DEL ^.layer_0111
0.126	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ........x|........x|........x|........x|........x|........x|........x|.......xx|xxxxxxxx. at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask .......x|.......x|.......x|.......x|.......x|.......x|......xx|xxxxxxx. at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask +-cross at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 107.0 + 2250.8 = 2357.8
DL output with Mo: L = 242.2 + 5558.6 = 5800.8
DL input+output M: L = 349.2 + 7809.4 = 8158.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ........x|........x|........x|........x|........x|........x|........x|.......xx|xxxxxxxx. at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask .......x|.......x|.......x|.......x|.......x|.......x|......xx|xxxxxxx. at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 242.2 + 5558.6 = 5800.8
DL input+output M: L = 271.7 + 5558.6 = 5830.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3979b1a8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3979b1a8.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 3979b1a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 5558.6 bits (5558.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-309] Checking task 3a301edc.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 61190.9 = 61203.5
DL output with Mo: L = 12.6 + 160467.2 = 160479.8
DL input+output M: L = 25.2 + 221658.1 = 221683.3

# learning a model for train pairs
2.000	
1.224	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.601	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.307	OUT ADD ^.layer_00 = ^.layer_0
0.163	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.098	OUT ADD ^.layer_001 = ^.layer_01
0.091	OUT SPE ^.size = ^.size
0.088	IN  SPE ^.layer_0.shape.mask = Full
0.085	IN  SPE ^.layer_01.shape.mask = Full
0.083	IN  SPE ^.color = black
0.082	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.081	OUT SPE ^.layer_0.shape.mask = Full
0.012	
0.012	IN  GEN ^.layer_01.shape.mask = ?
0.012	IN  GEN ^.layer_0.shape.mask = ?
0.012	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 66.4 + 4197.3 = 4263.6
DL output with Mo: L = 61.8 + 1684.4 = 1746.2
DL input+output M: L = 128.2 + 5881.6 = 6009.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 61.8 + 1684.4 = 1746.2
DL input+output M: L = 126.0 + 1684.4 = 1810.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3a301edc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3a301edc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3a301edc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3a301edc.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3a301edc.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 3a301edc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 53.9 sec (53.9 sec/task)
bits-train-error = 1684.4 bits (1684.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-308] Checking task 3b4c2228.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30421.7 = 30434.3
DL output with Mo: L = 12.6 + 3949.5 = 3962.1
DL input+output M: L = 25.2 + 34371.2 = 34396.4

# learning a model for train pairs
2.000	
1.586	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.251	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.090	OUT SPE ^.size = '(3, 3)
0.935	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.814	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.715	OUT SPE ^.layer_0.pos = '(0, 0)
0.645	OUT SPE ^.layer_0.shape.color = blue
ERROR in apply_grid_refinement
SPE ^.layer_0.shape.mask = scaleTo(^.layer_01.shape.mask, max(^.layer_01.shape.size, ^.layer_011.shape.size) + (1, 2))
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
0.259	
0.258	IN  DEL ^.layer_011
0.257	IN  DEL ^.layer_01
0.256	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 11755.4 = 11844.6
DL output with Mo: L = 53.0 + 960.6 = 1013.6
DL input+output M: L = 142.3 + 12716.0 = 12858.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 53.0 + 960.6 = 1013.6
DL input+output M: L = 65.6 + 960.6 = 1026.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3b4c2228.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3b4c2228.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3b4c2228.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3b4c2228.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3b4c2228.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 3b4c2228.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 3b4c2228.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.2 sec (54.2 sec/task)
bits-train-error = 960.6 bits (960.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-307] Checking task 3d31c5b3.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 80839.0 = 80851.6
DL output with Mo: L = 12.6 + 18122.0 = 18134.6
DL input+output M: L = 25.2 + 98960.9 = 98986.2

# learning a model for train pairs
2.000	
1.727	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.466	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.279	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.145	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.039	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.962	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.914	OUT SPE ^.size = projJ(^.size) + (3, 0)
0.870	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.840	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.783	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.743	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.718	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.703	OUT SPE ^.layer_0111.pos.j = ^.layer_011.pos.j + ^.layer_0111.shape.size.i
0.689	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.j / '2
0.677	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.i / '3
0.666	OUT SPE ^.layer_01111.pos.i = right(^.layer_01111) / '3
0.653	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j / '3
0.651	IN  SPE ^.layer_011111.shape.mask = Full
0.649	IN  SPE ^.color = black
0.382	
0.382	IN  GEN ^.layer_011111.shape.mask = ?
0.382	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projJ(^.size) + (3, 0) and color ? and layers
  _0: a rectangle with size (^.layer_01.shape.size.j / '2,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,^.layer_01.shape.size.j / '3) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (^.layer_01.pos.i / '3,^.layer_011.pos.j + ^.layer_0111.shape.size.i)
  _01111: a point with color ? at (right(^.layer_01111) / '3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 164.7 + 21550.7 = 21715.4
DL output with Mo: L = 269.0 + 6625.4 = 6894.4
DL input+output M: L = 433.6 + 28176.1 = 28609.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projJ(^.size) + (3, 0) and color ? and layers
  _0: a rectangle with size (^.layer_01.shape.size.j / '2,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,^.layer_01.shape.size.j / '3) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (^.layer_01.pos.i / '3,^.layer_011.pos.j + ^.layer_0111.shape.size.i)
  _01111: a point with color ? at (right(^.layer_01111) / '3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 20.0 = 183.5
DL output with Mo: L = 269.0 + 6625.4 = 6894.4
DL input+output M: L = 432.5 + 6645.4 = 7077.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3d31c5b3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3d31c5b3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3d31c5b3.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3d31c5b3.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3d31c5b3.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3d31c5b3.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 3d31c5b3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 6625.4 bits (6625.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-306] Checking task 3ed85e70.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 329433.0 = 329445.6
DL output with Mo: L = 12.6 + 397245.1 = 397257.7
DL input+output M: L = 25.2 + 726678.1 = 726703.4

# learning a model for train pairs
2.000	
1.425	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.944	OUT ADD ^.layer_0 = ^.layer_0
0.909	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.875	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.806	OUT ADD ^.layer_010 = ^.layer_01
0.777	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.747	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.690	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.664	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.641	OUT ADD ^.layer_0111 = ^.layer_011
0.618	OUT ADD ^.layer_01111 = ^.layer_01111
0.593	OUT ADD ^.layer_011111 = ^.layer_011111
0.571	IN  ADD ^.layer_0111110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.549	OUT ADD ^.layer_0110 = ^.layer_0111
0.547	OUT SPE ^.size = ^.size
0.320	
0.320	IN  DEL ^.layer_0111111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0111
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 75049.5 = 75262.2
DL output with Mo: L = 103.3 + 126632.7 = 126735.9
DL input+output M: L = 316.0 + 201682.2 = 201998.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0111
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 0.0 = 188.1
DL output with Mo: L = 103.3 + 126632.7 = 126735.9
DL input+output M: L = 291.4 + 126632.7 = 126924.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3ed85e70.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3ed85e70.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3ed85e70.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 3ed85e70.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.7 sec (60.7 sec/task)
bits-train-error = 126632.7 bits (126632.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-305] Checking task 3ee1011a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17656.0 = 17668.6
DL output with Mo: L = 12.6 + 23072.2 = 23084.8
DL input+output M: L = 25.2 + 40728.2 = 40753.4

# learning a model for train pairs
2.000	
1.416	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.048	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.557	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.438	OUT SPE ^.layer_01.pos = '(1, 1)
0.415	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.404	OUT SPE ^.size.i = area(^.layer_0.shape)
0.394	OUT SPE ^.size.j = area(^.layer_0.shape)
0.385	IN  SPE ^.layer_01.shape.color = green
0.377	OUT SPE ^.layer_010.shape.color = ^.layer_011.shape.color
0.364	OUT SPE ^.layer_010.pos = '(2, 2)
0.357	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.351	OUT SPE ^.layer_010.shape.size.i = ^.layer_011.shape.size.i
0.345	OUT SPE ^.layer_0.shape.mask = Border
0.339	IN  SPE ^.layer_0.shape.mask = Full
0.333	IN  SPE ^.layer_01.shape.mask = Full
0.328	IN  SPE ^.layer_011.shape.mask = Full
0.324	OUT SPE ^.layer_010.shape.mask = Full
0.315	OUT SPE ^.layer_01.shape.size.i = area(^.layer_0.shape) - 2
0.306	OUT SPE ^.layer_01.shape.size.j = area(^.layer_0.shape) - 2
0.300	OUT SPE ^.layer_010.shape.size.j = ^.layer_011.shape.size.i
0.296	OUT SPE ^.layer_01.shape.mask = Full
0.292	IN  SPE ^.color = black
0.061	
0.061	IN  GEN ^.layer_01.shape.color = ?
0.061	IN  GEN ^.layer_011.shape.mask = ?
0.060	IN  GEN ^.layer_01.shape.mask = ?
0.060	IN  GEN ^.layer_0.shape.mask = ?
0.060	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape),area(^.layer_0.shape)) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _010: a rectangle with size (^.layer_011.shape.size.i,^.layer_011.shape.size.i) and color ^.layer_011.shape.color and mask Full at '(2, 2)
  _01: a rectangle with size (area(^.layer_0.shape) - 2,area(^.layer_0.shape) - 2) and color ^.layer_01.shape.color and mask Full at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 95.7 + 4081.3 = 4177.1
DL output with Mo: L = 237.3 + 1041.2 = 1278.5
DL input+output M: L = 333.0 + 5122.5 = 5455.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape),area(^.layer_0.shape)) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _010: a rectangle with size (^.layer_011.shape.size.i,^.layer_011.shape.size.i) and color ^.layer_011.shape.color and mask Full at '(2, 2)
  _01: a rectangle with size (area(^.layer_0.shape) - 2,area(^.layer_0.shape) - 2) and color ^.layer_01.shape.color and mask Full at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 237.3 + 1041.2 = 1278.5
DL input+output M: L = 326.6 + 1041.2 = 1367.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3ee1011a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3ee1011a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 3ee1011a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 3ee1011a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 32.7 sec (32.7 sec/task)
bits-train-error = 1041.2 bits (1041.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-304] Checking task 3f23242b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1669.3 = 1681.9
DL output with Mo: L = 12.6 + 31590.7 = 31603.3
DL input+output M: L = 25.2 + 33260.0 = 33285.2

# learning a model for train pairs
2.000	
1.750	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.562	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.386	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.279	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.177	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.111	IN  SPE ^.layer_0.shape.color = green
1.058	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.006	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.965	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.939	OUT ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.910	IN  SPE ^.color = black
0.896	OUT SPE ^.size = ^.size
0.893	OUT SPE ^.layer_0111111.pos.j = '0
0.889	OUT SPE ^.layer_01.shape.color = red
0.886	OUT SPE ^.layer_0111111.shape.color = red
0.882	OUT SPE ^.layer_0111111.shape.size.j = 2
0.879	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.j - 2
0.876	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j / '2
0.873	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j - 2
0.871	OUT SPE ^.layer_01111.shape.mask = Full
0.869	OUT SPE ^.layer_011111.shape.size.i = 1
0.866	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.j - 2
0.862	OUT SPE ^.layer_01.pos.i = 3
0.858	OUT SPE ^.layer_0111.shape.color = red
0.854	OUT SPE ^.layer_0111.shape.size.j = 3
0.851	OUT SPE ^.layer_01111111.shape.color = grey
0.848	OUT SPE ^.layer_01111.shape.color = cyan
0.844	OUT SPE ^.layer_01111111.shape.size.i = 2
0.841	OUT SPE ^.layer_01111.pos.i = ^.layer_0.pos.i + 2
0.839	OUT SPE ^.layer_01111.shape.size.i = 1
0.837	OUT SPE ^.layer_011111.shape.mask = Full
0.835	OUT SPE ^.color = black
0.199	
0.197	IN  GEN ^.layer_0.shape.color = ?
0.197	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j - 2,^.layer_0.pos.j / '2)
  _01: a rectangle with size (?,?) and color red and mask ? at (3,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j - 2)
  _0111: a rectangle with size (?,3) and color red and mask ? at (?,?)
  _01111: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i + 2,^.layer_0.pos.j - 2)
  _011111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,2) and color red and mask ? at (?,'0)
  _01111111: a rectangle with size (2,?) and color grey and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color green at (?,?)

DL input  with Mi: L = 33.0 + 1070.5 = 1103.5
DL output with Mo: L = 346.5 + 5320.3 = 5666.7
DL input+output M: L = 379.5 + 6390.8 = 6770.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j - 2,^.layer_0.pos.j / '2)
  _01: a rectangle with size (?,?) and color red and mask ? at (3,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j - 2)
  _0111: a rectangle with size (?,3) and color red and mask ? at (?,?)
  _01111: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i + 2,^.layer_0.pos.j - 2)
  _011111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,2) and color red and mask ? at (?,'0)
  _01111111: a rectangle with size (2,?) and color grey and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 346.5 + 5320.3 = 5666.7
DL input+output M: L = 376.0 + 5320.3 = 5696.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 3f23242b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 3f23242b.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 3f23242b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.3 sec (59.3 sec/task)
bits-train-error = 5320.3 bits (5320.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-303] Checking task 40f6cd08.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 407264.5 = 407277.1
DL output with Mo: L = 12.6 + 407264.5 = 407277.1
DL input+output M: L = 25.2 + 814528.9 = 814554.1

# learning a model for train pairs
2.000	
1.537	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.279	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.871	OUT ADD ^.layer_01 = ^.layer_0
0.686	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.515	OUT ADD ^.layer_011 = ^.layer_01
0.393	OUT ADD ^.layer_010 = ^.layer_00
0.328	OUT ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.245	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.154	IN  ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.092	OUT ADD ^.layer_01111 = ^.layer_011
0.082	OUT ADD ^.layer_01011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.068	OUT SPE ^.layer_0101.shape.color = ^.layer_011.shape.color
0.064	IN  SPE ^.layer_000.shape.mask = Full
0.062	OUT SPE ^.size = ^.size
0.061	OUT SPE ^.layer_0111.shape.size.i = ^.layer_01.shape.size.i + 2
0.061	OUT SPE ^.layer_0101.shape.size.i = 3
0.060	OUT SPE ^.layer_0.pos = max(^.layer_0.pos, ^.layer_011.pos) - ^.layer_0.pos - ^.layer_000.pos
0.059	OUT SPE ^.layer_0101.shape.mask = Full
0.059	IN  SPE ^.layer_011.shape.mask = Full
0.059	OUT SPE ^.layer_0.shape.size.i = area(^.layer_011.shape) / colorCount(^.grid)
0.058	OUT SPE ^.layer_0111.shape.mask = Full
0.058	OUT SPE ^.layer_01011.shape.size.j = max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_011.shape.size.j
0.057	OUT SPE ^.layer_0111.pos.j = max(^.layer_011.pos.j, ^.layer_000.pos.j)
0.027	
0.027	IN  GEN ^.layer_011.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (area(^.layer_011.shape) / colorCount(^.grid),?) and color ? and mask ? at max(^.layer_0.pos, ^.layer_011.pos) - ^.layer_0.pos - ^.layer_000.pos
  _010: ^.layer_00
  _0101: a rectangle with size (3,?) and color ^.layer_011.shape.color and mask Full at (?,?)
  _01011: a rectangle with size (?,max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_011.shape.size.j) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: a rectangle with size (^.layer_01.shape.size.i + 2,?) and color ? and mask Full at (?,max(^.layer_011.pos.j, ^.layer_000.pos.j))
  _01111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 140.9 + 12460.1 = 12601.0
DL output with Mo: L = 401.5 + 10347.2 = 10748.7
DL input+output M: L = 542.4 + 22807.4 = 23349.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (area(^.layer_011.shape) / colorCount(^.grid),?) and color ? and mask ? at max(^.layer_0.pos, ^.layer_011.pos) - ^.layer_0.pos - ^.layer_000.pos
  _010: ^.layer_00
  _0101: a rectangle with size (3,?) and color ^.layer_011.shape.color and mask Full at (?,?)
  _01011: a rectangle with size (?,max(^.layer_01.shape.size.i, ^.layer_011.shape.size.i) + ^.layer_011.shape.size.j) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: a rectangle with size (^.layer_01.shape.size.i + 2,?) and color ? and mask Full at (?,max(^.layer_011.pos.j, ^.layer_000.pos.j))
  _01111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 95.1 = 235.0
DL output with Mo: L = 401.5 + 10347.2 = 10748.7
DL input+output M: L = 541.4 + 10442.3 = 10983.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 40f6cd08.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 40f6cd08.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 40f6cd08.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 40f6cd08.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 10347.2 bits (10347.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-302] Checking task 414297c0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 124328.0 = 124340.6
DL output with Mo: L = 12.6 + 20346.2 = 20358.8
DL input+output M: L = 25.2 + 144674.2 = 144699.4

# learning a model for train pairs
2.000	
1.229	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.970	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.713	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.602	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.568	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.540	OUT SPE ^.size = ^.layer_0.shape.size
0.527	OUT SPE ^.color = majorityColor(^.grid)
0.518	OUT SPE ^.layer_0.shape.size.i = 3
0.504	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.494	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j
0.486	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.478	OUT SPE ^.layer_0.shape.color = red
0.473	OUT SPE ^.layer_011.shape.size.j = 1
0.468	OUT SPE ^.layer_011.shape.mask = Full
0.463	OUT SPE ^.layer_0111.shape.size.j = 1
0.456	OUT SPE ^.layer_011.pos.j = bottom(^.layer_01) - 2
0.451	OUT SPE ^.layer_0111.shape.mask = Full
0.257	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color majorityColor(^.grid) and layers
  _0: a rectangle with size (3,?) and color red and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,1) and color ? and mask Full at (?,bottom(^.layer_01) - 2)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 24196.6 = 24260.8
DL output with Mo: L = 196.9 + 5017.1 = 5214.0
DL input+output M: L = 261.1 + 29213.7 = 29474.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color majorityColor(^.grid) and layers
  _0: a rectangle with size (3,?) and color red and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,1) and color ? and mask Full at (?,bottom(^.layer_01) - 2)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 63.4 = 127.6
DL output with Mo: L = 196.9 + 5017.1 = 5214.0
DL input+output M: L = 261.1 + 5080.5 = 5341.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 414297c0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 414297c0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 414297c0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 414297c0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.2 sec (58.2 sec/task)
bits-train-error = 5017.1 bits (5017.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-301] Checking task 423a55dc.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27673.8 = 27686.5
DL output with Mo: L = 12.6 + 26170.2 = 26182.8
DL input+output M: L = 25.2 + 53844.0 = 53869.2

# learning a model for train pairs
2.000	
1.131	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.316	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.277	OUT SPE ^.size = ^.size
0.263	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.252	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.242	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.237	OUT SPE ^.color = black
0.233	IN  SPE ^.color = black
0.107	
0.107	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 3474.1 = 3513.1
DL output with Mo: L = 40.0 + 2726.3 = 2766.2
DL input+output M: L = 78.9 + 6200.4 = 6279.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 40.0 + 2726.3 = 2766.2
DL input+output M: L = 78.8 + 2726.3 = 2805.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 423a55dc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 423a55dc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 423a55dc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 423a55dc.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 423a55dc.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 423a55dc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 2726.3 bits (2726.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-300] Checking task 42918530.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 242752.5 = 242765.1
DL output with Mo: L = 12.6 + 260757.4 = 260770.0
DL input+output M: L = 25.2 + 503509.9 = 503535.1

# learning a model for train pairs
2.000	
1.880	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.758	OUT ADD ^.layer_0 = ^.layer_0
1.639	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.530	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.419	OUT ADD ^.layer_011 = ^.layer_01
1.313	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.211	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.008	OUT ADD ^.layer_010 = ^.layer_010
0.926	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.858	OUT ADD ^.layer_0110 = ^.layer_011
0.783	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.780	OUT SPE ^.size = ^.size
0.778	OUT SPE ^.layer_0111.shape.size.j = ^.layer_011.shape.size.j
0.777	OUT SPE ^.layer_01111.shape.size.j = ^.layer_011.shape.size.j
0.776	OUT SPE ^.layer_011111.shape.size.i = ^.layer_011.shape.size.i
0.775	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.j
0.774	OUT SPE ^.layer_011111.pos.i = ^.layer_011.pos.j
0.773	OUT SPE ^.layer_011111.pos.j = bottom(^.layer_011) + 2
0.772	OUT SPE ^.layer_01.pos.j = max(^.layer_0.pos.i, ^.layer_01.pos.i)
0.772	OUT SPE ^.layer_01.pos.i = max(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i
0.771	OUT SPE ^.layer_0111.pos.j = max(^.layer_0.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i
0.770	OUT SPE ^.layer_01111.pos.j = max(^.layer_0.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i
0.770	IN  SPE ^.color = black
0.769	OUT SPE ^.color = black
0.194	
0.194	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: ^.layer_0.shape at (max(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i,max(^.layer_0.pos.i, ^.layer_01.pos.i))
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size (?,^.layer_011.shape.size.j) and color ? and mask ? at (^.layer_01.pos.j,max(^.layer_0.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i)
  _01111: a rectangle with size (?,^.layer_011.shape.size.j) and color ? and mask ? at (?,max(^.layer_0.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i)
  _011111: a rectangle with size (^.layer_011.shape.size.i,?) and color ? and mask ? at (^.layer_011.pos.j,bottom(^.layer_011) + 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 139869.0 = 139983.3
DL output with Mo: L = 454.2 + 49817.3 = 50271.5
DL input+output M: L = 568.4 + 189686.3 = 190254.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: ^.layer_0.shape at (max(^.layer_01.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i,max(^.layer_0.pos.i, ^.layer_01.pos.i))
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size (?,^.layer_011.shape.size.j) and color ? and mask ? at (^.layer_01.pos.j,max(^.layer_0.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i)
  _01111: a rectangle with size (?,^.layer_011.shape.size.j) and color ? and mask ? at (?,max(^.layer_0.pos.j, ^.layer_011.pos.j) + ^.layer_01.pos.i - ^.layer_0.pos.i)
  _011111: a rectangle with size (^.layer_011.shape.size.i,?) and color ? and mask ? at (^.layer_011.pos.j,bottom(^.layer_011) + 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 63.4 = 177.5
DL output with Mo: L = 454.2 + 49817.3 = 50271.5
DL input+output M: L = 568.3 + 49880.7 = 50449.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 42918530.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 42918530.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 42918530.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 42918530.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 42918530.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 49817.3 bits (49817.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-299] Checking task 42a15761.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36373.4 = 36386.0
DL output with Mo: L = 12.6 + 36373.4 = 36386.0
DL input+output M: L = 25.2 + 72746.8 = 72772.0

# learning a model for train pairs
2.000	
1.770	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	OUT ADD ^.layer_0 = ^.layer_0
1.265	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.035	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.864	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.668	OUT ADD ^.layer_011 = ^.layer_011
0.650	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.629	OUT ADD ^.layer_0110 = ^.layer_0110.shape at (?,?)
0.608	OUT ADD ^.layer_01101 = ^.layer_0110.shape at (?,?)
0.587	OUT ADD ^.layer_01100 = ^.layer_0110.shape at (?,?)
0.565	OUT ADD ^.layer_011011 = ^.layer_0110.shape at (?,?)
0.544	OUT ADD ^.layer_011010 = ^.layer_0110.shape at (?,?)
0.527	OUT SPE ^.size = ^.size
0.510	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.494	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.178	
0.177	IN  DEL ^.layer_01111
0.177	IN  DEL ^.layer_0111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at (?,?)
  _01100: ^.layer_0110.shape at (?,?)
  _0110: ^.layer_0110.shape at (?,?)
  _011010: ^.layer_0110.shape at (?,?)
  _01101: ^.layer_0110.shape at (?,?)
  _011011: ^.layer_0110.shape at (?,?)
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 135.7 + 11497.7 = 11633.4
DL output with Mo: L = 132.6 + 6195.3 = 6327.9
DL input+output M: L = 268.3 + 17693.0 = 17961.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at (?,?)
  _01100: ^.layer_0110.shape at (?,?)
  _0110: ^.layer_0110.shape at (?,?)
  _011010: ^.layer_0110.shape at (?,?)
  _01101: ^.layer_0110.shape at (?,?)
  _011011: ^.layer_0110.shape at (?,?)
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 104.8 + 0.0 = 104.8
DL output with Mo: L = 132.6 + 6195.3 = 6327.9
DL input+output M: L = 237.5 + 6195.3 = 6432.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 42a15761.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 42a15761.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 42a15761.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 42a15761.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 6195.3 bits (6195.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-298] Checking task 4364c1c4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 46366.1 = 46378.7
DL output with Mo: L = 12.6 + 46366.1 = 46378.7
DL input+output M: L = 25.2 + 92732.1 = 92757.4

# learning a model for train pairs
2.000	
1.455	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.564	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.246	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.222	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.208	OUT SPE ^.size = ^.size
0.201	OUT SPE ^.layer_0.pos = ^.layer_0.pos - (0, 1)
0.194	OUT SPE ^.layer_010.pos = ^.layer_01.pos + (0, 1)
0.191	OUT SPE ^.layer_01.shape.mask = Full
0.055	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - (0, 1)
  _010: ^.layer_01.shape at ^.layer_01.pos + (0, 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 6354.8 = 6419.0
DL output with Mo: L = 91.2 + 2368.8 = 2459.9
DL input+output M: L = 155.4 + 8723.5 = 8878.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - (0, 1)
  _010: ^.layer_01.shape at ^.layer_01.pos + (0, 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 91.2 + 2368.8 = 2459.9
DL input+output M: L = 155.4 + 2388.8 = 2544.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4364c1c4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4364c1c4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4364c1c4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 4364c1c4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.0 sec (15.0 sec/task)
bits-train-error = 2368.8 bits (2368.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-297] Checking task 456873bc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 98576.8 = 98589.4
DL output with Mo: L = 12.6 + 51385.0 = 51397.6
DL input+output M: L = 25.2 + 149961.8 = 149987.0

# learning a model for train pairs
2.000	
1.460	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.366	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.274	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.111	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.051	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.006	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i
0.905	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.846	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.551	
0.550	IN  DEL ^.layer_0111
0.550	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 29160.6 = 29274.7
DL output with Mo: L = 140.3 + 28102.5 = 28242.8
DL input+output M: L = 254.4 + 57263.1 = 57517.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 140.3 + 28102.5 = 28242.8
DL input+output M: L = 204.5 + 28122.5 = 28327.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 456873bc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 456873bc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 456873bc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 456873bc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 28102.5 bits (28102.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-296] Checking task 45737921.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27908.2 = 27920.8
DL output with Mo: L = 12.6 + 27908.2 = 27920.8
DL input+output M: L = 25.2 + 55816.4 = 55841.6

# learning a model for train pairs
2.000	
1.795	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.591	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.429	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.266	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.160	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.053	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.967	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.881	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	OUT SPE ^.layer_011 = coloring(^.layer_011, majorityColor(^.grid))
0.824	OUT SPE ^.size = ^.size
0.811	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.799	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.786	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.774	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.762	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.750	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.746	IN  SPE ^.layer_0.shape.mask = Full
0.743	IN  SPE ^.layer_01.shape.mask = Full
0.739	IN  SPE ^.layer_0111.shape.mask = Full
0.736	OUT SPE ^.layer_0.shape.mask = Full
0.732	OUT SPE ^.layer_01.shape.mask = Full
0.729	OUT SPE ^.layer_0111.shape.mask = Full
0.303	
0.303	IN  GEN ^.layer_0111.shape.mask = ?
0.303	IN  GEN ^.layer_01.shape.mask = ?
0.303	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at ^.layer_01.pos
  _011: coloring(^.layer_011, majorityColor(^.grid))
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask Full at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 117.1 + 11887.8 = 12004.9
DL output with Mo: L = 91.0 + 8249.3 = 8340.4
DL input+output M: L = 208.1 + 20137.2 = 20345.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at ^.layer_01.pos
  _011: coloring(^.layer_011, majorityColor(^.grid))
  _0111: a rectangle with size ^.layer_0111.shape.size and color ? and mask Full at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 91.0 + 8249.3 = 8340.4
DL input+output M: L = 205.1 + 8249.3 = 8454.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 45737921.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 45737921.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 45737921.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 45737921.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.4 sec (57.4 sec/task)
bits-train-error = 8249.3 bits (8249.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-295] Checking task 45bbe264.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3509.0 = 3521.6
DL output with Mo: L = 12.6 + 70235.0 = 70247.6
DL input+output M: L = 25.2 + 73743.9 = 73769.2

# learning a model for train pairs
2.000	
1.726	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.507	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.330	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.148	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.974	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.834	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.813	IN  SPE ^.color = black
0.794	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0))
0.767	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	OUT SPE ^.layer_0.shape = scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0))
0.748	OUT SPE ^.size = ^.size
0.743	OUT SPE ^.layer_01.pos = projI(^.layer_01.pos)
0.737	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos)
0.732	OUT SPE ^.layer_0111.pos = projJ(^.layer_01.pos)
0.727	OUT SPE ^.layer_01111.pos = projJ(^.layer_0.pos)
0.724	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.717	OUT SPE ^.layer_011.shape.mask = Full
0.712	OUT SPE ^.layer_010.pos = corner(^.layer_01.pos, ^.layer_0.pos)
0.703	OUT ADD ^.layer_00 = a point with color ? at (?,?)
0.698	OUT SPE ^.layer_00.pos = corner(^.layer_0.pos, ^.layer_01.pos)
0.696	OUT SPE ^.layer_00.shape.color = red
0.693	OUT SPE ^.layer_010.shape.color = red
0.691	OUT SPE ^.layer_0111.shape.color = ^.layer_01.shape.color
0.689	OUT SPE ^.layer_01111.shape.color = ^.layer_0.shape.color
0.687	OUT SPE ^.layer_0111.shape.size.j = 1
0.686	OUT SPE ^.layer_0111.shape.mask = Full
0.685	OUT SPE ^.layer_01111.shape.size.j = 1
0.683	OUT SPE ^.layer_01111.shape.mask = Full
0.682	OUT SPE ^.layer_011111.shape.size.j = 1
0.680	OUT SPE ^.layer_011111.shape.mask = Full
0.679	OUT SPE ^.color = black
0.073	
0.073	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color red at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0)) at projI(^.layer_0.pos)
  _010: a point with color red at corner(^.layer_01.pos, ^.layer_0.pos)
  _01: scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0)) at projI(^.layer_01.pos)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at projJ(^.layer_01.pos)
  _01111: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at projJ(^.layer_0.pos)
  _011111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 2136.6 = 2182.4
DL output with Mo: L = 339.2 + 3849.7 = 4188.9
DL input+output M: L = 384.9 + 5986.3 = 6371.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color red at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: scaleTo(^.layer_0.shape, projJ(^.size) + (1, 0)) at projI(^.layer_0.pos)
  _010: a point with color red at corner(^.layer_01.pos, ^.layer_0.pos)
  _01: scaleTo(^.layer_01.shape, projJ(^.size) + (1, 0)) at projI(^.layer_01.pos)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at projJ(^.layer_01.pos)
  _01111: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at projJ(^.layer_0.pos)
  _011111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 339.2 + 3849.7 = 4188.9
DL input+output M: L = 384.8 + 3849.7 = 4234.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 45bbe264.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 45bbe264.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 45bbe264.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 45bbe264.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 3849.7 bits (3849.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-294] Checking task 477d2879.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 59490.2 = 59502.8
DL output with Mo: L = 12.6 + 89313.8 = 89326.4
DL input+output M: L = 25.2 + 148804.0 = 148829.2

# learning a model for train pairs
2.000	
1.423	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.810	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.656	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.541	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.463	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.195	
0.194	IN  DEL ^.layer_01
0.194	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 15952.3 = 16016.5
DL output with Mo: L = 114.1 + 17175.1 = 17289.3
DL input+output M: L = 178.3 + 33127.4 = 33305.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 17175.1 = 17289.3
DL input+output M: L = 126.7 + 17175.1 = 17301.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 477d2879.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 477d2879.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 477d2879.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 477d2879.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 17175.1 bits (17175.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-293] Checking task 47996f11.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1140177.2 = 1140189.8
DL output with Mo: L = 12.6 + 1115154.6 = 1115167.2
DL input+output M: L = 25.2 + 2255331.8 = 2255357.0

# learning a model for train pairs
2.000	
1.893	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.803	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.747	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.702	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.664	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.627	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	
0.838	IN  DEL ^.layer_0111
0.838	IN  DEL ^.layer_011
0.838	IN  DEL ^.layer_01
0.838	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 899348.3 = 899462.5
DL output with Mo: L = 64.2 + 934596.6 = 934660.8
DL input+output M: L = 178.3 + 1833944.9 = 1834123.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 64.2 + 934596.6 = 934660.8
DL input+output M: L = 76.8 + 934596.6 = 934673.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 47996f11.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 47996f11.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 47996f11.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 47996f11.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 47996f11.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 62.3 sec (62.3 sec/task)
bits-train-error = 934596.6 bits (934596.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-292] Checking task 48131b3c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4318.9 = 4331.5
DL output with Mo: L = 12.6 + 16755.4 = 16768.0
DL input+output M: L = 25.2 + 21074.3 = 21099.6

# learning a model for train pairs
2.000	
1.163	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.541	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.512	OUT SPE ^.size = tiling(^.size, 2, 2)
0.483	OUT SPE ^.layer_0.shape.size = tiling(^.size, 2, 2)
0.465	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.448	IN  SPE ^.color = black
0.438	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.434	OUT SPE ^.color = black
0.082	
0.082	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size tiling(^.size, 2, 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 1523.7 = 1562.7
DL output with Mo: L = 61.7 + 1161.6 = 1223.2
DL input+output M: L = 100.6 + 2685.3 = 2785.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: a rectangle with size tiling(^.size, 2, 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 61.7 + 1161.6 = 1223.2
DL input+output M: L = 100.5 + 1161.6 = 1262.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 48131b3c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 48131b3c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 48131b3c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 48131b3c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 1161.6 bits (1161.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-291] Checking task 4852f2fa.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15413.3 = 15425.9
DL output with Mo: L = 12.6 + 19104.1 = 19116.7
DL input+output M: L = 25.2 + 34517.4 = 34542.6

# learning a model for train pairs
2.000	
1.199	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.667	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.639	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.610	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.592	IN  SPE ^.layer_0.shape.color = cyan
0.574	IN  SPE ^.layer_011.shape.color = yellow
0.557	OUT SPE ^.size.i = 3
0.542	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.529	OUT SPE ^.layer_0.pos.j = '0
0.520	OUT SPE ^.layer_0.pos.i = span(^.layer_0.pos.i, ^.layer_01.pos.i) - 2
0.513	IN  SPE ^.color = black
0.506	OUT SPE ^.color = black
0.145	
0.144	IN  DEL ^.layer_0111
0.144	IN  GEN ^.layer_0.shape.color = ?
0.144	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (3,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (span(^.layer_0.pos.i, ^.layer_01.pos.i) - 2,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color yellow at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 93.0 + 5564.9 = 5657.9
DL output with Mo: L = 83.0 + 2580.5 = 2663.5
DL input+output M: L = 176.0 + 8145.4 = 8321.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (3,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (span(^.layer_0.pos.i, ^.layer_01.pos.i) - 2,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color yellow at (?,?)

DL input  with Mi: L = 74.0 + 0.0 = 74.0
DL output with Mo: L = 83.0 + 2580.5 = 2663.5
DL input+output M: L = 157.0 + 2580.5 = 2737.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4852f2fa.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4852f2fa.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4852f2fa.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4852f2fa.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4852f2fa.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 4852f2fa.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 4852f2fa.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 2580.5 bits (2580.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-290] Checking task 48f8583b.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11051.8 = 11064.4
DL output with Mo: L = 12.6 + 41633.5 = 41646.1
DL input+output M: L = 25.2 + 52685.3 = 52710.5

# learning a model for train pairs
2.000	
1.622	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.258	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.974	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.867	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.798	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.770	OUT SPE ^.size = tiling(^.size, 3, 3)
0.749	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.741	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
0.736	OUT SPE ^.layer_011.shape.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.731	OUT SPE ^.layer_011.shape.mask = Full
0.726	OUT SPE ^.layer_0111.shape.mask = Full
0.235	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color majorityColor(^.grid) and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 5457.0 = 5521.2
DL output with Mo: L = 191.4 + 9282.0 = 9473.5
DL input+output M: L = 255.6 + 14739.0 = 14994.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color majorityColor(^.grid) and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 191.4 + 9282.0 = 9473.5
DL input+output M: L = 255.6 + 9302.0 = 9557.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 48f8583b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 48f8583b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 48f8583b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 48f8583b.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 48f8583b.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 48f8583b.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 48f8583b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.6 sec (56.6 sec/task)
bits-train-error = 9282.0 bits (9282.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-289] Checking task 4aab4007.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 711152.4 = 711165.0
DL output with Mo: L = 12.6 + 689063.9 = 689076.5
DL input+output M: L = 25.2 + 1400216.3 = 1400241.5

# learning a model for train pairs
2.000	
1.886	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.794	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.722	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.674	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.639	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.606	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	
0.819	IN  DEL ^.layer_011
0.818	IN  DEL ^.layer_01
0.818	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 560073.1 = 560162.4
DL output with Mo: L = 89.3 + 563859.9 = 563949.2
DL input+output M: L = 178.5 + 1123933.0 = 1124111.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 89.3 + 563859.9 = 563949.2
DL input+output M: L = 101.9 + 563859.9 = 563961.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4aab4007.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4aab4007.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4aab4007.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 4aab4007.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.9 sec (60.9 sec/task)
bits-train-error = 563859.9 bits (563859.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-288] Checking task 4acc7107.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33233.4 = 33246.0
DL output with Mo: L = 12.6 + 33233.4 = 33246.0
DL input+output M: L = 25.2 + 66466.7 = 66492.0

# learning a model for train pairs
2.000	
1.726	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.414	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.213	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.979	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.802	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.621	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.456	OUT ADD ^.layer_010 = ^.layer_010.shape at (?,?)
0.323	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.297	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.273	OUT SPE ^.size = ^.size
0.268	OUT SPE ^.layer_010.pos.j = bottom(^.layer_01) - 3
0.263	OUT SPE ^.layer_0.pos.j = bottom(^.layer_010) - ^.layer_011.pos.j - ^.layer_0.pos.j
0.260	IN  SPE ^.color = black
0.257	OUT SPE ^.color = black
0.050	
0.050	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (?,bottom(^.layer_010) - ^.layer_011.pos.j - ^.layer_0.pos.j)
  _010: ^.layer_010.shape at (?,bottom(^.layer_01) - 3)
  _01: ^.layer_01.shape at (?,?)
  _011: ^.layer_011.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 6923.4 = 7037.6
DL output with Mo: L = 146.3 + 1354.5 = 1500.8
DL input+output M: L = 260.5 + 8277.9 = 8538.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (?,bottom(^.layer_010) - ^.layer_011.pos.j - ^.layer_0.pos.j)
  _010: ^.layer_010.shape at (?,bottom(^.layer_01) - 3)
  _01: ^.layer_01.shape at (?,?)
  _011: ^.layer_011.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 146.3 + 1354.5 = 1500.8
DL input+output M: L = 260.4 + 1386.2 = 1646.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4acc7107.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4acc7107.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4acc7107.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4acc7107.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 4acc7107.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.3 sec (5.3 sec/task)
bits-train-error = 1354.5 bits (1354.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-287] Checking task 4b6b68e5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 85264.4 = 85277.0
DL output with Mo: L = 12.6 + 145844.6 = 145857.2
DL input+output M: L = 25.2 + 231109.0 = 231134.2

# learning a model for train pairs
2.000	
1.565	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.226	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.948	OUT ADD ^.layer_01 = ^.layer_0
0.723	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.597	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.469	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.359	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.287	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.278	OUT SPE ^.layer_011.shape.mask = ^.layer_01.shape.mask
0.271	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.264	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.257	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.249	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.242	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.237	OUT SPE ^.layer_0111.shape.mask = ^.layer_011.shape.mask
0.232	OUT SPE ^.size = ^.size
0.231	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i + 1
0.230	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i
0.229	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.i + 3
0.228	OUT SPE ^.layer_01111.pos.i = ^.layer_0111111.pos.j + 3
0.226	OUT SPE ^.layer_011.shape.size.i = ^.layer_011.shape.size.j + ^.layer_0111111.pos.i - ^.layer_01111.pos.i
0.225	OUT SPE ^.layer_011.pos.i = max(^.layer_01.pos.i, ^.layer_01111.pos.i)
0.224	OUT SPE ^.layer_0.shape.color = ^.layer_01111.shape.color
0.223	OUT SPE ^.layer_0111.pos = min(^.layer_011111.pos, ^.layer_01111111.pos) - ^.layer_011111.pos - ^.layer_011.pos
0.222	IN  SPE ^.color = black
0.222	OUT SPE ^.layer_01111.shape.mask = Full
0.221	OUT SPE ^.color = black
0.029	
0.029	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (^.layer_0.pos.i + 1,^.layer_0.pos.i + 3)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_011.shape.size.j + ^.layer_0111111.pos.i - ^.layer_01111.pos.i,?) and color ? and mask ^.layer_01.shape.mask at (max(^.layer_01.pos.i, ^.layer_01111.pos.i),?)
  _0111: a rectangle with size (?,?) and color ? and mask ^.layer_011.shape.mask at min(^.layer_011111.pos, ^.layer_01111111.pos) - ^.layer_011111.pos - ^.layer_011.pos
  _01111: a rectangle with size (?,?) and color ? and mask Full at (^.layer_0111111.pos.j + 3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 166.4 + 16414.4 = 16580.8
DL output with Mo: L = 392.2 + 3508.1 = 3900.3
DL input+output M: L = 558.6 + 19922.5 = 20481.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (^.layer_0.pos.i + 1,^.layer_0.pos.i + 3)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_011.shape.size.j + ^.layer_0111111.pos.i - ^.layer_01111.pos.i,?) and color ? and mask ^.layer_01.shape.mask at (max(^.layer_01.pos.i, ^.layer_01111.pos.i),?)
  _0111: a rectangle with size (?,?) and color ? and mask ^.layer_011.shape.mask at min(^.layer_011111.pos, ^.layer_01111111.pos) - ^.layer_011111.pos - ^.layer_011.pos
  _01111: a rectangle with size (?,?) and color ? and mask Full at (^.layer_0111111.pos.j + 3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 166.3 + 0.0 = 166.3
DL output with Mo: L = 392.2 + 3508.1 = 3900.3
DL input+output M: L = 558.5 + 3508.1 = 4066.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4b6b68e5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4b6b68e5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4b6b68e5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 4b6b68e5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.2 sec (30.2 sec/task)
bits-train-error = 3508.1 bits (3508.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-286] Checking task 4c177718.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 58558.5 = 58571.1
DL output with Mo: L = 12.6 + 18525.1 = 18537.7
DL input+output M: L = 25.2 + 77083.6 = 77108.8

# learning a model for train pairs
2.000	
1.539	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.170	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.709	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.586	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.482	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.384	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.318	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.262	OUT SPE ^.layer_0.shape = ^.layer_01111.shape
0.219	OUT SPE ^.size = ^.size - translationSym(flipHeight, ^.layer_01, ^.layer_0)
0.214	OUT SPE ^.color = black
0.210	IN  SPE ^.layer_0.shape.color = grey
0.199	OUT SPE ^.layer_01.pos.j = min(^.layer_0111.pos.j, ^.layer_01111.pos.j)
0.189	OUT SPE ^.layer_0.pos.j = min(^.layer_0111.pos.j, ^.layer_01111.pos.j)
0.186	IN  SPE ^.layer_0.shape.mask = Full
0.185	IN  SPE ^.color = black
0.037	
0.037	IN  GEN ^.layer_0.shape.color = ?
0.037	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - translationSym(flipHeight, ^.layer_01, ^.layer_0) and color black and layers
  _0: ^.layer_01111.shape at (?,min(^.layer_0111.pos.j, ^.layer_01111.pos.j))
  _01: ^.layer_01.shape at (?,min(^.layer_0111.pos.j, ^.layer_01111.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 143.3 + 8698.1 = 8841.4
DL output with Mo: L = 184.3 + 439.3 = 623.6
DL input+output M: L = 327.6 + 9137.4 = 9465.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - translationSym(flipHeight, ^.layer_01, ^.layer_0) and color black and layers
  _0: ^.layer_01111.shape at (?,min(^.layer_0111.pos.j, ^.layer_01111.pos.j))
  _01: ^.layer_01.shape at (?,min(^.layer_0111.pos.j, ^.layer_01111.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 31.7 = 171.6
DL output with Mo: L = 184.3 + 439.3 = 623.6
DL input+output M: L = 324.1 + 471.0 = 795.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4c177718.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4c177718.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4c177718.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4c177718.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 4c177718.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 4c177718.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.5 sec (6.5 sec/task)
bits-train-error = 439.3 bits (439.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-285] Checking task 4cd1b7b2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11778.8 = 11791.4
DL output with Mo: L = 12.6 + 13365.2 = 13377.8
DL input+output M: L = 25.2 + 25144.0 = 25169.2

# learning a model for train pairs
2.000	
1.879	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.788	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.718	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.611	OUT ADD ^.layer_00 = ^.layer_0
1.560	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.481	OUT ADD ^.layer_011 = ^.layer_01
1.420	OUT ADD ^.layer_001 = ^.layer_01.shape at (?,?)
1.367	IN  ADD ^.layer_010 = a point with color ? at (?,?)
1.314	IN  ADD ^.layer_0101 = a point with color ? at (?,?)
1.262	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.211	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.140	OUT ADD ^.layer_0111 = ^.layer_0111
1.081	OUT ADD ^.layer_01111 = ^.layer_0111.shape at (?,?)
1.050	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.439	
0.416	IN  DEL ^.layer_01111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_01.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 132.4 + 7239.3 = 7371.7
DL output with Mo: L = 129.3 + 5559.3 = 5688.6
DL input+output M: L = 261.7 + 12798.6 = 13060.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_01.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 117.1 + 51.7 = 168.8
DL output with Mo: L = 129.3 + 5247.5 = 5376.8
DL input+output M: L = 246.4 + 5299.2 = 5545.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4cd1b7b2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4cd1b7b2.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4cd1b7b2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 4cd1b7b2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 5247.5 bits (5247.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-284] Checking task 4e45f183.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 209103.7 = 209116.3
DL output with Mo: L = 12.6 + 209103.7 = 209116.3
DL input+output M: L = 25.2 + 418207.4 = 418232.6

# learning a model for train pairs
2.000	
1.295	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.532	OUT ADD ^.layer_0 = ^.layer_0
0.483	IN  SPE ^.layer_0.shape.mask = xxxxxxxxxxxxxxxxxxx|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|xxxxxxxxxxxxxxxxxxx|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|xxxxxxxxxxxxxxxxxxx|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|xxxxxxxxxxxxxxxxxxx
0.457	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.432	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.416	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.403	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.393	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.373	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	OUT ADD ^.layer_01110 = ^.layer_0111.shape at (?,?)
0.343	OUT ADD ^.layer_010 = ^.layer_0111.shape at (?,?)
0.162	
0.160	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _010: ^.layer_0111.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask xxxxxxxxxxxxxxxxxxx|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|xxxxxxxxxxxxxxxxxxx|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|xxxxxxxxxxxxxxxxxxx|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|x.....x.....x.....x|xxxxxxxxxxxxxxxxxxx at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 465.5 + 38021.3 = 38486.7
DL output with Mo: L = 165.5 + 33152.6 = 33318.1
DL input+output M: L = 631.0 + 71173.8 = 71804.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _010: ^.layer_0111.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 165.5 + 33152.6 = 33318.1
DL input+output M: L = 279.6 + 33172.6 = 33452.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4e45f183.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4e45f183.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4e45f183.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 4e45f183.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 33152.6 bits (33152.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-283] Checking task 4e469f39.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17268.8 = 17281.4
DL output with Mo: L = 12.6 + 34804.2 = 34816.8
DL input+output M: L = 25.2 + 52073.0 = 52098.2

# learning a model for train pairs
2.000	
1.332	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.957	OUT ADD ^.layer_0 = ^.layer_0
0.627	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.549	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.440	OUT SPE ^.size = ^.size
0.430	IN  SPE ^.layer_0.shape.color = grey
0.424	OUT SPE ^.layer_011.shape.size.i = ^.layer_0.shape.size.i
0.419	OUT SPE ^.layer_01.shape.color = red
0.415	OUT SPE ^.layer_011.shape.color = red
0.410	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.i - 1
0.406	IN  SPE ^.color = black
0.403	OUT SPE ^.layer_0111.shape.mask = Full
0.401	OUT SPE ^.color = black
0.085	
0.085	IN  GEN ^.layer_0.shape.color = ?
0.085	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (^.layer_0.shape.size.i,?) and color red and mask ? at (^.layer_0.pos.i - 1,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 5462.8 = 5505.1
DL output with Mo: L = 127.5 + 2746.8 = 2874.3
DL input+output M: L = 169.8 + 8209.6 = 8379.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (^.layer_0.shape.size.i,?) and color red and mask ? at (^.layer_0.pos.i - 1,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 127.5 + 2746.8 = 2874.3
DL input+output M: L = 166.4 + 2746.8 = 2913.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4e469f39.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 4e469f39.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4e469f39.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 4e469f39.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.2 sec (4.2 sec/task)
bits-train-error = 2746.8 bits (2746.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-282] Checking task 4f537728.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 143853.9 = 143866.5
DL output with Mo: L = 12.6 + 143853.9 = 143866.5
DL input+output M: L = 25.2 + 287707.8 = 287733.0

# learning a model for train pairs
2.000	
1.924	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.848	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.772	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.696	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.620	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.554	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.494	OUT ADD ^.layer_0 = ^.layer_0
1.435	OUT ADD ^.layer_01 = ^.layer_01
1.375	OUT ADD ^.layer_011 = ^.layer_011
1.315	OUT ADD ^.layer_0111 = ^.layer_0111
1.255	OUT ADD ^.layer_01111 = ^.layer_01111
1.179	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.124	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.032	OUT ADD ^.layer_0111111 = ^.layer_0111111
1.029	OUT SPE ^.size = ^.size
1.026	OUT SPE ^.layer_011111.shape.size = ^.layer_011111.shape.size
1.024	OUT SPE ^.layer_011111.pos = ^.layer_011111.pos
1.023	OUT SPE ^.layer_00.shape.size.i = ^.layer_0.shape.size.j
1.022	OUT SPE ^.layer_00.pos.i = '0
1.021	IN  SPE ^.layer_0.shape.color = blue
1.020	IN  SPE ^.layer_01.shape.color = blue
1.020	IN  SPE ^.layer_011.shape.color = blue
1.019	IN  SPE ^.layer_0111.shape.color = blue
1.018	IN  SPE ^.layer_01111.shape.color = blue
1.017	IN  SPE ^.layer_011111.shape.color = blue
1.016	IN  SPE ^.layer_0111111.shape.color = blue
1.016	OUT SPE ^.layer_00.shape.size.j = 2
0.515	
0.514	IN  GEN ^.layer_0111111.shape.color = ?
0.514	IN  GEN ^.layer_011111.shape.color = ?
0.514	IN  GEN ^.layer_01111.shape.color = ?
0.514	IN  GEN ^.layer_0111.shape.color = ?
0.514	IN  GEN ^.layer_011.shape.color = ?
0.514	IN  GEN ^.layer_01.shape.color = ?
0.514	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (^.layer_0.shape.size.j,2) and color ? and mask ? at ('0,?)
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: a rectangle with size ^.layer_011111.shape.size and color ? and mask ? at ^.layer_011111.pos
  _0111111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 211.4 + 72134.7 = 72346.1
DL output with Mo: L = 100.9 + 73687.0 = 73788.0
DL input+output M: L = 312.3 + 145821.7 = 146134.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (^.layer_0.shape.size.j,2) and color ? and mask ? at ('0,?)
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: a rectangle with size ^.layer_011111.shape.size and color ? and mask ? at ^.layer_011111.pos
  _0111111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 20.0 = 208.1
DL output with Mo: L = 100.9 + 73687.0 = 73788.0
DL input+output M: L = 289.1 + 73707.0 = 73996.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4f537728.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 4f537728.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 4f537728.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.2 sec (61.2 sec/task)
bits-train-error = 73687.0 bits (73687.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-281] Checking task 4ff4c9da.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 252251.0 = 252263.7
DL output with Mo: L = 12.6 + 252251.0 = 252263.7
DL input+output M: L = 25.2 + 504502.1 = 504527.3

# learning a model for train pairs
2.000	
1.506	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.992	OUT ADD ^.layer_0 = ^.layer_0
0.947	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.903	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.862	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.847	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.341	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 127612.0 = 127650.9
DL output with Mo: L = 118.4 + 85772.8 = 85891.2
DL input+output M: L = 157.2 + 213384.8 = 213542.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 118.4 + 85772.8 = 85891.2
DL input+output M: L = 157.2 + 85772.8 = 85930.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4ff4c9da.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4ff4c9da.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 4ff4c9da.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 4ff4c9da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.8 sec (58.8 sec/task)
bits-train-error = 85772.8 bits (85772.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-280] Checking task 505fff84.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 77086.5 = 77099.1
DL output with Mo: L = 12.6 + 9466.4 = 9479.0
DL input+output M: L = 25.2 + 86552.9 = 86578.1

# learning a model for train pairs
2.000	
1.355	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.777	OUT SPE ^.layer_0.shape.color = red
0.758	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.746	OUT SPE ^.color = black
0.391	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 27336.0 = 27374.8
DL output with Mo: L = 43.7 + 3657.3 = 3701.0
DL input+output M: L = 82.5 + 30993.3 = 31075.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 43.7 + 3657.3 = 3701.0
DL input+output M: L = 82.5 + 3657.3 = 3739.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 505fff84.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 505fff84.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 505fff84.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 505fff84.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 505fff84.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 505fff84.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 3657.3 bits (3657.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-279] Checking task 506d28a5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 38657.7 = 38670.3
DL output with Mo: L = 12.6 + 6730.8 = 6743.4
DL input+output M: L = 25.2 + 45388.5 = 45413.7

# learning a model for train pairs
2.000	
1.411	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.020	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.765	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.519	OUT SPE ^.size = ^.layer_011.shape.size + (3, 0)
0.432	OUT SPE ^.layer_0.shape.size = ^.layer_011.shape.size + (3, 0)
0.379	OUT SPE ^.layer_0.pos = '(0, 0)
0.346	OUT SPE ^.layer_0.shape.color = green
0.331	OUT SPE ^.color = black
0.325	IN  SPE ^.layer_0.shape.color = red
0.320	IN  SPE ^.layer_01.shape.color = blue
0.314	IN  SPE ^.layer_011.shape.color = yellow
0.310	IN  SPE ^.layer_011.shape.mask = Full
0.308	IN  SPE ^.color = black
0.139	
0.138	IN  DEL ^.layer_01
0.137	IN  DEL ^.layer_0
0.137	IN  GEN ^.layer_011.shape.mask = ?
0.137	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (3, 0) and color black and layers
  _0: a rectangle with size ^.layer_011.shape.size + (3, 0) and color green and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 100.4 + 6549.9 = 6650.3
DL output with Mo: L = 89.1 + 827.4 = 916.5
DL input+output M: L = 189.4 + 7377.3 = 7566.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (3, 0) and color black and layers
  _0: a rectangle with size ^.layer_011.shape.size + (3, 0) and color green and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 0.0 = 42.2
DL output with Mo: L = 89.1 + 827.4 = 916.5
DL input+output M: L = 131.2 + 827.4 = 958.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 506d28a5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 506d28a5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 506d28a5.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 506d28a5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 506d28a5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 827.4 bits (827.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-278] Checking task 50a16a69.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 83937.4 = 83950.0
DL output with Mo: L = 12.6 + 150433.3 = 150445.9
DL input+output M: L = 25.2 + 234370.7 = 234395.9

# learning a model for train pairs
2.000	
1.814	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.696	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.587	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.529	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.492	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.451	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.418	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.384	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	
0.816	IN  DEL ^.layer_01111
0.816	IN  DEL ^.layer_0111
0.816	IN  DEL ^.layer_011
0.815	IN  DEL ^.layer_01
0.815	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 47652.9 = 47791.8
DL output with Mo: L = 89.3 + 122514.5 = 122603.8
DL input+output M: L = 228.1 + 170167.4 = 170395.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 89.3 + 122514.5 = 122603.8
DL input+output M: L = 101.9 + 122514.5 = 122616.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 50a16a69.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 50a16a69.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 50a16a69.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 50a16a69.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 122514.5 bits (122514.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-277] Checking task 50aad11f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25626.4 = 25639.0
DL output with Mo: L = 12.6 + 21609.3 = 21622.0
DL input+output M: L = 25.2 + 47235.7 = 47260.9

# learning a model for train pairs
2.000	
1.625	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.289	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.976	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.536	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.505	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.480	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.455	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, ^.layer_0111.shape.color)
0.442	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.427	OUT SPE ^.layer_011.shape.size = projI(^.layer_011.shape.size) + projJ(^.layer_01.shape.size)
0.420	OUT SPE ^.layer_01.shape.size.i = area(^.layer_0111.shape) * colorCount(^.grid)
0.414	IN  SPE ^.layer_0.shape.color = pink
0.407	IN  SPE ^.layer_01.shape.color = pink
0.401	OUT SPE ^.layer_01.shape.size.j = ^.layer_011.shape.size.j
0.396	OUT SPE ^.layer_011.pos.j = span(^.layer_0.pos.i, ^.layer_0111.pos.i) - 2
0.393	OUT SPE ^.color = black
0.390	IN  SPE ^.color = black
0.156	
0.156	IN  GEN ^.layer_01.shape.color = ?
0.156	IN  GEN ^.layer_0.shape.color = ?
0.156	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_0111.shape.color) at (?,?)
  _01: a rectangle with size (area(^.layer_0111.shape) * colorCount(^.grid),^.layer_011.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size projI(^.layer_011.shape.size) + projJ(^.layer_01.shape.size) and color ? and mask ^.layer_011.shape.mask at (?,span(^.layer_0.pos.i, ^.layer_0111.pos.i) - 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 111.6 + 6060.7 = 6172.3
DL output with Mo: L = 237.5 + 2988.1 = 3225.6
DL input+output M: L = 349.1 + 9048.7 = 9397.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_0111.shape.color) at (?,?)
  _01: a rectangle with size (area(^.layer_0111.shape) * colorCount(^.grid),^.layer_011.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size projI(^.layer_011.shape.size) + projJ(^.layer_01.shape.size) and color ? and mask ^.layer_011.shape.mask at (?,span(^.layer_0.pos.i, ^.layer_0111.pos.i) - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 104.8 + 71.7 = 176.5
DL output with Mo: L = 237.5 + 2988.1 = 3225.6
DL input+output M: L = 342.3 + 3059.8 = 3402.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 50aad11f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 50aad11f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 50aad11f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 50aad11f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.2 sec (11.2 sec/task)
bits-train-error = 2988.1 bits (2988.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-276] Checking task 50f325b5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 273418.2 = 273430.8
DL output with Mo: L = 12.6 + 273418.2 = 273430.8
DL input+output M: L = 25.2 + 546836.3 = 546861.5

# learning a model for train pairs
2.000	
1.925	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.859	OUT ADD ^.layer_0 = ^.layer_0
1.798	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.758	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.720	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.681	OUT ADD ^.layer_011 = ^.layer_011
1.651	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.617	OUT ADD ^.layer_0111 = ^.layer_0111
1.595	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.575	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.559	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.547	OUT ADD ^.layer_01110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.542	OUT SPE ^.layer_011111.shape.size.i = min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - 2
1.539	OUT SPE ^.size = ^.size
1.536	IN  ADD ^.layer_00 = a point with color ? at (?,?)
1.534	OUT SPE ^.layer_01110.shape.size.i = ^.layer_01.shape.size.j - 3
1.531	OUT SPE ^.layer_00.shape.size.i = min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j) - 2
1.530	OUT SPE ^.layer_00.shape.size.j = max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j) - 3
0.727	
0.727	IN  DEL ^.layer_00
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j) - 2,max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j) - 3) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_011
  _01110: a rectangle with size (^.layer_01.shape.size.j - 3,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - 2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 219625.5 = 219755.1
DL output with Mo: L = 329.1 + 198335.2 = 198664.3
DL input+output M: L = 458.6 + 417960.8 = 418419.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j) - 2,max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j) - 3) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_011
  _01110: a rectangle with size (^.layer_01.shape.size.j - 3,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - 2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 95.1 = 209.2
DL output with Mo: L = 329.1 + 198335.2 = 198664.3
DL input+output M: L = 443.2 + 198430.3 = 198873.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 50f325b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 50f325b5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 50f325b5.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 50f325b5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 50f325b5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 198335.2 bits (198335.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-275] Checking task 516b51b7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 84216.1 = 84228.7
DL output with Mo: L = 12.6 + 84216.1 = 84228.7
DL input+output M: L = 25.2 + 168432.3 = 168457.5

# learning a model for train pairs
2.000	
1.337	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.767	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.540	OUT ADD ^.layer_01 = ^.layer_0
0.368	OUT ADD ^.layer_011 = ^.layer_01
0.245	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.203	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.174	OUT SPE ^.layer_010.shape.size.i = 3
0.166	OUT SPE ^.size = ^.size
0.161	OUT SPE ^.layer_0.shape.size = max(^.layer_0.shape.size, ^.layer_01.shape.size) - (2, 2)
0.158	OUT ADD ^.layer_0101 = a point with color ? at (?,?)
0.152	OUT SPE ^.layer_0101.shape.color = red
0.150	IN  SPE ^.layer_0.shape.color = blue
0.148	OUT SPE ^.layer_0.shape.color = red
0.146	OUT SPE ^.layer_0.shape.mask = Border
0.144	IN  SPE ^.layer_01.shape.color = blue
0.143	IN  SPE ^.layer_0.shape.mask = Full
0.142	OUT SPE ^.layer_0110.shape.mask = Full
0.071	
0.071	IN  GEN ^.layer_01.shape.color = ?
0.071	IN  GEN ^.layer_0.shape.color = ?
0.071	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size max(^.layer_0.shape.size, ^.layer_01.shape.size) - (2, 2) and color red and mask Border at (?,?)
  _010: a rectangle with size (3,?) and color ? and mask ? at (?,?)
  _0101: a point with color red at (?,?)
  _01: ^.layer_0
  _0110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 71.9 + 6001.1 = 6073.0
DL output with Mo: L = 168.2 + 5689.5 = 5857.7
DL input+output M: L = 240.0 + 11690.6 = 11930.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size max(^.layer_0.shape.size, ^.layer_01.shape.size) - (2, 2) and color red and mask Border at (?,?)
  _010: a rectangle with size (3,?) and color ? and mask ? at (?,?)
  _0101: a point with color red at (?,?)
  _01: ^.layer_0
  _0110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 168.2 + 5689.5 = 5857.7
DL input+output M: L = 232.4 + 5729.5 = 5961.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 516b51b7.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 516b51b7.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 516b51b7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 516b51b7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.9 sec (58.9 sec/task)
bits-train-error = 5689.5 bits (5689.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-274] Checking task 5207a7b5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6781.0 = 6793.7
DL output with Mo: L = 12.6 + 45288.6 = 45301.2
DL input+output M: L = 25.2 + 52069.6 = 52094.8

# learning a model for train pairs
2.000	
1.244	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.561	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.428	OUT ADD ^.layer_01 = ^.layer_0
0.329	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.304	IN  SPE ^.layer_0.shape.color = grey
0.290	IN  SPE ^.layer_0.shape.mask = Full
0.277	OUT SPE ^.size = ^.size
0.266	IN  SPE ^.color = black
0.258	OUT SPE ^.layer_0.pos = '(0, 0)
0.251	OUT SPE ^.layer_011.pos = ^.layer_0.pos + (0, 1)
0.247	OUT SPE ^.layer_011.shape.size.i = ^.layer_0.shape.size.i - 2
0.244	OUT SPE ^.layer_0.shape.color = cyan
0.240	OUT SPE ^.layer_011.shape.color = pink
0.238	OUT SPE ^.color = black
0.050	
0.050	IN  GEN ^.layer_0.shape.color = ?
0.050	IN  GEN ^.layer_0.shape.mask = ?
0.050	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at '(0, 0)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color pink and mask ? at ^.layer_0.pos + (0, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 1277.0 = 1320.3
DL output with Mo: L = 111.9 + 1878.1 = 1990.0
DL input+output M: L = 155.2 + 3155.0 = 3310.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at '(0, 0)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color pink and mask ? at ^.layer_0.pos + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 111.9 + 1878.1 = 1990.0
DL input+output M: L = 150.8 + 1878.1 = 2028.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5207a7b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5207a7b5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5207a7b5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 5207a7b5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.5 sec (17.5 sec/task)
bits-train-error = 1878.1 bits (1878.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-273] Checking task 5289ad53.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33375.5 = 33388.1
DL output with Mo: L = 12.6 + 4559.8 = 4572.4
DL input+output M: L = 25.2 + 37935.3 = 37960.5

# learning a model for train pairs
2.000	
1.694	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.472	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.150	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.928	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.826	OUT SPE ^.size = '(2, 3)
0.765	OUT SPE ^.color = ^.layer_01.shape.color
0.705	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.640	OUT SPE ^.layer_0.shape.size = ^.layer_0111.shape.size - (0, 2)
0.607	OUT SPE ^.layer_01.pos.j = 2
0.578	OUT SPE ^.layer_0.shape.mask = Full
0.550	OUT SPE ^.layer_0.pos.i = 1
0.541	IN  SPE ^.layer_011.shape.color = red
0.535	IN  SPE ^.layer_01.shape.color = green
0.531	IN  SPE ^.layer_01.shape.mask = Full
0.527	IN  SPE ^.layer_011.shape.mask = Full
0.523	IN  SPE ^.layer_0111.shape.mask = Full
0.519	IN  SPE ^.layer_01111.shape.mask = Full
0.269	
0.269	IN  GEN ^.layer_01.shape.color = ?
0.269	IN  GEN ^.layer_01111.shape.mask = ?
0.269	IN  GEN ^.layer_0111.shape.mask = ?
0.269	IN  GEN ^.layer_011.shape.mask = ?
0.269	IN  GEN ^.layer_01.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(2, 3) and color ^.layer_01.shape.color and layers
  _0: a rectangle with size ^.layer_0111.shape.size - (0, 2) and color ? and mask Full at (1,?)
  _01: a point with color ? at (?,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 149.5 + 8393.4 = 8542.9
DL output with Mo: L = 110.4 + 1091.9 = 1202.3
DL input+output M: L = 259.9 + 9485.3 = 9745.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(2, 3) and color ^.layer_01.shape.color and layers
  _0: a rectangle with size ^.layer_0111.shape.size - (0, 2) and color ? and mask Full at (1,?)
  _01: a point with color ? at (?,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.2 + 51.7 = 193.9
DL output with Mo: L = 110.4 + 1091.9 = 1202.3
DL input+output M: L = 252.6 + 1143.6 = 1396.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5289ad53.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5289ad53.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5289ad53.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5289ad53.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 5289ad53.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.4 sec (14.4 sec/task)
bits-train-error = 1091.9 bits (1091.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-272] Checking task 52fd389e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 93209.3 = 93221.9
DL output with Mo: L = 12.6 + 309186.4 = 309199.0
DL input+output M: L = 25.2 + 402395.7 = 402420.9

# learning a model for train pairs
2.000	
1.329	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.764	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.531	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.305	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.200	OUT ADD ^.layer_00 = ^.layer_0
0.126	OUT ADD ^.layer_010 = ^.layer_01
0.120	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.116	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.109	OUT ADD ^.layer_001 = ^.layer_011
0.105	OUT ADD ^.layer_0100 = ^.layer_010
0.103	OUT SPE ^.size = ^.size
0.101	IN  SPE ^.layer_0.shape.color = yellow
0.099	IN  SPE ^.layer_01.shape.color = yellow
0.098	IN  SPE ^.layer_01.shape.mask = Full
0.097	IN  SPE ^.layer_011.shape.mask = Full
0.096	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.i + ^.layer_0.shape.size.j
0.095	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i * '2
0.093	OUT ADD ^.layer_0011 = a point with color ? at (?,?)
0.092	IN  SPE ^.color = black
0.092	OUT SPE ^.layer_01.shape.color = ^.layer_010.shape.color
0.091	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.091	OUT SPE ^.layer_0.shape.mask = Full
0.090	OUT SPE ^.layer_0011.shape.color = ^.layer_011.shape.color
0.088	OUT ADD ^.layer_00111 = a point with color ? at (?,?)
0.088	OUT SPE ^.layer_01.shape.mask = Full
0.087	OUT SPE ^.layer_0011.pos.i = ^.layer_011.pos.i + 2
0.009	
0.009	IN  GEN ^.layer_01.shape.color = ?
0.009	IN  GEN ^.layer_0.shape.color = ?
0.009	IN  GEN ^.layer_011.shape.mask = ?
0.009	IN  GEN ^.layer_01.shape.mask = ?
0.009	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_011
  _0011: a point with color ^.layer_011.shape.color at (^.layer_011.pos.i + 2,?)
  _00111: a point with color ? at (?,?)
  _0: a rectangle with size (^.layer_0.shape.size.i * '2,^.layer_0.shape.size.i + ^.layer_0.shape.size.j) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0100: ^.layer_010
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ^.layer_010.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 113.6 + 7294.6 = 7408.2
DL output with Mo: L = 244.1 + 2234.3 = 2478.5
DL input+output M: L = 357.8 + 9529.0 = 9886.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_011
  _0011: a point with color ^.layer_011.shape.color at (^.layer_011.pos.i + 2,?)
  _00111: a point with color ? at (?,?)
  _0: a rectangle with size (^.layer_0.shape.size.i * '2,^.layer_0.shape.size.i + ^.layer_0.shape.size.j) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0100: ^.layer_010
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ^.layer_010.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 104.8 + 0.0 = 104.8
DL output with Mo: L = 244.1 + 2234.3 = 2478.5
DL input+output M: L = 349.0 + 2234.3 = 2583.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 52fd389e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 52fd389e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 52fd389e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 52fd389e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.6 sec (58.6 sec/task)
bits-train-error = 2234.3 bits (2234.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-271] Checking task 54db823b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 161466.6 = 161479.2
DL output with Mo: L = 12.6 + 130374.4 = 130387.0
DL input+output M: L = 25.2 + 291841.0 = 291866.2

# learning a model for train pairs
2.000	
1.625	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.333	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.145	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.008	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.933	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.252	
0.252	IN  DEL ^.layer_01
0.252	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 92319.4 = 92383.6
DL output with Mo: L = 138.9 + 32713.4 = 32852.3
DL input+output M: L = 203.1 + 125032.8 = 125235.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 32713.4 = 32852.3
DL input+output M: L = 151.5 + 32713.4 = 32864.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 54db823b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 54db823b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 54db823b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 54db823b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 54db823b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.8 sec (58.8 sec/task)
bits-train-error = 32713.4 bits (32713.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-270] Checking task 55059096.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21858.8 = 21871.4
DL output with Mo: L = 12.6 + 27189.0 = 27201.6
DL input+output M: L = 25.2 + 49047.7 = 49073.0

# learning a model for train pairs
2.000	
1.792	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.582	OUT ADD ^.layer_0 = ^.layer_0
1.374	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.164	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.954	OUT ADD ^.layer_01 = ^.layer_01
0.743	OUT ADD ^.layer_011 = ^.layer_011
0.593	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.391	OUT ADD ^.layer_01111 = ^.layer_0111
0.357	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.333	OUT SPE ^.size = ^.size
0.323	IN  SPE ^.layer_0.shape.mask = +-cross
0.312	IN  SPE ^.layer_01.shape.mask = +-cross
0.305	IN  SPE ^.layer_0.shape.color = green
0.297	IN  SPE ^.layer_01.shape.color = green
0.290	IN  SPE ^.layer_011.shape.color = green
0.282	IN  SPE ^.layer_0111.shape.color = green
0.276	OUT SPE ^.layer_0111.pos.i = bottom(^.layer_01)
0.270	OUT SPE ^.layer_0111.shape.color = red
0.264	OUT SPE ^.layer_011111.shape.color = red
0.258	OUT SPE ^.layer_0111.pos.j = span(^.layer_01.pos.i, ^.layer_0111.pos.i) - 1
0.253	OUT SPE ^.layer_011111.pos.j = min(^.layer_0.pos.j, ^.layer_011.pos.j) + 2
0.250	IN  SPE ^.color = black
0.247	OUT SPE ^.color = black
0.066	
0.066	IN  GEN ^.layer_01.shape.mask = ?
0.066	IN  GEN ^.layer_0.shape.mask = ?
0.066	IN  GEN ^.layer_0111.shape.color = ?
0.065	IN  GEN ^.layer_011.shape.color = ?
0.065	IN  GEN ^.layer_01.shape.color = ?
0.065	IN  GEN ^.layer_0.shape.color = ?
0.065	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color red and mask ? at (bottom(^.layer_01),span(^.layer_01.pos.i, ^.layer_0111.pos.i) - 1)
  _01111: ^.layer_0111
  _011111: a rectangle with size (?,?) and color red and mask ? at (?,min(^.layer_0.pos.j, ^.layer_011.pos.j) + 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask +-cross at (?,?)
  _01: a rectangle with size (?,?) and color green and mask +-cross at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 138.2 + 3956.7 = 4094.9
DL output with Mo: L = 180.2 + 1449.4 = 1629.6
DL input+output M: L = 318.4 + 5406.2 = 5724.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (?,?) and color red and mask ? at (bottom(^.layer_01),span(^.layer_01.pos.i, ^.layer_0111.pos.i) - 1)
  _01111: ^.layer_0111
  _011111: a rectangle with size (?,?) and color red and mask ? at (?,min(^.layer_0.pos.j, ^.layer_011.pos.j) + 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 180.2 + 1449.4 = 1629.6
DL input+output M: L = 294.3 + 1449.4 = 1743.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 55059096.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 55059096.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 55059096.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 55059096.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.6 sec (20.6 sec/task)
bits-train-error = 1449.4 bits (1449.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-269] Checking task 551d5bf1.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 83719.6 = 83732.2
DL output with Mo: L = 12.6 + 169848.4 = 169861.0
DL input+output M: L = 25.2 + 253568.0 = 253593.2

# learning a model for train pairs
2.000	
1.786	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.596	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.416	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.246	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.087	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.933	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.816	OUT ADD ^.layer_00 = ^.layer_0
0.715	OUT ADD ^.layer_01 = ^.layer_01
0.616	OUT ADD ^.layer_001 = ^.layer_011
0.525	OUT ADD ^.layer_011 = ^.layer_0111
0.422	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.333	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.253	OUT ADD ^.layer_011111 = ^.layer_01111
0.250	OUT SPE ^.size = ^.size
0.248	OUT SPE ^.layer_01111.pos = ^.layer_01.pos + (1, 1)
0.247	IN  SPE ^.layer_0.shape.color = blue
0.245	IN  SPE ^.layer_01.shape.color = blue
0.244	IN  SPE ^.layer_011.shape.color = blue
0.243	IN  SPE ^.layer_0111.shape.color = blue
0.242	IN  SPE ^.layer_01111.shape.color = blue
0.240	IN  SPE ^.layer_01111.shape.mask = Border
0.230	IN  SPE ^.layer_01.shape.mask = xxxxxxxx|x......x|x.......|x......x|xxxxxxxx
0.228	OUT SPE ^.layer_01111.shape.size = projJ(^.layer_011.shape.size) + (3, 2)
0.227	OUT SPE ^.layer_0111.shape.size.j = ^.layer_0111.shape.size.j
0.226	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i - 2
0.225	OUT SPE ^.layer_0111.pos.j = ^.layer_0.pos.j + 1
0.225	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.i + 1
0.224	OUT SPE ^.layer_0.shape.color = cyan
0.223	OUT SPE ^.layer_0111.shape.color = cyan
0.223	OUT SPE ^.layer_01111.shape.color = cyan
0.222	IN  SPE ^.color = black
0.221	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.i - ^.layer_01.shape.size.j
0.221	OUT SPE ^.color = black
0.221	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i - ^.layer_01111.pos.j - ^.layer_011.pos.j
0.151	
0.151	IN  GEN ^.layer_01111.shape.color = ?
0.151	IN  GEN ^.layer_0111.shape.color = ?
0.151	IN  GEN ^.layer_011.shape.color = ?
0.151	IN  GEN ^.layer_01.shape.color = ?
0.151	IN  GEN ^.layer_0.shape.color = ?
0.151	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: ^.layer_011
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color cyan and mask ? at (^.layer_011.pos.i + 1,^.layer_011.pos.i - ^.layer_01.shape.size.j)
  _01: ^.layer_01
  _011: ^.layer_0111
  _0111: a rectangle with size (?,^.layer_0111.shape.size.j) and color cyan and mask ? at (^.layer_011.pos.i - ^.layer_01111.pos.j - ^.layer_011.pos.j,^.layer_0.pos.j + 1)
  _01111: a rectangle with size projJ(^.layer_011.shape.size) + (3, 2) and color cyan and mask ? at ^.layer_01.pos + (1, 1)
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask xxxxxxxx|x......x|x.......|x......x|xxxxxxxx at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color blue and mask Border at (?,?)

DL input  with Mi: L = 203.6 + 5919.7 = 6123.3
DL output with Mo: L = 339.5 + 24793.9 = 25133.4
DL input+output M: L = 543.1 + 30713.6 = 31256.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: ^.layer_011
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color cyan and mask ? at (^.layer_011.pos.i + 1,^.layer_011.pos.i - ^.layer_01.shape.size.j)
  _01: ^.layer_01
  _011: ^.layer_0111
  _0111: a rectangle with size (?,^.layer_0111.shape.size.j) and color cyan and mask ? at (^.layer_011.pos.i - ^.layer_01111.pos.j - ^.layer_011.pos.j,^.layer_0.pos.j + 1)
  _01111: a rectangle with size projJ(^.layer_011.shape.size) + (3, 2) and color cyan and mask ? at ^.layer_01.pos + (1, 1)
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask xxxxxxxx|x......x|x.......|x......x|xxxxxxxx at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 186.9 + 31.7 = 218.6
DL output with Mo: L = 339.5 + 24793.9 = 25133.4
DL input+output M: L = 526.3 + 24825.6 = 25352.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 551d5bf1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 551d5bf1.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 551d5bf1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 44.3 sec (44.3 sec/task)
bits-train-error = 24793.9 bits (24793.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-268] Checking task 55783887.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10035.1 = 10047.7
DL output with Mo: L = 12.6 + 32519.9 = 32532.5
DL input+output M: L = 25.2 + 42555.0 = 42580.2

# learning a model for train pairs
2.000	
1.606	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.453	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.350	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.246	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.214	OUT SPE ^.size = ^.size
1.186	IN  SPE ^.layer_01.shape.color = blue
1.159	IN  SPE ^.layer_0.shape.color = blue
1.148	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.131	IN  SPE ^.layer_011.shape.mask = Full
1.120	OUT SPE ^.color = ^.color
1.111	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
1.107	OUT SPE ^.layer_01.pos.i = min(^.layer_01.pos.i, ^.layer_011.pos.i) - ^.layer_011.pos.i - ^.layer_0.pos.i
0.404	
0.404	IN  GEN ^.layer_011.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_01.pos.i, ^.layer_011.pos.i) - ^.layer_011.pos.i - ^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 78.3 + 7075.9 = 7154.2
DL output with Mo: L = 145.7 + 12693.4 = 12839.1
DL input+output M: L = 224.1 + 19769.3 = 19993.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_01.pos.i, ^.layer_011.pos.i) - ^.layer_011.pos.i - ^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 77.3 + 20.0 = 97.3
DL output with Mo: L = 145.7 + 12693.4 = 12839.1
DL input+output M: L = 223.1 + 12713.4 = 12936.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 55783887.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 55783887.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 55783887.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 55783887.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 55783887.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 55783887.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 12693.4 bits (12693.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-267] Checking task 575b1a71.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12601.1 = 12613.7
DL output with Mo: L = 12.6 + 12601.1 = 12613.7
DL input+output M: L = 25.2 + 25202.2 = 25227.4

# learning a model for train pairs
2.000	
1.274	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.138	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.981	OUT ADD ^.layer_00 = ^.layer_0
0.820	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.711	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.578	OUT SPE ^.size = ^.size
0.565	IN  SPE ^.layer_0.shape.color = grey
0.551	OUT SPE ^.layer_011.shape.color = blue
0.538	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.525	OUT SPE ^.layer_0111.shape.color = yellow
0.517	OUT SPE ^.layer_0.shape.size.j = 1
0.509	OUT SPE ^.layer_0.shape.mask = Full
0.501	OUT SPE ^.layer_01.shape.size.j = 1
0.494	OUT SPE ^.layer_01.shape.mask = Full
0.486	OUT SPE ^.layer_011.shape.size.j = 1
0.478	OUT SPE ^.layer_011.shape.mask = Full
0.470	OUT SPE ^.layer_0111.shape.size.j = 1
0.462	OUT SPE ^.layer_0111.shape.mask = Full
0.456	IN  SPE ^.color = black
0.451	OUT SPE ^.color = black
0.199	
0.198	IN  GEN ^.layer_0.shape.color = ?
0.198	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,1) and color ? and mask Full at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,1) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,1) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 3180.2 = 3222.5
DL output with Mo: L = 134.5 + 2327.4 = 2461.9
DL input+output M: L = 176.8 + 5507.6 = 5684.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,1) and color ? and mask Full at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,1) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,1) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 134.5 + 2327.4 = 2461.9
DL input+output M: L = 173.4 + 2327.4 = 2500.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 575b1a71.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 575b1a71.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 575b1a71.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 575b1a71.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.5 sec (6.5 sec/task)
bits-train-error = 2327.4 bits (2327.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-266] Checking task 5783df64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10553.3 = 10565.9
DL output with Mo: L = 12.6 + 8939.4 = 8952.0
DL input+output M: L = 25.2 + 19492.6 = 19517.8

# learning a model for train pairs
2.000	
1.933	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.866	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.798	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.730	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.662	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.593	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.523	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
1.450	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
1.393	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.336	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.279	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.222	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.164	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.106	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.048	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.988	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.946	OUT SPE ^.size = '(3, 3)
0.917	OUT SPE ^.color = blue
0.891	OUT SPE ^.layer_0.pos = '(0, 0)
0.865	OUT SPE ^.layer_0111111.pos = '(2, 1)
0.840	OUT SPE ^.layer_01111.pos = '(1, 1)
0.814	OUT SPE ^.layer_011.pos = projI(^.layer_011.pos)
0.788	OUT SPE ^.layer_01.pos = '(0, 2)
0.763	OUT SPE ^.layer_01111111.pos = '(2, 2)
0.748	OUT SPE ^.layer_01111111.shape = ^.layer_01111111.shape
0.725	OUT SPE ^.layer_0111.pos = projJ(^.layer_0111.pos) + ^.layer_011111.pos - ^.layer_0111.pos
0.716	OUT SPE ^.layer_011111.pos.j = min(^.layer_0.pos.j, ^.layer_011.pos.j)
0.709	IN  SPE ^.color = black
0.702	OUT SPE ^.layer_011111.pos.i = ^.layer_01111.pos.i + ^.layer_0111111.pos.j - ^.layer_01.pos.j
0.184	
0.184	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color blue and layers
  _0: a point with color ? at '(0, 0)
  _01: a point with color ? at '(0, 2)
  _011: a point with color ? at projI(^.layer_011.pos)
  _0111: a point with color ? at projJ(^.layer_0111.pos) + ^.layer_011111.pos - ^.layer_0111.pos
  _01111: a point with color ? at '(1, 1)
  _011111: a point with color ? at (^.layer_01111.pos.i + ^.layer_0111111.pos.j - ^.layer_01.pos.j,min(^.layer_0.pos.j, ^.layer_011.pos.j))
  _0111111: a point with color ? at '(2, 1)
  _01111111: ^.layer_01111111.shape at '(2, 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.5 + 5519.4 = 5657.9
DL output with Mo: L = 306.9 + 1185.2 = 1492.1
DL input+output M: L = 445.4 + 6704.6 = 7150.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color blue and layers
  _0: a point with color ? at '(0, 0)
  _01: a point with color ? at '(0, 2)
  _011: a point with color ? at projI(^.layer_011.pos)
  _0111: a point with color ? at projJ(^.layer_0111.pos) + ^.layer_011111.pos - ^.layer_0111.pos
  _01111: a point with color ? at '(1, 1)
  _011111: a point with color ? at (^.layer_01111.pos.i + ^.layer_0111111.pos.j - ^.layer_01.pos.j,min(^.layer_0.pos.j, ^.layer_011.pos.j))
  _0111111: a point with color ? at '(2, 1)
  _01111111: ^.layer_01111111.shape at '(2, 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.4 + 40.0 = 178.4
DL output with Mo: L = 306.9 + 1185.2 = 1492.1
DL input+output M: L = 445.3 + 1225.2 = 1670.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5783df64.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5783df64.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5783df64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 5783df64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 45.0 sec (45.0 sec/task)
bits-train-error = 1185.2 bits (1185.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-265] Checking task 5833af48.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 150947.1 = 150959.7
DL output with Mo: L = 12.6 + 21973.6 = 21986.2
DL input+output M: L = 25.2 + 172920.7 = 172946.0

# learning a model for train pairs
2.000	
1.245	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.871	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.562	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.509	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.463	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.437	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.411	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.395	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	OUT SPE ^.color = majorityColor(^.grid)
0.375	OUT SPE ^.layer_0.shape.color = cyan
0.366	OUT SPE ^.layer_011.shape.size.j = 3
0.358	OUT SPE ^.layer_01.pos.j = '0
0.344	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.329	OUT SPE ^.layer_0111.shape.mask = ^.layer_01.shape.mask
0.316	OUT SPE ^.size.j = ^.size.j - ^.layer_011.shape.size.j
0.307	OUT SPE ^.layer_01.shape.size.j = ^.layer_0111.shape.size.j
0.299	OUT SPE ^.layer_0.shape.size.i = ^.layer_0111.shape.size.j
0.291	OUT SPE ^.layer_01.shape.color = cyan
0.284	OUT SPE ^.layer_011.shape.color = cyan
0.276	OUT SPE ^.layer_0111.shape.color = cyan
0.269	OUT SPE ^.layer_0111.pos.j = right(^.layer_01111) - 1
0.262	OUT SPE ^.layer_0.pos.i = '0
0.257	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i
0.252	OUT SPE ^.layer_0111.shape.size.i = ^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i
0.243	OUT SPE ^.size.i = ^.layer_011.shape.size.j + ^.layer_01111.pos.j - ^.layer_0111.pos.j
0.238	OUT SPE ^.layer_0111.shape.size.j = ^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i
0.233	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i + min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.229	OUT SPE ^.layer_011.pos.i = bottom(^.layer_01111) - ^.layer_01111.pos.i - ^.layer_0111.pos.i
0.228	IN  SPE ^.layer_01111.shape.color = cyan
0.227	IN  SPE ^.layer_011.shape.mask = Full
0.127	
0.127	IN  GEN ^.layer_01111.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_011.shape.size.j + ^.layer_01111.pos.j - ^.layer_0111.pos.j,^.size.j - ^.layer_011.shape.size.j) and color majorityColor(^.grid) and layers
  _0: a rectangle with size (^.layer_0111.shape.size.j,?) and color cyan and mask ? at ('0,?)
  _01: a rectangle with size (^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_0111.shape.size.j) and color cyan and mask ^.layer_01.shape.mask at (^.layer_0.pos.i + min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),'0)
  _011: a rectangle with size (?,3) and color cyan and mask ? at (bottom(^.layer_01111) - ^.layer_01111.pos.i - ^.layer_0111.pos.i,?)
  _0111: a rectangle with size (^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i) and color cyan and mask ^.layer_01.shape.mask at (?,right(^.layer_01111) - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 143.2 + 15181.9 = 15325.1
DL output with Mo: L = 622.0 + 2140.5 = 2762.5
DL input+output M: L = 765.2 + 17322.4 = 18087.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_011.shape.size.j + ^.layer_01111.pos.j - ^.layer_0111.pos.j,^.size.j - ^.layer_011.shape.size.j) and color majorityColor(^.grid) and layers
  _0: a rectangle with size (^.layer_0111.shape.size.j,?) and color cyan and mask ? at ('0,?)
  _01: a rectangle with size (^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_0111.shape.size.j) and color cyan and mask ^.layer_01.shape.mask at (^.layer_0.pos.i + min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),'0)
  _011: a rectangle with size (?,3) and color cyan and mask ? at (bottom(^.layer_01111) - ^.layer_01111.pos.i - ^.layer_0111.pos.i,?)
  _0111: a rectangle with size (^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_01.pos.i) and color cyan and mask ^.layer_01.shape.mask at (?,right(^.layer_01111) - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 31.7 = 171.6
DL output with Mo: L = 622.0 + 2140.5 = 2762.5
DL input+output M: L = 761.9 + 2172.2 = 2934.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5833af48.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5833af48.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5833af48.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 5833af48.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 2140.5 bits (2140.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-264] Checking task 58743b76.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39287.0 = 39299.6
DL output with Mo: L = 12.6 + 39287.0 = 39299.6
DL input+output M: L = 25.2 + 78574.1 = 78599.3

# learning a model for train pairs
2.000	
1.336	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.651	OUT ADD ^.layer_0 = ^.layer_0
0.638	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.616	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.605	OUT SPE ^.size = ^.size
0.595	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.585	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.575	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.565	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.555	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
0.550	OUT SPE ^.color = ^.color
0.546	IN  SPE ^.color = cyan
0.504	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.473	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.452	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.431	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.190	
0.190	IN  DEL ^.layer_01111
0.189	IN  DEL ^.layer_0111
0.189	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.5 + 9442.3 = 9587.8
DL output with Mo: L = 144.0 + 7194.6 = 7338.6
DL input+output M: L = 289.5 + 16636.9 = 16926.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 70.9 + 0.0 = 70.9
DL output with Mo: L = 144.0 + 7194.6 = 7338.6
DL input+output M: L = 214.8 + 7194.6 = 7409.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 58743b76.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 58743b76.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 58743b76.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.9 sec (58.9 sec/task)
bits-train-error = 7194.6 bits (7194.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-263] Checking task 58e15b12.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14346.8 = 14359.4
DL output with Mo: L = 12.6 + 89042.6 = 89055.2
DL input+output M: L = 25.2 + 103389.4 = 103414.7

# learning a model for train pairs
2.000	
1.763	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.531	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.962	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.861	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.720	OUT ADD ^.layer_010 = ^.layer_01
0.670	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.626	OUT ADD ^.layer_0110 = ^.layer_01.shape at (?,?)
0.595	OUT ADD ^.layer_0101 = ^.layer_01.shape at (?,?)
0.564	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.556	OUT SPE ^.size = ^.size
0.549	IN  SPE ^.layer_0.shape.mask = Full
0.542	IN  SPE ^.layer_01.shape.mask = Full
0.536	IN  SPE ^.layer_011.shape.mask = Full
0.529	IN  SPE ^.layer_0111.shape.mask = Full
0.236	
0.235	IN  DEL ^.layer_0111
0.232	IN  DEL ^.layer_011
0.232	IN  DEL ^.layer_0
0.232	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _0101: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_01.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 118.1 + 4227.7 = 4345.9
DL output with Mo: L = 183.1 + 19944.9 = 20127.9
DL input+output M: L = 301.2 + 24172.6 = 24473.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _0101: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_01.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 40.0 = 78.8
DL output with Mo: L = 183.1 + 19944.9 = 20127.9
DL input+output M: L = 221.9 + 19984.9 = 20206.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 58e15b12.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 58e15b12.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 58e15b12.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 58e15b12.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 19944.9 bits (19944.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-262] Checking task 59341089.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7483.8 = 7496.4
DL output with Mo: L = 12.6 + 28522.7 = 28535.3
DL input+output M: L = 25.2 + 36006.5 = 36031.7

# learning a model for train pairs
2.000	
1.517	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.143	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.007	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	IN  SPE ^.layer_01.shape.mask = Full
0.976	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.790	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.762	OUT SPE ^.layer_01.shape = unfoldSym( [ id flipWidth ], ^.layer_01.shape)
0.735	OUT SPE ^.layer_011.shape = unfoldSym( [ id flipWidth ], ^.layer_01.shape)
0.722	OUT SPE ^.color = ^.color
0.713	OUT SPE ^.size.i = ^.size.i
0.705	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.699	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.j
0.694	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.689	OUT SPE ^.layer_011.pos.i = ^.layer_01.pos.i
0.225	
0.225	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color ^.color and layers
  _0: a rectangle with size (^.layer_01.shape.size.j,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: unfoldSym( [ id flipWidth ], ^.layer_01.shape) at (^.layer_01.pos.i,?)
  _011: unfoldSym( [ id flipWidth ], ^.layer_01.shape) at (^.layer_01.pos.i,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.2 + 3474.6 = 3539.8
DL output with Mo: L = 145.5 + 6031.6 = 6177.1
DL input+output M: L = 210.7 + 9506.2 = 9717.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color ^.color and layers
  _0: a rectangle with size (^.layer_01.shape.size.j,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: unfoldSym( [ id flipWidth ], ^.layer_01.shape) at (^.layer_01.pos.i,?)
  _011: unfoldSym( [ id flipWidth ], ^.layer_01.shape) at (^.layer_01.pos.i,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 145.5 + 6031.6 = 6177.1
DL input+output M: L = 209.7 + 6031.6 = 6241.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 59341089.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 59341089.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 59341089.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 59341089.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 59341089.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.1 sec (55.1 sec/task)
bits-train-error = 6031.6 bits (6031.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-261] Checking task 5a5a2103.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 77817.4 = 77830.0
DL output with Mo: L = 12.6 + 126574.6 = 126587.2
DL input+output M: L = 25.2 + 204391.9 = 204417.2

# learning a model for train pairs
2.000	
1.292	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.811	OUT ADD ^.layer_0 = ^.layer_0
0.755	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.700	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.645	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.606	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.543	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.506	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.502	OUT SPE ^.size = ^.size
0.501	OUT SPE ^.layer_00.pos = projI(^.layer_01.pos)
0.491	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.488	OUT ADD ^.layer_0110 = a point with color ? at (?,?)
0.354	
0.343	IN  DEL ^.layer_011111
0.342	IN  DEL ^.layer_01111
0.342	IN  DEL ^.layer_0111
0.342	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at projI(^.layer_01.pos)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 10456.7 = 10620.3
DL output with Mo: L = 145.9 + 44347.5 = 44493.4
DL input+output M: L = 309.4 + 54804.2 = 55113.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at projI(^.layer_01.pos)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 145.9 + 43004.5 = 43150.4
DL input+output M: L = 210.1 + 43004.5 = 43214.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5a5a2103.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5a5a2103.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 5a5a2103.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 43004.5 bits (43004.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-260] Checking task 5af49b42.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13482.3 = 13494.9
DL output with Mo: L = 12.6 + 27990.8 = 28003.4
DL input+output M: L = 25.2 + 41473.1 = 41498.3

# learning a model for train pairs
2.000	
1.956	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.911	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.867	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.822	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.777	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.732	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.687	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
1.642	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
1.601	OUT ADD ^.layer_0 = ^.layer_0
1.560	OUT ADD ^.layer_01 = ^.layer_01
1.520	OUT ADD ^.layer_011 = ^.layer_011
1.479	OUT ADD ^.layer_0111 = ^.layer_0111
1.438	OUT ADD ^.layer_01111 = ^.layer_01111
1.397	OUT ADD ^.layer_011111 = ^.layer_011111
1.357	OUT ADD ^.layer_0111111 = ^.layer_0111111
1.316	OUT ADD ^.layer_01111111 = ^.layer_01111111
1.293	OUT SPE ^.size = ^.size
1.280	IN  SPE ^.layer_01111111.shape.color = yellow
1.268	IN  SPE ^.layer_011111.shape.color = blue
1.263	IN  SPE ^.color = black
1.260	OUT SPE ^.color = black
0.659	
0.659	IN  GEN ^.layer_01111111.shape.color = ?
0.659	IN  GEN ^.layer_011111.shape.color = ?
0.659	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
  _01111111: ^.layer_01111111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color blue at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color yellow at (?,?)

DL input  with Mi: L = 145.2 + 8106.5 = 8251.7
DL output with Mo: L = 45.8 + 18113.3 = 18159.1
DL input+output M: L = 190.9 + 26219.8 = 26410.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
  _01111111: ^.layer_01111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.4 + 0.0 = 138.4
DL output with Mo: L = 45.8 + 18113.3 = 18159.1
DL input+output M: L = 184.2 + 18113.3 = 18297.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5af49b42.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5af49b42.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5af49b42.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 5af49b42.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.3 sec (4.3 sec/task)
bits-train-error = 18113.3 bits (18113.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-259] Checking task 5b526a93.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35008.3 = 35020.9
DL output with Mo: L = 12.6 + 66205.5 = 66218.1
DL input+output M: L = 25.2 + 101213.8 = 101239.0

# learning a model for train pairs
2.000	
1.833	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.666	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.533	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.438	OUT ADD ^.layer_0 = ^.layer_0
1.344	OUT ADD ^.layer_01 = ^.layer_01
1.250	OUT ADD ^.layer_011 = ^.layer_011
1.162	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.997	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.914	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.864	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	OUT ADD ^.layer_00 = ^.layer_00
0.791	OUT SPE ^.layer_011111.shape = coloring(^.layer_011.shape, cyan)
0.784	OUT SPE ^.layer_01111.shape = coloring(^.layer_011.shape, cyan)
0.776	OUT SPE ^.layer_0111111.shape = coloring(^.layer_011.shape, cyan)
0.769	OUT SPE ^.size = ^.size
0.766	IN  SPE ^.layer_00.shape.color = blue
0.763	IN  SPE ^.layer_0.shape.color = blue
0.760	IN  SPE ^.layer_01.shape.color = blue
0.757	IN  SPE ^.layer_01.shape.mask = Border
0.702	IN  SPE ^.layer_011.shape.mask = Border
0.699	IN  SPE ^.layer_011.shape.color = blue
0.697	OUT SPE ^.layer_0111.shape.size.j = 3
0.695	OUT SPE ^.layer_0111.shape.size.i = max(^.layer_0.shape.size.i, ^.layer_011.shape.size.i)
0.693	IN  SPE ^.layer_0.shape.mask = Full
0.692	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.j + 1
0.690	OUT SPE ^.layer_01111.pos.i = ^.layer_01.pos.j + 1
0.688	OUT SPE ^.layer_0111.shape.color = cyan
0.687	OUT SPE ^.layer_0111.pos.j = center(^.layer_0) + 3
0.685	IN  SPE ^.color = black
0.685	OUT SPE ^.color = black
0.684	OUT SPE ^.layer_011111.pos.j = average(^.layer_0.pos.i, ^.layer_01.pos.i) + average(^.layer_0.shape.size.i, ^.layer_011.shape.size.i)
0.280	
0.280	IN  GEN ^.layer_011.shape.color = ?
0.280	IN  GEN ^.layer_01.shape.color = ?
0.280	IN  GEN ^.layer_0.shape.color = ?
0.280	IN  GEN ^.layer_00.shape.color = ?
0.279	IN  GEN ^.layer_0.shape.mask = ?
0.279	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (max(^.layer_0.shape.size.i, ^.layer_011.shape.size.i),3) and color cyan and mask ? at (^.layer_01.pos.j + 1,center(^.layer_0) + 3)
  _01111: coloring(^.layer_011.shape, cyan) at (^.layer_01.pos.j + 1,?)
  _011111: coloring(^.layer_011.shape, cyan) at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i) + average(^.layer_0.shape.size.i, ^.layer_011.shape.size.i))
  _0111111: coloring(^.layer_011.shape, cyan) at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Border at (?,?)

DL input  with Mi: L = 135.2 + 14154.9 = 14290.1
DL output with Mo: L = 346.7 + 17931.4 = 18278.1
DL input+output M: L = 481.9 + 32086.4 = 32568.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (max(^.layer_0.shape.size.i, ^.layer_011.shape.size.i),3) and color cyan and mask ? at (^.layer_01.pos.j + 1,center(^.layer_0) + 3)
  _01111: coloring(^.layer_011.shape, cyan) at (^.layer_01.pos.j + 1,?)
  _011111: coloring(^.layer_011.shape, cyan) at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i) + average(^.layer_0.shape.size.i, ^.layer_011.shape.size.i))
  _0111111: coloring(^.layer_011.shape, cyan) at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 120.8 + 0.0 = 120.8
DL output with Mo: L = 346.7 + 17931.4 = 18278.1
DL input+output M: L = 467.5 + 17931.4 = 18398.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5b526a93.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5b526a93.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST 5b526a93.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 59.1 sec (59.1 sec/task)
bits-train-error = 17931.4 bits (17931.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-258] Checking task 5b692c0f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 55130.4 = 55143.0
DL output with Mo: L = 12.6 + 60931.5 = 60944.1
DL input+output M: L = 25.2 + 116061.9 = 116087.1

# learning a model for train pairs
2.000	
1.610	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.011	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.639	OUT ADD ^.layer_00 = ^.layer_0
0.487	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.394	OUT ADD ^.layer_010 = ^.layer_011
0.331	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.296	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.278	OUT SPE ^.layer_0.shape = applySym(flipWidth, ^.layer_0.shape)
0.262	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.232	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.224	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.217	OUT SPE ^.size = ^.size
0.212	OUT SPE ^.layer_011.shape.mask = applySym(flipHeight, ^.layer_011.shape.mask)
0.209	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.207	OUT SPE ^.layer_011.shape.size.j = ^.layer_011.shape.size.j
0.205	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.203	IN  SPE ^.layer_0111111.shape.color = yellow
0.201	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.199	OUT SPE ^.layer_01.shape.color = yellow
0.197	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j - 3
0.196	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.j - 1
0.194	OUT SPE ^.layer_01.shape.size.j = ^.layer_0111.shape.size.j
0.192	OUT SPE ^.layer_0.pos.j = ^.layer_011111.pos.i + 1
0.191	OUT SPE ^.layer_011.pos.i = ^.layer_01111.pos.j + 3
0.189	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.j - 1
0.188	IN  SPE ^.layer_01111.shape.mask = Full
0.187	IN  SPE ^.layer_011111.shape.mask = Full
0.186	IN  SPE ^.layer_01111111.shape.mask = Full
0.185	OUT SPE ^.layer_01.shape.size.i = 1
0.184	OUT SPE ^.layer_01.shape.mask = Full
0.182	OUT SPE ^.layer_011.pos.j = center(^.layer_011111) + ^.layer_011.pos.j - ^.layer_01.pos.j
0.182	IN  SPE ^.color = black
0.181	OUT SPE ^.color = black
0.061	
0.061	IN  DEL ^.layer_01111111
0.060	IN  DEL ^.layer_0111111
0.060	IN  GEN ^.layer_011111.shape.mask = ?
0.060	IN  GEN ^.layer_01111.shape.mask = ?
0.060	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: applySym(flipWidth, ^.layer_0.shape) at (^.layer_0.pos.i,^.layer_011111.pos.i + 1)
  _010: ^.layer_011
  _01: a rectangle with size (1,^.layer_0111.shape.size.j) and color yellow and mask Full at (^.layer_0.pos.j - 1,^.layer_0.pos.j - 3)
  _011: a rectangle with size (^.layer_01.shape.size.j - 1,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask applySym(flipHeight, ^.layer_011.shape.mask) at (^.layer_01111.pos.j + 3,center(^.layer_011111) + ^.layer_011.pos.j - ^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a point with color yellow at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 209.9 + 6602.2 = 6812.0
DL output with Mo: L = 310.5 + 3173.5 = 3484.0
DL input+output M: L = 520.3 + 9775.7 = 10296.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: applySym(flipWidth, ^.layer_0.shape) at (^.layer_0.pos.i,^.layer_011111.pos.i + 1)
  _010: ^.layer_011
  _01: a rectangle with size (1,^.layer_0111.shape.size.j) and color yellow and mask Full at (^.layer_0.pos.j - 1,^.layer_0.pos.j - 3)
  _011: a rectangle with size (^.layer_01.shape.size.j - 1,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask applySym(flipHeight, ^.layer_011.shape.mask) at (^.layer_01111.pos.j + 3,center(^.layer_011111) + ^.layer_011.pos.j - ^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 0.0 = 163.5
DL output with Mo: L = 310.5 + 3173.5 = 3484.0
DL input+output M: L = 474.0 + 3173.5 = 3647.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5b692c0f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5b692c0f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 5b692c0f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.9 sec (58.9 sec/task)
bits-train-error = 3173.5 bits (3173.5 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-257] Checking task 5b6cbef5.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12040.2 = 12052.8
DL output with Mo: L = 12.6 + 140984.5 = 140997.1
DL input+output M: L = 25.2 + 153024.8 = 153050.0

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = compose(majorityColor(^.grid), ^.grid, ^.grid)
0.301	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.003	
0.001	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 3590.2 = 3629.0
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 64.5 + 3590.2 = 3654.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 38.3 + 0.0 = 38.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5b6cbef5.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5b6cbef5.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5b6cbef5.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5b6cbef5.json/4: 1 1st (SUCCESS)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 5b6cbef5.json/5: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 5b6cbef5.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-256] Checking task 5d2a5c43.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 51863.2 = 51875.8
DL output with Mo: L = 12.6 + 9565.2 = 9577.8
DL input+output M: L = 25.2 + 61428.3 = 61453.6

# learning a model for train pairs
2.000	
1.382	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.829	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.663	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.583	OUT SPE ^.size = ^.layer_011.shape.size + (0, 3)
0.503	OUT SPE ^.layer_0.shape.size = ^.layer_011.shape.size + (0, 3)
0.449	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.401	OUT SPE ^.layer_0.pos = '(0, 0)
0.372	OUT SPE ^.layer_0.shape.color = cyan
0.359	OUT SPE ^.color = black
0.353	IN  SPE ^.layer_011.shape.color = blue
0.350	IN  SPE ^.layer_011.shape.mask = Full
0.134	
0.134	IN  DEL ^.layer_0111
0.133	IN  DEL ^.layer_01
0.133	IN  DEL ^.layer_0
0.133	IN  GEN ^.layer_011.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (0, 3) and color black and layers
  _0: a rectangle with size ^.layer_011.shape.size + (0, 3) and color cyan and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 118.5 + 11193.5 = 11312.0
DL output with Mo: L = 89.1 + 1174.8 = 1263.9
DL input+output M: L = 207.5 + 12368.4 = 12575.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (0, 3) and color black and layers
  _0: a rectangle with size ^.layer_011.shape.size + (0, 3) and color cyan and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 0.0 = 42.2
DL output with Mo: L = 89.1 + 1174.8 = 1263.9
DL input+output M: L = 131.2 + 1174.8 = 1306.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5d2a5c43.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5d2a5c43.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5d2a5c43.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5d2a5c43.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5d2a5c43.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 5d2a5c43.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 5d2a5c43.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.2 sec (4.2 sec/task)
bits-train-error = 1174.8 bits (1174.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-255] Checking task 5ffb2104.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13219.5 = 13232.1
DL output with Mo: L = 12.6 + 13219.5 = 13232.1
DL input+output M: L = 25.2 + 26439.0 = 26464.2

# learning a model for train pairs
2.000	
1.719	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.448	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.100	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.973	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.847	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.749	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.697	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.656	OUT ADD ^.layer_01111 = ^.layer_0111.shape at (?,?)
0.615	OUT SPE ^.size = ^.size
0.591	OUT SPE ^.layer_011.shape.size = '(2, 2)
0.579	IN  SPE ^.layer_011.shape.color = green
0.567	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.555	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.544	OUT SPE ^.layer_0111.pos.i = ^.layer_011.pos.i
0.533	OUT SPE ^.layer_01111.pos.i = ^.layer_0111.pos.i
0.523	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0) - 1
0.515	IN  SPE ^.layer_0.shape.color = red
0.504	OUT SPE ^.layer_011.shape.mask = applySym(flipWidth, ^.layer_011.shape.mask)
0.495	OUT SPE ^.layer_0.shape.size.i = area(^.layer_0.shape) - 2
0.487	IN  SPE ^.layer_01.shape.mask = Full
0.475	IN  SPE ^.layer_01.shape.color = pink
0.464	OUT SPE ^.layer_0111.pos.j = right(^.layer_0111) + 3
0.457	OUT SPE ^.layer_0.shape.size.j = 1
0.450	OUT SPE ^.layer_0.shape.mask = Full
0.440	OUT SPE ^.layer_01.pos.j = right(^.layer_0111) + 2
0.431	OUT SPE ^.layer_01111.pos.j = right(^.layer_0111) + area(^.layer_011.shape)
0.421	OUT SPE ^.layer_011.pos.j = ^.layer_0111.pos.j + ^.layer_0.shape.size.j
0.414	IN  SPE ^.layer_0111.shape.mask = Full
0.077	
0.076	IN  GEN ^.layer_011.shape.color = ?
0.076	IN  GEN ^.layer_0.shape.color = ?
0.076	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape) - 2,1) and color ? and mask Full at (?,?)
  _01: ^.layer_01.shape at (^.layer_01.pos.i,right(^.layer_0111) + 2)
  _011: a rectangle with size '(2, 2) and color ^.layer_0.shape.color and mask applySym(flipWidth, ^.layer_011.shape.mask) at (bottom(^.layer_0) - 1,^.layer_0111.pos.j + ^.layer_0.shape.size.j)
  _0111: ^.layer_011.shape at (^.layer_011.pos.i,right(^.layer_0111) + 3)
  _01111: ^.layer_0111.shape at (^.layer_0111.pos.i,right(^.layer_0111) + area(^.layer_011.shape))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 126.1 + 4465.4 = 4591.5
DL output with Mo: L = 330.8 + 556.0 = 886.8
DL input+output M: L = 456.9 + 5021.4 = 5478.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape) - 2,1) and color ? and mask Full at (?,?)
  _01: ^.layer_01.shape at (^.layer_01.pos.i,right(^.layer_0111) + 2)
  _011: a rectangle with size '(2, 2) and color ^.layer_0.shape.color and mask applySym(flipWidth, ^.layer_011.shape.mask) at (bottom(^.layer_0) - 1,^.layer_0111.pos.j + ^.layer_0.shape.size.j)
  _0111: ^.layer_011.shape at (^.layer_011.pos.i,right(^.layer_0111) + 3)
  _01111: ^.layer_0111.shape at (^.layer_0111.pos.i,right(^.layer_0111) + area(^.layer_011.shape))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 118.5 + 0.0 = 118.5
DL output with Mo: L = 330.8 + 556.0 = 886.8
DL input+output M: L = 449.2 + 556.0 = 1005.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5ffb2104.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 5ffb2104.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 5ffb2104.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 5ffb2104.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.6 sec (56.6 sec/task)
bits-train-error = 556.0 bits (556.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-254] Checking task 604001fa.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 34827.7 = 34840.3
DL output with Mo: L = 12.6 + 25753.7 = 25766.3
DL input+output M: L = 25.2 + 60581.4 = 60606.6

# learning a model for train pairs
2.000	
1.580	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.787	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.674	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	OUT SPE ^.size = ^.size
0.522	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.502	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.484	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.471	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.463	OUT SPE ^.layer_01.pos.i = max(^.layer_01.pos.i, ^.layer_011.pos.i)
0.455	OUT SPE ^.layer_011.shape.size.j = ^.layer_0111.shape.size.j + 2
0.449	IN  SPE ^.layer_0.shape.color = blue
0.443	OUT SPE ^.layer_01.pos.j = max(^.layer_01.pos.i, ^.layer_01111.pos.i) - 3
0.439	OUT SPE ^.color = black
0.436	IN  SPE ^.color = black
0.168	
0.167	IN  GEN ^.layer_0.shape.color = ?
0.167	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (max(^.layer_01.pos.i, ^.layer_011.pos.i),max(^.layer_01.pos.i, ^.layer_01111.pos.i) - 3)
  _011: a rectangle with size (?,^.layer_0111.shape.size.j + 2) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.3 + 9407.7 = 9550.0
DL output with Mo: L = 181.4 + 3993.1 = 4174.5
DL input+output M: L = 323.7 + 13400.8 = 13724.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (max(^.layer_01.pos.i, ^.layer_011.pos.i),max(^.layer_01.pos.i, ^.layer_01111.pos.i) - 3)
  _011: a rectangle with size (?,^.layer_0111.shape.size.j + 2) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 51.7 = 190.6
DL output with Mo: L = 181.4 + 3993.1 = 4174.5
DL input+output M: L = 320.3 + 4044.8 = 4365.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 604001fa.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 604001fa.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 604001fa.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 604001fa.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 604001fa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.9 sec (18.9 sec/task)
bits-train-error = 3993.1 bits (3993.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-253] Checking task 60a26a3e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20782.0 = 20794.7
DL output with Mo: L = 12.6 + 29949.6 = 29962.3
DL input+output M: L = 25.2 + 50731.7 = 50756.9

# learning a model for train pairs
2.000	
1.836	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.672	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.505	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.353	OUT ADD ^.layer_0 = ^.layer_0
1.200	OUT ADD ^.layer_01 = ^.layer_01
1.047	OUT ADD ^.layer_011 = ^.layer_011
0.928	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.686	OUT ADD ^.layer_01110 = ^.layer_0111
0.596	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.491	OUT ADD ^.layer_011111 = ^.layer_01111
0.467	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.446	OUT SPE ^.size = ^.size
0.435	IN  SPE ^.layer_0.shape.mask = Odd Checkboard
0.424	IN  SPE ^.layer_01.shape.mask = Odd Checkboard
0.414	OUT SPE ^.layer_0111.pos = ^.layer_0.pos + (1, 3)
0.406	IN  SPE ^.layer_0.shape.color = red
0.398	IN  SPE ^.layer_01.shape.color = red
0.390	IN  SPE ^.layer_01111.shape.color = red
0.382	IN  SPE ^.layer_011.shape.color = red
0.374	IN  SPE ^.layer_0111.shape.color = red
0.369	OUT SPE ^.layer_0111.shape.color = blue
0.363	OUT SPE ^.layer_01111.shape.color = blue
0.357	OUT SPE ^.layer_01111.pos.j = ^.layer_0111.pos.j + 1
0.352	OUT SPE ^.layer_0111111.pos.j = right(^.layer_0111) + 1
0.347	OUT SPE ^.layer_01111.pos.i = bottom(^.layer_0) + 1
0.343	IN  SPE ^.color = black
0.340	OUT SPE ^.layer_0111.shape.size.i = 1
0.336	OUT SPE ^.layer_0111.shape.mask = Full
0.333	OUT SPE ^.layer_01111.shape.size.j = 1
0.330	OUT SPE ^.layer_01111.shape.mask = Full
0.327	OUT SPE ^.layer_0111111.shape.size.i = 1
0.322	OUT SPE ^.layer_0111111.pos.i = min(^.layer_0.pos.j, ^.layer_01111.pos.j) * '3
0.319	OUT SPE ^.layer_0111111.shape.mask = Full
0.317	OUT SPE ^.color = black
0.067	
0.066	IN  GEN ^.layer_01.shape.mask = ?
0.066	IN  GEN ^.layer_01111.shape.color = ?
0.066	IN  GEN ^.layer_0111.shape.color = ?
0.066	IN  GEN ^.layer_011.shape.color = ?
0.066	IN  GEN ^.layer_01.shape.color = ?
0.066	IN  GEN ^.layer_0.shape.color = ?
0.066	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _01110: ^.layer_0111
  _0111: a rectangle with size (1,?) and color blue and mask Full at ^.layer_0.pos + (1, 3)
  _01111: a rectangle with size (?,1) and color blue and mask Full at (bottom(^.layer_0) + 1,^.layer_0111.pos.j + 1)
  _011111: ^.layer_01111
  _0111111: a rectangle with size (1,?) and color ? and mask Full at (min(^.layer_0.pos.j, ^.layer_01111.pos.j) * '3,right(^.layer_0111) + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Odd Checkboard at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 166.3 + 5217.9 = 5384.2
DL output with Mo: L = 258.8 + 1472.3 = 1731.2
DL input+output M: L = 425.1 + 6690.3 = 7115.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _01110: ^.layer_0111
  _0111: a rectangle with size (1,?) and color blue and mask Full at ^.layer_0.pos + (1, 3)
  _01111: a rectangle with size (?,1) and color blue and mask Full at (bottom(^.layer_0) + 1,^.layer_0111.pos.j + 1)
  _011111: ^.layer_01111
  _0111111: a rectangle with size (1,?) and color ? and mask Full at (min(^.layer_0.pos.j, ^.layer_01111.pos.j) * '3,right(^.layer_0111) + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 144.2 + 20.0 = 164.2
DL output with Mo: L = 258.8 + 1472.3 = 1731.2
DL input+output M: L = 403.0 + 1492.3 = 1895.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 60a26a3e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 60a26a3e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 60a26a3e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 60a26a3e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.5 sec (38.5 sec/task)
bits-train-error = 1472.3 bits (1472.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-252] Checking task 60c09cac.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3155.5 = 3168.1
DL output with Mo: L = 12.6 + 12160.9 = 12173.5
DL input+output M: L = 25.2 + 15316.4 = 15341.6

# learning a model for train pairs
2.000	
1.002	OUT SPE ^ = ^.grid * '2
0.644	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.488	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.473	IN  SPE ^.color = black
0.022	
0.014	IN  DEL ^.layer_01
0.006	IN  DEL ^.layer_0
0.006	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
^.grid * '2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 1427.2 = 1491.5
DL output with Mo: L = 22.4 + 0.0 = 22.4
DL input+output M: L = 86.8 + 1427.2 = 1514.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
^.grid * '2
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 22.4 + 0.0 = 22.4
DL input+output M: L = 35.1 + 0.0 = 35.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 60c09cac.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 60c09cac.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 60c09cac.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-251] Checking task 626c0bcc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17846.2 = 17858.8
DL output with Mo: L = 12.6 + 17846.2 = 17858.8
DL input+output M: L = 25.2 + 35692.3 = 35717.5

# learning a model for train pairs
2.000	
1.144	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.912	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.766	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.456	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	OUT SPE ^.size = ^.size
0.408	OUT SPE ^.layer_0.shape.size = '(2, 2)
0.391	OUT SPE ^.layer_01.shape.size = '(2, 2)
0.373	OUT SPE ^.layer_011.shape.size = '(2, 2)
0.364	IN  SPE ^.layer_0.shape.color = cyan
0.355	OUT SPE ^.layer_0.shape.color = blue
0.346	OUT SPE ^.layer_0111.shape.size.j = 2
0.337	OUT SPE ^.layer_01111.shape.size.i = 2
0.329	OUT SPE ^.layer_011.pos.j = '0
0.320	OUT SPE ^.layer_01111.shape.color = yellow
0.312	OUT SPE ^.layer_01.pos.j = bottom(^.layer_0) - 1
0.305	OUT SPE ^.layer_01111.pos.j = right(^.layer_0) - 1
0.299	OUT SPE ^.layer_0.shape.mask = Full
0.295	IN  SPE ^.color = black
0.291	OUT SPE ^.color = black
0.163	
0.162	IN  GEN ^.layer_0.shape.color = ?
0.162	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size '(2, 2) and color blue and mask Full at (?,?)
  _01: a rectangle with size '(2, 2) and color ? and mask ? at (?,bottom(^.layer_0) - 1)
  _011: a rectangle with size '(2, 2) and color ? and mask ? at (?,'0)
  _0111: a rectangle with size (?,2) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (2,?) and color yellow and mask ? at (?,right(^.layer_0) - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2294.0 = 2336.3
DL output with Mo: L = 219.0 + 2642.1 = 2861.1
DL input+output M: L = 261.3 + 4936.1 = 5197.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size '(2, 2) and color blue and mask Full at (?,?)
  _01: a rectangle with size '(2, 2) and color ? and mask ? at (?,bottom(^.layer_0) - 1)
  _011: a rectangle with size '(2, 2) and color ? and mask ? at (?,'0)
  _0111: a rectangle with size (?,2) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (2,?) and color yellow and mask ? at (?,right(^.layer_0) - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 219.0 + 2642.1 = 2861.1
DL input+output M: L = 257.8 + 2642.1 = 2899.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 626c0bcc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 626c0bcc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 626c0bcc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 626c0bcc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.8 sec (9.8 sec/task)
bits-train-error = 2642.1 bits (2642.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-250] Checking task 62ab2642.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41432.0 = 41444.6
DL output with Mo: L = 12.6 + 63164.6 = 63177.3
DL input+output M: L = 25.2 + 104596.7 = 104621.9

# learning a model for train pairs
2.000	
1.115	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.494	OUT ADD ^.layer_0 = ^.layer_0
0.194	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.165	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.155	OUT SPE ^.size = ^.size
0.151	IN  SPE ^.layer_0.shape.color = grey
0.149	OUT SPE ^.layer_01.shape.color = orange
0.146	OUT SPE ^.layer_011.shape.color = cyan
0.144	IN  SPE ^.color = black
0.143	OUT SPE ^.layer_01.shape.mask = Full
0.142	OUT SPE ^.color = black
0.034	
0.034	IN  GEN ^.layer_0.shape.color = ?
0.034	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color orange and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 4473.0 = 4515.3
DL output with Mo: L = 73.3 + 1994.1 = 2067.4
DL input+output M: L = 115.6 + 6467.1 = 6582.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color orange and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 73.3 + 1994.1 = 2067.4
DL input+output M: L = 112.2 + 1994.1 = 2106.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 62ab2642.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 62ab2642.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 62ab2642.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 62ab2642.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 1994.1 bits (1994.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-249] Checking task 62b74c02.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12642.7 = 12655.3
DL output with Mo: L = 12.6 + 19700.8 = 19713.4
DL input+output M: L = 25.2 + 32343.5 = 32368.7

# learning a model for train pairs
2.000	
1.592	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.352	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.065	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.855	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.762	OUT ADD ^.layer_00 = ^.layer_00
0.735	IN  ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.660	OUT ADD ^.layer_000 = ^.layer_000
0.578	OUT ADD ^.layer_0001 = ^.layer_000.shape at (?,?)
0.551	OUT SPE ^.size = ^.size
0.543	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j
0.535	OUT SPE ^.layer_0.shape.color = ^.layer_00.shape.color
0.527	IN  SPE ^.layer_0.shape.mask = Full
0.516	OUT SPE ^.color = ^.layer_01.shape.color
0.508	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.500	IN  SPE ^.layer_01.shape.mask = Full
0.493	OUT SPE ^.layer_01.pos = ^.layer_0.pos
0.487	OUT SPE ^.layer_0.pos.i = '0
0.481	IN  SPE ^.color = black
0.476	OUT SPE ^.layer_0001.pos.i = ^.layer_000.pos.i
0.470	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.i
0.465	OUT SPE ^.layer_0.shape.size.i = 1
0.460	OUT SPE ^.layer_0.shape.mask = Full
0.095	
0.094	IN  GEN ^.layer_01.shape.mask = ?
0.094	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_01.shape.color and layers
  _000: ^.layer_000
  _0001: ^.layer_000.shape at (^.layer_000.pos.i,?)
  _00: ^.layer_00
  _0: a rectangle with size (1,?) and color ^.layer_00.shape.color and mask Full at ('0,?)
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 107.0 + 4649.5 = 4756.5
DL output with Mo: L = 155.0 + 1510.2 = 1665.2
DL input+output M: L = 261.9 + 6159.7 = 6421.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_01.shape.color and layers
  _000: ^.layer_000
  _0001: ^.layer_000.shape at (^.layer_000.pos.i,?)
  _00: ^.layer_00
  _0: a rectangle with size (1,?) and color ^.layer_00.shape.color and mask Full at ('0,?)
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 105.8 + 20.0 = 125.8
DL output with Mo: L = 155.0 + 1510.2 = 1665.2
DL input+output M: L = 260.8 + 1530.2 = 1791.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 62b74c02.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 62b74c02.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 62b74c02.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 62b74c02.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.0 sec (56.0 sec/task)
bits-train-error = 1510.2 bits (1510.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-248] Checking task 639f5a19.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 159203.1 = 159215.7
DL output with Mo: L = 12.6 + 159203.1 = 159215.7
DL input+output M: L = 25.2 + 318406.2 = 318431.4

# learning a model for train pairs
2.000	
1.408	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.014	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.781	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.662	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.493	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.328	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.264	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.250	
0.249	IN  DEL ^.layer_01
0.249	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 2243.9 = 2308.1
DL output with Mo: L = 188.1 + 39476.9 = 39665.0
DL input+output M: L = 252.4 + 41720.8 = 41973.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 188.1 + 39476.9 = 39665.0
DL input+output M: L = 200.8 + 39476.9 = 39677.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 639f5a19.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 639f5a19.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 639f5a19.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 39476.9 bits (39476.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-247] Checking task 642248e4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36019.2 = 36031.8
DL output with Mo: L = 12.6 + 44701.2 = 44713.8
DL input+output M: L = 25.2 + 80720.4 = 80745.6

# learning a model for train pairs
2.000	
1.663	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.324	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.021	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.725	OUT ADD ^.layer_01 = ^.layer_01
0.708	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.683	OUT ADD ^.layer_011 = ^.layer_011
0.666	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.649	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.632	OUT ADD ^.layer_01111 = ^.layer_011.shape at (?,?)
0.614	OUT ADD ^.layer_01110 = ^.layer_011.shape at (?,?)
0.597	OUT ADD ^.layer_01101 = ^.layer_011.shape at (?,?)
0.580	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.564	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.547	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.530	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.512	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.498	OUT SPE ^.size = ^.size
0.490	OUT SPE ^.layer_01111 = ^.layer_0111111
0.482	OUT SPE ^.layer_0111 = ^.layer_011111
0.474	OUT SPE ^.layer_0110 = ^.layer_0111
0.466	OUT SPE ^.layer_01110 = ^.layer_01111
0.458	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.450	OUT SPE ^.layer_01101 = ^.layer_01111111
0.440	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_0111)
0.436	IN  SPE ^.layer_011.shape.color = blue
0.431	IN  SPE ^.layer_0111.shape.color = blue
0.427	IN  SPE ^.layer_01111.shape.color = blue
0.422	IN  SPE ^.layer_011111.shape.color = blue
0.417	IN  SPE ^.layer_0111111.shape.color = blue
0.413	IN  SPE ^.layer_01111111.shape.color = blue
0.409	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.406	IN  SPE ^.layer_0.shape.mask = Full
0.404	IN  SPE ^.layer_01.shape.mask = Full
0.402	IN  SPE ^.color = black
0.400	OUT SPE ^.color = black
0.218	
0.218	IN  GEN ^.layer_01111111.shape.color = ?
0.218	IN  GEN ^.layer_0111111.shape.color = ?
0.217	IN  GEN ^.layer_011111.shape.color = ?
0.217	IN  GEN ^.layer_01111.shape.color = ?
0.217	IN  GEN ^.layer_0111.shape.color = ?
0.217	IN  GEN ^.layer_011.shape.color = ?
0.217	IN  GEN ^.layer_01.shape.mask = ?
0.217	IN  GEN ^.layer_0.shape.mask = ?
0.217	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_0111) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_01
  _0110: ^.layer_0111
  _01101: ^.layer_01111111
  _011: ^.layer_011
  _01110: ^.layer_01111
  _0111: ^.layer_011111
  _01111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color blue at (?,?)
  _0111: a point with color blue at (?,?)
  _01111: a point with color blue at (?,?)
  _011111: a point with color blue at (?,?)
  _0111111: a point with color blue at (?,?)
  _01111111: a point with color blue at (?,?)

DL input  with Mi: L = 179.0 + 6565.9 = 6744.9
DL output with Mo: L = 156.8 + 9355.1 = 9511.9
DL input+output M: L = 335.8 + 15921.0 = 16256.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_0111) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_01
  _0110: ^.layer_0111
  _01101: ^.layer_01111111
  _011: ^.layer_011
  _01110: ^.layer_01111
  _0111: ^.layer_011111
  _01111: ^.layer_0111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 157.0 + 0.0 = 157.0
DL output with Mo: L = 156.8 + 9355.1 = 9511.9
DL input+output M: L = 313.8 + 9355.1 = 9668.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 642248e4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 642248e4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 642248e4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 642248e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 37.5 sec (37.5 sec/task)
bits-train-error = 9355.1 bits (9355.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-246] Checking task 642d658d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 207634.5 = 207647.1
DL output with Mo: L = 12.6 + 468.3 = 480.9
DL input+output M: L = 25.2 + 208102.8 = 208128.0

# learning a model for train pairs
2.000	
1.374	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.971	OUT SPE ^.size = '(1, 1)
0.970	IN  SPE ^.color = black
0.953	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.419	OUT SPE ^.color = ^.layer_01.shape.color
0.401	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.384	IN  ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	IN  SPE ^.layer_010.shape.color = green
0.382	IN  SPE ^.layer_010.shape.mask = Border
0.382	IN  SPE ^.layer_01.shape.mask = Full
0.370	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.357	IN  ADD ^.layer_0100 = a point with color ? at (?,?)
0.353	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.348	IN  SPE ^.layer_0101.shape.mask = Odd Checkboard
0.064	
0.064	IN  DEL ^.layer_0101
0.063	IN  DEL ^.layer_010

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a point with color ? at (?,?)
  _010: a rectangle with size (?,?) and color green and mask Border at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 216.5 + 58988.5 = 59205.0
DL output with Mo: L = 30.1 + 0.0 = 30.1
DL input+output M: L = 246.6 + 58988.5 = 59235.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(1, 1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 155.4 + 0.0 = 155.4
DL output with Mo: L = 30.1 + 0.0 = 30.1
DL input+output M: L = 185.5 + 0.0 = 185.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 642d658d.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 642d658d.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 642d658d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 642d658d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.6 sec (12.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-245] Checking task 64a7c07e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11624.7 = 11637.3
DL output with Mo: L = 12.6 + 11624.7 = 11637.3
DL input+output M: L = 25.2 + 23249.3 = 23274.6

# learning a model for train pairs
2.000	
1.325	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.578	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.529	OUT SPE ^.size = ^.size
0.503	OUT SPE ^.layer_0.pos = ^.layer_0.pos + projJ(^.layer_0.shape.size)
0.489	IN  SPE ^.layer_0.shape.color = cyan
0.482	IN  SPE ^.color = black
0.476	OUT SPE ^.color = black
0.175	
0.175	IN  GEN ^.layer_0.shape.color = ?
0.175	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + projJ(^.layer_0.shape.size)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 3505.4 = 3547.7
DL output with Mo: L = 46.4 + 1946.7 = 1993.1
DL input+output M: L = 88.6 + 5452.1 = 5540.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos + projJ(^.layer_0.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 46.4 + 1946.7 = 1993.1
DL input+output M: L = 85.2 + 1946.7 = 2031.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 64a7c07e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 64a7c07e.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 64a7c07e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 64a7c07e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 1946.7 bits (1946.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-244] Checking task 66e6c45b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3198.2 = 3210.8
DL output with Mo: L = 12.6 + 3198.2 = 3210.8
DL input+output M: L = 25.2 + 6396.4 = 6421.6

# learning a model for train pairs
2.000	
1.875	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.714	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.588	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.426	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
1.298	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.164	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.035	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.901	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.809	OUT SPE ^.size = ^.size
0.756	OUT SPE ^.layer_0.pos = '(0, 0)
0.704	OUT SPE ^.layer_01.pos = '(0, 3)
0.652	OUT SPE ^.layer_011.pos = '(3, 0)
0.601	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos + (1, 1)
0.565	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.529	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.514	IN  SPE ^.color = black
0.499	OUT SPE ^.color = black
0.051	
0.051	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
  _01: ^.layer_01.shape at '(0, 3)
  _011: ^.layer_011.shape at '(3, 0)
  _0111: ^.layer_0111.shape at ^.layer_0111.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.1 + 1435.9 = 1513.0
DL output with Mo: L = 87.8 + 0.0 = 87.8
DL input+output M: L = 164.9 + 1435.9 = 1600.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at '(0, 0)
  _01: ^.layer_01.shape at '(0, 3)
  _011: ^.layer_011.shape at '(3, 0)
  _0111: ^.layer_0111.shape at ^.layer_0111.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 0.0 = 77.0
DL output with Mo: L = 87.8 + 0.0 = 87.8
DL input+output M: L = 164.8 + 0.0 = 164.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 66e6c45b.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 66e6c45b.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 66e6c45b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 4.0 sec (4.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-243] Checking task 66f2d22f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39011.2 = 39023.8
DL output with Mo: L = 12.6 + 11240.2 = 11252.8
DL input+output M: L = 25.2 + 50251.4 = 50276.6

# learning a model for train pairs
2.000	
1.526	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.150	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.656	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.626	OUT SPE ^.size.j = ^.size.i + 3
0.600	OUT SPE ^.size.i = ^.size.i
0.580	OUT SPE ^.layer_0.shape.color = grey
0.560	OUT SPE ^.layer_01.shape.color = grey
0.542	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.j - 3
0.526	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.j
0.513	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i / '2
0.504	OUT SPE ^.color = black
0.501	OUT SPE ^.layer_0.shape.size.j = average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_011.shape.size.i
0.491	OUT SPE ^.layer_01.shape.size.j = ^.layer_011.shape.size.j - ^.layer_011.pos.i - ^.layer_01.pos.i
0.489	IN  SPE ^.color = black
0.233	
0.233	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i + 3) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.j - 3,average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_011.shape.size.i) and color grey and mask ? at (?,?)
  _01: a rectangle with size (^.layer_011.shape.size.j,^.layer_011.shape.size.j - ^.layer_011.pos.i - ^.layer_01.pos.i) and color grey and mask ? at (^.layer_01.pos.i / '2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 10041.0 = 10130.4
DL output with Mo: L = 272.8 + 2304.5 = 2577.3
DL input+output M: L = 362.2 + 12345.5 = 12707.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i + 3) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.j - 3,average(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_011.shape.size.i) and color grey and mask ? at (?,?)
  _01: a rectangle with size (^.layer_011.shape.size.j,^.layer_011.shape.size.j - ^.layer_011.pos.i - ^.layer_01.pos.i) and color grey and mask ? at (^.layer_01.pos.i / '2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 51.7 = 141.0
DL output with Mo: L = 272.8 + 2304.5 = 2577.3
DL input+output M: L = 362.1 + 2356.2 = 2718.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 66f2d22f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 66f2d22f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 66f2d22f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 66f2d22f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 66f2d22f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.1 sec (7.1 sec/task)
bits-train-error = 2304.5 bits (2304.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-242] Checking task 67636eac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14974.3 = 14987.0
DL output with Mo: L = 12.6 + 13770.9 = 13783.5
DL input+output M: L = 25.2 + 28745.2 = 28770.5

# learning a model for train pairs
2.000	
1.720	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.436	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.682	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.546	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	OUT SPE ^.layer_01.shape = ^.layer_011.shape
0.437	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.417	OUT SPE ^.layer_00.pos = '(0, 0)
0.410	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i / colorCount(^.grid)
0.404	OUT SPE ^.color = black
0.399	IN  SPE ^.color = black
0.106	
0.106	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _00: ^.layer_0.shape at '(0, 0)
  _0: ^.layer_01.shape at (?,?)
  _01: ^.layer_011.shape at (^.layer_01.pos.i / colorCount(^.grid),?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 4422.1 = 4511.5
DL output with Mo: L = 107.9 + 1249.2 = 1357.1
DL input+output M: L = 197.3 + 5671.3 = 5868.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _00: ^.layer_0.shape at '(0, 0)
  _0: ^.layer_01.shape at (?,?)
  _01: ^.layer_011.shape at (^.layer_01.pos.i / colorCount(^.grid),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 107.9 + 1249.2 = 1357.1
DL input+output M: L = 197.1 + 1269.2 = 1466.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 67636eac.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 67636eac.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 67636eac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 67636eac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 1249.2 bits (1249.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-241] Checking task 67b4a34d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 213376.3 = 213388.9
DL output with Mo: L = 12.6 + 10930.1 = 10942.7
DL input+output M: L = 25.2 + 224306.4 = 224331.6

# learning a model for train pairs
2.000	
1.674	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.566	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.489	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.424	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.323	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.284	OUT SPE ^.size = ^.layer_0.shape.size
1.258	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.224	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.196	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.169	OUT SPE ^.layer_0.shape.size = min(^.layer_0.shape.size, ^.layer_01.shape.size) - (1, 2)
1.154	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
1.142	OUT SPE ^.layer_011111.pos.i = 3
1.133	OUT SPE ^.layer_01.shape.size.i = 1
1.124	OUT SPE ^.layer_01.shape.mask = Full
1.115	OUT SPE ^.layer_011.shape.size.i = 1
1.106	OUT SPE ^.layer_011.shape.mask = Full
0.332	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) - (1, 2) and color ? and mask ? at (?,?)
  _01: a rectangle with size (1,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 165251.7 = 165341.0
DL output with Mo: L = 185.4 + 3441.3 = 3626.7
DL input+output M: L = 274.7 + 168693.0 = 168967.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) - (1, 2) and color ? and mask ? at (?,?)
  _01: a rectangle with size (1,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 83.4 = 172.7
DL output with Mo: L = 185.4 + 3441.3 = 3626.7
DL input+output M: L = 274.7 + 3524.7 = 3799.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 67b4a34d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 67b4a34d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 67b4a34d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 67b4a34d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.8 sec (58.8 sec/task)
bits-train-error = 3441.3 bits (3441.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-240] Checking task 67c52801.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29240.9 = 29253.5
DL output with Mo: L = 12.6 + 29240.9 = 29253.5
DL input+output M: L = 25.2 + 58481.8 = 58507.0

# learning a model for train pairs
2.000	
1.458	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.938	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.705	OUT ADD ^.layer_00 = ^.layer_0
0.519	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.477	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.313	OUT SPE ^.layer_0.shape = applySym(flipDiag1, ^.layer_011.shape)
0.288	OUT SPE ^.size = ^.size
0.282	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i - 1
0.277	OUT SPE ^.layer_01.pos.i = bottom(^.layer_0) - min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.272	IN  SPE ^.layer_01.shape.mask = Full
0.268	IN  SPE ^.layer_011.shape.mask = Full
0.265	IN  SPE ^.color = black
0.261	OUT SPE ^.color = black
0.063	
0.063	IN  GEN ^.layer_011.shape.mask = ?
0.063	IN  GEN ^.layer_01.shape.mask = ?
0.063	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: applySym(flipDiag1, ^.layer_011.shape) at (^.layer_0.pos.i - 1,?)
  _01: ^.layer_01.shape at (bottom(^.layer_0) - min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 91.4 + 5847.6 = 5939.0
DL output with Mo: L = 142.2 + 1561.8 = 1704.1
DL input+output M: L = 233.6 + 7409.4 = 7643.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: applySym(flipDiag1, ^.layer_011.shape) at (^.layer_0.pos.i - 1,?)
  _01: ^.layer_01.shape at (bottom(^.layer_0) - min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 40.0 = 129.3
DL output with Mo: L = 142.2 + 1561.8 = 1704.1
DL input+output M: L = 231.5 + 1601.8 = 1833.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 67c52801.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 67c52801.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 67c52801.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 67c52801.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 67c52801.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 1561.8 bits (1561.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-239] Checking task 68b67ca3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6094.2 = 6106.8
DL output with Mo: L = 12.6 + 5674.2 = 5686.8
DL input+output M: L = 25.2 + 11768.4 = 11793.6

# learning a model for train pairs
2.000	
1.799	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.690	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.590	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.455	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
1.353	IN  ADD ^.layer_00 = a point with color ? at (?,?)
1.253	OUT ADD ^.layer_001 = ^.layer_00
1.151	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.048	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.981	OUT SPE ^.size = '(3, 3)
0.943	OUT SPE ^.layer_00.pos = average(^.layer_0.pos, ^.layer_00.pos)
0.916	IN  SPE ^.layer_0.shape.color = red
0.895	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.875	OUT SPE ^.layer_01.pos.i = 2
0.859	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.i / '2
0.846	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2
0.834	IN  SPE ^.color = black
0.291	
0.288	IN  DEL ^.layer_011
0.288	IN  GEN ^.layer_0.shape.color = ?
0.288	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _00: ^.layer_0.shape at average(^.layer_0.pos, ^.layer_00.pos)
  _001: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
  _01: a point with color ? at (2,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a point with color red at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.4 + 3318.1 = 3398.6
DL output with Mo: L = 182.5 + 1396.2 = 1578.7
DL input+output M: L = 262.9 + 4714.4 = 4977.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _00: ^.layer_0.shape at average(^.layer_0.pos, ^.layer_00.pos)
  _001: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,min(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
  _01: a point with color ? at (2,^.layer_01.pos.i / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 182.5 + 1396.2 = 1578.7
DL input+output M: L = 243.9 + 1396.2 = 1640.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 68b67ca3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 68b67ca3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 68b67ca3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 68b67ca3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.6 sec (8.6 sec/task)
bits-train-error = 1396.2 bits (1396.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-238] Checking task 692cd3b6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19397.5 = 19410.1
DL output with Mo: L = 12.6 + 96692.1 = 96704.7
DL input+output M: L = 25.2 + 116089.6 = 116114.8

# learning a model for train pairs
2.000	
1.241	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.893	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.542	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.458	OUT ADD ^.layer_01 = ^.layer_01
0.374	OUT ADD ^.layer_00 = ^.layer_0
0.342	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.308	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.296	OUT ADD ^.layer_011 = ^.layer_011
0.284	OUT ADD ^.layer_0111 = ^.layer_0111
0.275	IN  SPE ^.layer_0.shape.color = red
0.266	IN  SPE ^.layer_01.shape.color = red
0.258	IN  SPE ^.layer_011.shape.color = grey
0.249	IN  SPE ^.layer_0111.shape.color = grey
0.242	OUT SPE ^.size = ^.size
0.239	IN  SPE ^.color = black
0.237	OUT SPE ^.layer_0.shape.color = yellow
0.235	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_01.pos.j) + 1
0.235	OUT SPE ^.color = black
0.043	
0.043	IN  GEN ^.layer_0111.shape.color = ?
0.043	IN  GEN ^.layer_011.shape.color = ?
0.043	IN  GEN ^.layer_01.shape.color = ?
0.042	IN  GEN ^.layer_0.shape.color = ?
0.042	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) + 1)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color grey at (?,?)

DL input  with Mi: L = 109.0 + 3716.0 = 3825.0
DL output with Mo: L = 94.7 + 3530.6 = 3625.3
DL input+output M: L = 203.7 + 7246.6 = 7450.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) + 1)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 95.6 + 0.0 = 95.6
DL output with Mo: L = 94.7 + 3530.6 = 3625.3
DL input+output M: L = 190.3 + 3530.6 = 3720.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 692cd3b6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 692cd3b6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 692cd3b6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 692cd3b6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.7 sec (14.7 sec/task)
bits-train-error = 3530.6 bits (3530.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-237] Checking task 695367ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 651.7 = 664.3
DL output with Mo: L = 12.6 + 101684.5 = 101697.1
DL input+output M: L = 25.2 + 102336.2 = 102361.4

# learning a model for train pairs
2.000	
1.086	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.082	OUT SPE ^.layer_0.pos = '(0, 0)
1.080	OUT SPE ^.layer_0.shape.color = ^.color
1.080	OUT SPE ^.color = black
0.099	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 651.7 = 664.3
DL output with Mo: L = 47.8 + 8057.1 = 8104.9
DL input+output M: L = 60.4 + 8708.8 = 8769.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.color and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 47.8 + 8057.1 = 8104.9
DL input+output M: L = 60.4 + 8057.1 = 8117.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 695367ec.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 695367ec.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 695367ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 695367ec.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 8057.1 bits (8057.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-236] Checking task 696d4842.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30396.6 = 30409.3
DL output with Mo: L = 12.6 + 41131.2 = 41143.8
DL input+output M: L = 25.2 + 71527.8 = 71553.0

# learning a model for train pairs
2.000	
1.550	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.216	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.923	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.491	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.470	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.441	OUT ADD ^.layer_0110 = ^.layer_011
0.420	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.389	OUT ADD ^.layer_01111 = ^.layer_0111
0.371	OUT SPE ^.size = ^.size
0.362	OUT SPE ^.layer_011.pos = min(^.layer_0.pos, ^.layer_01.pos)
0.354	OUT SPE ^.layer_01.pos = ^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0111)
0.345	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.341	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.337	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.333	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.328	OUT SPE ^.layer_0111.pos.j = right(^.layer_01) - 2
0.324	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_0111.pos.j) * '2
0.322	IN  SPE ^.color = black
0.319	OUT SPE ^.layer_011.shape.mask = Full
0.317	OUT SPE ^.layer_011111.shape.mask = Full
0.315	OUT SPE ^.color = black
0.106	
0.106	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,min(^.layer_0.pos.j, ^.layer_0111.pos.j) * '2)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0111)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at min(^.layer_0.pos, ^.layer_01.pos)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,right(^.layer_01) - 2)
  _01111: ^.layer_0111
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 95.7 + 6423.0 = 6518.7
DL output with Mo: L = 280.2 + 3870.1 = 4150.2
DL input+output M: L = 375.9 + 10293.1 = 10668.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,min(^.layer_0.pos.j, ^.layer_0111.pos.j) * '2)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0111)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at min(^.layer_0.pos, ^.layer_01.pos)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,right(^.layer_01) - 2)
  _01111: ^.layer_0111
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 95.6 + 51.7 = 147.3
DL output with Mo: L = 280.2 + 3870.1 = 4150.2
DL input+output M: L = 375.7 + 3921.8 = 4297.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 696d4842.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 696d4842.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 696d4842.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 696d4842.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 35.0 sec (35.0 sec/task)
bits-train-error = 3870.1 bits (3870.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-235] Checking task 69889d6e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3988.5 = 4001.1
DL output with Mo: L = 12.6 + 27261.0 = 27273.6
DL input+output M: L = 25.2 + 31249.6 = 31274.8

# learning a model for train pairs
2.000	
1.239	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.997	OUT SPE ^.size = ^.size
0.973	IN  SPE ^.color = black
0.964	OUT SPE ^.layer_0.shape.color = red
0.961	OUT SPE ^.color = black
0.206	
0.201	IN  DEL ^.layer_0
0.201	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 3021.9 = 3051.6
DL output with Mo: L = 39.1 + 5365.8 = 5404.8
DL input+output M: L = 68.7 + 8387.7 = 8456.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 39.1 + 5365.8 = 5404.8
DL input+output M: L = 51.7 + 5365.8 = 5417.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 69889d6e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 69889d6e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 69889d6e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 69889d6e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 69889d6e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 5365.8 bits (5365.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-234] Checking task 6a11f6da.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 69626.8 = 69639.4
DL output with Mo: L = 12.6 + 23432.8 = 23445.4
DL input+output M: L = 25.2 + 93059.6 = 93084.8

# learning a model for train pairs
2.000	
1.668	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.392	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.148	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.992	OUT ADD ^.layer_00 = ^.layer_01.shape at (?,?)
0.828	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.750	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.706	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.662	OUT ADD ^.layer_010 = a point with color ? at (?,?)
0.629	OUT SPE ^.size = projI(^.layer_0.shape.size) + projJ(^.size)
0.604	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.587	OUT SPE ^.layer_00.pos = projJ(^.layer_0.pos) + translationOnto(^.layer_0, ^.layer_011)
0.575	OUT SPE ^.layer_0111.shape.color = cyan
0.566	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.i / '2
0.559	OUT SPE ^.layer_01.shape.mask = Full
0.552	OUT SPE ^.layer_0111.shape.mask = Full
0.546	IN  SPE ^.layer_01.shape.color = pink
0.500	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.491	OUT SPE ^.layer_010.pos.i = '0
0.481	OUT SPE ^.layer_011.pos.i = 3
0.472	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.j
0.247	
0.247	IN  DEL ^.layer_0111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projI(^.layer_0.shape.size) + projJ(^.size) and color ? and layers
  _00: ^.layer_01.shape at projJ(^.layer_0.pos) + translationOnto(^.layer_0, ^.layer_011)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.i / '2)
  _010: a point with color ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (^.layer_01.pos.j,?)
  _011: a point with color ? at (3,?)
  _0111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 15619.2 = 15736.7
DL output with Mo: L = 267.0 + 5494.0 = 5761.0
DL input+output M: L = 384.5 + 21113.2 = 21497.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projI(^.layer_0.shape.size) + projJ(^.size) and color ? and layers
  _00: ^.layer_01.shape at projJ(^.layer_0.pos) + translationOnto(^.layer_0, ^.layer_011)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.i / '2)
  _010: a point with color ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (^.layer_01.pos.j,?)
  _011: a point with color ? at (3,?)
  _0111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 0.0 = 92.6
DL output with Mo: L = 267.0 + 5494.0 = 5761.0
DL input+output M: L = 359.6 + 5494.0 = 5853.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 6a11f6da.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6a11f6da.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6a11f6da.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6a11f6da.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6a11f6da.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 6a11f6da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.0 sec (58.0 sec/task)
bits-train-error = 5494.0 bits (5494.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-233] Checking task 6ad5bdfd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19031.3 = 19043.9
DL output with Mo: L = 12.6 + 19031.3 = 19043.9
DL input+output M: L = 25.2 + 38062.6 = 38087.8

# learning a model for train pairs
2.000	
1.743	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.437	OUT ADD ^.layer_0 = ^.layer_0
1.367	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.227	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.156	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.084	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.014	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.944	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.874	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.803	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.731	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.702	OUT SPE ^.size = ^.size
0.674	OUT SPE ^.layer_011111.shape = ^.layer_011111.shape
0.645	OUT SPE ^.layer_01111.shape = ^.layer_01111.shape
0.617	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.589	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.560	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.547	OUT SPE ^.layer_011111.pos = ^.layer_011111.pos - translationOnto(^.layer_0, ^.layer_011111)
0.539	IN  SPE ^.layer_0.shape.color = red
0.532	OUT SPE ^.layer_01111.pos.i = max(^.layer_0111.pos.i, ^.layer_01111.pos.i)
0.526	OUT SPE ^.layer_01.pos.i = min(^.layer_0.pos.i, ^.layer_0111.pos.i)
0.520	OUT SPE ^.layer_0111.pos.i = bottom(^.layer_0) - ^.layer_01111.shape.size.j
0.515	IN  SPE ^.layer_0.shape.mask = Full
0.510	IN  SPE ^.layer_01.shape.mask = Full
0.505	IN  SPE ^.layer_011.shape.mask = Full
0.500	IN  SPE ^.layer_0111.shape.mask = Full
0.495	IN  SPE ^.layer_01111.shape.mask = Full
0.489	IN  SPE ^.layer_011111.shape.mask = Full
0.485	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0) - ^.layer_01111.pos.i - ^.layer_01.pos.i
0.481	OUT SPE ^.color = black
0.477	IN  SPE ^.color = black
0.139	
0.139	IN  GEN ^.layer_0.shape.color = ?
0.139	IN  GEN ^.layer_011111.shape.mask = ?
0.139	IN  GEN ^.layer_01111.shape.mask = ?
0.139	IN  GEN ^.layer_0111.shape.mask = ?
0.139	IN  GEN ^.layer_011.shape.mask = ?
0.139	IN  GEN ^.layer_01.shape.mask = ?
0.139	IN  GEN ^.layer_0.shape.mask = ?
0.139	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at (min(^.layer_0.pos.i, ^.layer_0111.pos.i),?)
  _011: ^.layer_011.shape at (bottom(^.layer_0) - ^.layer_01111.pos.i - ^.layer_01.pos.i,?)
  _0111: ^.layer_0111.shape at (bottom(^.layer_0) - ^.layer_01111.shape.size.j,?)
  _01111: ^.layer_01111.shape at (max(^.layer_0111.pos.i, ^.layer_01111.pos.i),?)
  _011111: ^.layer_011111.shape at ^.layer_011111.pos - translationOnto(^.layer_0, ^.layer_011111)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 173.0 + 6467.6 = 6640.6
DL output with Mo: L = 266.8 + 2172.1 = 2438.9
DL input+output M: L = 439.8 + 8639.7 = 9079.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at (min(^.layer_0.pos.i, ^.layer_0111.pos.i),?)
  _011: ^.layer_011.shape at (bottom(^.layer_0) - ^.layer_01111.pos.i - ^.layer_01.pos.i,?)
  _0111: ^.layer_0111.shape at (bottom(^.layer_0) - ^.layer_01111.shape.size.j,?)
  _01111: ^.layer_01111.shape at (max(^.layer_0111.pos.i, ^.layer_01111.pos.i),?)
  _011111: ^.layer_011111.shape at ^.layer_011111.pos - translationOnto(^.layer_0, ^.layer_011111)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 40.0 = 203.5
DL output with Mo: L = 266.8 + 2172.1 = 2438.9
DL input+output M: L = 430.4 + 2212.1 = 2642.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6ad5bdfd.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6ad5bdfd.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6ad5bdfd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 6ad5bdfd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.8 sec (38.8 sec/task)
bits-train-error = 2172.1 bits (2172.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-232] Checking task 6df30ad6.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33509.2 = 33521.8
DL output with Mo: L = 12.6 + 15174.8 = 15187.4
DL input+output M: L = 25.2 + 48684.0 = 48709.2

# learning a model for train pairs
2.000	
1.203	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.848	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT SPE ^.size = ^.size
0.741	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.703	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.673	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.642	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.613	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.605	IN  SPE ^.layer_0.shape.color = grey
0.596	OUT SPE ^.color = black
0.593	IN  SPE ^.color = black
0.023	
0.022	IN  DEL ^.layer_011
0.022	IN  DEL ^.layer_01
0.022	IN  GEN ^.layer_0.shape.color = ?
0.022	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 74.2 + 19106.0 = 19180.2
DL output with Mo: L = 30.7 + 282.2 = 312.9
DL input+output M: L = 104.8 + 19388.2 = 19493.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 30.7 + 282.2 = 312.9
DL input+output M: L = 69.5 + 282.2 = 351.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6df30ad6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6df30ad6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6df30ad6.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 6df30ad6.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 6df30ad6.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 6df30ad6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 282.2 bits (282.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-231] Checking task 6ea4a07e.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7919.7 = 7932.4
DL output with Mo: L = 12.6 + 8310.2 = 8322.8
DL input+output M: L = 25.2 + 16230.0 = 16255.2

# learning a model for train pairs
2.000	
1.393	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.566	OUT SPE ^.layer_0 = coloring(^.layer_0, black)
0.472	OUT SPE ^.size = ^.size
0.453	IN  SPE ^.color = black
0.073	
0.073	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, black)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 3017.9 = 3056.9
DL output with Mo: L = 25.7 + 537.9 = 563.6
DL input+output M: L = 64.6 + 3555.9 = 3620.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, black)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 25.7 + 537.9 = 563.6
DL input+output M: L = 64.5 + 537.9 = 602.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6ea4a07e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6ea4a07e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6ea4a07e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6ea4a07e.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6ea4a07e.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6ea4a07e.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 6ea4a07e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 6ea4a07e.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 537.9 bits (537.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-230] Checking task 6f473927.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15302.0 = 15314.6
DL output with Mo: L = 12.6 + 43815.2 = 43827.8
DL input+output M: L = 25.2 + 59117.2 = 59142.4

# learning a model for train pairs
2.000	
1.195	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.618	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.288	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
0.272	OUT SPE ^.size = tiling(^.size, 1, 2)
0.258	IN  SPE ^.layer_0.shape.color = red
0.251	OUT SPE ^.layer_0.shape.size.i = ^.size.i
0.244	IN  SPE ^.color = black
0.239	OUT SPE ^.layer_0.shape.color = cyan
0.235	OUT SPE ^.layer_0.pos.i = '0
0.231	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i
0.229	OUT SPE ^.color = black
0.058	
0.058	IN  GEN ^.layer_0.shape.color = ?
0.058	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 1, 2) and color black and layers
  _0: a rectangle with size (^.size.i,?) and color cyan and mask ? at ('0,?)
  _01: ^.layer_0.shape at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2616.3 = 2658.6
DL output with Mo: L = 94.3 + 2320.3 = 2414.6
DL input+output M: L = 136.6 + 4936.6 = 5073.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 1, 2) and color black and layers
  _0: a rectangle with size (^.size.i,?) and color cyan and mask ? at ('0,?)
  _01: ^.layer_0.shape at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 94.3 + 2320.3 = 2414.6
DL input+output M: L = 133.2 + 2320.3 = 2453.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6f473927.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6f473927.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6f473927.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 6f473927.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 6f473927.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 2320.3 bits (2320.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-229] Checking task 7039b2d7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 134150.9 = 134163.5
DL output with Mo: L = 12.6 + 692.9 = 705.5
DL input+output M: L = 25.2 + 134843.8 = 134869.0

# learning a model for train pairs
2.000	
1.097	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.718	OUT SPE ^.color = ^.color
0.621	
0.621	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 12997.5 = 13036.3
DL output with Mo: L = 14.0 + 423.9 = 437.9
DL input+output M: L = 52.9 + 13421.4 = 13474.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 14.0 + 423.9 = 437.9
DL input+output M: L = 26.6 + 423.9 = 450.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7039b2d7.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7039b2d7.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7039b2d7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 7039b2d7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.0 sec (4.0 sec/task)
bits-train-error = 423.9 bits (423.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-228] Checking task 705a3229.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4065.3 = 4077.9
DL output with Mo: L = 12.6 + 22341.2 = 22353.9
DL input+output M: L = 25.2 + 26406.5 = 26431.7

# learning a model for train pairs
2.000	
1.562	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.320	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.076	OUT SPE ^.size = ^.size
1.052	IN  SPE ^.color = black
1.041	OUT SPE ^.layer_0.pos.i = '0
1.031	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
1.027	OUT SPE ^.color = black
0.265	
0.265	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 3105.1 = 3134.8
DL output with Mo: L = 67.6 + 5699.3 = 5766.9
DL input+output M: L = 97.3 + 8804.4 = 8901.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ('0,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 67.6 + 5699.3 = 5766.9
DL input+output M: L = 97.2 + 5699.3 = 5796.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 705a3229.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 705a3229.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 705a3229.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 705a3229.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 705a3229.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 5699.3 bits (5699.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-227] Checking task 712bf12e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 44397.6 = 44410.2
DL output with Mo: L = 12.6 + 86276.9 = 86289.6
DL input+output M: L = 25.2 + 130674.5 = 130699.8

# learning a model for train pairs
2.000	
1.830	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.664	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.500	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.370	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.265	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.171	OUT ADD ^.layer_00 = ^.layer_0
1.086	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT ADD ^.layer_010 = ^.layer_01
0.960	OUT ADD ^.layer_0111 = ^.layer_011
0.910	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.826	OUT ADD ^.layer_01111 = ^.layer_0111
0.790	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.755	OUT ADD ^.layer_011111 = ^.layer_01111
0.742	IN  ADD ^.layer_0111110 = a point with color ? at (?,?)
0.734	OUT SPE ^.size = ^.size
0.726	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
0.723	IN  SPE ^.layer_0.shape.color = grey
0.719	IN  SPE ^.layer_01.shape.color = grey
0.715	IN  SPE ^.layer_011.shape.color = grey
0.712	IN  SPE ^.layer_0111.shape.color = grey
0.708	IN  SPE ^.layer_011110.shape.color = grey
0.704	IN  SPE ^.layer_01111.shape.color = grey
0.238	
0.237	IN  DEL ^.layer_011111
0.237	IN  DEL ^.layer_011110
0.236	IN  DEL ^.layer_0111110
0.236	IN  GEN ^.layer_01111.shape.color = ?
0.236	IN  GEN ^.layer_0111.shape.color = ?
0.236	IN  GEN ^.layer_011.shape.color = ?
0.236	IN  GEN ^.layer_01.shape.color = ?
0.236	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011110: a point with color grey at (?,?)
  _01111: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111110: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 214.1 + 20709.0 = 20923.1
DL output with Mo: L = 122.9 + 19976.8 = 20099.7
DL input+output M: L = 337.0 + 40685.8 = 41022.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 122.9 + 19976.8 = 20099.7
DL input+output M: L = 261.8 + 19976.8 = 20238.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 712bf12e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 712bf12e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 712bf12e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 712bf12e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 62.2 sec (62.2 sec/task)
bits-train-error = 19976.8 bits (19976.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-226] Checking task 72207abc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3297.0 = 3309.6
DL output with Mo: L = 12.6 + 8134.5 = 8147.2
DL input+output M: L = 25.2 + 11431.6 = 11456.8

# learning a model for train pairs
2.000	
1.812	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.618	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.482	OUT ADD ^.layer_0 = ^.layer_0
1.346	OUT ADD ^.layer_01 = ^.layer_01
1.251	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
1.156	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
1.079	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.001	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.931	OUT SPE ^.size = ^.size
0.904	OUT SPE ^.layer_011.pos = tiling('(1, 3), 1, 2)
0.882	IN  SPE ^.color = black
0.862	OUT SPE ^.layer_0111.shape.color = majorityColor(^.grid)
0.848	OUT SPE ^.layer_00.pos.i = 1
0.835	OUT SPE ^.layer_0111.pos.i = 1
0.821	OUT SPE ^.layer_01111.pos.i = 1
0.812	OUT SPE ^.color = black
0.230	
0.230	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (1,?)
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_01.shape at tiling('(1, 3), 1, 2)
  _0111: a point with color majorityColor(^.grid) at (1,?)
  _01111: a point with color ? at (1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 1956.4 = 2002.1
DL output with Mo: L = 134.4 + 1550.3 = 1684.7
DL input+output M: L = 180.2 + 3506.7 = 3686.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (1,?)
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_01.shape at tiling('(1, 3), 1, 2)
  _0111: a point with color majorityColor(^.grid) at (1,?)
  _01111: a point with color ? at (1,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 31.7 = 77.3
DL output with Mo: L = 134.4 + 1550.3 = 1684.7
DL input+output M: L = 180.1 + 1582.0 = 1762.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 72207abc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 72207abc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 72207abc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 72207abc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.7 sec (4.7 sec/task)
bits-train-error = 1550.3 bits (1550.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-225] Checking task 72a961c9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12941.1 = 12953.7
DL output with Mo: L = 12.6 + 21870.6 = 21883.2
DL input+output M: L = 25.2 + 34811.7 = 34836.9

# learning a model for train pairs
2.000	
1.379	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.707	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.641	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.601	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.566	OUT SPE ^.size = ^.size
0.543	OUT ADD ^.layer_00 = ^.layer_00
0.526	IN  SPE ^.layer_0.shape.color = blue
0.509	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.497	OUT SPE ^.layer_011.shape = scaleTo(^.layer_00.shape, '(1, 1))
0.486	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.476	IN  SPE ^.layer_0.shape.mask = Full
0.467	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.458	OUT SPE ^.layer_011.pos.j = ^.layer_00.pos.j
0.450	IN  SPE ^.color = black
0.444	OUT SPE ^.layer_01.shape.size.j = 1
0.438	OUT SPE ^.layer_01.shape.mask = Full
0.434	OUT SPE ^.color = black
0.160	
0.160	IN  GEN ^.layer_0.shape.color = ?
0.160	IN  GEN ^.layer_0.shape.mask = ?
0.160	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _011: scaleTo(^.layer_00.shape, '(1, 1)) at (?,^.layer_00.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 59.4 + 3541.3 = 3600.7
DL output with Mo: L = 132.2 + 3274.1 = 3406.4
DL input+output M: L = 191.6 + 6815.4 = 7007.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _011: scaleTo(^.layer_00.shape, '(1, 1)) at (?,^.layer_00.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 54.9 + 0.0 = 54.9
DL output with Mo: L = 132.2 + 3274.1 = 3406.4
DL input+output M: L = 187.2 + 3274.1 = 3461.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 72a961c9.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 72a961c9.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 72a961c9.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 72a961c9.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 72a961c9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 41.8 sec (41.8 sec/task)
bits-train-error = 3274.1 bits (3274.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-224] Checking task 73182012.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49299.8 = 49312.4
DL output with Mo: L = 12.6 + 11778.4 = 11791.0
DL input+output M: L = 25.2 + 61078.2 = 61103.4

# learning a model for train pairs
2.000	
1.669	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.367	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.223	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.085	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.978	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.711	OUT SPE ^.size = ^.size / '3
0.679	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size / '2
0.636	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.616	OUT SPE ^.layer_0111.pos.j = 3
0.590	OUT SPE ^.layer_0111.shape.size = '(1, 1)
0.572	OUT SPE ^.layer_011.pos = ^.layer_01111.pos - (3, 3)
0.564	OUT SPE ^.layer_011.shape.mask = Full
0.552	OUT SPE ^.layer_01.shape.size.i = ^.layer_01111.shape.size.i
0.541	OUT SPE ^.layer_01.shape.size.j = ^.layer_01111.shape.size.i
0.533	OUT SPE ^.layer_0111.shape.mask = Full
0.511	OUT SPE ^.layer_011.shape.size = span(^.layer_011.pos, ^.layer_0111.pos) - (3, 0)
0.504	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_011.pos.j) / '2
0.497	OUT SPE ^.layer_0.pos.i = min(^.layer_0.pos.i, ^.layer_0111.pos.i) / '2
0.490	OUT SPE ^.layer_01.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_0111.shape.size.i
0.486	OUT SPE ^.layer_01.pos.i = min(^.layer_0.pos.j, ^.layer_0111.pos.j) + ^.layer_01111.pos.i - ^.layer_01.pos.i
0.483	IN  SPE ^.layer_0111.shape.mask = Full
0.481	IN  SPE ^.layer_011.shape.mask = Full
0.479	IN  SPE ^.layer_01111.shape.mask = Full
0.477	IN  SPE ^.color = black
0.193	
0.193	IN  GEN ^.layer_01111.shape.mask = ?
0.193	IN  GEN ^.layer_011.shape.mask = ?
0.193	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size / '3 and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size / '2 and color ^.layer_0.shape.color and mask ? at (min(^.layer_0.pos.i, ^.layer_0111.pos.i) / '2,min(^.layer_0.pos.j, ^.layer_011.pos.j) / '2)
  _01: a rectangle with size (^.layer_01111.shape.size.i,^.layer_01111.shape.size.i) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_0111.pos.j) + ^.layer_01111.pos.i - ^.layer_01.pos.i,span(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_0111.shape.size.i)
  _011: a rectangle with size span(^.layer_011.pos, ^.layer_0111.pos) - (3, 0) and color ? and mask Full at ^.layer_01111.pos - (3, 3)
  _0111: a rectangle with size '(1, 1) and color ? and mask Full at (?,3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 142.0 + 14062.0 = 14204.0
DL output with Mo: L = 483.4 + 1749.1 = 2232.5
DL input+output M: L = 625.4 + 15811.1 = 16436.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size / '3 and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size / '2 and color ^.layer_0.shape.color and mask ? at (min(^.layer_0.pos.i, ^.layer_0111.pos.i) / '2,min(^.layer_0.pos.j, ^.layer_011.pos.j) / '2)
  _01: a rectangle with size (^.layer_01111.shape.size.i,^.layer_01111.shape.size.i) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_0111.pos.j) + ^.layer_01111.pos.i - ^.layer_01.pos.i,span(^.layer_0.pos.j, ^.layer_01.pos.j) - ^.layer_0111.shape.size.i)
  _011: a rectangle with size span(^.layer_011.pos, ^.layer_0111.pos) - (3, 0) and color ? and mask Full at ^.layer_01111.pos - (3, 3)
  _0111: a rectangle with size '(1, 1) and color ? and mask Full at (?,3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.9 + 51.7 = 191.6
DL output with Mo: L = 483.4 + 1749.1 = 2232.5
DL input+output M: L = 623.2 + 1800.8 = 2424.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 73182012.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 73182012.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 73182012.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 73182012.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 32.8 sec (32.8 sec/task)
bits-train-error = 1749.1 bits (1749.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-223] Checking task 73c3b0d8.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12313.0 = 12325.6
DL output with Mo: L = 12.6 + 18198.5 = 18211.1
DL input+output M: L = 25.2 + 30511.4 = 30536.7

# learning a model for train pairs
2.000	
1.444	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.002	OUT ADD ^.layer_0 = ^.layer_0
0.668	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.599	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.561	OUT SPE ^.size = ^.size
0.543	IN  SPE ^.layer_0.shape.color = red
0.525	IN  SPE ^.layer_01.shape.color = yellow
0.512	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.502	IN  SPE ^.layer_0.shape.mask = Full
0.494	IN  SPE ^.color = black
0.488	OUT SPE ^.color = black
0.173	
0.173	IN  GEN ^.layer_01.shape.color = ?
0.173	IN  GEN ^.layer_0.shape.color = ?
0.173	IN  GEN ^.layer_0.shape.mask = ?
0.173	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a point with color yellow at (?,?)

DL input  with Mi: L = 62.7 + 3880.5 = 3943.2
DL output with Mo: L = 42.1 + 3022.4 = 3064.5
DL input+output M: L = 104.8 + 6902.9 = 7007.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 0.0 = 54.9
DL output with Mo: L = 42.1 + 3022.4 = 3064.5
DL input+output M: L = 97.0 + 3022.4 = 3119.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 73c3b0d8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 73c3b0d8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 73c3b0d8.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 73c3b0d8.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 73c3b0d8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 3022.4 bits (3022.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-222] Checking task 73ccf9c2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 64123.5 = 64136.1
DL output with Mo: L = 12.6 + 11361.2 = 11373.8
DL input+output M: L = 25.2 + 75484.7 = 75509.9

# learning a model for train pairs
2.000	
1.210	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.943	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.704	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.492	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.350	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.216	OUT SPE ^.layer_0.shape = ^.layer_0111.shape
0.176	OUT SPE ^.size = ^.layer_0111.shape.size
0.152	OUT SPE ^.layer_0.pos = '(0, 0)
0.145	OUT SPE ^.color = black
0.144	IN  SPE ^.color = black
0.007	
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0111.shape.size and color black and layers
  _0: ^.layer_0111.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 8813.9 = 8928.2
DL output with Mo: L = 54.3 + 0.0 = 54.3
DL input+output M: L = 168.5 + 8813.9 = 8982.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0111.shape.size and color black and layers
  _0: ^.layer_0111.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 54.3 + 0.0 = 54.3
DL input+output M: L = 168.4 + 20.0 = 188.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 73ccf9c2.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 73ccf9c2.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 73ccf9c2.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 73ccf9c2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.5 sec (7.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-221] Checking task 759f3fd3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 23028.0 = 23040.6
DL output with Mo: L = 12.6 + 107470.2 = 107482.9
DL input+output M: L = 25.2 + 130498.3 = 130523.5

# learning a model for train pairs
2.000	
1.175	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.967	OUT ADD ^.layer_0 = ^.layer_0
0.873	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.788	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.722	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.661	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.615	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.575	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.401	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 3994.8 = 4033.6
DL output with Mo: L = 167.7 + 42793.0 = 42960.7
DL input+output M: L = 206.5 + 46787.8 = 46994.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 167.7 + 42793.0 = 42960.7
DL input+output M: L = 206.5 + 42793.0 = 42999.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 759f3fd3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 759f3fd3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 759f3fd3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 42793.0 bits (42793.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-220] Checking task 762cd429.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5467.2 = 5479.9
DL output with Mo: L = 12.6 + 198571.0 = 198583.6
DL input+output M: L = 25.2 + 204038.2 = 204063.4

# learning a model for train pairs
2.000	
1.728	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.545	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.363	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.186	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.049	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.810	IN  ADD ^.layer_001 = a point with color ? at (?,?)
0.804	OUT ADD ^.layer_00 = ^.layer_00
0.762	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.731	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.160	
0.155	IN  DEL ^.layer_0
0.152	IN  DEL ^.layer_001
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 70.7 + 3130.7 = 3201.4
DL output with Mo: L = 167.7 + 28984.5 = 29152.1
DL input+output M: L = 238.4 + 32115.2 = 32353.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 167.7 + 28984.5 = 29152.1
DL input+output M: L = 197.2 + 28984.5 = 29181.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 762cd429.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 762cd429.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 762cd429.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 762cd429.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 28984.5 bits (28984.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-219] Checking task 770cc55f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17533.5 = 17546.1
DL output with Mo: L = 12.6 + 31491.1 = 31503.7
DL input+output M: L = 25.2 + 49024.5 = 49049.8

# learning a model for train pairs
2.000	
1.587	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.240	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.750	OUT ADD ^.layer_01 = ^.layer_0
0.562	OUT ADD ^.layer_011 = ^.layer_01
0.434	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.325	OUT ADD ^.layer_0111 = ^.layer_011
0.302	OUT SPE ^.size = ^.size
0.289	IN  SPE ^.layer_0.shape.color = red
0.276	OUT SPE ^.layer_0.shape.size = span(^.layer_0.pos, ^.layer_011.pos) - (2, 0)
0.268	IN  SPE ^.layer_0.shape.mask = Full
0.261	IN  SPE ^.layer_01.shape.mask = Full
0.253	IN  SPE ^.layer_011.shape.mask = Full
0.246	OUT SPE ^.layer_0.shape.color = yellow
0.240	IN  SPE ^.color = black
0.236	OUT SPE ^.layer_0.shape.mask = Full
0.232	OUT SPE ^.layer_0.pos.j = max(^.layer_01.pos.j, ^.layer_011.pos.j)
0.229	OUT SPE ^.color = black
0.019	
0.019	IN  GEN ^.layer_0.shape.color = ?
0.019	IN  GEN ^.layer_011.shape.mask = ?
0.018	IN  GEN ^.layer_01.shape.mask = ?
0.018	IN  GEN ^.layer_0.shape.mask = ?
0.018	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) - (2, 0) and color yellow and mask Full at (?,max(^.layer_01.pos.j, ^.layer_011.pos.j))
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 95.7 + 3701.2 = 3796.9
DL output with Mo: L = 148.6 + 235.6 = 384.2
DL input+output M: L = 244.3 + 3936.8 = 4181.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) - (2, 0) and color yellow and mask Full at (?,max(^.layer_01.pos.j, ^.layer_011.pos.j))
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 148.6 + 235.6 = 384.2
DL input+output M: L = 237.8 + 255.6 = 493.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 770cc55f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 770cc55f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 770cc55f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 770cc55f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 770cc55f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.0 sec (7.0 sec/task)
bits-train-error = 235.6 bits (235.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-218] Checking task 782b5218.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 58344.2 = 58356.8
DL output with Mo: L = 12.6 + 50960.3 = 50972.9
DL input+output M: L = 25.2 + 109304.5 = 109329.7

# learning a model for train pairs
2.000	
1.329	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.960	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.433	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.358	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.317	OUT SPE ^.layer_01 = ^.layer_01
0.305	OUT SPE ^.size = ^.size
0.301	IN  SPE ^.layer_01.shape.color = red
0.283	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.280	OUT SPE ^.layer_0.pos.j = '0
0.276	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j + ^.layer_011.pos.j - ^.layer_01.pos.j
0.272	OUT SPE ^.layer_0.shape.size.i = ^.layer_011.shape.size.i - ^.layer_01.pos.j - ^.layer_0.pos.j
0.269	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
0.266	OUT SPE ^.layer_0.pos.i = ^.layer_01.pos.i + ^.layer_01111.shape.size.j
0.265	IN  SPE ^.layer_01111.shape.mask = Full
0.263	OUT SPE ^.color = black
0.027	
0.027	IN  GEN ^.layer_01111.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_011.shape.size.i - ^.layer_01.pos.j - ^.layer_0.pos.j,^.layer_0.shape.size.j + ^.layer_011.pos.j - ^.layer_01.pos.j) and color majorityColor(^.grid) and mask ? at (^.layer_01.pos.i + ^.layer_01111.shape.size.j,'0)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 143.2 + 13786.0 = 13929.2
DL output with Mo: L = 226.3 + 1027.4 = 1253.6
DL input+output M: L = 369.5 + 14813.4 = 15182.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_011.shape.size.i - ^.layer_01.pos.j - ^.layer_0.pos.j,^.layer_0.shape.size.j + ^.layer_011.pos.j - ^.layer_01.pos.j) and color majorityColor(^.grid) and mask ? at (^.layer_01.pos.i + ^.layer_01111.shape.size.j,'0)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.2 + 0.0 = 142.2
DL output with Mo: L = 226.3 + 1027.4 = 1253.6
DL input+output M: L = 368.5 + 1027.4 = 1395.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 782b5218.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 782b5218.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 782b5218.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 782b5218.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.8 sec (8.8 sec/task)
bits-train-error = 1027.4 bits (1027.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-217] Checking task 79369cc6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 191221.7 = 191234.3
DL output with Mo: L = 12.6 + 192767.5 = 192780.1
DL input+output M: L = 25.2 + 383989.2 = 384014.4

# learning a model for train pairs
2.000	
1.913	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.813	OUT ADD ^.layer_0 = ^.layer_0
1.739	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.653	OUT ADD ^.layer_01 = ^.layer_01
1.596	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.554	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.463	OUT ADD ^.layer_0111 = ^.layer_0111
1.427	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.395	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.370	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.348	OUT ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT SPE ^.layer_0111111.shape.size.i = ^.layer_01.shape.size.j / '2
1.339	OUT SPE ^.layer_0111111.shape.size.j = ^.layer_01.shape.size.j - 3
1.335	OUT SPE ^.size = ^.size
1.334	OUT SPE ^.layer_01111.shape.size.j = ^.layer_0111.shape.size.i
1.333	IN  SPE ^.layer_01.shape.color = cyan
0.593	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,^.layer_0111.shape.size.i) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (^.layer_01.shape.size.j / '2,^.layer_01.shape.size.j - 3) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 141557.4 = 141674.8
DL output with Mo: L = 215.2 + 113943.0 = 114158.1
DL input+output M: L = 332.6 + 255500.3 = 255833.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,^.layer_0111.shape.size.i) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (^.layer_01.shape.size.j / '2,^.layer_01.shape.size.j - 3) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 20.0 = 137.5
DL output with Mo: L = 215.2 + 113943.0 = 114158.1
DL input+output M: L = 332.6 + 113963.0 = 114295.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 79369cc6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 79369cc6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 79369cc6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 79369cc6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 113943.0 bits (113943.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-216] Checking task 7953d61e.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 18796.8 = 18809.4
DL output with Mo: L = 12.6 + 74998.4 = 75011.0
DL input+output M: L = 25.2 + 93795.2 = 93820.4

# learning a model for train pairs
2.000	
1.676	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.406	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.239	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.167	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.118	OUT ADD ^.layer_01 = ^.layer_011
1.090	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.075	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT SPE ^.size = ^.size * '2
1.059	OUT SPE ^.layer_0.pos.j = '0
1.022	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
1.019	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.i / '2
0.957	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.906	OUT SPE ^.layer_0111.pos.i = span(^.layer_0.pos.i, ^.layer_01111.pos.i) - ^.layer_0111.pos.i - ^.layer_011.pos.i
0.905	OUT SPE ^.layer_011.pos.j = ^.layer_01111.pos.i + ^.layer_011.pos.i - ^.layer_0.pos.i
0.472	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size * '2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i / '2,'0)
  _01: ^.layer_011
  _011: ^.layer_011.shape at (?,^.layer_01111.pos.i + ^.layer_011.pos.i - ^.layer_0.pos.i)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (span(^.layer_0.pos.i, ^.layer_01111.pos.i) - ^.layer_0111.pos.i - ^.layer_011.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 8214.2 = 8343.8
DL output with Mo: L = 257.6 + 34363.0 = 34620.7
DL input+output M: L = 387.2 + 42577.2 = 42964.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size * '2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_011.pos.i / '2,'0)
  _01: ^.layer_011
  _011: ^.layer_011.shape at (?,^.layer_01111.pos.i + ^.layer_011.pos.i - ^.layer_0.pos.i)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (span(^.layer_0.pos.i, ^.layer_01111.pos.i) - ^.layer_0111.pos.i - ^.layer_011.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 129.6 + 71.7 = 201.3
DL output with Mo: L = 257.6 + 34363.0 = 34620.7
DL input+output M: L = 387.2 + 34434.7 = 34821.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7953d61e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7953d61e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7953d61e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7953d61e.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7953d61e.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 7953d61e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.5 sec (56.5 sec/task)
bits-train-error = 34363.0 bits (34363.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-215] Checking task 79fb03f4.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 48918.1 = 48930.7
DL output with Mo: L = 12.6 + 130333.4 = 130346.0
DL input+output M: L = 25.2 + 179251.5 = 179276.7

# learning a model for train pairs
2.000	
1.567	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.403	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.345	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.306	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.271	OUT ADD ^.layer_00 = ^.layer_0
1.238	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.215	OUT ADD ^.layer_001 = ^.layer_01
1.206	OUT SPE ^.size = ^.size
1.202	OUT SPE ^.layer_0.shape.size.j = ^.size.j
1.198	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.195	IN  SPE ^.color = black
1.192	OUT SPE ^.layer_0.shape.color = blue
1.190	OUT SPE ^.layer_0.pos.j = '0
1.187	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.i + ^.layer_011.shape.size.j
1.185	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
1.183	OUT ADD ^.layer_0011 = a point with color ? at (?,?)
0.318	
0.318	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_01
  _0011: a point with color ? at (?,?)
  _0: a rectangle with size (?,^.size.j) and color blue and mask ? at (?,'0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,^.layer_0.pos.i + ^.layer_011.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 42410.4 = 42499.8
DL output with Mo: L = 177.0 + 40867.9 = 41044.9
DL input+output M: L = 266.4 + 83278.3 = 83544.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_01
  _0011: a point with color ? at (?,?)
  _0: a rectangle with size (?,^.size.j) and color blue and mask ? at (?,'0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,^.layer_0.pos.i + ^.layer_011.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 71.7 = 161.0
DL output with Mo: L = 177.0 + 40867.9 = 41044.9
DL input+output M: L = 266.2 + 40939.6 = 41205.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 79fb03f4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 79fb03f4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 79fb03f4.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 79fb03f4.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 79fb03f4.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 79fb03f4.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 79fb03f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 40867.9 bits (40867.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-214] Checking task 7bb29440.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 285292.0 = 285304.6
DL output with Mo: L = 12.6 + 5243.3 = 5255.9
DL input+output M: L = 25.2 + 290535.3 = 290560.5

# learning a model for train pairs
2.000	
1.480	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.279	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.195	OUT SPE ^.color = blue
1.153	OUT SPE ^.layer_0.pos.i = 2
1.129	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.973	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.881	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.849	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.829	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.825	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.821	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.819	IN  SPE ^.layer_011.shape.mask = Full
0.818	IN  SPE ^.layer_0.shape.color = blue
0.817	IN  SPE ^.layer_01.shape.color = blue
0.816	IN  SPE ^.layer_011.shape.color = blue
0.815	IN  SPE ^.layer_0111.shape.color = blue
0.814	IN  SPE ^.layer_0111111.shape.mask = Full
0.814	IN  SPE ^.color = black
0.674	
0.674	IN  DEL ^.layer_011
0.674	IN  DEL ^.layer_0111
0.674	IN  DEL ^.layer_01
0.674	IN  DEL ^.layer_0
0.674	IN  DEL ^.layer_0111111
0.674	IN  DEL ^.layer_011111
0.674	IN  DEL ^.layer_01111
0.674	IN  DEL ^.layer_01111111
0.674	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color blue and layers
  _0: a point with color ? at (2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 218.8 + 39864.6 = 40083.5
DL output with Mo: L = 41.1 + 3499.1 = 3540.2
DL input+output M: L = 259.9 + 43363.8 = 43623.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color blue and layers
  _0: a point with color ? at (2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 41.1 + 3499.1 = 3540.2
DL input+output M: L = 53.7 + 3499.1 = 3552.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7bb29440.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7bb29440.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7bb29440.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7bb29440.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7bb29440.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 7bb29440.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.4 sec (9.4 sec/task)
bits-train-error = 3499.1 bits (3499.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-213] Checking task 7c8af763.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 53065.0 = 53077.6
DL output with Mo: L = 12.6 + 62570.5 = 62583.1
DL input+output M: L = 25.2 + 115635.5 = 115660.7

# learning a model for train pairs
2.000	
1.632	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.396	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.273	OUT ADD ^.layer_00 = ^.layer_0
1.151	OUT ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.033	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.940	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	OUT ADD ^.layer_001 = ^.layer_011
0.780	OUT ADD ^.layer_0011 = ^.layer_01
0.709	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.682	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.655	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	OUT ADD ^.layer_011 = ^.layer_01111
0.600	OUT ADD ^.layer_0010 = ^.layer_0111
0.590	OUT SPE ^.size = ^.size
0.585	OUT SPE ^.layer_01.pos = '(0, 0)
0.582	IN  SPE ^.layer_0.shape.color = grey
0.579	IN  SPE ^.layer_01.shape.color = grey
0.575	IN  SPE ^.layer_011.shape.color = grey
0.572	IN  SPE ^.layer_0111.shape.color = grey
0.161	
0.161	IN  GEN ^.layer_0111.shape.color = ?
0.161	IN  GEN ^.layer_011.shape.color = ?
0.161	IN  GEN ^.layer_01.shape.color = ?
0.161	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_0
  _0010: ^.layer_0111
  _001: ^.layer_011
  _0011: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _011: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 152.2 + 21583.7 = 21735.8
DL output with Mo: L = 162.6 + 10029.8 = 10192.4
DL input+output M: L = 314.8 + 31613.4 = 31928.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_0
  _0010: ^.layer_0111
  _001: ^.layer_011
  _0011: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _011: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 20.0 = 158.9
DL output with Mo: L = 162.6 + 9737.9 = 9900.5
DL input+output M: L = 301.5 + 9757.9 = 10059.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7c8af763.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7c8af763.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7c8af763.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 7c8af763.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.8 sec (60.8 sec/task)
bits-train-error = 9737.9 bits (9737.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-212] Checking task 7c9b52a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 53696.1 = 53708.7
DL output with Mo: L = 12.6 + 10376.4 = 10389.0
DL input+output M: L = 25.2 + 64072.5 = 64097.7

# learning a model for train pairs
2.000	
1.343	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.037	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.787	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.719	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	OUT SPE ^.layer_011.shape.size = '(1, 2)
0.682	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.671	OUT SPE ^.layer_01.pos.i = 1
0.661	OUT SPE ^.layer_01.shape.mask = Full
0.652	OUT SPE ^.layer_011.shape.mask = Full
0.644	OUT SPE ^.color = black
0.643	IN  SPE ^.color = black
0.578	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.457	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.438	OUT SPE ^.size.j = ^.layer_010.shape.size.i + 2
0.420	OUT SPE ^.size.i = area(^.layer_010.shape)
0.405	OUT SPE ^.layer_01.shape.size.i = ^.layer_010.shape.size.i
0.390	OUT SPE ^.layer_01.shape.color = ^.layer_010.shape.color
0.381	OUT SPE ^.layer_01.pos.j = ^.layer_010.pos.i / colorCount(^.grid)
0.376	OUT SPE ^.layer_011.pos.i = average(^.layer_0.pos.j, ^.layer_010.pos.j) - ^.layer_010.shape.size.i
0.154	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_010.shape),^.layer_010.shape.size.i + 2) and color black and layers
  _0: ^.layer_01.shape at (?,^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_010.shape.size.i,?) and color ^.layer_010.shape.color and mask Full at (1,^.layer_010.pos.i / colorCount(^.grid))
  _011: a rectangle with size '(1, 2) and color ? and mask Full at (average(^.layer_0.pos.j, ^.layer_010.pos.j) - ^.layer_010.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 11954.6 = 12044.0
DL output with Mo: L = 290.0 + 1281.6 = 1571.6
DL input+output M: L = 379.4 + 13236.2 = 13615.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (area(^.layer_010.shape),^.layer_010.shape.size.i + 2) and color black and layers
  _0: ^.layer_01.shape at (?,^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_010.shape.size.i,?) and color ^.layer_010.shape.color and mask Full at (1,^.layer_010.pos.i / colorCount(^.grid))
  _011: a rectangle with size '(1, 2) and color ? and mask Full at (average(^.layer_0.pos.j, ^.layer_010.pos.j) - ^.layer_010.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 40.0 = 129.4
DL output with Mo: L = 290.0 + 1281.6 = 1571.6
DL input+output M: L = 379.4 + 1321.6 = 1701.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7c9b52a0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7c9b52a0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7c9b52a0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST 7c9b52a0.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 20.0 sec (20.0 sec/task)
bits-train-error = 1281.6 bits (1281.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-211] Checking task 7d18a6fb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 88434.6 = 88447.2
DL output with Mo: L = 12.6 + 23292.6 = 23305.2
DL input+output M: L = 25.2 + 111727.2 = 111752.4

# learning a model for train pairs
2.000	
1.423	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.212	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.020	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.826	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.609	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.550	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.495	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.448	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.405	OUT SPE ^.layer_011.shape = ^.layer_0111.shape
0.362	OUT SPE ^.layer_01.shape = ^.layer_011.shape
0.333	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.310	OUT SPE ^.size = ^.layer_0.shape.size
0.294	OUT SPE ^.layer_0111.shape.size = ^.layer_0111.shape.size
0.277	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size
0.265	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.259	OUT SPE ^.layer_0111.shape.color = ^.layer_0111111.shape.color
0.252	OUT SPE ^.layer_01.pos.j = '0
0.246	OUT SPE ^.layer_0111.pos.i = '0
0.240	IN  SPE ^.layer_0.shape.mask = xxxxxxx|x.xxx.x|xxxxxxx|xxxxxxx|xxxxxxx|x.xxx.x|xxxxxxx
0.233	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.222	OUT SPE ^.layer_011.pos = '(0, 0) + translationSym(rotate270, ^.layer_0, ^.layer_01111111)
0.219	OUT SPE ^.color = black
0.217	IN  SPE ^.layer_0.shape.color = blue
0.216	IN  SPE ^.color = black
0.080	
0.080	IN  GEN ^.layer_0.shape.mask = ?
0.080	IN  GEN ^.layer_0.shape.color = ?
0.080	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _01: ^.layer_011.shape at (?,'0)
  _011: ^.layer_0111.shape at '(0, 0) + translationSym(rotate270, ^.layer_0, ^.layer_01111111)
  _0111: a rectangle with size ^.layer_0111.shape.size and color ^.layer_0111111.shape.color and mask ? at ('0,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask xxxxxxx|x.xxx.x|xxxxxxx|xxxxxxx|xxxxxxx|x.xxx.x|xxxxxxx at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 231.8 + 12058.7 = 12290.4
DL output with Mo: L = 193.5 + 1601.2 = 1794.8
DL input+output M: L = 425.3 + 13659.9 = 14085.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _01: ^.layer_011.shape at (?,'0)
  _011: ^.layer_0111.shape at '(0, 0) + translationSym(rotate270, ^.layer_0, ^.layer_01111111)
  _0111: a rectangle with size ^.layer_0111.shape.size and color ^.layer_0111111.shape.color and mask ? at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 203.4 + 40.0 = 243.4
DL output with Mo: L = 193.5 + 1601.2 = 1794.8
DL input+output M: L = 397.0 + 1641.2 = 2038.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7d18a6fb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7d18a6fb.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7d18a6fb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 7d18a6fb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 1601.2 bits (1601.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-210] Checking task 7d1f7ee8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 180001.6 = 180014.2
DL output with Mo: L = 12.6 + 180001.6 = 180014.2
DL input+output M: L = 25.2 + 360003.3 = 360028.5

# learning a model for train pairs
2.000	
1.662	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.316	OUT ADD ^.layer_0 = ^.layer_0
1.073	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.668	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.529	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.421	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.313	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.256	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.200	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.144	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.128	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.113	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.055	
0.054	IN  DEL ^.layer_011111
0.054	IN  DEL ^.layer_01111
0.054	IN  DEL ^.layer_0111
0.054	IN  DEL ^.layer_011
0.054	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 10545.4 = 10709.0
DL output with Mo: L = 167.7 + 9482.3 = 9650.0
DL input+output M: L = 331.2 + 20027.8 = 20359.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 167.7 + 9484.2 = 9651.9
DL input+output M: L = 206.5 + 9484.2 = 9690.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7d1f7ee8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7d1f7ee8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7d1f7ee8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 7d1f7ee8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 9484.2 bits (9484.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-209] Checking task 7d419a02.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 151174.2 = 151186.8
DL output with Mo: L = 12.6 + 156571.4 = 156584.1
DL input+output M: L = 25.2 + 307745.6 = 307770.8

# learning a model for train pairs
2.000	
1.495	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.071	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.949	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.586	
0.586	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 54947.5 = 55011.8
DL output with Mo: L = 53.0 + 91587.6 = 91640.6
DL input+output M: L = 117.2 + 146535.2 = 146652.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 51.7 = 90.5
DL output with Mo: L = 53.0 + 91587.6 = 91640.6
DL input+output M: L = 91.9 + 91639.3 = 91731.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7d419a02.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7d419a02.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 7d419a02.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 7d419a02.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.9 sec (56.9 sec/task)
bits-train-error = 91587.6 bits (91587.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-208] Checking task 7e02026e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 73599.8 = 73612.4
DL output with Mo: L = 12.6 + 75929.9 = 75942.5
DL input+output M: L = 25.2 + 149529.7 = 149554.9

# learning a model for train pairs
2.000	
1.208	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.517	OUT ADD ^.layer_00 = ^.layer_0
0.429	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.386	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.362	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.354	OUT SPE ^.size = ^.size
0.350	OUT SPE ^.layer_01.shape.color = green
0.347	IN  SPE ^.layer_0.shape.color = cyan
0.210	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.189	OUT ADD ^.layer_010 = ^.layer_01
0.187	OUT SPE ^.layer_0.shape.size.j = 3
0.184	IN  SPE ^.layer_01.shape.color = cyan
0.182	OUT SPE ^.layer_0.shape.color = green
0.180	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j
0.178	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.j * '2
0.177	OUT SPE ^.layer_0111.pos.j = bottom(^.layer_01) + ^.layer_01.pos.i - ^.layer_0.pos.i
0.176	OUT SPE ^.layer_0111.shape.size.j = 1
0.174	OUT SPE ^.layer_0111.shape.mask = Full
0.173	IN  SPE ^.color = black
0.172	OUT SPE ^.color = black
0.047	
0.047	IN  GEN ^.layer_01.shape.color = ?
0.047	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,3) and color green and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color green and mask ? at (^.layer_0.pos.j * '2,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,bottom(^.layer_01) + ^.layer_01.pos.i - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 9245.1 = 9316.1
DL output with Mo: L = 232.0 + 3252.8 = 3484.8
DL input+output M: L = 303.0 + 12497.9 = 12800.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,3) and color green and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color green and mask ? at (^.layer_0.pos.j * '2,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,bottom(^.layer_01) + ^.layer_01.pos.i - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 20.0 = 84.4
DL output with Mo: L = 232.0 + 3252.8 = 3484.8
DL input+output M: L = 296.4 + 3272.8 = 3569.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7e02026e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7e02026e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7e02026e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 7e02026e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.1 sec (24.1 sec/task)
bits-train-error = 3252.8 bits (3252.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-207] Checking task 7ee1c6ea.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 76653.6 = 76666.2
DL output with Mo: L = 12.6 + 77398.2 = 77410.8
DL input+output M: L = 25.2 + 154051.7 = 154077.0

# learning a model for train pairs
2.000	
1.647	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.282	OUT ADD ^.layer_0 = ^.layer_0
1.138	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.011	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.963	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.917	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.867	OUT ADD ^.layer_0111 = ^.layer_01
0.843	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.370	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 36294.1 = 36383.4
DL output with Mo: L = 101.9 + 28386.4 = 28488.3
DL input+output M: L = 191.2 + 64680.5 = 64871.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 51.7 = 141.0
DL output with Mo: L = 101.9 + 28386.4 = 28488.3
DL input+output M: L = 191.2 + 28438.1 = 28629.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7ee1c6ea.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 7ee1c6ea.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 7ee1c6ea.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 7ee1c6ea.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 28386.4 bits (28386.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-206] Checking task 817e6c09.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41524.3 = 41537.0
DL output with Mo: L = 12.6 + 41524.3 = 41537.0
DL input+output M: L = 25.2 + 83048.7 = 83073.9

# learning a model for train pairs
2.000	
1.769	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.609	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.428	OUT ADD ^.layer_0 = ^.layer_01.shape at (?,?)
1.286	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.263	OUT SPE ^.size = ^.size
1.250	OUT SPE ^.layer_01.shape.size = '(2, 2)
1.244	IN  SPE ^.layer_0.shape.color = red
1.237	IN  SPE ^.layer_01.shape.color = red
1.230	OUT SPE ^.layer_01.shape.color = cyan
1.226	IN  SPE ^.layer_01.shape.mask = Full
1.222	OUT SPE ^.layer_01.shape.mask = Full
0.632	
0.631	IN  DEL ^.layer_0
0.631	IN  GEN ^.layer_01.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_01.shape at (?,?)
  _01: a rectangle with size '(2, 2) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 71.9 + 24508.9 = 24580.8
DL output with Mo: L = 71.9 + 26097.5 = 26169.4
DL input+output M: L = 143.8 + 50606.4 = 50750.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_01.shape at (?,?)
  _01: a rectangle with size '(2, 2) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 39.8 + 0.0 = 39.8
DL output with Mo: L = 71.9 + 26097.5 = 26169.4
DL input+output M: L = 111.7 + 26097.5 = 26209.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 817e6c09.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 817e6c09.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 817e6c09.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 817e6c09.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 817e6c09.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 817e6c09.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.0 sec (54.0 sec/task)
bits-train-error = 26097.5 bits (26097.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-205] Checking task 81c0276b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 148966.6 = 148979.2
DL output with Mo: L = 12.6 + 6086.4 = 6099.0
DL input+output M: L = 25.2 + 155053.0 = 155078.2

# learning a model for train pairs
2.000	
1.407	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.034	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.826	OUT SPE ^.layer_01.shape.size = '(1, 2)
0.802	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.758	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, '(1, 2))
0.739	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.720	OUT SPE ^.layer_01.pos.j = '0
0.703	OUT SPE ^.layer_0.shape.size.i = 1
0.687	OUT SPE ^.layer_0.shape.mask = Full
0.305	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,^.layer_0.pos.j)
  _01: scaleTo(^.layer_01.shape, '(1, 2)) at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 57016.2 = 57080.4
DL output with Mo: L = 80.9 + 1773.3 = 1854.2
DL input+output M: L = 145.1 + 58789.5 = 58934.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,^.layer_0.pos.j)
  _01: scaleTo(^.layer_01.shape, '(1, 2)) at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 31.7 = 95.9
DL output with Mo: L = 80.9 + 1773.3 = 1854.2
DL input+output M: L = 145.1 + 1805.0 = 1950.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 81c0276b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 81c0276b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 81c0276b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 81c0276b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.1 sec (57.1 sec/task)
bits-train-error = 1773.3 bits (1773.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-204] Checking task 833dafe3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 5927.6 = 5940.2
DL output with Mo: L = 12.6 + 23792.6 = 23805.2
DL input+output M: L = 25.2 + 29720.2 = 29745.4

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], applySym(rotate180, ^.grid))
0.713	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.361	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.343	IN  SPE ^.layer_0.shape.color = green
0.324	IN  SPE ^.layer_01.shape.color = yellow
0.313	IN  SPE ^.layer_01.shape.mask = Full
0.302	IN  SPE ^.layer_011.shape.mask = Full
0.294	IN  SPE ^.color = black
0.017	
0.013	IN  DEL ^.layer_01
0.008	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_011
0.003	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], applySym(rotate180, ^.grid))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 98.0 + 1642.5 = 1740.6
DL output with Mo: L = 23.0 + 0.0 = 23.0
DL input+output M: L = 121.0 + 1642.5 = 1763.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], applySym(rotate180, ^.grid))
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 23.0 + 0.0 = 23.0
DL input+output M: L = 35.6 + 0.0 = 35.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 833dafe3.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 833dafe3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 833dafe3.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-203] Checking task 845d6e51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 54914.2 = 54926.9
DL output with Mo: L = 12.6 + 54914.2 = 54926.9
DL input+output M: L = 25.2 + 109828.5 = 109853.7

# learning a model for train pairs
2.000	
1.791	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.541	OUT ADD ^.layer_0 = ^.layer_0
1.473	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.383	OUT ADD ^.layer_01 = ^.layer_01
1.300	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
1.232	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.164	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.095	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.083	OUT SPE ^.size = ^.size
1.072	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.042	OUT ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.032	IN  ADD ^.layer_010 = a point with color ? at (?,?)
1.025	OUT SPE ^.layer_0111.shape.size = '(2, 3)
1.016	OUT SPE ^.layer_011111.shape.size.i = 3
1.010	OUT SPE ^.layer_0111111.pos = ^.layer_010.pos
1.007	IN  SPE ^.layer_0.shape.color = grey
1.004	OUT SPE ^.layer_01111.shape.size.j = ^.layer_01.shape.size.i
1.001	OUT SPE ^.layer_0111111.shape.size.j = 2
0.998	OUT SPE ^.layer_01111111.shape.size.j = 2
0.995	OUT SPE ^.layer_01111111.pos.i = ^.layer_010.pos.j + 2
0.992	OUT SPE ^.layer_0111111.shape.color = ^.layer_010.shape.color
0.990	OUT SPE ^.layer_01111111.shape.color = ^.layer_010.shape.color
0.988	OUT SPE ^.layer_0111111.shape.size.i = ^.layer_0.shape.size.i - ^.layer_01.shape.size.i
0.986	OUT SPE ^.layer_01111111.shape.size.i = ^.layer_0.shape.size.i - ^.layer_01.shape.size.i
0.984	OUT SPE ^.layer_011111.shape.size.j = ^.layer_0.shape.size.i - ^.layer_01.shape.size.i
0.983	IN  SPE ^.color = black
0.981	OUT SPE ^.color = black
0.275	
0.275	IN  GEN ^.layer_0.shape.color = ?
0.275	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_01.shape at (?,?)
  _0111: a rectangle with size '(2, 3) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,^.layer_01.shape.size.i) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (3,^.layer_0.shape.size.i - ^.layer_01.shape.size.i) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.shape.size.i,2) and color ^.layer_010.shape.color and mask ? at ^.layer_010.pos
  _01111111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.shape.size.i,2) and color ^.layer_010.shape.color and mask ? at (^.layer_010.pos.j + 2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 83.4 + 38841.2 = 38924.7
DL output with Mo: L = 374.0 + 14598.9 = 14972.9
DL input+output M: L = 457.4 + 53440.1 = 53897.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_01.shape at (?,?)
  _0111: a rectangle with size '(2, 3) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,^.layer_01.shape.size.i) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (3,^.layer_0.shape.size.i - ^.layer_01.shape.size.i) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.shape.size.i,2) and color ^.layer_010.shape.color and mask ? at ^.layer_010.pos
  _01111111: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.shape.size.i,2) and color ^.layer_010.shape.color and mask ? at (^.layer_010.pos.j + 2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.0 + 40.0 = 120.0
DL output with Mo: L = 374.0 + 14598.9 = 14972.9
DL input+output M: L = 454.0 + 14638.9 = 15092.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 845d6e51.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 845d6e51.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 845d6e51.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 845d6e51.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.6 sec (58.6 sec/task)
bits-train-error = 14598.9 bits (14598.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-202] Checking task 84db8fc4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 88072.8 = 88085.4
DL output with Mo: L = 12.6 + 102043.2 = 102055.8
DL input+output M: L = 25.2 + 190116.0 = 190141.3

# learning a model for train pairs
2.000	
1.665	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.489	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.278	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.156	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.492	
0.491	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 58544.5 = 58583.3
DL output with Mo: L = 138.9 + 49977.8 = 50116.6
DL input+output M: L = 177.7 + 108522.3 = 108700.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 49977.8 = 50116.6
DL input+output M: L = 151.5 + 49977.8 = 50129.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 84db8fc4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 84db8fc4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 84db8fc4.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 84db8fc4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 84db8fc4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.3 sec (59.3 sec/task)
bits-train-error = 49977.8 bits (49977.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-201] Checking task 84f2aca1.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41884.7 = 41897.3
DL output with Mo: L = 12.6 + 48678.6 = 48691.2
DL input+output M: L = 25.2 + 90563.3 = 90588.5

# learning a model for train pairs
2.000	
1.696	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.406	OUT ADD ^.layer_0 = ^.layer_0
1.252	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.183	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.019	OUT ADD ^.layer_010 = ^.layer_01
0.869	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	OUT ADD ^.layer_011 = ^.layer_011
0.602	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.461	OUT ADD ^.layer_0111 = ^.layer_0111
0.445	OUT SPE ^.size = ^.size
0.442	OUT SPE ^.layer_01.shape.size.j = min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.438	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j + ^.layer_01.shape.size.j
0.436	OUT SPE ^.layer_01.shape.mask = Full
0.433	OUT SPE ^.layer_01.pos.i = max(^.layer_0.pos.i, ^.layer_0111.pos.i) + ^.layer_01.shape.size.j
0.430	IN  SPE ^.color = black
0.428	OUT SPE ^.color = black
0.136	
0.136	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)) and color ? and mask Full at (max(^.layer_0.pos.i, ^.layer_0111.pos.i) + ^.layer_01.shape.size.j,^.layer_0.pos.j + ^.layer_01.shape.size.j)
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 12282.8 = 12397.0
DL output with Mo: L = 177.2 + 6271.5 = 6448.7
DL input+output M: L = 291.5 + 18554.2 = 18845.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)) and color ? and mask Full at (max(^.layer_0.pos.i, ^.layer_0111.pos.i) + ^.layer_01.shape.size.j,^.layer_0.pos.j + ^.layer_01.shape.size.j)
  _011: ^.layer_011
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 40.0 = 154.1
DL output with Mo: L = 177.2 + 6271.5 = 6448.7
DL input+output M: L = 291.4 + 6311.5 = 6602.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 84f2aca1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 84f2aca1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 84f2aca1.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 84f2aca1.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 84f2aca1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.6 sec (7.6 sec/task)
bits-train-error = 6271.5 bits (6271.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-200] Checking task 8597cfd7.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30860.4 = 30873.0
DL output with Mo: L = 12.6 + 784.4 = 797.0
DL input+output M: L = 25.2 + 31644.8 = 31670.0

# learning a model for train pairs
2.000	
1.476	OUT SPE ^.size = '(2, 2)
1.085	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.909	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.791	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.356	OUT SPE ^.color = ^.layer_0.shape.color
0.292	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.264	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.257	IN  SPE ^.layer_00.shape.color = grey
0.249	IN  SPE ^.layer_01.shape.color = yellow
0.242	IN  SPE ^.layer_0111.shape.color = red
0.238	IN  SPE ^.layer_00.shape.mask = Full
0.233	IN  SPE ^.layer_0.shape.mask = Full
0.229	IN  SPE ^.layer_01.shape.mask = Full
0.225	IN  SPE ^.layer_011.shape.mask = Full
0.222	IN  SPE ^.color = black
0.041	
0.040	IN  DEL ^.layer_011
0.039	IN  DEL ^.layer_0111
0.039	IN  GEN ^.layer_00.shape.color = ?
0.039	IN  GEN ^.layer_01.shape.mask = ?
0.039	IN  GEN ^.layer_0.shape.mask = ?
0.039	IN  GEN ^.layer_00.shape.mask = ?
0.039	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color red at (?,?)

DL input  with Mi: L = 143.7 + 5579.9 = 5723.6
DL output with Mo: L = 28.8 + 0.0 = 28.8
DL input+output M: L = 172.5 + 5579.9 = 5752.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 0.0 = 92.6
DL output with Mo: L = 28.8 + 0.0 = 28.8
DL input+output M: L = 121.4 + 0.0 = 121.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8597cfd7.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8597cfd7.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8597cfd7.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8597cfd7.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 8597cfd7.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-199] Checking task 85b81ff1.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 107492.4 = 107505.0
DL output with Mo: L = 12.6 + 107492.4 = 107505.0
DL input+output M: L = 25.2 + 214984.7 = 215010.0

# learning a model for train pairs
2.000	
1.758	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.497	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.269	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.823	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.620	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.407	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.225	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.217	OUT SPE ^.size = ^.size
0.209	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.201	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.195	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.191	OUT SPE ^.layer_0.pos = '(0, 1)
0.186	OUT SPE ^.layer_0111.pos = max(^.layer_0.pos, ^.layer_0111.pos)
0.183	OUT SPE ^.color = ^.color
0.180	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.177	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i
0.175	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.173	OUT SPE ^.layer_01111.shape = ^.layer_01111.shape
0.171	OUT SPE ^.layer_01111.pos.j = bottom(^.layer_0111) + 1
0.169	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.167	IN  SPE ^.layer_0.shape.color = black
0.165	IN  SPE ^.layer_01.shape.color = black
0.163	IN  SPE ^.layer_011.shape.color = black
0.160	IN  SPE ^.layer_0111.shape.color = black
0.158	IN  SPE ^.layer_01111.shape.color = black
0.156	IN  SPE ^.layer_011111.shape.color = black
0.154	OUT SPE ^.layer_011.pos = max(^.layer_0.pos, ^.layer_0111.pos) - (0, 3)
0.153	OUT SPE ^.layer_01.pos = projJ(^.layer_011111.pos) + ^.layer_011.pos - ^.layer_0.pos
0.021	
0.021	IN  GEN ^.layer_011111.shape.color = ?
0.021	IN  GEN ^.layer_01111.shape.color = ?
0.021	IN  GEN ^.layer_0111.shape.color = ?
0.021	IN  GEN ^.layer_011.shape.color = ?
0.021	IN  GEN ^.layer_01.shape.color = ?
0.021	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0.shape at '(0, 1)
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at projJ(^.layer_011111.pos) + ^.layer_011.pos - ^.layer_0.pos
  _011: ^.layer_01.shape at max(^.layer_0.pos, ^.layer_0111.pos) - (0, 3)
  _0111: ^.layer_011.shape at max(^.layer_0.pos, ^.layer_0111.pos)
  _01111: ^.layer_01111.shape at (?,bottom(^.layer_0111) + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01111: a point with color black at (?,?)
  _011111: a point with color black at (?,?)

DL input  with Mi: L = 164.9 + 14140.7 = 14305.6
DL output with Mo: L = 237.4 + 1885.5 = 2122.9
DL input+output M: L = 402.3 + 16026.2 = 16428.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0.shape at '(0, 1)
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at projJ(^.layer_011111.pos) + ^.layer_011.pos - ^.layer_0.pos
  _011: ^.layer_01.shape at max(^.layer_0.pos, ^.layer_0111.pos) - (0, 3)
  _0111: ^.layer_011.shape at max(^.layer_0.pos, ^.layer_0111.pos)
  _01111: ^.layer_01111.shape at (?,bottom(^.layer_0111) + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 145.0 + 20.0 = 165.0
DL output with Mo: L = 237.4 + 1885.5 = 2122.9
DL input+output M: L = 382.3 + 1905.5 = 2287.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 85b81ff1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 85b81ff1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 85b81ff1.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 85b81ff1.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 85b81ff1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 35.5 sec (35.5 sec/task)
bits-train-error = 1885.5 bits (1885.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-198] Checking task 85fa5666.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 28127.0 = 28139.6
DL output with Mo: L = 12.6 + 52218.1 = 52230.7
DL input+output M: L = 25.2 + 80345.1 = 80370.3

# learning a model for train pairs
2.000	
1.823	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.655	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.520	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.390	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.298	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.208	OUT ADD ^.layer_00 = ^.layer_0
1.133	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.064	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
1.015	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.973	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.936	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.906	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.877	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.861	OUT SPE ^.size = ^.size
0.853	OUT SPE ^.layer_01111.pos = ^.layer_0111.pos + translationSym(flipHeight, ^.layer_0111, ^.layer_0)
0.845	IN  SPE ^.layer_0.shape.color = red
0.841	IN  SPE ^.layer_0.shape.mask = Full
0.836	IN  SPE ^.layer_01.shape.mask = Full
0.306	
0.306	IN  GEN ^.layer_0.shape.color = ?
0.306	IN  GEN ^.layer_01.shape.mask = ?
0.306	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0111.pos + translationSym(flipHeight, ^.layer_0111, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 125.6 + 14912.9 = 15038.6
DL output with Mo: L = 217.6 + 15530.0 = 15747.6
DL input+output M: L = 343.2 + 30442.9 = 30786.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0111.pos + translationSym(flipHeight, ^.layer_0111, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 120.3 + 0.0 = 120.3
DL output with Mo: L = 217.6 + 15530.0 = 15747.6
DL input+output M: L = 337.9 + 15530.0 = 15867.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 85fa5666.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 85fa5666.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 85fa5666.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 85fa5666.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 85fa5666.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 62.8 sec (62.8 sec/task)
bits-train-error = 15530.0 bits (15530.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-197] Checking task 8719f442.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4369.4 = 4382.0
DL output with Mo: L = 12.6 + 60917.6 = 60930.2
DL input+output M: L = 25.2 + 65287.0 = 65312.2

# learning a model for train pairs
2.000	
1.122	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.502	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	IN  SPE ^.layer_0.shape.color = grey
0.447	IN  SPE ^.color = black
0.437	OUT SPE ^.layer_0.shape.size = tiling(^.layer_0.shape.size + (2, 2), 3, 3)
0.426	OUT SPE ^.size = tiling(^.size + (2, 2), 3, 3)
0.420	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.417	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.416	OUT SPE ^.color = black
0.101	
0.100	IN  GEN ^.layer_0.shape.color = ?
0.100	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size + (2, 2), 3, 3) and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size + (2, 2), 3, 3) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1381.9 = 1424.2
DL output with Mo: L = 89.7 + 5451.9 = 5541.6
DL input+output M: L = 132.0 + 6833.9 = 6965.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size + (2, 2), 3, 3) and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size + (2, 2), 3, 3) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 89.7 + 5451.9 = 5541.6
DL input+output M: L = 128.5 + 5451.9 = 5580.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8719f442.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 8719f442.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 8719f442.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 8719f442.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 5451.9 bits (5451.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-196] Checking task 88207623.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27235.8 = 27248.4
DL output with Mo: L = 12.6 + 43029.3 = 43041.9
DL input+output M: L = 25.2 + 70265.1 = 70290.3

# learning a model for train pairs
2.000	
1.665	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.424	OUT ADD ^.layer_0 = ^.layer_0
1.212	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.000	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.839	OUT ADD ^.layer_011 = ^.layer_01
0.694	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	OUT ADD ^.layer_0110 = ^.layer_011
0.361	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.288	OUT ADD ^.layer_01111 = ^.layer_0111
0.272	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.257	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.244	OUT SPE ^.layer_01.shape.mask = applySym(flipWidth, ^.layer_0.shape.mask)
0.233	OUT SPE ^.layer_0111.shape.mask = applySym(flipWidth, ^.layer_01.shape.mask)
0.222	OUT SPE ^.size = ^.size
0.215	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size
0.208	OUT SPE ^.layer_0111.shape.size = ^.layer_01.shape.size
0.202	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos + (0, 1)
0.197	OUT SPE ^.layer_01.pos = min(^.layer_01.pos, ^.layer_011.pos) + (0, 1)
0.193	IN  SPE ^.layer_0.shape.color = yellow
0.189	IN  SPE ^.layer_01.shape.color = yellow
0.185	IN  SPE ^.layer_011.shape.color = red
0.181	IN  SPE ^.layer_0111.shape.color = red
0.179	IN  SPE ^.layer_011.shape.mask = Full
0.176	IN  SPE ^.layer_0111.shape.mask = Full
0.174	OUT SPE ^.layer_0111.shape.color = ^.layer_011111.shape.color
0.172	OUT SPE ^.layer_01.shape.color = ^.layer_01111.shape.color
0.170	IN  SPE ^.color = black
0.169	OUT SPE ^.color = black
0.011	
0.011	IN  GEN ^.layer_0111.shape.color = ?
0.010	IN  GEN ^.layer_011.shape.color = ?
0.010	IN  GEN ^.layer_01.shape.color = ?
0.010	IN  GEN ^.layer_0.shape.color = ?
0.010	IN  GEN ^.layer_0111.shape.mask = ?
0.010	IN  GEN ^.layer_011.shape.mask = ?
0.010	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size and color ^.layer_01111.shape.color and mask applySym(flipWidth, ^.layer_0.shape.mask) at min(^.layer_01.pos, ^.layer_011.pos) + (0, 1)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size ^.layer_01.shape.size and color ^.layer_011111.shape.color and mask applySym(flipWidth, ^.layer_01.shape.mask) at ^.layer_0111.pos + (0, 1)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 160.4 + 4315.7 = 4476.1
DL output with Mo: L = 205.5 + 0.0 = 205.5
DL input+output M: L = 365.9 + 4315.7 = 4681.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size and color ^.layer_01111.shape.color and mask applySym(flipWidth, ^.layer_0.shape.mask) at min(^.layer_01.pos, ^.layer_011.pos) + (0, 1)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size ^.layer_01.shape.size and color ^.layer_011111.shape.color and mask applySym(flipWidth, ^.layer_01.shape.mask) at ^.layer_0111.pos + (0, 1)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 145.0 + 0.0 = 145.0
DL output with Mo: L = 205.5 + 0.0 = 205.5
DL input+output M: L = 350.5 + 0.0 = 350.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 88207623.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 88207623.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 88207623.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.5 sec (15.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-195] Checking task 891232d6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 95428.7 = 95441.3
DL output with Mo: L = 12.6 + 159144.3 = 159156.9
DL input+output M: L = 25.2 + 254573.0 = 254598.2

# learning a model for train pairs
2.000	
1.879	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.780	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.686	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.608	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.544	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.489	OUT ADD ^.layer_00 = ^.layer_0
1.444	OUT ADD ^.layer_011 = ^.layer_01
1.408	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.377	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.350	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.326	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.275	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.600	
0.600	IN  DEL ^.layer_01111
0.587	IN  DEL ^.layer_0111
0.587	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 64415.8 = 64554.7
DL output with Mo: L = 153.5 + 95044.3 = 95197.8
DL input+output M: L = 292.4 + 159460.1 = 159752.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 31.7 = 95.9
DL output with Mo: L = 153.5 + 93038.3 = 93191.8
DL input+output M: L = 217.7 + 93070.0 = 93287.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 891232d6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 891232d6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 891232d6.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 891232d6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 891232d6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 93038.3 bits (93038.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-194] Checking task 896d5239.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 108106.6 = 108119.2
DL output with Mo: L = 12.6 + 118430.9 = 118443.5
DL input+output M: L = 25.2 + 226537.5 = 226562.7

# learning a model for train pairs
2.000	
1.390	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.915	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.851	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.746	OUT SPE ^.layer_01.pos = projJ(^.layer_0.pos)
0.700	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.310	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at projJ(^.layer_0.pos)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 42178.3 = 42217.2
DL output with Mo: L = 148.2 + 36531.3 = 36679.5
DL input+output M: L = 187.0 + 78709.6 = 78896.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at projJ(^.layer_0.pos)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 148.2 + 36531.3 = 36679.5
DL input+output M: L = 187.0 + 36531.3 = 36718.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 896d5239.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 896d5239.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 896d5239.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 896d5239.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.9 sec (59.9 sec/task)
bits-train-error = 36531.3 bits (36531.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-193] Checking task 8a371977.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 225387.1 = 225399.7
DL output with Mo: L = 12.6 + 234615.0 = 234627.6
DL input+output M: L = 25.2 + 460002.1 = 460027.3

# learning a model for train pairs
2.000	
1.072	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.553	OUT ADD ^.layer_0 = ^.layer_0
0.451	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.448	OUT SPE ^.size = ^.size
0.448	IN  SPE ^.layer_0.shape.color = blue
0.447	OUT SPE ^.layer_01.shape.mask = Full
0.447	IN  SPE ^.color = black
0.376	
0.376	IN  GEN ^.layer_0.shape.color = ?
0.376	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 15995.8 = 16038.1
DL output with Mo: L = 41.5 + 88091.5 = 88133.0
DL input+output M: L = 83.8 + 104087.3 = 104171.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 41.5 + 88091.5 = 88133.0
DL input+output M: L = 80.3 + 88091.5 = 88171.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8a371977.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8a371977.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8a371977.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 8a371977.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 88091.5 bits (88091.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-192] Checking task 8b28cd80.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2557.6 = 2570.3
DL output with Mo: L = 12.6 + 66473.2 = 66485.8
DL input+output M: L = 25.2 + 69030.8 = 69056.0

# learning a model for train pairs
2.000	
1.574	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.165	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.773	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.725	IN  SPE ^.color = black
0.711	OUT SPE ^.size = tiling(^.size, 3, 3)
0.704	OUT SPE ^.color = majorityColor(^.grid)
0.699	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.685	OUT SPE ^.layer_0.shape.color = black
0.681	OUT SPE ^.layer_01.shape.color = black
0.677	OUT SPE ^.layer_011.shape.color = black
0.672	OUT SPE ^.layer_0111.shape.color = black
0.668	OUT SPE ^.layer_01111.shape.color = black
0.664	OUT SPE ^.layer_011111.shape.color = black
0.660	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.i
0.658	OUT SPE ^.layer_011.shape.mask = Full
0.655	OUT SPE ^.layer_0.shape.mask = Full
0.653	OUT SPE ^.layer_011.shape.size.i = 1
0.649	OUT SPE ^.layer_011111.pos.i = ^.layer_0.pos.i
0.646	OUT SPE ^.layer_011111.shape.mask = Full
0.644	OUT SPE ^.layer_011111.shape.size.j = 1
0.641	OUT SPE ^.layer_01.shape.mask = Full
0.127	
0.127	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color majorityColor(^.grid) and layers
  _0: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color black and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color black and mask ? at (^.layer_0.pos.i,?)
  _01111: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _011111: a rectangle with size (?,1) and color black and mask Full at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1322.1 = 1351.7
DL output with Mo: L = 231.0 + 7429.4 = 7660.4
DL input+output M: L = 260.7 + 8751.5 = 9012.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color majorityColor(^.grid) and layers
  _0: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color black and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color black and mask ? at (^.layer_0.pos.i,?)
  _01111: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _011111: a rectangle with size (?,1) and color black and mask Full at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 231.0 + 7429.4 = 7660.4
DL input+output M: L = 260.5 + 7429.4 = 7690.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8b28cd80.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8b28cd80.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8b28cd80.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8b28cd80.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8b28cd80.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 8b28cd80.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 8b28cd80.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 7429.4 bits (7429.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-191] Checking task 8ba14f53.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 47413.3 = 47425.9
DL output with Mo: L = 12.6 + 10104.5 = 10117.1
DL input+output M: L = 25.2 + 57517.8 = 57543.0

# learning a model for train pairs
2.000	
1.522	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.770	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.536	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.460	OUT SPE ^.size = '(3, 3)
0.417	OUT SPE ^.layer_0.pos = '(0, 0)
0.384	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.351	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.328	OUT SPE ^.layer_01.pos.j = '0
0.308	OUT SPE ^.layer_01.shape.mask = Full
0.291	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.j - min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
0.276	OUT SPE ^.color = black
0.273	IN  SPE ^.color = black
0.151	
0.151	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at '(0, 0)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.j - min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j),'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.4 + 5830.1 = 5894.5
DL output with Mo: L = 141.3 + 1366.1 = 1507.4
DL input+output M: L = 205.7 + 7196.2 = 7401.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at '(0, 0)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.j - min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j),'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 40.0 = 104.2
DL output with Mo: L = 141.3 + 1366.1 = 1507.4
DL input+output M: L = 205.5 + 1406.1 = 1611.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8ba14f53.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8ba14f53.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8ba14f53.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8ba14f53.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8ba14f53.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8ba14f53.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 8ba14f53.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 1366.1 bits (1366.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-190] Checking task 8cb8642d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 119528.3 = 119540.9
DL output with Mo: L = 12.6 + 74171.4 = 74184.1
DL input+output M: L = 25.2 + 193699.8 = 193725.0

# learning a model for train pairs
2.000	
1.304	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.467	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.370	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.290	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.252	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.218	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.209	OUT SPE ^.size = ^.size
0.185	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.167	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.161	OUT SPE ^.layer_0111.shape.size = ^.layer_011.shape.size - (2, 2)
0.110	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size ^.layer_011.shape.size - (2, 2) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 6112.0 = 6201.3
DL output with Mo: L = 181.2 + 7912.6 = 8093.8
DL input+output M: L = 270.5 + 14024.6 = 14295.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size ^.layer_011.shape.size - (2, 2) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 31.7 = 121.0
DL output with Mo: L = 181.2 + 7912.6 = 8093.8
DL input+output M: L = 270.5 + 7944.3 = 8214.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8cb8642d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8cb8642d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8cb8642d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 8cb8642d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 7912.6 bits (7912.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-189] Checking task 8dae5dfc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 244236.7 = 244249.3
DL output with Mo: L = 12.6 + 244236.7 = 244249.3
DL input+output M: L = 25.2 + 488473.4 = 488498.6

# learning a model for train pairs
2.000	
1.645	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.289	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.851	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.546	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.382	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.330	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.277	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.225	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.140	
0.139	IN  DEL ^.layer_011111
0.139	IN  DEL ^.layer_01111
0.139	IN  DEL ^.layer_0111
0.139	IN  DEL ^.layer_011
0.139	IN  DEL ^.layer_01
0.139	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 20969.0 = 21132.6
DL output with Mo: L = 138.9 + 33776.9 = 33915.7
DL input+output M: L = 302.4 + 54745.9 = 55048.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 33776.9 = 33915.7
DL input+output M: L = 151.5 + 33776.9 = 33928.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8dae5dfc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8dae5dfc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8dae5dfc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8dae5dfc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 8dae5dfc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 33776.9 bits (33776.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-188] Checking task 8e2edd66.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4434.5 = 4447.1
DL output with Mo: L = 12.6 + 19336.2 = 19348.8
DL input+output M: L = 25.2 + 23770.7 = 23795.9

# learning a model for train pairs
2.000	
1.391	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.915	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.886	OUT SPE ^.size = tiling(^.size, 3, 3)
0.869	IN  SPE ^.color = black
0.861	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.852	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
0.487	
0.487	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 1624.1 = 1663.1
DL output with Mo: L = 86.4 + 9169.2 = 9255.6
DL input+output M: L = 125.3 + 10793.4 = 10918.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 86.4 + 9169.2 = 9255.6
DL input+output M: L = 125.2 + 9169.2 = 9294.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8e2edd66.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8e2edd66.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8e2edd66.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 8e2edd66.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.6 sec (54.6 sec/task)
bits-train-error = 9169.2 bits (9169.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-187] Checking task 8ee62060.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22367.0 = 22379.6
DL output with Mo: L = 12.6 + 22367.0 = 22379.6
DL input+output M: L = 25.2 + 44734.0 = 44759.2

# learning a model for train pairs
2.000	
1.605	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.531	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.457	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.383	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.309	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.239	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.180	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.151	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.092	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.032	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	
0.463	IN  DEL ^.layer_011111
0.462	IN  DEL ^.layer_01111
0.460	IN  DEL ^.layer_0111
0.459	IN  DEL ^.layer_011
0.458	IN  DEL ^.layer_01
0.457	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 12707.4 = 12870.9
DL output with Mo: L = 163.5 + 10051.8 = 10215.3
DL input+output M: L = 327.1 + 22759.2 = 23086.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 10051.8 = 10215.3
DL input+output M: L = 176.1 + 10051.8 = 10227.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8ee62060.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8ee62060.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8ee62060.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 8ee62060.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 10051.8 bits (10051.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-186] Checking task 8fbca751.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20866.0 = 20878.6
DL output with Mo: L = 12.6 + 36429.6 = 36442.2
DL input+output M: L = 25.2 + 57295.6 = 57320.8

# learning a model for train pairs
2.000	
1.269	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.791	OUT ADD ^.layer_0 = ^.layer_0
0.492	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.477	OUT SPE ^.size = ^.size
0.469	IN  SPE ^.layer_0.shape.color = cyan
0.465	IN  SPE ^.color = black
0.209	
0.209	IN  GEN ^.layer_0.shape.color = ?
0.209	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 5340.5 = 5382.8
DL output with Mo: L = 40.5 + 7511.2 = 7551.7
DL input+output M: L = 82.8 + 12851.7 = 12934.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 40.5 + 7511.2 = 7551.7
DL input+output M: L = 79.3 + 7511.2 = 7590.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 8fbca751.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 8fbca751.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 8fbca751.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 8fbca751.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 7511.2 bits (7511.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-185] Checking task 90347967.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7205.4 = 7218.0
DL output with Mo: L = 12.6 + 7205.4 = 7218.0
DL input+output M: L = 25.2 + 14410.7 = 14435.9

# learning a model for train pairs
2.000	
1.768	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.459	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.367	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
1.120	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.031	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.944	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.855	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.784	OUT SPE ^.size = ^.size
0.723	OUT SPE ^.layer_011 = ^.layer_011
0.695	IN  SPE ^.layer_011.shape.color = grey
0.672	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.634	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos + translationSym(rotate180, ^.layer_0111, ^.layer_011)
0.598	OUT SPE ^.layer_01.pos = ^.layer_01.pos - translationSym(rotate180, ^.layer_011, ^.layer_01)
0.562	OUT SPE ^.layer_0.pos = ^.layer_0.pos - translationSym(rotate180, ^.layer_011, ^.layer_0)
0.539	IN  SPE ^.layer_01.shape.color = blue
0.525	IN  SPE ^.layer_0.shape.mask = Full
0.512	IN  SPE ^.layer_01.shape.mask = Full
0.501	IN  SPE ^.color = black
0.491	OUT SPE ^.color = black
0.088	
0.088	IN  GEN ^.layer_01.shape.color = ?
0.088	IN  GEN ^.layer_01.shape.mask = ?
0.088	IN  GEN ^.layer_0.shape.mask = ?
0.088	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - translationSym(rotate180, ^.layer_011, ^.layer_0)
  _01: ^.layer_01.shape at ^.layer_01.pos - translationSym(rotate180, ^.layer_011, ^.layer_01)
  _011: ^.layer_011
  _0111: ^.layer_0111.shape at ^.layer_0111.pos + translationSym(rotate180, ^.layer_0111, ^.layer_011)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 104.3 + 2908.2 = 3012.6
DL output with Mo: L = 147.9 + 385.2 = 533.1
DL input+output M: L = 252.3 + 3293.4 = 3545.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - translationSym(rotate180, ^.layer_011, ^.layer_0)
  _01: ^.layer_01.shape at ^.layer_01.pos - translationSym(rotate180, ^.layer_011, ^.layer_01)
  _011: ^.layer_011
  _0111: ^.layer_0111.shape at ^.layer_0111.pos + translationSym(rotate180, ^.layer_0111, ^.layer_011)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 98.9 + 0.0 = 98.9
DL output with Mo: L = 147.9 + 385.2 = 533.1
DL input+output M: L = 246.8 + 385.2 = 632.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 90347967.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 90347967.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 90347967.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 90347967.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 385.2 bits (385.2 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-184] Checking task 903d1b4a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 268950.3 = 268962.9
DL output with Mo: L = 12.6 + 262395.4 = 262408.0
DL input+output M: L = 25.2 + 531345.7 = 531370.9

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = closeSym(flipHeight; rotate90; rotate180; , green, ^.grid)
0.854	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.764	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.712	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.665	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.624	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.611	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.556	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.549	IN  SPE ^.layer_011.shape.mask = Full
0.001	
0.001	IN  DEL ^.layer_011
0.001	IN  DEL ^.layer_01111111
0.001	IN  DEL ^.layer_0111111
0.001	IN  DEL ^.layer_011111
0.000	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , green, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 213.7 + 147481.9 = 147695.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 237.7 + 147481.9 = 147719.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , green, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 36.6 + 0.0 = 36.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 903d1b4a.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 903d1b4a.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 903d1b4a.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 903d1b4a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 903d1b4a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-183] Checking task 9110e3c5.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 63966.5 = 63979.1
DL output with Mo: L = 12.6 + 9814.5 = 9827.1
DL input+output M: L = 25.2 + 73781.0 = 73806.2

# learning a model for train pairs
2.000	
1.354	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.911	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	OUT SPE ^.size = '(3, 3)
0.779	OUT SPE ^.layer_0.shape.color = cyan
0.742	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.223	
0.223	IN  DEL ^.layer_01
0.222	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 33214.7 = 33279.0
DL output with Mo: L = 51.6 + 2132.7 = 2184.3
DL input+output M: L = 115.8 + 35347.4 = 35463.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 51.6 + 2132.7 = 2184.3
DL input+output M: L = 64.2 + 2132.7 = 2196.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/6: 0 - (FAILURE)

## instance 7

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9110e3c5.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9110e3c5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9110e3c5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.6 sec (54.6 sec/task)
bits-train-error = 2132.7 bits (2132.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-182] Checking task 917bccba.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 45144.3 = 45156.9
DL output with Mo: L = 12.6 + 37208.5 = 37221.1
DL input+output M: L = 25.2 + 82352.8 = 82378.0

# learning a model for train pairs
2.000	
1.423	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.948	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.719	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.320	OUT ADD ^.layer_00 = ^.layer_0
0.148	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.130	OUT SPE ^.layer_0.shape = ^.layer_011.shape
0.113	OUT SPE ^.size = ^.size
0.103	OUT SPE ^.layer_01.pos = projI(^.layer_0.pos)
0.099	OUT SPE ^.layer_0.pos.i = '0
0.094	OUT SPE ^.layer_0.pos.j = right(^.layer_0)
0.091	IN  SPE ^.layer_0.shape.mask = Border
0.088	IN  SPE ^.layer_01.shape.mask = Full
0.086	IN  SPE ^.layer_011.shape.mask = Full
0.084	OUT SPE ^.color = black
0.083	IN  SPE ^.color = black
0.004	
0.004	IN  GEN ^.layer_0.shape.mask = ?
0.004	IN  GEN ^.layer_011.shape.mask = ?
0.004	IN  GEN ^.layer_01.shape.mask = ?
0.004	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: ^.layer_011.shape at ('0,right(^.layer_0))
  _01: ^.layer_01.shape at projI(^.layer_0.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 94.7 + 3537.4 = 3632.1
DL output with Mo: L = 84.1 + 0.0 = 84.1
DL input+output M: L = 178.8 + 3537.4 = 3716.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: ^.layer_011.shape at ('0,right(^.layer_0))
  _01: ^.layer_01.shape at projI(^.layer_0.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 84.1 + 0.0 = 84.1
DL input+output M: L = 173.4 + 0.0 = 173.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 917bccba.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 917bccba.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 917bccba.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 917bccba.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-181] Checking task 929ab4e9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 669599.6 = 669612.2
DL output with Mo: L = 12.6 + 645371.5 = 645384.1
DL input+output M: L = 25.2 + 1314971.0 = 1314996.2

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = closeSym(flipHeight; rotate90; rotate180; , red, ^.grid)
0.863	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.801	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.752	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.709	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.692	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.686	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.000	
0.000	IN  DEL ^.layer_01111111
0.000	IN  DEL ^.layer_0111111
0.000	IN  DEL ^.layer_011111
0.000	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , red, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 459114.9 = 459327.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 236.7 + 459114.9 = 459351.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , red, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 36.6 + 0.0 = 36.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 929ab4e9.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 929ab4e9.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 929ab4e9.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 929ab4e9.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 929ab4e9.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 8.8 sec (8.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-180] Checking task 92e50de0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 308939.2 = 308951.8
DL output with Mo: L = 12.6 + 359166.2 = 359178.8
DL input+output M: L = 25.2 + 668105.4 = 668130.6

# learning a model for train pairs
2.000	
1.087	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.247	OUT ADD ^.layer_0 = ^.layer_0
0.231	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	OUT ADD ^.layer_01 = ^.layer_01
0.199	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
0.184	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.168	OUT ADD ^.layer_0111 = ^.layer_01.shape at (?,?)
0.153	OUT ADD ^.layer_0110 = ^.layer_01.shape at (?,?)
0.137	OUT ADD ^.layer_0101 = ^.layer_01.shape at (?,?)
0.122	OUT ADD ^.layer_0100 = ^.layer_01.shape at (?,?)
0.120	OUT SPE ^.size = ^.size
0.048	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _0100: ^.layer_01.shape at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _0101: ^.layer_01.shape at (?,?)
  _01: ^.layer_01
  _0110: ^.layer_01.shape at (?,?)
  _011: ^.layer_01.shape at (?,?)
  _0111: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 22082.0 = 22146.2
DL output with Mo: L = 139.9 + 17145.3 = 17285.2
DL input+output M: L = 204.1 + 39227.2 = 39431.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _0100: ^.layer_01.shape at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _0101: ^.layer_01.shape at (?,?)
  _01: ^.layer_01
  _0110: ^.layer_01.shape at (?,?)
  _011: ^.layer_01.shape at (?,?)
  _0111: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 139.9 + 17145.3 = 17285.2
DL input+output M: L = 204.1 + 17145.3 = 17349.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 92e50de0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 92e50de0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 92e50de0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 92e50de0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 17145.3 bits (17145.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-179] Checking task 9356391f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17254.4 = 17267.0
DL output with Mo: L = 12.6 + 65506.7 = 65519.3
DL input+output M: L = 25.2 + 82761.1 = 82786.4

# learning a model for train pairs
2.000	
1.325	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.041	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.593	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	OUT ADD ^.layer_00 = ^.layer_0
0.418	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.395	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.371	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.348	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.323	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.305	OUT ADD ^.layer_010 = ^.layer_01
0.293	OUT ADD ^.layer_0111 = ^.layer_0111
0.281	OUT ADD ^.layer_0110 = ^.layer_011
0.269	OUT ADD ^.layer_0101 = ^.layer_011111
0.262	OUT SPE ^.size = ^.size
0.256	IN  SPE ^.layer_0.shape.color = grey
0.250	IN  SPE ^.layer_011.shape.color = red
0.246	IN  SPE ^.layer_0.shape.mask = Full
0.242	IN  SPE ^.layer_01.shape.mask = Full
0.239	IN  SPE ^.color = black
0.238	OUT SPE ^.layer_011.shape.color = ^.layer_0111.shape.color
0.236	OUT SPE ^.layer_01.pos = ^.layer_011111.pos - (2, 2)
0.233	OUT SPE ^.layer_011.pos = ^.layer_011111.pos - (3, 3)
0.231	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i * colorCount(^.grid)
0.229	OUT SPE ^.layer_01.shape.size = span(^.layer_0.pos, ^.layer_0111.pos) + (3, 1)
0.227	OUT SPE ^.layer_01.shape.color = green
0.226	OUT SPE ^.layer_01.shape.mask = Full
0.225	OUT SPE ^.layer_011.shape.mask = Full
0.222	OUT SPE ^.layer_0.pos = ^.layer_011111.pos + translationSym(rotate270, ^.layer_01111, ^.layer_011)
0.220	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.j + ^.layer_011111.pos.j - ^.layer_0.pos.j
0.219	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.j + ^.layer_011111.pos.j - ^.layer_0.pos.j
0.218	OUT SPE ^.color = black
0.052	
0.052	IN  GEN ^.layer_011.shape.color = ?
0.051	IN  GEN ^.layer_0.shape.color = ?
0.051	IN  GEN ^.layer_01.shape.mask = ?
0.051	IN  GEN ^.layer_0.shape.mask = ?
0.051	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011111.pos + translationSym(rotate270, ^.layer_01111, ^.layer_011)
  _010: ^.layer_01
  _0101: ^.layer_011111
  _01: a rectangle with size span(^.layer_0.pos, ^.layer_0111.pos) + (3, 1) and color green and mask Full at ^.layer_011111.pos - (2, 2)
  _0110: ^.layer_011
  _011: a rectangle with size (^.layer_01.shape.size.j + ^.layer_011111.pos.j - ^.layer_0.pos.j,^.layer_01.shape.size.j + ^.layer_011111.pos.j - ^.layer_0.pos.j) and color ^.layer_0111.shape.color and mask Full at ^.layer_011111.pos - (3, 3)
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color red at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 135.2 + 2899.1 = 3034.3
DL output with Mo: L = 449.4 + 2305.2 = 2754.6
DL input+output M: L = 584.5 + 5204.3 = 5788.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011111.pos + translationSym(rotate270, ^.layer_01111, ^.layer_011)
  _010: ^.layer_01
  _0101: ^.layer_011111
  _01: a rectangle with size span(^.layer_0.pos, ^.layer_0111.pos) + (3, 1) and color green and mask Full at ^.layer_011111.pos - (2, 2)
  _0110: ^.layer_011
  _011: a rectangle with size (^.layer_01.shape.size.j + ^.layer_011111.pos.j - ^.layer_0.pos.j,^.layer_01.shape.size.j + ^.layer_011111.pos.j - ^.layer_0.pos.j) and color ^.layer_0111.shape.color and mask Full at ^.layer_011111.pos - (3, 3)
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 126.4 + 31.7 = 158.1
DL output with Mo: L = 449.4 + 2305.2 = 2754.6
DL input+output M: L = 575.8 + 2336.9 = 2912.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9356391f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9356391f.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 9356391f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 2305.2 bits (2305.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-178] Checking task 93b4f4b3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 52684.2 = 52696.8
DL output with Mo: L = 12.6 + 13922.7 = 13935.3
DL input+output M: L = 25.2 + 66606.8 = 66632.1

# learning a model for train pairs
2.000	
1.308	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.004	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.533	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.450	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.322	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.273	OUT SPE ^.layer_01.shape = ^.layer_01.shape
0.226	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.189	OUT SPE ^.layer_0.shape = ^.layer_0111.shape
0.162	OUT SPE ^.size = ^.layer_0.shape.size
0.149	OUT SPE ^.layer_011.pos = projI(^.layer_0111.pos) + (0, 1)
0.136	OUT SPE ^.layer_01.pos = ^.layer_0.pos + span(^.layer_01.pos, ^.layer_011.pos)
0.124	OUT SPE ^.color = majorityColor(^.grid)
0.117	OUT SPE ^.layer_0.pos.j = 2
0.114	IN  SPE ^.layer_011.shape.color = green
0.112	OUT SPE ^.layer_0.pos.i = min(^.layer_01.pos.i, ^.layer_0111.pos.i) - ^.layer_0111.pos.i - ^.layer_01.pos.i
0.111	IN  SPE ^.color = black
0.019	
0.019	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color majorityColor(^.grid) and layers
  _0: ^.layer_0111.shape at (min(^.layer_01.pos.i, ^.layer_0111.pos.i) - ^.layer_0111.pos.i - ^.layer_01.pos.i,2)
  _01: ^.layer_01.shape at ^.layer_0.pos + span(^.layer_01.pos, ^.layer_011.pos)
  _011: ^.layer_011.shape at projI(^.layer_0111.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.6 + 4859.4 = 4977.0
DL output with Mo: L = 234.9 + 0.0 = 234.9
DL input+output M: L = 352.5 + 4859.4 = 5211.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color majorityColor(^.grid) and layers
  _0: ^.layer_0111.shape at (min(^.layer_01.pos.i, ^.layer_0111.pos.i) - ^.layer_0111.pos.i - ^.layer_01.pos.i,2)
  _01: ^.layer_01.shape at ^.layer_0.pos + span(^.layer_01.pos, ^.layer_011.pos)
  _011: ^.layer_011.shape at projI(^.layer_0111.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 234.9 + 0.0 = 234.9
DL input+output M: L = 352.3 + 0.0 = 352.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 93b4f4b3.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 93b4f4b3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 93b4f4b3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.8 sec (9.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-177] Checking task 93c31fbe.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 60814.5 = 60827.1
DL output with Mo: L = 12.6 + 65174.4 = 65187.0
DL input+output M: L = 25.2 + 125988.9 = 126014.1

# learning a model for train pairs
2.000	
1.925	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.856	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.772	OUT ADD ^.layer_01 = ^.layer_0
1.739	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.708	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.664	OUT ADD ^.layer_010 = ^.layer_00
1.633	OUT ADD ^.layer_0101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.603	OUT ADD ^.layer_0100 = ^.layer_0.shape at (?,?)
1.578	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.546	IN  ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.515	OUT ADD ^.layer_01001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.487	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.427	OUT ADD ^.layer_01010 = ^.layer_011
1.406	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.612	
0.611	IN  DEL ^.layer_0110
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: ^.layer_0.shape at (?,?)
  _01001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_00
  _01010: ^.layer_011
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 48317.4 = 48480.9
DL output with Mo: L = 173.4 + 39526.6 = 39700.0
DL input+output M: L = 336.9 + 87844.1 = 88181.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: ^.layer_0.shape at (?,?)
  _01001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_00
  _01010: ^.layer_011
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 173.4 + 39526.6 = 39700.0
DL input+output M: L = 312.3 + 39526.6 = 39838.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 93c31fbe.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 93c31fbe.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 93c31fbe.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 93c31fbe.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.4 sec (60.4 sec/task)
bits-train-error = 39526.6 bits (39526.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-176] Checking task 94133066.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 119619.6 = 119632.2
DL output with Mo: L = 12.6 + 17447.3 = 17459.9
DL input+output M: L = 25.2 + 137066.9 = 137092.1

# learning a model for train pairs
2.000	
1.195	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.587	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.500	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.465	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.429	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.392	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.364	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size
0.349	OUT SPE ^.color = blue
0.340	OUT SPE ^.layer_011.shape.color = yellow
0.330	OUT SPE ^.layer_011.pos.i = 1
0.321	OUT SPE ^.layer_0.pos.j = 2
0.312	OUT SPE ^.layer_01.pos.j = 1
0.303	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.298	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.289	OUT SPE ^.layer_0111.shape = ^.layer_011.shape
0.281	OUT SPE ^.layer_011.pos.j = span(^.layer_0.pos.j, ^.layer_011.pos.j) - 1
0.276	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.270	IN  ADD ^.layer_01101 = a point with color ? at (?,?)
0.265	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.260	OUT SPE ^.layer_0.pos.i = span(^.layer_0111.pos.j, ^.layer_0110.pos.j) - ^.layer_01.shape.size.j
0.255	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.242	OUT SPE ^.size.i = ^.layer_0.shape.size.i - ^.layer_01111.pos.j - ^.layer_011.pos.j
0.229	OUT SPE ^.size.j = ^.layer_0.shape.size.j + ^.layer_01111.pos.j - ^.layer_011.pos.j
0.223	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.222	IN  SPE ^.layer_0.shape.color = blue
0.221	IN  SPE ^.layer_01.shape.mask = Full
0.221	IN  SPE ^.color = black
0.148	
0.148	IN  DEL ^.layer_011111
0.148	IN  GEN ^.layer_0.shape.color = ?
0.148	IN  GEN ^.layer_01.shape.mask = ?
0.148	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i - ^.layer_01111.pos.j - ^.layer_011.pos.j,^.layer_0.shape.size.j + ^.layer_01111.pos.j - ^.layer_011.pos.j) and color blue and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at (span(^.layer_0111.pos.j, ^.layer_0110.pos.j) - ^.layer_01.shape.size.j,2)
  _01: a point with color ? at (?,1)
  _011: a point with color yellow at (1,span(^.layer_0.pos.j, ^.layer_011.pos.j) - 1)
  _0111: ^.layer_011.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 161.4 + 8707.6 = 8869.1
DL output with Mo: L = 383.3 + 2174.1 = 2557.5
DL input+output M: L = 544.8 + 10881.8 = 11426.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i - ^.layer_01111.pos.j - ^.layer_011.pos.j,^.layer_0.shape.size.j + ^.layer_01111.pos.j - ^.layer_011.pos.j) and color blue and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at (span(^.layer_0111.pos.j, ^.layer_0110.pos.j) - ^.layer_01.shape.size.j,2)
  _01: a point with color ? at (?,1)
  _011: a point with color yellow at (1,span(^.layer_0.pos.j, ^.layer_011.pos.j) - 1)
  _0111: ^.layer_011.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 141.7 + 20.0 = 161.7
DL output with Mo: L = 383.3 + 2174.1 = 2557.5
DL input+output M: L = 525.0 + 2194.1 = 2719.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 94133066.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 94133066.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 94133066.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 94133066.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.2 sec (30.2 sec/task)
bits-train-error = 2174.1 bits (2174.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-175] Checking task 94414823.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25485.2 = 25497.9
DL output with Mo: L = 12.6 + 43379.8 = 43392.4
DL input+output M: L = 25.2 + 68865.0 = 68890.2

# learning a model for train pairs
2.000	
1.166	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	OUT ADD ^.layer_0 = ^.layer_0
0.481	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.298	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.273	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.247	OUT ADD ^.layer_010 = ^.layer_01
0.221	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.194	OUT ADD ^.layer_0111 = ^.layer_011
0.178	OUT SPE ^.layer_011.shape = unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.layer_011.shape * '2)
0.164	OUT SPE ^.layer_01.shape.mask = xx..|xx..|..xx|..xx
0.150	OUT SPE ^.size = ^.size
0.141	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size - (2, 2)
0.133	OUT SPE ^.layer_01.pos = '(3, 3)
0.125	OUT SPE ^.layer_011.pos = '(3, 3)
0.119	IN  SPE ^.layer_0.shape.color = grey
0.112	IN  SPE ^.layer_0.shape.mask = Border
0.108	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.106	IN  SPE ^.color = black
0.104	OUT SPE ^.color = black
0.007	
0.007	IN  GEN ^.layer_0.shape.mask = ?
0.007	IN  GEN ^.layer_0.shape.color = ?
0.007	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color ^.layer_01.shape.color and mask xx..|xx..|..xx|..xx at '(3, 3)
  _011: unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.layer_011.shape * '2) at '(3, 3)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Border at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 77.5 + 2482.0 = 2559.5
DL output with Mo: L = 153.5 + 0.0 = 153.5
DL input+output M: L = 231.0 + 2482.0 = 2713.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color ^.layer_01.shape.color and mask xx..|xx..|..xx|..xx at '(3, 3)
  _011: unfoldSym( [ id flipWidth ] [ flipHeight rotate180 ], ^.layer_011.shape * '2) at '(3, 3)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 20.0 = 90.7
DL output with Mo: L = 153.5 + 0.0 = 153.5
DL input+output M: L = 224.2 + 20.0 = 244.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 94414823.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 94414823.json/2: 1 2nd (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 94414823.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 94414823.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-174] Checking task 94be5b80.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33353.7 = 33366.3
DL output with Mo: L = 12.6 + 41430.4 = 41443.0
DL input+output M: L = 25.2 + 74784.1 = 74809.3

# learning a model for train pairs
2.000	
1.674	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.347	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.050	OUT ADD ^.layer_0 = ^.layer_0
0.753	OUT ADD ^.layer_01 = ^.layer_01
0.488	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.436	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.385	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.335	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.284	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.256	OUT SPE ^.layer_0111.shape = coloring(^.layer_01.shape, ^.layer_011.shape.color)
0.246	OUT SPE ^.size = ^.size
0.240	OUT SPE ^.layer_0111.pos = ^.layer_0.pos - projI(^.layer_01.shape.size)
0.236	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.j
0.233	IN  SPE ^.layer_01111.shape.color = blue
0.230	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j
0.228	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.j * '2
0.226	IN  SPE ^.layer_011.shape.mask = Full
0.224	IN  SPE ^.layer_0111.shape.mask = Full
0.222	IN  SPE ^.layer_01111.shape.mask = Full
0.220	IN  SPE ^.color = black
0.219	OUT SPE ^.color = black
0.039	
0.038	IN  DEL ^.layer_01111
0.038	IN  DEL ^.layer_0111
0.038	IN  GEN ^.layer_011.shape.mask = ?
0.038	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,^.layer_01.shape.size.j) and color ? and mask ? at (^.layer_011.pos.j * '2,^.layer_01.pos.j)
  _0111: coloring(^.layer_01.shape, ^.layer_011.shape.color) at ^.layer_0.pos - projI(^.layer_01.shape.size)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 145.3 + 6004.0 = 6149.4
DL output with Mo: L = 159.3 + 1285.8 = 1445.2
DL input+output M: L = 304.7 + 7289.8 = 7594.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,^.layer_01.shape.size.j) and color ? and mask ? at (^.layer_011.pos.j * '2,^.layer_01.pos.j)
  _0111: coloring(^.layer_01.shape, ^.layer_011.shape.color) at ^.layer_0.pos - projI(^.layer_01.shape.size)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 159.3 + 1285.8 = 1445.2
DL input+output M: L = 248.6 + 1285.8 = 1534.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 94be5b80.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 94be5b80.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 94be5b80.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.1 sec (10.1 sec/task)
bits-train-error = 1285.8 bits (1285.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-173] Checking task 95a58926.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 182244.0 = 182256.6
DL output with Mo: L = 12.6 + 147824.8 = 147837.4
DL input+output M: L = 25.2 + 330068.8 = 330094.0

# learning a model for train pairs
2.000	
1.194	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.596	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.539	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.514	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.490	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.467	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.436	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.423	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.410	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.400	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.136	
0.136	IN  DEL ^.layer_0111111
0.136	IN  DEL ^.layer_011111
0.135	IN  DEL ^.layer_01111
0.135	IN  DEL ^.layer_0111
0.135	IN  DEL ^.layer_011
0.135	IN  DEL ^.layer_01
0.135	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 48090.8 = 48279.0
DL output with Mo: L = 114.1 + 19825.1 = 19939.2
DL input+output M: L = 302.3 + 67915.9 = 68218.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 19825.1 = 19939.2
DL input+output M: L = 126.7 + 19825.1 = 19951.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 95a58926.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 95a58926.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 95a58926.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 95a58926.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 19825.1 bits (19825.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-172] Checking task 963f59bc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15147.1 = 15159.7
DL output with Mo: L = 12.6 + 30294.1 = 30306.7
DL input+output M: L = 25.2 + 45441.2 = 45466.4

# learning a model for train pairs
2.000	
1.360	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.973	OUT ADD ^.layer_0 = ^.layer_0
0.653	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.542	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.485	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.457	OUT SPE ^.size = ^.size
0.443	IN  SPE ^.layer_0.shape.color = blue
0.434	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j
0.426	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.420	IN  SPE ^.color = black
0.416	OUT SPE ^.color = black
0.138	
0.137	IN  GEN ^.layer_0.shape.color = ?
0.137	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 58.4 + 4227.5 = 4285.9
DL output with Mo: L = 78.3 + 3975.4 = 4053.7
DL input+output M: L = 136.6 + 8203.0 = 8339.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 54.9 + 0.0 = 54.9
DL output with Mo: L = 78.3 + 3975.4 = 4053.7
DL input+output M: L = 133.2 + 3975.4 = 4108.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 963f59bc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 963f59bc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 963f59bc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 963f59bc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 963f59bc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 37.2 sec (37.2 sec/task)
bits-train-error = 3975.4 bits (3975.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-171] Checking task 96a8c0cd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 40330.2 = 40342.8
DL output with Mo: L = 12.6 + 91724.3 = 91736.9
DL input+output M: L = 25.2 + 132054.5 = 132079.7

# learning a model for train pairs
2.000	
1.492	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.353	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.242	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.140	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.967	OUT ADD ^.layer_01 = ^.layer_0
0.899	OUT ADD ^.layer_011 = ^.layer_01
0.833	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.774	OUT ADD ^.layer_0111 = ^.layer_0111
0.715	OUT ADD ^.layer_0110 = ^.layer_011
0.699	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	OUT SPE ^.size = ^.size
0.684	IN  SPE ^.layer_0.shape.color = green
0.681	IN  SPE ^.layer_0.shape.mask = Full
0.677	IN  SPE ^.layer_01.shape.mask = Full
0.674	IN  SPE ^.layer_011.shape.mask = Full
0.671	IN  SPE ^.layer_0111.shape.mask = Full
0.667	IN  SPE ^.layer_01111.shape.mask = Full
0.665	OUT SPE ^.layer_01111.pos.j = ^.layer_01111.pos.j
0.662	OUT SPE ^.layer_01111.shape.color = ^.layer_01111.shape.color
0.660	IN  SPE ^.color = black
0.657	OUT SPE ^.layer_0.shape.color = red
0.656	OUT SPE ^.layer_01111.pos.i = min(^.layer_0111.pos.i, ^.layer_01111.pos.i) + ^.layer_01111.pos.i - ^.layer_0111.pos.i
0.195	
0.195	IN  GEN ^.layer_0.shape.color = ?
0.195	IN  GEN ^.layer_01111.shape.mask = ?
0.195	IN  GEN ^.layer_0111.shape.mask = ?
0.195	IN  GEN ^.layer_011.shape.mask = ?
0.195	IN  GEN ^.layer_01.shape.mask = ?
0.195	IN  GEN ^.layer_0.shape.mask = ?
0.195	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: ^.layer_0
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (min(^.layer_0111.pos.i, ^.layer_01111.pos.i) + ^.layer_01111.pos.i - ^.layer_0111.pos.i,^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 147.3 + 18602.2 = 18749.6
DL output with Mo: L = 145.7 + 17369.5 = 17515.2
DL input+output M: L = 293.0 + 35971.8 = 36264.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: ^.layer_0
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (min(^.layer_0111.pos.i, ^.layer_01111.pos.i) + ^.layer_01111.pos.i - ^.layer_0111.pos.i,^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 20.0 = 158.9
DL output with Mo: L = 145.7 + 17369.5 = 17515.2
DL input+output M: L = 284.5 + 17389.5 = 17674.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 96a8c0cd.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 96a8c0cd.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 96a8c0cd.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 96a8c0cd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 96a8c0cd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 17369.5 bits (17369.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-170] Checking task 97239e3d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 153728.0 = 153740.6
DL output with Mo: L = 12.6 + 188398.1 = 188410.7
DL input+output M: L = 25.2 + 342126.1 = 342151.3

# learning a model for train pairs
2.000	
1.220	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.541	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.422	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.417	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.411	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.408	OUT SPE ^.size = ^.size
0.404	OUT ADD ^.layer_01110 = a point with color ? at (?,?)
0.393	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.391	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.389	IN  SPE ^.color = cyan
0.171	
0.171	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 45.5 + 33571.0 = 33616.5
DL output with Mo: L = 144.6 + 32035.6 = 32180.2
DL input+output M: L = 190.0 + 65606.7 = 65796.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 144.6 + 32035.6 = 32180.2
DL input+output M: L = 183.4 + 32035.6 = 32219.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 97239e3d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 97239e3d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 97239e3d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 97239e3d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 32035.6 bits (32035.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-169] Checking task 9772c176.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 151197.2 = 151209.9
DL output with Mo: L = 12.6 + 181810.5 = 181823.1
DL input+output M: L = 25.2 + 333007.8 = 333033.0

# learning a model for train pairs
2.000	
1.258	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	OUT ADD ^.layer_0 = ^.layer_0
0.400	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.205	OUT ADD ^.layer_01 = ^.layer_01
0.150	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.111	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.093	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.084	OUT ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.075	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.043	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 4885.2 = 4949.5
DL output with Mo: L = 147.2 + 7573.2 = 7720.4
DL input+output M: L = 211.4 + 12458.5 = 12669.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 147.2 + 7573.2 = 7720.4
DL input+output M: L = 211.4 + 7573.2 = 7784.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9772c176.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9772c176.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9772c176.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 7573.2 bits (7573.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-168] Checking task 981571dc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1141387.9 = 1141400.5
DL output with Mo: L = 12.6 + 1103046.7 = 1103059.3
DL input+output M: L = 25.2 + 2244434.6 = 2244459.9

# learning a model for train pairs
2.000	
1.897	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.801	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.753	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.709	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.671	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.639	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.605	OUT ADD ^.layer_011 = ^.layer_0111
0.832	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 882567.5 = 882681.7
DL output with Mo: L = 76.0 + 917014.6 = 917090.6
DL input+output M: L = 190.1 + 1799582.1 = 1799772.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 76.0 + 917014.6 = 917090.6
DL input+output M: L = 190.1 + 917046.3 = 917236.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 981571dc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 981571dc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 981571dc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 981571dc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 981571dc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 62.1 sec (62.1 sec/task)
bits-train-error = 917014.6 bits (917014.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-167] Checking task 992798f6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4161.5 = 4174.1
DL output with Mo: L = 12.6 + 20005.1 = 20017.7
DL input+output M: L = 25.2 + 24166.6 = 24191.9

# learning a model for train pairs
2.000	
1.367	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.166	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.957	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.878	OUT ADD ^.layer_01 = ^.layer_01
0.798	OUT ADD ^.layer_00 = ^.layer_0
0.745	IN  SPE ^.layer_0.shape.color = red
0.692	IN  SPE ^.layer_01.shape.color = blue
0.648	OUT SPE ^.size = ^.size
0.614	OUT SPE ^.layer_0.shape.size = span(^.layer_0.pos, ^.layer_01.pos) - (2, 2)
0.591	IN  SPE ^.color = black
0.568	OUT SPE ^.layer_0.pos = min(^.layer_0.pos, ^.layer_01.pos) + (1, 1)
0.557	OUT SPE ^.layer_0.shape.color = green
0.552	OUT SPE ^.color = black
0.105	
0.104	IN  GEN ^.layer_01.shape.color = ?
0.103	IN  GEN ^.layer_0.shape.color = ?
0.103	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - (2, 2) and color green and mask ? at min(^.layer_0.pos, ^.layer_01.pos) + (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 52.4 + 1864.6 = 1917.1
DL output with Mo: L = 128.8 + 1723.4 = 1852.2
DL input+output M: L = 181.3 + 3588.0 = 3769.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - (2, 2) and color green and mask ? at min(^.layer_0.pos, ^.layer_01.pos) + (1, 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 128.8 + 1723.4 = 1852.2
DL input+output M: L = 174.5 + 1723.4 = 1897.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 992798f6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 992798f6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 992798f6.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 992798f6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 992798f6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 1723.4 bits (1723.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-166] Checking task 99306f82.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 37966.5 = 37979.1
DL output with Mo: L = 12.6 + 87324.4 = 87337.0
DL input+output M: L = 25.2 + 125290.8 = 125316.1

# learning a model for train pairs
2.000	
1.147	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.762	OUT ADD ^.layer_0 = ^.layer_0
0.496	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.332	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.247	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.231	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.214	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.201	OUT ADD ^.layer_010 = ^.layer_01
0.193	OUT SPE ^.size = ^.size
0.187	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.174	OUT ADD ^.layer_0110 = ^.layer_011
0.169	IN  SPE ^.layer_0.shape.color = blue
0.165	IN  SPE ^.layer_0.shape.mask = Border
0.161	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.157	OUT SPE ^.layer_011.shape.size = span(^.layer_0.pos, ^.layer_011.pos)
0.154	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j - 2
0.152	IN  SPE ^.color = black
0.150	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.148	OUT SPE ^.layer_0111.pos.j = right(^.layer_0) / '2
0.147	OUT SPE ^.layer_01111.shape.mask = Full
0.146	OUT SPE ^.color = black
0.046	
0.045	IN  GEN ^.layer_0.shape.mask = ?
0.045	IN  GEN ^.layer_0.shape.color = ?
0.045	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color ^.layer_01.shape.color and mask ? at ^.layer_0.pos + (1, 1)
  _0110: ^.layer_011
  _011: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,right(^.layer_0) / '2)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Border at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 77.5 + 3834.2 = 3911.7
DL output with Mo: L = 224.6 + 3574.4 = 3799.0
DL input+output M: L = 302.1 + 7408.6 = 7710.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color ^.layer_01.shape.color and mask ? at ^.layer_0.pos + (1, 1)
  _0110: ^.layer_011
  _011: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,right(^.layer_0) / '2)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 0.0 = 70.7
DL output with Mo: L = 224.6 + 3574.4 = 3799.0
DL input+output M: L = 295.3 + 3574.4 = 3869.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 99306f82.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 99306f82.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 99306f82.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 99306f82.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.0 sec (15.0 sec/task)
bits-train-error = 3574.4 bits (3574.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-165] Checking task 9a4bb226.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42477.8 = 42490.4
DL output with Mo: L = 12.6 + 5869.4 = 5882.0
DL input+output M: L = 25.2 + 48347.3 = 48372.5

# learning a model for train pairs
2.000	
1.682	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.515	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.386	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.257	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.137	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.066	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.001	OUT SPE ^.size = ^.layer_01.shape.size
0.941	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT ADD ^.layer_010 = ^.layer_01111.shape at (?,?)
0.789	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.743	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.724	OUT SPE ^.layer_01.pos.i = 2
0.707	OUT SPE ^.layer_0.shape.size.i = 1
0.690	OUT SPE ^.layer_0.shape.mask = Full
0.674	OUT SPE ^.layer_01.shape.size.i = 1
0.657	OUT SPE ^.layer_01.shape.mask = Full
0.641	OUT SPE ^.layer_01.shape.size.j = ^.layer_01111.shape.size.j - 1
0.626	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.j - 2
0.614	OUT SPE ^.layer_010.pos.i = bottom(^.layer_0) - area(^.layer_011111.shape)
0.602	OUT SPE ^.layer_010.pos.j = bottom(^.layer_0) - area(^.layer_011111.shape)
0.595	OUT SPE ^.layer_01.pos.j = ^.layer_011.pos.j - min(^.layer_01111.shape.size.j, ^.layer_0111111.shape.size.j)
0.593	IN  SPE ^.layer_0111.shape.mask = Full
0.591	IN  SPE ^.layer_0111111.shape.mask = Full
0.589	IN  SPE ^.color = black
0.210	
0.209	IN  GEN ^.layer_0111111.shape.mask = ?
0.209	IN  GEN ^.layer_0111.shape.mask = ?
0.209	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (^.layer_011.pos.j - 2,?)
  _010: ^.layer_01111.shape at (bottom(^.layer_0) - area(^.layer_011111.shape),bottom(^.layer_0) - area(^.layer_011111.shape))
  _01: a rectangle with size (1,^.layer_01111.shape.size.j - 1) and color ? and mask Full at (2,^.layer_011.pos.j - min(^.layer_01111.shape.size.j, ^.layer_0111111.shape.size.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 190.3 + 16179.5 = 16369.8
DL output with Mo: L = 336.4 + 864.5 = 1200.9
DL input+output M: L = 526.7 + 17044.0 = 17570.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (^.layer_011.pos.j - 2,?)
  _010: ^.layer_01111.shape at (bottom(^.layer_0) - area(^.layer_011111.shape),bottom(^.layer_0) - area(^.layer_011111.shape))
  _01: a rectangle with size (1,^.layer_01111.shape.size.j - 1) and color ? and mask Full at (2,^.layer_011.pos.j - min(^.layer_01111.shape.size.j, ^.layer_0111111.shape.size.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 31.7 = 219.8
DL output with Mo: L = 336.4 + 864.5 = 1200.9
DL input+output M: L = 524.6 + 896.2 = 1420.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9a4bb226.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9a4bb226.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9a4bb226.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9a4bb226.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 864.5 bits (864.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-164] Checking task 9b2a60aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13474.9 = 13487.5
DL output with Mo: L = 12.6 + 36961.9 = 36974.5
DL input+output M: L = 25.2 + 50436.8 = 50462.0

# learning a model for train pairs
2.000	
1.518	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.307	OUT ADD ^.layer_0 = ^.layer_0
1.133	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.958	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.737	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.691	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.645	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.596	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.564	OUT ADD ^.layer_01111 = ^.layer_01111
0.532	OUT ADD ^.layer_010 = ^.layer_01
0.500	OUT ADD ^.layer_0110 = ^.layer_011
0.467	OUT ADD ^.layer_01110 = ^.layer_0111
0.441	OUT SPE ^.layer_011.shape = coloring(^.layer_0.shape, green)
0.415	OUT SPE ^.layer_0111.shape = coloring(^.layer_0.shape, ^.layer_011.shape.color)
0.396	OUT SPE ^.size = ^.size
0.384	IN  SPE ^.layer_0.shape.color = red
0.372	IN  SPE ^.layer_0111.shape.color = green
0.361	OUT SPE ^.layer_01.shape.mask = ^.layer_0.shape.mask
0.351	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size
0.345	IN  SPE ^.color = black
0.341	OUT SPE ^.layer_0111.pos.i = ^.layer_0111.pos.j + ^.layer_01111.pos.i - ^.layer_01.pos.i
0.337	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.j + ^.layer_01111.pos.j - ^.layer_01.pos.j
0.334	OUT SPE ^.layer_01.pos.j = average(^.layer_01.pos.j, ^.layer_01111.pos.j) - ^.layer_01.pos.j - ^.layer_0.pos.j
0.332	OUT SPE ^.color = black
0.037	
0.037	IN  GEN ^.layer_0111.shape.color = ?
0.037	IN  GEN ^.layer_0.shape.color = ?
0.037	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at (?,average(^.layer_01.pos.j, ^.layer_01111.pos.j) - ^.layer_01.pos.j - ^.layer_0.pos.j)
  _0110: ^.layer_011
  _011: coloring(^.layer_0.shape, green) at (?,^.layer_0.pos.j + ^.layer_01111.pos.j - ^.layer_01.pos.j)
  _01110: ^.layer_0111
  _0111: coloring(^.layer_0.shape, ^.layer_011.shape.color) at (^.layer_0111.pos.j + ^.layer_01111.pos.i - ^.layer_01.pos.i,?)
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 108.5 + 3972.2 = 4080.7
DL output with Mo: L = 312.0 + 762.8 = 1074.7
DL input+output M: L = 420.5 + 4735.0 = 5155.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at (?,average(^.layer_01.pos.j, ^.layer_01111.pos.j) - ^.layer_01.pos.j - ^.layer_0.pos.j)
  _0110: ^.layer_011
  _011: coloring(^.layer_0.shape, green) at (?,^.layer_0.pos.j + ^.layer_01111.pos.j - ^.layer_01.pos.j)
  _01110: ^.layer_0111
  _0111: coloring(^.layer_0.shape, ^.layer_011.shape.color) at (^.layer_0111.pos.j + ^.layer_01111.pos.i - ^.layer_01.pos.i,?)
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 0.0 = 101.7
DL output with Mo: L = 312.0 + 762.8 = 1074.7
DL input+output M: L = 413.7 + 762.8 = 1176.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b2a60aa.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9b2a60aa.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9b2a60aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 9b2a60aa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.2 sec (24.2 sec/task)
bits-train-error = 762.8 bits (762.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-163] Checking task 9b365c51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 60708.7 = 60721.4
DL output with Mo: L = 12.6 + 34400.5 = 34413.1
DL input+output M: L = 25.2 + 95109.2 = 95134.5

# learning a model for train pairs
2.000	
1.642	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.290	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.990	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.397	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.347	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.275	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.257	OUT SPE ^.size = ^.size
0.247	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.243	OUT SPE ^.layer_01.shape.size.j = 2
0.239	OUT SPE ^.layer_01.shape.color = ^.layer_01111.shape.color
0.236	OUT SPE ^.layer_0.shape.mask = Full
0.233	OUT SPE ^.layer_01.shape.mask = Full
0.230	OUT SPE ^.layer_011.shape.mask = Full
0.225	OUT SPE ^.layer_01.shape.size.i = ^.size.i - ^.layer_01.shape.size.j
0.220	OUT SPE ^.layer_011.shape.size.i = ^.size.i - ^.layer_01.shape.size.i
0.216	OUT SPE ^.layer_01.pos.j = center(^.layer_01111) + ^.size.i
0.213	IN  SPE ^.layer_0.shape.color = cyan
0.210	IN  SPE ^.layer_01.shape.color = cyan
0.208	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i + min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.206	OUT SPE ^.color = black
0.204	IN  SPE ^.layer_011.shape.mask = Full
0.202	IN  SPE ^.layer_0111.shape.mask = Full
0.201	IN  SPE ^.layer_01111.shape.mask = Full
0.199	IN  SPE ^.layer_011111.shape.mask = Full
0.198	IN  SPE ^.color = black
0.094	
0.094	IN  GEN ^.layer_01.shape.color = ?
0.094	IN  GEN ^.layer_0.shape.color = ?
0.094	IN  GEN ^.layer_011111.shape.mask = ?
0.093	IN  GEN ^.layer_01111.shape.mask = ?
0.093	IN  GEN ^.layer_0111.shape.mask = ?
0.093	IN  GEN ^.layer_011.shape.mask = ?
0.093	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size (^.size.i - ^.layer_01.shape.size.j,2) and color ^.layer_01111.shape.color and mask Full at (^.layer_0.pos.i + min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),center(^.layer_01111) + ^.size.i)
  _011: a rectangle with size (^.size.i - ^.layer_01.shape.size.i,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 174.3 + 6366.8 = 6541.1
DL output with Mo: L = 271.8 + 2833.5 = 3105.3
DL input+output M: L = 446.1 + 9200.4 = 9646.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size (^.size.i - ^.layer_01.shape.size.j,2) and color ^.layer_01111.shape.color and mask Full at (^.layer_0.pos.i + min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),center(^.layer_01111) + ^.size.i)
  _011: a rectangle with size (^.size.i - ^.layer_01.shape.size.i,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 31.7 = 195.2
DL output with Mo: L = 271.8 + 2833.5 = 3105.3
DL input+output M: L = 435.3 + 2865.2 = 3300.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b365c51.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b365c51.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b365c51.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,2) and color col10 and mask Full at (0,0)

TEST 9b365c51.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 38.4 sec (38.4 sec/task)
bits-train-error = 2833.5 bits (2833.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-162] Checking task 9b4c17c4.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 120883.1 = 120895.7
DL output with Mo: L = 12.6 + 120883.1 = 120895.7
DL input+output M: L = 25.2 + 241766.2 = 241791.4

# learning a model for train pairs
2.000	
1.265	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	OUT ADD ^.layer_0 = ^.layer_0
0.426	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.354	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.090	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 31946.7 = 31985.6
DL output with Mo: L = 68.8 + 10737.6 = 10806.4
DL input+output M: L = 107.6 + 42684.4 = 42792.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 68.8 + 10737.6 = 10806.4
DL input+output M: L = 107.6 + 10737.6 = 10845.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9b4c17c4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b4c17c4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b4c17c4.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9b4c17c4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 9b4c17c4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 9b4c17c4.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.5 sec (58.5 sec/task)
bits-train-error = 10737.6 bits (10737.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-161] Checking task 9bebae7a.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29799.8 = 29812.4
DL output with Mo: L = 12.6 + 37264.6 = 37277.2
DL input+output M: L = 25.2 + 67064.4 = 67089.6

# learning a model for train pairs
2.000	
1.129	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.618	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.340	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.313	OUT SPE ^.size = ^.size
0.303	IN  SPE ^.layer_0.shape.color = yellow
0.294	IN  SPE ^.layer_01.shape.color = pink
0.286	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.279	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.275	IN  SPE ^.color = black
0.271	OUT SPE ^.color = black
0.086	
0.085	IN  DEL ^.layer_01
0.085	IN  GEN ^.layer_0.shape.color = ?
0.085	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 5519.5 = 5590.5
DL output with Mo: L = 38.6 + 3086.9 = 3125.4
DL input+output M: L = 109.6 + 8606.4 = 8716.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 38.6 + 3086.9 = 3125.4
DL input+output M: L = 77.4 + 3086.9 = 3164.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9bebae7a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9bebae7a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9bebae7a.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9bebae7a.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9bebae7a.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 9bebae7a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 3086.9 bits (3086.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-160] Checking task 9c1e755f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26507.6 = 26520.2
DL output with Mo: L = 12.6 + 73479.1 = 73491.7
DL input+output M: L = 25.2 + 99986.7 = 100011.9

# learning a model for train pairs
2.000	
1.683	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.409	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.214	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.064	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	OUT ADD ^.layer_00 = ^.layer_0
0.820	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	OUT SPE ^.size = ^.size
0.801	IN  SPE ^.layer_0.shape.color = grey
0.796	IN  SPE ^.layer_0.shape.mask = Full
0.791	IN  SPE ^.layer_01.shape.mask = Full
0.786	IN  SPE ^.layer_011.shape.mask = Full
0.782	IN  SPE ^.color = black
0.780	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.778	OUT SPE ^.layer_01.shape.size.j = max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
0.775	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.773	OUT SPE ^.layer_0.shape.mask = Full
0.771	OUT SPE ^.layer_01.shape.mask = Full
0.380	
0.379	IN  DEL ^.layer_011
0.379	IN  GEN ^.layer_01.shape.mask = ?
0.379	IN  GEN ^.layer_0.shape.mask = ?
0.379	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 95.7 + 10419.5 = 10515.3
DL output with Mo: L = 97.9 + 27447.4 = 27545.3
DL input+output M: L = 193.6 + 37867.0 = 38060.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 40.0 = 107.5
DL output with Mo: L = 97.9 + 27435.7 = 27533.6
DL input+output M: L = 165.4 + 27475.7 = 27641.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9c1e755f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9c1e755f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9c1e755f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9c1e755f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST 9c1e755f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.5 sec (56.5 sec/task)
bits-train-error = 27435.7 bits (27435.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-159] Checking task 9c56f360.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27126.2 = 27138.9
DL output with Mo: L = 12.6 + 27126.2 = 27138.9
DL input+output M: L = 25.2 + 54252.5 = 54277.7

# learning a model for train pairs
2.000	
1.585	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.304	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.274	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT SPE ^.layer_0.pos = ^.layer_0.pos
1.016	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.980	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.957	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.934	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.350	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 15844.5 = 15883.4
DL output with Mo: L = 141.7 + 9323.5 = 9465.2
DL input+output M: L = 180.6 + 25168.0 = 25348.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 141.7 + 9323.5 = 9465.2
DL input+output M: L = 180.6 + 9323.5 = 9504.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9c56f360.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9c56f360.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9c56f360.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 9c56f360.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 9323.5 bits (9323.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-158] Checking task 9caba7c3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 193481.8 = 193494.4
DL output with Mo: L = 12.6 + 212943.9 = 212956.6
DL input+output M: L = 25.2 + 406425.7 = 406451.0

# learning a model for train pairs
2.000	
1.218	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.542	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.538	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.493	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.490	OUT SPE ^.size = ^.size
0.488	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.487	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.463	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.447	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.423	OUT SPE ^.layer_0111.shape.size = '(3, 3)
0.417	OUT ADD ^.layer_01110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.401	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.399	OUT SPE ^.layer_01110.shape.size = '(3, 3)
0.391	OUT SPE ^.layer_011.shape.size = '(3, 3)
0.389	OUT SPE ^.layer_0111111.shape.size = '(2, 2)
0.388	OUT SPE ^.layer_01111.shape.size.j = 3
0.387	OUT SPE ^.layer_01110.shape.color = orange
0.386	OUT SPE ^.layer_0111111.shape.color = red
0.386	OUT SPE ^.color = ^.color
0.385	OUT SPE ^.layer_011111.shape.mask = Full
0.385	OUT SPE ^.layer_0111.shape.mask = Full
0.167	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size '(3, 3) and color ? and mask ? at (?,?)
  _01110: a rectangle with size '(3, 3) and color orange and mask ? at (?,?)
  _0111: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size '(2, 2) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 42188.1 = 42226.9
DL output with Mo: L = 254.8 + 35169.9 = 35424.7
DL input+output M: L = 293.6 + 77358.0 = 77651.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size '(3, 3) and color ? and mask ? at (?,?)
  _01110: a rectangle with size '(3, 3) and color orange and mask ? at (?,?)
  _0111: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size '(2, 2) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 254.8 + 35169.9 = 35424.7
DL input+output M: L = 293.6 + 35169.9 = 35463.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9caba7c3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN 9caba7c3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9caba7c3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST 9caba7c3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 35169.9 bits (35169.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-157] Checking task 9ddd00f0.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 17671.7 = 17684.3
DL output with Mo: L = 12.6 + 23242.9 = 23255.5
DL input+output M: L = 25.2 + 40914.6 = 40939.8

# learning a model for train pairs
2.000	
1.001	OUT SPE ^ = closeSym(flipHeight; rotate90; rotate180; , black, ^.grid)
0.661	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.476	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.341	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	IN  SPE ^.color = black
0.006	
0.004	IN  DEL ^.layer_011
0.003	IN  DEL ^.layer_01
0.001	IN  DEL ^.layer_0
0.001	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 5871.0 = 5960.4
DL output with Mo: L = 17.5 + 0.0 = 17.5
DL input+output M: L = 106.9 + 5871.0 = 5977.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
closeSym(flipHeight; rotate90; rotate180; , black, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 17.5 + 0.0 = 17.5
DL input+output M: L = 30.1 + 0.0 = 30.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9ddd00f0.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9ddd00f0.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9ddd00f0.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-156] Checking task 9def23fe.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 59550.0 = 59562.6
DL output with Mo: L = 12.6 + 180711.0 = 180723.6
DL input+output M: L = 25.2 + 240261.0 = 240286.2

# learning a model for train pairs
2.000	
1.127	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.322	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.312	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.301	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.291	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.281	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.271	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.260	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.250	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.241	OUT ADD ^.layer_01 = ^.layer_01
0.234	OUT ADD ^.layer_011 = ^.layer_011
0.228	OUT ADD ^.layer_0111 = ^.layer_0111
0.221	OUT ADD ^.layer_01111 = ^.layer_01111
0.215	OUT ADD ^.layer_011111 = ^.layer_011111
0.208	OUT ADD ^.layer_0111111 = ^.layer_0111111
0.201	OUT ADD ^.layer_01111111 = ^.layer_01111111
0.197	OUT SPE ^.size = ^.size
0.194	OUT SPE ^.layer_0.shape.size = ^.size
0.191	IN  SPE ^.layer_0.shape.color = red
0.189	OUT SPE ^.layer_0.pos = '(0, 0)
0.187	IN  SPE ^.layer_0.shape.mask = Full
0.186	IN  SPE ^.color = black
0.185	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.184	OUT SPE ^.color = black
0.070	
0.070	IN  GEN ^.layer_0.shape.color = ?
0.070	IN  GEN ^.layer_0.shape.mask = ?
0.070	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
  _01111111: ^.layer_01111111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 161.4 + 6787.7 = 6949.2
DL output with Mo: L = 72.0 + 12154.2 = 12226.2
DL input+output M: L = 233.5 + 18941.9 = 19175.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0, 0)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: ^.layer_011111
  _0111111: ^.layer_0111111
  _01111111: ^.layer_01111111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 157.0 + 0.0 = 157.0
DL output with Mo: L = 72.0 + 12154.2 = 12226.2
DL input+output M: L = 229.0 + 12154.2 = 12383.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9def23fe.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN 9def23fe.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9def23fe.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9def23fe.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 40.0 sec (40.0 sec/task)
bits-train-error = 12154.2 bits (12154.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-155] Checking task 9f27f097.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 50249.6 = 50262.2
DL output with Mo: L = 12.6 + 50249.6 = 50262.2
DL input+output M: L = 25.2 + 100499.2 = 100524.4

# learning a model for train pairs
2.000	
1.481	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.014	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.708	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.461	OUT ADD ^.layer_00 = ^.layer_01
0.331	OUT ADD ^.layer_01 = ^.layer_011
0.199	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
0.174	OUT SPE ^.layer_0.shape = applySym(flipWidth, ^.layer_01.shape)
0.162	OUT SPE ^.size = ^.size
0.155	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.149	OUT SPE ^.color = ^.color
0.147	IN  SPE ^.layer_0.shape.color = black
0.144	OUT SPE ^.layer_011.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) + 1
0.141	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i - ^.layer_01.pos.i - ^.layer_0.pos.i
0.139	IN  SPE ^.layer_0.shape.mask = Full
0.137	IN  SPE ^.layer_011.shape.mask = Full
0.036	
0.036	IN  GEN ^.layer_0.shape.color = ?
0.036	IN  GEN ^.layer_011.shape.mask = ?
0.036	IN  GEN ^.layer_0.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_01
  _0: applySym(flipWidth, ^.layer_01.shape) at ^.layer_0.pos
  _01: ^.layer_011
  _011: ^.layer_011.shape at (^.layer_011.pos.i - ^.layer_01.pos.i - ^.layer_0.pos.i,span(^.layer_0.pos.j, ^.layer_01.pos.j) + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 94.6 + 5081.6 = 5176.2
DL output with Mo: L = 157.3 + 1554.9 = 1712.2
DL input+output M: L = 251.9 + 6636.5 = 6888.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_01
  _0: applySym(flipWidth, ^.layer_01.shape) at ^.layer_0.pos
  _01: ^.layer_011
  _011: ^.layer_011.shape at (^.layer_011.pos.i - ^.layer_01.pos.i - ^.layer_0.pos.i,span(^.layer_0.pos.j, ^.layer_01.pos.j) + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 157.3 + 1554.9 = 1712.2
DL input+output M: L = 246.5 + 1554.9 = 1801.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9f27f097.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9f27f097.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN 9f27f097.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST 9f27f097.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.7 sec (7.7 sec/task)
bits-train-error = 1554.9 bits (1554.9 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-154] Checking task a04b2602.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 160479.1 = 160491.7
DL output with Mo: L = 12.6 + 193245.2 = 193257.9
DL input+output M: L = 25.2 + 353724.3 = 353749.6

# learning a model for train pairs
2.000	
1.350	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.951	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.773	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.684	OUT ADD ^.layer_01 = ^.layer_01
0.512	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 27687.2 = 27751.4
DL output with Mo: L = 43.7 + 98789.1 = 98832.8
DL input+output M: L = 108.0 + 126476.3 = 126584.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 43.7 + 98789.1 = 98832.8
DL input+output M: L = 108.0 + 98809.1 = 98917.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a04b2602.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a04b2602.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a04b2602.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST a04b2602.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.4 sec (58.4 sec/task)
bits-train-error = 98789.1 bits (98789.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-153] Checking task a096bf4d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 267932.5 = 267945.1
DL output with Mo: L = 12.6 + 267932.5 = 267945.1
DL input+output M: L = 25.2 + 535865.0 = 535890.2

# learning a model for train pairs
2.000	
1.284	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.517	OUT ADD ^.layer_0 = ^.layer_0
0.506	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.477	OUT ADD ^.layer_011 = ^.layer_01
0.470	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.467	OUT SPE ^.size = ^.size
0.463	OUT SPE ^.layer_0111.shape.size.i = 2
0.459	OUT ADD ^.layer_01110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.458	OUT SPE ^.layer_00.shape.size = '(2, 2)
0.457	OUT SPE ^.color = ^.color
0.456	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.455	OUT SPE ^.layer_01110.pos.j = 2
0.447	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.445	OUT SPE ^.layer_001.shape.size = '(2, 2)
0.170	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _001: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: ^.layer_01.shape at (?,^.layer_01.pos.j)
  _011: ^.layer_01
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,2)
  _0111: a rectangle with size (2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 73686.9 = 73751.1
DL output with Mo: L = 162.2 + 45215.6 = 45377.8
DL input+output M: L = 226.4 + 118902.5 = 119128.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _001: a rectangle with size '(2, 2) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: ^.layer_01.shape at (?,^.layer_01.pos.j)
  _011: ^.layer_01
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,2)
  _0111: a rectangle with size (2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 162.2 + 45215.6 = 45377.8
DL input+output M: L = 226.4 + 45235.6 = 45462.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a096bf4d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a096bf4d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a096bf4d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST a096bf4d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 45215.6 bits (45215.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-152] Checking task a3f84088.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 61220.5 = 61233.1
DL output with Mo: L = 12.6 + 159034.6 = 159047.2
DL input+output M: L = 25.2 + 220255.1 = 220280.3

# learning a model for train pairs
2.000	
1.044	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.396	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.205	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.135	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.107	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.101	OUT SPE ^.size = ^.size
0.098	IN  SPE ^.layer_0.shape.color = grey
0.094	IN  SPE ^.layer_0.shape.mask = Border
0.092	OUT ADD ^.layer_00 = ^.layer_0
0.089	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 1)
0.086	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (2, 2)
0.084	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j - 2
0.082	IN  SPE ^.color = black
0.081	OUT SPE ^.layer_0.shape.color = red
0.079	OUT SPE ^.layer_01.shape.color = grey
0.079	OUT SPE ^.color = black
0.044	
0.044	IN  GEN ^.layer_0.shape.mask = ?
0.044	IN  GEN ^.layer_0.shape.color = ?
0.044	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color red and mask ? at ^.layer_0.pos + (1, 1)
  _01: a rectangle with size (?,?) and color grey and mask ? at ^.layer_0.pos + (2, 2)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Border at (?,?)

DL input  with Mi: L = 45.6 + 2126.4 = 2172.0
DL output with Mo: L = 187.5 + 6671.9 = 6859.4
DL input+output M: L = 233.1 + 8798.3 = 9031.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color red and mask ? at ^.layer_0.pos + (1, 1)
  _01: a rectangle with size (?,?) and color grey and mask ? at ^.layer_0.pos + (2, 2)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 187.5 + 6671.9 = 6859.4
DL input+output M: L = 226.3 + 6671.9 = 6898.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a3f84088.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a3f84088.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a3f84088.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a3f84088.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST a3f84088.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 46.6 sec (46.6 sec/task)
bits-train-error = 6671.9 bits (6671.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-151] Checking task a406ac07.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22126.5 = 22139.1
DL output with Mo: L = 12.6 + 43007.1 = 43019.8
DL input+output M: L = 25.2 + 65133.6 = 65158.9

# learning a model for train pairs
2.000	
1.833	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.671	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.530	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.431	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.337	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.243	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.174	OUT ADD ^.layer_010 = ^.layer_01
1.105	OUT ADD ^.layer_0111 = ^.layer_011
1.043	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.982	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	OUT ADD ^.layer_01111 = ^.layer_01111
0.878	OUT ADD ^.layer_01110 = ^.layer_0111
0.820	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.774	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.709	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	OUT SPE ^.size = ^.size
0.691	IN  SPE ^.layer_011.shape.mask = Full
0.686	IN  SPE ^.layer_0111.shape.mask = Full
0.682	IN  SPE ^.layer_01111.shape.mask = Full
0.677	IN  SPE ^.layer_011111.shape.mask = Full
0.673	IN  SPE ^.layer_0111111.shape.mask = Full
0.669	IN  SPE ^.layer_01111111.shape.mask = Full
0.664	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j
0.660	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.j
0.656	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.j
0.648	OUT SPE ^.layer_011.shape.size = '(2, 2)
0.645	IN  SPE ^.layer_01.shape.mask = Full
0.641	OUT SPE ^.layer_011.shape.color = ^.layer_01111.shape.color
0.638	IN  SPE ^.color = black
0.635	OUT SPE ^.layer_011111.shape.size.i = ^.layer_011111.shape.size.i
0.632	OUT SPE ^.layer_0.shape.mask = Full
0.260	
0.258	IN  DEL ^.layer_01111111
0.257	IN  DEL ^.layer_0111111
0.257	IN  GEN ^.layer_011111.shape.mask = ?
0.257	IN  GEN ^.layer_01111.shape.mask = ?
0.257	IN  GEN ^.layer_0111.shape.mask = ?
0.257	IN  GEN ^.layer_011.shape.mask = ?
0.257	IN  GEN ^.layer_01.shape.mask = ?
0.257	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,?) and color ? and mask Full at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_01.shape.size.j,^.layer_01.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size '(2, 2) and color ^.layer_01111.shape.color and mask ? at (?,?)
  _01110: ^.layer_0111
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: a rectangle with size (^.layer_011111.shape.size.i,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 219.8 + 8266.8 = 8486.6
DL output with Mo: L = 178.8 + 10538.9 = 10717.7
DL input+output M: L = 398.7 + 18805.7 = 19204.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,?) and color ? and mask Full at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_01.shape.size.j,^.layer_01.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size '(2, 2) and color ^.layer_01111.shape.color and mask ? at (?,?)
  _01110: ^.layer_0111
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: a rectangle with size (^.layer_011111.shape.size.i,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 0.0 = 163.5
DL output with Mo: L = 178.8 + 10538.9 = 10717.7
DL input+output M: L = 342.4 + 10538.9 = 10881.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a406ac07.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a406ac07.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a406ac07.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST a406ac07.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 10538.9 bits (10538.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-150] Checking task a57f2f04.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 140334.5 = 140347.1
DL output with Mo: L = 12.6 + 140334.5 = 140347.1
DL input+output M: L = 25.2 + 280669.0 = 280694.2

# learning a model for train pairs
2.000	
1.163	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.461	OUT ADD ^.layer_01 = ^.layer_0
0.243	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.238	OUT SPE ^.size = ^.size
0.236	OUT SPE ^.layer_011.shape.size.j = ^.size.j / '2
0.234	IN  SPE ^.layer_0.shape.color = cyan
0.183	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.170	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.154	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.j
0.153	OUT SPE ^.layer_011.shape.color = ^.layer_01.shape.color
0.152	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.151	OUT SPE ^.layer_011.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) / '2
0.151	OUT SPE ^.color = black
0.150	IN  SPE ^.color = black
0.038	
0.038	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,^.layer_011.pos.j)
  _01: ^.layer_0
  _011: a rectangle with size (?,^.size.j / '2) and color ^.layer_01.shape.color and mask ? at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.7 + 15663.0 = 15755.7
DL output with Mo: L = 182.9 + 5119.7 = 5302.7
DL input+output M: L = 275.7 + 20782.7 = 21058.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,^.layer_011.pos.j)
  _01: ^.layer_0
  _011: a rectangle with size (?,^.size.j / '2) and color ^.layer_01.shape.color and mask ? at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 0.0 = 89.4
DL output with Mo: L = 182.9 + 5119.7 = 5302.7
DL input+output M: L = 272.3 + 5119.7 = 5392.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a57f2f04.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a57f2f04.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a57f2f04.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST a57f2f04.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.2 sec (22.2 sec/task)
bits-train-error = 5119.7 bits (5119.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-149] Checking task a59b95c0.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9096.2 = 9108.8
DL output with Mo: L = 12.6 + 81286.6 = 81299.2
DL input+output M: L = 25.2 + 90382.8 = 90408.0

# learning a model for train pairs
2.000	
1.614	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.288	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	IN  SPE ^.layer_01.shape.mask = Full
1.259	OUT SPE ^.size = ^.size * colorCount(^.grid)
0.740	
0.737	IN  DEL ^.layer_01
0.734	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size * colorCount(^.grid) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 65.2 + 4728.3 = 4793.5
DL output with Mo: L = 56.2 + 59504.9 = 59561.0
DL input+output M: L = 121.4 + 64233.1 = 64354.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size * colorCount(^.grid) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 56.2 + 59504.9 = 59561.0
DL input+output M: L = 68.8 + 59504.9 = 59573.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a59b95c0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a59b95c0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a59b95c0.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a59b95c0.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN a59b95c0.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST a59b95c0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.5 sec (6.5 sec/task)
bits-train-error = 59504.9 bits (59504.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-148] Checking task a680ac02.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 77930.3 = 77942.9
DL output with Mo: L = 12.6 + 28216.7 = 28229.3
DL input+output M: L = 25.2 + 106147.0 = 106172.3

# learning a model for train pairs
2.000	
1.579	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.310	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.084	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.670	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.494	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.326	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.299	OUT SPE ^.layer_01.shape = ^.layer_0111.shape
0.295	OUT SPE ^.layer_011.shape.mask = Border
0.290	OUT SPE ^.layer_0.shape.mask = Border
0.286	OUT SPE ^.layer_0.pos.j = min(^.layer_011.pos.j, ^.layer_0111.pos.j)
0.283	OUT SPE ^.layer_011.pos.i = ^.layer_01.pos.j / '2
0.280	OUT SPE ^.layer_0.pos.i = min(^.layer_01.pos.j, ^.layer_0111.pos.j) / '2
0.278	IN  SPE ^.layer_0.shape.color = cyan
0.276	IN  SPE ^.layer_0111.shape.mask = Border
0.268	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.199	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.198	IN  SPE ^.layer_0.shape.mask = Full
0.197	IN  SPE ^.layer_011.shape.mask = Full
0.195	IN  SPE ^.layer_01.shape.mask = Full
0.194	IN  SPE ^.color = black
0.089	
0.089	IN  DEL ^.layer_011111
0.089	IN  DEL ^.layer_01111
0.089	IN  GEN ^.layer_0111.shape.mask = ?
0.089	IN  GEN ^.layer_011.shape.mask = ?
0.089	IN  GEN ^.layer_01.shape.mask = ?
0.089	IN  GEN ^.layer_0.shape.mask = ?
0.089	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (min(^.layer_01.pos.j, ^.layer_0111.pos.j) / '2,min(^.layer_011.pos.j, ^.layer_0111.pos.j))
  _01: ^.layer_0111.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (^.layer_01.pos.j / '2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 173.3 + 8197.0 = 8370.3
DL output with Mo: L = 233.5 + 2222.8 = 2456.4
DL input+output M: L = 406.8 + 10419.9 = 10826.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (min(^.layer_01.pos.j, ^.layer_0111.pos.j) / '2,min(^.layer_011.pos.j, ^.layer_0111.pos.j))
  _01: ^.layer_0111.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (^.layer_01.pos.j / '2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 233.5 + 2222.8 = 2456.4
DL input+output M: L = 351.0 + 2222.8 = 2573.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a680ac02.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a680ac02.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a680ac02.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST a680ac02.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.3 sec (16.3 sec/task)
bits-train-error = 2222.8 bits (2222.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-147] Checking task a8610ef7.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22718.8 = 22731.4
DL output with Mo: L = 12.6 + 30838.1 = 30850.7
DL input+output M: L = 25.2 + 53556.9 = 53582.1

# learning a model for train pairs
2.000	
1.186	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.777	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT ADD ^.layer_00 = ^.layer_0
0.533	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	OUT SPE ^.size = ^.size
0.492	IN  SPE ^.color = cyan
0.483	IN  SPE ^.layer_0.shape.color = black
0.474	OUT ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.221	
0.221	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 5743.0 = 5791.8
DL output with Mo: L = 93.6 + 6659.2 = 6752.8
DL input+output M: L = 142.4 + 12402.2 = 12544.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 0.0 = 42.2
DL output with Mo: L = 93.6 + 6659.2 = 6752.8
DL input+output M: L = 135.7 + 6659.2 = 6795.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a8610ef7.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a8610ef7.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a8610ef7.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a8610ef7.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST a8610ef7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 6659.2 bits (6659.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-146] Checking task a934301b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 79690.7 = 79703.3
DL output with Mo: L = 12.6 + 34598.7 = 34611.3
DL input+output M: L = 25.2 + 114289.3 = 114314.6

# learning a model for train pairs
2.000	
1.655	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.386	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.193	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.025	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.746	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.635	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.549	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.498	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.471	OUT ADD ^.layer_010 = ^.layer_0111.shape at (?,?)
0.446	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.427	OUT SPE ^.size = ^.size
0.411	OUT ADD ^.layer_0100 = a point with color ? at (?,?)
0.404	OUT SPE ^.layer_0100.shape.color = cyan
0.396	OUT SPE ^.layer_01.shape.size = '(1, 1)
0.390	IN  ADD ^.layer_0111110 = a point with color ? at (?,?)
0.385	IN  SPE ^.layer_0111.shape.mask = Full
0.379	OUT SPE ^.layer_011.shape.size.j = ^.layer_011.shape.size.j - 1
0.374	IN  SPE ^.layer_0.shape.mask = Full
0.370	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.365	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.360	OUT SPE ^.layer_01.shape.color = cyan
0.357	OUT SPE ^.layer_0.shape.mask = Full
0.354	OUT SPE ^.layer_01.shape.mask = Full
0.350	OUT SPE ^.layer_011.shape.size.i = ^.layer_01.shape.size.j - 1
0.347	OUT SPE ^.layer_011.shape.mask = Full
0.343	OUT SPE ^.layer_010.pos.i = span(^.layer_01.pos.j, ^.layer_0111.pos.j)
0.082	
0.081	IN  DEL ^.layer_011111
0.081	IN  DEL ^.layer_01111
0.081	IN  DEL ^.layer_0111110
0.081	IN  DEL ^.layer_00
0.081	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _0100: a point with color cyan at (?,?)
  _010: ^.layer_0111.shape at (span(^.layer_01.pos.j, ^.layer_0111.pos.j),?)
  _01: a rectangle with size '(1, 1) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (^.layer_01.shape.size.j - 1,^.layer_011.shape.size.j - 1) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111110: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 196.1 + 20794.3 = 20990.4
DL output with Mo: L = 215.4 + 2525.3 = 2740.7
DL input+output M: L = 411.5 + 23319.6 = 23731.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _0100: a point with color cyan at (?,?)
  _010: ^.layer_0111.shape at (span(^.layer_01.pos.j, ^.layer_0111.pos.j),?)
  _01: a rectangle with size '(1, 1) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (^.layer_01.shape.size.j - 1,^.layer_011.shape.size.j - 1) and color ^.layer_011.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 115.1 + 0.0 = 115.1
DL output with Mo: L = 215.4 + 2525.3 = 2740.7
DL input+output M: L = 330.5 + 2525.3 = 2855.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN a934301b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a934301b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN a934301b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Span: same int

TEST a934301b.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 59.3 sec (59.3 sec/task)
bits-train-error = 2525.3 bits (2525.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-145] Checking task aa18de87.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12516.5 = 12529.1
DL output with Mo: L = 12.6 + 28086.2 = 28098.8
DL input+output M: L = 25.2 + 40602.7 = 40627.9

# learning a model for train pairs
2.000	
1.277	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.382	OUT ADD ^.layer_00 = ^.layer_0
0.357	OUT SPE ^.size = ^.size
0.349	OUT SPE ^.layer_0.shape.color = red
0.341	IN  SPE ^.color = black
0.338	OUT SPE ^.color = black
0.072	
0.072	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 3328.8 = 3367.8
DL output with Mo: L = 47.1 + 1895.6 = 1942.8
DL input+output M: L = 86.1 + 5224.5 = 5310.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 47.1 + 1895.6 = 1942.8
DL input+output M: L = 86.0 + 1895.6 = 1981.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa18de87.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN aa18de87.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa18de87.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa18de87.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST aa18de87.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 1895.6 bits (1895.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-144] Checking task aa300dc3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 68158.1 = 68170.7
DL output with Mo: L = 12.6 + 68158.1 = 68170.7
DL input+output M: L = 25.2 + 136316.1 = 136341.3

# learning a model for train pairs
2.000	
1.075	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.274	OUT ADD ^.layer_0 = ^.layer_0
0.155	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.144	OUT SPE ^.size = ^.size
0.139	IN  SPE ^.layer_0.shape.color = grey
0.136	OUT SPE ^.layer_01.shape.color = cyan
0.133	OUT SPE ^.layer_01.pos.i = 1
0.131	OUT SPE ^.color = black
0.130	IN  SPE ^.color = black
0.037	
0.037	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color cyan and mask ? at (1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 6308.3 = 6350.6
DL output with Mo: L = 48.9 + 2456.7 = 2505.6
DL input+output M: L = 91.2 + 8765.0 = 8856.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color cyan and mask ? at (1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 0.0 = 39.0
DL output with Mo: L = 48.9 + 2456.7 = 2505.6
DL input+output M: L = 87.8 + 2456.7 = 2544.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa300dc3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa300dc3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa300dc3.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa300dc3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST aa300dc3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 2456.7 bits (2456.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-143] Checking task aa4ec2a5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 142382.8 = 142395.4
DL output with Mo: L = 12.6 + 268885.5 = 268898.1
DL input+output M: L = 25.2 + 411268.3 = 411293.5

# learning a model for train pairs
2.000	
1.310	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.988	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.731	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.599	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.494	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.423	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.112	
0.112	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 44170.2 = 44209.0
DL output with Mo: L = 138.9 + 29996.5 = 30135.4
DL input+output M: L = 177.7 + 74166.7 = 74344.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 29996.5 = 30135.4
DL input+output M: L = 151.5 + 29996.5 = 30148.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa4ec2a5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa4ec2a5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aa4ec2a5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST aa4ec2a5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 29996.5 bits (29996.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-142] Checking task aab50785.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 171873.6 = 171886.2
DL output with Mo: L = 12.6 + 17463.0 = 17475.6
DL input+output M: L = 25.2 + 189336.6 = 189361.8

# learning a model for train pairs
2.000	
1.865	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.802	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.758	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.700	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.640	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.579	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.539	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.502	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.471	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.447	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.430	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.414	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.580	
0.580	IN  DEL ^.layer_011111
0.580	IN  DEL ^.layer_01111
0.580	IN  DEL ^.layer_0111
0.580	IN  DEL ^.layer_011
0.580	IN  DEL ^.layer_01
0.580	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 143224.6 = 143388.1
DL output with Mo: L = 126.4 + 9999.6 = 10126.0
DL input+output M: L = 289.9 + 153224.2 = 153514.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 126.4 + 9999.6 = 10126.0
DL input+output M: L = 139.0 + 9999.6 = 10138.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aab50785.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aab50785.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aab50785.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aab50785.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aab50785.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST aab50785.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 9999.6 bits (9999.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-141] Checking task ac0c5833.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 27556.5 = 27569.1
DL output with Mo: L = 12.6 + 53256.9 = 53269.5
DL input+output M: L = 25.2 + 80813.5 = 80838.7

# learning a model for train pairs
2.000	
1.782	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.694	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.606	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.517	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.429	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.368	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.341	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.315	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.534	
0.533	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 21523.8 = 21562.7
DL output with Mo: L = 188.1 + 28198.9 = 28387.1
DL input+output M: L = 227.0 + 49722.8 = 49949.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 188.1 + 28198.9 = 28387.1
DL input+output M: L = 200.8 + 28198.9 = 28399.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ac0c5833.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ac0c5833.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ac0c5833.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ac0c5833.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 28198.9 bits (28198.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-140] Checking task ac2e8ecf.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49714.5 = 49727.1
DL output with Mo: L = 12.6 + 49714.5 = 49727.1
DL input+output M: L = 25.2 + 99429.1 = 99454.3

# learning a model for train pairs
2.000	
1.776	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.537	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.359	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.166	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
1.014	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.859	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.733	OUT ADD ^.layer_010 = ^.layer_010.shape at (?,?)
0.616	IN  ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.548	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.473	IN  ADD ^.layer_01001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.396	OUT ADD ^.layer_0100 = ^.layer_0100.shape at (?,?)
0.333	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.316	OUT SPE ^.layer_011.shape = ^.layer_011.shape
0.302	OUT SPE ^.layer_0111.shape = ^.layer_01001.shape
0.289	OUT SPE ^.size = ^.size
0.282	OUT SPE ^.layer_0100.pos = projJ(^.layer_0100.pos)
0.278	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j
0.274	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.270	OUT SPE ^.layer_010.pos.j = ^.layer_010.pos.j
0.267	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.263	IN  SPE ^.layer_0.shape.mask = Border
0.260	IN  SPE ^.layer_0100.shape.mask = Border
0.257	IN  SPE ^.layer_01.shape.color = blue
0.253	OUT SPE ^.layer_0111.pos.j = ^.layer_01001.pos.j
0.251	OUT SPE ^.layer_010.pos.i = right(^.layer_0) + area(^.layer_01.shape)
0.248	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.j + area(^.layer_01001.shape)
0.245	OUT SPE ^.layer_0.pos.i = bottom(^.layer_011) - ^.layer_0100.shape.size.j
0.243	OUT SPE ^.layer_011.pos.i = middle(^.layer_01001) + area(^.layer_010.shape)
0.242	OUT SPE ^.color = black
0.240	IN  SPE ^.color = black
0.055	
0.055	IN  GEN ^.layer_0.shape.mask = ?
0.055	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (bottom(^.layer_011) - ^.layer_0100.shape.size.j,^.layer_0.pos.j)
  _0100: ^.layer_0100.shape at projJ(^.layer_0100.pos)
  _010: ^.layer_010.shape at (right(^.layer_0) + area(^.layer_01.shape),^.layer_010.pos.j)
  _01: ^.layer_01.shape at (^.layer_0.pos.j + area(^.layer_01001.shape),^.layer_01.pos.j)
  _011: ^.layer_011.shape at (middle(^.layer_01001) + area(^.layer_010.shape),^.layer_011.pos.j)
  _0111: ^.layer_01001.shape at (?,^.layer_01001.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 173.6 + 9274.5 = 9448.2
DL output with Mo: L = 333.7 + 2166.8 = 2500.5
DL input+output M: L = 507.3 + 11441.3 = 11948.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (bottom(^.layer_011) - ^.layer_0100.shape.size.j,^.layer_0.pos.j)
  _0100: ^.layer_0100.shape at projJ(^.layer_0100.pos)
  _010: ^.layer_010.shape at (right(^.layer_0) + area(^.layer_01.shape),^.layer_010.pos.j)
  _01: ^.layer_01.shape at (^.layer_0.pos.j + area(^.layer_01001.shape),^.layer_01.pos.j)
  _011: ^.layer_011.shape at (middle(^.layer_01001) + area(^.layer_010.shape),^.layer_011.pos.j)
  _0111: ^.layer_01001.shape at (?,^.layer_01001.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 170.2 + 40.0 = 210.2
DL output with Mo: L = 333.7 + 2166.8 = 2500.5
DL input+output M: L = 503.9 + 2206.8 = 2710.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac2e8ecf.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ac2e8ecf.json/2: 1 2nd (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac2e8ecf.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Middle: no middle, even height

TEST ac2e8ecf.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 36.1 sec (36.1 sec/task)
bits-train-error = 2166.8 bits (2166.8 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-139] Checking task ac3e2b04.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 54488.8 = 54501.4
DL output with Mo: L = 12.6 + 85349.9 = 85362.5
DL input+output M: L = 25.2 + 139838.7 = 139863.9

# learning a model for train pairs
2.000	
1.698	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.438	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.208	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.009	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.837	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.672	OUT ADD ^.layer_010 = ^.layer_011
0.559	OUT ADD ^.layer_0100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.477	OUT ADD ^.layer_01000 = ^.layer_01
0.402	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.334	OUT ADD ^.layer_01001 = ^.layer_0110
0.313	OUT ADD ^.layer_010000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.298	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.283	OUT ADD ^.layer_0100001 = ^.layer_0110.shape at (?,?)
0.273	OUT SPE ^.size = ^.size
0.270	OUT SPE ^.layer_0.shape.color = blue
0.268	IN  SPE ^.layer_0.shape.mask = Full
0.266	IN  SPE ^.layer_011.shape.mask = Full
0.263	IN  SPE ^.layer_0111.shape.mask = Full
0.261	IN  SPE ^.color = black
0.102	
0.102	IN  GEN ^.layer_0111.shape.mask = ?
0.102	IN  GEN ^.layer_011.shape.mask = ?
0.102	IN  GEN ^.layer_0.shape.mask = ?
0.102	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _010000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100001: ^.layer_0110.shape at (?,?)
  _01000: ^.layer_01
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01001: ^.layer_0110
  _010: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 142.0 + 8712.9 = 8854.9
DL output with Mo: L = 188.8 + 8253.7 = 8442.5
DL input+output M: L = 330.8 + 16966.6 = 17297.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _010000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100001: ^.layer_0110.shape at (?,?)
  _01000: ^.layer_01
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01001: ^.layer_0110
  _010: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 31.7 = 170.6
DL output with Mo: L = 188.8 + 8253.7 = 8442.5
DL input+output M: L = 327.6 + 8285.4 = 8613.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac3e2b04.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac3e2b04.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac3e2b04.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac3e2b04.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST ac3e2b04.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.2 sec (61.2 sec/task)
bits-train-error = 8253.7 bits (8253.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-138] Checking task ac605cbb.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6390.9 = 6403.5
DL output with Mo: L = 12.6 + 26751.2 = 26763.8
DL input+output M: L = 25.2 + 33142.1 = 33167.3

# learning a model for train pairs
2.000	
1.750	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.552	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.419	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.342	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	OUT SPE ^.size = ^.size
1.274	IN  SPE ^.color = black
1.262	OUT SPE ^.layer_0.shape.color = grey
1.250	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.i
1.243	OUT SPE ^.layer_011.shape.mask = Full
1.238	OUT SPE ^.color = black
1.233	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.459	
0.459	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 4996.5 = 5026.2
DL output with Mo: L = 110.6 + 11872.5 = 11983.1
DL input+output M: L = 140.3 + 16869.1 = 17009.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 40.0 = 69.5
DL output with Mo: L = 110.6 + 11872.5 = 11983.1
DL input+output M: L = 140.1 + 11912.5 = 12052.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ac605cbb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ac605cbb.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ac605cbb.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac605cbb.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ac605cbb.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ac605cbb.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST ac605cbb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.5 sec (10.5 sec/task)
bits-train-error = 11872.5 bits (11872.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-137] Checking task ad7e01d0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9271.2 = 9283.8
DL output with Mo: L = 12.6 + 88394.6 = 88407.2
DL input+output M: L = 25.2 + 97665.8 = 97691.0

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = compose(majorityColor(^.grid), ^.grid, ^.grid)
0.656	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.544	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.472	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.458	IN  SPE ^.layer_01.shape.mask = Full
0.011	
0.008	IN  DEL ^.layer_01
0.005	IN  DEL ^.layer_0
0.003	IN  DEL ^.layer_010
0.002	IN  DEL ^.layer_00

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 96.6 + 4153.6 = 4250.1
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 122.2 + 4153.6 = 4275.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
compose(majorityColor(^.grid), ^.grid, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 25.7 + 0.0 = 25.7
DL input+output M: L = 38.3 + 0.0 = 38.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ad7e01d0.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ad7e01d0.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ad7e01d0.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ad7e01d0.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ad7e01d0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-136] Checking task ae58858e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30004.8 = 30017.4
DL output with Mo: L = 12.6 + 30004.8 = 30017.4
DL input+output M: L = 25.2 + 60009.6 = 60034.8

# learning a model for train pairs
2.000	
1.783	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.566	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.394	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.222	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.097	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.973	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.901	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.786	OUT ADD ^.layer_0111 = ^.layer_0111
0.739	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.685	OUT SPE ^.layer_0 = coloring(^.layer_0, pink)
0.638	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.570	OUT ADD ^.layer_011111 = ^.layer_01111
0.541	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.509	OUT ADD ^.layer_0111111 = ^.layer_011111
0.484	OUT SPE ^.size = ^.size
0.469	OUT SPE ^.layer_011.pos = ^.layer_011.pos
0.455	OUT SPE ^.layer_011.shape.size = ^.layer_011.shape.size
0.443	OUT SPE ^.layer_01.shape.size = ^.layer_01111.shape.size + (1, 0)
0.433	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.424	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.417	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.409	IN  SPE ^.layer_0.shape.color = red
0.402	IN  SPE ^.layer_01.shape.color = red
0.094	
0.094	IN  GEN ^.layer_01.shape.color = ?
0.094	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, pink)
  _01: a rectangle with size ^.layer_01111.shape.size + (1, 0) and color ? and mask ^.layer_01.shape.mask at (?,?)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01111
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 185.5 + 9253.0 = 9438.5
DL output with Mo: L = 139.0 + 2489.7 = 2628.8
DL input+output M: L = 324.5 + 11742.7 = 12067.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: coloring(^.layer_0, pink)
  _01: a rectangle with size ^.layer_01111.shape.size + (1, 0) and color ? and mask ^.layer_01.shape.mask at (?,?)
  _011: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01111
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 178.9 + 0.0 = 178.9
DL output with Mo: L = 139.0 + 2489.7 = 2628.8
DL input+output M: L = 317.9 + 2489.7 = 2807.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ae58858e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ae58858e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ae58858e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ae58858e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST ae58858e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 2489.7 bits (2489.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-135] Checking task aee291af.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 118931.4 = 118944.0
DL output with Mo: L = 12.6 + 4330.9 = 4343.5
DL input+output M: L = 25.2 + 123262.3 = 123287.5

# learning a model for train pairs
2.000	
1.236	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.662	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.600	OUT SPE ^.color = ^.color
0.541	OUT SPE ^.layer_0.pos = '(1, 1)
0.502	OUT SPE ^.layer_0.shape.color = red
0.500	IN  SPE ^.color = cyan
0.471	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.372	OUT SPE ^.size = ^.layer_01.shape.size + (2, 2)
0.295	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size
0.266	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.236	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.222	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.220	IN  SPE ^.layer_0.shape.color = blue
0.219	IN  SPE ^.layer_01.shape.color = red
0.218	IN  SPE ^.layer_011.shape.color = red
0.216	IN  SPE ^.layer_0111.shape.color = red
0.092	
0.092	IN  DEL ^.layer_0111
0.091	IN  DEL ^.layer_011
0.091	IN  DEL ^.layer_0
0.091	IN  DEL ^.layer_01111

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size + (2, 2) and color ^.color and layers
  _0: a rectangle with size ^.layer_01.shape.size and color red and mask ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 158.8 + 14779.4 = 14938.2
DL output with Mo: L = 80.1 + 313.1 = 393.2
DL input+output M: L = 238.9 + 15092.5 = 15331.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size + (2, 2) and color ^.color and layers
  _0: a rectangle with size ^.layer_01.shape.size and color red and mask ? at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 0.0 = 48.8
DL output with Mo: L = 80.1 + 313.1 = 393.2
DL input+output M: L = 128.9 + 313.1 = 442.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aee291af.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aee291af.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN aee291af.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST aee291af.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.7 sec (5.7 sec/task)
bits-train-error = 313.1 bits (313.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-134] Checking task af22c60d.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1063091.1 = 1063103.7
DL output with Mo: L = 12.6 + 1027171.2 = 1027183.8
DL input+output M: L = 25.2 + 2090262.2 = 2090287.5

# learning a model for train pairs
2.000	
1.799	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.602	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.578	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.803	
0.803	IN  DEL ^.layer_01
0.803	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 823532.7 = 823596.9
DL output with Mo: L = 38.8 + 824662.2 = 824701.0
DL input+output M: L = 103.0 + 1648194.9 = 1648297.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 38.8 + 824662.2 = 824701.0
DL input+output M: L = 51.4 + 824662.2 = 824713.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN af22c60d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN af22c60d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN af22c60d.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN af22c60d.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST af22c60d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 824662.2 bits (824662.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-133] Checking task af24b4cc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 40970.8 = 40983.5
DL output with Mo: L = 12.6 + 6976.2 = 6988.8
DL input+output M: L = 25.2 + 47947.0 = 47972.2

# learning a model for train pairs
2.000	
1.853	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.715	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.612	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.518	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.431	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.343	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.254	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.162	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.076	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.993	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	OUT SPE ^.size = ^.layer_011.shape.size + (1, 3)
0.881	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT SPE ^.layer_0.pos = '(1, 1)
0.806	OUT SPE ^.layer_01.pos = '(1, 2)
0.768	OUT SPE ^.layer_011.pos = '(1, 3)
0.731	OUT SPE ^.layer_0111.pos = '(2, 2)
0.694	OUT SPE ^.layer_01111.pos = '(2, 3)
0.667	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.639	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.616	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
0.602	OUT SPE ^.layer_0.shape.size.j = 1
0.588	OUT SPE ^.layer_0.shape.mask = Full
0.571	OUT SPE ^.layer_0.shape.size = ^.layer_0111.shape.size - (1, 1)
0.561	OUT SPE ^.color = black
0.557	IN  SPE ^.layer_0111111.shape.color = green
0.554	IN  SPE ^.layer_0.shape.mask = Full
0.552	IN  SPE ^.layer_01.shape.mask = Full
0.547	IN  SPE ^.layer_01111.shape.mask = Full
0.545	IN  SPE ^.layer_0111111.shape.mask = Full
0.542	IN  SPE ^.layer_01111111.shape.mask = Full
0.541	IN  SPE ^.color = black
0.183	
0.183	IN  DEL ^.layer_0111111
0.182	IN  DEL ^.layer_01111111
0.181	IN  DEL ^.layer_01111
0.181	IN  DEL ^.layer_011111
0.181	IN  GEN ^.layer_01.shape.mask = ?
0.181	IN  GEN ^.layer_0.shape.mask = ?
0.181	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (1, 3) and color black and layers
  _0: a rectangle with size ^.layer_0111.shape.size - (1, 1) and color majorityColor(^.grid) and mask Full at '(1, 1)
  _01: a point with color ? at '(1, 2)
  _011: a point with color ? at '(1, 3)
  _0111: a point with color ? at '(2, 2)
  _01111: a point with color ? at '(2, 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 221.2 + 14643.6 = 14864.7
DL output with Mo: L = 197.4 + 1045.9 = 1243.3
DL input+output M: L = 418.5 + 15689.5 = 16108.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (1, 3) and color black and layers
  _0: a rectangle with size ^.layer_0111.shape.size - (1, 1) and color majorityColor(^.grid) and mask Full at '(1, 1)
  _01: a point with color ? at '(1, 2)
  _011: a point with color ? at '(1, 3)
  _0111: a point with color ? at '(2, 2)
  _01111: a point with color ? at '(2, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 197.4 + 1045.9 = 1243.3
DL input+output M: L = 311.5 + 1045.9 = 1357.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN af24b4cc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN af24b4cc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN af24b4cc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST af24b4cc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 1045.9 bits (1045.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-132] Checking task b0722778.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31712.4 = 31725.0
DL output with Mo: L = 12.6 + 9621.5 = 9634.1
DL input+output M: L = 25.2 + 41333.9 = 41359.1

# learning a model for train pairs
2.000	
1.878	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.721	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.633	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.561	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.511	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.461	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.415	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.350	OUT ADD ^.layer_0111 = ^.layer_0111.shape at (?,?)
1.295	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.244	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.215	OUT SPE ^.size = projI(^.size) + (0, 2)
1.197	OUT SPE ^.layer_0111.pos = projI(^.layer_0111.pos)
1.179	OUT SPE ^.layer_01111.shape.size = '(2, 1)
1.161	OUT SPE ^.layer_01111.pos = '(3, 0)
1.143	OUT SPE ^.layer_011111.pos = '(0, 0)
1.126	OUT SPE ^.layer_011.shape.size = '(2, 1)
1.101	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.083	OUT SPE ^.layer_0111111.pos = '(0, 1)
1.065	OUT SPE ^.layer_011.pos = '(3, 1)
1.048	OUT SPE ^.layer_0.shape.size = '(1, 2)
1.031	OUT SPE ^.layer_0111111.shape.size = '(2, 1)
0.252	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + (0, 2) and color ? and layers
  _0: a rectangle with size '(1, 2) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size '(2, 1) and color ? and mask ? at '(3, 1)
  _0111: ^.layer_0111.shape at projI(^.layer_0111.pos)
  _01111: a rectangle with size '(2, 1) and color ? and mask ? at '(3, 0)
  _011111: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _0111111: a rectangle with size '(2, 1) and color ? and mask ? at '(0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 24699.8 = 24813.9
DL output with Mo: L = 239.1 + 2155.8 = 2394.9
DL input+output M: L = 353.2 + 26855.6 = 27208.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projI(^.size) + (0, 2) and color ? and layers
  _0: a rectangle with size '(1, 2) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size '(2, 1) and color ? and mask ? at '(3, 1)
  _0111: ^.layer_0111.shape at projI(^.layer_0111.pos)
  _01111: a rectangle with size '(2, 1) and color ? and mask ? at '(3, 0)
  _011111: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _0111111: a rectangle with size '(2, 1) and color ? and mask ? at '(0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 239.1 + 2155.8 = 2394.9
DL input+output M: L = 353.2 + 2155.8 = 2509.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b0722778.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b0722778.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST b0722778.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 2155.8 bits (2155.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-131] Checking task b0f4d537.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 79127.4 = 79140.0
DL output with Mo: L = 12.6 + 37756.7 = 37769.3
DL input+output M: L = 25.2 + 116884.1 = 116909.4

# learning a model for train pairs
2.000	
1.487	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.925	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.733	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.646	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.159	
0.159	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 38518.4 = 38557.2
DL output with Mo: L = 114.1 + 5875.9 = 5990.1
DL input+output M: L = 153.0 + 44394.3 = 44547.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 5875.9 = 5990.1
DL input+output M: L = 126.7 + 5875.9 = 6002.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b0f4d537.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b0f4d537.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b0f4d537.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b0f4d537.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b0f4d537.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.4 sec (56.4 sec/task)
bits-train-error = 5875.9 bits (5875.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-130] Checking task b15fca0b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26322.4 = 26335.0
DL output with Mo: L = 12.6 + 45480.9 = 45493.5
DL input+output M: L = 25.2 + 71803.3 = 71828.5

# learning a model for train pairs
2.000	
1.571	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.208	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.001	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.823	OUT ADD ^.layer_00 = ^.layer_0
0.670	OUT ADD ^.layer_001 = ^.layer_01
0.601	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.519	OUT ADD ^.layer_000 = ^.layer_011
0.471	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.389	OUT ADD ^.layer_0011 = ^.layer_0111
0.370	OUT SPE ^.size = ^.size
0.359	IN  SPE ^.layer_0.shape.color = blue
0.349	IN  SPE ^.layer_01.shape.color = blue
0.342	IN  SPE ^.layer_0.shape.mask = Full
0.336	IN  SPE ^.layer_01.shape.mask = Full
0.330	IN  SPE ^.layer_011.shape.mask = Full
0.324	IN  SPE ^.layer_0111.shape.mask = Full
0.319	OUT SPE ^.layer_0.pos.i = min(^.layer_0.pos.j, ^.layer_01.pos.j)
0.082	
0.082	IN  GEN ^.layer_01.shape.color = ?
0.082	IN  GEN ^.layer_0.shape.color = ?
0.082	IN  GEN ^.layer_0111.shape.mask = ?
0.082	IN  GEN ^.layer_011.shape.mask = ?
0.082	IN  GEN ^.layer_01.shape.mask = ?
0.082	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_011
  _00: ^.layer_0
  _001: ^.layer_01
  _0011: ^.layer_0111
  _0: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_01.pos.j),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 124.8 + 6231.1 = 6355.9
DL output with Mo: L = 132.1 + 3397.9 = 3530.0
DL input+output M: L = 256.9 + 9629.0 = 9885.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_011
  _00: ^.layer_0
  _001: ^.layer_01
  _0011: ^.layer_0111
  _0: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_01.pos.j),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 132.1 + 3397.9 = 3530.0
DL input+output M: L = 246.3 + 3397.9 = 3644.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b15fca0b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b15fca0b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b15fca0b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b15fca0b.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b15fca0b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST b15fca0b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.9 sec (55.9 sec/task)
bits-train-error = 3397.9 bits (3397.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-129] Checking task b1fc8b8e.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25641.2 = 25653.8
DL output with Mo: L = 12.6 + 20404.5 = 20417.1
DL input+output M: L = 25.2 + 46045.7 = 46070.9

# learning a model for train pairs
2.000	
1.155	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.402	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.364	OUT SPE ^.size = ^.size - (1, 1)
0.325	OUT SPE ^.layer_0.shape.size = ^.size - (1, 1)
0.302	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.281	OUT SPE ^.color = cyan
0.267	OUT SPE ^.layer_0.shape.color = black
0.256	IN  SPE ^.layer_0.shape.color = cyan
0.251	IN  SPE ^.color = black
0.114	
0.114	IN  GEN ^.layer_0.shape.color = ?
0.114	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size - (1, 1) and color cyan and layers
  _0: a rectangle with size ^.size - (1, 1) and color black and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 3532.5 = 3574.7
DL output with Mo: L = 70.1 + 2219.2 = 2289.3
DL input+output M: L = 112.4 + 5751.6 = 5864.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size - (1, 1) and color cyan and layers
  _0: a rectangle with size ^.size - (1, 1) and color black and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 70.1 + 2219.2 = 2289.3
DL input+output M: L = 108.9 + 2219.2 = 2328.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b1fc8b8e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b1fc8b8e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b1fc8b8e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b1fc8b8e.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b1fc8b8e.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b1fc8b8e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b1fc8b8e.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 2219.2 bits (2219.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-128] Checking task b20f7c8b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 245677.6 = 245690.2
DL output with Mo: L = 12.6 + 245677.6 = 245690.2
DL input+output M: L = 25.2 + 491355.2 = 491380.4

# learning a model for train pairs
2.000	
1.589	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.173	OUT ADD ^.layer_0 = ^.layer_0
1.040	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.910	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.674	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.568	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.413	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.368	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.352	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.326	OUT ADD ^.layer_011111 = ^.layer_01111.shape at (?,?)
0.305	IN  ADD ^.layer_011110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.280	OUT ADD ^.layer_0111111 = ^.layer_011111
0.099	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01111.shape at (?,?)
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 44325.4 = 44513.5
DL output with Mo: L = 145.2 + 24025.7 = 24170.9
DL input+output M: L = 333.3 + 68351.1 = 68684.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01111.shape at (?,?)
  _0111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.1 + 0.0 = 188.1
DL output with Mo: L = 145.2 + 24025.7 = 24170.9
DL input+output M: L = 333.3 + 24025.7 = 24359.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b20f7c8b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b20f7c8b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b20f7c8b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST b20f7c8b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.6 sec (60.6 sec/task)
bits-train-error = 24025.7 bits (24025.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-127] Checking task b457fec5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 91812.3 = 91824.9
DL output with Mo: L = 12.6 + 91812.3 = 91824.9
DL input+output M: L = 25.2 + 183624.7 = 183649.9

# learning a model for train pairs
2.000	
1.240	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.956	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.850	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.784	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.717	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.527	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.409	
0.409	IN  DEL ^.layer_01
0.409	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 10793.5 = 10857.7
DL output with Mo: L = 188.1 + 37318.2 = 37506.3
DL input+output M: L = 252.4 + 48111.6 = 48364.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 188.1 + 37318.2 = 37506.3
DL input+output M: L = 200.8 + 37318.2 = 37518.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b457fec5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b457fec5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b457fec5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b457fec5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 37318.2 bits (37318.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-126] Checking task b4a43f3b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 52468.2 = 52480.8
DL output with Mo: L = 12.6 + 52760.0 = 52772.6
DL input+output M: L = 25.2 + 105228.3 = 105253.5

# learning a model for train pairs
2.000	
1.752	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.557	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.383	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.256	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.024	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.959	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.902	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.855	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.814	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.750	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.543	
0.543	IN  DEL ^.layer_011111
0.542	IN  DEL ^.layer_01111
0.542	IN  DEL ^.layer_0111
0.541	IN  DEL ^.layer_011
0.541	IN  DEL ^.layer_01
0.540	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 10851.8 = 11015.3
DL output with Mo: L = 163.5 + 28329.2 = 28492.8
DL input+output M: L = 327.1 + 39181.0 = 39508.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 28329.2 = 28492.8
DL input+output M: L = 176.1 + 28329.2 = 28505.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b4a43f3b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b4a43f3b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b4a43f3b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b4a43f3b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b4a43f3b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 28329.2 bits (28329.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-125] Checking task b7999b51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 56720.5 = 56733.2
DL output with Mo: L = 12.6 + 9975.3 = 9987.9
DL input+output M: L = 25.2 + 66695.8 = 66721.0

# learning a model for train pairs
2.000	
1.546	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.216	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.718	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.483	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, projI(^.layer_01.shape.size) + (0, 1))
0.372	OUT SPE ^.layer_011.shape = scaleTo(^.layer_011.shape, projI(^.layer_011.shape.size) + (0, 1))
0.338	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.313	IN  SPE ^.layer_0.shape.mask = Full
0.289	OUT SPE ^.layer_01.pos = '(0, 1)
0.269	OUT SPE ^.size.i = ^.layer_01.shape.size.i + 1
0.257	OUT SPE ^.layer_0.pos.i = '0
0.245	OUT SPE ^.layer_011.pos.i = '0
0.235	OUT SPE ^.layer_0.shape.size.j = 1
0.225	OUT SPE ^.layer_0.shape.mask = Full
0.208	OUT SPE ^.size = max(^.layer_011.shape.size, ^.layer_0110.shape.size) - (0, 3)
0.193	OUT SPE ^.layer_0.shape.color = ^.layer_0110.shape.color
0.107	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size max(^.layer_011.shape.size, ^.layer_0110.shape.size) - (0, 3) and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_0110.shape.color and mask Full at ('0,?)
  _01: scaleTo(^.layer_01.shape, projI(^.layer_01.shape.size) + (0, 1)) at '(0, 1)
  _011: scaleTo(^.layer_011.shape, projI(^.layer_011.shape.size) + (0, 1)) at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.1 + 4893.2 = 5008.4
DL output with Mo: L = 210.7 + 831.2 = 1041.9
DL input+output M: L = 325.8 + 5724.4 = 6050.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size max(^.layer_011.shape.size, ^.layer_0110.shape.size) - (0, 3) and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_0110.shape.color and mask Full at ('0,?)
  _01: scaleTo(^.layer_01.shape, projI(^.layer_01.shape.size) + (0, 1)) at '(0, 1)
  _011: scaleTo(^.layer_011.shape, projI(^.layer_011.shape.size) + (0, 1)) at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.1 + 31.7 = 146.8
DL output with Mo: L = 210.7 + 831.2 = 1041.9
DL input+output M: L = 325.8 + 862.9 = 1188.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b7999b51.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b7999b51.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b7999b51.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
Arc_common.Undefined_result("Grid.Transf.scale_down: grid not regular")

TEST b7999b51.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 57.1 sec (57.1 sec/task)
bits-train-error = 831.2 bits (831.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-124] Checking task b7cb93ac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 14389.4 = 14402.0
DL output with Mo: L = 12.6 + 6648.8 = 6661.4
DL input+output M: L = 25.2 + 21038.2 = 21063.5

# learning a model for train pairs
2.000	
1.548	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.151	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.676	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.603	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	OUT SPE ^.size = projJ(^.layer_011.shape.size) + (3, 3)
0.506	OUT SPE ^.color = red
0.481	OUT SPE ^.layer_0.shape.color = cyan
0.464	OUT SPE ^.layer_00.pos.i = '0
0.449	OUT SPE ^.layer_0.shape.mask = Full
0.436	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i - ^.layer_01.shape.size.i
0.424	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.i, ^.layer_01.pos.i) / '2
0.413	IN  SPE ^.layer_01.shape.color = red
0.406	IN  SPE ^.layer_011.shape.mask = Full
0.401	IN  SPE ^.color = black
0.092	
0.091	IN  GEN ^.layer_01.shape.color = ?
0.091	IN  GEN ^.layer_011.shape.mask = ?
0.091	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projJ(^.layer_011.shape.size) + (3, 3) and color red and layers
  _00: ^.layer_0.shape at ('0,?)
  _0: a rectangle with size (?,?) and color cyan and mask Full at (^.layer_0.pos.i - ^.layer_01.shape.size.i,min(^.layer_0.pos.i, ^.layer_01.pos.i) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 93.7 + 4449.7 = 4543.4
DL output with Mo: L = 186.7 + 380.7 = 567.4
DL input+output M: L = 280.5 + 4830.3 = 5110.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projJ(^.layer_011.shape.size) + (3, 3) and color red and layers
  _00: ^.layer_0.shape at ('0,?)
  _0: a rectangle with size (?,?) and color cyan and mask Full at (^.layer_0.pos.i - ^.layer_01.shape.size.i,min(^.layer_0.pos.i, ^.layer_01.pos.i) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 186.7 + 380.7 = 567.4
DL input+output M: L = 276.0 + 380.7 = 656.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b7cb93ac.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b7cb93ac.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b7cb93ac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST b7cb93ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 42.6 sec (42.6 sec/task)
bits-train-error = 380.7 bits (380.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-123] Checking task b7f8a4d8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 326016.4 = 326029.0
DL output with Mo: L = 12.6 + 350813.1 = 350825.7
DL input+output M: L = 25.2 + 676829.4 = 676854.7

# learning a model for train pairs
2.000	
1.685	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.432	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.407	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.386	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.368	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.351	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.348	OUT SPE ^.size = ^.size
1.345	OUT SPE ^.layer_0.pos.j = center(^.layer_0) - ^.layer_011111.pos.i - ^.layer_011.pos.i
1.232	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.171	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.566	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,center(^.layer_0) - ^.layer_011111.pos.i - ^.layer_011.pos.i)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 197338.8 = 197502.3
DL output with Mo: L = 153.3 + 198252.8 = 198406.1
DL input+output M: L = 316.8 + 395591.6 = 395908.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,center(^.layer_0) - ^.layer_011111.pos.i - ^.layer_011.pos.i)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 163.5 + 31.7 = 195.2
DL output with Mo: L = 153.3 + 198252.8 = 198406.1
DL input+output M: L = 316.8 + 198284.5 = 198601.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b7f8a4d8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b7f8a4d8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b7f8a4d8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b7f8a4d8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 198252.8 bits (198252.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-122] Checking task b7fb29bc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39018.6 = 39031.2
DL output with Mo: L = 12.6 + 94326.0 = 94338.6
DL input+output M: L = 25.2 + 133344.5 = 133369.8

# learning a model for train pairs
2.000	
1.095	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.700	OUT ADD ^.layer_0 = ^.layer_0
0.522	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.386	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.289	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.239	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.207	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.193	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.186	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.179	OUT SPE ^.size = ^.size
0.174	IN  SPE ^.layer_0.shape.color = green
0.172	OUT SPE ^.layer_0111.shape.color = yellow
0.167	OUT SPE ^.layer_0111.shape.size.j = 3
0.165	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j - 2
0.162	OUT SPE ^.layer_011.shape.color = red
0.159	OUT SPE ^.layer_01111.pos.j = ^.layer_0.pos.j + 1
0.157	OUT SPE ^.layer_0111111.pos.i = 3
0.155	IN  SPE ^.color = black
0.153	OUT SPE ^.layer_01.shape.color = yellow
0.152	OUT SPE ^.layer_0111.shape.mask = Border
0.151	OUT SPE ^.layer_01111.shape.mask = Full
0.150	OUT SPE ^.layer_011111.shape.mask = Full
0.149	OUT SPE ^.layer_0111111.shape.mask = Full
0.148	OUT SPE ^.color = black
0.148	OUT SPE ^.layer_0111111.shape.color = yellow
0.061	
0.061	IN  GEN ^.layer_0.shape.color = ?
0.061	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color yellow and mask ? at ^.layer_0.pos + (1, 1)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,3) and color yellow and mask Border at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_0.pos.j + 1)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color yellow and mask Full at (3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 3407.0 = 3449.3
DL output with Mo: L = 247.7 + 5397.5 = 5645.2
DL input+output M: L = 290.0 + 8804.5 = 9094.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color yellow and mask ? at ^.layer_0.pos + (1, 1)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,3) and color yellow and mask Border at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_0.pos.j + 1)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color yellow and mask Full at (3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 247.7 + 5397.5 = 5645.2
DL input+output M: L = 286.5 + 5397.5 = 5684.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b7fb29bc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b7fb29bc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b7fb29bc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b7fb29bc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.1 sec (30.1 sec/task)
bits-train-error = 5397.5 bits (5397.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-121] Checking task b942fd60.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21572.5 = 21585.1
DL output with Mo: L = 12.6 + 68331.6 = 68344.2
DL input+output M: L = 25.2 + 89904.1 = 89929.3

# learning a model for train pairs
2.000	
1.367	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.310	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.253	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.220	OUT ADD ^.layer_01 = ^.layer_01
1.204	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	OUT SPE ^.size = ^.size
1.178	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos)
1.171	IN  SPE ^.color = black
1.166	OUT SPE ^.layer_0.shape.color = red
1.162	OUT SPE ^.layer_011.shape.color = majorityColor(^.grid)
1.159	OUT SPE ^.layer_011.shape.mask = Full
1.157	OUT SPE ^.color = black
0.280	
0.280	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at projI(^.layer_0.pos)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color majorityColor(^.grid) and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 18925.1 = 18970.9
DL output with Mo: L = 84.1 + 18897.0 = 18981.1
DL input+output M: L = 129.9 + 37822.1 = 37952.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at projI(^.layer_0.pos)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color majorityColor(^.grid) and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 84.1 + 18897.0 = 18981.1
DL input+output M: L = 129.7 + 18897.0 = 19026.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b942fd60.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b942fd60.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b942fd60.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b942fd60.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN b942fd60.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN b942fd60.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST b942fd60.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.2 sec (9.2 sec/task)
bits-train-error = 18897.0 bits (18897.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-120] Checking task b9630600.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 158668.2 = 158680.8
DL output with Mo: L = 12.6 + 171588.5 = 171601.1
DL input+output M: L = 25.2 + 330256.7 = 330281.9

# learning a model for train pairs
2.000	
1.099	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.863	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.678	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.389	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.285	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.200	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.171	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.166	OUT SPE ^.size = ^.size
0.165	IN  SPE ^.layer_0.shape.color = green
0.164	IN  SPE ^.layer_0.shape.mask = Border
0.163	IN  SPE ^.layer_01.shape.color = green
0.162	IN  SPE ^.layer_01.shape.mask = Border
0.161	IN  SPE ^.layer_011.shape.color = green
0.160	IN  SPE ^.layer_011.shape.mask = Border
0.095	
0.095	IN  DEL ^.layer_011
0.095	IN  DEL ^.layer_01
0.095	IN  DEL ^.layer_0
0.095	IN  DEL ^.layer_0111111
0.095	IN  DEL ^.layer_011111
0.094	IN  DEL ^.layer_01111
0.094	IN  DEL ^.layer_0111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color green and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color green and mask Border at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 208.1 + 10225.1 = 10433.1
DL output with Mo: L = 35.6 + 16118.7 = 16154.3
DL input+output M: L = 243.7 + 26343.8 = 26587.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 35.6 + 16118.7 = 16154.3
DL input+output M: L = 48.2 + 16118.7 = 16167.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b9630600.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b9630600.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN b9630600.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST b9630600.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 16118.7 bits (16118.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-119] Checking task ba9d41b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 119181.1 = 119193.7
DL output with Mo: L = 12.6 + 88009.4 = 88022.0
DL input+output M: L = 25.2 + 207190.5 = 207215.7

# learning a model for train pairs
2.000	
1.377	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.795	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.566	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.515	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.495	OUT SPE ^.layer_011.shape.size = ^.layer_0.shape.size
0.479	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i - 2
0.471	OUT SPE ^.size = ^.size
0.094	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 44930.1 = 44968.9
DL output with Mo: L = 102.1 + 8177.0 = 8279.1
DL input+output M: L = 141.0 + 53107.1 = 53248.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 102.1 + 8177.0 = 8279.1
DL input+output M: L = 141.0 + 8177.0 = 8318.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ba9d41b8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ba9d41b8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ba9d41b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST ba9d41b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.5 sec (57.5 sec/task)
bits-train-error = 8177.0 bits (8177.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-118] Checking task baf41dbf.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22643.9 = 22656.5
DL output with Mo: L = 12.6 + 42892.9 = 42905.5
DL input+output M: L = 25.2 + 65536.9 = 65562.1

# learning a model for train pairs
2.000	
1.149	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.375	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.347	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.319	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.292	OUT ADD ^.layer_01 = ^.layer_01
0.264	OUT ADD ^.layer_011 = ^.layer_011
0.249	OUT SPE ^.size = ^.size
0.242	IN  SPE ^.layer_0.shape.color = green
0.234	IN  SPE ^.layer_01.shape.color = pink
0.227	IN  SPE ^.layer_011.shape.color = pink
0.223	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.219	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.215	OUT SPE ^.layer_0.shape.size.i = area(^.layer_01.shape) - ^.layer_01.pos.i - ^.layer_011.pos.i
0.212	IN  SPE ^.color = black
0.210	OUT SPE ^.color = black
0.069	
0.069	IN  GEN ^.layer_011.shape.color = ?
0.069	IN  GEN ^.layer_01.shape.color = ?
0.069	IN  GEN ^.layer_0.shape.color = ?
0.069	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_01.shape) - ^.layer_01.pos.i - ^.layer_011.pos.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_01
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a point with color pink at (?,?)
  _011: a point with color pink at (?,?)

DL input  with Mi: L = 80.8 + 3210.0 = 3290.8
DL output with Mo: L = 123.0 + 2668.0 = 2791.1
DL input+output M: L = 203.8 + 5878.0 = 6081.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_01.shape) - ^.layer_01.pos.i - ^.layer_011.pos.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_01
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 70.7 + 20.0 = 90.7
DL output with Mo: L = 123.0 + 2668.0 = 2791.1
DL input+output M: L = 193.7 + 2688.0 = 2881.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN baf41dbf.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN baf41dbf.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN baf41dbf.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST baf41dbf.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 2668.0 bits (2668.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-117] Checking task bb52a14b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 77722.8 = 77735.4
DL output with Mo: L = 12.6 + 87598.1 = 87610.7
DL input+output M: L = 25.2 + 165320.8 = 165346.1

# learning a model for train pairs
2.000	
1.935	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.863	OUT ADD ^.layer_0 = ^.layer_0
1.808	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.759	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.718	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.674	OUT ADD ^.layer_010 = ^.layer_01
1.638	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.602	OUT ADD ^.layer_0101 = ^.layer_010
1.575	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.547	OUT ADD ^.layer_0111 = ^.layer_011
1.526	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.498	OUT ADD ^.layer_0110 = ^.layer_0111
1.481	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.455	OUT ADD ^.layer_01111 = ^.layer_01111
1.438	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.423	IN  ADD ^.layer_011110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.415	OUT SPE ^.size = ^.size
1.413	OUT SPE ^.layer_01.shape.size.j = 3
1.411	IN  SPE ^.layer_0111.shape.color = cyan
1.409	OUT SPE ^.layer_011.shape.size.j = 3
1.407	OUT SPE ^.layer_01.shape.color = yellow
1.405	OUT SPE ^.layer_01.pos.i = middle(^.layer_01) - ^.layer_010.shape.size.j
1.404	IN  SPE ^.layer_011110.shape.mask = Full
1.402	OUT SPE ^.layer_01.shape.mask = Full
1.401	OUT SPE ^.layer_011.shape.mask = Full
1.400	OUT SPE ^.layer_011.shape.size.i = area(^.layer_011110.shape) - ^.layer_011.shape.size.j
1.399	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.j + ^.layer_011110.pos.i - ^.layer_0111.pos.i
1.398	IN  SPE ^.color = black
1.398	OUT SPE ^.color = black
0.641	
0.641	IN  GEN ^.layer_0111.shape.color = ?
0.641	IN  GEN ^.layer_011110.shape.mask = ?
0.641	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _0101: ^.layer_010
  _01: a rectangle with size (^.layer_011.shape.size.j + ^.layer_011110.pos.i - ^.layer_0111.pos.i,3) and color yellow and mask Full at (middle(^.layer_01) - ^.layer_010.shape.size.j,?)
  _0110: ^.layer_0111
  _011: a rectangle with size (area(^.layer_011110.shape) - ^.layer_011.shape.size.j,3) and color ? and mask Full at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 217.2 + 58871.3 = 59088.5
DL output with Mo: L = 280.8 + 55567.1 = 55847.8
DL input+output M: L = 497.9 + 114438.4 = 114936.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _0101: ^.layer_010
  _01: a rectangle with size (^.layer_011.shape.size.j + ^.layer_011110.pos.i - ^.layer_0111.pos.i,3) and color yellow and mask Full at (middle(^.layer_01) - ^.layer_010.shape.size.j,?)
  _0110: ^.layer_0111
  _011: a rectangle with size (area(^.layer_011110.shape) - ^.layer_011.shape.size.j,3) and color ? and mask Full at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 31.7 = 244.4
DL output with Mo: L = 280.8 + 55567.1 = 55847.8
DL input+output M: L = 493.5 + 55598.8 = 56092.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bb52a14b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bb52a14b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bb52a14b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST bb52a14b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.3 sec (54.3 sec/task)
bits-train-error = 55567.1 bits (55567.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-116] Checking task bbb1b8b6.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 51254.4 = 51267.0
DL output with Mo: L = 12.6 + 16483.5 = 16496.1
DL input+output M: L = 25.2 + 67737.9 = 67763.1

# learning a model for train pairs
2.000	
1.304	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.905	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.704	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.413	OUT SPE ^.layer_0.shape = ^.layer_0.shape
0.352	OUT SPE ^.size = ^.layer_011.shape.size + (0, 3)
0.334	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.326	IN  SPE ^.layer_011.shape.color = grey
0.321	IN  SPE ^.layer_011.shape.mask = Full
0.318	IN  SPE ^.color = black
0.095	
0.094	IN  DEL ^.layer_01
0.094	IN  GEN ^.layer_011.shape.mask = ?
0.094	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (0, 3) and color ? and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 93.7 + 11496.5 = 11590.2
DL output with Mo: L = 51.1 + 1465.7 = 1516.9
DL input+output M: L = 144.9 + 12962.2 = 13107.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size + (0, 3) and color ? and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 67.5 + 40.0 = 107.5
DL output with Mo: L = 51.1 + 1465.7 = 1516.9
DL input+output M: L = 118.7 + 1505.7 = 1624.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bbb1b8b6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bbb1b8b6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bbb1b8b6.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bbb1b8b6.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bbb1b8b6.json/5: 1 1st (SUCCESS)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bbb1b8b6.json/6: 1 3rd (SUCCESS)

## instance 7

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bbb1b8b6.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST bbb1b8b6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST bbb1b8b6.json/2: 1 3rd (SUCCESS)

# Performance measures on task
runtime-learning = 10.1 sec (10.1 sec/task)
bits-train-error = 1465.7 bits (1465.7 bits/task)
acc-train-micro = 0.29 tasks (28.57%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.19
acc-test-micro = 0.50 tasks (50.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.17

=====================================
[-115] Checking task bc4146bd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11899.8 = 11912.5
DL output with Mo: L = 12.6 + 58689.8 = 58702.4
DL input+output M: L = 25.2 + 70589.6 = 70614.8

# learning a model for train pairs
2.000	
1.592	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.199	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.122	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	IN  ADD ^.layer_010 = a point with color ? at (?,?)
1.088	IN  SPE ^.layer_011.shape.mask = Full
1.083	OUT SPE ^.size.i = ^.size.i
1.079	OUT SPE ^.layer_0.pos.j = min(^.layer_0.pos.j, ^.layer_011.pos.j)
1.076	OUT SPE ^.layer_0.pos.i = min(^.layer_0.pos.j, ^.layer_011.pos.j)
1.009	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.984	OUT ADD ^.layer_010 = ^.layer_010
0.969	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.917	OUT ADD ^.layer_0110 = ^.layer_011
0.883	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.873	OUT SPE ^.layer_0111.shape.size.i = ^.layer_011.shape.size.i
0.870	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
0.359	
0.359	IN  GEN ^.layer_011.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_011.pos.j),min(^.layer_0.pos.j, ^.layer_011.pos.j))
  _010: ^.layer_010
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (^.layer_011.shape.size.i,?) and color ^.layer_011.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 105.8 + 6151.4 = 6257.2
DL output with Mo: L = 213.2 + 20005.9 = 20219.1
DL input+output M: L = 319.1 + 26157.3 = 26476.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (min(^.layer_0.pos.j, ^.layer_011.pos.j),min(^.layer_0.pos.j, ^.layer_011.pos.j))
  _010: ^.layer_010
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (^.layer_011.shape.size.i,?) and color ^.layer_011.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 104.8 + 71.7 = 176.5
DL output with Mo: L = 213.2 + 20005.9 = 20219.1
DL input+output M: L = 318.1 + 20077.6 = 20395.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bc4146bd.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bc4146bd.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN bc4146bd.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN bc4146bd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST bc4146bd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 20005.9 bits (20005.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-114] Checking task bcb3040b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 76257.9 = 76270.5
DL output with Mo: L = 12.6 + 83505.9 = 83518.5
DL input+output M: L = 25.2 + 159763.8 = 159789.0

# learning a model for train pairs
2.000	
1.532	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.184	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.030	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.884	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.786	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.697	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.347	
0.346	IN  DEL ^.layer_011
0.346	IN  DEL ^.layer_01
0.346	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 21251.8 = 21341.0
DL output with Mo: L = 114.1 + 28738.3 = 28852.4
DL input+output M: L = 203.4 + 49990.0 = 50193.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 28738.3 = 28852.4
DL input+output M: L = 126.7 + 28738.3 = 28865.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bcb3040b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bcb3040b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bcb3040b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST bcb3040b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 28738.3 bits (28738.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-113] Checking task bd14c3bf.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 83628.4 = 83641.0
DL output with Mo: L = 12.6 + 83628.4 = 83641.0
DL input+output M: L = 25.2 + 167256.9 = 167282.1

# learning a model for train pairs
2.000	
1.843	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.685	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.559	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.433	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.312	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.190	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.083	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.957	OUT ADD ^.layer_0111 = ^.layer_0111
0.858	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.758	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.671	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.589	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.202	
0.202	IN  DEL ^.layer_01111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 32412.7 = 32551.6
DL output with Mo: L = 167.7 + 16562.4 = 16730.0
DL input+output M: L = 306.5 + 48975.0 = 49281.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 167.7 + 16562.4 = 16730.0
DL input+output M: L = 281.8 + 16594.1 = 16875.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN bd14c3bf.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bd14c3bf.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bd14c3bf.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST bd14c3bf.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.2 sec (60.2 sec/task)
bits-train-error = 16562.4 bits (16562.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-112] Checking task be03b35f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13439.8 = 13452.4
DL output with Mo: L = 12.6 + 1896.6 = 1909.2
DL input+output M: L = 25.2 + 15336.4 = 15361.6

# learning a model for train pairs
2.000	
1.572	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.226	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.063	OUT SPE ^.size = '(2, 2)
0.957	OUT SPE ^.color = ^.color
0.905	OUT SPE ^.layer_0.shape.size.j = 1
0.854	OUT SPE ^.layer_0.shape.mask = Full
0.804	OUT SPE ^.layer_0.pos.i = '0
0.770	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.150	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color ^.color and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 8374.3 = 8413.1
DL output with Mo: L = 56.5 + 219.3 = 275.8
DL input+output M: L = 95.4 + 8593.6 = 8689.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(2, 2) and color ^.color and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 31.7 = 70.5
DL output with Mo: L = 56.5 + 219.3 = 275.8
DL input+output M: L = 95.4 + 251.0 = 346.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN be03b35f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN be03b35f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN be03b35f.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST be03b35f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.3 sec (9.3 sec/task)
bits-train-error = 219.3 bits (219.3 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-111] Checking task bf32578f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8017.7 = 8030.3
DL output with Mo: L = 12.6 + 12428.6 = 12441.2
DL input+output M: L = 25.2 + 20446.3 = 20471.5

# learning a model for train pairs
2.000	
1.140	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.415	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.371	OUT SPE ^.size = ^.size
0.339	OUT SPE ^.layer_0.shape.size = tiling(^.layer_0.shape.size - (2, 1), 1, 2)
0.315	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (1, 1)
0.301	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.292	IN  SPE ^.color = black
0.286	OUT SPE ^.color = black
0.025	
0.025	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size - (2, 1), 1, 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 2097.3 = 2136.3
DL output with Mo: L = 67.1 + 186.1 = 253.2
DL input+output M: L = 106.1 + 2283.4 = 2389.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size tiling(^.layer_0.shape.size - (2, 1), 1, 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 67.1 + 186.1 = 253.2
DL input+output M: L = 105.9 + 186.1 = 292.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bf32578f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bf32578f.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bf32578f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST bf32578f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 186.1 bits (186.1 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-110] Checking task bf699163.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 43849.9 = 43862.5
DL output with Mo: L = 12.6 + 1153.2 = 1165.8
DL input+output M: L = 25.2 + 45003.1 = 45028.3

# learning a model for train pairs
2.000	
1.633	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.418	OUT SPE ^.size = '(3, 3)
1.289	OUT SPE ^.layer_0.pos = '(1, 1)
1.165	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.041	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.917	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	OUT SPE ^.color = ^.layer_011.shape.color
0.651	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.527	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.433	OUT SPE ^.layer_0.shape.color = grey
0.352	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.299	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.283	IN  ADD ^.layer_0111110 = a point with color ? at (?,?)
0.279	IN  SPE ^.color = grey
0.277	IN  SPE ^.layer_0.shape.mask = Border
0.274	IN  SPE ^.layer_01.shape.mask = Border
0.272	IN  SPE ^.layer_0110.shape.mask = Border
0.269	IN  SPE ^.layer_011.shape.mask = Border
0.267	IN  SPE ^.layer_0111.shape.mask = Border
0.264	IN  SPE ^.layer_01111.shape.color = orange
0.262	IN  SPE ^.layer_0111110.shape.color = orange
0.259	IN  SPE ^.layer_011111.shape.color = orange
0.059	
0.058	IN  DEL ^.layer_011111
0.057	IN  DEL ^.layer_01111
0.057	IN  DEL ^.layer_0111
0.056	IN  DEL ^.layer_0111110
0.056	IN  GEN ^.color = ?
0.056	IN  GEN ^.layer_011.shape.mask = ?
0.056	IN  GEN ^.layer_0110.shape.mask = ?
0.056	IN  GEN ^.layer_01.shape.mask = ?
0.056	IN  GEN ^.layer_0.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_011.shape.color and layers
  _0: a point with color grey at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color grey and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01111: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _0111110: a point with color orange at (?,?)
  _011111: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 236.6 + 8800.3 = 9036.9
DL output with Mo: L = 61.9 + 0.0 = 61.9
DL input+output M: L = 298.6 + 8800.3 = 9098.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_011.shape.color and layers
  _0: a point with color grey at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 0.0 = 114.1
DL output with Mo: L = 61.9 + 0.0 = 61.9
DL input+output M: L = 176.1 + 0.0 = 176.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bf699163.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN bf699163.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST bf699163.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.0 sec (5.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-109] Checking task bf89d739.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9196.9 = 9209.5
DL output with Mo: L = 12.6 + 31497.0 = 31509.6
DL input+output M: L = 25.2 + 40693.9 = 40719.1

# learning a model for train pairs
2.000	
1.400	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.312	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.223	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.133	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.041	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.987	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.938	OUT ADD ^.layer_011 = ^.layer_0111
0.904	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.876	OUT ADD ^.layer_010 = ^.layer_01
0.856	OUT ADD ^.layer_0111 = ^.layer_011
0.828	OUT SPE ^.size = ^.size
0.804	IN  SPE ^.layer_0.shape.color = red
0.780	IN  SPE ^.layer_01.shape.color = red
0.756	IN  SPE ^.layer_011.shape.color = red
0.732	IN  SPE ^.layer_0111.shape.color = red
0.721	IN  SPE ^.color = black
0.713	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i + 1
0.706	OUT SPE ^.layer_0.shape.color = green
0.701	OUT SPE ^.layer_00 = ^.layer_0
0.696	OUT SPE ^.layer_01.shape.size.i = 1
0.692	OUT SPE ^.layer_01.shape.mask = Full
0.689	OUT SPE ^.color = black
0.686	OUT SPE ^.layer_0.pos = corner(^.layer_0111.pos, ^.layer_0.pos) - translationOnto(^.layer_0, ^.layer_0111)
0.681	OUT SPE ^.layer_01.pos.j = span(^.layer_011.pos.i, ^.layer_0111.pos.i) + ^.layer_011.pos.i - ^.layer_01.pos.i
0.158	
0.157	IN  GEN ^.layer_0111.shape.color = ?
0.157	IN  GEN ^.layer_011.shape.color = ?
0.156	IN  GEN ^.layer_01.shape.color = ?
0.156	IN  GEN ^.layer_0.shape.color = ?
0.156	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color green and mask ? at corner(^.layer_0111.pos, ^.layer_0.pos) - translationOnto(^.layer_0, ^.layer_0111)
  _010: ^.layer_01
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,span(^.layer_011.pos.i, ^.layer_0111.pos.i) + ^.layer_011.pos.i - ^.layer_01.pos.i)
  _011: ^.layer_0111
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color red at (?,?)
  _011: a point with color red at (?,?)
  _0111: a point with color red at (?,?)

DL input  with Mi: L = 90.4 + 4856.9 = 4947.3
DL output with Mo: L = 238.9 + 4307.0 = 4545.9
DL input+output M: L = 329.3 + 9163.9 = 9493.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color green and mask ? at corner(^.layer_0111.pos, ^.layer_0.pos) - translationOnto(^.layer_0, ^.layer_0111)
  _010: ^.layer_01
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,span(^.layer_011.pos.i, ^.layer_0111.pos.i) + ^.layer_011.pos.i - ^.layer_01.pos.i)
  _011: ^.layer_0111
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 77.0 + 31.7 = 108.7
DL output with Mo: L = 238.9 + 4307.0 = 4545.9
DL input+output M: L = 315.9 + 4338.7 = 4654.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bf89d739.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN bf89d739.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN bf89d739.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN bf89d739.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST bf89d739.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 51.9 sec (51.9 sec/task)
bits-train-error = 4307.0 bits (4307.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-108] Checking task c074846d.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6132.8 = 6145.4
DL output with Mo: L = 12.6 + 9399.6 = 9412.2
DL input+output M: L = 25.2 + 15532.4 = 15557.6

# learning a model for train pairs
2.000	
1.684	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.481	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.275	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.096	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.901	OUT ADD ^.layer_011 = ^.layer_01
0.758	OUT SPE ^.layer_0 = coloring(^.layer_0, green)
0.668	OUT SPE ^.layer_01.shape = applySym(flipDiag1, ^.layer_0.shape)
0.579	OUT SPE ^.size = ^.size
0.531	IN  SPE ^.layer_0.shape.color = red
0.483	OUT SPE ^.layer_01.pos = ^.layer_0.pos + translationSym(rotate90, ^.layer_0, ^.layer_01)
0.438	IN  SPE ^.layer_01.shape.color = grey
0.411	IN  SPE ^.layer_0.shape.mask = Full
0.391	IN  SPE ^.color = black
0.378	OUT SPE ^.color = black
0.020	
0.020	IN  GEN ^.layer_01.shape.color = ?
0.020	IN  GEN ^.layer_0.shape.mask = ?
0.020	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, green)
  _01: applySym(flipDiag1, ^.layer_0.shape) at ^.layer_0.pos + translationSym(rotate90, ^.layer_0, ^.layer_01)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a point with color grey at (?,?)

DL input  with Mi: L = 62.7 + 2197.3 = 2260.0
DL output with Mo: L = 94.7 + 0.0 = 94.7
DL input+output M: L = 157.4 + 2197.3 = 2354.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0, green)
  _01: applySym(flipDiag1, ^.layer_0.shape) at ^.layer_0.pos + translationSym(rotate90, ^.layer_0, ^.layer_01)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 58.3 + 0.0 = 58.3
DL output with Mo: L = 94.7 + 0.0 = 94.7
DL input+output M: L = 153.0 + 0.0 = 153.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c074846d.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c074846d.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c074846d.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c074846d.json/4: 1 1st (SUCCESS)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c074846d.json/5: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c074846d.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c074846d.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.6 sec (2.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-107] Checking task c1990cce.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1514.2 = 1526.8
DL output with Mo: L = 12.6 + 22449.3 = 22461.9
DL input+output M: L = 25.2 + 23963.5 = 23988.7

# learning a model for train pairs
2.000	
1.574	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.255	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.095	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.984	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.875	IN  SPE ^.layer_0.shape.color = red
0.827	IN  SPE ^.color = black
0.791	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.779	OUT SPE ^.size.j = ^.size.j
0.767	OUT SPE ^.size.i = ^.size.j
0.760	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.752	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.745	OUT SPE ^.layer_01.shape.color = blue
0.738	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.731	OUT SPE ^.layer_0111.pos.j = 3
0.724	OUT SPE ^.layer_01.pos.i = 3
0.717	OUT SPE ^.layer_01111.pos.j = '0
0.711	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j - 1
0.708	OUT SPE ^.color = black
0.707	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.704	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.695	OUT SPE ^.layer_01111.shape.size = '(1, 1)
0.688	OUT SPE ^.layer_0111111.shape.color = blue
0.681	OUT SPE ^.layer_011111.pos.j = 1
0.675	OUT SPE ^.layer_0111111.pos.i = ^.layer_0.pos.j * '2
0.671	OUT SPE ^.layer_01111.shape.mask = Full
0.275	
0.273	IN  GEN ^.layer_0.shape.color = ?
0.273	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (3,^.layer_0.pos.j - 1)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,3)
  _01111: a rectangle with size '(1, 1) and color ? and mask Full at (?,'0)
  _011111: a point with color ? at (?,1)
  _0111111: a point with color blue at (^.layer_0.pos.j * '2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 33.0 + 603.5 = 636.5
DL output with Mo: L = 261.8 + 5440.0 = 5701.9
DL input+output M: L = 294.8 + 6043.6 = 6338.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (3,^.layer_0.pos.j - 1)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,3)
  _01111: a rectangle with size '(1, 1) and color ? and mask Full at (?,'0)
  _011111: a point with color ? at (?,1)
  _0111111: a point with color blue at (^.layer_0.pos.j * '2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 261.8 + 5440.0 = 5701.9
DL input+output M: L = 291.4 + 5440.0 = 5731.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c1990cce.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c1990cce.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c1990cce.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c1990cce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.6 sec (14.6 sec/task)
bits-train-error = 5440.0 bits (5440.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-106] Checking task c3202e5a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 298601.8 = 298614.4
DL output with Mo: L = 12.6 + 6962.5 = 6975.2
DL input+output M: L = 25.2 + 305564.3 = 305589.6

# learning a model for train pairs
2.000	
1.423	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.444	
0.443	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 126177.9 = 126216.7
DL output with Mo: L = 54.9 + 3037.7 = 3092.6
DL input+output M: L = 93.8 + 129215.6 = 129309.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 54.9 + 3037.7 = 3092.6
DL input+output M: L = 67.5 + 3037.7 = 3105.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c3202e5a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c3202e5a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c3202e5a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c3202e5a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.5 sec (58.5 sec/task)
bits-train-error = 3037.7 bits (3037.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-105] Checking task c35c1b4c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 76346.4 = 76359.0
DL output with Mo: L = 12.6 + 67038.5 = 67051.2
DL input+output M: L = 25.2 + 143384.9 = 143410.2

# learning a model for train pairs
2.000	
1.644	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.307	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.299	OUT SPE ^.size = ^.size
1.293	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.630	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 50659.2 = 50698.0
DL output with Mo: L = 32.4 + 42175.5 = 42207.9
DL input+output M: L = 71.2 + 92834.7 = 92905.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 32.4 + 42175.5 = 42207.9
DL input+output M: L = 71.2 + 42175.5 = 42246.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN c35c1b4c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN c35c1b4c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c35c1b4c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST c35c1b4c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.5 sec (55.5 sec/task)
bits-train-error = 42175.5 bits (42175.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-104] Checking task c48954c1.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6553.4 = 6566.0
DL output with Mo: L = 12.6 + 57618.4 = 57631.0
DL input+output M: L = 25.2 + 64171.8 = 64197.0

# learning a model for train pairs
2.000	
1.828	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.655	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.498	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.354	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.157	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.100	IN  ADD ^.layer_010 = a point with color ? at (?,?)
1.065	IN  SPE ^.layer_0.shape.mask = Even Checkboard
1.033	OUT ADD ^.layer_00 = ^.layer_0.shape at (?,?)
0.978	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.929	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.477	
0.474	IN  DEL ^.layer_01
0.471	IN  DEL ^.layer_011
0.469	IN  DEL ^.layer_010
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Even Checkboard at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 100.9 + 2963.4 = 3064.3
DL output with Mo: L = 158.3 + 26472.7 = 26631.0
DL input+output M: L = 259.2 + 29436.1 = 29695.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Even Checkboard at (?,?)

DL input  with Mi: L = 44.2 + 0.0 = 44.2
DL output with Mo: L = 158.3 + 26472.7 = 26631.0
DL input+output M: L = 202.5 + 26472.7 = 26675.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c48954c1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN c48954c1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c48954c1.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST c48954c1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 26472.7 bits (26472.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-103] Checking task c62e2108.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 40336.1 = 40348.7
DL output with Mo: L = 12.6 + 110922.9 = 110935.5
DL input+output M: L = 25.2 + 151258.9 = 151284.1

# learning a model for train pairs
2.000	
1.320	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.754	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.582	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.489	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.474	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.400	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.325	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.319	OUT SPE ^.size = ^.size
0.315	IN  SPE ^.layer_011.shape.color = blue
0.310	IN  SPE ^.layer_0111.shape.color = blue
0.307	OUT SPE ^.layer_01.pos = min(^.layer_01.pos, ^.layer_0111.pos)
0.305	IN  SPE ^.layer_011.shape.mask = Full
0.302	IN  SPE ^.layer_0111.shape.mask = Full
0.300	IN  SPE ^.layer_01111.shape.mask = Full
0.297	IN  SPE ^.layer_011111.shape.mask = Full
0.295	IN  SPE ^.color = black
0.294	OUT SPE ^.layer_0.pos.i = ^.layer_01111.pos.j
0.292	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.291	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.289	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.i / '3
0.289	OUT SPE ^.color = black
0.136	
0.136	IN  DEL ^.layer_011111
0.135	IN  GEN ^.layer_0111.shape.color = ?
0.135	IN  GEN ^.layer_011.shape.color = ?
0.135	IN  GEN ^.layer_01111.shape.mask = ?
0.135	IN  GEN ^.layer_0111.shape.mask = ?
0.135	IN  GEN ^.layer_011.shape.mask = ?
0.135	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_01111.pos.j,^.layer_011.pos.i / '3)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at min(^.layer_01.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 174.3 + 6151.2 = 6325.6
DL output with Mo: L = 141.8 + 14485.7 = 14627.5
DL input+output M: L = 316.1 + 20637.0 = 20953.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_01111.pos.j,^.layer_011.pos.i / '3)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at min(^.layer_01.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 141.8 + 14485.7 = 14627.5
DL input+output M: L = 280.7 + 14485.7 = 14766.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c62e2108.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c62e2108.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c62e2108.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST c62e2108.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.7 sec (30.7 sec/task)
bits-train-error = 14485.7 bits (14485.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-102] Checking task c64f1187.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 54456.6 = 54469.2
DL output with Mo: L = 12.6 + 21479.1 = 21491.7
DL input+output M: L = 25.2 + 75935.6 = 75960.9

# learning a model for train pairs
2.000	
1.858	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.736	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.636	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.545	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.459	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.406	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.352	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.263	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.193	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.148	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.503	
0.502	IN  DEL ^.layer_0111
0.502	IN  DEL ^.layer_011
0.501	IN  DEL ^.layer_01
0.501	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 35174.1 = 35288.3
DL output with Mo: L = 163.5 + 10592.6 = 10756.1
DL input+output M: L = 277.7 + 45766.7 = 46044.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 163.5 + 10592.6 = 10756.1
DL input+output M: L = 176.1 + 10592.6 = 10768.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c64f1187.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c64f1187.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c64f1187.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 10592.6 bits (10592.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-101] Checking task c658a4bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 49324.2 = 49336.8
DL output with Mo: L = 12.6 + 32002.6 = 32015.2
DL input+output M: L = 25.2 + 81326.8 = 81352.0

# learning a model for train pairs
2.000	
1.519	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.205	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.903	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.687	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.474	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	OUT ADD ^.layer_00 = ^.layer_011.shape at (?,?)
0.258	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.212	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.199	OUT SPE ^.layer_0.shape = ^.layer_0111.shape
0.188	OUT SPE ^.size = ^.layer_0.shape.size + (2, 2)
0.178	OUT SPE ^.layer_01.shape.size = min(^.layer_0.shape.size, ^.layer_01.shape.size)
0.172	OUT SPE ^.layer_0.pos = '(3, 3)
0.169	IN  SPE ^.layer_0.shape.color = cyan
0.166	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j / '3
0.164	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.j / '3
0.161	OUT SPE ^.layer_00.pos.j = ^.layer_0.pos.j * '2
0.159	OUT SPE ^.layer_00.pos.i = ^.layer_0.pos.j * '2
0.156	IN  SPE ^.layer_01.shape.color = green
0.154	IN  SPE ^.layer_011.shape.mask = Border
0.152	IN  SPE ^.layer_01111.shape.color = cyan
0.150	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.148	OUT SPE ^.layer_01.shape.mask = Full
0.146	IN  SPE ^.layer_0111.shape.mask = Border
0.145	IN  SPE ^.color = black
0.032	
0.032	IN  DEL ^.layer_01111
0.031	IN  DEL ^.layer_011111
0.031	IN  GEN ^.layer_0111.shape.mask = ?
0.031	IN  GEN ^.layer_011.shape.mask = ?
0.031	IN  GEN ^.layer_01.shape.color = ?
0.031	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 2) and color ? and layers
  _00: ^.layer_011.shape at (^.layer_0.pos.j * '2,^.layer_0.pos.j * '2)
  _0: ^.layer_0111.shape at '(3, 3)
  _01: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color ? and mask Full at (^.layer_01.pos.j / '3,^.layer_01.pos.j / '3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01111: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 171.0 + 5565.3 = 5736.3
DL output with Mo: L = 241.6 + 681.0 = 922.6
DL input+output M: L = 412.6 + 6246.3 = 6658.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size + (2, 2) and color ? and layers
  _00: ^.layer_011.shape at (^.layer_0.pos.j * '2,^.layer_0.pos.j * '2)
  _0: ^.layer_0111.shape at '(3, 3)
  _01: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color ? and mask Full at (^.layer_01.pos.j / '3,^.layer_01.pos.j / '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 0.0 = 117.5
DL output with Mo: L = 241.6 + 681.0 = 922.6
DL input+output M: L = 359.0 + 681.0 = 1040.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c658a4bd.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c658a4bd.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST c658a4bd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.7 sec (11.7 sec/task)
bits-train-error = 681.0 bits (681.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-100] Checking task c663677b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 546661.0 = 546673.6
DL output with Mo: L = 12.6 + 503398.2 = 503410.8
DL input+output M: L = 25.2 + 1050059.2 = 1050084.4

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.908	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.900	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.882	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.871	IN  SPE ^.layer_0.shape.color = black
0.865	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.851	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.846	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	IN  ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	IN  SPE ^.layer_001.shape.color = black
0.821	IN  ADD ^.layer_0010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.821	IN  SPE ^.color = blue
0.820	IN  SPE ^.layer_00.shape.color = black
0.820	IN  SPE ^.layer_0010.shape.color = black
0.820	IN  SPE ^.layer_011.shape.mask = Full
0.820	IN  SPE ^.layer_00.shape.mask = Full
0.819	IN  SPE ^.layer_0010.shape.mask = Full
0.819	IN  SPE ^.layer_001.shape.mask = Full
0.819	IN  SPE ^.layer_0.shape.mask = Full
0.819	IN  SPE ^.layer_01.shape.mask = Full
0.819	IN  SPE ^.layer_0111.shape.mask = Full
0.819	IN  SPE ^.layer_01111.shape.mask = Full
0.000	
0.000	IN  DEL ^.layer_0
0.000	IN  DEL ^.layer_001
0.000	IN  DEL ^.layer_0010
0.000	IN  DEL ^.layer_00
0.000	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01
0.000	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _00: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _0010: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _001: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 240.6 + 447218.9 = 447459.5
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 261.8 + 447218.9 = 447480.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c663677b.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c663677b.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c663677b.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c663677b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 32.5 sec (32.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-99] Checking task c6e1b8da.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 161875.6 = 161888.2
DL output with Mo: L = 12.6 + 157562.2 = 157574.8
DL input+output M: L = 25.2 + 319437.8 = 319463.0

# learning a model for train pairs
2.000	
1.612	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.228	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.019	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.814	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.629	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.442	OUT ADD ^.layer_011 = ^.layer_01
0.330	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.326	OUT SPE ^.size = ^.size
0.324	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
0.323	OUT SPE ^.layer_01.shape.size.j = ^.layer_011.shape.size.j
0.322	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.321	IN  SPE ^.layer_01.shape.mask = Full
0.319	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.318	OUT SPE ^.layer_01.shape.color = ^.layer_011.shape.color
0.318	OUT SPE ^.layer_0.shape.mask = Full
0.317	OUT SPE ^.layer_01.shape.mask = Full
0.204	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask Full at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.1 + 18328.0 = 18443.1
DL output with Mo: L = 103.4 + 31926.6 = 32029.9
DL input+output M: L = 218.5 + 50254.6 = 50473.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,^.layer_011.shape.size.j) and color ^.layer_011.shape.color and mask Full at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.1 + 20.0 = 135.1
DL output with Mo: L = 103.4 + 31926.6 = 32029.9
DL input+output M: L = 218.5 + 31946.6 = 32165.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c6e1b8da.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c6e1b8da.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c6e1b8da.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST c6e1b8da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 57.7 sec (57.7 sec/task)
bits-train-error = 31926.6 bits (31926.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-98] Checking task c7d4e6ad.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15497.4 = 15510.1
DL output with Mo: L = 12.6 + 15497.4 = 15510.1
DL input+output M: L = 25.2 + 30994.9 = 31020.1

# learning a model for train pairs
2.000	
1.483	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.210	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.049	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.920	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.751	OUT ADD ^.layer_011 = ^.layer_01
0.644	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	OUT ADD ^.layer_0111 = ^.layer_011
0.471	OUT SPE ^.size = ^.size
0.446	OUT ADD ^.layer_0110 = ^.layer_011.shape at (?,?)
0.432	OUT SPE ^.layer_0.pos = ^.layer_0.pos + (2, 0)
0.419	OUT SPE ^.layer_0110.pos = max(^.layer_0.pos, ^.layer_011.pos) + (0, 2)
0.411	OUT SPE ^.layer_0.shape.size.j = 3
0.404	IN  SPE ^.layer_0.shape.color = grey
0.400	IN  SPE ^.layer_01.shape.mask = Full
0.396	IN  SPE ^.layer_011.shape.mask = Full
0.170	
0.170	IN  GEN ^.layer_0.shape.color = ?
0.170	IN  GEN ^.layer_011.shape.mask = ?
0.170	IN  GEN ^.layer_01.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at ^.layer_0.pos + (2, 0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at max(^.layer_0.pos, ^.layer_011.pos) + (0, 2)
  _011: ^.layer_01
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 94.6 + 3497.4 = 3592.0
DL output with Mo: L = 143.3 + 2404.9 = 2548.2
DL input+output M: L = 237.9 + 5902.3 = 6140.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at ^.layer_0.pos + (2, 0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at max(^.layer_0.pos, ^.layer_011.pos) + (0, 2)
  _011: ^.layer_01
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 143.3 + 2404.9 = 2548.2
DL input+output M: L = 232.6 + 2404.9 = 2637.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c7d4e6ad.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c7d4e6ad.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST c7d4e6ad.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 56.6 sec (56.6 sec/task)
bits-train-error = 2404.9 bits (2404.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-97] Checking task c87289bb.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33042.8 = 33055.4
DL output with Mo: L = 12.6 + 74687.4 = 74700.0
DL input+output M: L = 25.2 + 107730.1 = 107755.3

# learning a model for train pairs
2.000	
1.703	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.465	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.333	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.200	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.934	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.812	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.693	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.660	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.647	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	OUT SPE ^.size = ^.size
0.626	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.160	
0.159	IN  DEL ^.layer_0111
0.159	IN  DEL ^.layer_011
0.158	IN  DEL ^.layer_01
0.157	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 15407.7 = 15521.9
DL output with Mo: L = 184.9 + 11523.3 = 11708.3
DL input+output M: L = 299.0 + 26931.1 = 27230.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 184.9 + 11523.3 = 11708.3
DL input+output M: L = 197.5 + 11523.3 = 11720.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c87289bb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c87289bb.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c87289bb.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c87289bb.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c87289bb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 61.3 sec (61.3 sec/task)
bits-train-error = 11523.3 bits (11523.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-96] Checking task c8b7cc0f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31003.5 = 31016.1
DL output with Mo: L = 12.6 + 4369.4 = 4382.0
DL input+output M: L = 25.2 + 35372.9 = 35398.1

# learning a model for train pairs
2.000	
1.338	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.688	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.601	OUT SPE ^.size = '(3, 3)
0.541	OUT SPE ^.layer_0.shape.size = '(2, 3)
0.491	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.460	OUT SPE ^.layer_0.pos = projI(^.layer_01.pos)
0.445	OUT SPE ^.layer_0.shape.color = black
0.414	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.356	OUT SPE ^.color = ^.layer_01.shape.color
0.336	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.331	IN  SPE ^.layer_0.shape.color = blue
0.326	IN  SPE ^.layer_0.shape.mask = Border
0.323	IN  SPE ^.color = black
0.079	
0.079	IN  DEL ^.layer_011
0.078	IN  GEN ^.layer_0.shape.mask = ?
0.078	IN  GEN ^.layer_0.shape.color = ?
0.078	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_01.shape.color and layers
  _0: a rectangle with size '(2, 3) and color black and mask ? at projI(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Border at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 111.6 + 7597.5 = 7709.1
DL output with Mo: L = 85.6 + 242.4 = 328.0
DL input+output M: L = 197.2 + 7839.9 = 8037.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_01.shape.color and layers
  _0: a rectangle with size '(2, 3) and color black and mask ? at projI(^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 20.0 = 109.3
DL output with Mo: L = 85.6 + 242.4 = 328.0
DL input+output M: L = 174.9 + 262.4 = 437.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN c8b7cc0f.json/1: 1 2nd (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN c8b7cc0f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN c8b7cc0f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST c8b7cc0f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.0 sec (7.0 sec/task)
bits-train-error = 242.4 bits (242.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-95] Checking task c92b942c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2850.2 = 2862.8
DL output with Mo: L = 12.6 + 110518.4 = 110531.0
DL input+output M: L = 25.2 + 113368.6 = 113393.8

# learning a model for train pairs
2.000	
1.699	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.575	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.461	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.347	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.207	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.172	IN  SPE ^.color = black
1.162	OUT ADD ^.layer_00 = ^.layer_0
1.155	OUT SPE ^.size = tiling(^.size, 3, 3)
1.147	OUT ADD ^.layer_011110 = a point with color ? at (?,?)
1.145	OUT SPE ^.layer_0.pos.j = '0
0.491	
0.491	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1873.4 = 1903.1
DL output with Mo: L = 202.7 + 52895.1 = 53097.9
DL input+output M: L = 232.4 + 54768.6 = 55001.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 3, 3) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 202.7 + 52895.1 = 53097.9
DL input+output M: L = 232.3 + 52895.1 = 53127.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c92b942c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c92b942c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN c92b942c.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c92b942c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST c92b942c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 52895.1 bits (52895.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-94] Checking task c97c0139.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 11606.0 = 11618.6
DL output with Mo: L = 12.6 + 60026.8 = 60039.4
DL input+output M: L = 25.2 + 71632.8 = 71658.0

# learning a model for train pairs
2.000	
1.283	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.854	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.440	OUT ADD ^.layer_00 = ^.layer_0
0.420	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.411	IN  SPE ^.layer_0.shape.color = red
0.403	OUT SPE ^.size = ^.size
0.397	IN  SPE ^.layer_0.shape.mask = Full
0.393	IN  SPE ^.color = black
0.389	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.386	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j - 2
0.384	OUT SPE ^.layer_0.shape.color = cyan
0.382	OUT SPE ^.layer_01.shape.color = cyan
0.382	OUT SPE ^.color = black
0.122	
0.121	IN  GEN ^.layer_0.shape.color = ?
0.121	IN  GEN ^.layer_0.shape.mask = ?
0.121	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color cyan and mask ? at ^.layer_0.pos + (1, 1)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 3018.2 = 3061.5
DL output with Mo: L = 136.3 + 6949.8 = 7086.1
DL input+output M: L = 179.6 + 9968.0 = 10147.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 2) and color cyan and mask ? at ^.layer_0.pos + (1, 1)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 136.3 + 6949.8 = 7086.1
DL input+output M: L = 175.1 + 6949.8 = 7124.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c97c0139.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN c97c0139.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST c97c0139.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.9 sec (6.9 sec/task)
bits-train-error = 6949.8 bits (6949.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-93] Checking task ca8de6ea.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10251.0 = 10263.6
DL output with Mo: L = 12.6 + 7917.8 = 7930.4
DL input+output M: L = 25.2 + 18168.8 = 18194.0

# learning a model for train pairs
2.000	
1.846	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.729	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.652	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.573	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.492	OUT ADD ^.layer_00 = a point with color ? at (?,?)
1.434	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.375	IN  ADD ^.layer_01 = a point with color ? at (?,?)
1.316	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.257	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
1.198	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
1.138	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
1.078	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
1.017	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.965	OUT ADD ^.layer_010 = ^.layer_0
0.916	OUT SPE ^.layer_0111 = coloring(^.layer_01111, ^.layer_0.shape.color)
0.868	OUT SPE ^.size = '(3, 3)
0.820	OUT SPE ^.layer_00 = coloring(^.layer_011, ^.layer_01111.shape.color)
0.784	OUT SPE ^.layer_0.shape.size = '(1, 3)
0.753	OUT SPE ^.color = ^.layer_0111111.shape.color
0.723	OUT SPE ^.layer_0.pos = '(1, 0)
0.694	OUT SPE ^.layer_01.pos = '(0, 2)
0.665	OUT SPE ^.layer_011.pos = '(2, 0)
0.641	OUT SPE ^.layer_01.shape.size = '(1, 1)
0.620	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.599	OUT SPE ^.layer_011.shape = ^.layer_01.shape
0.580	OUT SPE ^.layer_0.shape.color = ^.layer_0111.shape.color
0.567	OUT SPE ^.layer_0.shape.mask = Full
0.555	OUT SPE ^.layer_01.shape.mask = Full
0.548	IN  SPE ^.color = black
0.043	
0.042	IN  DEL ^.layer_01111111
0.042	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_0111111.shape.color and layers
  _00: coloring(^.layer_011, ^.layer_01111.shape.color)
  _0: a rectangle with size '(1, 3) and color ^.layer_0111.shape.color and mask Full at '(1, 0)
  _010: ^.layer_0
  _01: a rectangle with size '(1, 1) and color ^.layer_01.shape.color and mask Full at '(0, 2)
  _011: ^.layer_01.shape at '(2, 0)
  _0111: coloring(^.layer_01111, ^.layer_0.shape.color)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 138.5 + 5177.1 = 5315.6
DL output with Mo: L = 236.7 + 0.0 = 236.7
DL input+output M: L = 375.3 + 5177.1 = 5552.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color ^.layer_0111111.shape.color and layers
  _00: coloring(^.layer_011, ^.layer_01111.shape.color)
  _0: a rectangle with size '(1, 3) and color ^.layer_0111.shape.color and mask Full at '(1, 0)
  _010: ^.layer_0
  _01: a rectangle with size '(1, 1) and color ^.layer_01.shape.color and mask Full at '(0, 2)
  _011: ^.layer_01.shape at '(2, 0)
  _0111: coloring(^.layer_01111, ^.layer_0.shape.color)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 123.1 + 0.0 = 123.1
DL output with Mo: L = 236.7 + 0.0 = 236.7
DL input+output M: L = 359.9 + 0.0 = 359.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ca8de6ea.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ca8de6ea.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ca8de6ea.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ca8de6ea.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 43.3 sec (43.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-92] Checking task ca8f78db.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 445876.0 = 445888.6
DL output with Mo: L = 12.6 + 388962.4 = 388975.0
DL input+output M: L = 25.2 + 834838.5 = 834863.7

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.881	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	IN  SPE ^.layer_0.shape.color = blue
0.842	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.766	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.690	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.652	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	IN  SPE ^.layer_01.shape.mask = Full
0.617	IN  SPE ^.layer_011.shape.mask = Full
0.616	IN  SPE ^.layer_0111.shape.mask = Full
0.616	IN  SPE ^.layer_01111.shape.mask = Full
0.616	IN  SPE ^.layer_011111.shape.mask = Full
0.616	IN  SPE ^.layer_0111111.shape.mask = Full
0.616	IN  SPE ^.layer_01111111.shape.mask = Full
0.615	IN  SPE ^.color = black
0.001	
0.000	IN  DEL ^.layer_0
0.000	IN  DEL ^.layer_01111111
0.000	IN  DEL ^.layer_0111111
0.000	IN  DEL ^.layer_011111
0.000	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01
0.000	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 223.2 + 274169.0 = 274392.2
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 244.4 + 274169.0 = 274413.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ca8f78db.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ca8f78db.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ca8f78db.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ca8f78db.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 31.0 sec (31.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-91] Checking task cad67732.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 12604.7 = 12617.3
DL output with Mo: L = 12.6 + 27406.9 = 27419.5
DL input+output M: L = 25.2 + 40011.6 = 40036.8

# learning a model for train pairs
2.000	
1.812	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.664	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.594	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
1.430	OUT ADD ^.layer_011 = ^.layer_01.shape at (?,?)
1.374	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
1.322	IN  ADD ^.layer_00 = a point with color ? at (?,?)
1.288	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.252	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.209	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	OUT ADD ^.layer_0110 = ^.layer_01.shape at (?,?)
0.544	
0.541	IN  DEL ^.layer_00
0.540	IN  DEL ^.layer_011
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: ^.layer_01.shape at (?,?)
  _0110: ^.layer_01.shape at (?,?)
  _011: ^.layer_01.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 104.8 + 8018.4 = 8123.3
DL output with Mo: L = 162.0 + 14474.9 = 14636.9
DL input+output M: L = 266.9 + 22493.3 = 22760.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: ^.layer_01.shape at (?,?)
  _0110: ^.layer_01.shape at (?,?)
  _011: ^.layer_01.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 162.0 + 14474.9 = 14636.9
DL input+output M: L = 226.2 + 14494.9 = 14721.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN cad67732.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cad67732.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cad67732.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST cad67732.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 14474.9 bits (14474.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-90] Checking task cb227835.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3083.0 = 3095.6
DL output with Mo: L = 12.6 + 22191.2 = 22203.8
DL input+output M: L = 25.2 + 25274.3 = 25299.5

# learning a model for train pairs
2.000	
1.254	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.842	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.788	IN  SPE ^.layer_0.shape.color = cyan
0.734	IN  SPE ^.layer_01.shape.color = cyan
0.682	OUT ADD ^.layer_01 = ^.layer_01
0.628	OUT ADD ^.layer_00 = ^.layer_0
0.599	OUT SPE ^.size = ^.size
0.576	IN  SPE ^.color = black
0.568	OUT SPE ^.layer_0.shape.color = green
0.565	OUT SPE ^.color = black
0.125	
0.124	IN  GEN ^.layer_01.shape.color = ?
0.123	IN  GEN ^.layer_0.shape.color = ?
0.123	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)

DL input  with Mi: L = 52.4 + 1360.3 = 1412.8
DL output with Mo: L = 51.7 + 2355.6 = 2407.3
DL input+output M: L = 104.1 + 3716.0 = 3820.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 51.7 + 2355.6 = 2407.3
DL input+output M: L = 97.3 + 2355.6 = 2453.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cb227835.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cb227835.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cb227835.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST cb227835.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.4 sec (2.4 sec/task)
bits-train-error = 2355.6 bits (2355.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-89] Checking task ccd554ac.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10235.7 = 10248.3
DL output with Mo: L = 12.6 + 128111.1 = 128123.7
DL input+output M: L = 25.2 + 138346.8 = 138372.0

# learning a model for train pairs
2.000	
1.132	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	IN  SPE ^.color = black
0.482	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.479	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.478	OUT SPE ^.color = black
0.127	

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 3599.1 = 3638.1
DL output with Mo: L = 37.2 + 15739.7 = 15776.9
DL input+output M: L = 76.1 + 19338.9 = 19415.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 0.0 = 39.0
DL output with Mo: L = 37.2 + 15739.7 = 15776.9
DL input+output M: L = 76.1 + 15739.7 = 15815.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ccd554ac.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ccd554ac.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ccd554ac.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ccd554ac.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ccd554ac.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ccd554ac.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ccd554ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 15739.7 bits (15739.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-88] Checking task cd3c21df.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25115.7 = 25128.3
DL output with Mo: L = 12.6 + 1294.2 = 1306.8
DL input+output M: L = 25.2 + 26409.9 = 26435.1

# learning a model for train pairs
2.000	
1.828	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.594	OUT SPE ^.size = ^.layer_0.shape.size
1.438	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.201	IN  ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.105	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.100	IN  SPE ^.layer_01.shape.mask = Full
1.097	IN  SPE ^.layer_00.shape.mask = Full
1.093	IN  SPE ^.layer_001.shape.mask = Full
1.090	IN  SPE ^.color = black
0.755	
0.754	IN  DEL ^.layer_011
0.754	IN  GEN ^.layer_001.shape.mask = ?
0.754	IN  GEN ^.layer_00.shape.mask = ?
0.754	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.0 + 8401.6 = 8543.6
DL output with Mo: L = 16.5 + 963.2 = 979.7
DL input+output M: L = 158.5 + 9364.8 = 9523.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 115.1 + 0.0 = 115.1
DL output with Mo: L = 16.5 + 963.2 = 979.7
DL input+output M: L = 131.7 + 963.2 = 1094.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN cd3c21df.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN cd3c21df.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cd3c21df.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST cd3c21df.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 963.2 bits (963.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-87] Checking task ce039d91.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31365.6 = 31378.2
DL output with Mo: L = 12.6 + 31365.6 = 31378.2
DL input+output M: L = 25.2 + 62731.3 = 62756.5

# learning a model for train pairs
2.000	
1.645	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.390	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.156	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.988	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.932	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.901	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.875	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.849	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.823	OUT SPE ^.size = ^.size
0.808	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.781	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.762	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.385	
0.384	IN  DEL ^.layer_011
0.383	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 11887.9 = 11977.2
DL output with Mo: L = 149.2 + 11787.9 = 11937.0
DL input+output M: L = 238.4 + 23675.8 = 23914.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 40.0 = 78.8
DL output with Mo: L = 149.2 + 11787.9 = 11937.0
DL input+output M: L = 188.0 + 11827.9 = 12015.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ce039d91.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ce039d91.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ce039d91.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ce039d91.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST ce039d91.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 11787.9 bits (11787.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-86] Checking task ce8d95cc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 64686.7 = 64699.3
DL output with Mo: L = 12.6 + 26210.2 = 26222.8
DL input+output M: L = 25.2 + 90896.9 = 90922.1

# learning a model for train pairs
2.000	
1.766	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.542	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.319	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.914	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.755	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.509	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.428	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.371	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.362	OUT SPE ^.layer_01111.shape.color = ^.layer_01111.shape.color
0.354	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.341	OUT SPE ^.layer_01111.pos = '(1, 0)
0.332	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.324	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.315	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.308	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i
0.303	OUT SPE ^.layer_0.shape.mask = Full
0.298	OUT SPE ^.layer_01.shape.size.j = 1
0.293	OUT SPE ^.layer_01.shape.mask = Full
0.288	OUT SPE ^.layer_011.shape.mask = Full
0.283	OUT SPE ^.layer_0111.shape.mask = Full
0.166	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 7625.2 = 7764.1
DL output with Mo: L = 155.8 + 4111.4 = 4267.3
DL input+output M: L = 294.7 + 11736.7 = 12031.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 71.7 = 210.6
DL output with Mo: L = 155.8 + 4111.4 = 4267.3
DL input+output M: L = 294.7 + 4183.1 = 4477.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ce8d95cc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ce8d95cc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ce8d95cc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ce8d95cc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST ce8d95cc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 4111.4 bits (4111.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-85] Checking task cf133acc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39014.7 = 39027.3
DL output with Mo: L = 12.6 + 66294.7 = 66307.3
DL input+output M: L = 25.2 + 105309.4 = 105334.6

# learning a model for train pairs
2.000	
1.777	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.588	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.408	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.257	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.115	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.006	OUT ADD ^.layer_00 = ^.layer_0
0.887	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.790	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.698	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.610	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.599	OUT SPE ^.size = ^.size
0.595	IN  SPE ^.layer_0111.shape.color = green
0.592	OUT SPE ^.layer_011.shape.size.j = ^.size.j - ^.layer_0.shape.size.j
0.589	OUT SPE ^.layer_011.pos.j = ^.layer_0111.pos.j
0.586	OUT SPE ^.layer_0111.shape.size.i = ^.size.i - ^.layer_00.shape.size.j
0.582	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.j - 3
0.579	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j
0.576	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.574	OUT SPE ^.layer_0.pos.i = '0
0.571	OUT SPE ^.layer_01111.pos.j = right(^.layer_011)
0.568	OUT SPE ^.layer_01111.pos.i = middle(^.layer_0)
0.566	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.563	IN  SPE ^.layer_00.shape.mask = Full
0.561	IN  SPE ^.layer_0.shape.mask = Full
0.558	IN  SPE ^.layer_01.shape.mask = Full
0.556	IN  SPE ^.layer_011.shape.mask = Full
0.553	OUT SPE ^.layer_0111.pos.j = ^.layer_011.pos.j / '3
0.551	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.i - 3
0.549	OUT SPE ^.layer_0.shape.size.j = ^.layer_01.shape.size.j + ^.layer_0.pos.i - ^.layer_00.pos.i
0.148	
0.148	IN  GEN ^.layer_011.shape.mask = ?
0.148	IN  GEN ^.layer_01.shape.mask = ?
0.148	IN  GEN ^.layer_0.shape.mask = ?
0.148	IN  GEN ^.layer_00.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_01.shape.size.j + ^.layer_0.pos.i - ^.layer_00.pos.i) and color ? and mask ? at ('0,^.layer_011.pos.i - 3)
  _01: a rectangle with size (^.layer_0.shape.size.j - 3,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,^.layer_01.pos.j)
  _011: a rectangle with size (?,^.size.j - ^.layer_0.shape.size.j) and color ? and mask ? at (?,^.layer_0111.pos.j)
  _0111: a rectangle with size (^.size.i - ^.layer_00.shape.size.j,?) and color ? and mask ? at (?,^.layer_011.pos.j / '3)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (middle(^.layer_0),right(^.layer_011))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color green at (?,?)

DL input  with Mi: L = 136.9 + 15672.8 = 15809.7
DL output with Mo: L = 407.6 + 9109.5 = 9517.1
DL input+output M: L = 544.5 + 24782.3 = 25326.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_01.shape.size.j + ^.layer_0.pos.i - ^.layer_00.pos.i) and color ? and mask ? at ('0,^.layer_011.pos.i - 3)
  _01: a rectangle with size (^.layer_0.shape.size.j - 3,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,^.layer_01.pos.j)
  _011: a rectangle with size (?,^.size.j - ^.layer_0.shape.size.j) and color ? and mask ? at (?,^.layer_0111.pos.j)
  _0111: a rectangle with size (^.size.i - ^.layer_00.shape.size.j,?) and color ? and mask ? at (?,^.layer_011.pos.j / '3)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (middle(^.layer_0),right(^.layer_011))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color green at (?,?)

DL input  with Mi: L = 132.9 + 31.7 = 164.6
DL output with Mo: L = 407.6 + 9109.5 = 9517.1
DL input+output M: L = 540.5 + 9141.2 = 9681.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN cf133acc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN cf133acc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN cf133acc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,2) and color col10 and mask Full at (0,0)

TEST cf133acc.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 58.8 sec (58.8 sec/task)
bits-train-error = 9109.5 bits (9109.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-84] Checking task cfb2ce5a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25112.1 = 25124.7
DL output with Mo: L = 12.6 + 68705.0 = 68717.6
DL input+output M: L = 25.2 + 93817.1 = 93842.4

# learning a model for train pairs
2.000	
1.701	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.485	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.341	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.224	OUT ADD ^.layer_01 = ^.layer_0
1.115	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.005	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.906	OUT ADD ^.layer_0110 = ^.layer_01
0.830	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.760	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.709	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.652	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.630	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.606	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.596	IN  ADD ^.layer_01100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.546	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.537	OUT SPE ^.size = ^.size
0.529	OUT SPE ^.layer_011111.shape.size = ^.layer_01.shape.size
0.523	OUT SPE ^.layer_011.shape.size = ^.layer_0.shape.size
0.517	OUT SPE ^.layer_01111.shape.size = ^.layer_01.shape.size
0.513	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.509	IN  SPE ^.layer_01100.shape.mask = Full
0.505	IN  SPE ^.layer_011.shape.mask = Full
0.502	IN  SPE ^.color = black
0.500	OUT SPE ^.layer_011111.shape.mask = applySym(flipDiag2, ^.layer_01.shape.mask)
0.497	OUT SPE ^.layer_011.pos.i = ^.layer_01100.pos.j
0.495	OUT SPE ^.layer_0111.pos.j = ^.layer_01100.pos.j
0.492	OUT SPE ^.layer_0111111.shape.size.j = ^.layer_01.shape.size.j
0.490	OUT SPE ^.layer_011111.shape.color = ^.layer_011111.shape.color
0.487	OUT SPE ^.layer_0111111.shape.color = yellow
0.187	
0.187	IN  GEN ^.layer_011.shape.mask = ?
0.187	IN  GEN ^.layer_01100.shape.mask = ?
0.187	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _0110: ^.layer_01
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (^.layer_01100.pos.j,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01100.pos.j)
  _01111: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _011111: a rectangle with size ^.layer_01.shape.size and color ^.layer_011111.shape.color and mask applySym(flipDiag2, ^.layer_01.shape.mask) at (?,?)
  _0111111: a rectangle with size (?,^.layer_01.shape.size.j) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 177.7 + 7552.3 = 7730.0
DL output with Mo: L = 266.3 + 12088.7 = 12355.0
DL input+output M: L = 444.0 + 19641.0 = 20085.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _0110: ^.layer_01
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (^.layer_01100.pos.j,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_01100.pos.j)
  _01111: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _011111: a rectangle with size ^.layer_01.shape.size and color ^.layer_011111.shape.color and mask applySym(flipDiag2, ^.layer_01.shape.mask) at (?,?)
  _0111111: a rectangle with size (?,^.layer_01.shape.size.j) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 175.6 + 0.0 = 175.6
DL output with Mo: L = 266.3 + 12088.7 = 12355.0
DL input+output M: L = 441.9 + 12088.7 = 12530.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cfb2ce5a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN cfb2ce5a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN cfb2ce5a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST cfb2ce5a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.8 sec (60.8 sec/task)
bits-train-error = 12088.7 bits (12088.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-83] Checking task d017b73f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15963.3 = 15975.9
DL output with Mo: L = 12.6 + 15766.3 = 15778.9
DL input+output M: L = 25.2 + 31729.6 = 31754.8

# learning a model for train pairs
2.000	
1.681	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.456	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.177	OUT ADD ^.layer_01 = ^.layer_0
0.948	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.646	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.630	OUT SPE ^.size.i = ^.size.i
0.615	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.601	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.588	OUT SPE ^.layer_011.shape.color = ^.layer_00.shape.color
0.575	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.563	OUT SPE ^.layer_0111.pos.j = bottom(^.layer_01) + 1
0.554	OUT SPE ^.layer_011.shape.size.j = ^.layer_00.shape.size.j - ^.layer_01.pos.i - ^.layer_00.pos.i
0.546	OUT SPE ^.layer_0111.shape.mask = Full
0.538	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.i * '2
0.530	OUT SPE ^.layer_011.pos.i = max(^.layer_0.pos.i, ^.layer_00.pos.i)
0.523	OUT SPE ^.layer_0111.shape.size.i = ^.size.i - ^.layer_00.shape.size.i
0.516	OUT SPE ^.color = black
0.510	IN  SPE ^.color = black
0.161	
0.161	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,^.layer_00.shape.size.j - ^.layer_01.pos.i - ^.layer_00.pos.i) and color ^.layer_00.shape.color and mask ? at (max(^.layer_0.pos.i, ^.layer_00.pos.i),?)
  _0111: a rectangle with size (^.size.i - ^.layer_00.shape.size.i,?) and color ? and mask Full at (^.layer_0.pos.i * '2,bottom(^.layer_01) + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 5626.3 = 5715.7
DL output with Mo: L = 322.6 + 2084.1 = 2406.7
DL input+output M: L = 412.0 + 7710.4 = 8122.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,^.layer_00.shape.size.j - ^.layer_01.pos.i - ^.layer_00.pos.i) and color ^.layer_00.shape.color and mask ? at (max(^.layer_0.pos.i, ^.layer_00.pos.i),?)
  _0111: a rectangle with size (^.size.i - ^.layer_00.shape.size.i,?) and color ? and mask Full at (^.layer_0.pos.i * '2,bottom(^.layer_01) + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 40.0 = 129.3
DL output with Mo: L = 322.6 + 2084.1 = 2406.7
DL input+output M: L = 411.9 + 2124.1 = 2536.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d017b73f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d017b73f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d017b73f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d017b73f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,2) and color col10 and mask Full at (0,2)

TEST d017b73f.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 8.4 sec (8.4 sec/task)
bits-train-error = 2084.1 bits (2084.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-82] Checking task d19f7514.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36586.9 = 36599.5
DL output with Mo: L = 12.6 + 10636.5 = 10649.1
DL input+output M: L = 25.2 + 47223.4 = 47248.6

# learning a model for train pairs
2.000	
1.290	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.602	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.545	OUT SPE ^.size = tiling('(3, 2), 2, 2)
0.487	OUT SPE ^.layer_0.shape.size = tiling('(3, 2), 2, 2)
0.453	OUT SPE ^.layer_0.pos = '(0, 0)
0.440	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	IN  SPE ^.layer_011.shape.color = green
0.428	IN  SPE ^.layer_0.shape.color = grey
0.422	IN  SPE ^.layer_01.shape.color = green
0.419	IN  SPE ^.color = black
0.143	
0.143	IN  DEL ^.layer_011
0.142	IN  DEL ^.layer_01
0.141	IN  DEL ^.layer_0
0.141	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling('(3, 2), 2, 2) and color ? and layers
  _0: a rectangle with size tiling('(3, 2), 2, 2) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 10077.0 = 10176.4
DL output with Mo: L = 82.3 + 1416.9 = 1499.2
DL input+output M: L = 181.7 + 11493.9 = 11675.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling('(3, 2), 2, 2) and color ? and layers
  _0: a rectangle with size tiling('(3, 2), 2, 2) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 82.3 + 1416.9 = 1499.2
DL input+output M: L = 94.9 + 1416.9 = 1511.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d19f7514.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d19f7514.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d19f7514.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d19f7514.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST d19f7514.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 1416.9 bits (1416.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-81] Checking task d282b262.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 34018.3 = 34030.9
DL output with Mo: L = 12.6 + 34018.3 = 34030.9
DL input+output M: L = 25.2 + 68036.6 = 68061.8

# learning a model for train pairs
2.000	
1.856	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.751	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.647	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.543	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.430	OUT ADD ^.layer_0110 = ^.layer_0.shape at (?,?)
1.325	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.233	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.143	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.064	OUT ADD ^.layer_0111 = ^.layer_0111.shape at (?,?)
0.986	OUT ADD ^.layer_00 = ^.layer_01.shape at (?,?)
0.926	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.906	OUT SPE ^.size = ^.size
0.887	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.829	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.770	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.708	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.682	OUT ADD ^.layer_010 = ^.layer_011111.shape at (?,?)
0.665	OUT SPE ^.layer_011.shape = coloring(^.layer_0111111.shape, ^.layer_010.shape.color)
0.656	OUT SPE ^.layer_01111.shape.size = ^.layer_01111.shape.size
0.649	IN  SPE ^.layer_0.shape.mask = Even Checkboard
0.644	OUT SPE ^.layer_0111.pos.i = ^.layer_0111.pos.i
0.639	OUT SPE ^.layer_0110.pos.i = ^.layer_0.pos.i
0.236	
0.236	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_01.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011111.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _011: coloring(^.layer_0111111.shape, ^.layer_010.shape.color) at (?,?)
  _0111: ^.layer_0111.shape at (^.layer_0111.pos.i,?)
  _01111: a rectangle with size ^.layer_01111.shape.size and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Even Checkboard at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 208.7 + 13727.0 = 13935.7
DL output with Mo: L = 236.0 + 7566.3 = 7802.3
DL input+output M: L = 444.8 + 21293.3 = 21738.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_01.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011111.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _011: coloring(^.layer_0111111.shape, ^.layer_010.shape.color) at (?,?)
  _0111: ^.layer_0111.shape at (^.layer_0111.pos.i,?)
  _01111: a rectangle with size ^.layer_01111.shape.size and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 203.4 + 20.0 = 223.4
DL output with Mo: L = 236.0 + 7566.3 = 7802.3
DL input+output M: L = 439.5 + 7586.3 = 8025.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d282b262.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d282b262.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d282b262.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST d282b262.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 7566.3 bits (7566.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-80] Checking task d2acf2cb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 42043.5 = 42056.1
DL output with Mo: L = 12.6 + 40601.2 = 40613.8
DL input+output M: L = 25.2 + 82644.7 = 82669.9

# learning a model for train pairs
2.000	
1.504	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.048	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.020	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.967	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.919	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.888	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.865	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.849	OUT ADD ^.layer_01110 = a point with color ? at (?,?)
0.306	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 22863.5 = 22902.3
DL output with Mo: L = 155.7 + 12225.1 = 12380.8
DL input+output M: L = 194.5 + 35088.6 = 35283.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 155.7 + 12225.1 = 12380.8
DL input+output M: L = 194.5 + 12225.1 = 12419.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d2acf2cb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d2acf2cb.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d2acf2cb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST d2acf2cb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.6 sec (58.6 sec/task)
bits-train-error = 12225.1 bits (12225.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-79] Checking task d304284e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 8266.1 = 8278.7
DL output with Mo: L = 12.6 + 89742.7 = 89755.3
DL input+output M: L = 25.2 + 98008.7 = 98033.9

# learning a model for train pairs
2.000	
1.182	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.036	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.890	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.725	OUT ADD ^.layer_00 = ^.layer_0
0.648	OUT ADD ^.layer_010 = ^.layer_0.shape at (?,?)
0.567	OUT ADD ^.layer_001 = ^.layer_0.shape at (?,?)
0.503	OUT ADD ^.layer_000 = ^.layer_0.shape at (?,?)
0.490	IN  SPE ^.layer_0.shape.color = orange
0.480	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.444	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, pink)
0.438	IN  SPE ^.color = black
0.433	OUT SPE ^.size = ^.size
0.427	OUT SPE ^.layer_011.shape = coloring(^.layer_0.shape, pink)
0.426	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.424	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i
0.423	OUT SPE ^.layer_000.pos.i = ^.layer_0.pos.i
0.421	OUT SPE ^.layer_001.pos.i = ^.layer_0.pos.i
0.420	OUT SPE ^.layer_010.pos.i = ^.layer_0.pos.i
0.419	OUT SPE ^.layer_000.pos.j = right(^.layer_0) + 2
0.417	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0) + 2
0.416	OUT SPE ^.layer_010.pos.j = right(^.layer_0) * '3
0.415	OUT SPE ^.layer_01.shape.color = pink
0.414	OUT SPE ^.layer_0111.shape.color = pink
0.413	OUT SPE ^.layer_01.shape.mask = Full
0.412	OUT SPE ^.layer_0111.shape.mask = Full
0.412	OUT SPE ^.color = black
0.254	
0.254	IN  GEN ^.layer_0.shape.color = ?
0.254	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: ^.layer_0.shape at (^.layer_0.pos.i,right(^.layer_0) + 2)
  _00: ^.layer_0
  _001: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _0: coloring(^.layer_0.shape, pink) at (^.layer_0.pos.i,?)
  _010: ^.layer_0.shape at (^.layer_0.pos.i,right(^.layer_0) * '3)
  _01: a rectangle with size (?,?) and color pink and mask Full at (^.layer_0.pos.i,?)
  _011: coloring(^.layer_0.shape, pink) at (bottom(^.layer_0) + 2,?)
  _0111: a rectangle with size (?,?) and color pink and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 1305.6 = 1347.9
DL output with Mo: L = 312.2 + 22022.1 = 22334.3
DL input+output M: L = 354.5 + 23327.8 = 23682.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: ^.layer_0.shape at (^.layer_0.pos.i,right(^.layer_0) + 2)
  _00: ^.layer_0
  _001: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _0: coloring(^.layer_0.shape, pink) at (^.layer_0.pos.i,?)
  _010: ^.layer_0.shape at (^.layer_0.pos.i,right(^.layer_0) * '3)
  _01: a rectangle with size (?,?) and color pink and mask Full at (^.layer_0.pos.i,?)
  _011: coloring(^.layer_0.shape, pink) at (bottom(^.layer_0) + 2,?)
  _0111: a rectangle with size (?,?) and color pink and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 312.2 + 22022.1 = 22334.3
DL input+output M: L = 351.0 + 22022.1 = 22373.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d304284e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d304284e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST d304284e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 30.3 sec (30.3 sec/task)
bits-train-error = 22022.1 bits (22022.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-78] Checking task d37a1ef5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 35827.8 = 35840.4
DL output with Mo: L = 12.6 + 67404.4 = 67417.0
DL input+output M: L = 25.2 + 103232.2 = 103257.5

# learning a model for train pairs
2.000	
1.097	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.249	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.181	OUT ADD ^.layer_01 = ^.layer_01
0.172	OUT SPE ^.size = ^.size
0.163	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.158	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.153	IN  SPE ^.layer_0.shape.color = red
0.149	IN  SPE ^.layer_0.shape.mask = Border
0.144	IN  SPE ^.layer_01.shape.color = grey
0.141	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.123	OUT ADD ^.layer_011 = ^.layer_011
0.119	IN  SPE ^.layer_011.shape.color = grey
0.116	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.114	IN  SPE ^.color = black
0.113	OUT SPE ^.color = black
0.027	
0.027	IN  GEN ^.layer_011.shape.color = ?
0.027	IN  GEN ^.layer_01.shape.color = ?
0.027	IN  GEN ^.layer_0.shape.mask = ?
0.027	IN  GEN ^.layer_0.shape.color = ?
0.027	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a point with color grey at (?,?)

DL input  with Mi: L = 93.4 + 3070.9 = 3164.3
DL output with Mo: L = 40.2 + 1634.3 = 1674.5
DL input+output M: L = 133.6 + 4705.2 = 4838.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 0.0 = 80.0
DL output with Mo: L = 40.2 + 1634.3 = 1674.5
DL input+output M: L = 120.1 + 1634.3 = 1754.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d37a1ef5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d37a1ef5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d37a1ef5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST d37a1ef5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.6 sec (3.6 sec/task)
bits-train-error = 1634.3 bits (1634.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-77] Checking task d47aa2ff.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 30093.1 = 30105.7
DL output with Mo: L = 12.6 + 11285.3 = 11297.9
DL input+output M: L = 25.2 + 41378.4 = 41403.6

# learning a model for train pairs
2.000	
1.653	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.600	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.546	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.493	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.440	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.386	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.332	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.277	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
1.221	OUT ADD ^.layer_01111111 = a point with color ? at (?,?)
1.195	OUT SPE ^.size.i = ^.size.i
1.169	OUT SPE ^.size.j = ^.size.i
0.518	
0.517	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 19613.4 = 19652.2
DL output with Mo: L = 147.2 + 5688.1 = 5835.3
DL input+output M: L = 186.1 + 25301.5 = 25487.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 147.2 + 5688.1 = 5835.3
DL input+output M: L = 159.8 + 5688.1 = 5848.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d47aa2ff.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d47aa2ff.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d47aa2ff.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST d47aa2ff.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.2 sec (59.2 sec/task)
bits-train-error = 5688.1 bits (5688.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-76] Checking task d492a647.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 63627.8 = 63640.4
DL output with Mo: L = 12.6 + 80837.9 = 80850.5
DL input+output M: L = 25.2 + 144465.7 = 144490.9

# learning a model for train pairs
2.000	
1.394	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.837	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.675	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.576	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.507	OUT ADD ^.layer_01 = ^.layer_0
0.403	OUT ADD ^.layer_00 = ^.layer_01
0.381	OUT ADD ^.layer_001 = ^.layer_011
0.367	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.356	OUT SPE ^.layer_0.shape.size.i = 1
0.347	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.333	OUT ADD ^.layer_0111 = ^.layer_0111
0.328	OUT SPE ^.size = ^.size
0.325	OUT SPE ^.layer_0.shape.size.j = ^.size.i - 2
0.319	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.317	OUT SPE ^.layer_01111.pos.j = ^.layer_01.pos.j + 1
0.315	IN  SPE ^.layer_0.shape.color = grey
0.314	IN  SPE ^.layer_01.shape.color = grey
0.312	IN  SPE ^.layer_011.shape.color = grey
0.311	OUT SPE ^.layer_011.pos.j = bottom(^.layer_011) + 2
0.306	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.304	OUT SPE ^.layer_011111.pos.j = middle(^.layer_01) - 2
0.303	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.j + 1
0.302	OUT SPE ^.layer_011.shape.size.j = ^.layer_011.shape.size.i - 1
0.301	IN  SPE ^.layer_0111.shape.mask = Full
0.300	OUT SPE ^.layer_0.shape.mask = Full
0.300	OUT SPE ^.layer_011.shape.size.i = 1
0.299	OUT SPE ^.layer_011.shape.mask = Full
0.298	OUT SPE ^.layer_01111.shape.mask = Full
0.297	OUT SPE ^.layer_01111.pos.i = ^.layer_01.pos.j / '2
0.296	OUT SPE ^.layer_011111.pos.i = right(^.layer_01) / '2
0.295	OUT SPE ^.layer_01111.shape.size.i = ^.layer_011.shape.size.j - ^.layer_0111.shape.size.i
0.180	
0.180	IN  GEN ^.layer_011.shape.color = ?
0.180	IN  GEN ^.layer_01.shape.color = ?
0.180	IN  GEN ^.layer_0.shape.color = ?
0.180	IN  GEN ^.layer_0111.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_01
  _001: ^.layer_011
  _0: a rectangle with size (1,^.size.i - 2) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (1,^.layer_011.shape.size.i - 1) and color ? and mask Full at (^.layer_011.pos.j + 1,bottom(^.layer_011) + 2)
  _0111: ^.layer_0111
  _01111: a rectangle with size (^.layer_011.shape.size.j - ^.layer_0111.shape.size.i,?) and color ? and mask Full at (^.layer_01.pos.j / '2,^.layer_01.pos.j + 1)
  _011111: a point with color ? at (right(^.layer_01) / '2,middle(^.layer_01) - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 125.1 + 7325.8 = 7450.9
DL output with Mo: L = 355.8 + 13992.4 = 14348.3
DL input+output M: L = 480.9 + 21318.2 = 21799.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_01
  _001: ^.layer_011
  _0: a rectangle with size (1,^.size.i - 2) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (1,^.layer_011.shape.size.i - 1) and color ? and mask Full at (^.layer_011.pos.j + 1,bottom(^.layer_011) + 2)
  _0111: ^.layer_0111
  _01111: a rectangle with size (^.layer_011.shape.size.j - ^.layer_0111.shape.size.i,?) and color ? and mask Full at (^.layer_01.pos.j / '2,^.layer_01.pos.j + 1)
  _011111: a point with color ? at (right(^.layer_01) / '2,middle(^.layer_01) - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 355.8 + 13992.4 = 14348.3
DL input+output M: L = 470.0 + 14012.4 = 14482.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d492a647.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d492a647.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST d492a647.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.5 sec (58.5 sec/task)
bits-train-error = 13992.4 bits (13992.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-75] Checking task d4b1c2b1.json: 7 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9878.7 = 9891.4
DL output with Mo: L = 12.6 + 75552.5 = 75565.2
DL input+output M: L = 25.2 + 85431.3 = 85456.5

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = ^.grid * colorCount(^.grid)
0.619	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.004	
0.002	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
^.grid * colorCount(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 6076.8 = 6115.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 62.8 + 6076.8 = 6139.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
^.grid * colorCount(^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 24.0 + 0.0 = 24.0
DL input+output M: L = 36.6 + 0.0 = 36.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/4: 1 1st (SUCCESS)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/5: 1 1st (SUCCESS)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/6: 1 1st (SUCCESS)

## instance 7

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4b1c2b1.json/7: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST d4b1c2b1.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-74] Checking task d4c90558.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 162596.0 = 162608.6
DL output with Mo: L = 12.6 + 13020.3 = 13032.9
DL input+output M: L = 25.2 + 175616.3 = 175641.5

# learning a model for train pairs
2.000	
1.610	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.226	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.921	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.710	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.601	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.557	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.544	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.531	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.521	OUT SPE ^.layer_0.pos.j = '0
0.510	OUT SPE ^.layer_01.pos.j = '0
0.497	OUT SPE ^.layer_01.shape.size.j = average(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i) - 2
0.487	OUT SPE ^.size.i = average(^.layer_0.shape.size.i, ^.layer_0111.shape.size.i) / '2
0.479	OUT SPE ^.layer_0.shape.size.i = 1
0.471	OUT SPE ^.layer_0.shape.mask = Full
0.464	OUT SPE ^.layer_01.shape.size.i = 1
0.456	OUT SPE ^.layer_01.shape.mask = Full
0.451	OUT SPE ^.color = black
0.446	OUT SPE ^.layer_0.pos.i = max(^.layer_0.pos.i, ^.layer_0111.pos.i) / colorCount(^.grid)
0.445	IN  SPE ^.color = black
0.289	
0.289	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (average(^.layer_0.shape.size.i, ^.layer_0111.shape.size.i) / '2,?) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (max(^.layer_0.pos.i, ^.layer_0111.pos.i) / colorCount(^.grid),'0)
  _01: a rectangle with size (1,average(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i) - 2) and color ^.layer_01.shape.color and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.3 + 25528.4 = 25642.7
DL output with Mo: L = 239.2 + 3510.9 = 3750.1
DL input+output M: L = 353.4 + 29039.3 = 29392.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (average(^.layer_0.shape.size.i, ^.layer_0111.shape.size.i) / '2,?) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask Full at (max(^.layer_0.pos.i, ^.layer_0111.pos.i) / colorCount(^.grid),'0)
  _01: a rectangle with size (1,average(^.layer_01.shape.size.i, ^.layer_0111.shape.size.i) - 2) and color ^.layer_01.shape.color and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 51.7 = 165.8
DL output with Mo: L = 239.2 + 3510.9 = 3750.1
DL input+output M: L = 353.3 + 3562.6 = 3915.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d4c90558.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4c90558.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d4c90558.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST d4c90558.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.4 sec (10.4 sec/task)
bits-train-error = 3510.9 bits (3510.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-73] Checking task d56f2372.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 60896.3 = 60908.9
DL output with Mo: L = 12.6 + 12481.2 = 12493.8
DL input+output M: L = 25.2 + 73377.5 = 73402.7

# learning a model for train pairs
2.000	
1.197	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.948	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.743	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.561	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.415	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.288	OUT SPE ^.layer_0.shape = ^.layer_01.shape
0.238	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.200	OUT SPE ^.size = ^.layer_01.shape.size
0.178	OUT SPE ^.layer_0.pos = '(0, 0)
0.173	OUT SPE ^.color = black
0.171	IN  SPE ^.color = black
0.007	
0.006	IN  DEL ^.layer_01111
0.006	IN  DEL ^.layer_0111
0.006	IN  DEL ^.layer_011
0.005	IN  DEL ^.layer_0
0.005	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 139.0 + 10071.1 = 10210.2
DL output with Mo: L = 46.8 + 0.0 = 46.8
DL input+output M: L = 185.8 + 10071.1 = 10256.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 63.4 = 102.2
DL output with Mo: L = 46.8 + 0.0 = 46.8
DL input+output M: L = 85.6 + 63.4 = 149.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d56f2372.json/1: 1 3rd (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d56f2372.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d56f2372.json/3: 1 3rd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST d56f2372.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.56
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-72] Checking task d5c634a2.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 44434.8 = 44447.4
DL output with Mo: L = 12.6 + 11609.9 = 11622.5
DL input+output M: L = 25.2 + 56044.6 = 56069.8

# learning a model for train pairs
2.000	
1.736	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.566	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.442	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.315	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.200	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	OUT SPE ^.size = projJ(^.layer_01.shape.size) + (3, 3)
1.043	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.990	OUT SPE ^.layer_0.pos = '(0, 0)
0.937	OUT SPE ^.layer_01.pos = '(0, 3)
0.904	OUT SPE ^.layer_0.shape.color = green
0.870	OUT SPE ^.layer_01.shape.color = blue
0.855	OUT SPE ^.color = black
0.846	IN  SPE ^.layer_0.shape.color = red
0.838	IN  SPE ^.layer_01.shape.color = red
0.829	IN  SPE ^.layer_011.shape.color = red
0.820	IN  SPE ^.layer_0111.shape.color = red
0.816	IN  SPE ^.color = black
0.476	
0.476	IN  DEL ^.layer_0111
0.475	IN  DEL ^.layer_011
0.475	IN  GEN ^.layer_01.shape.color = ?
0.475	IN  GEN ^.layer_0.shape.color = ?
0.475	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projJ(^.layer_01.shape.size) + (3, 3) and color black and layers
  _0: a point with color green at '(0, 0)
  _01: a point with color blue at '(0, 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 127.6 + 15103.0 = 15230.5
DL output with Mo: L = 89.7 + 5413.5 = 5503.2
DL input+output M: L = 217.3 + 20516.4 = 20733.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projJ(^.layer_01.shape.size) + (3, 3) and color black and layers
  _0: a point with color green at '(0, 0)
  _01: a point with color blue at '(0, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 89.7 + 5413.5 = 5503.2
DL input+output M: L = 153.9 + 5413.5 = 5567.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d5c634a2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d5c634a2.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d5c634a2.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d5c634a2.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d5c634a2.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d5c634a2.json/6: 0 - (FAILURE)

## instance 7

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN d5c634a2.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST d5c634a2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST d5c634a2.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.9 sec (7.9 sec/task)
bits-train-error = 5413.5 bits (5413.5 bits/task)
acc-train-micro = 0.14 tasks (14.29%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.14
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-71] Checking task d931c21c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 58914.7 = 58927.3
DL output with Mo: L = 12.6 + 122904.8 = 122917.4
DL input+output M: L = 25.2 + 181819.5 = 181844.7

# learning a model for train pairs
2.000	
1.494	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.186	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.975	OUT ADD ^.layer_01 = ^.layer_0
0.912	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.642	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.536	OUT ADD ^.layer_00 = ^.layer_00
0.454	OUT ADD ^.layer_010 = ^.layer_01
0.420	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.384	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.377	OUT SPE ^.size = ^.size
0.370	OUT SPE ^.layer_011.pos.j = ^.layer_01.pos.j - 1
0.366	IN  SPE ^.layer_00.shape.color = blue
0.362	IN  SPE ^.layer_0.shape.color = blue
0.359	IN  SPE ^.layer_01.shape.color = blue
0.355	IN  SPE ^.layer_011.shape.color = blue
0.351	IN  SPE ^.layer_0111.shape.color = blue
0.349	IN  SPE ^.color = black
0.348	OUT SPE ^.layer_0.pos.i = ^.layer_00.pos.j + ^.layer_011.pos.i - ^.layer_01.pos.i
0.348	OUT SPE ^.color = black
0.347	OUT SPE ^.layer_011.pos.i = right(^.layer_011) - min(^.layer_01.shape.size.j, ^.layer_0111.shape.size.j)
0.193	
0.193	IN  GEN ^.layer_0111.shape.color = ?
0.193	IN  GEN ^.layer_011.shape.color = ?
0.192	IN  GEN ^.layer_01.shape.color = ?
0.192	IN  GEN ^.layer_0.shape.color = ?
0.192	IN  GEN ^.layer_00.shape.color = ?
0.192	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_00.pos.j + ^.layer_011.pos.i - ^.layer_01.pos.i,?)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (right(^.layer_011) - min(^.layer_01.shape.size.j, ^.layer_0111.shape.size.j),^.layer_01.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 155.6 + 9195.2 = 9350.8
DL output with Mo: L = 226.3 + 22954.8 = 23181.2
DL input+output M: L = 382.0 + 32150.0 = 32531.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_00.pos.j + ^.layer_011.pos.i - ^.layer_01.pos.i,?)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (right(^.layer_011) - min(^.layer_01.shape.size.j, ^.layer_0111.shape.size.j),^.layer_01.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 83.4 = 222.3
DL output with Mo: L = 226.3 + 22954.8 = 23181.2
DL input+output M: L = 365.2 + 23038.2 = 23403.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d931c21c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d931c21c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d931c21c.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN d931c21c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST d931c21c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 38.3 sec (38.3 sec/task)
bits-train-error = 22954.8 bits (22954.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-70] Checking task d94c3b52.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 169313.3 = 169325.9
DL output with Mo: L = 12.6 + 169313.3 = 169325.9
DL input+output M: L = 25.2 + 338626.7 = 338651.9

# learning a model for train pairs
2.000	
1.933	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.870	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.812	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.763	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.708	OUT ADD ^.layer_011 = ^.layer_01
1.681	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.660	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.632	OUT ADD ^.layer_01101 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.746	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 150080.5 = 150144.7
DL output with Mo: L = 146.2 + 126112.9 = 126259.1
DL input+output M: L = 210.4 + 276193.3 = 276403.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 20.0 = 84.2
DL output with Mo: L = 146.2 + 126112.9 = 126259.1
DL input+output M: L = 210.4 + 126132.9 = 126343.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d94c3b52.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d94c3b52.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN d94c3b52.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST d94c3b52.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.6 sec (60.6 sec/task)
bits-train-error = 126112.9 bits (126112.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-69] Checking task da2b0fe3.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19137.8 = 19150.4
DL output with Mo: L = 12.6 + 30333.7 = 30346.3
DL input+output M: L = 25.2 + 49471.4 = 49496.7

# learning a model for train pairs
2.000	
1.534	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.159	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.812	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.501	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.287	OUT ADD ^.layer_00 = ^.layer_0
0.243	OUT SPE ^.layer_01 = ^.layer_01
0.223	OUT SPE ^.size = ^.size
0.218	OUT SPE ^.layer_0.shape.color = green
0.035	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 3500.6 = 3564.8
DL output with Mo: L = 51.6 + 910.7 = 962.2
DL input+output M: L = 115.8 + 4411.3 = 4527.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 0.0 = 64.2
DL output with Mo: L = 51.6 + 910.7 = 962.2
DL input+output M: L = 115.8 + 910.7 = 1026.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN da2b0fe3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN da2b0fe3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN da2b0fe3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST da2b0fe3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST da2b0fe3.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.3 sec (54.3 sec/task)
bits-train-error = 910.7 bits (910.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-68] Checking task da515329.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 10265.6 = 10278.2
DL output with Mo: L = 12.6 + 171273.3 = 171285.9
DL input+output M: L = 25.2 + 181538.9 = 181564.1

# learning a model for train pairs
2.000	
1.065	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.322	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.306	IN  SPE ^.layer_0.shape.color = cyan
0.299	IN  SPE ^.color = black
0.295	OUT SPE ^.size = ^.size
0.291	OUT SPE ^.layer_0.shape.size = ^.size - (0, 1)
0.289	OUT SPE ^.layer_0.pos = '(0, 0)
0.059	
0.056	IN  DEL ^.layer_0
0.056	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.size - (0, 1) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2364.5 = 2406.8
DL output with Mo: L = 50.4 + 9298.9 = 9349.3
DL input+output M: L = 92.7 + 11663.4 = 11756.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.size - (0, 1) and color ? and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 50.4 + 9298.9 = 9349.3
DL input+output M: L = 63.0 + 9298.9 = 9361.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN da515329.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN da515329.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN da515329.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST da515329.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 9298.9 bits (9298.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-67] Checking task dc2aa30b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 87418.3 = 87430.9
DL output with Mo: L = 12.6 + 87418.3 = 87430.9
DL input+output M: L = 25.2 + 174836.7 = 174861.9

# learning a model for train pairs
2.000	
1.539	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.024	OUT ADD ^.layer_0 = ^.layer_0
0.827	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.659	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.609	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.512	IN  SPE ^.layer_0.shape.mask = ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.476	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	OUT ADD ^.layer_010 = ^.layer_0111.shape at (?,?)
0.399	OUT ADD ^.layer_0111 = ^.layer_011.shape at (?,?)
0.375	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.353	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.323	OUT ADD ^.layer_011111 = ^.layer_01111.shape at (?,?)
0.316	OUT SPE ^.size = ^.size
0.309	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.103	
0.102	IN  GEN ^.layer_0.shape.mask = ?
0.101	IN  DEL ^.layer_011111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_0111.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011.shape at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 270.6 + 18031.7 = 18302.2
DL output with Mo: L = 157.1 + 8574.9 = 8732.0
DL input+output M: L = 427.6 + 26606.6 = 27034.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_0111.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011.shape at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 157.1 + 8574.9 = 8732.0
DL input+output M: L = 296.0 + 8574.9 = 8870.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN dc2aa30b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN dc2aa30b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN dc2aa30b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST dc2aa30b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 8574.9 bits (8574.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-66] Checking task dc2e9a9d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41962.5 = 41975.2
DL output with Mo: L = 12.6 + 82485.9 = 82498.5
DL input+output M: L = 25.2 + 124448.4 = 124473.7

# learning a model for train pairs
2.000	
1.608	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.301	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	OUT ADD ^.layer_0 = ^.layer_0
0.878	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.702	OUT ADD ^.layer_011 = ^.layer_01
0.546	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.424	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.317	OUT ADD ^.layer_010 = ^.layer_010
0.235	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.224	OUT SPE ^.layer_01.shape.mask = applySym(rotate180, ^.layer_0.shape.mask)
0.215	OUT SPE ^.size = ^.size
0.208	OUT SPE ^.layer_0110.shape.mask = applySym(flipWidth, ^.layer_010.shape.mask)
0.202	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size
0.198	IN  SPE ^.layer_0.shape.color = green
0.194	IN  SPE ^.layer_010.shape.color = green
0.190	IN  SPE ^.layer_01.shape.color = green
0.188	OUT SPE ^.layer_0111.shape.size.j = 3
0.186	OUT SPE ^.layer_0110.shape.size.j = max(^.layer_01.shape.size.j, ^.layer_010.shape.size.j)
0.184	IN  SPE ^.color = black
0.182	OUT SPE ^.layer_0110.pos.i = right(^.layer_0) + ^.layer_010.pos.j - ^.layer_0.pos.j
0.181	OUT SPE ^.color = black
0.039	
0.039	IN  GEN ^.layer_01.shape.color = ?
0.038	IN  GEN ^.layer_010.shape.color = ?
0.038	IN  GEN ^.layer_0.shape.color = ?
0.038	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: a rectangle with size ^.layer_0.shape.size and color ? and mask applySym(rotate180, ^.layer_0.shape.mask) at (?,?)
  _0110: a rectangle with size (?,max(^.layer_01.shape.size.j, ^.layer_010.shape.size.j)) and color ? and mask applySym(flipWidth, ^.layer_010.shape.mask) at (right(^.layer_0) + ^.layer_010.pos.j - ^.layer_0.pos.j,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 5995.7 = 6095.0
DL output with Mo: L = 254.9 + 2733.2 = 2988.1
DL input+output M: L = 354.3 + 8728.9 = 9083.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: a rectangle with size ^.layer_0.shape.size and color ? and mask applySym(rotate180, ^.layer_0.shape.mask) at (?,?)
  _0110: a rectangle with size (?,max(^.layer_01.shape.size.j, ^.layer_010.shape.size.j)) and color ? and mask applySym(flipWidth, ^.layer_010.shape.mask) at (right(^.layer_0) + ^.layer_010.pos.j - ^.layer_0.pos.j,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 254.9 + 2733.2 = 2988.1
DL input+output M: L = 344.2 + 2733.2 = 3077.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN dc2e9a9d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN dc2e9a9d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN dc2e9a9d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST dc2e9a9d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.7 sec (23.7 sec/task)
bits-train-error = 2733.2 bits (2733.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-65] Checking task dd2401ed.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26566.9 = 26579.5
DL output with Mo: L = 12.6 + 26566.9 = 26579.5
DL input+output M: L = 25.2 + 53133.9 = 53159.1

# learning a model for train pairs
2.000	
1.655	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.278	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.228	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.131	OUT ADD ^.layer_01 = ^.layer_01
1.093	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.055	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.025	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.994	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.963	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.932	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.901	IN  ADD ^.layer_0100 = a point with color ? at (?,?)
0.871	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.840	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.808	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.778	OUT SPE ^.size = ^.size
0.752	OUT SPE ^.layer_011111 = ^.layer_0111
0.723	OUT SPE ^.layer_011.shape = coloring(^.layer_010.shape, ^.layer_0111.shape.color)
0.697	OUT SPE ^.layer_01111 = coloring(^.layer_011, ^.layer_0111.shape.color)
0.672	OUT SPE ^.layer_0111111 = ^.layer_01111
0.647	OUT SPE ^.layer_0111 = coloring(^.layer_0100, blue)
0.639	IN  SPE ^.layer_0.shape.color = grey
0.630	IN  SPE ^.layer_010.shape.color = red
0.622	IN  SPE ^.layer_011.shape.color = red
0.614	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.609	IN  SPE ^.layer_0.shape.mask = Full
0.606	OUT SPE ^.color = black
0.198	
0.197	IN  GEN ^.layer_011.shape.color = ?
0.197	IN  GEN ^.layer_010.shape.color = ?
0.197	IN  GEN ^.layer_0.shape.color = ?
0.197	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _01: ^.layer_01
  _011: coloring(^.layer_010.shape, ^.layer_0111.shape.color) at (?,?)
  _0111: coloring(^.layer_0100, blue)
  _01111: coloring(^.layer_011, ^.layer_0111.shape.color)
  _011111: ^.layer_0111
  _0111111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0100: a point with color ? at (?,?)
  _010: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color red at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 162.0 + 10866.5 = 11028.4
DL output with Mo: L = 144.9 + 4925.0 = 5069.9
DL input+output M: L = 306.9 + 15791.5 = 16098.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _01: ^.layer_01
  _011: coloring(^.layer_010.shape, ^.layer_0111.shape.color) at (?,?)
  _0111: coloring(^.layer_0100, blue)
  _01111: coloring(^.layer_011, ^.layer_0111.shape.color)
  _011111: ^.layer_0111
  _0111111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0100: a point with color ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 151.0 + 20.0 = 171.0
DL output with Mo: L = 144.9 + 4925.0 = 5069.9
DL input+output M: L = 295.9 + 4945.0 = 5240.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN dd2401ed.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN dd2401ed.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN dd2401ed.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN dd2401ed.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST dd2401ed.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 4925.0 bits (4925.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-64] Checking task de493100.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1032417.3 = 1032430.0
DL output with Mo: L = 12.6 + 50975.9 = 50988.5
DL input+output M: L = 25.2 + 1083393.3 = 1083418.5

# learning a model for train pairs
2.000	
1.737	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.590	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.508	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.467	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.436	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.294	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.564	
0.564	IN  DEL ^.layer_011
0.564	IN  DEL ^.layer_01
0.564	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 753766.5 = 753855.7
DL output with Mo: L = 114.1 + 28645.6 = 28759.8
DL input+output M: L = 203.4 + 782412.1 = 782615.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 114.1 + 28645.6 = 28759.8
DL input+output M: L = 126.7 + 28645.6 = 28772.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN de493100.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN de493100.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN de493100.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN de493100.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST de493100.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 28645.6 bits (28645.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-63] Checking task df8cc377.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 54649.3 = 54661.9
DL output with Mo: L = 12.6 + 54649.3 = 54661.9
DL input+output M: L = 25.2 + 109298.7 = 109323.9

# learning a model for train pairs
2.000	
1.593	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.164	OUT ADD ^.layer_0 = ^.layer_0
0.884	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.604	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.438	OUT ADD ^.layer_011 = ^.layer_01
0.377	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.364	OUT SPE ^.size = ^.size
0.353	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.342	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.331	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.324	OUT SPE ^.layer_01.pos = ^.layer_0.pos + (1, 1)
0.317	OUT SPE ^.layer_0111.pos = ^.layer_01.pos + (1, 1)
0.310	OUT SPE ^.layer_01.shape.size = ^.layer_0.shape.size - (2, 2)
0.305	OUT SPE ^.layer_0111.shape.size = ^.layer_01.shape.size - (2, 2)
0.302	IN  SPE ^.layer_0.shape.mask = Border
0.299	IN  SPE ^.layer_01.shape.mask = Border
0.296	OUT SPE ^.layer_01.shape.color = ^.layer_01111.shape.color
0.295	OUT SPE ^.color = black
0.293	IN  SPE ^.color = black
0.022	
0.022	IN  GEN ^.layer_01.shape.mask = ?
0.022	IN  GEN ^.layer_0.shape.mask = ?
0.022	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color ^.layer_01111.shape.color and mask ? at ^.layer_0.pos + (1, 1)
  _011: ^.layer_01
  _0111: a rectangle with size ^.layer_01.shape.size - (2, 2) and color ? and mask ? at ^.layer_01.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 117.8 + 14804.7 = 14922.5
DL output with Mo: L = 160.9 + 946.0 = 1106.9
DL input+output M: L = 278.7 + 15750.7 = 16029.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size - (2, 2) and color ^.layer_01111.shape.color and mask ? at ^.layer_0.pos + (1, 1)
  _011: ^.layer_01
  _0111: a rectangle with size ^.layer_01.shape.size - (2, 2) and color ? and mask ? at ^.layer_01.pos + (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 0.0 = 111.0
DL output with Mo: L = 160.9 + 946.0 = 1106.9
DL input+output M: L = 271.9 + 946.0 = 1217.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN df8cc377.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN df8cc377.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN df8cc377.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST df8cc377.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.7 sec (14.7 sec/task)
bits-train-error = 946.0 bits (946.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-62] Checking task e0fb7511.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 41059.9 = 41072.5
DL output with Mo: L = 12.6 + 41059.9 = 41072.5
DL input+output M: L = 25.2 + 82119.8 = 82145.0

# learning a model for train pairs
2.000	
1.143	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.656	OUT ADD ^.layer_0 = ^.layer_0
0.487	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.436	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.394	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.350	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.335	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.319	OUT SPE ^.size = ^.size
0.303	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.299	OUT SPE ^.layer_01.shape.size.j = 3
0.295	IN  SPE ^.layer_0.shape.color = blue
0.291	OUT SPE ^.layer_01.shape.color = cyan
0.287	OUT SPE ^.layer_011.shape.color = cyan
0.283	OUT SPE ^.layer_0111.shape.color = cyan
0.279	OUT SPE ^.layer_01111.shape.color = cyan
0.274	OUT SPE ^.layer_011111.shape.color = cyan
0.270	OUT SPE ^.layer_0111111.shape.color = cyan
0.267	OUT SPE ^.layer_011.shape.size.j = 2
0.263	OUT SPE ^.layer_011111.shape.size.i = 2
0.259	OUT SPE ^.layer_0111.shape.size.j = 2
0.257	OUT SPE ^.layer_01.shape.mask = Full
0.254	OUT SPE ^.layer_011.shape.mask = Full
0.252	OUT SPE ^.layer_0111.shape.mask = Full
0.248	OUT SPE ^.layer_01111.shape.size.i = 2
0.246	OUT SPE ^.layer_0111.shape.size.i = 1
0.243	OUT SPE ^.layer_01111.shape.mask = Full
0.241	OUT SPE ^.layer_011111.shape.mask = Full
0.238	OUT SPE ^.layer_0111111.shape.mask = Full
0.237	IN  SPE ^.color = black
0.235	OUT SPE ^.color = black
0.099	
0.099	IN  GEN ^.layer_0.shape.color = ?
0.099	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,3) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (?,2) and color cyan and mask Full at (?,?)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (?,?)
  _01111: a rectangle with size (2,?) and color cyan and mask Full at (?,?)
  _011111: a rectangle with size (2,?) and color cyan and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 5578.6 = 5620.9
DL output with Mo: L = 207.7 + 3814.7 = 4022.3
DL input+output M: L = 250.0 + 9393.3 = 9643.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,3) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (?,2) and color cyan and mask Full at (?,?)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (?,?)
  _01111: a rectangle with size (2,?) and color cyan and mask Full at (?,?)
  _011111: a rectangle with size (2,?) and color cyan and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 207.7 + 3814.7 = 4022.3
DL input+output M: L = 246.5 + 3814.7 = 4061.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e0fb7511.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e0fb7511.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e0fb7511.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e0fb7511.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.0 sec (16.0 sec/task)
bits-train-error = 3814.7 bits (3814.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-61] Checking task e133d23d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20816.9 = 20829.5
DL output with Mo: L = 12.6 + 4898.8 = 4911.4
DL input+output M: L = 25.2 + 25715.6 = 25740.9

# learning a model for train pairs
2.000	
1.519	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.199	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.867	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.736	OUT SPE ^.size = ^.layer_0.shape.size
0.647	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.568	OUT SPE ^.layer_0.pos = '(0, 0)
0.511	OUT SPE ^.layer_0.shape.color = red
0.486	OUT SPE ^.color = black
0.472	IN  SPE ^.layer_01.shape.color = yellow
0.465	IN  SPE ^.layer_01.shape.mask = Full
0.459	IN  SPE ^.color = black
0.142	
0.141	IN  DEL ^.layer_01
0.140	IN  DEL ^.layer_011
0.140	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color red and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 93.7 + 6588.6 = 6682.3
DL output with Mo: L = 44.4 + 632.6 = 677.0
DL input+output M: L = 138.2 + 7221.2 = 7359.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color red and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 44.4 + 632.6 = 677.0
DL input+output M: L = 83.3 + 632.6 = 715.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e133d23d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e133d23d.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e133d23d.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e133d23d.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e133d23d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e133d23d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 632.6 bits (632.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-60] Checking task e1baa8a4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 199719.8 = 199732.4
DL output with Mo: L = 12.6 + 8417.0 = 8429.6
DL input+output M: L = 25.2 + 208136.8 = 208162.0

# learning a model for train pairs
2.000	
1.694	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.491	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.326	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.224	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.029	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.930	OUT ADD ^.layer_011 = a point with color ? at (?,?)
0.862	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.828	OUT SPE ^.layer_0111.pos = '(1, 0)
0.794	OUT SPE ^.layer_01.pos = '(0, 1)
0.767	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.751	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i
0.735	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j / '3
0.719	OUT SPE ^.layer_0.pos.i = 1
0.708	OUT SPE ^.layer_0.pos.j = span(^.layer_0.pos.i, ^.layer_0111.pos.i) - ^.layer_011.shape.size.i
0.708	IN  SPE ^.layer_0.shape.mask = Full
0.707	IN  SPE ^.layer_01.shape.mask = Full
0.706	IN  SPE ^.layer_011.shape.mask = Full
0.706	IN  SPE ^.layer_0111.shape.mask = Full
0.485	
0.485	IN  GEN ^.layer_0111.shape.mask = ?
0.485	IN  GEN ^.layer_011.shape.mask = ?
0.485	IN  GEN ^.layer_01.shape.mask = ?
0.485	IN  GEN ^.layer_0.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (1,span(^.layer_0.pos.i, ^.layer_0111.pos.i) - ^.layer_011.shape.size.i)
  _01: a point with color ? at '(0, 1)
  _011: a point with color ^.layer_011.shape.color at (^.layer_011.pos.i,^.layer_011.pos.j / '3)
  _0111: a point with color ? at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 118.1 + 44101.3 = 44219.4
DL output with Mo: L = 175.9 + 3906.6 = 4082.5
DL input+output M: L = 294.0 + 48007.9 = 48301.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (1,span(^.layer_0.pos.i, ^.layer_0111.pos.i) - ^.layer_011.shape.size.i)
  _01: a point with color ? at '(0, 1)
  _011: a point with color ^.layer_011.shape.color at (^.layer_011.pos.i,^.layer_011.pos.j / '3)
  _0111: a point with color ? at '(1, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 31.7 = 145.8
DL output with Mo: L = 175.9 + 3906.6 = 4082.5
DL input+output M: L = 290.0 + 3938.3 = 4228.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e1baa8a4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e1baa8a4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e1baa8a4.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e1baa8a4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e1baa8a4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.4 sec (8.4 sec/task)
bits-train-error = 3906.6 bits (3906.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-59] Checking task e1d2900e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 24969.2 = 24981.8
DL output with Mo: L = 12.6 + 24969.2 = 24981.8
DL input+output M: L = 25.2 + 49938.4 = 49963.6

# learning a model for train pairs
2.000	
1.851	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.661	OUT ADD ^.layer_0 = ^.layer_0
1.487	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.337	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.263	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.192	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.133	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.010	OUT ADD ^.layer_01111 = ^.layer_0111
0.981	OUT SPE ^.size = ^.size
0.956	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.939	OUT SPE ^.layer_01 = ^.layer_01
0.918	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.911	OUT SPE ^.layer_011.pos.i = ^.layer_0.pos.i
0.904	IN  SPE ^.layer_0.shape.color = red
0.897	IN  SPE ^.layer_01.shape.color = red
0.891	OUT SPE ^.layer_011.shape.color = blue
0.884	IN  SPE ^.layer_01111.shape.color = blue
0.879	OUT SPE ^.layer_011.shape.size.i = area(^.layer_0111.shape)
0.875	IN  SPE ^.layer_0.shape.mask = Full
0.871	IN  SPE ^.layer_01.shape.mask = Full
0.867	IN  SPE ^.layer_0111.shape.mask = Full
0.863	OUT SPE ^.layer_011.shape.mask = Full
0.356	
0.355	IN  DEL ^.layer_01111
0.355	IN  GEN ^.layer_01.shape.color = ?
0.355	IN  GEN ^.layer_0.shape.color = ?
0.355	IN  GEN ^.layer_0111.shape.mask = ?
0.355	IN  GEN ^.layer_01.shape.mask = ?
0.355	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (area(^.layer_0111.shape),?) and color blue and mask Full at (^.layer_0.pos.i,?)
  _0111: ^.layer_0111.shape at (?,?)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color blue at (?,?)

DL input  with Mi: L = 142.6 + 12701.0 = 12843.6
DL output with Mo: L = 100.6 + 8625.5 = 8726.1
DL input+output M: L = 243.2 + 21326.5 = 21569.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (area(^.layer_0111.shape),?) and color blue and mask Full at (^.layer_0.pos.i,?)
  _0111: ^.layer_0111.shape at (?,?)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.1 + 20.0 = 134.1
DL output with Mo: L = 100.6 + 8625.5 = 8726.1
DL input+output M: L = 214.8 + 8645.5 = 8860.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e1d2900e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e1d2900e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e1d2900e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e1d2900e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 8625.5 bits (8625.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-58] Checking task e2092e0c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 103155.2 = 103167.8
DL output with Mo: L = 12.6 + 118509.3 = 118521.9
DL input+output M: L = 25.2 + 221664.5 = 221689.7

# learning a model for train pairs
2.000	
1.838	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.776	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.736	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.719	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.693	OUT ADD ^.layer_00 = ^.layer_0
1.679	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.657	OUT ADD ^.layer_011 = ^.layer_01
1.644	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.625	OUT ADD ^.layer_0111 = ^.layer_011
1.614	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.603	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.594	IN  ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.581	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.562	OUT ADD ^.layer_0110 = ^.layer_0110
1.553	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.539	IN  ADD ^.layer_01100 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.531	OUT SPE ^.layer_011111 = ^.layer_01100
1.525	IN  SPE ^.layer_00.shape.mask = ...x|...x|...x|xxxx
1.519	OUT SPE ^.size = ^.size
1.516	OUT SPE ^.layer_0.pos = '(0, 0)
0.677	
0.677	IN  GEN ^.layer_00.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01100
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ...x|...x|...x|xxxx at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 232.6 + 86541.8 = 86774.4
DL output with Mo: L = 132.2 + 79880.8 = 80013.0
DL input+output M: L = 364.9 + 166422.6 = 166787.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0, 0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01100
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 0.0 = 212.7
DL output with Mo: L = 132.2 + 79880.8 = 80013.0
DL input+output M: L = 344.9 + 79880.8 = 80225.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e2092e0c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e2092e0c.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e2092e0c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e2092e0c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 79880.8 bits (79880.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-57] Checking task e21a174a.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 45460.2 = 45472.8
DL output with Mo: L = 12.6 + 45460.2 = 45472.8
DL input+output M: L = 25.2 + 90920.4 = 90945.6

# learning a model for train pairs
2.000	
1.701	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.376	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.199	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.829	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.637	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
0.533	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.398	OUT ADD ^.layer_0111 = ^.layer_0111.shape at (?,?)
0.384	OUT SPE ^.size = ^.size
0.377	OUT SPE ^.layer_011.pos = '(1, 3)
0.374	OUT SPE ^.layer_0111.pos.j = ^.layer_0111.pos.j
0.370	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.366	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j
0.363	IN  SPE ^.layer_0.shape.color = red
0.359	OUT SPE ^.layer_01.pos.i = ^.layer_0111.pos.j
0.356	OUT SPE ^.layer_0111.pos.i = middle(^.layer_01)
0.353	OUT SPE ^.layer_0.pos.i = right(^.layer_0) + ^.layer_01.pos.j - ^.layer_0.pos.j
0.352	OUT SPE ^.color = black
0.350	IN  SPE ^.color = black
0.118	
0.118	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (right(^.layer_0) + ^.layer_01.pos.j - ^.layer_0.pos.j,^.layer_0.pos.j)
  _01: ^.layer_01.shape at (^.layer_0111.pos.j,^.layer_01.pos.j)
  _011: ^.layer_011.shape at '(1, 3)
  _0111: ^.layer_0111.shape at (middle(^.layer_01),^.layer_0111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.6 + 10600.6 = 10718.2
DL output with Mo: L = 159.7 + 5048.6 = 5208.3
DL input+output M: L = 277.3 + 15649.2 = 15926.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (right(^.layer_0) + ^.layer_01.pos.j - ^.layer_0.pos.j,^.layer_0.pos.j)
  _01: ^.layer_01.shape at (^.layer_0111.pos.j,^.layer_01.pos.j)
  _011: ^.layer_011.shape at '(1, 3)
  _0111: ^.layer_0111.shape at (middle(^.layer_01),^.layer_0111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.5 + 40.0 = 157.5
DL output with Mo: L = 159.7 + 5048.6 = 5208.3
DL input+output M: L = 277.1 + 5088.6 = 5365.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e21a174a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e21a174a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e21a174a.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e21a174a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e21a174a.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.0 sec (6.0 sec/task)
bits-train-error = 5048.6 bits (5048.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-56] Checking task e345f17b.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26336.4 = 26349.0
DL output with Mo: L = 12.6 + 5691.5 = 5704.2
DL input+output M: L = 25.2 + 32027.9 = 32053.1

# learning a model for train pairs
2.000	
1.550	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.836	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.734	OUT SPE ^.size = ^.layer_0.shape.size
0.695	OUT SPE ^.layer_0.shape.color = yellow
0.411	
0.410	IN  DEL ^.layer_01
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 7493.0 = 7557.3
DL output with Mo: L = 46.1 + 2284.6 = 2330.7
DL input+output M: L = 110.3 + 9777.7 = 9888.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 46.1 + 2284.6 = 2330.7
DL input+output M: L = 84.9 + 2284.6 = 2369.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e345f17b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e345f17b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e345f17b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e345f17b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e345f17b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e345f17b.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 53.4 sec (53.4 sec/task)
bits-train-error = 2284.6 bits (2284.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-55] Checking task e4075551.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6636.3 = 6648.9
DL output with Mo: L = 12.6 + 59667.2 = 59679.8
DL input+output M: L = 25.2 + 66303.5 = 66328.7

# learning a model for train pairs
2.000	
1.777	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.608	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.439	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.150	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.059	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.967	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.874	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.780	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.682	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.657	IN  SPE ^.layer_0111.shape.color = pink
0.646	OUT SPE ^.size = ^.size
0.635	IN  SPE ^.color = black
0.153	
0.151	IN  DEL ^.layer_0111
0.148	IN  DEL ^.layer_01111
0.146	IN  DEL ^.layer_011
0.143	IN  DEL ^.layer_01
0.141	IN  DEL ^.layer_0
0.141	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color pink at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 95.9 + 3200.1 = 3296.0
DL output with Mo: L = 135.6 + 8160.4 = 8296.0
DL input+output M: L = 231.5 + 11360.5 = 11592.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 135.6 + 8160.4 = 8296.0
DL input+output M: L = 148.3 + 8160.4 = 8308.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e4075551.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e4075551.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e4075551.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e4075551.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.1 sec (60.1 sec/task)
bits-train-error = 8160.4 bits (8160.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-54] Checking task e41c6fd3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 68541.0 = 68553.6
DL output with Mo: L = 12.6 + 68541.0 = 68553.6
DL input+output M: L = 25.2 + 137081.9 = 137107.2

# learning a model for train pairs
2.000	
1.774	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.523	OUT ADD ^.layer_0 = ^.layer_0
1.296	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.069	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.693	OUT ADD ^.layer_010 = ^.layer_01.shape at (?,?)
0.648	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.637	OUT SPE ^.size = ^.size
0.632	OUT SPE ^.layer_010.pos = corner(^.layer_0.pos, ^.layer_01.pos)
0.629	IN  SPE ^.layer_0.shape.color = cyan
0.402	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.271	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.231	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	OUT SPE ^.layer_01.shape = coloring(^.layer_011.shape, ^.layer_0111.shape.color)
0.203	OUT SPE ^.layer_0111.shape = coloring(^.layer_0111.shape, ^.layer_011.shape.color)
0.199	OUT SPE ^.layer_011.shape.mask = ^.layer_0111.shape.mask
0.196	OUT SPE ^.layer_011.shape.size.i = average(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i)
0.194	OUT SPE ^.layer_01.pos.i = ^.layer_0.pos.i
0.192	OUT SPE ^.layer_011.pos.i = bottom(^.layer_0) - 3
0.189	OUT SPE ^.layer_0111.pos.j = max(^.layer_011.pos.j, ^.layer_01111.pos.j)
0.188	IN  SPE ^.color = black
0.187	OUT SPE ^.color = black
0.044	
0.044	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos)
  _01: coloring(^.layer_011.shape, ^.layer_0111.shape.color) at (^.layer_0.pos.i,?)
  _011: a rectangle with size (average(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i),?) and color ? and mask ^.layer_0111.shape.mask at (bottom(^.layer_0) - 3,?)
  _0111: coloring(^.layer_0111.shape, ^.layer_011.shape.color) at (?,max(^.layer_011.pos.j, ^.layer_01111.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.3 + 9870.6 = 10012.9
DL output with Mo: L = 266.8 + 2556.4 = 2823.2
DL input+output M: L = 409.1 + 12427.0 = 12836.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos)
  _01: coloring(^.layer_011.shape, ^.layer_0111.shape.color) at (^.layer_0.pos.i,?)
  _011: a rectangle with size (average(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i),?) and color ? and mask ^.layer_0111.shape.mask at (bottom(^.layer_0) - 3,?)
  _0111: coloring(^.layer_0111.shape, ^.layer_011.shape.color) at (?,max(^.layer_011.pos.j, ^.layer_01111.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.2 + 51.7 = 193.9
DL output with Mo: L = 266.8 + 2556.4 = 2823.2
DL input+output M: L = 409.0 + 2608.1 = 3017.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e41c6fd3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e41c6fd3.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e41c6fd3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e41c6fd3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.9 sec (16.9 sec/task)
bits-train-error = 2556.4 bits (2556.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-53] Checking task e57337a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3330.1 = 3342.7
DL output with Mo: L = 12.6 + 2772.9 = 2785.5
DL input+output M: L = 25.2 + 6103.0 = 6128.2

# learning a model for train pairs
2.000	
1.571	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.318	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	OUT SPE ^.size = '(3, 3)
1.074	OUT SPE ^.layer_0.shape.size = '(3, 3)
0.990	OUT SPE ^.layer_0.pos = '(0, 0)
0.933	OUT SPE ^.layer_0.shape.color = majorityColor(^.grid)
0.907	OUT SPE ^.color = black
0.172	
0.164	IN  DEL ^.layer_0

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color majorityColor(^.grid) and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 2456.3 = 2495.1
DL output with Mo: L = 69.0 + 377.5 = 446.6
DL input+output M: L = 107.9 + 2833.8 = 2941.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size '(3, 3) and color black and layers
  _0: a rectangle with size '(3, 3) and color majorityColor(^.grid) and mask ? at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 69.0 + 377.5 = 446.6
DL input+output M: L = 81.6 + 377.5 = 459.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e57337a4.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e57337a4.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e57337a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e57337a4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 377.5 bits (377.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-52] Checking task e5790162.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6655.6 = 6668.2
DL output with Mo: L = 12.6 + 20228.1 = 20240.7
DL input+output M: L = 25.2 + 26883.7 = 26908.9

# learning a model for train pairs
2.000	
1.385	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.229	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.069	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.977	OUT ADD ^.layer_01 = ^.layer_01
0.932	OUT SPE ^.size = ^.size
0.914	IN  SPE ^.color = black
0.900	OUT SPE ^.layer_0.shape.color = green
0.888	OUT SPE ^.layer_0.pos.j = '0
0.882	OUT SPE ^.color = black
0.876	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.863	OUT SPE ^.layer_0.pos = projI(^.layer_0.pos)
0.852	OUT SPE ^.layer_011.pos.j = span(^.layer_0.pos.j, ^.layer_01.pos.j) - 2
0.844	OUT SPE ^.layer_011.shape.size.j = 1
0.836	OUT SPE ^.layer_011.shape.mask = Full
0.177	
0.177	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at projI(^.layer_0.pos)
  _01: ^.layer_01
  _011: a rectangle with size (?,1) and color ? and mask Full at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 4394.5 = 4440.2
DL output with Mo: L = 112.5 + 3332.4 = 3444.9
DL input+output M: L = 158.2 + 7726.9 = 7885.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at projI(^.layer_0.pos)
  _01: ^.layer_01
  _011: a rectangle with size (?,1) and color ? and mask Full at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 112.5 + 3332.4 = 3444.9
DL input+output M: L = 158.1 + 3332.4 = 3490.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e5790162.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e5790162.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e5790162.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e5790162.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e5790162.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e5790162.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 3332.4 bits (3332.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-51] Checking task e5c44e8f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9090.3 = 9102.9
DL output with Mo: L = 12.6 + 56090.1 = 56102.8
DL input+output M: L = 25.2 + 65180.4 = 65205.7

# learning a model for train pairs
2.000	
1.274	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.135	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.124	OUT SPE ^.size = ^.size
1.115	IN  SPE ^.color = black
1.112	OUT SPE ^.layer_01.pos.i = '0
1.109	OUT SPE ^.layer_0.shape.color = green
1.107	OUT SPE ^.layer_01.shape.color = ^.layer_0.shape.color
1.105	OUT SPE ^.color = black
0.184	
0.184	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ('0,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 8383.7 = 8413.4
DL output with Mo: L = 78.8 + 10079.2 = 10158.0
DL input+output M: L = 108.4 + 18462.9 = 18571.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ('0,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 78.8 + 10079.2 = 10158.0
DL input+output M: L = 108.3 + 10079.2 = 10187.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e5c44e8f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e5c44e8f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e5c44e8f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e5c44e8f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 10079.2 bits (10079.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-50] Checking task e619ca6e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19925.9 = 19938.5
DL output with Mo: L = 12.6 + 135313.4 = 135326.0
DL input+output M: L = 25.2 + 155239.3 = 155264.5

# learning a model for train pairs
2.000	
1.104	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.613	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.605	IN  SPE ^.layer_0.shape.color = green
0.599	OUT SPE ^.size = ^.size
0.594	IN  SPE ^.layer_0.shape.mask = Full
0.590	IN  SPE ^.color = black
0.588	OUT SPE ^.layer_0.shape.size.j = ^.size.j
0.586	OUT SPE ^.layer_0.pos.j = '0
0.585	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.584	OUT SPE ^.color = black
0.095	
0.095	IN  GEN ^.layer_0.shape.color = ?
0.095	IN  GEN ^.layer_0.shape.mask = ?
0.095	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j) and color ^.layer_0.shape.color and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 9760.3 = 9803.6
DL output with Mo: L = 52.0 + 12486.7 = 12538.7
DL input+output M: L = 95.3 + 22247.0 = 22342.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j) and color ^.layer_0.shape.color and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 52.0 + 12486.7 = 12538.7
DL input+output M: L = 90.9 + 12486.7 = 12577.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e619ca6e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e619ca6e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e619ca6e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e619ca6e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.0 sec (15.0 sec/task)
bits-train-error = 12486.7 bits (12486.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-49] Checking task e633a9e5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6894.3 = 6906.9
DL output with Mo: L = 12.6 + 17527.3 = 17539.9
DL input+output M: L = 25.2 + 24421.6 = 24446.9

# learning a model for train pairs
2.000	
1.729	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.518	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.364	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.228	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.094	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.004	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.912	IN  ADD ^.layer_010 = a point with color ? at (?,?)
0.855	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.808	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.781	OUT SPE ^.size = ^.size + (2, 2)
0.765	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.751	IN  SPE ^.layer_0.shape.mask = Full
0.732	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size + (1, 1)
0.709	OUT SPE ^.layer_011.shape = scaleTo(^.layer_011.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_011))
0.691	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.664	OUT SPE ^.layer_0111.shape = scaleTo(^.layer_0111.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_0111))
0.649	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos + (1, 1)
0.634	IN  SPE ^.layer_01.shape.mask = Full
0.625	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.616	OUT SPE ^.layer_01.shape.color = ^.layer_010.shape.color
0.609	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j + 1
0.601	OUT SPE ^.layer_01111.pos.i = middle(^.layer_01)
0.596	OUT SPE ^.layer_0.shape.mask = Full
0.590	OUT SPE ^.layer_01.shape.mask = Full
0.583	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i * '2
0.576	OUT SPE ^.layer_01.pos.j = ^.layer_010.pos.j + 1
0.571	OUT SPE ^.layer_01111.shape.mask = Full
0.565	OUT SPE ^.layer_01.pos.i = ^.layer_010.pos.i * '2
0.559	OUT SPE ^.layer_01111.shape.size.i = ^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_0.pos.i
0.104	
0.103	IN  GEN ^.layer_01.shape.mask = ?
0.103	IN  GEN ^.layer_0.shape.mask = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size + (2, 2) and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size + (1, 1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_010.shape.color and mask Full at (^.layer_010.pos.i * '2,^.layer_010.pos.j + 1)
  _011: scaleTo(^.layer_011.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_011)) at (^.layer_011.pos.i * '2,^.layer_011.pos.j + 1)
  _0111: scaleTo(^.layer_0111.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_0111)) at ^.layer_0111.pos + (1, 1)
  _01111: a rectangle with size (^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_0.pos.i,?) and color ? and mask Full at (middle(^.layer_01),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 113.0 + 3210.9 = 3323.9
DL output with Mo: L = 401.4 + 968.3 = 1369.7
DL input+output M: L = 514.4 + 4179.1 = 4693.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size + (2, 2) and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size + (1, 1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_010.shape.color and mask Full at (^.layer_010.pos.i * '2,^.layer_010.pos.j + 1)
  _011: scaleTo(^.layer_011.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_011)) at (^.layer_011.pos.i * '2,^.layer_011.pos.j + 1)
  _0111: scaleTo(^.layer_0111.shape, ^.layer_0.shape.size + translationOnto(^.layer_0, ^.layer_0111)) at ^.layer_0111.pos + (1, 1)
  _01111: a rectangle with size (^.layer_01.shape.size.i + ^.layer_011.pos.i - ^.layer_0.pos.i,?) and color ? and mask Full at (middle(^.layer_01),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 111.0 + 63.4 = 174.4
DL output with Mo: L = 401.4 + 968.3 = 1369.7
DL input+output M: L = 512.4 + 1031.7 = 1544.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e633a9e5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e633a9e5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e633a9e5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Middle: no middle, even height

TEST e633a9e5.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 57.7 sec (57.7 sec/task)
bits-train-error = 968.3 bits (968.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-48] Checking task e66aafb8.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 869865.6 = 869878.2
DL output with Mo: L = 12.6 + 39039.1 = 39051.7
DL input+output M: L = 25.2 + 908904.7 = 908929.9

# learning a model for train pairs
2.000	
1.834	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.747	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.668	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.588	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.526	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.478	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.441	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.576	
0.576	IN  DEL ^.layer_01
0.576	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 752334.6 = 752398.8
DL output with Mo: L = 138.9 + 22352.9 = 22491.8
DL input+output M: L = 203.1 + 774687.5 = 774890.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 138.9 + 22352.9 = 22491.8
DL input+output M: L = 151.5 + 22352.9 = 22504.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e66aafb8.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e66aafb8.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e66aafb8.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e66aafb8.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e66aafb8.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e66aafb8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 22352.9 bits (22352.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-47] Checking task e681b708.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 122028.3 = 122040.9
DL output with Mo: L = 12.6 + 122028.3 = 122040.9
DL input+output M: L = 25.2 + 244056.6 = 244081.8

# learning a model for train pairs
2.000	
1.442	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	OUT ADD ^.layer_0 = ^.layer_0
0.788	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.771	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.745	OUT ADD ^.layer_010 = ^.layer_01
0.728	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.712	OUT ADD ^.layer_011 = ^.layer_011
0.705	OUT SPE ^.size = ^.size
0.701	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.696	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.691	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.686	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.681	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.676	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.669	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.664	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.659	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.656	OUT SPE ^.layer_0111111.pos = ^.layer_0111111.pos
0.652	OUT SPE ^.layer_01111.pos = ^.layer_01111.pos
0.649	OUT SPE ^.layer_0111.pos = ^.layer_0111.pos
0.646	OUT SPE ^.layer_011111.pos = ^.layer_01111111.pos
0.642	OUT SPE ^.layer_01.pos = ^.layer_011111.pos
0.640	OUT SPE ^.layer_01.shape.size = ^.layer_011111.shape.size
0.638	IN  SPE ^.layer_011.shape.color = red
0.637	IN  SPE ^.layer_0.shape.color = blue
0.636	IN  SPE ^.layer_01111.shape.color = blue
0.634	IN  SPE ^.layer_0111111.shape.color = blue
0.260	
0.260	IN  GEN ^.layer_0111111.shape.color = ?
0.260	IN  GEN ^.layer_01111.shape.color = ?
0.260	IN  GEN ^.layer_0.shape.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_011111.shape.size and color ? and mask ? at ^.layer_011111.pos
  _011: ^.layer_011
  _0111: a point with color ? at ^.layer_0111.pos
  _01111: a point with color ? at ^.layer_01111.pos
  _011111: a point with color ? at ^.layer_01111111.pos
  _0111111: a point with color ? at ^.layer_0111111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color blue at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a point with color blue at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 188.8 + 45629.7 = 45818.5
DL output with Mo: L = 139.2 + 31447.9 = 31587.1
DL input+output M: L = 328.0 + 77077.6 = 77405.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_011111.shape.size and color ? and mask ? at ^.layer_011111.pos
  _011: ^.layer_011
  _0111: a point with color ? at ^.layer_0111.pos
  _01111: a point with color ? at ^.layer_01111.pos
  _011111: a point with color ? at ^.layer_01111111.pos
  _0111111: a point with color ? at ^.layer_0111111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 178.9 + 0.0 = 178.9
DL output with Mo: L = 139.2 + 31447.9 = 31587.1
DL input+output M: L = 318.0 + 31447.9 = 31765.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e681b708.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e681b708.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e681b708.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e681b708.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 31447.9 bits (31447.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-46] Checking task e69241bd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 36178.8 = 36191.4
DL output with Mo: L = 12.6 + 46309.1 = 46321.7
DL input+output M: L = 25.2 + 82487.9 = 82513.1

# learning a model for train pairs
2.000	
1.245	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	OUT ADD ^.layer_0 = ^.layer_0
0.589	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.432	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.397	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.370	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.344	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.327	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.314	OUT SPE ^.layer_011.shape = scaleTo(^.layer_01.shape, projJ(^.layer_01.shape.size) + (2, 0))
0.302	OUT SPE ^.size = ^.size
0.297	IN  SPE ^.layer_0.shape.color = grey
0.293	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i + 2
0.289	OUT SPE ^.layer_00.pos.i = '0
0.286	OUT SPE ^.layer_00.shape.color = ^.layer_011.shape.color
0.283	OUT SPE ^.layer_011.pos.j = center(^.layer_01) - ^.layer_011.pos.j - ^.layer_0.pos.j
0.281	IN  SPE ^.color = black
0.280	OUT SPE ^.color = black
0.096	
0.096	IN  GEN ^.layer_0.shape.color = ?
0.096	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ('0,?)
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.shape.size.i + 2,?) and color ? and mask ? at (?,?)
  _011: scaleTo(^.layer_01.shape, projJ(^.layer_01.shape.size) + (2, 0)) at (?,center(^.layer_01) - ^.layer_011.pos.j - ^.layer_0.pos.j)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 83.4 + 6687.3 = 6770.8
DL output with Mo: L = 219.3 + 4078.3 = 4297.6
DL input+output M: L = 302.8 + 10765.7 = 11068.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ('0,?)
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.shape.size.i + 2,?) and color ? and mask ? at (?,?)
  _011: scaleTo(^.layer_01.shape, projJ(^.layer_01.shape.size) + (2, 0)) at (?,center(^.layer_01) - ^.layer_011.pos.j - ^.layer_0.pos.j)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 80.0 + 20.0 = 100.0
DL output with Mo: L = 219.3 + 4078.3 = 4297.6
DL input+output M: L = 299.3 + 4098.3 = 4397.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e69241bd.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e69241bd.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e69241bd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e69241bd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.6 sec (18.6 sec/task)
bits-train-error = 4078.3 bits (4078.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-45] Checking task e6de6e8f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 16733.5 = 16746.1
DL output with Mo: L = 12.6 + 17108.8 = 17121.4
DL input+output M: L = 25.2 + 33842.3 = 33867.5

# learning a model for train pairs
2.000	
1.280	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.065	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.913	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.638	OUT ADD ^.layer_01 = a point with color ? at (?,?)
0.613	OUT SPE ^.layer_01.pos = '(0, 3)
0.592	IN  SPE ^.color = red
0.572	IN  SPE ^.layer_01.shape.mask = xx|.x
0.554	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.540	IN  SPE ^.layer_0.shape.color = black
0.527	IN  SPE ^.layer_01.shape.color = black
0.514	IN  SPE ^.layer_011.shape.color = black
0.501	IN  SPE ^.layer_0111.shape.color = black
0.487	IN  SPE ^.layer_01111.shape.color = black
0.474	OUT SPE ^.layer_0.shape.color = red
0.461	OUT SPE ^.layer_01.shape.color = green
0.449	OUT SPE ^.layer_0.pos.i = 1
0.441	IN  SPE ^.layer_011.shape.mask = Full
0.433	IN  SPE ^.layer_0111.shape.mask = Full
0.428	OUT SPE ^.color = black
0.424	OUT SPE ^.layer_0.pos.j = min(^.layer_01.pos.j, ^.layer_0111.pos.j) / '2
0.167	
0.166	IN  DEL ^.layer_01111
0.163	IN  DEL ^.layer_0
0.163	IN  GEN ^.color = ?
0.163	IN  GEN ^.layer_0111.shape.color = ?
0.163	IN  GEN ^.layer_011.shape.color = ?
0.162	IN  GEN ^.layer_01.shape.color = ?
0.162	IN  GEN ^.layer_011.shape.mask = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (1,min(^.layer_01.pos.j, ^.layer_0111.pos.j) / '2)
  _01: a point with color green at '(0, 3)
WHERE (Mi)
a background with size (?,?) and color red and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color black and mask xx|.x at (?,?)
  _011: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _01111: a point with color black at (?,?)

DL input  with Mi: L = 161.3 + 4391.8 = 4553.0
DL output with Mo: L = 132.0 + 2474.6 = 2606.7
DL input+output M: L = 293.3 + 6866.4 = 7159.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (1,min(^.layer_01.pos.j, ^.layer_0111.pos.j) / '2)
  _01: a point with color green at '(0, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _01: a rectangle with size (?,?) and color ? and mask xx|.x at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 96.7 + 71.7 = 168.4
DL output with Mo: L = 132.0 + 2474.6 = 2606.7
DL input+output M: L = 228.7 + 2546.3 = 2775.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e6de6e8f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e6de6e8f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e6de6e8f.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e6de6e8f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e6de6e8f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 2474.6 bits (2474.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-44] Checking task e74e1818.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 33913.3 = 33925.9
DL output with Mo: L = 12.6 + 33913.3 = 33925.9
DL input+output M: L = 25.2 + 67826.5 = 67851.7

# learning a model for train pairs
2.000	
1.719	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.438	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.186	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.934	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	OUT ADD ^.layer_011 = ^.layer_01
0.523	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.477	OUT SPE ^.layer_0 = applySym(flipHeight, ^.layer_0)
0.459	OUT SPE ^.size = ^.size
0.450	OUT SPE ^.layer_0111.pos = projI(^.layer_011.pos) + (0, 3)
0.444	OUT SPE ^.layer_01.shape.size.j = min(^.layer_0.shape.size.i, ^.layer_011.shape.size.i) + 3
0.440	OUT SPE ^.layer_0111.shape.size.i = ^.layer_011.shape.size.i
0.435	OUT SPE ^.layer_0111.shape.color = ^.layer_011.shape.color
0.431	OUT SPE ^.layer_01.pos.j = center(^.layer_01) - 3
0.427	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i
0.423	OUT SPE ^.layer_01.pos.i = right(^.layer_0) + ^.layer_011.pos.j - ^.layer_0.pos.j
0.421	OUT SPE ^.color = black
0.419	IN  SPE ^.color = black
0.102	
0.102	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: applySym(flipHeight, ^.layer_0)
  _01: a rectangle with size (^.layer_01.shape.size.i,min(^.layer_0.shape.size.i, ^.layer_011.shape.size.i) + 3) and color ? and mask ? at (right(^.layer_0) + ^.layer_011.pos.j - ^.layer_0.pos.j,center(^.layer_01) - 3)
  _011: ^.layer_01
  _0111: a rectangle with size (^.layer_011.shape.size.i,?) and color ^.layer_011.shape.color and mask ? at projI(^.layer_011.pos) + (0, 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.4 + 10860.4 = 10949.8
DL output with Mo: L = 254.7 + 3015.5 = 3270.3
DL input+output M: L = 344.1 + 13875.9 = 14220.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: applySym(flipHeight, ^.layer_0)
  _01: a rectangle with size (^.layer_01.shape.size.i,min(^.layer_0.shape.size.i, ^.layer_011.shape.size.i) + 3) and color ? and mask ? at (right(^.layer_0) + ^.layer_011.pos.j - ^.layer_0.pos.j,center(^.layer_01) - 3)
  _011: ^.layer_01
  _0111: a rectangle with size (^.layer_011.shape.size.i,?) and color ^.layer_011.shape.color and mask ? at projI(^.layer_011.pos) + (0, 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 95.1 = 184.4
DL output with Mo: L = 254.7 + 3015.5 = 3270.3
DL input+output M: L = 344.0 + 3110.6 = 3454.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e74e1818.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e74e1818.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e74e1818.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e74e1818.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.9 sec (7.9 sec/task)
bits-train-error = 3015.5 bits (3015.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-43] Checking task e760a62e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 259825.9 = 259838.5
DL output with Mo: L = 12.6 + 358538.6 = 358551.2
DL input+output M: L = 25.2 + 618364.5 = 618389.7

# learning a model for train pairs
2.000	
1.094	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT ADD ^.layer_0 = ^.layer_0
0.283	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.140	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.120	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.118	OUT SPE ^.size = ^.size
0.117	IN  SPE ^.layer_0.shape.color = cyan
0.115	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.113	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.110	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.108	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.107	IN  SPE ^.layer_01.shape.color = red
0.106	IN  SPE ^.layer_0111.shape.color = green
0.106	IN  SPE ^.layer_011.shape.color = green
0.105	IN  SPE ^.layer_01111.shape.color = red
0.105	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.099	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.098	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.098	OUT SPE ^.layer_0110.pos.i = ^.layer_011.pos.i - ^.layer_011.pos.j - ^.layer_0.pos.j
0.097	OUT SPE ^.layer_01.pos.i = ^.layer_0111.pos.j - ^.layer_01.pos.i - ^.layer_0.pos.i
0.097	OUT SPE ^.layer_0111.pos.j = ^.layer_01111.pos.j - ^.layer_01.pos.i - ^.layer_0.pos.i
0.097	IN  SPE ^.color = black
0.096	OUT SPE ^.layer_01.shape.mask = Full
0.096	OUT SPE ^.layer_0110.shape.mask = Full
0.096	OUT SPE ^.layer_011.shape.mask = Full
0.096	OUT SPE ^.layer_0111.shape.mask = Full
0.095	OUT SPE ^.color = black
0.015	
0.015	IN  GEN ^.layer_01111.shape.color = ?
0.015	IN  GEN ^.layer_01.shape.color = ?
0.015	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_0111.pos.j - ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _0110: a rectangle with size (?,?) and color ? and mask Full at (^.layer_011.pos.i - ^.layer_011.pos.j - ^.layer_0.pos.j,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_01111.pos.j - ^.layer_01.pos.i - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a point with color red at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 118.5 + 20899.8 = 21018.3
DL output with Mo: L = 274.8 + 4934.3 = 5209.1
DL input+output M: L = 393.3 + 25834.1 = 26227.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (^.layer_0111.pos.j - ^.layer_01.pos.i - ^.layer_0.pos.i,?)
  _0110: a rectangle with size (?,?) and color ? and mask Full at (^.layer_011.pos.i - ^.layer_011.pos.j - ^.layer_0.pos.j,?)
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_01111.pos.j - ^.layer_01.pos.i - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 108.5 + 0.0 = 108.5
DL output with Mo: L = 274.8 + 4934.3 = 5209.1
DL input+output M: L = 383.3 + 4934.3 = 5317.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e760a62e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e760a62e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e760a62e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e760a62e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 33.9 sec (33.9 sec/task)
bits-train-error = 4934.3 bits (4934.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-42] Checking task e7639916.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4211.2 = 4223.8
DL output with Mo: L = 12.6 + 37250.4 = 37263.0
DL input+output M: L = 25.2 + 41461.6 = 41486.8

# learning a model for train pairs
2.000	
1.488	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.107	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.959	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.805	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.774	OUT ADD ^.layer_011 = ^.layer_011
0.743	OUT ADD ^.layer_00 = ^.layer_0
0.711	OUT ADD ^.layer_010 = ^.layer_01
0.672	IN  SPE ^.layer_0.shape.color = cyan
0.633	IN  SPE ^.layer_01.shape.color = cyan
0.593	IN  SPE ^.layer_011.shape.color = cyan
0.566	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.536	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j
0.519	IN  SPE ^.color = black
0.502	OUT SPE ^.size = ^.size
0.495	OUT SPE ^.layer_0111.shape.size.i = ^.size.i - 2
0.486	OUT SPE ^.layer_0.shape.size = tiling('(1, 3), 1, 2)
0.481	OUT SPE ^.layer_0.shape.color = blue
0.477	OUT SPE ^.layer_01.shape.color = blue
0.472	OUT SPE ^.layer_0111.shape.color = blue
0.468	OUT SPE ^.layer_0111.shape.mask = Border
0.463	OUT SPE ^.layer_0111.pos.i = 1
0.460	OUT SPE ^.layer_0111.pos.j = span(^.layer_01.pos.i, ^.layer_011.pos.i) / '2
0.457	OUT SPE ^.layer_0.shape.mask = Full
0.455	OUT SPE ^.layer_01.shape.size.j = 1
0.452	OUT SPE ^.layer_01.shape.mask = Full
0.450	OUT SPE ^.color = black
0.051	
0.050	IN  GEN ^.layer_011.shape.color = ?
0.049	IN  GEN ^.layer_01.shape.color = ?
0.048	IN  GEN ^.layer_0.shape.color = ?
0.048	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size tiling('(1, 3), 1, 2) and color blue and mask Full at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,1) and color blue and mask Full at (?,^.layer_01.pos.j)
  _011: ^.layer_011
  _0111: a rectangle with size (^.size.i - 2,?) and color blue and mask Border at (1,span(^.layer_01.pos.i, ^.layer_011.pos.i) / '2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)
  _011: a point with color cyan at (?,?)

DL input  with Mi: L = 71.5 + 1686.7 = 1758.2
DL output with Mo: L = 215.4 + 1037.7 = 1253.0
DL input+output M: L = 286.9 + 2724.4 = 3011.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size tiling('(1, 3), 1, 2) and color blue and mask Full at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,1) and color blue and mask Full at (?,^.layer_01.pos.j)
  _011: ^.layer_011
  _0111: a rectangle with size (^.size.i - 2,?) and color blue and mask Border at (1,span(^.layer_01.pos.i, ^.layer_011.pos.i) / '2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 61.4 + 0.0 = 61.4
DL output with Mo: L = 215.4 + 1037.7 = 1253.0
DL input+output M: L = 276.8 + 1037.7 = 1314.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7639916.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7639916.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7639916.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e7639916.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.1 sec (14.1 sec/task)
bits-train-error = 1037.7 bits (1037.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-41] Checking task e78887d1.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 55980.4 = 55993.0
DL output with Mo: L = 12.6 + 27644.3 = 27656.9
DL input+output M: L = 25.2 + 83624.7 = 83649.9

# learning a model for train pairs
2.000	
1.761	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.559	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.391	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.268	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.144	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.956	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.890	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	OUT SPE ^.size = projJ(^.size) + (3, 0)
0.753	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.735	OUT SPE ^.layer_0.shape.size = ^.layer_01.shape.size
0.722	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.610	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.586	IN  ADD ^.layer_010 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT SPE ^.layer_011.shape.size.j = 3
0.561	OUT SPE ^.layer_01.shape = coloring(^.layer_0111.shape, ^.layer_011.shape.color)
0.213	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size projJ(^.size) + (3, 0) and color ? and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _01: coloring(^.layer_0111.shape, ^.layer_011.shape.color) at (?,?)
  _011: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 19506.1 = 19718.8
DL output with Mo: L = 163.8 + 5613.0 = 5776.8
DL input+output M: L = 376.5 + 25119.0 = 25495.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size projJ(^.size) + (3, 0) and color ? and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at (?,?)
  _01: coloring(^.layer_0111.shape, ^.layer_011.shape.color) at (?,?)
  _011: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 40.0 = 252.7
DL output with Mo: L = 163.8 + 5613.0 = 5776.8
DL input+output M: L = 376.5 + 5653.0 = 6029.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e78887d1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e78887d1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e78887d1.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e78887d1.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e78887d1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 5613.0 bits (5613.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-40] Checking task e7a25a18.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 29692.6 = 29705.2
DL output with Mo: L = 12.6 + 30262.9 = 30275.5
DL input+output M: L = 25.2 + 59955.4 = 59980.7

# learning a model for train pairs
2.000	
1.307	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.085	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.863	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.640	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.414	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.370	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.326	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.282	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.237	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.223	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape * '2
0.208	OUT SPE ^.layer_01.shape = ^.layer_01.shape * '2
0.194	OUT SPE ^.layer_011.shape = ^.layer_011.shape * '2
0.181	OUT SPE ^.layer_0.shape = ^.layer_01111.shape * '2
0.169	OUT SPE ^.size = ^.layer_0.shape.size
0.162	OUT SPE ^.layer_01.pos = '(1, 1)
0.155	OUT SPE ^.layer_0111.pos = projI(^.layer_0111.pos) + (0, 1)
0.150	OUT SPE ^.color = red
0.146	IN  SPE ^.layer_0.shape.color = red
0.142	IN  SPE ^.layer_0.shape.mask = Border
0.139	IN  SPE ^.layer_01.shape.color = green
0.135	IN  SPE ^.layer_01111.shape.color = cyan
0.132	OUT SPE ^.layer_011.pos.i = 1
0.129	OUT SPE ^.layer_011.pos.j = ^.layer_0111.pos.i
0.126	OUT SPE ^.layer_0.pos.i = ^.layer_0111.pos.i
0.123	OUT SPE ^.layer_0.pos.j = ^.layer_0111.pos.i
0.121	IN  SPE ^.layer_01.shape.mask = Full
0.118	IN  SPE ^.layer_011.shape.mask = Full
0.116	IN  SPE ^.layer_0111.shape.mask = Full
0.114	IN  SPE ^.layer_01111.shape.mask = Full
0.112	IN  SPE ^.color = black
0.013	
0.013	IN  GEN ^.layer_01111.shape.color = ?
0.013	IN  GEN ^.layer_01.shape.color = ?
0.013	IN  GEN ^.layer_0.shape.mask = ?
0.013	IN  GEN ^.layer_0.shape.color = ?
0.013	IN  GEN ^.layer_01111.shape.mask = ?
0.013	IN  GEN ^.layer_0111.shape.mask = ?
0.013	IN  GEN ^.layer_011.shape.mask = ?
0.012	IN  GEN ^.layer_01.shape.mask = ?
0.012	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color red and layers
  _0: ^.layer_01111.shape * '2 at (^.layer_0111.pos.i,^.layer_0111.pos.i)
  _01: ^.layer_01.shape * '2 at '(1, 1)
  _011: ^.layer_011.shape * '2 at (1,^.layer_0111.pos.i)
  _0111: ^.layer_0111.shape * '2 at projI(^.layer_0111.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 156.3 + 2949.7 = 3106.0
DL output with Mo: L = 236.3 + 0.0 = 236.3
DL input+output M: L = 392.6 + 2949.7 = 3342.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color red and layers
  _0: ^.layer_01111.shape * '2 at (^.layer_0111.pos.i,^.layer_0111.pos.i)
  _01: ^.layer_01.shape * '2 at '(1, 1)
  _011: ^.layer_011.shape * '2 at (1,^.layer_0111.pos.i)
  _0111: ^.layer_0111.shape * '2 at projI(^.layer_0111.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 0.0 = 138.9
DL output with Mo: L = 236.3 + 0.0 = 236.3
DL input+output M: L = 375.2 + 0.0 = 375.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e7a25a18.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e7a25a18.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e7a25a18.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.7 sec (20.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-39] Checking task e7b06bea.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 48382.9 = 48395.5
DL output with Mo: L = 12.6 + 21886.5 = 21899.1
DL input+output M: L = 25.2 + 70269.4 = 70294.6

# learning a model for train pairs
2.000	
1.677	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.353	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.120	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.912	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.759	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.570	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.528	OUT SPE ^.size = ^.size
0.505	OUT SPE ^.layer_011.pos = ^.layer_0.pos - (0, 1)
0.492	OUT SPE ^.layer_01.shape.color = ^.layer_01.shape.color
0.480	OUT SPE ^.layer_011.shape.color = ^.layer_0.shape.color
0.468	OUT SPE ^.layer_0.shape.color = ^.layer_011.shape.color
0.457	OUT SPE ^.layer_01.pos.j = ^.layer_01.pos.j - 2
0.449	OUT SPE ^.layer_0.shape.size.j = 1
0.438	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.j - 3
0.430	OUT SPE ^.layer_0.shape.mask = Full
0.422	OUT SPE ^.layer_01.shape.size.j = 1
0.415	OUT SPE ^.layer_01.shape.mask = Full
0.407	OUT SPE ^.layer_011.shape.size.j = 1
0.400	OUT SPE ^.layer_011.shape.mask = Full
0.390	OUT SPE ^.layer_0.pos.j = ^.layer_011.pos.j / '2
0.246	
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at (?,^.layer_011.pos.j / '2)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.j - 3,^.layer_01.pos.j - 2)
  _011: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos - (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 6944.1 = 7033.4
DL output with Mo: L = 194.2 + 5161.0 = 5355.2
DL input+output M: L = 283.5 + 12105.1 = 12388.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at (?,^.layer_011.pos.j / '2)
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.j - 3,^.layer_01.pos.j - 2)
  _011: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos - (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 194.2 + 5161.0 = 5355.2
DL input+output M: L = 283.5 + 5161.0 = 5444.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7b06bea.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7b06bea.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7b06bea.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7b06bea.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e7b06bea.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e7b06bea.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 55.1 sec (55.1 sec/task)
bits-train-error = 5161.0 bits (5161.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-38] Checking task e7dd8335.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22099.9 = 22112.5
DL output with Mo: L = 12.6 + 22099.9 = 22112.5
DL input+output M: L = 25.2 + 44199.8 = 44225.0

# learning a model for train pairs
2.000	
1.113	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.703	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.285	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.260	OUT SPE ^.size = ^.size
0.245	OUT SPE ^.layer_0.pos = ^.layer_0.pos
0.235	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.j
0.225	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.j
0.216	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i / '2
0.208	OUT SPE ^.layer_01.shape.size.i = ^.layer_0.shape.size.i / '2
0.201	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.193	IN  SPE ^.layer_0.shape.color = blue
0.186	OUT SPE ^.layer_01.shape.color = red
0.179	OUT SPE ^.layer_01.pos.j = 1
0.175	IN  SPE ^.color = black
0.172	OUT SPE ^.color = black
0.072	
0.071	IN  GEN ^.layer_0.shape.color = ?
0.071	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i / '2,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i / '2,^.layer_0.shape.size.j) and color red and mask ? at (?,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 2224.5 = 2266.7
DL output with Mo: L = 126.7 + 1413.6 = 1540.3
DL input+output M: L = 168.9 + 3638.1 = 3807.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i / '2,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i / '2,^.layer_0.shape.size.j) and color red and mask ? at (?,1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 126.7 + 1413.6 = 1540.3
DL input+output M: L = 165.5 + 1413.6 = 1579.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e7dd8335.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e7dd8335.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e7dd8335.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e7dd8335.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 1413.6 bits (1413.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-37] Checking task e872b94a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39816.3 = 39828.9
DL output with Mo: L = 12.6 + 502.2 = 514.8
DL input+output M: L = 25.2 + 40318.5 = 40343.7

# learning a model for train pairs
2.000	
1.613	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.163	OUT SPE ^.size.i = ^.layer_0.shape.size.j
0.823	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	OUT SPE ^.size.j = 1
0.376	OUT SPE ^.color = black
0.054	
0.053	IN  DEL ^.layer_01

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j,1) and color black and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 12901.9 = 12966.1
DL output with Mo: L = 26.1 + 0.0 = 26.1
DL input+output M: L = 90.3 + 12901.9 = 12992.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j,1) and color black and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 40.0 = 78.8
DL output with Mo: L = 26.1 + 0.0 = 26.1
DL input+output M: L = 65.0 + 40.0 = 105.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e872b94a.json/1: 1 2nd (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e872b94a.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e872b94a.json/3: 1 2nd (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e872b94a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST e872b94a.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.75
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-36] Checking task e88171ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 146478.7 = 146491.3
DL output with Mo: L = 12.6 + 146478.7 = 146491.3
DL input+output M: L = 25.2 + 292957.4 = 292982.6

# learning a model for train pairs
2.000	
1.164	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.325	OUT ADD ^.layer_0 = ^.layer_0
0.268	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.250	OUT ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.245	OUT SPE ^.size = ^.size
0.244	OUT SPE ^.layer_00.shape.mask = Full
0.243	OUT SPE ^.layer_01.shape.size.i = 2
0.243	IN  SPE ^.color = black
0.242	OUT SPE ^.color = black
0.079	
0.079	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 39.0 + 23915.6 = 23954.6
DL output with Mo: L = 69.7 + 11467.1 = 11536.8
DL input+output M: L = 108.7 + 35382.7 = 35491.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 69.7 + 11467.1 = 11536.8
DL input+output M: L = 108.5 + 11467.1 = 11575.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e88171ec.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e88171ec.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e88171ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e88171ec.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.4 sec (6.4 sec/task)
bits-train-error = 11467.1 bits (11467.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-35] Checking task e95e3d8e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 375976.7 = 375989.3
DL output with Mo: L = 12.6 + 351899.6 = 351912.3
DL input+output M: L = 25.2 + 727876.3 = 727901.5

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(black, ^.size, ^.grid)
0.902	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.852	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.835	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.835	IN  SPE ^.layer_0.shape.color = black
0.833	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  SPE ^.layer_01.shape.color = black
0.822	IN  SPE ^.layer_011.shape.color = black
0.816	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.803	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.802	IN  SPE ^.layer_0110.shape.mask = Full
0.801	IN  SPE ^.layer_00.shape.color = black
0.801	IN  SPE ^.layer_0.shape.mask = Full
0.801	IN  SPE ^.layer_01.shape.mask = Full
0.801	IN  SPE ^.layer_011.shape.mask = Full
0.800	IN  SPE ^.layer_0111.shape.mask = Full
0.800	IN  SPE ^.layer_011111.shape.mask = Full
0.001	
0.001	IN  DEL ^.layer_011
0.001	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0
0.000	IN  DEL ^.layer_00
0.000	IN  DEL ^.layer_011111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_0110
0.000	IN  DEL ^.layer_01111

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color black and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 232.0 + 300546.1 = 300778.1
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 253.2 + 300546.1 = 300799.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(black, ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 21.2 + 0.0 = 21.2
DL input+output M: L = 33.8 + 0.0 = 33.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e95e3d8e.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e95e3d8e.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e95e3d8e.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e95e3d8e.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 12.8 sec (12.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-34] Checking task e99362f0.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 133261.0 = 133273.7
DL output with Mo: L = 12.6 + 22785.8 = 22798.4
DL input+output M: L = 25.2 + 156046.8 = 156072.0

# learning a model for train pairs
2.000	
1.702	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.490	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.317	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.084	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.007	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.944	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.885	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.775	OUT ADD ^.layer_0110 = a point with color ? at (?,?)
0.539	
0.539	IN  DEL ^.layer_01111
0.539	IN  DEL ^.layer_0111
0.539	IN  DEL ^.layer_011
0.538	IN  DEL ^.layer_01
0.538	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 31471.4 = 31610.2
DL output with Mo: L = 120.3 + 12147.2 = 12267.5
DL input+output M: L = 259.2 + 43618.6 = 43877.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 120.3 + 12147.2 = 12267.5
DL input+output M: L = 132.9 + 12147.2 = 12280.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e99362f0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e99362f0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e99362f0.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e99362f0.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e99362f0.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e99362f0.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e99362f0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.8 sec (59.8 sec/task)
bits-train-error = 12147.2 bits (12147.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-33] Checking task e9ac8c9e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 26215.9 = 26228.5
DL output with Mo: L = 12.6 + 21727.7 = 21740.3
DL input+output M: L = 25.2 + 47943.6 = 47968.8

# learning a model for train pairs
2.000	
1.242	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.044	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.847	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.648	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.445	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.418	OUT SPE ^.size = ^.size
0.395	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.369	OUT SPE ^.layer_01.shape = scaleTo(^.layer_01.shape, ^.layer_0.shape.size / '2)
0.346	IN  ADD ^.layer_011 = a point with color ? at (?,?)
0.321	OUT SPE ^.layer_011.shape = scaleTo(^.layer_011.shape, ^.layer_0.shape.size / '2)
0.297	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.271	OUT SPE ^.layer_0111.shape = scaleTo(^.layer_0111.shape, ^.layer_0.shape.size / '2)
0.247	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.222	OUT SPE ^.layer_0.shape = scaleTo(^.layer_01111.shape, ^.layer_0.shape.size / '2)
0.206	OUT SPE ^.layer_01.pos = ^.layer_0.pos
0.192	OUT SPE ^.layer_0.pos = average(^.layer_0.pos, ^.layer_01111.pos)
0.184	OUT SPE ^.layer_0111.pos.j = ^.layer_0111.pos.j + 1
0.177	OUT SPE ^.layer_011.pos.i = ^.layer_011.pos.i + 1
0.170	OUT SPE ^.layer_011.pos.j = average(^.layer_0.pos.j, ^.layer_011.pos.j)
0.164	OUT SPE ^.layer_0111.pos.i = average(^.layer_0.pos.i, ^.layer_0111.pos.i)
0.157	IN  SPE ^.layer_0.shape.color = grey
0.154	IN  SPE ^.layer_0.shape.mask = Full
0.150	OUT SPE ^.color = black
0.147	IN  SPE ^.color = black
0.018	
0.018	IN  GEN ^.layer_0.shape.color = ?
0.018	IN  GEN ^.layer_0.shape.mask = ?
0.018	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_01111.shape, ^.layer_0.shape.size / '2) at average(^.layer_0.pos, ^.layer_01111.pos)
  _01: scaleTo(^.layer_01.shape, ^.layer_0.shape.size / '2) at ^.layer_0.pos
  _011: scaleTo(^.layer_011.shape, ^.layer_0.shape.size / '2) at (^.layer_011.pos.i + 1,average(^.layer_0.pos.j, ^.layer_011.pos.j))
  _0111: scaleTo(^.layer_0111.shape, ^.layer_0.shape.size / '2) at (average(^.layer_0.pos.i, ^.layer_0111.pos.i),^.layer_0111.pos.j + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 106.2 + 3391.1 = 3497.3
DL output with Mo: L = 306.5 + 0.0 = 306.5
DL input+output M: L = 412.7 + 3391.1 = 3803.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: scaleTo(^.layer_01111.shape, ^.layer_0.shape.size / '2) at average(^.layer_0.pos, ^.layer_01111.pos)
  _01: scaleTo(^.layer_01.shape, ^.layer_0.shape.size / '2) at ^.layer_0.pos
  _011: scaleTo(^.layer_011.shape, ^.layer_0.shape.size / '2) at (^.layer_011.pos.i + 1,average(^.layer_0.pos.j, ^.layer_011.pos.j))
  _0111: scaleTo(^.layer_0111.shape, ^.layer_0.shape.size / '2) at (average(^.layer_0.pos.i, ^.layer_0111.pos.i),^.layer_0111.pos.j + 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 101.7 + 0.0 = 101.7
DL output with Mo: L = 306.5 + 0.0 = 306.5
DL input+output M: L = 408.2 + 0.0 = 408.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e9ac8c9e.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e9ac8c9e.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e9ac8c9e.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e9ac8c9e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.3 sec (9.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-32] Checking task e9b4f6fc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 57143.0 = 57155.7
DL output with Mo: L = 12.6 + 14808.8 = 14821.4
DL input+output M: L = 25.2 + 71951.8 = 71977.0

# learning a model for train pairs
2.000	
1.431	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.091	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.706	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.632	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.588	OUT SPE ^.size = ^.layer_0.shape.size
0.551	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.521	OUT SPE ^.layer_01.shape.size = ^.layer_011.shape.size
0.497	OUT SPE ^.color = majorityColor(^.grid)
0.474	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.457	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.j
0.442	OUT SPE ^.layer_011.shape.mask = ^.layer_011.shape.mask
0.428	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.413	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.398	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.384	OUT SPE ^.layer_0.shape.size.i = ^.layer_01.shape.size.i
0.375	OUT SPE ^.layer_011.shape.size.i = ^.layer_0111.shape.size.i
0.366	OUT SPE ^.layer_0.shape.size.j = ^.layer_0111.shape.size.j
0.356	OUT SPE ^.layer_0.pos.j = min(^.layer_011.pos.j, ^.layer_0111111.pos.j)
0.347	OUT SPE ^.layer_0.shape.mask = Full
0.339	OUT SPE ^.layer_011.pos.j = ^.layer_011111.pos.j - ^.layer_0111111.pos.j - ^.layer_01111.pos.j
0.337	IN  SPE ^.layer_0111.shape.mask = Full
0.335	IN  SPE ^.color = black
0.139	
0.139	IN  GEN ^.layer_0111.shape.mask = ?
0.139	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color majorityColor(^.grid) and layers
  _0: a rectangle with size (^.layer_01.shape.size.i,^.layer_0111.shape.size.j) and color ? and mask Full at (?,min(^.layer_011.pos.j, ^.layer_0111111.pos.j))
  _01: a rectangle with size ^.layer_011.shape.size and color ? and mask ? at (?,?)
  _011: a rectangle with size (^.layer_0111.shape.size.i,^.layer_01.shape.size.j) and color ? and mask ^.layer_011.shape.mask at (?,^.layer_011111.pos.j - ^.layer_0111111.pos.j - ^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 161.4 + 11234.7 = 11396.1
DL output with Mo: L = 289.9 + 1722.0 = 2011.9
DL input+output M: L = 451.3 + 12956.7 = 13408.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color majorityColor(^.grid) and layers
  _0: a rectangle with size (^.layer_01.shape.size.i,^.layer_0111.shape.size.j) and color ? and mask Full at (?,min(^.layer_011.pos.j, ^.layer_0111111.pos.j))
  _01: a rectangle with size ^.layer_011.shape.size and color ? and mask ? at (?,?)
  _011: a rectangle with size (^.layer_0111.shape.size.i,^.layer_01.shape.size.j) and color ? and mask ^.layer_011.shape.mask at (?,^.layer_011111.pos.j - ^.layer_0111111.pos.j - ^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 160.3 + 40.0 = 200.3
DL output with Mo: L = 289.9 + 1722.0 = 2011.9
DL input+output M: L = 450.2 + 1762.0 = 2212.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e9b4f6fc.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e9b4f6fc.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e9b4f6fc.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e9b4f6fc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST e9b4f6fc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.5 sec (20.5 sec/task)
bits-train-error = 1722.0 bits (1722.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-31] Checking task e9bb6954.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 67469.2 = 67481.8
DL output with Mo: L = 12.6 + 137178.6 = 137191.2
DL input+output M: L = 25.2 + 204647.8 = 204673.0

# learning a model for train pairs
2.000	
1.732	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.546	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.380	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.239	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.155	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.058	OUT ADD ^.layer_010 = ^.layer_01
1.046	IN  ADD ^.layer_00 = a point with color ? at (?,?)
1.034	IN  ADD ^.layer_001 = a point with color ? at (?,?)
1.023	IN  ADD ^.layer_0011 = a point with color ? at (?,?)
1.011	IN  ADD ^.layer_00111 = a point with color ? at (?,?)
0.999	IN  ADD ^.layer_001111 = a point with color ? at (?,?)
0.988	OUT ADD ^.layer_00 = ^.layer_00
0.976	OUT ADD ^.layer_001 = ^.layer_001
0.967	OUT ADD ^.layer_0111 = ^.layer_011
0.960	OUT ADD ^.layer_000 = ^.layer_00.shape at (?,?)
0.953	OUT SPE ^.size = ^.size
0.950	OUT SPE ^.layer_01.shape.size.i = ^.size.i
0.946	OUT SPE ^.layer_011.shape.size.j = ^.size.j
0.945	IN  SPE ^.layer_0.shape.mask = Full
0.943	IN  SPE ^.layer_01.shape.mask = Full
0.941	OUT SPE ^.layer_01.pos.i = '0
0.939	OUT SPE ^.layer_011.pos.j = '0
0.937	OUT SPE ^.layer_01.pos.j = right(^.layer_01) - 1
0.936	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.934	IN  SPE ^.color = black
0.933	OUT SPE ^.layer_01.shape.size.j = 1
0.932	OUT SPE ^.layer_01.shape.mask = Full
0.931	OUT SPE ^.layer_011.shape.size.i = 1
0.380	
0.380	IN  GEN ^.layer_01.shape.mask = ?
0.380	IN  GEN ^.layer_0.shape.mask = ?
0.380	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_00.shape at (?,?)
  _00: ^.layer_00
  _001: ^.layer_001
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.size.i,1) and color ? and mask Full at ('0,right(^.layer_01) - 1)
  _011: a rectangle with size (1,^.size.j) and color ? and mask ? at (?,'0)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0011: a point with color ? at (?,?)
  _00111: a point with color ? at (?,?)
  _001111: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 168.4 + 37233.8 = 37402.2
DL output with Mo: L = 182.8 + 51538.7 = 51721.5
DL input+output M: L = 351.2 + 88772.5 = 89123.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_00.shape at (?,?)
  _00: ^.layer_00
  _001: ^.layer_001
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.size.i,1) and color ? and mask Full at ('0,right(^.layer_01) - 1)
  _011: a rectangle with size (1,^.size.j) and color ? and mask ? at (?,'0)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0011: a point with color ? at (?,?)
  _00111: a point with color ? at (?,?)
  _001111: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 166.3 + 51.7 = 218.0
DL output with Mo: L = 182.8 + 51538.7 = 51721.5
DL input+output M: L = 349.0 + 51590.4 = 51939.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e9bb6954.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e9bb6954.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN e9bb6954.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN e9bb6954.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST e9bb6954.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 51538.7 bits (51538.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-30] Checking task e9c9d9a1.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 92681.2 = 92693.8
DL output with Mo: L = 12.6 + 172172.3 = 172184.9
DL input+output M: L = 25.2 + 264853.5 = 264878.7

# learning a model for train pairs
2.000	
1.093	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	OUT ADD ^.layer_0 = ^.layer_0
0.478	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.369	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.272	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.198	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.143	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.139	OUT SPE ^.size = ^.size
0.137	OUT SPE ^.layer_01111.shape.size = tiling('(2, 3), 2, 1)
0.135	IN  SPE ^.layer_0.shape.color = green
0.134	OUT SPE ^.layer_0111.pos.i = '0
0.133	OUT SPE ^.layer_01111.pos.j = '0
0.132	OUT SPE ^.layer_011.shape.size.i = ^.size.i - ^.size.j
0.131	IN  SPE ^.color = black
0.131	OUT SPE ^.layer_01.shape.mask = Full
0.130	OUT SPE ^.layer_011.shape.mask = Full
0.130	OUT SPE ^.layer_0111.shape.mask = Full
0.129	OUT SPE ^.layer_01111.shape.mask = Full
0.128	OUT SPE ^.layer_011111.shape.mask = Full
0.128	OUT SPE ^.color = black
0.038	
0.038	IN  GEN ^.layer_0.shape.color = ?
0.038	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (^.size.i - ^.size.j,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at ('0,?)
  _01111: a rectangle with size tiling('(2, 3), 2, 1) and color ? and mask Full at (?,'0)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 8322.5 = 8364.8
DL output with Mo: L = 206.0 + 6285.8 = 6491.8
DL input+output M: L = 248.3 + 14608.4 = 14856.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (^.size.i - ^.size.j,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at ('0,?)
  _01111: a rectangle with size tiling('(2, 3), 2, 1) and color ? and mask Full at (?,'0)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 206.0 + 6285.8 = 6491.8
DL input+output M: L = 244.8 + 6285.8 = 6530.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e9c9d9a1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e9c9d9a1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN e9c9d9a1.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,2) and color col10 and mask Full at (0,0)

TEST e9c9d9a1.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.4 sec (7.4 sec/task)
bits-train-error = 6285.8 bits (6285.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-29] Checking task ea959feb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 494713.9 = 494726.5
DL output with Mo: L = 12.6 + 554983.6 = 554996.2
DL input+output M: L = 25.2 + 1049697.4 = 1049722.7

# learning a model for train pairs
2.000	
1.000	OUT SPE ^ = fillResizeAlike(majorityColor(^.grid), ^.size, ^.grid)
0.988	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.975	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.959	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.947	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.935	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.915	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.905	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.905	IN  SPE ^.color = blue
0.904	IN  SPE ^.layer_0.shape.color = yellow
0.904	IN  SPE ^.layer_01.shape.color = yellow
0.904	IN  SPE ^.layer_011.shape.color = grey
0.903	IN  SPE ^.layer_01111.shape.color = pink
0.903	IN  SPE ^.layer_0111.shape.mask = Full
0.903	IN  SPE ^.layer_011.shape.mask = Full
0.901	IN  SPE ^.layer_011111.shape.mask = Full
0.900	IN  SPE ^.layer_01111111.shape.mask = Full
0.001	
0.000	IN  DEL ^.layer_011
0.000	IN  DEL ^.layer_01111
0.000	IN  DEL ^.layer_01
0.000	IN  DEL ^.layer_0
0.000	IN  DEL ^.layer_01111111
0.000	IN  DEL ^.layer_011111
0.000	IN  DEL ^.layer_0111
0.000	IN  DEL ^.layer_0111111
0.000	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
fillResizeAlike(majorityColor(^.grid), ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 236.6 + 445189.2 = 445425.8
DL output with Mo: L = 26.8 + 0.0 = 26.8
DL input+output M: L = 263.4 + 445189.2 = 445452.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
fillResizeAlike(majorityColor(^.grid), ^.size, ^.grid)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 26.8 + 0.0 = 26.8
DL input+output M: L = 39.4 + 0.0 = 39.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ea959feb.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ea959feb.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ea959feb.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ea959feb.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 16.6 sec (16.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-28] Checking task ea9794b1.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 111344.3 = 111356.9
DL output with Mo: L = 12.6 + 24790.3 = 24802.9
DL input+output M: L = 25.2 + 136134.6 = 136159.8

# learning a model for train pairs
2.000	
1.723	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.477	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.282	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.141	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.009	OUT ADD ^.layer_00 = ^.layer_01.shape at (?,?)
0.919	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.815	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.777	OUT SPE ^.size = ^.size / '2
0.754	OUT SPE ^.layer_00.pos = '(0, 0)
0.746	OUT SPE ^.layer_01.shape.mask = Full
0.738	OUT SPE ^.layer_011.shape.mask = Full
0.734	IN  SPE ^.layer_01.shape.color = green
0.640	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.569	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.557	OUT SPE ^.layer_0.shape.color = ^.layer_01111.shape.color
0.547	OUT SPE ^.layer_0111.pos.j = center(^.layer_011) / '3
0.534	OUT SPE ^.layer_011.shape.color = cyan
0.523	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.i - 3
0.521	IN  SPE ^.color = black
0.305	
0.305	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ? and layers
  _00: ^.layer_01.shape at '(0, 0)
  _0: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (?,?)
  _01: a rectangle with size (^.layer_01.shape.size.i - 3,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _0111: a point with color ? at (?,center(^.layer_011) / '3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 167.0 + 24185.9 = 24352.9
DL output with Mo: L = 211.3 + 7292.1 = 7503.4
DL input+output M: L = 378.3 + 31478.1 = 31856.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size / '2 and color ? and layers
  _00: ^.layer_01.shape at '(0, 0)
  _0: a rectangle with size (?,?) and color ^.layer_01111.shape.color and mask ? at (?,?)
  _01: a rectangle with size (^.layer_01.shape.size.i - 3,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _0111: a point with color ? at (?,center(^.layer_011) / '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 166.9 + 103.4 = 270.3
DL output with Mo: L = 211.3 + 7292.1 = 7503.4
DL input+output M: L = 378.2 + 7395.5 = 7773.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ea9794b1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ea9794b1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ea9794b1.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ea9794b1.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ea9794b1.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ea9794b1.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST ea9794b1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 36.4 sec (36.4 sec/task)
bits-train-error = 7292.1 bits (7292.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-27] Checking task ecaa0ec1.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 20637.7 = 20650.3
DL output with Mo: L = 12.6 + 16127.4 = 16140.0
DL input+output M: L = 25.2 + 36765.2 = 36790.4

# learning a model for train pairs
2.000	
1.639	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.002	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.936	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.885	OUT SPE ^.size = ^.size
0.844	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.804	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.764	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.723	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.696	OUT ADD ^.layer_0111 = ^.layer_0111.shape at (?,?)
0.670	OUT SPE ^.layer_011.pos = min(^.layer_0.pos, ^.layer_01.pos)
0.654	OUT SPE ^.layer_011.shape.size.i = 3
0.640	OUT SPE ^.layer_0.shape.color = cyan
0.627	OUT SPE ^.layer_011.shape.color = majorityColor(^.grid)
0.613	OUT SPE ^.layer_0.pos.i = ^.layer_01.pos.j
0.588	OUT SPE ^.layer_0111.pos = max(^.layer_0.pos, ^.layer_011111.pos) - (1, 1)
0.578	IN  SPE ^.layer_0111.shape.color = yellow
0.567	IN  SPE ^.layer_01111.shape.color = yellow
0.556	IN  SPE ^.layer_011111.shape.color = yellow
0.546	IN  ADD ^.layer_00 = a point with color ? at (?,?)
0.538	OUT SPE ^.layer_01.shape.mask = Full
0.528	OUT SPE ^.layer_0.shape.size.i = area(^.layer_011.shape)
0.519	OUT SPE ^.layer_01.shape.size.j = ^.layer_0.shape.size.i - 1
0.511	OUT SPE ^.layer_011.shape.mask = Full
0.499	OUT SPE ^.layer_01.pos.j = max(^.layer_0.pos.i, ^.layer_011.pos.i)
0.487	OUT SPE ^.layer_01.pos.i = bottom(^.layer_01) - ^.layer_01.pos.j - ^.layer_0.pos.j
0.477	OUT SPE ^.layer_011.shape.size.j = area(^.layer_0.shape) - 3
0.469	OUT SPE ^.layer_01.shape.size.i = ^.layer_011.shape.size.j + ^.layer_01.pos.j - ^.layer_0.pos.j
0.461	OUT SPE ^.layer_0.shape.size.j = area(^.layer_01.shape) - ^.layer_011.shape.size.i
0.455	IN  SPE ^.layer_01.shape.mask = Full
0.448	IN  SPE ^.layer_011.shape.mask = Full
0.442	OUT SPE ^.color = black
0.436	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j + ^.layer_011111.pos.i - ^.layer_0111.pos.i
0.432	IN  SPE ^.color = black
0.097	
0.097	IN  GEN ^.layer_011.shape.mask = ?
0.097	IN  GEN ^.layer_01.shape.mask = ?
0.097	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_011.shape),area(^.layer_01.shape) - ^.layer_011.shape.size.i) and color cyan and mask ? at (^.layer_01.pos.j,^.layer_0.pos.j + ^.layer_011111.pos.i - ^.layer_0111.pos.i)
  _01: a rectangle with size (^.layer_011.shape.size.j + ^.layer_01.pos.j - ^.layer_0.pos.j,^.layer_0.shape.size.i - 1) and color ? and mask Full at (bottom(^.layer_01) - ^.layer_01.pos.j - ^.layer_0.pos.j,max(^.layer_0.pos.i, ^.layer_011.pos.i))
  _011: a rectangle with size (3,area(^.layer_0.shape) - 3) and color majorityColor(^.grid) and mask Full at min(^.layer_0.pos, ^.layer_01.pos)
  _0111: ^.layer_0111.shape at max(^.layer_0.pos, ^.layer_011111.pos) - (1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color yellow at (?,?)
  _01111: a point with color yellow at (?,?)
  _011111: a point with color yellow at (?,?)

DL input  with Mi: L = 163.1 + 7013.5 = 7176.6
DL output with Mo: L = 524.2 + 831.2 = 1355.3
DL input+output M: L = 687.3 + 7844.7 = 8532.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (area(^.layer_011.shape),area(^.layer_01.shape) - ^.layer_011.shape.size.i) and color cyan and mask ? at (^.layer_01.pos.j,^.layer_0.pos.j + ^.layer_011111.pos.i - ^.layer_0111.pos.i)
  _01: a rectangle with size (^.layer_011.shape.size.j + ^.layer_01.pos.j - ^.layer_0.pos.j,^.layer_0.shape.size.i - 1) and color ? and mask Full at (bottom(^.layer_01) - ^.layer_01.pos.j - ^.layer_0.pos.j,max(^.layer_0.pos.i, ^.layer_011.pos.i))
  _011: a rectangle with size (3,area(^.layer_0.shape) - 3) and color majorityColor(^.grid) and mask Full at min(^.layer_0.pos, ^.layer_01.pos)
  _0111: ^.layer_0111.shape at max(^.layer_0.pos, ^.layer_011111.pos) - (1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color yellow at (?,?)
  _01111: a point with color yellow at (?,?)
  _011111: a point with color yellow at (?,?)

DL input  with Mi: L = 161.0 + 115.1 = 276.1
DL output with Mo: L = 524.2 + 831.2 = 1355.3
DL input+output M: L = 685.1 + 946.3 = 1631.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ecaa0ec1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ecaa0ec1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ecaa0ec1.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ecaa0ec1.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST ecaa0ec1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 831.2 bits (831.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-26] Checking task ed74f2f2.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25053.7 = 25066.3
DL output with Mo: L = 12.6 + 7556.2 = 7568.8
DL input+output M: L = 25.2 + 32609.8 = 32635.1

# learning a model for train pairs
2.000	
1.437	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.592	OUT SPE ^.size = ^.layer_0.shape.size
0.494	OUT SPE ^.layer_0.shape.mask = ^.layer_0.shape.mask
0.391	OUT SPE ^.layer_0.shape.size = ^.layer_0.shape.size
0.329	OUT SPE ^.layer_0.pos = '(0, 0)
0.310	OUT SPE ^.color = black
0.296	IN  SPE ^.layer_0.shape.color = grey
0.283	IN  SPE ^.layer_01.shape.color = grey
0.277	IN  SPE ^.color = black
0.055	
0.054	IN  DEL ^.layer_01
0.054	IN  GEN ^.layer_0.shape.color = ?
0.054	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 5609.9 = 5680.9
DL output with Mo: L = 42.5 + 338.6 = 381.1
DL input+output M: L = 113.5 + 5948.5 = 6062.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at '(0, 0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 40.0 = 78.8
DL output with Mo: L = 42.5 + 338.6 = 381.1
DL input+output M: L = 81.3 + 378.6 = 460.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed74f2f2.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed74f2f2.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed74f2f2.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed74f2f2.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed74f2f2.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed74f2f2.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST ed74f2f2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-25] Checking task ed98d772.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 7252.8 = 7265.4
DL output with Mo: L = 12.6 + 27269.7 = 27282.3
DL input+output M: L = 25.2 + 34522.5 = 34547.7

# learning a model for train pairs
2.000	
1.406	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.828	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.790	IN  SPE ^.layer_0.shape.color = black
0.759	OUT SPE ^.size = tiling(^.size, 2, 2)
0.741	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.672	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.664	OUT SPE ^.layer_01.pos.j = ^.layer_0.pos.j * '3
0.303	
0.302	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j * '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)

DL input  with Mi: L = 42.2 + 2626.3 = 2668.4
DL output with Mo: L = 102.4 + 8002.2 = 8104.6
DL input+output M: L = 144.6 + 10628.5 = 10773.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0.pos.j * '3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 102.4 + 8002.2 = 8104.6
DL input+output M: L = 141.3 + 8002.2 = 8143.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ed98d772.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN ed98d772.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ed98d772.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed98d772.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ed98d772.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST ed98d772.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.3 sec (4.3 sec/task)
bits-train-error = 8002.2 bits (8002.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-24] Checking task ef26cbf6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 31568.5 = 31581.1
DL output with Mo: L = 12.6 + 31568.5 = 31581.1
DL input+output M: L = 25.2 + 63137.0 = 63162.2

# learning a model for train pairs
2.000	
1.534	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.996	OUT ADD ^.layer_0 = ^.layer_0
0.870	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.758	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.657	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.580	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.515	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.491	IN  SPE ^.layer_0.shape.color = yellow
0.463	OUT SPE ^.layer_011 = coloring(^.layer_011, green)
0.450	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.437	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.424	OUT ADD ^.layer_0111111 = a point with color ? at (?,?)
0.411	OUT SPE ^.size = ^.size
0.402	OUT SPE ^.layer_01.shape.mask = ^.layer_01.shape.mask
0.394	OUT SPE ^.layer_01.shape.size = ^.layer_01.shape.size
0.386	OUT SPE ^.layer_0111.shape.size = ^.layer_011.shape.size
0.379	OUT SPE ^.layer_01.pos = ^.layer_01.pos
0.372	OUT SPE ^.layer_01111.pos = '(1, 1)
0.367	OUT SPE ^.layer_011111.pos = ^.layer_0.pos + span(^.layer_01.pos, ^.layer_011.pos)
0.363	IN  SPE ^.layer_01.shape.color = blue
0.360	IN  SPE ^.layer_011.shape.color = blue
0.357	OUT SPE ^.layer_0111.pos.j = right(^.layer_0) - 2
0.355	OUT SPE ^.layer_0111.pos.i = right(^.layer_0) - area(^.layer_01.shape)
0.353	OUT SPE ^.color = black
0.352	IN  SPE ^.color = black
0.350	OUT SPE ^.layer_0111111.pos.i = span(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.layer_011.pos.j - ^.layer_01.pos.j
0.044	
0.044	IN  GEN ^.layer_011.shape.color = ?
0.044	IN  GEN ^.layer_01.shape.color = ?
0.044	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: coloring(^.layer_011, green)
  _0111: a rectangle with size ^.layer_011.shape.size and color ? and mask ? at (right(^.layer_0) - area(^.layer_01.shape),right(^.layer_0) - 2)
  _01111: a point with color ? at '(1, 1)
  _011111: a point with color ? at ^.layer_0.pos + span(^.layer_01.pos, ^.layer_011.pos)
  _0111111: a point with color ? at (span(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.layer_011.pos.j - ^.layer_01.pos.j,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 99.4 + 9688.5 = 9787.9
DL output with Mo: L = 307.5 + 972.1 = 1279.6
DL input+output M: L = 406.9 + 10660.6 = 11067.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: coloring(^.layer_011, green)
  _0111: a rectangle with size ^.layer_011.shape.size and color ? and mask ? at (right(^.layer_0) - area(^.layer_01.shape),right(^.layer_0) - 2)
  _01111: a point with color ? at '(1, 1)
  _011111: a point with color ? at ^.layer_0.pos + span(^.layer_01.pos, ^.layer_011.pos)
  _0111111: a point with color ? at (span(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.layer_011.pos.j - ^.layer_01.pos.j,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 92.6 + 20.0 = 112.6
DL output with Mo: L = 307.5 + 972.1 = 1279.6
DL input+output M: L = 400.1 + 992.1 = 1392.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ef26cbf6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN ef26cbf6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST ef26cbf6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.6 sec (20.6 sec/task)
bits-train-error = 972.1 bits (972.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-23] Checking task f0afb749.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2696.2 = 2708.8
DL output with Mo: L = 12.6 + 18636.7 = 18649.3
DL input+output M: L = 25.2 + 21332.9 = 21358.1

# learning a model for train pairs
2.000	
1.767	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.536	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.387	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.268	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.237	OUT SPE ^.layer_0.shape = ^.layer_0.shape * '2
1.208	OUT SPE ^.size = tiling(^.size, 2, 2)
1.181	IN  SPE ^.color = black
1.164	OUT SPE ^.layer_0.pos = ^.layer_0.pos * '2
1.155	OUT SPE ^.layer_01.shape.color = blue
1.147	OUT SPE ^.layer_011.pos.j = 2
1.142	OUT SPE ^.layer_011.shape.mask = Full
1.138	OUT SPE ^.color = black
0.409	
0.409	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: ^.layer_0.shape * '2 at ^.layer_0.pos * '2
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1974.9 = 2004.5
DL output with Mo: L = 126.7 + 7294.0 = 7420.7
DL input+output M: L = 156.4 + 9268.9 = 9425.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _0: ^.layer_0.shape * '2 at ^.layer_0.pos * '2
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 126.7 + 7294.0 = 7420.7
DL input+output M: L = 156.3 + 7294.0 = 7450.3

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f0afb749.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f0afb749.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f0afb749.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST f0afb749.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.8 sec (7.8 sec/task)
bits-train-error = 7294.0 bits (7294.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-22] Checking task f0df5ff0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 103538.6 = 103551.2
DL output with Mo: L = 12.6 + 138850.6 = 138863.2
DL input+output M: L = 25.2 + 242389.2 = 242414.4

# learning a model for train pairs
2.000	
1.924	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.862	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.808	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.753	OUT ADD ^.layer_00 = ^.layer_0
1.700	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.649	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.608	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.566	OUT ADD ^.layer_010 = ^.layer_01
1.544	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.519	OUT ADD ^.layer_0110 = ^.layer_011
1.500	OUT ADD ^.layer_000 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.487	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.472	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.462	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.450	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.444	IN  ADD ^.layer_011110 = a point with color ? at (?,?)
1.439	OUT SPE ^.size = ^.size
1.436	OUT SPE ^.layer_011.shape.size = '(3, 3)
1.434	OUT SPE ^.layer_01.shape.size = '(3, 3)
1.432	OUT SPE ^.layer_01.shape.mask = Full
1.430	OUT SPE ^.layer_0.shape.size.j = ^.layer_0111.shape.size.j + 1
1.429	OUT SPE ^.layer_000.shape.size.j = 3
1.428	OUT SPE ^.layer_0.shape.size.i = 3
1.426	OUT SPE ^.layer_011.pos.j = ^.layer_011110.pos.j
1.425	OUT SPE ^.layer_000.shape.color = blue
1.424	OUT SPE ^.layer_0.shape.color = blue
0.603	
0.603	IN  DEL ^.layer_0111111
0.603	IN  DEL ^.layer_011111
0.603	IN  DEL ^.layer_01111
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,3) and color blue and mask ? at (?,?)
  _00: ^.layer_0
  _0: a rectangle with size (3,^.layer_0111.shape.size.j + 1) and color blue and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size '(3, 3) and color ? and mask ? at (?,^.layer_011110.pos.j)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 203.4 + 84985.2 = 85188.6
DL output with Mo: L = 238.2 + 83274.3 = 83512.5
DL input+output M: L = 441.7 + 168259.4 = 168701.1

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a rectangle with size (?,3) and color blue and mask ? at (?,?)
  _00: ^.layer_0
  _0: a rectangle with size (3,^.layer_0111.shape.size.j + 1) and color blue and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size '(3, 3) and color ? and mask Full at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size '(3, 3) and color ? and mask ? at (?,^.layer_011110.pos.j)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011110: a point with color ? at (?,?)

DL input  with Mi: L = 129.6 + 0.0 = 129.6
DL output with Mo: L = 238.2 + 83302.6 = 83540.8
DL input+output M: L = 367.8 + 83302.6 = 83670.4

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f0df5ff0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f0df5ff0.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f0df5ff0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST f0df5ff0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.0 sec (60.0 sec/task)
bits-train-error = 83302.6 bits (83302.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-21] Checking task f21745ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 121773.0 = 121785.7
DL output with Mo: L = 12.6 + 120162.8 = 120175.4
DL input+output M: L = 25.2 + 241935.9 = 241961.1

# learning a model for train pairs
2.000	
1.716	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.432	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.146	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.866	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.663	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.460	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.289	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.232	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.204	OUT ADD ^.layer_0111 = ^.layer_0
0.188	OUT SPE ^.layer_0.shape = coloring(^.layer_0.shape, ^.layer_01.shape.color)
0.182	OUT SPE ^.size = ^.size
0.178	OUT SPE ^.layer_01.pos = ^.layer_011.pos
0.175	OUT SPE ^.layer_0.pos = ^.layer_01.pos
0.173	OUT SPE ^.layer_01.shape.size.j = ^.layer_01.shape.size.j
0.172	IN  SPE ^.layer_011.shape.mask = Border
0.170	OUT SPE ^.layer_01.shape.color = ^.layer_011.shape.color
0.169	OUT SPE ^.layer_011.pos.j = span(^.layer_01.pos.j, ^.layer_0111.pos.j) + ^.layer_0111.shape.size.i
0.168	OUT SPE ^.layer_011.pos.i = right(^.layer_01111) - ^.layer_0111.pos.j - ^.layer_0.pos.j
0.168	OUT SPE ^.color = black
0.167	IN  SPE ^.color = black
0.084	
0.084	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at ^.layer_01.pos
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at (right(^.layer_01111) - ^.layer_0111.pos.j - ^.layer_0.pos.j,span(^.layer_01.pos.j, ^.layer_0111.pos.j) + ^.layer_0111.shape.size.i)
  _0111: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.3 + 10163.7 = 10306.0
DL output with Mo: L = 258.1 + 9635.4 = 9893.5
DL input+output M: L = 400.5 + 19799.0 = 20199.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: coloring(^.layer_0.shape, ^.layer_01.shape.color) at ^.layer_01.pos
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at (right(^.layer_01111) - ^.layer_0111.pos.j - ^.layer_0.pos.j,span(^.layer_01.pos.j, ^.layer_0111.pos.j) + ^.layer_0111.shape.size.i)
  _0111: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 142.2 + 20.0 = 162.2
DL output with Mo: L = 258.1 + 9635.4 = 9893.5
DL input+output M: L = 400.3 + 9655.4 = 10055.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f21745ec.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f21745ec.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f21745ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST f21745ec.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 36.8 sec (36.8 sec/task)
bits-train-error = 9635.4 bits (9635.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-20] Checking task f3b10344.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 228414.9 = 228427.5
DL output with Mo: L = 12.6 + 315058.8 = 315071.5
DL input+output M: L = 25.2 + 543473.8 = 543499.0

# learning a model for train pairs
2.000	
1.736	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.481	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.279	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT ADD ^.layer_01 = ^.layer_0
0.926	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.793	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.594	OUT ADD ^.layer_0111 = ^.layer_011
0.515	OUT ADD ^.layer_010 = ^.layer_01
0.428	OUT ADD ^.layer_01111 = ^.layer_0111
0.380	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.310	IN  ADD ^.layer_01110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.271	OUT ADD ^.layer_011110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.269	OUT SPE ^.size = ^.size
0.267	OUT SPE ^.layer_011.pos = ^.layer_01110.pos
0.267	OUT SPE ^.layer_011110.shape.size.i = ^.layer_01.shape.size.i
0.266	OUT SPE ^.layer_0.shape.size.j = 3
0.265	OUT SPE ^.layer_011110.shape.color = cyan
0.265	OUT SPE ^.layer_011.shape.size.i = ^.layer_01110.shape.size.i
0.264	OUT SPE ^.layer_011111.shape.color = cyan
0.264	OUT SPE ^.layer_011.shape.color = ^.layer_0111.shape.color
0.263	IN  SPE ^.layer_0.shape.mask = Full
0.263	IN  SPE ^.layer_01.shape.mask = Full
0.262	IN  SPE ^.layer_011.shape.mask = Full
0.262	IN  SPE ^.layer_01110.shape.mask = Full
0.262	IN  SPE ^.layer_0111.shape.mask = Full
0.261	IN  SPE ^.color = black
0.261	OUT SPE ^.layer_0.shape.mask = Full
0.261	OUT SPE ^.layer_011.shape.mask = Full
0.260	OUT SPE ^.layer_011110.shape.mask = Full
0.260	OUT SPE ^.layer_011111.shape.mask = Full
0.259	OUT SPE ^.layer_011111.shape.size.i = average(^.layer_0.shape.size.j, ^.layer_0111.shape.size.j) - 3
0.259	OUT SPE ^.layer_011111.pos.i = min(^.layer_011.pos.j, ^.layer_0111.pos.j) + 3
0.259	OUT SPE ^.color = black
0.091	
0.091	IN  GEN ^.layer_0111.shape.mask = ?
0.091	IN  GEN ^.layer_01110.shape.mask = ?
0.091	IN  GEN ^.layer_011.shape.mask = ?
0.091	IN  GEN ^.layer_01.shape.mask = ?
0.091	IN  GEN ^.layer_0.shape.mask = ?
0.091	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (?,?)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_01110.shape.size.i,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_01110.pos
  _0111: ^.layer_011
  _011110: a rectangle with size (^.layer_01.shape.size.i,?) and color cyan and mask Full at (?,?)
  _01111: ^.layer_0111
  _011111: a rectangle with size (average(^.layer_0.shape.size.j, ^.layer_0111.shape.size.j) - 3,?) and color cyan and mask Full at (min(^.layer_011.pos.j, ^.layer_0111.pos.j) + 3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 144.0 + 38354.7 = 38498.7
DL output with Mo: L = 306.5 + 28140.4 = 28446.9
DL input+output M: L = 450.5 + 66495.1 = 66945.6

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (?,?)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_01110.shape.size.i,?) and color ^.layer_0111.shape.color and mask Full at ^.layer_01110.pos
  _0111: ^.layer_011
  _011110: a rectangle with size (^.layer_01.shape.size.i,?) and color cyan and mask Full at (?,?)
  _01111: ^.layer_0111
  _011111: a rectangle with size (average(^.layer_0.shape.size.j, ^.layer_0111.shape.size.j) - 3,?) and color cyan and mask Full at (min(^.layer_011.pos.j, ^.layer_0111.pos.j) + 3,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 63.4 = 202.3
DL output with Mo: L = 306.5 + 28140.4 = 28446.9
DL input+output M: L = 445.4 + 28203.8 = 28649.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f3b10344.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f3b10344.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3b10344.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST f3b10344.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.4 sec (59.4 sec/task)
bits-train-error = 28140.4 bits (28140.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-19] Checking task f3cdc58f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 22497.0 = 22509.6
DL output with Mo: L = 12.6 + 22497.0 = 22509.6
DL input+output M: L = 25.2 + 44994.1 = 45019.3

# learning a model for train pairs
2.000	
1.696	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.473	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.314	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.201	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.145	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.102	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	OUT SPE ^.size = ^.size
1.020	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.997	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.970	IN  ADD ^.layer_01101 = a point with color ? at (?,?)
0.945	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.918	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.911	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.903	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.896	OUT SPE ^.layer_0111.pos.j = ^.layer_0.pos.i
0.892	OUT SPE ^.layer_0.shape.size.j = 1
0.887	OUT SPE ^.layer_0.shape.mask = Full
0.883	OUT SPE ^.layer_01.shape.size.j = 1
0.879	OUT SPE ^.layer_01.shape.mask = Full
0.872	OUT SPE ^.layer_011.pos.j = ^.layer_0.pos.i + 1
0.868	IN  SPE ^.layer_01.shape.mask = Full
0.863	OUT SPE ^.layer_011.shape.size.j = 1
0.859	OUT SPE ^.layer_011.shape.mask = Full
0.854	OUT SPE ^.layer_0111.shape.size.j = 1
0.848	OUT SPE ^.layer_01.pos.j = ^.layer_011.pos.j / '2
0.844	OUT SPE ^.layer_0111.shape.mask = Full
0.835	OUT SPE ^.layer_0.shape.size.i = ^.size.i - ^.layer_011111.pos.i - ^.layer_0.pos.i
0.828	OUT SPE ^.layer_01.shape.size.i = ^.layer_01.shape.size.j - ^.layer_01111.pos.j - ^.layer_0.pos.j
0.822	OUT SPE ^.layer_0111.shape.size.i = area(^.layer_0111.shape) - ^.layer_01101.pos.j - ^.layer_01.pos.j
0.817	OUT SPE ^.layer_01.pos.i = center(^.layer_0) + ^.layer_011.pos.i - ^.layer_01.pos.i
0.813	OUT SPE ^.layer_0.pos.i = ^.layer_01111.pos.i - ^.layer_011111.pos.i - ^.layer_01111.pos.i
0.809	IN  SPE ^.color = black
0.806	OUT SPE ^.color = black
0.077	
0.077	IN  GEN ^.layer_01.shape.mask = ?
0.077	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i - ^.layer_011111.pos.i - ^.layer_0.pos.i,1) and color ^.layer_0.shape.color and mask Full at (^.layer_01111.pos.i - ^.layer_011111.pos.i - ^.layer_01111.pos.i,?)
  _01: a rectangle with size (^.layer_01.shape.size.j - ^.layer_01111.pos.j - ^.layer_0.pos.j,1) and color ? and mask Full at (center(^.layer_0) + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_011.pos.j / '2)
  _011: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at (?,^.layer_0.pos.i + 1)
  _0111: a rectangle with size (area(^.layer_0111.shape) - ^.layer_01101.pos.j - ^.layer_01.pos.j,1) and color ? and mask Full at (?,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 167.4 + 16401.0 = 16568.4
DL output with Mo: L = 498.4 + 1076.1 = 1574.5
DL input+output M: L = 665.8 + 17477.1 = 18142.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i - ^.layer_011111.pos.i - ^.layer_0.pos.i,1) and color ^.layer_0.shape.color and mask Full at (^.layer_01111.pos.i - ^.layer_011111.pos.i - ^.layer_01111.pos.i,?)
  _01: a rectangle with size (^.layer_01.shape.size.j - ^.layer_01111.pos.j - ^.layer_0.pos.j,1) and color ? and mask Full at (center(^.layer_0) + ^.layer_011.pos.i - ^.layer_01.pos.i,^.layer_011.pos.j / '2)
  _011: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at (?,^.layer_0.pos.i + 1)
  _0111: a rectangle with size (area(^.layer_0111.shape) - ^.layer_01101.pos.j - ^.layer_01.pos.j,1) and color ? and mask Full at (?,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 166.3 + 0.0 = 166.3
DL output with Mo: L = 498.4 + 1076.1 = 1574.5
DL input+output M: L = 664.7 + 1076.1 = 1740.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f3cdc58f.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3cdc58f.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3cdc58f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Center: no center, even width

TEST f3cdc58f.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 24.7 sec (24.7 sec/task)
bits-train-error = 1076.1 bits (1076.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-18] Checking task f3e62deb.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 19572.6 = 19585.2
DL output with Mo: L = 12.6 + 19572.6 = 19585.2
DL input+output M: L = 25.2 + 39145.2 = 39170.4

# learning a model for train pairs
2.000	
1.180	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.284	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
0.223	OUT SPE ^.size = ^.size
0.206	IN  SPE ^.layer_0.shape.mask = Border
0.198	IN  SPE ^.color = black
0.191	OUT SPE ^.color = black
0.038	
0.038	IN  GEN ^.layer_0.shape.mask = ?
0.038	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 42.3 + 2990.8 = 3033.1
DL output with Mo: L = 24.5 + 677.3 = 701.8
DL input+output M: L = 66.8 + 3668.1 = 3734.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 24.5 + 677.3 = 701.8
DL input+output M: L = 63.4 + 677.3 = 740.6

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3e62deb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3e62deb.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3e62deb.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3e62deb.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3e62deb.json/5: 0 - (FAILURE)

## instance 6

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f3e62deb.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST f3e62deb.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST f3e62deb.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 677.3 bits (677.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-17] Checking task f4081712.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 830942.3 = 830954.9
DL output with Mo: L = 12.6 + 40387.2 = 40399.8
DL input+output M: L = 25.2 + 871329.5 = 871354.7

# learning a model for train pairs
2.000	
1.708	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.507	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.376	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.266	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.112	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.056	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.015	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.965	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.945	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.918	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.910	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
0.906	OUT SPE ^.layer_01111.shape.size.i = 1
0.352	
0.352	IN  DEL ^.layer_01111111
0.352	IN  DEL ^.layer_0111111
0.352	IN  DEL ^.layer_011111
0.352	IN  DEL ^.layer_01111
0.352	IN  DEL ^.layer_0111
0.351	IN  DEL ^.layer_011
0.351	IN  DEL ^.layer_01
0.351	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (1,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.7 + 460602.5 = 460815.2
DL output with Mo: L = 155.3 + 14041.9 = 14197.1
DL input+output M: L = 368.0 + 474644.4 = 475012.3

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (1,?) and color ? and mask ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 155.3 + 14041.9 = 14197.1
DL input+output M: L = 167.9 + 14041.9 = 14209.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f4081712.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f4081712.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f4081712.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f4081712.json/4: 0 - (FAILURE)

## instance 5

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f4081712.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST f4081712.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 64.7 sec (64.7 sec/task)
bits-train-error = 14041.9 bits (14041.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-16] Checking task f45f5ca7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9035.8 = 9048.4
DL output with Mo: L = 12.6 + 9035.8 = 9048.4
DL input+output M: L = 25.2 + 18071.6 = 18096.8

# learning a model for train pairs
2.000	
1.933	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.828	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.743	OUT ADD ^.layer_0 = ^.layer_0.shape at (?,?)
1.661	OUT ADD ^.layer_01 = ^.layer_0.shape at (?,?)
1.590	IN  ADD ^.layer_010 = a point with color ? at (?,?)
1.504	OUT ADD ^.layer_010 = ^.layer_010.shape at (?,?)
1.437	IN  ADD ^.layer_011 = a point with color ? at (?,?)
1.355	OUT ADD ^.layer_011 = ^.layer_011.shape at (?,?)
1.287	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
1.218	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
1.147	OUT ADD ^.layer_011111 = a point with color ? at (?,?)
1.080	OUT SPE ^.size = ^.size
1.041	IN  ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.007	OUT SPE ^.layer_011.pos = ^.layer_011.pos + (0, 1)
0.973	IN  ADD ^.layer_01101 = a point with color ? at (?,?)
0.938	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.920	OUT SPE ^.layer_010.pos.i = ^.layer_010.pos.i
0.901	OUT SPE ^.layer_0.pos.i = ^.layer_0.pos.i
0.883	OUT SPE ^.layer_01111.shape.color = yellow
0.864	OUT SPE ^.layer_0111.shape = ^.layer_0111.shape
0.845	OUT SPE ^.layer_0111.pos.i = ^.layer_0111.pos.i
0.827	IN  SPE ^.layer_011.shape.color = cyan
0.796	OUT SPE ^.layer_01111.pos = ^.layer_0110.pos + (0, 3)
0.774	IN  SPE ^.layer_0110.shape.color = yellow
0.755	IN  SPE ^.layer_01.shape.color = red
0.737	IN  SPE ^.layer_01101.shape.color = green
0.719	OUT SPE ^.layer_011111.shape = ^.layer_0111.shape
0.705	OUT SPE ^.layer_0111.pos.j = ^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_0110.pos.i
0.692	OUT SPE ^.layer_011111.pos.j = ^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_0110.pos.i
0.682	IN  SPE ^.layer_01.shape.mask = Full
0.671	IN  SPE ^.layer_0110.shape.mask = Full
0.663	IN  SPE ^.color = black
0.654	OUT SPE ^.color = black
0.183	
0.182	IN  GEN ^.layer_011.shape.color = ?
0.182	IN  GEN ^.layer_01101.shape.color = ?
0.182	IN  GEN ^.layer_01.shape.color = ?
0.182	IN  GEN ^.layer_0110.shape.mask = ?
0.181	IN  GEN ^.layer_01.shape.mask = ?
0.181	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _010: ^.layer_010.shape at (^.layer_010.pos.i,?)
  _01: ^.layer_0.shape at (?,?)
  _011: ^.layer_011.shape at ^.layer_011.pos + (0, 1)
  _0111: ^.layer_0111.shape at (^.layer_0111.pos.i,^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_0110.pos.i)
  _01111: a point with color yellow at ^.layer_0110.pos + (0, 3)
  _011111: ^.layer_0111.shape at (?,^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_0110.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0110: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _01101: a point with color green at (?,?)
  _011: a point with color cyan at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 157.1 + 4266.8 = 4423.9
DL output with Mo: L = 258.6 + 1238.4 = 1497.1
DL input+output M: L = 415.8 + 5505.2 = 5921.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i,?)
  _010: ^.layer_010.shape at (^.layer_010.pos.i,?)
  _01: ^.layer_0.shape at (?,?)
  _011: ^.layer_011.shape at ^.layer_011.pos + (0, 1)
  _0111: ^.layer_0111.shape at (^.layer_0111.pos.i,^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_0110.pos.i)
  _01111: a point with color yellow at ^.layer_0110.pos + (0, 3)
  _011111: ^.layer_0111.shape at (?,^.layer_0111.pos.j + ^.layer_0111.pos.i - ^.layer_0110.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 145.0 + 0.0 = 145.0
DL output with Mo: L = 258.6 + 1238.4 = 1497.1
DL input+output M: L = 403.7 + 1238.4 = 1642.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f45f5ca7.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f45f5ca7.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f45f5ca7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST f45f5ca7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 40.6 sec (40.6 sec/task)
bits-train-error = 1238.4 bits (1238.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-15] Checking task f5aa3634.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39445.4 = 39458.1
DL output with Mo: L = 12.6 + 7934.2 = 7946.9
DL input+output M: L = 25.2 + 47379.7 = 47404.9

# learning a model for train pairs
2.000	
1.732	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.548	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.465	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.388	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.320	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	OUT SPE ^.layer_0.shape.size.i = ^.layer_0.shape.size.i
1.192	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.132	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.955	OUT ADD ^.layer_011 = ^.layer_0111.shape at (?,?)
0.898	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.840	IN  ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	IN  ADD ^.layer_01111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.762	OUT SPE ^.layer_0.pos = '(0, 1)
0.738	OUT SPE ^.size.i = 3
0.715	OUT SPE ^.size.j = ^.layer_0111.shape.size.i + 2
0.695	OUT SPE ^.layer_0.shape.mask = applySym(rotate90, ^.layer_0111.shape.mask)
0.679	OUT SPE ^.layer_01.shape.size.i = ^.layer_0111.shape.size.i
0.666	OUT SPE ^.layer_0.shape.size.j = ^.layer_0.shape.size.i - 1
0.656	OUT SPE ^.layer_01.pos.j = ^.layer_01111.pos.i / '3
0.645	OUT SPE ^.layer_01.shape.size.j = area(^.layer_011.shape) - ^.layer_0111.pos.j - ^.layer_011.pos.j
0.635	OUT SPE ^.layer_011.pos.i = min(^.layer_0111.pos.i, ^.layer_01111.pos.i)
0.626	OUT SPE ^.layer_01.pos.i = right(^.layer_0) - ^.layer_0111.shape.size.j
0.617	OUT SPE ^.color = black
0.615	IN  SPE ^.color = black
0.135	
0.134	IN  DEL ^.layer_01111111
0.133	IN  DEL ^.layer_0111111
0.133	IN  DEL ^.layer_011111
0.133	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (3,^.layer_0111.shape.size.i + 2) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.i - 1) and color ? and mask applySym(rotate90, ^.layer_0111.shape.mask) at '(0, 1)
  _01: a rectangle with size (^.layer_0111.shape.size.i,area(^.layer_011.shape) - ^.layer_0111.pos.j - ^.layer_011.pos.j) and color ? and mask ? at (right(^.layer_0) - ^.layer_0111.shape.size.j,^.layer_01111.pos.i / '3)
  _011: ^.layer_0111.shape at (min(^.layer_0111.pos.i, ^.layer_01111.pos.i),?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 212.8 + 18965.6 = 19178.5
DL output with Mo: L = 379.8 + 643.1 = 1022.9
DL input+output M: L = 592.7 + 19608.7 = 20201.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (3,^.layer_0111.shape.size.i + 2) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.i - 1) and color ? and mask applySym(rotate90, ^.layer_0111.shape.mask) at '(0, 1)
  _01: a rectangle with size (^.layer_0111.shape.size.i,area(^.layer_011.shape) - ^.layer_0111.pos.j - ^.layer_011.pos.j) and color ? and mask ? at (right(^.layer_0) - ^.layer_0111.shape.size.j,^.layer_01111.pos.i / '3)
  _011: ^.layer_0111.shape at (min(^.layer_0111.pos.i, ^.layer_01111.pos.i),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.9 + 20.0 = 158.9
DL output with Mo: L = 379.8 + 643.1 = 1022.9
DL input+output M: L = 518.7 + 663.1 = 1181.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f5aa3634.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f5aa3634.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f5aa3634.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST f5aa3634.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.9 sec (18.9 sec/task)
bits-train-error = 643.1 bits (643.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-14] Checking task f5c89df1.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 15359.4 = 15372.0
DL output with Mo: L = 12.6 + 18410.5 = 18423.1
DL input+output M: L = 25.2 + 33769.9 = 33795.1

# learning a model for train pairs
2.000	
1.339	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.747	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.660	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.572	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.537	OUT SPE ^.size = ^.size
0.526	IN  SPE ^.layer_0.shape.color = cyan
0.516	IN  SPE ^.layer_01.shape.color = red
0.504	OUT SPE ^.layer_01.shape.size.j = average(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + 2
0.495	OUT SPE ^.layer_0.shape.color = ^.layer_0.shape.color
0.486	OUT SPE ^.layer_01.shape.color = cyan
0.478	OUT SPE ^.layer_01.pos.j = center(^.layer_01) - 3
0.469	OUT SPE ^.layer_01.pos.i = middle(^.layer_01) / '2
0.461	OUT SPE ^.layer_0.pos.i = ^.layer_011.pos.j / '2
0.454	OUT SPE ^.layer_0.pos.j = middle(^.layer_01) - ^.layer_01.pos.j - ^.layer_0.pos.j
0.448	IN  SPE ^.layer_01.shape.mask = Full
0.442	IN  SPE ^.layer_011.shape.mask = Full
0.437	IN  SPE ^.color = black
0.433	OUT SPE ^.color = black
0.158	
0.158	IN  GEN ^.layer_01.shape.color = ?
0.157	IN  GEN ^.layer_0.shape.color = ?
0.157	IN  GEN ^.layer_011.shape.mask = ?
0.157	IN  GEN ^.layer_01.shape.mask = ?
0.157	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_011.pos.j / '2,middle(^.layer_01) - ^.layer_01.pos.j - ^.layer_0.pos.j)
  _01: a rectangle with size (?,average(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + 2) and color cyan and mask ? at (middle(^.layer_01) / '2,center(^.layer_01) - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 98.0 + 4227.9 = 4326.0
DL output with Mo: L = 234.4 + 2554.1 = 2788.5
DL input+output M: L = 332.5 + 6782.0 = 7114.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_011.pos.j / '2,middle(^.layer_01) - ^.layer_01.pos.j - ^.layer_0.pos.j)
  _01: a rectangle with size (?,average(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + 2) and color cyan and mask ? at (middle(^.layer_01) / '2,center(^.layer_01) - 3)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 234.4 + 2554.1 = 2788.5
DL input+output M: L = 323.7 + 2554.1 = 2877.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f5c89df1.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f5c89df1.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f5c89df1.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST f5c89df1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 2554.1 bits (2554.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-13] Checking task f823c43c.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 55838.7 = 55851.3
DL output with Mo: L = 12.6 + 31232.7 = 31245.3
DL input+output M: L = 25.2 + 87071.4 = 87096.7

# learning a model for train pairs
2.000	
1.910	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.865	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.838	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.819	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.797	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.783	OUT SPE ^.size = ^.size
1.770	IN  SPE ^.layer_0.shape.color = pink
1.754	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.739	IN  ADD ^.layer_00 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.726	OUT ADD ^.layer_0 = a point with color ? at (?,?)
1.714	OUT ADD ^.layer_01 = a point with color ? at (?,?)
1.701	OUT ADD ^.layer_011 = a point with color ? at (?,?)
1.689	OUT ADD ^.layer_0111 = a point with color ? at (?,?)
0.939	
0.939	IN  DEL ^.layer_0
0.938	IN  DEL ^.layer_011111
0.938	IN  DEL ^.layer_01111
0.937	IN  DEL ^.layer_0111
0.937	IN  DEL ^.layer_011
0.936	IN  DEL ^.layer_01
0.936	IN  DEL ^.layer_00
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 191.5 + 41855.3 = 42046.7
DL output with Mo: L = 73.8 + 29163.5 = 29237.2
DL input+output M: L = 265.2 + 71018.7 = 71284.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 73.8 + 29163.5 = 29237.2
DL input+output M: L = 86.4 + 29163.5 = 29249.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f823c43c.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f823c43c.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST f823c43c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.3 sec (60.3 sec/task)
bits-train-error = 29163.5 bits (29163.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-12] Checking task f83cb3f6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25608.4 = 25621.0
DL output with Mo: L = 12.6 + 20671.6 = 20684.2
DL input+output M: L = 25.2 + 46280.0 = 46305.3

# learning a model for train pairs
2.000	
1.608	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.293	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.104	OUT ADD ^.layer_00 = ^.layer_0
1.054	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.988	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.954	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.921	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.888	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	OUT ADD ^.layer_01111 = a point with color ? at (?,?)
0.826	OUT SPE ^.size = ^.size
0.802	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.779	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.755	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.732	IN  ADD ^.layer_0111111 = a point with color ? at (?,?)
0.708	IN  ADD ^.layer_01111111 = a point with color ? at (?,?)
0.700	OUT SPE ^.layer_01111.shape = ^.layer_01111.shape
0.692	OUT SPE ^.layer_0111.shape.color = ^.layer_0111.shape.color
0.684	OUT SPE ^.layer_011.shape.color = ^.layer_011.shape.color
0.676	OUT SPE ^.layer_01.shape.color = majorityColor(^.grid)
0.668	OUT SPE ^.layer_0.shape.color = ^.layer_01.shape.color
0.662	IN  SPE ^.layer_0.shape.color = cyan
0.657	OUT SPE ^.layer_0.shape.mask = Full
0.652	OUT SPE ^.layer_01.shape.mask = Full
0.645	OUT SPE ^.layer_01.pos.j = right(^.layer_01) - 2
0.637	OUT SPE ^.layer_0111.pos.i = ^.layer_0.pos.i + 1
0.629	OUT SPE ^.layer_011.pos.j = ^.layer_011.pos.j / '2
0.625	OUT SPE ^.layer_011.shape.size.i = 1
0.620	OUT SPE ^.layer_011.shape.mask = Full
0.615	OUT SPE ^.layer_0111.shape.size.i = 1
0.609	OUT SPE ^.layer_0.shape.size.j = min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
0.604	OUT SPE ^.layer_0111.shape.mask = Full
0.597	OUT SPE ^.layer_01.pos.i = ^.layer_0111111.pos.j - area(^.layer_01.shape)
0.591	OUT SPE ^.layer_01111.pos.j = ^.layer_01.pos.i - ^.layer_01111111.pos.j - ^.layer_01111.pos.j
0.586	OUT SPE ^.layer_01111.pos.i = bottom(^.layer_0) - ^.layer_01111111.pos.i - ^.layer_0111111.pos.i
0.581	OUT SPE ^.layer_01.shape.size.j = min(^.layer_01.shape.size.i, ^.layer_011.shape.size.i)
0.578	IN  SPE ^.layer_0.shape.mask = Full
0.574	OUT SPE ^.color = black
0.571	OUT SPE ^.layer_011.shape.size.j = ^.layer_01.shape.size.j - ^.layer_01111111.pos.j - ^.layer_01.pos.j
0.568	IN  SPE ^.color = black
0.105	
0.105	IN  GEN ^.layer_0.shape.color = ?
0.105	IN  GEN ^.layer_0.shape.mask = ?
0.105	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_01.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,min(^.layer_01.shape.size.i, ^.layer_011.shape.size.i)) and color majorityColor(^.grid) and mask Full at (^.layer_0111111.pos.j - area(^.layer_01.shape),right(^.layer_01) - 2)
  _011: a rectangle with size (1,^.layer_01.shape.size.j - ^.layer_01111111.pos.j - ^.layer_01.pos.j) and color ^.layer_011.shape.color and mask Full at (?,^.layer_011.pos.j / '2)
  _0111: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (^.layer_0.pos.i + 1,?)
  _01111: ^.layer_01111.shape at (bottom(^.layer_0) - ^.layer_01111111.pos.i - ^.layer_0111111.pos.i,^.layer_01.pos.i - ^.layer_01111111.pos.j - ^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 170.7 + 11861.2 = 12032.0
DL output with Mo: L = 507.6 + 1527.6 = 2035.3
DL input+output M: L = 678.4 + 13388.9 = 14067.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_01.shape.color and mask Full at (?,?)
  _01: a rectangle with size (?,min(^.layer_01.shape.size.i, ^.layer_011.shape.size.i)) and color majorityColor(^.grid) and mask Full at (^.layer_0111111.pos.j - area(^.layer_01.shape),right(^.layer_01) - 2)
  _011: a rectangle with size (1,^.layer_01.shape.size.j - ^.layer_01111111.pos.j - ^.layer_01.pos.j) and color ^.layer_011.shape.color and mask Full at (?,^.layer_011.pos.j / '2)
  _0111: a rectangle with size (1,?) and color ^.layer_0111.shape.color and mask Full at (^.layer_0.pos.i + 1,?)
  _01111: ^.layer_01111.shape at (bottom(^.layer_0) - ^.layer_01111111.pos.i - ^.layer_0111111.pos.i,^.layer_01.pos.i - ^.layer_01111111.pos.j - ^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 166.3 + 0.0 = 166.3
DL output with Mo: L = 507.6 + 1527.6 = 2035.3
DL input+output M: L = 673.9 + 1527.6 = 2201.5

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f83cb3f6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f83cb3f6.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f83cb3f6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST f83cb3f6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.0 sec (59.0 sec/task)
bits-train-error = 1527.6 bits (1527.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-11] Checking task f8be4b64.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 25374.8 = 25387.4
DL output with Mo: L = 12.6 + 129513.2 = 129525.8
DL input+output M: L = 25.2 + 154888.0 = 154913.2

# learning a model for train pairs
2.000	
1.818	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.635	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.455	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.294	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.144	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.002	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.879	OUT ADD ^.layer_00 = ^.layer_0
0.845	OUT ADD ^.layer_010 = ^.layer_011
0.807	OUT ADD ^.layer_001 = ^.layer_01
0.773	IN  ADD ^.layer_0110 = a point with color ? at (?,?)
0.746	OUT ADD ^.layer_000 = ^.layer_0111
0.635	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.619	IN  ADD ^.layer_01111 = a point with color ? at (?,?)
0.609	IN  SPE ^.layer_0.shape.mask = Odd Checkboard
0.597	IN  SPE ^.layer_01.shape.color = green
0.589	IN  SPE ^.layer_0.shape.color = green
0.580	IN  SPE ^.layer_011.shape.color = green
0.573	OUT SPE ^.size = ^.size
0.566	OUT SPE ^.layer_01.shape.size.i = ^.size.i
0.563	IN  SPE ^.color = black
0.561	OUT SPE ^.layer_01.pos.i = '0
0.559	OUT SPE ^.layer_0111.pos.j = '0
0.557	OUT SPE ^.layer_0.pos.j = ^.layer_01.pos.j + 1
0.556	OUT SPE ^.layer_0.shape.mask = Full
0.555	OUT SPE ^.layer_01.shape.size.j = 1
0.553	OUT SPE ^.layer_01.pos.j = min(^.layer_01111.pos.j, ^.layer_0110.pos.j)
0.552	OUT SPE ^.layer_01.shape.mask = Full
0.236	
0.236	IN  GEN ^.layer_0.shape.mask = ?
0.235	IN  GEN ^.layer_011.shape.color = ?
0.235	IN  GEN ^.layer_0.shape.color = ?
0.235	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_0111
  _00: ^.layer_0
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_01.pos.j + 1)
  _010: ^.layer_011
  _01: a rectangle with size (^.size.i,1) and color ? and mask Full at ('0,min(^.layer_01111.pos.j, ^.layer_0110.pos.j))
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 160.4 + 8034.0 = 8194.3
DL output with Mo: L = 258.9 + 29467.6 = 29726.6
DL input+output M: L = 419.3 + 37501.6 = 37920.9

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_0111
  _00: ^.layer_0
  _001: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,^.layer_01.pos.j + 1)
  _010: ^.layer_011
  _01: a rectangle with size (^.size.i,1) and color ? and mask Full at ('0,min(^.layer_01111.pos.j, ^.layer_0110.pos.j))
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 148.3 + 0.0 = 148.3
DL output with Mo: L = 258.9 + 29467.6 = 29726.6
DL input+output M: L = 407.2 + 29467.6 = 29874.8

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f8be4b64.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f8be4b64.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN f8be4b64.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f8be4b64.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST f8be4b64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.7 sec (59.7 sec/task)
bits-train-error = 29467.6 bits (29467.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-10] Checking task f9a67cb5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 39201.3 = 39213.9
DL output with Mo: L = 12.6 + 76303.5 = 76316.1
DL input+output M: L = 25.2 + 115504.8 = 115530.0

# learning a model for train pairs
2.000	
1.562	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.280	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.055	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.848	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.679	OUT ADD ^.layer_01 = ^.layer_01.shape at (?,?)
0.525	OUT ADD ^.layer_011 = ^.layer_01
0.389	OUT ADD ^.layer_0111 = ^.layer_01.shape at (?,?)
0.374	IN  ADD ^.layer_0111 = a point with color ? at (?,?)
0.366	OUT SPE ^.size = ^.size
0.358	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.351	IN  ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.347	OUT SPE ^.layer_0.pos = '(0, 0)
0.342	OUT SPE ^.layer_01.pos = ^.layer_0.pos
0.338	IN  SPE ^.layer_0.shape.color = cyan
0.334	IN  SPE ^.layer_01.shape.color = cyan
0.329	IN  SPE ^.layer_011.shape.color = cyan
0.325	IN  SPE ^.layer_01111.shape.color = cyan
0.321	IN  SPE ^.layer_011111.shape.color = cyan
0.317	OUT SPE ^.layer_0.shape.size.j = ^.size.j
0.314	IN  SPE ^.layer_0.shape.mask = Full
0.312	IN  SPE ^.layer_01.shape.mask = Full
0.309	IN  SPE ^.layer_011.shape.mask = Full
0.307	IN  SPE ^.layer_01111.shape.mask = Full
0.304	IN  SPE ^.layer_011111.shape.mask = Full
0.302	OUT SPE ^.layer_0111.pos.j = ^.layer_011111.pos.j
0.300	OUT SPE ^.layer_0.shape.color = red
0.298	OUT SPE ^.layer_0111.pos.i = ^.layer_01.pos.i * '2
0.296	IN  SPE ^.color = black
0.295	OUT SPE ^.color = black
0.079	
0.078	IN  DEL ^.layer_0111
0.078	IN  GEN ^.layer_01111.shape.color = ?
0.077	IN  DEL ^.layer_011
0.077	IN  DEL ^.layer_01111
0.077	IN  GEN ^.layer_011111.shape.color = ?
0.076	IN  GEN ^.layer_01.shape.color = ?
0.076	IN  GEN ^.layer_0.shape.color = ?
0.076	IN  GEN ^.layer_011111.shape.mask = ?
0.076	IN  GEN ^.layer_01.shape.mask = ?
0.076	IN  GEN ^.layer_0.shape.mask = ?
0.076	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j) and color red and mask ? at '(0, 0)
  _01: ^.layer_01.shape at ^.layer_0.pos
  _011: ^.layer_01
  _0111: ^.layer_01.shape at (^.layer_01.pos.i * '2,^.layer_011111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 176.0 + 8492.8 = 8668.8
DL output with Mo: L = 138.7 + 5511.2 = 5649.9
DL input+output M: L = 314.7 + 14004.0 = 14318.7

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j) and color red and mask ? at '(0, 0)
  _01: ^.layer_01.shape at ^.layer_0.pos
  _011: ^.layer_01
  _0111: ^.layer_01.shape at (^.layer_01.pos.i * '2,^.layer_011111.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 89.3 + 0.0 = 89.3
DL output with Mo: L = 138.7 + 5511.2 = 5649.9
DL input+output M: L = 227.9 + 5511.2 = 5739.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f9a67cb5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f9a67cb5.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN f9a67cb5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST f9a67cb5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.7 sec (28.7 sec/task)
bits-train-error = 5511.2 bits (5511.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-9] Checking task f9d67f8b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 1192644.0 = 1192656.6
DL output with Mo: L = 12.6 + 1175289.6 = 1175302.2
DL input+output M: L = 25.2 + 2367933.6 = 2367958.8

# learning a model for train pairs
2.000	
1.870	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.751	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.662	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.585	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.544	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.752	
0.752	IN  DEL ^.layer_01
0.752	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 944777.6 = 944841.9
DL output with Mo: L = 89.3 + 883774.3 = 883863.6
DL input+output M: L = 153.5 + 1828551.9 = 1828705.4

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 89.3 + 883774.3 = 883863.6
DL input+output M: L = 101.9 + 883774.3 = 883876.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f9d67f8b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f9d67f8b.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f9d67f8b.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN f9d67f8b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST f9d67f8b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 60.4 sec (60.4 sec/task)
bits-train-error = 883774.3 bits (883774.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-8] Checking task fafd9572.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 21235.9 = 21248.5
DL output with Mo: L = 12.6 + 21235.9 = 21248.5
DL input+output M: L = 25.2 + 42471.9 = 42497.1

# learning a model for train pairs
2.000	
1.876	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.754	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.632	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.510	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.388	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.205	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.069	OUT ADD ^.layer_0111111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.318	
0.317	IN  DEL ^.layer_01
0.316	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 64.2 + 15956.1 = 16020.3
DL output with Mo: L = 188.1 + 6507.4 = 6695.5
DL input+output M: L = 252.4 + 22463.4 = 22715.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 188.1 + 6507.4 = 6695.5
DL input+output M: L = 200.8 + 6507.4 = 6708.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fafd9572.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fafd9572.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST fafd9572.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.5 sec (59.5 sec/task)
bits-train-error = 6507.4 bits (6507.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-7] Checking task fb791726.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 3487.8 = 3500.4
DL output with Mo: L = 12.6 + 40013.4 = 40026.0
DL input+output M: L = 25.2 + 43501.1 = 43526.3

# learning a model for train pairs
2.000	
1.725	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.449	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.272	IN  ADD ^.layer_0 = a point with color ? at (?,?)
1.089	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.962	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.834	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.823	OUT ADD ^.layer_00 = ^.layer_0
0.802	IN  SPE ^.color = black
0.787	OUT SPE ^.size = tiling(^.size, 2, 2)
0.776	OUT ADD ^.layer_010 = ^.layer_01
0.768	OUT SPE ^.layer_0.pos = '(1, 0)
0.764	OUT SPE ^.layer_0.shape.color = green
0.757	OUT SPE ^.layer_0.shape.size.j = ^.size.j * '2
0.753	OUT SPE ^.layer_01.shape.color = green
0.746	OUT SPE ^.layer_01.shape.size.j = ^.size.j * '2
0.742	OUT SPE ^.layer_01.pos.j = '0
0.740	OUT SPE ^.layer_0.shape.size.i = 1
0.737	OUT SPE ^.layer_0.shape.mask = Full
0.735	OUT SPE ^.layer_01.shape.size.i = 1
0.732	OUT SPE ^.layer_01.shape.mask = Full
0.730	OUT SPE ^.layer_011.shape.size.i = 1
0.727	OUT SPE ^.layer_01.pos.i = average(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.size.i
0.724	OUT SPE ^.layer_011.shape.mask = Full
0.722	OUT SPE ^.layer_0111.shape.size.i = 1
0.719	OUT SPE ^.layer_0111.shape.mask = Full
0.717	OUT SPE ^.color = black
0.111	
0.111	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,^.size.j * '2) and color green and mask Full at '(1, 0)
  _010: ^.layer_01
  _01: a rectangle with size (1,^.size.j * '2) and color green and mask Full at (average(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.size.i,'0)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.8 + 2120.7 = 2166.5
DL output with Mo: L = 260.1 + 3677.9 = 3938.0
DL input+output M: L = 305.9 + 5798.6 = 6104.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size tiling(^.size, 2, 2) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,^.size.j * '2) and color green and mask Full at '(1, 0)
  _010: ^.layer_01
  _01: a rectangle with size (1,^.size.j * '2) and color green and mask Full at (average(^.layer_0.pos.i, ^.layer_01.pos.i) + ^.size.i,'0)
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (1,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 260.1 + 3677.9 = 3938.0
DL input+output M: L = 305.8 + 3677.9 = 3983.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fb791726.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fb791726.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fb791726.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST fb791726.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 3677.9 bits (3677.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-6] Checking task fc754716.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 2171.2 = 2183.8
DL output with Mo: L = 12.6 + 11055.6 = 11068.2
DL input+output M: L = 25.2 + 13226.8 = 13252.0

# learning a model for train pairs
2.000	
1.192	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.725	OUT SPE ^.layer_0.shape = scaleTo(coloring(^.layer_0.shape, black), ^.size - (2, 2))
0.670	OUT SPE ^.size = ^.size
0.626	IN  SPE ^.color = black
0.594	OUT SPE ^.color = majorityColor(^.grid)
0.562	OUT SPE ^.layer_0.pos = '(1, 1)
0.021	
0.021	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color majorityColor(^.grid) and layers
  _0: scaleTo(coloring(^.layer_0.shape, black), ^.size - (2, 2)) at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1182.8 = 1212.4
DL output with Mo: L = 78.6 + 0.0 = 78.6
DL input+output M: L = 108.3 + 1182.8 = 1291.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color majorityColor(^.grid) and layers
  _0: scaleTo(coloring(^.layer_0.shape, black), ^.size - (2, 2)) at '(1, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.5 + 0.0 = 29.5
DL output with Mo: L = 78.6 + 0.0 = 78.6
DL input+output M: L = 108.1 + 0.0 = 108.1

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fc754716.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fc754716.json/2: 1 1st (SUCCESS)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fc754716.json/3: 1 1st (SUCCESS)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fc754716.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST fc754716.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-5] Checking task fd096ab6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 13908.1 = 13920.7
DL output with Mo: L = 12.6 + 26624.6 = 26637.2
DL input+output M: L = 25.2 + 40532.7 = 40557.9

# learning a model for train pairs
2.000	
1.710	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.517	OUT ADD ^.layer_0 = ^.layer_0
1.366	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.214	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.063	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.908	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.792	IN  ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.705	IN  ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.619	IN  ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.581	IN  ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.549	OUT SPE ^.layer_01.shape = coloring(^.layer_0.shape, pink)
0.518	OUT SPE ^.layer_011.shape = coloring(^.layer_0.shape, cyan)
0.487	OUT SPE ^.layer_0111.shape = coloring(^.layer_0.shape, green)
0.468	OUT SPE ^.size = ^.size
0.452	OUT SPE ^.layer_01111.shape.mask = ^.layer_0.shape.mask
0.439	IN  SPE ^.color = blue
0.429	OUT SPE ^.layer_01111.shape.size = ^.layer_0.shape.size
0.418	IN  SPE ^.layer_0111.shape.mask = Odd Checkboard
0.409	IN  ADD ^.layer_011111 = a point with color ? at (?,?)
0.401	IN  SPE ^.layer_0.shape.color = yellow
0.393	OUT SPE ^.layer_0111.pos = max(^.layer_011.pos, ^.layer_0111.pos) - (0, 1)
0.384	OUT SPE ^.layer_01111.pos = corner(^.layer_0111.pos, ^.layer_01.pos) - (2, 1)
0.377	OUT SPE ^.color = ^.color
0.373	IN  SPE ^.layer_01111.shape.mask = Full
0.368	OUT SPE ^.layer_01.pos.i = ^.layer_01.pos.i / '2
0.364	OUT SPE ^.layer_011.pos.j = bottom(^.layer_0) - 3
0.360	OUT SPE ^.layer_011.pos.i = ^.layer_011111.pos.i + 1
0.356	OUT SPE ^.layer_01.pos.j = ^.layer_01111.pos.j - 2
0.029	
0.029	IN  GEN ^.color = ?
0.029	IN  GEN ^.layer_0111.shape.mask = ?
0.028	IN  GEN ^.layer_0.shape.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: coloring(^.layer_0.shape, pink) at (^.layer_01.pos.i / '2,^.layer_01111.pos.j - 2)
  _011: coloring(^.layer_0.shape, cyan) at (^.layer_011111.pos.i + 1,bottom(^.layer_0) - 3)
  _0111: coloring(^.layer_0.shape, green) at max(^.layer_011.pos, ^.layer_0111.pos) - (0, 1)
  _01111: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at corner(^.layer_0111.pos, ^.layer_01.pos) - (2, 1)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 170.5 + 4561.4 = 4732.0
DL output with Mo: L = 307.9 + 112.9 = 420.8
DL input+output M: L = 478.4 + 4674.3 = 5152.8

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: coloring(^.layer_0.shape, pink) at (^.layer_01.pos.i / '2,^.layer_01111.pos.j - 2)
  _011: coloring(^.layer_0.shape, cyan) at (^.layer_011111.pos.i + 1,bottom(^.layer_0) - 3)
  _0111: coloring(^.layer_0.shape, green) at max(^.layer_011.pos, ^.layer_0111.pos) - (0, 1)
  _01111: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at corner(^.layer_0111.pos, ^.layer_01.pos) - (2, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 155.3 + 20.0 = 175.3
DL output with Mo: L = 307.9 + 112.9 = 420.8
DL input+output M: L = 463.2 + 132.9 = 596.0

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TRAIN fd096ab6.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN fd096ab6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2
>> Trial 3

TEST fd096ab6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 39.8 sec (39.8 sec/task)
bits-train-error = 112.9 bits (112.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-4] Checking task fd4b2b02.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 9292.1 = 9304.7
DL output with Mo: L = 12.6 + 94931.3 = 94943.9
DL input+output M: L = 25.2 + 104223.4 = 104248.6

# learning a model for train pairs
2.000	
1.201	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.075	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.949	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.862	OUT ADD ^.layer_00 = ^.layer_0
0.778	OUT ADD ^.layer_011 = ^.layer_0.shape at (?,?)
0.695	OUT ADD ^.layer_010 = ^.layer_0.shape at (?,?)
0.619	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.550	OUT ADD ^.layer_0110 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.507	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.496	OUT SPE ^.layer_0.pos.i = 3
0.486	IN  SPE ^.layer_0.shape.mask = Full
0.478	IN  SPE ^.color = black
0.470	OUT SPE ^.size = ^.size
0.468	OUT SPE ^.layer_0110.shape.size.j = ^.layer_0.shape.size.i
0.467	OUT SPE ^.layer_0.shape.mask = Full
0.466	OUT SPE ^.layer_01.shape.mask = Full
0.465	OUT SPE ^.layer_0110.shape.mask = Full
0.464	OUT SPE ^.layer_0111.shape.mask = Full
0.462	OUT SPE ^.layer_0111.shape.color = green
0.461	OUT SPE ^.layer_01111.shape.color = pink
0.460	OUT SPE ^.layer_01111.shape.mask = Full
0.281	
0.281	IN  GEN ^.layer_0.shape.mask = ?
0.281	IN  GEN ^.color = ?
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (3,?)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a rectangle with size (?,^.layer_0.shape.size.i) and color ? and mask Full at (?,?)
  _011: ^.layer_0.shape at (?,?)
  _0111: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color pink and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 40.0 + 1658.8 = 1698.8
DL output with Mo: L = 213.2 + 26085.2 = 26298.4
DL input+output M: L = 253.1 + 27744.0 = 27997.2

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (3,?)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a rectangle with size (?,^.layer_0.shape.size.i) and color ? and mask Full at (?,?)
  _011: ^.layer_0.shape at (?,?)
  _0111: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color pink and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 213.2 + 26085.2 = 26298.4
DL input+output M: L = 252.0 + 26085.2 = 26337.2

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fd4b2b02.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fd4b2b02.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fd4b2b02.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST fd4b2b02.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 58.6 sec (58.6 sec/task)
bits-train-error = 26085.2 bits (26085.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-3] Checking task fe9372f3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 4299.6 = 4312.2
DL output with Mo: L = 12.6 + 27593.4 = 27606.0
DL input+output M: L = 25.2 + 31893.0 = 31918.2

# learning a model for train pairs
2.000	
1.290	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.963	OUT ADD ^.layer_00 = ^.layer_0
0.866	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.795	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.675	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.580	IN  SPE ^.layer_0.shape.mask = +-cross
0.555	IN  SPE ^.layer_0.shape.color = red
0.540	OUT SPE ^.size = ^.size
0.528	IN  SPE ^.color = black
0.524	OUT SPE ^.layer_0.shape.color = cyan
0.519	OUT ADD ^.layer_001 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.515	OUT SPE ^.layer_0111.pos.j = '0
0.507	OUT SPE ^.layer_011.pos = '(0, 0)
0.503	OUT SPE ^.layer_001.shape.color = cyan
0.499	OUT SPE ^.layer_01.shape.color = blue
0.495	OUT SPE ^.layer_011.shape.color = blue
0.491	OUT SPE ^.layer_0.pos.j = ^.layer_0.pos.j + 1
0.483	OUT SPE ^.layer_01111.pos = ^.layer_0.pos + (2, 2)
0.476	OUT SPE ^.layer_01.pos = projJ(^.layer_0.pos) + (0, 2)
0.468	OUT SPE ^.layer_011111.pos = projJ(^.layer_0.pos) + (0, 1)
0.464	OUT SPE ^.layer_0111.shape.color = blue
0.460	OUT SPE ^.layer_01111.shape.color = blue
0.457	OUT SPE ^.layer_001.pos.j = ^.layer_0.pos.j - 2
0.453	OUT SPE ^.layer_0111.pos.i = right(^.layer_0)
0.450	OUT SPE ^.layer_001.pos.i = ^.layer_0.pos.i + 1
0.448	OUT SPE ^.layer_001.shape.size.i = 1
0.445	OUT SPE ^.layer_001.shape.mask = Full
0.443	OUT SPE ^.layer_0.shape.size.j = 1
0.440	OUT SPE ^.layer_0.shape.mask = Full
0.438	OUT SPE ^.layer_011111.shape.size.j = 1
0.436	OUT SPE ^.layer_011111.shape.mask = Full
0.434	OUT SPE ^.color = black
0.226	
0.225	IN  GEN ^.layer_0.shape.mask = ?
0.224	IN  GEN ^.layer_0.shape.color = ?
0.224	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i + 1,^.layer_0.pos.j - 2)
  _0: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_0.pos.j + 1)
  _01: a rectangle with size (?,?) and color blue and mask ? at projJ(^.layer_0.pos) + (0, 2)
  _011: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (right(^.layer_0),'0)
  _01111: a rectangle with size (?,?) and color blue and mask ? at ^.layer_0.pos + (2, 2)
  _011111: a rectangle with size (?,1) and color ? and mask Full at projJ(^.layer_0.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask +-cross at (?,?)

DL input  with Mi: L = 47.6 + 896.9 = 944.5
DL output with Mo: L = 346.4 + 5586.6 = 5933.0
DL input+output M: L = 394.0 + 6483.5 = 6877.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i + 1,^.layer_0.pos.j - 2)
  _0: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_0.pos.j + 1)
  _01: a rectangle with size (?,?) and color blue and mask ? at projJ(^.layer_0.pos) + (0, 2)
  _011: a rectangle with size (?,?) and color blue and mask ? at '(0, 0)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (right(^.layer_0),'0)
  _01111: a rectangle with size (?,?) and color blue and mask ? at ^.layer_0.pos + (2, 2)
  _011111: a rectangle with size (?,1) and color ? and mask Full at projJ(^.layer_0.pos) + (0, 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 0.0 = 38.8
DL output with Mo: L = 346.4 + 5586.6 = 5933.0
DL input+output M: L = 385.3 + 5586.6 = 5971.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN fe9372f3.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN fe9372f3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TEST fe9372f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 54.9 sec (54.9 sec/task)
bits-train-error = 5586.6 bits (5586.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-2] Checking task fea12743.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 74041.8 = 74054.5
DL output with Mo: L = 12.6 + 74041.8 = 74054.5
DL input+output M: L = 25.2 + 148083.7 = 148108.9

# learning a model for train pairs
2.000	
1.609	IN  ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.428	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.272	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.137	OUT ADD ^.layer_011 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.998	OUT ADD ^.layer_0111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.906	OUT ADD ^.layer_01111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.874	OUT SPE ^.layer_011.pos.i = 1
0.851	OUT ADD ^.layer_011111 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.774	OUT SPE ^.layer_01.shape.size = tiling('(2, 2), 2, 2)
0.166	
0.165	IN  DEL ^.layer_0
TIMEOUT

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size tiling('(2, 2), 2, 2) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (1,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 38.8 + 45023.3 = 45062.2
DL output with Mo: L = 188.6 + 12041.7 = 12230.3
DL input+output M: L = 227.5 + 57065.0 = 57292.5

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size tiling('(2, 2), 2, 2) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (1,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers

DL input  with Mi: L = 12.6 + 0.0 = 12.6
DL output with Mo: L = 188.6 + 12041.7 = 12230.3
DL input+output M: L = 201.2 + 12041.7 = 12242.9

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fea12743.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fea12743.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1

TRAIN fea12743.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1

TEST fea12743.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 59.6 sec (59.6 sec/task)
bits-train-error = 12041.7 bits (12041.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-1] Checking task ff72ca3e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 12.6 + 6638.2 = 6650.8
DL output with Mo: L = 12.6 + 48512.3 = 48524.9
DL input+output M: L = 25.2 + 55150.5 = 55175.7

# learning a model for train pairs
2.000	
1.229	OUT ADD ^.layer_0 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.104	IN  ADD ^.layer_0 = a point with color ? at (?,?)
0.975	IN  ADD ^.layer_01 = a point with color ? at (?,?)
0.914	OUT ADD ^.layer_01 = a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	IN  SPE ^.layer_0.shape.color = grey
0.847	IN  SPE ^.layer_01.shape.color = yellow
0.815	OUT ADD ^.layer_00 = ^.layer_0
0.799	OUT SPE ^.size = ^.size
0.784	IN  SPE ^.color = black
0.779	OUT SPE ^.layer_01.shape.color = red
0.777	OUT SPE ^.layer_0.shape.mask = Full
0.773	OUT SPE ^.layer_0.pos.j = average(^.layer_0.pos.i, ^.layer_01.pos.i) + 1
0.770	OUT SPE ^.layer_01.shape.mask = Full
0.768	OUT SPE ^.color = black
0.112	
0.111	IN  GEN ^.layer_01.shape.color = ?
0.111	IN  GEN ^.layer_0.shape.color = ?
0.111	IN  GEN ^.color = ?

# Learned model (decriptive, before pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i) + 1)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color yellow at (?,?)

DL input  with Mi: L = 52.4 + 4366.6 = 4419.0
DL output with Mo: L = 116.1 + 4912.9 = 5029.0
DL input+output M: L = 168.5 + 9279.5 = 9448.0

# Learned model (predictive, after pruning):
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,average(^.layer_0.pos.i, ^.layer_01.pos.i) + 1)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 45.6 + 0.0 = 45.6
DL output with Mo: L = 116.1 + 4912.9 = 5029.0
DL input+output M: L = 161.8 + 4912.9 = 5074.7

# train input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ff72ca3e.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ff72ca3e.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ff72ca3e.json/3: 0 - (FAILURE)

## instance 4

> Output prediction from input (up to 3 trials):
>> Trial 1
>> Trial 2

TRAIN ff72ca3e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST ff72ca3e.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.6 sec (7.6 sec/task)
bits-train-error = 4912.9 bits (4912.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00


## performance measures averaged over 400 tasks
runtime-learning = 13842.2 sec (34.6 sec/task)
bits-train-error = 10644213.0 bits (26610.5 bits/task)
acc-train-micro = 40.10 tasks (10.02%)
acc-train-macro = 35.00 tasks (8.75%)
acc-train-mrr = 0.09
acc-test-micro = 24.50 tasks (6.12%)
acc-test-macro = 24.00 tasks (6.00%)
acc-test-mrr = 0.06

// Profiling...
#calls	#calls/s	Time (s)	Percentage	Section
//      1537	  376623.4	    0.0	  0.0%	Model2.model_refinements_prune
//     12203	  604138.8	    0.0	  0.0%	Model2.shape_refinements
//    112345	  253809.6	    0.4	  0.0%	Grid.split_part
//     14022	   19960.8	    0.7	  0.0%	Model2.defs_refinements/first/by_path
//     14022	    6777.9	    2.1	  0.0%	Model2.defs_refinements/val_matrix
//      4627	    2185.8	    2.1	  0.0%	Model2.write_grid
//      5841	    2116.2	    2.8	  0.0%	Grid.segment_by_color
//      1782	     321.4	    5.5	  0.0%	Model2.apply_model
//   1209893	  136999.5	    8.8	  0.1%	Grid.points
// 216624967	 2459333.0	   88.1	  0.6%	Model2.parse_grid/seq
//   2809662	   16858.5	  166.7	  1.2%	Grid.rectangles
//     14022	      75.7	  185.3	  1.3%	Model2.defs_expressions
//     14007	      37.0	  378.2	  2.7%	Model2.defs_refinements/others
// 220602671	  259995.3	  848.5	  6.1%	Model2.parse_layers/seq
//     14022	       5.2	 2718.6	 19.6%	Model2.defs_refinements/first/by_expr
//     14022	       4.5	 3107.8	 22.4%	Model2.defs_refinements
//      7011	       2.3	 3107.9	 22.4%	Model2.model_refinements_build
//  12139195	    1140.5	10643.7	 76.9%	Model2.read_grid/first_parses
//  13356736	    1246.4	10716.2	 77.4%	Model2.read_grid
//   1194928	     111.3	10732.5	 77.5%	Model2.read_grid_pairs
//       400	       0.0	13842.2	100.0%	Model2.learn_model
//       400	       0.0	13847.8	100.0%	Test.print_learned_model

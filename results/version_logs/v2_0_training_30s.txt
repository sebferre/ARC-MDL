## alpha = 10.
## max_nb_parse = 512
## max_parse_dl_factor = 3.
## max_nb_shape_parse = 16
## max_nb_diff = 3
## max_nb_grid_reads = 3
## beam_width = 1
## refine_degree = 20
## options
alpha = 10.0
mode = training
timeout = 30

=====================================
[-400] Checking task 007bbfb7.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3344.2 = 3353.2
DL output with Mo: L = 9.0 + 18763.5 = 18772.4
DL input+output M: L = 17.9 + 22107.7 = 22125.6

# learning a model for train pairs
22125.6	
10332.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9580.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9102.2	OUT DEF: layer[0].pos={layer[0].pos}
8833.2	OUT DEF: color={color}
8600.4	OUT DEF: layer[0].color={layer[0].color}
8538.9	OUT DEF: size=(?,?)
8111.2	OUT DEF: size.i=9
7683.4	OUT DEF: size.j=9
7622.0	OUT DEF: layer[0].size=(?,?)
7194.2	OUT DEF: layer[0].size.j=9
7132.8	IN  DEF: size=(?,?)
6860.3	IN  DEF: size.i=3
6587.9	IN  DEF: size.j=3
6526.5	IN  DEF: layer[0].pos=(?,?)
6380.7	IN  DEF: layer[0].pos.j=0
6319.3	IN  DEF: layer[0].size=(?,?)
6046.8	IN  DEF: layer[0].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size (?,9) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,0) with size (?,3) and color ? and mask ?

DL input  with Mi: L = 46.6 + 1444.7 = 1491.3
DL output with Mo: L = 49.8 + 4505.8 = 4555.6
DL input+output M: L = 96.4 + 5950.4 = 6046.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 110111110
diff: 
delta:
   (25.8 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color orange and mask 110110000111111000110110000110110110111111111110110110110110000111111000110110000
diff: 
delta:
   (92.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 110111110
diff: 
delta:
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,0) with size (1,1) and color black and mask full
diff:   layer[0].size.j
delta: (2,0)=0 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (2,0) with size (1,1) and color black and mask full
diff:   layer[0].size.j
delta: (0,0)=0 
! 34 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101111010
diff: 
delta:
   (32.3 bits)
data: a background with size (9,9) and color yellow and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 111101111111111111111010111111111111111111111111111111101111101111111111010111010
diff: 
delta:
   (92.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101111010
diff: 
delta:
! 62 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
diff: 
delta: (0,1)=0  (2,1)=4 
! 19 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 10011111
diff: 
delta:
   (32.3 bits)
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 10111010011111011111111111010111111011111111111111111111111111111111111111111111
diff: 
delta:
   (92.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 10011111
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,2) with size (2,1) and color red and mask full
diff:   layer[0].size.j  layer[0].pos.j
delta: (2,0)=2 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,1) and color red and mask full
diff:   layer[0].size.j
delta: (1,2)=2  (2,2)=2 
! 27 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color pink and mask 110001011
diff: 
delta:
   (25.8 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color pink and mask 110110000001001000011011000000000110000000001000000011000110110000001001000011011
diff: 
delta:
   (92.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color pink and mask 110001011
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 1110100
diff: 
delta:
! 50 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,1) with size (1,2) and color black and mask full
diff:   layer[0].size.j  layer[0].pos.j
delta: (0,2)=0  (2,0)=0 
! 50 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (2,3) and color black and mask 1111
diff: 
delta:
   (28.2 bits)
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (1,0) with size (8,9) and color black and mask 1001111111111111000000111111111111111111111111111111001001001111111111
diff: 
delta:
   (82.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (2,3) and color black and mask 1111
diff: 
delta:
! 50 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color red and mask full
diff: 
delta: (2,1)=2  (2,2)=2 
! 25 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 11101101
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,1) with size (3,2) and color black and mask 100101
diff:   layer[0].size.j  layer[0].pos.j
delta:
! 41 wrong pixels (generated / expected)

TEST 007bbfb7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4505.8 bits (4505.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-399] Checking task 00d62c1b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27174.0 = 27183.0
DL output with Mo: L = 9.0 + 36411.1 = 36420.1
DL input+output M: L = 17.9 + 63585.1 = 63603.1

# learning a model for train pairs
63603.1	
45596.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
27763.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21744.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16050.5	OUT DEF: layer[0]={layer[0]}
15076.7	OUT DEF: size={size}
14808.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14578.1	OUT DEF: layer[01].color=yellow
14347.2	IN  DEF: layer[0].color=green
14230.1	OUT DEF: layer[01].mask=full
14113.0	OUT DEF: layer[011].mask=full
14038.2	OUT DEF: color=black
13963.5	IN  DEF: color=black
13902.0	OUT DEF: layer[01].pos=(?,?)
13840.6	OUT DEF: layer[01].size=(?,?)
13779.1	OUT DEF: layer[011].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,?) and color yellow and mask full
  [011]: a rectangle at (?,?) with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color green and mask ?

DL input  with Mi: L = 26.0 + 8844.3 = 8870.3
DL output with Mo: L = 56.9 + 4851.9 = 4908.8
DL input+output M: L = 83.0 + 13696.2 = 13779.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 100101001010010
diff: 
delta:
   (57.7 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 100101001010010
  [01]: a rectangle at (2,2) with size (1,1) and color yellow and mask full
  [011]: a rectangle at (3,3) with size (1,1) and color yellow and mask full
diff: 
delta:
   (30.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 100101001010010
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color green and layers
  [0]: a rectangle at (0,0) with size (6,6) and color black and mask 111111110111101011110101111011111111
diff:   color  layer[0].color
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,2) with size (1,1) and color green and mask full
diff: 
delta: (2,1)=3  (2,3)=3  (3,2)=3  (3,4)=3  (4,3)=3 
! 11 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (7,6) and color green and mask 10000111011010101000010001001010000101
diff: 
delta:
   (90.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (7,6) and color green and mask 10000111011010101000010001001010000101
  [01]: a rectangle at (4,6) with size (1,1) and color yellow and mask full
  [011]: a rectangle at (5,7) with size (5,3) and color black and mask full
diff: 
delta:
   (41.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (7,6) and color green and mask 10000111011010101000010001001010000101
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,2) with size (1,3) and color green and mask full
diff: 
delta: (1,2)=3  (1,4)=3  (2,3)=3  (2,5)=3  (3,2)=3  (3,6)=3  (4,5)=3  (4,7)=3  (5,3)=3  (5,5)=3  (5,6)=3  (7,3)=3 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (3,1) and color green and mask full
diff: 
delta: (1,2)=3  (1,4)=3  (2,3)=3  (2,5)=3  (3,2)=3  (3,6)=3  (4,5)=3  (4,7)=3  (5,5)=3  (5,6)=3  (6,2)=3  (6,4)=3 
! 17 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color green and mask 100000000010110000001001000001001000011001000101001001010110110000010000000100000
diff: 
delta:
   (131.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color green and mask 100000000010110000001001000001001000011001000101001001010110110000010000000100000
  [01]: a rectangle at (3,4) with size (4,2) and color yellow and mask full
  [011]: a rectangle at (3,7) with size (1,1) and color yellow and mask full
diff: 
delta:
   (39.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color green and mask 100000000010110000001001000001001000011001000101001001010110110000010000000100000
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (4,1) and color green and mask full
diff: 
delta: (0,5)=3  (1,4)=3  (2,1)=3  (2,2)=3  (2,4)=3  (2,5)=3  (2,7)=3  (3,0)=3  (3,6)=3  (3,8)=3  (4,6)=3  (4,7)=3  (5,6)=3  (6,6)=3  (7,4)=3  (7,5)=3  (7,7)=3  (8,8)=3 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,6) with size (4,1) and color green and mask full
diff: 
delta: (0,5)=3  (1,4)=3  (2,1)=3  (2,2)=3  (2,4)=3  (2,5)=3  (2,7)=3  (3,0)=3  (3,3)=3  (3,8)=3  (4,3)=3  (4,7)=3  (5,3)=3  (6,3)=3  (7,4)=3  (7,5)=3  (7,7)=3  (8,8)=3 
! 31 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (9,8) and color green and mask 1000100101010100110011000100100001001111111001010010000100100001111
diff: 
delta:
   (122.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (9,8) and color green and mask 1000100101010100110011000100100001001111111001010010000100100001111
  [01]: a rectangle at (2,3) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (7,8) with size (1,1) and color yellow and mask full
diff: 
delta: (8,4)=4 
   (57.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (9,8) and color green and mask 1000100101010100110011000100100001001111111001010010000100100001111
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,4) with size (15,12) and color green and mask 100001000000100101111000010011001000001001001100100001110000000000010000111111110000100000010000100000010000100000010001100000010000111111110000000001010000000001101111000000010000
diff: 
delta: (3,18)=3  (9,2)=3  (11,17)=3  (13,17)=3  (14,16)=3  (14,17)=3  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
   (481.4 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,4) with size (15,12) and color green and mask 100001000000100101111000010011001000001001001100100001110000000000010000111111110000100000010000100000010000100000010001100000010000111111110000000001010000000001101111000000010000
  [01]: a rectangle at (5,9) with size (4,6) and color yellow and mask full
  [011]: a rectangle at (14,15) with size (3,3) and color green and mask full
diff: 
delta: (2,8)=4  (3,9)=4  (3,18)=3  (9,2)=3  (11,17)=3  (12,8)=4  (12,9)=4  (13,8)=4  (13,9)=4  (13,17)=3  (15,16)=4  (16,12)=3  (17,13)=3 
   (315.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,4) with size (15,12) and color green and mask 100001000000100101111000010011001000001001001100100001110000000000010000111111110000100000010000100000010000100000010001100000010000111111110000000001010000000001101111000000010000
diff: 
delta: (3,18)=3  (9,2)=3  (11,17)=3  (13,17)=3  (14,16)=3  (14,17)=3  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (12,13) with size (5,5) and color green and mask 1110010100111001001000001
diff: 
delta: (1,8)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3  (3,18)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,8)=3  (5,15)=3  (6,4)=3  (6,8)=3  (6,15)=3  (7,8)=3  (7,15)=3  (8,8)=3  (8,15)=3  (9,2)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (10,8)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,15)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,10)=3  (13,7)=3  (13,10)=3  (13,11)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (15,10)=3  (16,12)=3  (17,13)=3 
! 91 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,8) with size (9,1) and color green and mask full
diff: 
delta: (1,8)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,9)=3  (2,10)=3  (3,10)=3  (3,18)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,15)=3  (6,4)=3  (6,15)=3  (7,15)=3  (8,15)=3  (9,2)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (11,9)=3  (11,10)=3  (11,15)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,10)=3  (12,13)=3  (13,7)=3  (13,10)=3  (13,11)=3  (13,14)=3  (13,17)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,15)=3  (14,16)=3  (14,17)=3  (15,10)=3  (15,15)=3  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
! 93 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,1) with size (13,17) and color green and mask 110000010111110001011000001000111111000000010001000100000000100011111000000001000100000000000010001000000000000111110000000000000000011101111100000000100100001000000000110111110100000000000000110100000000000000010
diff: 
delta: (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=3  (15,11)=3  (16,7)=3  (16,11)=3  (17,7)=3  (17,11)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3 
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (15,6) with size (4,6) and color green and mask 111110100010100010111111
diff: 
delta: (1,2)=3  (2,1)=3  (2,3)=3  (2,4)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,11)=3  (4,4)=3  (4,9)=3  (4,12)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (6,16)=3  (6,17)=3  (7,13)=3  (7,17)=3  (8,13)=3  (8,17)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,17)=3  (10,9)=3  (10,13)=3  (10,17)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,9)=3  (12,13)=3  (12,14)=3  (12,15)=3  (12,16)=3  (12,17)=3  (13,2)=3  (13,8)=3  (13,9)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3 
! 100 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,13) with size (7,1) and color green and mask full
diff: 
delta: (1,2)=3  (2,1)=3  (2,3)=3  (2,4)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,11)=3  (4,4)=3  (4,9)=3  (4,12)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,14)=3  (6,15)=3  (6,16)=3  (6,17)=3  (7,17)=3  (8,17)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,17)=3  (10,9)=3  (10,17)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,9)=3  (12,14)=3  (12,15)=3  (12,16)=3  (12,17)=3  (13,2)=3  (13,8)=3  (13,9)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=3  (15,11)=3  (16,7)=3  (16,11)=3  (17,7)=3  (17,11)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3 
! 108 wrong pixels (generated / expected)

TEST 00d62c1b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4851.9 bits (4851.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-398] Checking task 017c7c7b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4725.7 = 4734.7
DL output with Mo: L = 9.0 + 6695.2 = 6704.1
DL input+output M: L = 17.9 + 11420.9 = 11438.8

# learning a model for train pairs
11438.8	
6912.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4027.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3765.5	OUT DEF: layer[0].pos={layer[0].pos}
3627.5	OUT DEF: layer[0].color=red
3489.5	IN  DEF: layer[0].color=blue
3443.9	OUT DEF: color=black
3398.3	IN  DEF: color=black
3363.3	OUT DEF: size=(?,?)
3108.8	OUT DEF: size.i=9
2944.0	OUT DEF: size.j={size.j}
2908.9	OUT DEF: layer[0].size=(?,?)
2654.4	OUT DEF: layer[0].size.i=9
2501.6	OUT DEF: layer[0].size.j={layer[0].size.j}
2466.6	IN  DEF: size=(?,?)
2246.0	IN  DEF: size.i=6
2083.4	IN  DEF: size.j=3
2048.4	IN  DEF: layer[0].pos=(?,?)
1931.7	IN  DEF: layer[0].pos.i=0
1844.1	IN  DEF: layer[0].pos.j=0
1809.1	IN  DEF: layer[0].size=(?,?)
1588.5	IN  DEF: layer[0].size.i=6

# Learned model:
CONSTRUCT (Mo)
a background with size (9,{size.j}) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (9,{layer[0].size.j}) and color red and mask ?
WHERE (Mi)
a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,?) and color blue and mask ?

DL input  with Mi: L = 50.6 + 702.7 = 753.4
DL output with Mo: L = 45.5 + 789.7 = 835.2
DL input+output M: L = 96.2 + 1492.4 = 1588.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 11010110010011010
diff: 
delta:
   (25.8 bits)
data: a background with size (9,3) and color black and layers
  [0]: a rectangle at (0,0) with size (9,3) and color red and mask 10110010011010110010011010
diff: 
delta:
   (29.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 11010110010011010
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,1) with size (6,1) and color blue and mask full
diff:   layer[0].pos.j
delta: (1,0)=1  (3,2)=1  (5,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 101010101010101010
diff: 
delta:
   (25.8 bits)
data: a background with size (9,3) and color black and layers
  [0]: a rectangle at (0,0) with size (9,3) and color red and mask 10101010101010101010101010
diff: 
delta:
   (29.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 101010101010101010
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,2) and color blue and mask 101110101110
diff: 
delta:
   (18.6 bits)
data: a background with size (9,3) and color black and layers
  [0]: a rectangle at (0,0) with size (9,2) and color red and mask 101110101110101110
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,2) and color blue and mask 101110101110
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,1) with size (6,1) and color blue and mask full
diff:   layer[0].pos.j
delta: (1,0)=1  (4,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 10010111010010111
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST 017c7c7b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 789.7 bits (789.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-397] Checking task 025d127b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6899.0 = 6908.0
DL output with Mo: L = 9.0 + 6899.0 = 6908.0
DL input+output M: L = 17.9 + 13798.0 = 13816.0

# learning a model for train pairs
13816.0	
10107.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6507.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5650.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4832.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4449.9	OUT DEF: size={size}
4356.9	OUT DEF: layer[0].color={layer[0].color}
4263.9	OUT DEF: layer[01].color={layer[01].color}
4232.9	OUT DEF: color=black
4201.8	IN  DEF: color=black
4180.0	OUT DEF: layer[0].pos=(?,?)
4086.2	OUT DEF: layer[0].pos.i={layer[0].pos.i}
3999.2	OUT DEF: layer[0].pos.j=3
3977.5	OUT DEF: layer[0].size=(?,?)
3900.1	OUT DEF: layer[0].size.i={layer[0].size.i}
3824.2	OUT DEF: layer[0].size.j={layer[0].size.i}
3798.5	OUT DEF: layer[0].pos.j={layer[0].pos.j + 1}
3776.7	OUT DEF: layer[01].pos=(?,?)
3682.8	OUT DEF: layer[01].pos.i={layer[01].pos.i}
3599.6	OUT DEF: layer[01].pos.j={layer[01].pos.j + 1}
3577.8	OUT DEF: layer[01].size=(?,?)
3450.3	OUT DEF: layer[01].size.j={layer[01].size.j - 1}
3326.5	OUT DEF: layer[01].size.i={layer[01].size.i}
3304.7	IN  DEF: size=(?,?)
3136.9	IN  DEF: size.j=9
3115.1	IN  DEF: layer[0].pos=(?,?)
3026.4	IN  DEF: layer[0].pos.j=2
3004.6	IN  DEF: layer[0].size=(?,?)
2982.8	IN  DEF: layer[01].pos=(?,?)
2891.2	IN  DEF: layer[01].pos.i=1
2802.5	IN  DEF: layer[01].pos.j=1
2780.7	IN  DEF: layer[01].size=(?,?)
2645.1	IN  DEF: layer[01].size.i=5

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},{layer[0].pos.j + 1}) with size ({layer[0].size.i},{layer[0].size.i}) and color {layer[0].color} and mask ?
  [01]: a rectangle at ({layer[01].pos.i},{layer[01].pos.j + 1}) with size ({layer[01].size.i},{layer[01].size.j - 1}) and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (?,9) and color black and layers
  [0]: a rectangle at (?,2) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (1,1) with size (5,?) and color ? and mask ?

DL input  with Mi: L = 78.9 + 1698.4 = 1777.4
DL output with Mo: L = 84.8 + 782.9 = 867.7
DL input+output M: L = 163.7 + 2481.3 = 2645.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (7,2) with size (3,4) and color red and mask 111010010111
  [01]: a rectangle at (1,1) with size (5,6) and color pink and mask 111000100100010010001001000111
diff: 
delta:
   (90.3 bits)
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (7,3) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (1,2) with size (5,5) and color pink and mask 1110010100100100100100111
diff: 
delta:
   (38.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (7,2) with size (3,4) and color red and mask 111010010111
  [01]: a rectangle at (1,1) with size (5,6) and color pink and mask 111000100100010010001001000111
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (7,2) with size (1,3) and color red and mask full
  [01]: a rectangle at (1,1) with size (5,6) and color pink and mask 111000100100010010001001000111
diff: 
delta: (8,2)=2  (8,5)=2  (9,3)=2  (9,4)=2  (9,5)=2 
! 20 wrong pixels (generated / expected)

TRAIN 025d127b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (3,2) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (5,8) and color cyan and mask 1111100010000100010000100010000100011111
diff: 
delta:
   (79.5 bits)
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (3,3) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (1,2) with size (5,7) and color cyan and mask 11111001000100100001001000010011111
diff: 
delta:
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (3,2) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (5,8) and color cyan and mask 1111100010000100010000100010000100011111
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 025d127b.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (1,1) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (5,9) and color yellow and mask 111111000100000100010000010001000001000111111
diff:   size.j
delta:
! 22 wrong pixels (generated / expected)

TEST 025d127b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 782.9 bits (782.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-396] Checking task 045e512c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7469.4 = 7478.3
DL output with Mo: L = 9.0 + 25717.5 = 25726.5
DL input+output M: L = 17.9 + 33186.9 = 33204.9

# learning a model for train pairs
33204.9	
28970.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
25014.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
22451.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19926.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
18926.2	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 4888.6 = 4915.1
DL output with Mo: L = 76.0 + 13935.1 = 14011.1
DL input+output M: L = 102.6 + 18823.6 = 18926.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (6,6) with size (3,3) and color cyan and mask 111101111
diff: 
delta: (6,10)=3  (7,10)=3  (8,10)=3  (10,6)=2  (10,7)=2  (10,8)=2 
   (189.9 bits)
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (6,10) with size (3,11) and color green and mask full
  [01]: a rectangle at (10,6) with size (11,3) and color red and mask full
  [011]: a rectangle at (6,6) with size (3,3) and color cyan and mask 111101111
  [0111]: a rectangle at (7,7) with size (1,1) and color black and mask full
diff: 
delta: (6,13)=0  (6,17)=0  (7,11)=0  (7,13)=0  (7,15)=0  (7,17)=0  (7,19)=0  (8,13)=0  (8,17)=0  (11,7)=0  (13,6)=0  (13,7)=0  (13,8)=0  (15,7)=0  (17,6)=0  (17,7)=0  (17,8)=0  (19,7)=0 
   (526.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (6,6) with size (3,3) and color cyan and mask 111101111
diff: 
delta: (6,10)=3  (7,10)=3  (8,10)=3  (10,6)=2  (10,7)=2  (10,8)=2 
! size mismatch, 10x10 instead of 21x21

TRAIN 045e512c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,11) with size (3,3) and color blue and mask 10111010
diff: 
delta: (5,12)=4  (8,9)=2  (8,15)=4 
   (129.2 bits)
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (8,0) with size (1,10) and color red and mask full
  [01]: a rectangle at (8,15) with size (1,6) and color yellow and mask full
  [011]: a rectangle at (3,11) with size (3,3) and color yellow and mask 10111010
  [0111]: a rectangle at (7,11) with size (3,3) and color blue and mask 10111010
diff: 
delta: (0,11)=4  (0,12)=4  (0,13)=4  (1,12)=4  (7,0)=2  (7,4)=2  (7,8)=2  (7,16)=4  (7,20)=4  (8,2)=0  (8,6)=0  (8,18)=0  (9,0)=2  (9,4)=2  (9,8)=2  (9,16)=4  (9,20)=4 
   (513.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,11) with size (3,3) and color blue and mask 10111010
diff: 
delta: (5,12)=4  (8,9)=2  (8,15)=4 
! size mismatch, 10x10 instead of 21x21

TRAIN 045e512c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,6) with size (3,3) and color grey and mask 110101011
diff: 
delta: (4,10)=6  (5,11)=6  (11,10)=1  (11,11)=1  (12,10)=1 
   (169.8 bits)
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (3,10) with size (3,3) and color pink and mask 110101011
  [01]: a rectangle at (7,6) with size (3,3) and color grey and mask 110101011
  [011]: a rectangle at (11,10) with size (3,3) and color blue and mask 110101011
  [0111]: a rectangle at (15,14) with size (3,3) and color blue and mask 110101011
diff: 
delta: (0,14)=6  (0,16)=6  (1,15)=6  (1,16)=6  (19,18)=1  (19,19)=1  (20,18)=1  (20,20)=1 
   (353.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,6) with size (3,3) and color grey and mask 110101011
diff: 
delta: (4,10)=6  (5,11)=6  (11,10)=1  (11,11)=1  (12,10)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 045e512c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,6) with size (3,3) and color cyan and mask 101101111
diff: 
delta: (4,10)=4  (5,10)=4  (7,10)=2  (8,10)=2  (9,10)=2  (11,6)=3  (11,7)=3  (11,8)=3 
! size mismatch, 10x10 instead of 21x21

TEST 045e512c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 13935.1 bits (13935.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-395] Checking task 0520fde7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5888.2 = 5897.2
DL output with Mo: L = 9.0 + 1350.7 = 1359.7
DL input+output M: L = 17.9 + 7238.9 = 7256.8

# learning a model for train pairs
7256.8	
6235.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5460.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4950.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4812.5	IN  DEF: layer[01].color=grey
4682.7	IN  DEF: layer[0].color=blue
4544.7	IN  DEF: layer[011].color=blue
4446.0	OUT SHAPE at layer[0]: a point at ? with color ?
4308.0	OUT DEF: layer[0].color=red
4237.3	IN  DEF: layer[01].mask=full
4191.7	OUT DEF: color=black
4146.1	IN  DEF: color=black
4111.1	OUT DEF: size=(?,?)
3947.1	OUT DEF: size.i={size.i}
3784.6	OUT DEF: size.j={size.i}
3749.6	OUT DEF: layer[0].pos=(?,?)
3665.8	OUT DEF: layer[0].pos.i={layer[01].size.j}
3587.2	OUT DEF: layer[0].pos.j={layer[0].size.j - 1}
3552.1	IN  DEF: size=(?,?)
3318.7	IN  DEF: size.j=7
3156.1	IN  DEF: size.i=3
3121.1	IN  DEF: layer[0].pos=(?,?)
3086.0	IN  DEF: layer[0].size=(?,?)
3051.0	IN  DEF: layer[01].pos=(?,?)
2928.0	IN  DEF: layer[01].pos.j=3
2840.3	IN  DEF: layer[01].pos.i=0
2805.3	IN  DEF: layer[01].size=(?,?)
2642.7	IN  DEF: layer[01].size.i=3
2572.1	IN  DEF: layer[01].size.j=1
2537.1	IN  DEF: layer[011].pos=(?,?)
2449.4	IN  DEF: layer[011].pos.i=0
2414.4	IN  DEF: layer[011].size=(?,?)
2251.8	IN  DEF: layer[011].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i},{size.i}) and color black and layers
  [0]: a point at ({layer[01].size.j},{layer[0].size.j - 1}) with color red
WHERE (Mi)
a background with size (3,7) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color blue and mask ?
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,?) with size (?,3) and color blue and mask ?

DL input  with Mi: L = 103.5 + 1629.9 = 1733.4
DL output with Mo: L = 43.7 + 474.7 = 518.4
DL input+output M: L = 147.2 + 2104.7 = 2251.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color blue and mask 11001
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,4) with size (2,3) and color blue and mask 111010
diff: 
delta:
   (41.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color blue and mask 11001
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,4) with size (2,3) and color blue and mask 111010
diff: 
delta:
correct output grid

TRAIN 0520fde7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 11100011
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color blue and mask 10111010
diff: 
delta:
   (50.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,2) with color red
diff: 
delta: (0,1)=2  (2,1)=2 
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 11100011
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color blue and mask 10111010
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 0520fde7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (1,4) with size (2,1) and color blue and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 110011100
diff: 
delta: (1,6)=1  (2,6)=1 
   (70.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color red
diff: 
delta: (2,2)=2 
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (1,4) with size (2,1) and color blue and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 110011100
diff: 
delta: (1,6)=1  (2,6)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 110011100
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (1,4) with size (2,1) and color blue and mask full
diff:   layer[011].size.j  layer[011].pos.i
delta: (1,6)=1  (2,6)=1 
! 3 wrong pixels (generated / expected)

TRAIN 0520fde7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 101010101
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color blue and mask 10101101
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (0,4) with size (2,1) and color blue and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 101010101
diff: 
delta: (0,6)=1  (1,6)=1  (2,5)=1 
! 3 wrong pixels (generated / expected)

TEST 0520fde7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 474.7 bits (474.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-394] Checking task 05269061.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6230.0 = 6239.0
DL output with Mo: L = 9.0 + 16941.9 = 16950.9
DL input+output M: L = 17.9 + 23171.9 = 23189.9

# learning a model for train pairs
23189.9	
17690.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13709.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12218.2	OUT DEF: layer[0].mask=1001001001001001001001001001001001001001001001001
11103.5	OUT DEF: layer[01].mask=11011110110101101011011110110101101
10396.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9830.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9314.9	OUT DEF: size={size}
8800.0	OUT DEF: layer[0].size={size}
8395.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7599.9	OUT DEF: layer[011].mask=1101110110011011101110110
7255.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7017.9	OUT DEF: color={layer[011].color}
6879.4	OUT DEF: layer[0].color={layer[01].color}
6740.9	OUT DEF: layer[01].color={layer[0].color}
6602.4	OUT DEF: layer[011].color={layer[0].color}
6556.8	IN  DEF: color=black
6521.8	OUT DEF: layer[0].pos=(?,?)
6400.8	OUT DEF: layer[0].pos.i=0
6279.8	OUT DEF: layer[0].pos.j=0
6244.8	OUT DEF: layer[01].pos=(?,?)
6123.8	OUT DEF: layer[01].pos.i=0
6002.9	OUT DEF: layer[01].pos.j=0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[011].color} and layers
  [0]: a rectangle at (0,0) with size {size} and color {layer[01].color} and mask 1001001001001001001001001001001001001001001001001
  [01]: a rectangle at (0,0) with size ? and color {layer[0].color} and mask 11011110110101101011011110110101101
  [011]: a rectangle at ? with size ? and color {layer[0].color} and mask 1101110110011011101110110
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 57.9 + 4517.9 = 4575.8
DL output with Mo: L = 192.9 + 1234.2 = 1427.1
DL input+output M: L = 250.8 + 5752.1 = 6002.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 1010100
  [01]: a rectangle at (0,0) with size (1,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (2,2) and color cyan and mask full
diff: 
delta:
   (104.1 bits)
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask 1001001001001001001001001001001001001001001001001
  [01]: a rectangle at (0,0) with size (6,6) and color green and mask 11011110110101101011011110110101101
  [011]: a rectangle at (2,2) with size (5,5) and color green and mask 1101110110011011101110110
diff: 
delta:
   (41.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 1010100
  [01]: a rectangle at (0,0) with size (1,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (2,2) and color cyan and mask full
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color red and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask 1010101
  [011]: a rectangle at (0,0) with size (2,2) and color cyan and mask full
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 1010100
  [01]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1110
  [011]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta:
! 48 wrong pixels (generated / expected)

TRAIN 05269061.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color blue and mask 100010001000100010000
  [01]: a rectangle at (3,3) with size (4,4) and color red and mask 1001101101100
  [011]: a rectangle at (4,4) with size (3,3) and color yellow and mask 1011111
diff: 
delta:
   (158.4 bits)
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask 1001001001001001001001001001001001001001001001001
  [01]: a rectangle at (0,0) with size (6,6) and color blue and mask 11011110110101101011011110110101101
  [011]: a rectangle at (2,2) with size (5,5) and color blue and mask 1101110110011011101110110
diff: 
delta:
   (41.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color blue and mask 100010001000100010000
  [01]: a rectangle at (3,3) with size (4,4) and color red and mask 1001101101100
  [011]: a rectangle at (4,4) with size (3,3) and color yellow and mask 1011111
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color blue and mask 100010001000100010000
  [01]: a rectangle at (4,4) with size (3,3) and color yellow and mask 1010101
  [011]: a rectangle at (3,3) with size (4,4) and color red and mask 11011111101100
diff: 
delta:
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,3) with size (4,4) and color red and mask 1001001001000
  [01]: a rectangle at (2,2) with size (5,5) and color blue and mask 1100110011001100010000
  [011]: a rectangle at (4,4) with size (3,3) and color yellow and mask 1011111
diff: 
delta:
! 35 wrong pixels (generated / expected)

TRAIN 05269061.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color green and mask 1000010000100001000010000100000
  [01]: a rectangle at (3,3) with size (4,4) and color yellow and mask 1001001001000
  [011]: a rectangle at (0,0) with size (5,5) and color cyan and mask 1100110011001100010000
diff: 
delta:
   (189.4 bits)
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,7) and color yellow and mask 1001001001001001001001001001001001001001001001001
  [01]: a rectangle at (0,0) with size (6,6) and color green and mask 11011110110101101011011110110101101
  [011]: a rectangle at (2,2) with size (5,5) and color green and mask 1101110110011011101110110
diff: 
delta:
   (41.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color green and mask 1000010000100001000010000100000
  [01]: a rectangle at (0,0) with size (5,5) and color cyan and mask 1100110011001100010000
  [011]: a rectangle at (3,3) with size (4,4) and color yellow and mask 1001001001000
diff: 
delta:
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color green and mask 1000010000100001000010000100000
  [01]: a rectangle at (3,3) with size (4,4) and color yellow and mask 1001001001000
  [011]: a rectangle at (0,0) with size (5,5) and color cyan and mask 1100110011001100010000
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color cyan and mask 100010001000100010000
  [01]: a rectangle at (0,0) with size (6,6) and color green and mask 1000011000110001100011000110000
  [011]: a rectangle at (3,3) with size (4,4) and color yellow and mask 1001001001000
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 05269061.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask 1000001000001000001000001000001000001000000
  [01]: a rectangle at (0,0) with size (2,2) and color blue and mask 110
  [011]: a rectangle at (5,5) with size (2,2) and color yellow and mask 110
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask 1000001000001000001000001000001000001000000
  [01]: a rectangle at (5,5) with size (2,2) and color yellow and mask 110
  [011]: a rectangle at (0,0) with size (2,2) and color blue and mask 110
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 110
  [01]: a rectangle at (0,0) with size (7,7) and color red and mask 1000001000001000001000001000001000011000010
  [011]: a rectangle at (5,5) with size (2,2) and color yellow and mask 110
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 05269061.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1234.2 bits (1234.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-393] Checking task 05f2a901.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7386.9 = 7395.9
DL output with Mo: L = 9.0 + 7386.9 = 7395.9
DL input+output M: L = 17.9 + 14773.9 = 14791.8

# learning a model for train pairs
14791.8	
11580.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8369.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6954.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5539.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4697.2	OUT DEF: layer[01]={layer[01]}
4113.1	OUT DEF: size={size}
3692.8	OUT DEF: layer[0].mask={layer[0].mask}
3304.2	OUT DEF: layer[0].size={layer[0].size}
3164.8	OUT DEF: layer[0].color={layer[0].color}
3026.8	IN  DEF: layer[0].color=red
2888.8	IN  DEF: layer[01].color=cyan
2818.1	IN  DEF: layer[01].mask=full
2772.5	OUT DEF: color=black
2726.9	IN  DEF: color=black
2691.9	OUT DEF: layer[0].pos=(?,?)
2656.9	IN  DEF: size=(?,?)
2621.9	IN  DEF: layer[0].pos=(?,?)
2586.9	IN  DEF: layer[0].size=(?,?)
2551.9	IN  DEF: layer[01].pos=(?,?)
2516.9	IN  DEF: layer[01].size=(?,?)
2388.2	IN  DEF: layer[01].size.i=2
2259.5	IN  DEF: layer[01].size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,?) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [01]: {layer[01]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color red and mask ?
  [01]: a rectangle at (?,?) with size (2,2) and color cyan and mask full

DL input  with Mi: L = 68.4 + 1876.8 = 1945.1
DL output with Mo: L = 32.6 + 281.8 = 314.4
DL input+output M: L = 100.9 + 2158.6 = 2259.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (2,0) with size (2,4) and color red and mask 10111110
  [01]: a rectangle at (10,3) with size (2,2) and color cyan and mask full
diff: 
delta:
   (58.8 bits)
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (8,0) with size (2,4) and color red and mask 10111110
  [01]: a rectangle at (10,3) with size (2,2) and color cyan and mask full
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (2,0) with size (2,4) and color red and mask 10111110
  [01]: a rectangle at (10,3) with size (2,2) and color cyan and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (2,0) with size (2,4) and color red and mask full
  [01]: a rectangle at (10,3) with size (2,2) and color cyan and mask full
diff: 
delta: (2,0)=0  (3,2)=0 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,9) and color black and layers
  [0]: a rectangle at (2,1) with size (1,3) and color red and mask full
  [01]: a rectangle at (10,3) with size (2,2) and color cyan and mask full
diff: 
delta: (3,0)=2  (3,1)=2  (3,3)=2 
! 9 wrong pixels (generated / expected)

TRAIN 05f2a901.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (1,0) with size (4,3) and color red and mask 110111110110
  [01]: a rectangle at (4,6) with size (2,2) and color cyan and mask full
diff: 
delta:
   (62.0 bits)
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (1,3) with size (4,3) and color red and mask 110111110110
  [01]: a rectangle at (4,6) with size (2,2) and color cyan and mask full
diff: 
delta:
   (9.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (1,0) with size (4,3) and color red and mask 110111110110
  [01]: a rectangle at (4,6) with size (2,2) and color cyan and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,2) and color red and mask full
  [01]: a rectangle at (4,6) with size (2,2) and color cyan and mask full
diff: 
delta: (3,0)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (4,6) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (4,2) and color red and mask full
diff:   layer[01].color  layer[01].size.i  layer[0].color
delta: (3,0)=2 
! 24 wrong pixels (generated / expected)

TRAIN 05f2a901.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (6,1) with size (3,5) and color red and mask 1101111111100
  [01]: a rectangle at (1,3) with size (2,2) and color cyan and mask full
diff: 
delta:
   (66.8 bits)
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (3,1) with size (3,5) and color red and mask 1101111111100
  [01]: a rectangle at (1,3) with size (2,2) and color cyan and mask full
diff: 
delta:
   (9.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (6,1) with size (3,5) and color red and mask 1101111111100
  [01]: a rectangle at (1,3) with size (2,2) and color cyan and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (6,3) with size (2,3) and color red and mask full
  [01]: a rectangle at (1,3) with size (2,2) and color cyan and mask full
diff: 
delta: (7,1)=2  (7,2)=2  (8,2)=2  (8,3)=2 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (7,1) with size (1,5) and color red and mask full
  [01]: a rectangle at (1,3) with size (2,2) and color cyan and mask full
diff: 
delta: (6,3)=2  (6,4)=2  (6,5)=2  (8,2)=2  (8,3)=2 
! 15 wrong pixels (generated / expected)

TRAIN 05f2a901.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (4,5) with size (4,2) and color red and mask 10111101
  [01]: a rectangle at (6,1) with size (2,2) and color cyan and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (5,5) with size (2,2) and color red and mask full
  [01]: a rectangle at (6,1) with size (2,2) and color cyan and mask full
diff: 
delta: (4,5)=2  (7,6)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,10) and color black and layers
  [0]: a rectangle at (4,5) with size (4,2) and color red and mask full
  [01]: a rectangle at (6,1) with size (2,2) and color cyan and mask full
diff: 
delta: (4,6)=0  (7,5)=0 
! 14 wrong pixels (generated / expected)

TEST 05f2a901.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 281.8 bits (281.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-392] Checking task 06df4c85.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 142084.1 = 142093.1
DL output with Mo: L = 9.0 + 142084.1 = 142093.1
DL input+output M: L = 17.9 + 284168.2 = 284186.2

# learning a model for train pairs
284186.2	
174939.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
84055.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
68152.9	OUT DEF: layer[0]={layer[0]}
56491.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
47955.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
40960.0	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
38609.5	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
37126.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
35639.6	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 29815.1 = 29874.9
DL output with Mo: L = 79.8 + 5685.0 = 5764.8
DL input+output M: L = 139.6 + 35500.0 = 35639.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color cyan and mask 10010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100
  [01]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,15) with size (2,2) and color red and mask full
diff: 
delta: (6,9)=1  (6,10)=1  (7,9)=1  (7,10)=1  (9,15)=2  (9,16)=2  (10,15)=2  (10,16)=2  (12,3)=3  (12,4)=3  (12,9)=3  (12,10)=3  (13,3)=3  (13,4)=3  (13,9)=3  (13,10)=3 
   (848.0 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color cyan and mask 10010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100
  [01]: a rectangle at (3,3) with size (2,14) and color red and mask full
  [011]: a rectangle at (12,3) with size (2,8) and color green and mask full
  [0111]: a rectangle at (3,15) with size (8,2) and color red and mask full
  [01111]: a rectangle at (6,9) with size (2,2) and color blue and mask full
diff: 
delta:
   (156.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color cyan and mask 10010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100111111111111111111110010010010010010010000100100100100100100
  [01]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,15) with size (2,2) and color red and mask full
diff: 
delta: (6,9)=1  (6,10)=1  (7,9)=1  (7,10)=1  (9,15)=2  (9,16)=2  (10,15)=2  (10,16)=2  (12,3)=3  (12,4)=3  (12,9)=3  (12,10)=3  (13,3)=3  (13,4)=3  (13,9)=3  (13,10)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN 06df4c85.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color blue and mask
  [01]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,12) with size (2,2) and color yellow and mask full
diff: 
delta: (9,9)=9# (9,10)=9# (9,21)=9# (9,22)=9# (10,9)=9# (10,10)=9# (10,21)=9# (10,22)=9# (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,9)=8  (18,10)=8  (18,18)=8  (18,19)=8  (19,9)=8  (19,10)=8  (19,18)=8  (19,19)=8 
   (1147.2 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color blue and mask
  [01]: a rectangle at (9,9) with size (2,14) and color brown and mask full
  [011]: a rectangle at (3,3) with size (14,2) and color red and mask full
  [0111]: a rectangle at (18,9) with size (2,11) and color cyan and mask full
  [01111]: a rectangle at (12,18) with size (8,2) and color cyan and mask full
diff: 
delta: (3,12)=4  (3,13)=4  (4,12)=4  (4,13)=4 
   (250.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color blue and mask
  [01]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,12) with size (2,2) and color yellow and mask full
diff: 
delta: (9,9)=9# (9,10)=9# (9,21)=9# (9,22)=9# (10,9)=9# (10,10)=9# (10,21)=9# (10,22)=9# (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,9)=8  (18,10)=8  (18,18)=8  (18,19)=8  (19,9)=8  (19,10)=8  (19,18)=8  (19,19)=8 
! size mismatch, 10x10 instead of 23x23

TRAIN 06df4c85.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color yellow and mask
  [01]: a rectangle at (3,3) with size (2,2) and color green and mask full
  [011]: a rectangle at (3,15) with size (2,2) and color red and mask full
diff: 
delta: (9,9)=2  (9,10)=2  (9,18)=2  (9,19)=2  (10,9)=2  (10,10)=2  (10,18)=2  (10,19)=2  (18,3)=3  (18,4)=3  (18,15)=3  (18,16)=3  (19,3)=3  (19,4)=3  (19,15)=3  (19,16)=3 
   (986.3 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color yellow and mask
  [01]: a rectangle at (3,3) with size (17,2) and color green and mask full
  [011]: a rectangle at (9,9) with size (2,11) and color red and mask full
  [0111]: a rectangle at (3,15) with size (2,2) and color red and mask full
  [01111]: a rectangle at (18,3) with size (2,14) and color green and mask full
diff: 
delta:
   (162.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color yellow and mask
  [01]: a rectangle at (3,3) with size (2,2) and color green and mask full
  [011]: a rectangle at (3,15) with size (2,2) and color red and mask full
diff: 
delta: (9,9)=2  (9,10)=2  (9,18)=2  (9,19)=2  (10,9)=2  (10,10)=2  (10,18)=2  (10,19)=2  (18,3)=3  (18,4)=3  (18,15)=3  (18,16)=3  (19,3)=3  (19,4)=3  (19,15)=3  (19,16)=3 
! size mismatch, 10x10 instead of 23x23

TRAIN 06df4c85.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color black and layers
  [0]: a rectangle at (0,0) with size (26,26) and color yellow and mask
  [01]: a rectangle at (3,6) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (3,15) with size (2,2) and color red and mask full
diff: 
delta: (9,21)=3  (9,22)=3  (10,21)=3  (10,22)=3  (12,6)=8  (12,7)=8  (13,6)=8  (13,7)=8  (18,3)=2  (18,4)=2  (18,15)=2  (18,16)=2  (19,3)=2  (19,4)=2  (19,15)=2  (19,16)=2 
! size mismatch, 10x10 instead of 26x26

TEST 06df4c85.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5685.0 bits (5685.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-391] Checking task 08ed6ac7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8355.7 = 8364.7
DL output with Mo: L = 9.0 + 8355.7 = 8364.7
DL input+output M: L = 17.9 + 16711.5 = 16729.4

# learning a model for train pairs
16729.4	
13342.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10986.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9296.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7704.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6499.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6097.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
5724.0	OUT DEF: size={size}
5632.5	OUT DEF: layer[0].color=blue
5540.9	OUT DEF: layer[0111].color=yellow
5449.4	OUT DEF: layer[01].color=red
5294.7	IN  DEF: color=grey
5203.1	OUT DEF: layer[011].color=green
5155.7	OUT DEF: layer[0].mask=full
5064.1	IN  DEF: layer[01].color=black
5016.7	OUT DEF: layer[01].mask=full
4969.3	OUT DEF: layer[011].mask=full
4921.8	OUT DEF: layer[0111].mask=full
4890.8	OUT DEF: color=black
4869.0	OUT DEF: layer[0].pos=(?,?)
4781.3	OUT DEF: layer[0].pos.i={layer[0].pos.j}
4759.5	OUT DEF: layer[0].size=(?,?)
4599.3	OUT DEF: layer[0].size.i={layer[01].size.i - layer[0].pos.j}
4551.8	OUT DEF: layer[0].size.j=1
4530.0	OUT DEF: layer[01].pos=(?,?)
4508.2	OUT DEF: layer[01].size=(?,?)
4460.8	OUT DEF: layer[01].size.j=1
4439.0	OUT DEF: layer[011].pos=(?,?)
4417.2	OUT DEF: layer[011].size=(?,?)
4369.8	OUT DEF: layer[011].size.j=1
4348.0	OUT DEF: layer[0111].pos=(?,?)
4265.2	OUT DEF: layer[0111].pos.j={layer[01].pos.j + 1}
4184.6	OUT DEF: layer[0111].pos.i={layer[0].pos.i + layer[01].pos.j}
4162.8	OUT DEF: layer[0111].size=(?,?)
4074.1	OUT DEF: layer[0111].size.i={layer[0].size.i - layer[01].pos.j}
4026.7	OUT DEF: layer[0111].size.j=1
4004.9	IN  DEF: size=(?,?)
3837.0	IN  DEF: size.i=9
3669.1	IN  DEF: size.j=9
3647.3	IN  DEF: layer[0].pos=(?,?)
3625.5	IN  DEF: layer[0].size=(?,?)
3603.7	IN  DEF: layer[01].pos=(?,?)
3515.1	IN  DEF: layer[01].pos.i=0
3493.3	IN  DEF: layer[01].size=(?,?)
3325.4	IN  DEF: layer[01].size.i=9

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.j},?) with size ({layer[01].size.i - layer[0].pos.j},1) and color blue and mask full
  [01]: a rectangle at (?,?) with size (?,1) and color red and mask full
  [011]: a rectangle at (?,?) with size (?,1) and color green and mask full
  [0111]: a rectangle at ({layer[0].pos.i + layer[01].pos.j},{layer[01].pos.j + 1}) with size ({layer[0].size.i - layer[01].pos.j},1) and color yellow and mask full
WHERE (Mi)
a background with size (9,9) and color grey and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (0,?) with size (9,?) and color black and mask ?

DL input  with Mi: L = 89.7 + 2349.5 = 2439.2
DL output with Mo: L = 145.9 + 740.2 = 886.1
DL input+output M: L = 235.7 + 3089.7 = 3325.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (0,0) with size (9,5) and color black and mask 101011010110101101011010110101111011110111111
  [01]: a rectangle at (0,6) with size (9,3) and color black and mask 101101101111111111111111111
diff: 
delta:
   (115.9 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,5) with size (9,1) and color blue and mask full
  [01]: a rectangle at (1,1) with size (8,1) and color red and mask full
  [011]: a rectangle at (3,3) with size (6,1) and color green and mask full
  [0111]: a rectangle at (6,7) with size (3,1) and color yellow and mask full
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (0,0) with size (9,5) and color black and mask 101011010110101101011010110101111011110111111
  [01]: a rectangle at (0,6) with size (9,3) and color black and mask 101101101111111111111111111
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (0,6) with size (9,3) and color black and mask 101101101111111111111111111
  [01]: a rectangle at (0,0) with size (9,5) and color black and mask 101011010110101101011010110101111011110111111
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 08ed6ac7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (7,1) with size (2,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101010111101010111101010111101010111101110111101111111101111111101111111111111111
diff: 
delta:
   (119.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,7) with size (8,1) and color blue and mask full
  [01]: a rectangle at (4,3) with size (5,1) and color red and mask full
  [011]: a rectangle at (5,5) with size (4,1) and color green and mask full
  [0111]: a rectangle at (7,1) with size (2,1) and color yellow and mask full
diff: 
delta:
   (35.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (7,1) with size (2,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101010111101010111101010111101010111101110111101111111101111111101111111111111111
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (5,5) with size (4,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101110101101110101101110111101110111101110111101111111101111111101111111111111111
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (4,3) with size (5,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101011101101011101101011111101011111101111111101111111101111111101111111111111111
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN 08ed6ac7.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (6,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101011101101011101101011101101011101101011101111011101111011101111111101111111111
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (4,7) with size (5,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 111010101111010101111010101111011101111011101111011101111011101111111101111111111
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (2,5) with size (7,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101110101101110101101110101101111101101111101111111101111111101111111101111111111
diff: 
delta:
! 29 wrong pixels (generated / expected)

TEST 08ed6ac7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 740.2 bits (740.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-390] Checking task 09629e4f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 59454.8 = 59463.7
DL output with Mo: L = 9.0 + 55617.1 = 55626.1
DL input+output M: L = 17.9 + 115071.9 = 115089.8

# learning a model for train pairs
115089.8	
92808.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
72423.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
66064.1	OUT DEF: layer[0]={layer[0]}
60828.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
55580.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
50302.8	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
44833.3	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 39052.7 = 39079.3
DL output with Mo: L = 78.6 + 5675.4 = 5754.0
DL input+output M: L = 105.1 + 44728.2 = 44833.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=2  (0,5)=6  (0,6)=2  (0,10)=4  (1,1)=4  (1,2)=3  (1,4)=4  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,5)=3  (10,8)=2  (10,9)=3  (10,10)=4 
   (976.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (0,0) with size (3,3) and color red and mask full
  [011]: a rectangle at (4,4) with size (3,3) and color yellow and mask full
  [0111]: a rectangle at (4,8) with size (3,3) and color green and mask full
  [01111]: a rectangle at (8,0) with size (3,3) and color pink and mask full
diff: 
delta:
   (141.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=2  (0,5)=6  (0,6)=2  (0,10)=4  (1,1)=4  (1,2)=3  (1,4)=4  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,5)=3  (10,8)=2  (10,9)=3  (10,10)=4 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=2  (0,3)=5# (0,5)=6  (0,6)=2  (0,7)=5# (0,10)=4  (1,1)=4  (1,2)=3  (1,3)=5# (1,4)=4  (1,6)=8  (1,7)=5# (1,8)=3  (1,10)=6  (2,0)=6  (2,3)=5# (2,4)=3  (2,7)=5# (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,3)=5# (4,4)=6  (4,5)=2  (4,7)=5# (4,9)=4  (4,10)=8  (5,2)=4  (5,3)=5# (5,6)=4  (5,7)=5# (5,8)=6  (6,0)=6  (6,1)=2  (6,3)=5# (6,4)=3  (6,5)=8  (6,7)=5# (6,9)=3  (6,10)=2  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,1)=3  (8,2)=6  (8,3)=5# (8,5)=2  (8,7)=5# (8,9)=6  (9,0)=2  (9,3)=5# (9,4)=4  (9,6)=8  (9,7)=5# (9,10)=8  (10,0)=8  (10,2)=4  (10,3)=5# (10,4)=6  (10,5)=3  (10,7)=5# (10,8)=2  (10,9)=3  (10,10)=4 
! size mismatch, 10x10 instead of 11x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (7,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=2  (0,3)=5# (0,5)=6  (0,6)=2  (0,7)=5# (0,10)=4  (1,1)=4  (1,2)=3  (1,3)=5# (1,4)=4  (1,6)=8  (1,7)=5# (1,8)=3  (1,10)=6  (2,0)=6  (2,3)=5# (2,4)=3  (2,7)=5# (2,8)=8  (2,10)=2  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,0)=3  (4,1)=8  (4,3)=5# (4,4)=6  (4,5)=2  (4,7)=5# (4,9)=4  (4,10)=8  (5,2)=4  (5,3)=5# (5,6)=4  (5,7)=5# (5,8)=6  (6,0)=6  (6,1)=2  (6,3)=5# (6,4)=3  (6,5)=8  (6,7)=5# (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,3)=5# (8,5)=2  (8,7)=5# (8,9)=6  (9,0)=2  (9,3)=5# (9,4)=4  (9,6)=8  (9,7)=5# (9,10)=8  (10,0)=8  (10,2)=4  (10,3)=5# (10,4)=6  (10,5)=3  (10,7)=5# (10,8)=2  (10,9)=3  (10,10)=4 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,0)=4  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,6)=6  (10,8)=6  (10,9)=4 
   (976.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (0,8) with size (3,3) and color red and mask full
  [011]: a rectangle at (4,4) with size (3,3) and color green and mask full
  [0111]: a rectangle at (8,0) with size (3,3) and color yellow and mask full
  [01111]: a rectangle at (8,8) with size (3,3) and color pink and mask full
diff: 
delta:
   (141.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,0)=4  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,6)=6  (10,8)=6  (10,9)=4 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,4)=4  (0,5)=6  (0,7)=5# (0,9)=6  (1,2)=8  (1,3)=5# (1,6)=2  (1,7)=5# (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,3)=5# (2,4)=3  (2,5)=8  (2,7)=5# (2,8)=2  (2,10)=8  (4,0)=4  (4,2)=8  (4,3)=5# (4,6)=2  (4,7)=5# (4,9)=6  (4,10)=4  (5,2)=2  (5,3)=5# (5,5)=3  (5,7)=5# (5,8)=3  (6,0)=3  (6,2)=6  (6,3)=5# (6,4)=4  (6,6)=6  (6,7)=5# (6,8)=8  (6,10)=2  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,0)=3  (8,1)=6  (8,3)=5# (8,5)=8  (8,6)=4  (8,7)=5# (8,8)=2  (9,1)=8  (9,2)=4  (9,3)=5# (9,4)=2  (9,7)=5# (9,8)=8  (9,10)=3  (10,0)=2  (10,3)=5# (10,5)=3  (10,6)=6  (10,7)=5# (10,8)=6  (10,9)=4 
! size mismatch, 10x10 instead of 11x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (7,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,4)=4  (0,5)=6  (0,7)=5# (0,9)=6  (1,2)=8  (1,3)=5# (1,6)=2  (1,7)=5# (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,3)=5# (2,4)=3  (2,5)=8  (2,7)=5# (2,8)=2  (2,10)=8  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,0)=4  (4,2)=8  (4,3)=5# (4,6)=2  (4,7)=5# (4,9)=6  (4,10)=4  (5,2)=2  (5,3)=5# (5,5)=3  (5,7)=5# (5,8)=3  (6,0)=3  (6,2)=6  (6,3)=5# (6,4)=4  (6,6)=6  (6,7)=5# (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,3)=5# (8,5)=8  (8,6)=4  (8,7)=5# (8,8)=2  (9,1)=8  (9,2)=4  (9,3)=5# (9,4)=2  (9,7)=5# (9,8)=8  (9,10)=3  (10,0)=2  (10,3)=5# (10,5)=3  (10,6)=6  (10,7)=5# (10,8)=6  (10,9)=4 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,1)=2  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,1)=2  (4,4)=4  (4,6)=3  (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
   (976.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (0,4) with size (3,3) and color green and mask full
  [011]: a rectangle at (4,4) with size (3,3) and color pink and mask full
  [0111]: a rectangle at (4,8) with size (3,3) and color yellow and mask full
  [01111]: a rectangle at (8,0) with size (3,3) and color red and mask full
diff: 
delta:
   (141.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,1)=2  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,1)=2  (4,4)=4  (4,6)=3  (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,1)=3  (0,3)=5# (0,5)=6  (0,6)=3  (0,7)=5# (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,3)=5# (1,4)=2  (1,5)=8  (1,7)=5# (1,10)=8  (2,1)=2  (2,2)=8  (2,3)=5# (2,5)=4  (2,7)=5# (2,8)=3  (2,10)=4  (4,1)=2  (4,3)=5# (4,4)=4  (4,6)=3  (4,7)=5# (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,3)=5# (5,4)=2  (5,6)=6  (5,7)=5# (5,10)=2  (6,0)=3  (6,1)=6  (6,3)=5# (6,5)=8  (6,7)=5# (6,8)=8  (6,9)=6  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,0)=6  (8,1)=3  (8,3)=5# (8,5)=3  (8,7)=5# (8,10)=3  (9,2)=2  (9,3)=5# (9,5)=6  (9,6)=4  (9,7)=5# (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,3)=5# (10,4)=2  (10,7)=5# (10,8)=4  (10,10)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (7,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,1)=3  (0,3)=5# (0,5)=6  (0,6)=3  (0,7)=5# (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,3)=5# (1,4)=2  (1,5)=8  (1,7)=5# (1,10)=8  (2,1)=2  (2,2)=8  (2,3)=5# (2,5)=4  (2,7)=5# (2,8)=3  (2,10)=4  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,1)=2  (4,3)=5# (4,4)=4  (4,6)=3  (4,7)=5# (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,3)=5# (5,4)=2  (5,6)=6  (5,7)=5# (5,10)=2  (6,0)=3  (6,1)=6  (6,3)=5# (6,5)=8  (6,7)=5# (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,3)=5# (8,5)=3  (8,7)=5# (8,10)=3  (9,2)=2  (9,3)=5# (9,5)=6  (9,6)=4  (9,7)=5# (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,3)=5# (10,4)=2  (10,7)=5# (10,8)=4  (10,10)=6 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,4)=4  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
   (976.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (0,4) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (4,4) with size (3,3) and color red and mask full
  [0111]: a rectangle at (4,8) with size (3,3) and color pink and mask full
  [01111]: a rectangle at (8,4) with size (3,3) and color green and mask full
diff: 
delta:
   (141.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,4)=4  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,3)=5# (0,4)=4  (0,5)=6  (0,7)=5# (0,8)=2  (0,10)=8  (1,3)=5# (1,4)=8  (1,6)=3  (1,7)=5# (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,3)=5# (2,5)=2  (2,7)=5# (2,8)=4  (4,1)=4  (4,2)=2  (4,3)=5# (4,4)=8  (4,6)=3  (4,7)=5# (4,9)=4  (5,1)=8  (5,2)=6  (5,3)=5# (5,6)=4  (5,7)=5# (5,9)=2  (5,10)=6  (6,1)=3  (6,3)=5# (6,4)=2  (6,5)=6  (6,7)=5# (6,9)=3  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,1)=6  (8,3)=5# (8,4)=6  (8,5)=2  (8,7)=5# (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,3)=5# (9,5)=8  (9,6)=3  (9,7)=5# (9,10)=4  (10,0)=4  (10,1)=2  (10,3)=5# (10,6)=4  (10,7)=5# (10,8)=2  (10,10)=8 
! size mismatch, 10x10 instead of 11x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (7,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,3)=5# (0,4)=4  (0,5)=6  (0,7)=5# (0,8)=2  (0,10)=8  (1,3)=5# (1,4)=8  (1,6)=3  (1,7)=5# (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,3)=5# (2,5)=2  (2,7)=5# (2,8)=4  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,1)=4  (4,2)=2  (4,3)=5# (4,4)=8  (4,6)=3  (4,7)=5# (4,9)=4  (5,1)=8  (5,2)=6  (5,3)=5# (5,6)=4  (5,7)=5# (5,9)=2  (5,10)=6  (6,1)=3  (6,3)=5# (6,4)=2  (6,5)=6  (6,7)=5# (6,9)=3  (8,1)=6  (8,3)=5# (8,4)=6  (8,5)=2  (8,7)=5# (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,3)=5# (9,5)=8  (9,6)=3  (9,7)=5# (9,10)=4  (10,0)=4  (10,1)=2  (10,3)=5# (10,6)=4  (10,7)=5# (10,8)=2  (10,10)=8 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
diff: 
delta: (0,0)=6  (0,1)=4  (0,5)=3  (0,9)=4  (1,2)=3  (1,4)=2  (1,5)=8  (1,6)=6  (1,8)=8  (1,10)=2  (2,0)=2  (2,2)=8  (2,4)=4  (2,8)=6  (2,9)=3  (4,0)=2  (4,5)=3  (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,4)=8  (5,5)=4  (5,6)=2  (5,10)=4  (6,1)=8  (6,6)=6  (6,8)=8  (8,1)=2  (8,2)=4  (8,5)=6  (8,6)=4  (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,6)=3  (9,8)=4  (9,10)=6  (10,4)=2  (10,6)=8  (10,8)=3 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=6  (0,1)=4  (0,3)=5# (0,5)=3  (0,7)=5# (0,9)=4  (1,2)=3  (1,3)=5# (1,4)=2  (1,5)=8  (1,6)=6  (1,7)=5# (1,8)=8  (1,10)=2  (2,0)=2  (2,2)=8  (2,3)=5# (2,4)=4  (2,7)=5# (2,8)=6  (2,9)=3  (4,0)=2  (4,3)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,3)=5# (5,4)=8  (5,5)=4  (5,6)=2  (5,7)=5# (5,10)=4  (6,1)=8  (6,3)=5# (6,6)=6  (6,7)=5# (6,8)=8  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,1)=2  (8,2)=4  (8,3)=5# (8,5)=6  (8,6)=4  (8,7)=5# (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,3)=5# (9,6)=3  (9,7)=5# (9,8)=4  (9,10)=6  (10,3)=5# (10,4)=2  (10,6)=8  (10,7)=5# (10,8)=3 
! size mismatch, 10x10 instead of 11x11
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (7,0) with size (1,11) and color grey and mask full
diff: 
delta: (0,0)=6  (0,1)=4  (0,3)=5# (0,5)=3  (0,7)=5# (0,9)=4  (1,2)=3  (1,3)=5# (1,4)=2  (1,5)=8  (1,6)=6  (1,7)=5# (1,8)=8  (1,10)=2  (2,0)=2  (2,2)=8  (2,3)=5# (2,4)=4  (2,7)=5# (2,8)=6  (2,9)=3  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (3,10)=5# (4,0)=2  (4,3)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,3)=5# (5,4)=8  (5,5)=4  (5,6)=2  (5,7)=5# (5,10)=4  (6,1)=8  (6,3)=5# (6,6)=6  (6,7)=5# (6,8)=8  (8,1)=2  (8,2)=4  (8,3)=5# (8,5)=6  (8,6)=4  (8,7)=5# (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,3)=5# (9,6)=3  (9,7)=5# (9,8)=4  (9,10)=6  (10,3)=5# (10,4)=2  (10,6)=8  (10,7)=5# (10,8)=3 
! size mismatch, 10x10 instead of 11x11

TEST 09629e4f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5675.4 bits (5675.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-389] Checking task 0962bcdd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4193.9 = 4202.9
DL output with Mo: L = 9.0 + 12949.5 = 12958.4
DL input+output M: L = 17.9 + 17143.4 = 17161.3

# learning a model for train pairs
17161.3	
15070.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12971.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11222.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9382.6	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
8714.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8022.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7499.7	OUT DEF: layer[0].mask=1000101010001000101010001
6977.2	OUT DEF: layer[01].mask=1000101010001000101010001
6454.8	OUT DEF: layer[011].mask=1010101110111110111010101
5932.3	OUT DEF: layer[0111].mask=1010101110111110111010101
5526.0	OUT DEF: size={size}
5433.4	OUT DEF: layer[011].color={layer[0].color}
5214.9	IN  DEF: layer[0].mask=10101010
5122.3	OUT DEF: layer[0111].color={layer[0].color}
4903.8	IN  DEF: layer[01].mask=10101010
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask 1000101010001000101010001
  [01]: a rectangle at ? with size ? and color ? and mask 1000101010001000101010001
  [011]: a rectangle at ? with size ? and color {layer[0].color} and mask 1010101110111110111010101
  [0111]: a rectangle at ? with size ? and color {layer[0].color} and mask 1010101110111110111010101
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask 10101010
  [01]: a rectangle at ? with size ? and color ? and mask 10101010

DL input  with Mi: L = 59.4 + 2346.1 = 2405.5
DL output with Mo: L = 172.3 + 2326.1 = 2498.3
DL input+output M: L = 231.6 + 4672.2 = 4903.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (2,1) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (6,7) with size (3,3) and color orange and mask 10101010
diff: 
delta: (3,2)=2  (7,8)=2 
   (117.3 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,0) with size (5,5) and color red and mask 1000101010001000101010001
  [01]: a rectangle at (5,6) with size (5,5) and color red and mask 1000101010001000101010001
  [011]: a rectangle at (1,0) with size (5,5) and color orange and mask 1010101110111110111010101
  [0111]: a rectangle at (5,6) with size (5,5) and color orange and mask 1010101110111110111010101
diff: 
delta:
   (116.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (2,1) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (6,7) with size (3,3) and color orange and mask 10101010
diff: 
delta: (3,2)=2  (7,8)=2 
! 36 wrong pixels (generated / expected)

TRAIN 0962bcdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color cyan and mask 10101010
  [01]: a rectangle at (8,7) with size (3,3) and color cyan and mask 10101010
diff: 
delta: (3,3)=6  (9,8)=6 
   (117.3 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color pink and mask 1000101010001000101010001
  [01]: a rectangle at (7,6) with size (5,5) and color pink and mask 1000101010001000101010001
  [011]: a rectangle at (1,1) with size (5,5) and color cyan and mask 1010101110111110111010101
  [0111]: a rectangle at (7,6) with size (5,5) and color cyan and mask 1010101110111110111010101
diff: 
delta:
   (116.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color cyan and mask 10101010
  [01]: a rectangle at (8,7) with size (3,3) and color cyan and mask 10101010
diff: 
delta: (3,3)=6  (9,8)=6 
! 35 wrong pixels (generated / expected)

TRAIN 0962bcdd.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,7) with size (3,3) and color green and mask 10101010
  [01]: a rectangle at (6,1) with size (3,3) and color green and mask 10101010
diff: 
delta: (2,8)=4  (7,2)=4 
! 36 wrong pixels (generated / expected)

TEST 0962bcdd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2326.1 bits (2326.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-388] Checking task 0a938d79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2518.7 = 2527.7
DL output with Mo: L = 9.0 + 50391.7 = 50400.7
DL input+output M: L = 17.9 + 52910.4 = 52928.4

# learning a model for train pairs
52928.4	
47835.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
42737.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
37634.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
32518.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
27348.6	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
26498.4	OUT DEF: size={size}
26370.0	IN  SHAPE at layer[0]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 19.9 + 2379.0 = 2399.0
DL output with Mo: L = 91.2 + 23879.9 = 23971.0
DL input+output M: L = 111.1 + 26258.9 = 26370.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,25) and color black and layers
  [0]: a point at (0,5) with color red
diff: 
delta: (9,7)=8 
   (60.8 bits)
data: a background with size (10,25) and color black and layers
  [0]: a rectangle at (0,5) with size (10,1) and color red and mask full
  [01]: a rectangle at (0,7) with size (10,1) and color cyan and mask full
  [011]: a rectangle at (0,9) with size (10,1) and color red and mask full
  [0111]: a rectangle at (0,11) with size (10,1) and color cyan and mask full
  [01111]: a rectangle at (0,13) with size (10,1) and color red and mask full
diff: 
delta: (0,15)=8  (0,17)=2  (0,19)=8  (0,21)=2  (0,23)=8  (1,15)=8  (1,17)=2  (1,19)=8  (1,21)=2  (1,23)=8  (2,15)=8  (2,17)=2  (2,19)=8  (2,21)=2  (2,23)=8  (3,15)=8  (3,17)=2  (3,19)=8  (3,21)=2  (3,23)=8  (4,15)=8  (4,17)=2  (4,19)=8  (4,21)=2  (4,23)=8  (5,15)=8  (5,17)=2  (5,19)=8  (5,21)=2  (5,23)=8  (6,15)=8  (6,17)=2  (6,19)=8  (6,21)=2  (6,23)=8  (7,15)=8  (7,17)=2  (7,19)=8  (7,21)=2  (7,23)=8  (8,15)=8  (8,17)=2  (8,19)=8  (8,21)=2  (8,23)=8  (9,15)=8  (9,17)=2  (9,19)=8  (9,21)=2  (9,23)=8 
   (1115.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,25) and color black and layers
  [0]: a point at (0,5) with color red
diff: 
delta: (9,7)=8 
! 104 wrong pixels (generated / expected)

TRAIN 0a938d79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,23) and color black and layers
  [0]: a point at (0,5) with color blue
diff: 
delta: (6,8)=3 
   (58.3 bits)
data: a background with size (7,23) and color black and layers
  [0]: a rectangle at (0,5) with size (7,1) and color blue and mask full
  [01]: a rectangle at (0,8) with size (7,1) and color green and mask full
  [011]: a rectangle at (0,11) with size (7,1) and color blue and mask full
  [0111]: a rectangle at (0,14) with size (7,1) and color green and mask full
  [01111]: a rectangle at (0,17) with size (7,1) and color blue and mask full
diff: 
delta: (0,20)=3  (1,20)=3  (2,20)=3  (3,20)=3  (4,20)=3  (5,20)=3  (6,20)=3 
   (284.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,23) and color black and layers
  [0]: a point at (0,5) with color blue
diff: 
delta: (6,8)=3 
! 46 wrong pixels (generated / expected)

TRAIN 0a938d79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (22,9) and color black and layers
  [0]: a point at (5,0) with color red
diff: 
delta: (7,8)=3 
   (59.5 bits)
data: a background with size (22,9) and color black and layers
  [0]: a rectangle at (5,0) with size (1,9) and color red and mask full
  [01]: a rectangle at (7,0) with size (1,9) and color green and mask full
  [011]: a rectangle at (9,0) with size (1,9) and color red and mask full
  [0111]: a rectangle at (11,0) with size (1,9) and color green and mask full
  [01111]: a rectangle at (13,0) with size (1,9) and color red and mask full
diff: 
delta: (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (17,0)=2  (17,1)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,5)=2  (17,6)=2  (17,7)=2  (17,8)=2  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,6)=3  (19,7)=3  (19,8)=3  (21,0)=2  (21,1)=2  (21,2)=2  (21,3)=2  (21,4)=2  (21,5)=2  (21,6)=2  (21,7)=2  (21,8)=2 
   (834.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,9) and color black and layers
  [0]: a point at (5,0) with color red
diff: 
delta: (7,8)=3 
! 85 wrong pixels (generated / expected)

TRAIN 0a938d79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (24,8) and color black and layers
  [0]: a point at (7,0) with color yellow
diff: 
delta: (11,0)=1 
   (59.3 bits)
data: a background with size (24,8) and color black and layers
  [0]: a rectangle at (7,0) with size (1,8) and color yellow and mask full
  [01]: a rectangle at (11,0) with size (1,8) and color blue and mask full
  [011]: a rectangle at (15,0) with size (1,8) and color yellow and mask full
  [0111]: a rectangle at (19,0) with size (1,8) and color blue and mask full
  [01111]: a rectangle at (23,0) with size (1,8) and color yellow and mask full
diff: 
delta:
   (153.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,8) and color black and layers
  [0]: a point at (7,0) with color yellow
diff: 
delta: (11,0)=1 
! 44 wrong pixels (generated / expected)

TRAIN 0a938d79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,27) and color black and layers
  [0]: a point at (0,5) with color green
diff: 
delta: (10,10)=4 
! 59 wrong pixels (generated / expected)

TEST 0a938d79.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 23879.9 bits (23879.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-387] Checking task 0b148d64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 99001.4 = 99010.4
DL output with Mo: L = 9.0 + 13888.5 = 13897.5
DL input+output M: L = 17.9 + 112889.9 = 112907.9

# learning a model for train pairs
112907.9	
84714.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
60608.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
49750.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
39697.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
39652.0	OUT DEF: color=black
39606.4	IN  DEF: color=black
39571.4	OUT DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 57.9 + 35749.1 = 35807.0
DL output with Mo: L = 29.4 + 3735.0 = 3764.4
DL input+output M: L = 87.3 + 39484.1 = 39571.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,14) with size (21,7) and color cyan and mask full
  [01]: a rectangle at (11,0) with size (10,10) and color red and mask 1111101101111111111110011001100000011011110101111100101111111111101111010111111011100111011111001110
  [011]: a rectangle at (0,0) with size (9,10) and color cyan and mask 1011111110110010010101001111100101100011011011111101111011111100011111101010011111011111
diff: 
delta: (0,18)=0  (1,17)=0  (1,18)=0  (1,19)=0  (2,16)=0  (3,16)=0  (3,17)=0  (3,18)=0  (4,17)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,19)=0  (5,20)=0  (6,17)=0  (7,15)=0  (8,19)=0  (8,20)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=0  (10,14)=0  (10,15)=0  (10,16)=0  (10,17)=0  (10,18)=0  (10,19)=0  (10,20)=0  (11,16)=0  (11,19)=0  (12,18)=0  (12,20)=0  (13,17)=0  (13,18)=0  (13,19)=0  (14,16)=0  (14,20)=0  (15,19)=0  (15,20)=0  (16,15)=0  (16,17)=0  (17,16)=0  (17,18)=0  (17,19)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,20)=0  (19,14)=0  (19,17)=0  (19,18)=0  (20,17)=0 
   (1447.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color red and mask 1111101101111111111110011001100000011011110101111100101111111111101111010111111011100111011111001110
diff: 
delta:
   (154.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,14) with size (21,7) and color cyan and mask full
  [01]: a rectangle at (11,0) with size (10,10) and color red and mask 1111101101111111111110011001100000011011110101111100101111111111101111010111111011100111011111001110
  [011]: a rectangle at (0,0) with size (9,10) and color cyan and mask 1011111110110010010101001111100101100011011011111101111011111100011111101010011111011111
diff: 
delta: (0,18)=0  (1,17)=0  (1,18)=0  (1,19)=0  (2,16)=0  (3,16)=0  (3,17)=0  (3,18)=0  (4,17)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,19)=0  (5,20)=0  (6,17)=0  (7,15)=0  (8,19)=0  (8,20)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=0  (10,14)=0  (10,15)=0  (10,16)=0  (10,17)=0  (10,18)=0  (10,19)=0  (10,20)=0  (11,16)=0  (11,19)=0  (12,18)=0  (12,20)=0  (13,17)=0  (13,18)=0  (13,19)=0  (14,16)=0  (14,20)=0  (15,19)=0  (15,20)=0  (16,15)=0  (16,17)=0  (17,16)=0  (17,18)=0  (17,19)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,20)=0  (19,14)=0  (19,17)=0  (19,18)=0  (20,17)=0 
! 74 wrong pixels (generated / expected)

TRAIN 0b148d64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (11,10) with size (7,9) and color green and mask 10100110101110110101010001111100011001010111011000111110111110
  [01]: a rectangle at (0,10) with size (6,9) and color red and mask 10111101111011000001111110111110111000111110100111101
  [011]: a rectangle at (0,0) with size (6,7) and color red and mask 101011111110100110101010110011011110111101
diff: 
delta: (11,0)=2  (11,2)=2  (11,6)=2  (12,1)=2  (12,2)=2  (12,5)=2  (12,6)=2  (13,1)=2  (13,2)=2  (13,5)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,5)=2  (14,6)=2  (15,0)=2  (15,3)=2  (15,4)=2  (15,5)=2  (16,0)=2  (16,2)=2  (16,6)=2  (17,1)=2  (17,2)=2  (17,4)=2  (17,5)=2 
   (804.6 bits)
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (0,0) with size (7,9) and color green and mask 10100110101110110101010001111100011001010111011000111110111110
diff: 
delta:
   (114.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (11,10) with size (7,9) and color green and mask 10100110101110110101010001111100011001010111011000111110111110
  [01]: a rectangle at (0,10) with size (6,9) and color red and mask 10111101111011000001111110111110111000111110100111101
  [011]: a rectangle at (0,0) with size (6,7) and color red and mask 101011111110100110101010110011011110111101
diff: 
delta: (11,0)=2  (11,2)=2  (11,6)=2  (12,1)=2  (12,2)=2  (12,5)=2  (12,6)=2  (13,1)=2  (13,2)=2  (13,5)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,5)=2  (14,6)=2  (15,0)=2  (15,3)=2  (15,4)=2  (15,5)=2  (16,0)=2  (16,2)=2  (16,6)=2  (17,1)=2  (17,2)=2  (17,4)=2  (17,5)=2 
! size mismatch, 10x10 instead of 7x9

TRAIN 0b148d64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,17) and color black and layers
  [0]: a rectangle at (0,0) with size (7,17) and color blue and mask full
  [01]: a rectangle at (10,8) with size (9,9) and color blue and mask 11100111101011101011101010111000010011111111101010011111110010011111101111111001
  [011]: a rectangle at (10,0) with size (9,6) and color yellow and mask 101011000010101110011110110111011110100101101111101001
diff: 
delta: (0,0)=0  (0,2)=0  (0,6)=0  (0,7)=0  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=0  (0,15)=0  (0,16)=0  (1,1)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,6)=0  (1,7)=0  (1,14)=0  (2,2)=0  (2,5)=0  (2,6)=0  (2,7)=0  (2,14)=0  (3,2)=0  (3,3)=0  (3,6)=0  (3,7)=0  (3,10)=0  (4,0)=0  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,16)=0  (5,1)=0  (5,2)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,10)=0  (5,11)=0  (6,0)=0  (6,1)=0  (6,2)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,11)=0  (6,12)=0  (6,14)=0  (6,15)=0 
   (1323.3 bits)
data: a background with size (9,6) and color black and layers
  [0]: a rectangle at (0,0) with size (9,6) and color yellow and mask 101011000010101110011110110111011110100101101111101001
diff: 
delta:
   (104.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color black and layers
  [0]: a rectangle at (0,0) with size (7,17) and color blue and mask full
  [01]: a rectangle at (10,8) with size (9,9) and color blue and mask 11100111101011101011101010111000010011111111101010011111110010011111101111111001
  [011]: a rectangle at (10,0) with size (9,6) and color yellow and mask 101011000010101110011110110111011110100101101111101001
diff: 
delta: (0,0)=0  (0,2)=0  (0,6)=0  (0,7)=0  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=0  (0,15)=0  (0,16)=0  (1,1)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,6)=0  (1,7)=0  (1,14)=0  (2,2)=0  (2,5)=0  (2,6)=0  (2,7)=0  (2,14)=0  (3,2)=0  (3,3)=0  (3,6)=0  (3,7)=0  (3,10)=0  (4,0)=0  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,16)=0  (5,1)=0  (5,2)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,10)=0  (5,11)=0  (6,0)=0  (6,1)=0  (6,2)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,11)=0  (6,12)=0  (6,14)=0  (6,15)=0 
! size mismatch, 10x10 instead of 9x6

TRAIN 0b148d64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (0,8) with size (6,9) and color green and mask 100100011110111010001011011001111000000111010011111101
  [01]: a rectangle at (0,0) with size (6,6) and color blue and mask 111111111111111000011011110101101111
  [011]: a rectangle at (10,8) with size (5,9) and color green and mask 11011100101111110100010001000111010101010111
diff: 
delta: (10,0)=3  (10,5)=3  (11,1)=3  (11,2)=3  (11,5)=3  (12,0)=3  (12,1)=3  (12,2)=3  (12,3)=3  (12,4)=3  (13,0)=3  (13,2)=3  (13,4)=3  (14,1)=3  (14,2)=3 
! size mismatch, 10x10 instead of 6x6

TEST 0b148d64.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3735.0 bits (3735.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-386] Checking task 0ca9ddb6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2453.6 = 2462.6
DL output with Mo: L = 9.0 + 8087.2 = 8096.1
DL input+output M: L = 17.9 + 10540.8 = 10558.8

# learning a model for train pairs
10558.8	
9630.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9069.9	OUT DEF: size={size}
8738.2	OUT DEF: layer[0].mask=10101010
8553.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8415.7	OUT DEF: layer[0].color=orange
8332.0	IN  SHAPE at layer[0]: a point at ? with color ?
8194.0	IN  DEF: layer[0].color=red
8096.6	IN  SHAPE at layer[01]: a point at ? with color ?
7958.6	IN  DEF: layer[01].color=blue
7886.9	OUT SHAPE at layer[011]: a point at ? with color ?
7748.9	OUT DEF: layer[011].color=yellow
7674.9	OUT SHAPE at layer[0111]: a point at ? with color ?
7220.4	OUT DEF: layer[0111]={layer[0]}
7143.0	OUT SHAPE at layer[01111]: a point at ? with color ?
7005.0	OUT DEF: layer[01111].color=yellow
6922.0	OUT SHAPE at layer[011111]: a point at ? with color ?
6467.6	OUT DEF: layer[011111]={layer[01]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color orange and mask 10101010
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a point at ? with color yellow
  [0111]: {layer[0]}
  [01111]: a point at ? with color yellow
  [011111]: {layer[01]}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color red
  [01]: a point at ? with color blue

DL input  with Mi: L = 32.7 + 1972.3 = 2005.0
DL output with Mo: L = 80.9 + 4381.6 = 4462.5
DL input+output M: L = 113.6 + 6353.9 = 6467.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (3,2) with color red
  [01]: a point at (6,6) with color blue
diff: 
delta:
   (40.7 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,5) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (2,1) with size (1,1) and color yellow and mask full
  [011]: a point at (2,3) with color yellow
  [0111]: a point at (3,2) with color red
  [01111]: a point at (4,1) with color yellow
  [011111]: a point at (6,6) with color blue
diff: 
delta: (4,3)=4 
   (87.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (3,2) with color red
  [01]: a point at (6,6) with color blue
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,6) with color red
  [01]: a point at (3,2) with color blue
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
   (96.5 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,1) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (5,5) with size (3,3) and color orange and mask 10101010
  [011]: a point at (1,5) with color yellow
  [0111]: a point at (2,6) with color red
  [01111]: a point at (1,7) with color yellow
  [011111]: a point at (3,2) with color blue
diff: 
delta: (0,3)=8  (3,5)=4  (3,7)=4  (6,0)=4  (6,2)=4  (6,6)=1  (7,1)=2  (8,0)=4  (8,2)=4 
   (245.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,6) with color red
  [01]: a point at (3,2) with color blue
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,6) with color red
  [01]: a point at (6,6) with color blue
diff: 
delta: (0,3)=8  (3,2)=1  (7,1)=2 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a point at (7,1) with color red
  [01]: a point at (3,2) with color blue
diff: 
delta: (0,3)=8  (2,6)=2  (6,6)=1 
! 23 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,2) with color red
  [01]: a point at (7,3) with color blue
diff: 
delta: (5,6)=6 
   (60.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (6,2) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
  [011]: a point at (1,3) with color yellow
  [0111]: a point at (2,2) with color red
  [01111]: a point at (3,1) with color yellow
  [011111]: a point at (7,3) with color blue
diff: 
delta: (3,3)=4  (5,6)=6 
   (105.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,2) with color red
  [01]: a point at (7,3) with color blue
diff: 
delta: (5,6)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,2) with color red
  [01]: a point at (5,6) with color pink
diff:   layer[01].color
delta: (7,3)=1 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a point at (5,6) with color pink
  [01]: a point at (7,3) with color blue
diff:   layer[0].color
delta: (2,2)=2 
! 12 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (3,2) with color red
  [01]: a point at (2,6) with color blue
diff: 
delta: (5,5)=8  (7,1)=6  (7,7)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a point at (7,7) with color red
  [01]: a point at (2,6) with color blue
diff: 
delta: (3,2)=2  (5,5)=8  (7,1)=6 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a point at (3,2) with color red
  [01]: a point at (5,5) with color cyan
diff:   layer[01].color
delta: (2,6)=1  (7,1)=6  (7,7)=2 
! 19 wrong pixels (generated / expected)

TEST 0ca9ddb6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4381.6 bits (4381.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-385] Checking task 0d3d703e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4419.8 = 4428.8
DL output with Mo: L = 9.0 + 4419.8 = 4428.8
DL input+output M: L = 17.9 + 8839.6 = 8857.5

# learning a model for train pairs
8857.5	
8047.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7142.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6332.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5426.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4934.0	OUT DEF: size={size}
4568.8	OUT DEF: layer[0].size={layer[0].size}
4203.6	OUT DEF: layer[01].size={layer[01].size}
3918.2	OUT DEF: layer[0].pos={layer[0].pos}
3632.9	OUT DEF: layer[01].pos={layer[01].pos}
3539.0	OUT DEF: layer[0].mask=full
3445.1	OUT DEF: layer[01].mask=full
3351.2	IN  DEF: layer[0].mask=full
3257.3	IN  DEF: layer[01].mask=full
3209.1	IN  DEF: size=(?,?)
2991.6	IN  DEF: size.i=3
2774.1	IN  DEF: size.j=3
2725.9	IN  DEF: layer[0].pos=(?,?)
2609.2	IN  DEF: layer[0].pos.i=0
2492.5	IN  DEF: layer[0].pos.j=0
2444.3	IN  DEF: layer[0].size=(?,?)
2226.8	IN  DEF: layer[0].size.i=3
2132.9	IN  DEF: layer[0].size.j=1
2084.6	IN  DEF: layer[01].pos=(?,?)
1968.0	IN  DEF: layer[01].pos.i=0
1851.3	IN  DEF: layer[01].pos.j=1
1803.0	IN  DEF: layer[01].size=(?,?)
1585.5	IN  DEF: layer[01].size.i=3
1491.6	IN  DEF: layer[01].size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask full
  [01]: a rectangle at {layer[01].pos} with size {layer[01].size} and color ? and mask full
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (0,0) with size (3,1) and color ? and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color ? and mask full

DL input  with Mi: L = 69.6 + 690.1 = 759.7
DL output with Mo: L = 41.8 + 690.1 = 731.9
DL input+output M: L = 111.4 + 1380.3 = 1491.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color blue and mask full
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,1) and color yellow and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color grey and mask full
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color blue and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color red and mask full
diff:   layer[01].pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,2) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color blue and mask full
diff:   layer[0].pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color green and mask full
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,1) and color pink and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color yellow and mask full
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color green and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color cyan and mask full
diff:   layer[01].pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color green and mask full
diff:   layer[0].pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color cyan and mask full
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,1) and color blue and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color brown and mask full
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color cyan and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color pink and mask full
diff:   layer[01].pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,2) with size (3,1) and color pink and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color cyan and mask full
diff:   layer[0].pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,1) and color brown and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color yellow and mask full
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color green and mask full
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,1) and color brown and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color yellow and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,1) and color brown and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color red and mask full
diff:   layer[01].pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,2) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color yellow and mask full
diff:   layer[0].pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color blue and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color green and mask full
diff:   layer[01].pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,2) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color blue and mask full
diff:   layer[0].pos.j
delta:
! 9 wrong pixels (generated / expected)

TEST 0d3d703e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 690.1 bits (690.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-384] Checking task 0dfd9992.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 211233.8 = 211242.8
DL output with Mo: L = 9.0 + 204921.9 = 204930.9
DL input+output M: L = 17.9 + 416155.7 = 416173.6

# learning a model for train pairs
416173.6	
412906.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
409638.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
404780.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
401512.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 207948.9 = 207975.4
DL output with Mo: L = 59.8 + 193477.6 = 193537.4
DL input+output M: L = 86.4 + 401426.5 = 401512.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color grey and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 10101010
diff: 
delta: (0,0)=3  (0,1)=6  (0,3)=6  (0,4)=3  (0,5)=2  (0,6)=3  (0,7)=6  (0,9)=6  (0,10)=3  (0,11)=2  (0,12)=3  (0,13)=6  (0,15)=6  (0,16)=3  (0,17)=2  (0,18)=3  (0,19)=6  (1,0)=6  (1,1)=3  (1,3)=3  (1,4)=6  (1,6)=6  (1,7)=3  (1,8)=2  (1,9)=3  (1,10)=6  (1,12)=6  (1,13)=3  (1,14)=2  (1,15)=3  (1,16)=6  (1,18)=6  (1,19)=3  (1,20)=2  (2,2)=1  (2,5)=4  (2,7)=2  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,3)=3  (3,4)=6  (3,6)=6  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=6  (3,12)=6  (3,13)=3  (3,14)=2  (3,15)=3  (3,16)=6  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=3  (4,1)=6  (4,3)=6  (4,4)=3  (4,5)=2  (4,6)=3  (4,7)=6  (4,9)=6  (4,10)=3  (4,11)=2  (4,12)=3  (4,13)=6  (4,15)=0  (4,16)=0  (4,17)=0  (4,18)=0  (4,19)=0  (5,0)=2  (5,2)=4  (5,4)=2  (5,5)=1  (5,6)=2  (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=1  (5,12)=2  (5,14)=4  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=0  (5,19)=0  (5,20)=4  (6,0)=3  (6,1)=6  (6,3)=6  (6,4)=3  (6,5)=2  (6,6)=3  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=2  (6,12)=3  (6,13)=6  (6,15)=0  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (7,0)=6  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=6  (7,6)=6  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,12)=6  (7,13)=3  (7,14)=2  (7,15)=3  (7,16)=6  (7,18)=6  (7,19)=3  (7,20)=2  (8,1)=2  (8,2)=1  (8,3)=2  (8,5)=4  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=4  (8,13)=2  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=2  (8,20)=1  (9,0)=6  (9,1)=3  (9,2)=2  (9,3)=3  (9,4)=6  (9,6)=6  (9,7)=3  (9,8)=0  (9,9)=0  (9,10)=6  (9,12)=6  (9,13)=3  (9,14)=2  (9,15)=3  (9,16)=6  (9,18)=6  (9,19)=3  (9,20)=2  (10,0)=3  (10,1)=6  (10,3)=6  (10,4)=3  (10,5)=2  (10,6)=3  (10,7)=6  (10,9)=6  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,15)=6  (10,16)=3  (10,17)=2  (10,18)=3  (10,19)=6  (11,0)=2  (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,20)=4  (12,0)=3  (12,1)=6  (12,3)=0  (12,4)=0  (12,5)=2  (12,6)=3  (12,7)=6  (12,9)=6  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,15)=6  (12,16)=3  (12,17)=2  (12,18)=3  (12,19)=6  (13,0)=6  (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,6)=6  (13,7)=3  (13,8)=2  (13,9)=3  (13,10)=6  (13,12)=6  (13,13)=3  (13,14)=2  (13,15)=3  (13,16)=6  (13,18)=6  (13,19)=3  (13,20)=2  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=2  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=2  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=2  (14,20)=1  (15,0)=6  (15,1)=3  (15,2)=2  (15,3)=3  (15,4)=6  (15,6)=6  (15,7)=3  (15,8)=2  (15,9)=3  (15,10)=6  (15,12)=6  (15,13)=3  (15,14)=2  (15,15)=3  (15,16)=6  (15,18)=6  (15,19)=3  (15,20)=2  (16,0)=3  (16,1)=6  (16,3)=6  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,9)=6  (16,10)=3  (16,11)=2  (16,12)=3  (16,13)=6  (16,15)=6  (16,16)=3  (16,17)=2  (16,18)=3  (16,19)=6  (17,0)=2  (17,2)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,20)=4  (18,0)=3  (18,1)=6  (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=6  (18,9)=6  (18,10)=3  (18,11)=2  (18,12)=3  (18,13)=6  (18,15)=6  (18,16)=3  (18,17)=2  (18,18)=3  (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=6  (19,6)=6  (19,7)=3  (19,8)=2  (19,9)=3  (19,10)=6  (19,12)=6  (19,13)=3  (19,14)=2  (19,15)=3  (19,16)=6  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=2  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=2  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=2  (20,20)=1 
   (6891.5 bits)
data: a background with size (21,21) and color pink and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 10101010
  [01]: a rectangle at (1,7) with size (3,3) and color red and mask 10101010
  [011]: a rectangle at (2,0) with size (1,19) and color grey and mask full
diff: 
delta: (0,0)=3  (0,2)=5# (0,4)=3  (0,5)=2  (0,6)=3  (0,8)=5# (0,10)=3  (0,11)=2  (0,12)=3  (0,14)=5# (0,16)=3  (0,17)=2  (0,18)=3  (0,20)=5# (1,1)=3  (1,3)=3  (1,5)=5# (1,7)=3  (1,9)=3  (1,11)=5# (1,13)=3  (1,14)=2  (1,15)=3  (1,17)=5# (1,19)=3  (1,20)=2  (2,2)=1  (2,5)=4  (2,8)=1  (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,1)=3  (3,3)=3  (3,5)=5# (3,7)=3  (3,9)=3  (3,11)=5# (3,13)=3  (3,14)=2  (3,15)=3  (3,17)=5# (3,19)=3  (3,20)=2  (4,0)=3  (4,2)=5# (4,4)=3  (4,5)=2  (4,6)=3  (4,8)=5# (4,10)=3  (4,11)=2  (4,12)=3  (4,14)=5# (4,16)=3  (4,17)=2  (4,18)=3  (4,20)=5# (5,0)=2  (5,1)=5# (5,2)=4  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=4  (5,9)=5# (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=5# (5,14)=4  (5,15)=5# (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=4  (6,0)=3  (6,2)=5# (6,4)=3  (6,5)=2  (6,6)=3  (6,8)=5# (6,10)=3  (6,11)=2  (6,12)=3  (6,14)=5# (6,16)=3  (6,17)=2  (6,18)=3  (6,20)=5# (7,1)=3  (7,2)=2  (7,3)=3  (7,5)=5# (7,7)=3  (7,8)=2  (7,9)=3  (7,11)=5# (7,13)=3  (7,14)=2  (7,15)=3  (7,17)=5# (7,19)=3  (7,20)=2  (8,0)=5# (8,1)=2  (8,2)=1  (8,3)=2  (8,4)=5# (8,5)=4  (8,6)=5# (8,7)=2  (8,8)=1  (8,9)=2  (8,10)=5# (8,11)=4  (8,12)=5# (8,13)=2  (8,14)=1  (8,15)=2  (8,16)=5# (8,17)=4  (8,18)=5# (8,19)=2  (8,20)=1  (9,1)=3  (9,2)=2  (9,3)=3  (9,5)=5# (9,7)=3  (9,8)=2  (9,9)=3  (9,11)=5# (9,13)=3  (9,14)=2  (9,15)=3  (9,17)=5# (9,19)=3  (9,20)=2  (10,0)=3  (10,2)=5# (10,4)=3  (10,5)=2  (10,6)=3  (10,8)=5# (10,10)=3  (10,11)=2  (10,12)=3  (10,14)=5# (10,16)=3  (10,17)=2  (10,18)=3  (10,20)=5# (11,0)=2  (11,1)=5# (11,2)=4  (11,3)=5# (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=5# (11,8)=4  (11,9)=5# (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=5# (11,14)=4  (11,15)=5# (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=5# (11,20)=4  (12,0)=3  (12,2)=5# (12,4)=3  (12,5)=2  (12,6)=3  (12,8)=5# (12,10)=3  (12,11)=2  (12,12)=3  (12,14)=5# (12,16)=3  (12,17)=2  (12,18)=3  (12,20)=5# (13,1)=3  (13,2)=2  (13,3)=3  (13,5)=5# (13,7)=3  (13,8)=2  (13,9)=3  (13,11)=5# (13,13)=3  (13,14)=2  (13,15)=3  (13,17)=5# (13,19)=3  (13,20)=2  (14,0)=5# (14,1)=2  (14,2)=1  (14,3)=2  (14,4)=5# (14,5)=4  (14,6)=5# (14,7)=2  (14,8)=1  (14,9)=2  (14,10)=5# (14,11)=4  (14,12)=5# (14,13)=2  (14,14)=1  (14,15)=2  (14,16)=5# (14,17)=4  (14,18)=5# (14,19)=2  (14,20)=1  (15,1)=3  (15,2)=2  (15,3)=3  (15,5)=5# (15,7)=3  (15,8)=2  (15,9)=3  (15,11)=5# (15,13)=3  (15,14)=2  (15,15)=3  (15,17)=5# (15,19)=3  (15,20)=2  (16,0)=3  (16,2)=5# (16,4)=3  (16,5)=2  (16,6)=3  (16,8)=5# (16,10)=3  (16,11)=2  (16,12)=3  (16,14)=5# (16,16)=3  (16,17)=2  (16,18)=3  (16,20)=5# (17,0)=2  (17,1)=5# (17,2)=4  (17,3)=5# (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=5# (17,8)=4  (17,9)=5# (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=5# (17,14)=4  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=4  (18,0)=3  (18,2)=5# (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=5# (18,10)=3  (18,11)=2  (18,12)=3  (18,14)=5# (18,16)=3  (18,17)=2  (18,18)=3  (18,20)=5# (19,1)=3  (19,2)=2  (19,3)=3  (19,5)=5# (19,7)=3  (19,8)=2  (19,9)=3  (19,11)=5# (19,13)=3  (19,14)=2  (19,15)=3  (19,17)=5# (19,19)=3  (19,20)=2  (20,0)=5# (20,1)=2  (20,2)=1  (20,3)=2  (20,4)=5# (20,5)=4  (20,6)=5# (20,7)=2  (20,8)=1  (20,9)=2  (20,10)=5# (20,11)=4  (20,12)=5# (20,13)=2  (20,14)=1  (20,15)=2  (20,16)=5# (20,17)=4  (20,18)=5# (20,19)=2  (20,20)=1 
   (6631.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 10101010
diff: 
delta: (0,0)=3  (0,1)=6  (0,3)=6  (0,4)=3  (0,5)=2  (0,6)=3  (0,7)=6  (0,9)=6  (0,10)=3  (0,11)=2  (0,12)=3  (0,13)=6  (0,15)=6  (0,16)=3  (0,17)=2  (0,18)=3  (0,19)=6  (1,0)=6  (1,1)=3  (1,3)=3  (1,4)=6  (1,6)=6  (1,7)=3  (1,8)=2  (1,9)=3  (1,10)=6  (1,12)=6  (1,13)=3  (1,14)=2  (1,15)=3  (1,16)=6  (1,18)=6  (1,19)=3  (1,20)=2  (2,2)=1  (2,5)=4  (2,7)=2  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,3)=3  (3,4)=6  (3,6)=6  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=6  (3,12)=6  (3,13)=3  (3,14)=2  (3,15)=3  (3,16)=6  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=3  (4,1)=6  (4,3)=6  (4,4)=3  (4,5)=2  (4,6)=3  (4,7)=6  (4,9)=6  (4,10)=3  (4,11)=2  (4,12)=3  (4,13)=6  (4,15)=0  (4,16)=0  (4,17)=0  (4,18)=0  (4,19)=0  (5,0)=2  (5,2)=4  (5,4)=2  (5,5)=1  (5,6)=2  (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=1  (5,12)=2  (5,14)=4  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=0  (5,19)=0  (5,20)=4  (6,0)=3  (6,1)=6  (6,3)=6  (6,4)=3  (6,5)=2  (6,6)=3  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=2  (6,12)=3  (6,13)=6  (6,15)=0  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (7,0)=6  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=6  (7,6)=6  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,12)=6  (7,13)=3  (7,14)=2  (7,15)=3  (7,16)=6  (7,18)=6  (7,19)=3  (7,20)=2  (8,1)=2  (8,2)=1  (8,3)=2  (8,5)=4  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=4  (8,13)=2  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=2  (8,20)=1  (9,0)=6  (9,1)=3  (9,2)=2  (9,3)=3  (9,4)=6  (9,6)=6  (9,7)=3  (9,8)=0  (9,9)=0  (9,10)=6  (9,12)=6  (9,13)=3  (9,14)=2  (9,15)=3  (9,16)=6  (9,18)=6  (9,19)=3  (9,20)=2  (10,0)=3  (10,1)=6  (10,3)=6  (10,4)=3  (10,5)=2  (10,6)=3  (10,7)=6  (10,9)=6  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,15)=6  (10,16)=3  (10,17)=2  (10,18)=3  (10,19)=6  (11,0)=2  (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,20)=4  (12,0)=3  (12,1)=6  (12,3)=0  (12,4)=0  (12,5)=2  (12,6)=3  (12,7)=6  (12,9)=6  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,15)=6  (12,16)=3  (12,17)=2  (12,18)=3  (12,19)=6  (13,0)=6  (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,6)=6  (13,7)=3  (13,8)=2  (13,9)=3  (13,10)=6  (13,12)=6  (13,13)=3  (13,14)=2  (13,15)=3  (13,16)=6  (13,18)=6  (13,19)=3  (13,20)=2  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=2  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=2  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=2  (14,20)=1  (15,0)=6  (15,1)=3  (15,2)=2  (15,3)=3  (15,4)=6  (15,6)=6  (15,7)=3  (15,8)=2  (15,9)=3  (15,10)=6  (15,12)=6  (15,13)=3  (15,14)=2  (15,15)=3  (15,16)=6  (15,18)=6  (15,19)=3  (15,20)=2  (16,0)=3  (16,1)=6  (16,3)=6  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,9)=6  (16,10)=3  (16,11)=2  (16,12)=3  (16,13)=6  (16,15)=6  (16,16)=3  (16,17)=2  (16,18)=3  (16,19)=6  (17,0)=2  (17,2)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,20)=4  (18,0)=3  (18,1)=6  (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=6  (18,9)=6  (18,10)=3  (18,11)=2  (18,12)=3  (18,13)=6  (18,15)=6  (18,16)=3  (18,17)=2  (18,18)=3  (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=6  (19,6)=6  (19,7)=3  (19,8)=2  (19,9)=3  (19,10)=6  (19,12)=6  (19,13)=3  (19,14)=2  (19,15)=3  (19,16)=6  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=2  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=2  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=2  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 110100110010110
diff: 
delta: (0,0)=2  (0,3)=2  (0,5)=5# (0,7)=2  (0,8)=7# (0,9)=7# (0,10)=2  (0,12)=5# (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,19)=5# (1,1)=5# (1,2)=5# (1,4)=4  (1,5)=3  (1,6)=4  (1,7)=7# (1,8)=5# (1,9)=5# (1,10)=7# (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,1)=5# (2,2)=5# (2,4)=4  (2,5)=3  (2,6)=4  (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=7# (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,0)=2  (3,3)=2  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=7# (3,10)=2  (3,12)=5# (3,14)=2  (3,15)=7# (3,16)=0  (3,17)=0  (3,19)=5# (4,1)=4  (4,2)=4  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=3  (4,12)=2  (4,13)=3  (4,15)=4  (4,16)=0  (4,17)=0  (4,18)=3  (4,19)=2  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,15)=3  (5,16)=0  (5,17)=0  (5,18)=2  (5,19)=1  (5,20)=2  (6,1)=4  (6,2)=4  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=3  (6,12)=2  (6,13)=3  (6,15)=4  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (6,20)=3  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,5)=5# (7,7)=2  (7,8)=7# (7,9)=7# (7,10)=2  (7,12)=5# (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=0  (7,18)=0  (7,19)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=3  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=0  (8,18)=0  (8,19)=0  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,5)=3  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=5# (10,7)=2  (10,8)=7# (10,9)=7# (10,10)=2  (10,12)=5# (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,19)=5# (11,1)=4  (11,2)=4  (11,4)=3  (11,5)=2  (11,6)=3  (11,8)=4  (11,9)=4  (11,11)=3  (11,12)=2  (11,13)=3  (11,15)=4  (11,16)=4  (11,18)=3  (11,19)=2  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,1)=4  (13,2)=4  (13,4)=3  (13,5)=2  (13,6)=3  (13,8)=4  (13,9)=4  (13,11)=3  (13,12)=2  (13,13)=3  (13,15)=4  (13,16)=0  (13,17)=0  (13,18)=3  (13,19)=2  (13,20)=3  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,5)=5# (14,7)=2  (14,8)=7# (14,9)=7# (14,10)=2  (14,12)=5# (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,19)=5# (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,5)=5# (17,7)=2  (17,8)=7# (17,9)=7# (17,10)=2  (17,12)=5# (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,19)=5# (18,1)=4  (18,2)=4  (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=4  (18,9)=4  (18,11)=3  (18,12)=2  (18,13)=3  (18,15)=4  (18,16)=4  (18,18)=3  (18,19)=2  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,1)=4  (20,2)=4  (20,4)=3  (20,5)=2  (20,6)=3  (20,8)=4  (20,9)=4  (20,11)=3  (20,12)=2  (20,13)=3  (20,15)=4  (20,16)=4  (20,18)=3  (20,19)=2  (20,20)=3 
   (7393.2 bits)
data: a background with size (21,21) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 110100110010110
  [01]: a rectangle at (0,7) with size (4,4) and color orange and mask 110100110010110
  [011]: a rectangle at (1,1) with size (2,16) and color grey and mask full
diff: 
delta: (0,0)=2  (0,3)=2  (0,5)=5# (0,7)=2  (0,10)=2  (0,12)=5# (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,19)=5# (1,4)=4  (1,5)=3  (1,6)=4  (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,4)=4  (2,5)=3  (2,6)=4  (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,0)=2  (3,3)=2  (3,5)=5# (3,7)=2  (3,10)=2  (3,12)=5# (3,14)=2  (3,15)=7# (3,16)=7# (3,17)=2  (3,19)=5# (4,1)=4  (4,2)=4  (4,4)=3  (4,5)=2  (4,6)=3  (4,8)=4  (4,9)=4  (4,11)=3  (4,12)=2  (4,13)=3  (4,15)=4  (4,16)=4  (4,18)=3  (4,19)=2  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=3  (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,15)=3  (5,16)=3  (5,17)=5# (5,18)=2  (5,19)=1  (5,20)=2  (6,1)=4  (6,2)=4  (6,4)=3  (6,5)=2  (6,6)=3  (6,8)=4  (6,9)=4  (6,11)=3  (6,12)=2  (6,13)=3  (6,15)=4  (6,16)=4  (6,18)=3  (6,19)=2  (6,20)=3  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,5)=5# (7,7)=2  (7,8)=7# (7,9)=7# (7,10)=2  (7,12)=5# (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=2  (7,19)=5# (8,0)=7# (8,1)=5# (8,2)=5# (8,3)=7# (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=7# (8,18)=4  (8,19)=3  (8,20)=4  (9,0)=7# (9,1)=5# (9,2)=5# (9,3)=7# (9,4)=4  (9,5)=3  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=7# (9,18)=4  (9,19)=3  (9,20)=4  (10,0)=2  (10,1)=7# (10,2)=7# (10,3)=2  (10,5)=5# (10,7)=2  (10,8)=7# (10,9)=7# (10,10)=2  (10,12)=5# (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,19)=5# (11,1)=4  (11,2)=4  (11,4)=3  (11,5)=2  (11,6)=3  (11,8)=4  (11,9)=4  (11,11)=3  (11,12)=2  (11,13)=3  (11,15)=4  (11,16)=4  (11,18)=3  (11,19)=2  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,1)=4  (13,2)=4  (13,4)=3  (13,5)=2  (13,6)=3  (13,8)=4  (13,9)=4  (13,11)=3  (13,12)=2  (13,13)=3  (13,15)=4  (13,16)=4  (13,18)=3  (13,19)=2  (13,20)=3  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,5)=5# (14,7)=2  (14,8)=7# (14,9)=7# (14,10)=2  (14,12)=5# (14,14)=2  (14,15)=7# (14,16)=7# (14,17)=2  (14,19)=5# (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=5# (15,17)=7# (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,5)=5# (17,7)=2  (17,8)=7# (17,9)=7# (17,10)=2  (17,12)=5# (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,19)=5# (18,1)=4  (18,2)=4  (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=4  (18,9)=4  (18,11)=3  (18,12)=2  (18,13)=3  (18,15)=4  (18,16)=4  (18,18)=3  (18,19)=2  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,1)=4  (20,2)=4  (20,4)=3  (20,5)=2  (20,6)=3  (20,8)=4  (20,9)=4  (20,11)=3  (20,12)=2  (20,13)=3  (20,15)=4  (20,16)=4  (20,18)=3  (20,19)=2  (20,20)=3 
   (6906.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 110100110010110
diff: 
delta: (0,0)=2  (0,3)=2  (0,5)=5# (0,7)=2  (0,8)=7# (0,9)=7# (0,10)=2  (0,12)=5# (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,19)=5# (1,1)=5# (1,2)=5# (1,4)=4  (1,5)=3  (1,6)=4  (1,7)=7# (1,8)=5# (1,9)=5# (1,10)=7# (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,1)=5# (2,2)=5# (2,4)=4  (2,5)=3  (2,6)=4  (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=7# (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,0)=2  (3,3)=2  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=7# (3,10)=2  (3,12)=5# (3,14)=2  (3,15)=7# (3,16)=0  (3,17)=0  (3,19)=5# (4,1)=4  (4,2)=4  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=3  (4,12)=2  (4,13)=3  (4,15)=4  (4,16)=0  (4,17)=0  (4,18)=3  (4,19)=2  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,15)=3  (5,16)=0  (5,17)=0  (5,18)=2  (5,19)=1  (5,20)=2  (6,1)=4  (6,2)=4  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=3  (6,12)=2  (6,13)=3  (6,15)=4  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (6,20)=3  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,5)=5# (7,7)=2  (7,8)=7# (7,9)=7# (7,10)=2  (7,12)=5# (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=0  (7,18)=0  (7,19)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=3  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=0  (8,18)=0  (8,19)=0  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,5)=3  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=5# (10,7)=2  (10,8)=7# (10,9)=7# (10,10)=2  (10,12)=5# (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,19)=5# (11,1)=4  (11,2)=4  (11,4)=3  (11,5)=2  (11,6)=3  (11,8)=4  (11,9)=4  (11,11)=3  (11,12)=2  (11,13)=3  (11,15)=4  (11,16)=4  (11,18)=3  (11,19)=2  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,1)=4  (13,2)=4  (13,4)=3  (13,5)=2  (13,6)=3  (13,8)=4  (13,9)=4  (13,11)=3  (13,12)=2  (13,13)=3  (13,15)=4  (13,16)=0  (13,17)=0  (13,18)=3  (13,19)=2  (13,20)=3  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,5)=5# (14,7)=2  (14,8)=7# (14,9)=7# (14,10)=2  (14,12)=5# (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,19)=5# (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,5)=5# (17,7)=2  (17,8)=7# (17,9)=7# (17,10)=2  (17,12)=5# (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,19)=5# (18,1)=4  (18,2)=4  (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=4  (18,9)=4  (18,11)=3  (18,12)=2  (18,13)=3  (18,15)=4  (18,16)=4  (18,18)=3  (18,19)=2  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,1)=4  (20,2)=4  (20,4)=3  (20,5)=2  (20,6)=3  (20,8)=4  (20,9)=4  (20,11)=3  (20,12)=2  (20,13)=3  (20,15)=4  (20,16)=4  (20,18)=3  (20,19)=2  (20,20)=3 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color green and layers
  [0]: a rectangle at (1,0) with size (1,21) and color red and mask full
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=0  (17,2)=0  (17,3)=0  (17,4)=0  (17,5)=0  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (6510.2 bits)
data: a background with size (21,21) and color green and layers
  [0]: a rectangle at (1,0) with size (1,21) and color red and mask full
  [01]: a rectangle at (3,0) with size (1,21) and color pink and mask full
  [011]: a rectangle at (5,0) with size (1,21) and color red and mask full
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,1)=2  (2,3)=6  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,1)=5# (3,3)=1  (3,5)=5# (3,7)=1  (3,9)=5# (3,11)=1  (3,13)=5# (3,15)=1  (3,17)=5# (3,19)=1  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,15)=6  (4,17)=2  (4,19)=6  (5,1)=1  (5,3)=5# (5,5)=1  (5,7)=5# (5,9)=1  (5,11)=5# (5,13)=1  (5,15)=5# (5,17)=1  (5,19)=5# (6,1)=2  (6,3)=6  (6,5)=2  (6,7)=6  (6,9)=2  (6,11)=6  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=1  (7,8)=6  (7,9)=5# (7,10)=6  (7,11)=1  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,5)=2  (8,7)=6  (8,9)=2  (8,11)=6  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=2  (9,5)=1  (9,6)=2  (9,7)=5# (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=2  (14,3)=6  (14,5)=2  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=6  (15,5)=5# (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=2  (16,3)=6  (16,5)=2  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=1  (17,2)=2  (17,3)=5# (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=2  (18,3)=6  (18,5)=2  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (5809.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
  [0]: a rectangle at (1,0) with size (1,21) and color red and mask full
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=0  (17,2)=0  (17,3)=0  (17,4)=0  (17,5)=0  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
  [0]: a rectangle at (5,14) with size (4,4) and color cyan and mask 110100110010110
diff: 
delta: (0,0)=9# (0,1)=6  (0,3)=6  (0,4)=9# (0,6)=3  (0,7)=3  (0,9)=9# (0,10)=6  (0,12)=6  (0,13)=9# (0,15)=3  (0,16)=3  (0,18)=9# (0,19)=6  (1,0)=6  (1,1)=3  (1,2)=2  (1,3)=3  (1,4)=6  (1,5)=2  (1,6)=9# (1,7)=9# (1,8)=2  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,15)=9# (1,16)=9# (1,17)=2  (1,18)=6  (1,19)=3  (1,20)=2  (2,1)=2  (2,2)=1  (2,3)=2  (2,5)=1  (2,6)=8  (2,7)=8  (2,8)=1  (2,9)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,14)=1  (2,15)=8  (2,16)=8  (2,17)=1  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=6  (3,5)=2  (3,6)=9# (3,7)=9# (3,8)=2  (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (3,13)=0  (3,14)=2  (3,15)=9# (3,16)=9# (3,17)=2  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=9# (4,1)=6  (4,3)=6  (4,4)=9# (4,6)=3  (4,7)=3  (4,9)=9# (4,10)=6  (4,12)=6  (4,13)=9# (4,15)=3  (4,16)=3  (4,18)=9# (4,19)=6  (5,1)=2  (5,2)=1  (5,3)=2  (5,5)=1  (5,6)=8  (5,7)=8  (5,8)=1  (5,10)=2  (5,11)=1  (5,12)=2  (5,14)=1  (5,17)=1  (5,19)=2  (5,20)=1  (6,0)=3  (6,1)=9# (6,2)=8  (6,3)=9# (6,4)=3  (6,5)=8  (6,6)=6  (6,7)=6  (6,8)=8  (6,9)=3  (6,10)=9# (6,11)=8  (6,12)=9# (6,13)=3  (6,15)=6  (6,16)=6  (6,18)=3  (6,19)=9# (6,20)=8  (7,0)=3  (7,1)=9# (7,2)=8  (7,3)=9# (7,4)=3  (7,5)=8  (7,6)=6  (7,7)=6  (7,8)=8  (7,9)=3  (7,10)=9# (7,11)=8  (7,12)=9# (7,13)=3  (7,15)=6  (7,16)=6  (7,18)=3  (7,19)=9# (7,20)=8  (8,1)=2  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,10)=2  (8,11)=1  (8,12)=2  (8,14)=1  (8,17)=1  (8,19)=2  (8,20)=1  (9,0)=9# (9,1)=6  (9,3)=6  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=9# (9,10)=6  (9,12)=6  (9,13)=9# (9,15)=3  (9,16)=3  (9,18)=9# (9,19)=6  (10,0)=6  (10,1)=3  (10,2)=2  (10,3)=3  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,8)=2  (10,9)=6  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,14)=2  (10,15)=9# (10,16)=9# (10,17)=2  (10,18)=6  (10,19)=3  (10,20)=2  (11,1)=2  (11,2)=1  (11,3)=2  (11,5)=1  (11,6)=8  (11,7)=8  (11,8)=1  (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=1  (11,15)=8  (11,16)=8  (11,17)=1  (11,19)=2  (11,20)=1  (12,0)=6  (12,1)=3  (12,2)=2  (12,3)=3  (12,4)=6  (12,5)=2  (12,6)=9# (12,7)=9# (12,8)=2  (12,9)=6  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,14)=0  (12,15)=0  (12,16)=9# (12,17)=2  (12,18)=6  (12,19)=3  (12,20)=2  (13,0)=9# (13,1)=6  (13,3)=6  (13,4)=9# (13,6)=3  (13,7)=3  (13,9)=9# (13,10)=6  (13,12)=6  (13,13)=9# (13,14)=0  (13,15)=0  (13,16)=3  (13,18)=9# (13,19)=6  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=1  (14,6)=8  (14,7)=8  (14,8)=1  (14,10)=2  (14,11)=1  (14,12)=2  (14,14)=0  (14,15)=0  (14,16)=8  (14,17)=1  (14,19)=2  (14,20)=1  (15,0)=0  (15,1)=0  (15,2)=8  (15,3)=9# (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=6  (15,8)=8  (15,9)=3  (15,10)=9# (15,11)=8  (15,12)=9# (15,13)=3  (15,14)=0  (15,15)=0  (15,16)=6  (15,17)=8  (15,18)=3  (15,19)=9# (15,20)=8  (16,0)=0  (16,1)=0  (16,2)=8  (16,3)=9# (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,8)=8  (16,9)=3  (16,10)=9# (16,11)=8  (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=6  (16,16)=6  (16,17)=8  (16,18)=3  (16,19)=9# (16,20)=8  (17,1)=2  (17,2)=1  (17,3)=2  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=8  (17,8)=1  (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=1  (17,15)=8  (17,16)=8  (17,17)=1  (17,19)=2  (17,20)=1  (18,0)=9# (18,1)=6  (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=3  (18,9)=9# (18,10)=6  (18,12)=6  (18,13)=9# (18,15)=3  (18,16)=3  (18,18)=9# (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=0  (19,5)=0  (19,6)=0  (19,7)=9# (19,8)=2  (19,9)=6  (19,10)=3  (19,11)=2  (19,12)=3  (19,13)=6  (19,14)=2  (19,15)=9# (19,16)=9# (19,17)=2  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=1  (20,6)=8  (20,7)=8  (20,8)=1  (20,10)=2  (20,11)=1  (20,12)=2  (20,14)=1  (20,15)=8  (20,16)=8  (20,17)=1  (20,19)=2  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TEST 0dfd9992.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 193477.6 bits (193477.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-383] Checking task 0e206a2e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9955.4 = 9964.4
DL output with Mo: L = 9.0 + 7676.7 = 7685.7
DL input+output M: L = 17.9 + 17632.1 = 17650.1

# learning a model for train pairs
17650.1	
15232.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12836.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12186.8	OUT DEF: size={size}
11939.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11704.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11462.6	OUT DEF: layer[01].size={layer[01].size}
11323.1	OUT DEF: layer[0].color={layer[0].color}
11183.7	OUT DEF: layer[01].color={layer[01].color}
11096.0	OUT SHAPE at layer[011]: a point at ? with color ?
10958.0	OUT DEF: layer[011].color=yellow
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size {layer[01].size} and color {layer[01].color} and mask ?
  [011]: a point at ? with color yellow
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 7290.5 = 7333.9
DL output with Mo: L = 54.2 + 3569.8 = 3624.1
DL input+output M: L = 97.6 + 10860.4 = 10958.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,18) and color black and layers
  [0]: a rectangle at (7,7) with size (3,3) and color cyan and mask 101011101
  [01]: a rectangle at (1,2) with size (3,3) and color cyan and mask 101010010
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
   (338.1 bits)
data: a background with size (14,18) and color black and layers
  [0]: a rectangle at (2,14) with size (3,3) and color cyan and mask 111010101
  [01]: a rectangle at (9,1) with size (3,3) and color cyan and mask 100011100
  [011]: a point at (2,15) with color yellow
diff: 
delta: (4,13)=3  (4,17)=1  (9,2)=1  (10,3)=4  (11,2)=3 
   (172.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color black and layers
  [0]: a rectangle at (7,7) with size (3,3) and color cyan and mask 101011101
  [01]: a rectangle at (1,2) with size (3,3) and color cyan and mask 101010010
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color black and layers
  [0]: a rectangle at (7,7) with size (3,3) and color cyan and mask 101011101
  [01]: a rectangle at (1,3) with size (2,1) and color cyan and mask full
diff: 
delta: (2,2)=3  (2,4)=1  (2,15)=4  (3,2)=8  (3,3)=4  (3,4)=8  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 20 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (4,3) with size (5,3) and color green and mask 101010010010110
  [01]: a rectangle at (3,4) with size (1,1) and color red and mask full
diff: 
delta: (4,3)=4  (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
   (193.3 bits)
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (10,9) with size (3,5) and color green and mask 100011111000001
  [01]: a rectangle at (11,14) with size (1,1) and color red and mask full
  [011]: a point at (10,13) with color yellow
diff: 
delta: (11,9)=1 
   (90.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (4,3) with size (5,3) and color green and mask 101010010010110
  [01]: a rectangle at (3,4) with size (1,1) and color red and mask full
diff: 
delta: (4,3)=4  (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
! 14 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,14) and color black and layers
  [0]: a rectangle at (3,5) with size (3,6) and color cyan and mask 10000101110010001
  [01]: a rectangle at (4,5) with size (1,1) and color blue and mask full
diff: 
delta: (2,9)=4  (4,9)=2  (11,1)=1  (11,5)=2  (13,5)=4 
   (197.7 bits)
data: a background with size (16,14) and color black and layers
  [0]: a rectangle at (10,1) with size (3,6) and color cyan and mask 10001101110010000
  [01]: a rectangle at (11,1) with size (1,1) and color blue and mask full
  [011]: a point at (13,5) with color yellow
diff: 
delta: (11,5)=2 
   (94.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  [0]: a rectangle at (3,5) with size (3,6) and color cyan and mask 10000101110010001
  [01]: a rectangle at (2,9) with size (1,1) and color yellow and mask full
diff: 
delta: (4,5)=1  (4,9)=2  (11,1)=1  (11,5)=2  (13,5)=4 
! 14 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  [0]: a rectangle at (3,6) with size (4,5) and color grey and mask 111100100110100010
  [01]: a rectangle at (9,10) with size (3,4) and color grey and mask 10010100001
diff: 
delta: (4,7)=1  (4,10)=4  (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,19) and color black and layers
  [0]: a rectangle at (9,10) with size (3,4) and color grey and mask 10010100001
  [01]: a rectangle at (3,6) with size (4,5) and color grey and mask 111100100110100010
diff: 
delta: (4,7)=1  (4,10)=4  (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (24,19) and color black and layers
  [0]: a rectangle at (3,6) with size (4,5) and color grey and mask 111100100110100010
  [01]: a rectangle at (4,7) with size (1,1) and color blue and mask full
diff: 
delta: (4,10)=4  (6,5)=2  (9,10)=5# (9,11)=2  (10,11)=5# (10,13)=5# (11,11)=4  (11,12)=5# (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 23 wrong pixels (generated / expected)

TEST 0e206a2e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3569.8 bits (3569.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-382] Checking task 10fcaaa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1565.9 = 1574.9
DL output with Mo: L = 9.0 + 16482.8 = 16491.8
DL input+output M: L = 17.9 + 18048.7 = 18066.7

# learning a model for train pairs
18066.7	
14676.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13933.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13034.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12849.5	OUT DEF: layer[0].color=cyan
12704.2	IN  SHAPE at layer[0]: a point at ? with color ?
12644.0	IN  DEF: color=black
12595.8	OUT DEF: size=(?,?)
12275.5	OUT DEF: size.j={size.j + size.j}
11968.8	OUT DEF: size.i={size.i + size.i}
11920.6	OUT DEF: layer[0].pos=(?,?)
11754.8	OUT DEF: layer[0].pos.j=0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i + size.i},{size.j + size.j}) and color ? and layers
  [0]: a rectangle at (?,0) with size ? and color cyan and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 18.1 + 1351.3 = 1369.4
DL output with Mo: L = 81.9 + 10303.5 = 10385.4
DL input+output M: L = 100.0 + 11654.8 = 11754.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,4) and color black and layers
  [0]: a point at (1,1) with color grey
diff: 
delta:
   (23.6 bits)
data: a background with size (4,8) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (4,8) and color black and mask 11011101101010101101110111111111
  [011]: a rectangle at (2,0) with size (1,7) and color cyan and mask full
diff: 
delta: (0,1)=0  (0,3)=0  (0,5)=0 
   (168.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,4) and color black and layers
  [0]: a point at (1,1) with color grey
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  [0]: a point at (0,2) with color pink
diff: 
delta: (2,1)=6 
   (41.8 bits)
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (1,0) with size (4,8) and color cyan and mask 11111111000100011000100011111111
  [01]: a rectangle at (2,1) with size (2,2) and color pink and mask 1001
  [011]: a rectangle at (2,5) with size (2,2) and color pink and mask 1001
diff: 
delta: (0,2)=6  (0,6)=6  (5,1)=6  (5,5)=6 
   (187.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  [0]: a point at (0,2) with color pink
diff: 
delta: (2,1)=6 
! 28 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,3) and color black and layers
  [0]: a point at (1,1) with color yellow
diff: 
delta: (4,0)=4 
   (43.1 bits)
data: a background with size (10,6) and color black and layers
  [0]: a rectangle at (2,0) with size (2,6) and color cyan and mask 10110101101
  [01]: a rectangle at (7,0) with size (2,6) and color cyan and mask 10110101101
  [011]: a rectangle at (5,0) with size (1,6) and color cyan and mask full
diff: 
delta: (0,0)=8  (0,2)=8  (0,3)=8  (0,5)=8  (1,1)=4  (1,4)=4  (4,0)=4  (4,3)=4  (6,1)=4  (6,4)=4  (9,0)=4  (9,3)=4 
   (313.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  [0]: a point at (1,1) with color yellow
diff: 
delta: (4,0)=4 
! 33 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
   (26.6 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color red and mask full
  [011]: a rectangle at (1,5) with size (1,1) and color red and mask full
diff: 
delta: (0,1)=0  (0,3)=0  (0,5)=0  (2,0)=8  (2,2)=8  (2,4)=8  (2,6)=8  (4,0)=8  (4,2)=8  (4,4)=8  (4,6)=8  (5,1)=2  (5,5)=2  (6,0)=8  (6,2)=8  (6,4)=8  (6,6)=8 
   (361.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,5) and color black and layers
  [0]: a point at (0,1) with color green
diff: 
delta: (3,3)=3  (5,1)=3 
! 49 wrong pixels (generated / expected)

TEST 10fcaaa3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10303.5 bits (10303.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-381] Checking task 11852cab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6101.5 = 6110.5
DL output with Mo: L = 9.0 + 7704.2 = 7713.2
DL input+output M: L = 17.9 + 13805.7 = 13823.7

# learning a model for train pairs
13823.7	
13244.7	OUT DEF: size={size}
12802.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12432.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11626.1	OUT DEF: layer[0]={layer[0]}
11556.2	IN  SHAPE at layer[01]: a point at ? with color ?
11483.7	IN  SHAPE at layer[011]: a point at ? with color ?
11408.2	IN  SHAPE at layer[00]: a point at ? with color ?
11327.8	IN  SHAPE at layer[001]: a point at ? with color ?
11260.3	OUT SHAPE at layer[01]: a point at ? with color ?
10798.2	OUT DEF: layer[01]={layer[00]}
10729.4	OUT SHAPE at layer[011]: a point at ? with color ?
10267.3	OUT DEF: layer[011]={layer[001]}
10197.3	OUT SHAPE at layer[0111]: a point at ? with color ?
9735.1	OUT DEF: layer[0111]={layer[01]}
9663.6	OUT SHAPE at layer[01111]: a point at ? with color ?
9201.3	OUT DEF: layer[01111]={layer[011]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[00]}
  [011]: {layer[001]}
  [0111]: {layer[01]}
  [01111]: {layer[011]}
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?

DL input  with Mi: L = 65.6 + 5368.1 = 5433.7
DL output with Mo: L = 35.6 + 3732.1 = 3767.6
DL input+output M: L = 101.2 + 9100.2 = 9201.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,2) with color green
  [001]: a point at (1,4) with color cyan
  [0]: a rectangle at (2,3) with size (1,1) and color red and mask full
  [01]: a point at (2,5) with color red
  [011]: a point at (3,2) with color cyan
diff: 
delta: (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
   (198.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (1,1) and color red and mask full
  [01]: a point at (1,2) with color green
  [011]: a point at (1,4) with color cyan
  [0111]: a point at (2,5) with color red
  [01111]: a point at (3,2) with color cyan
diff: 
delta: (1,6)=3  (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,2)=3  (5,4)=8  (5,6)=3 
   (148.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,2) with color green
  [001]: a point at (1,4) with color cyan
  [0]: a rectangle at (2,3) with size (1,1) and color red and mask full
  [01]: a point at (2,5) with color red
  [011]: a point at (3,2) with color cyan
diff: 
delta: (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,2) with color green
  [001]: a point at (1,4) with color cyan
  [0]: a rectangle at (2,3) with size (1,1) and color red and mask full
  [01]: a point at (2,5) with color red
  [011]: a point at (3,4) with color green
diff: 
delta: (3,2)=8  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,2) with color green
  [001]: a point at (1,4) with color cyan
  [0]: a rectangle at (2,3) with size (1,1) and color red and mask full
  [01]: a point at (2,5) with color red
  [011]: a point at (3,6) with color cyan
diff: 
delta: (3,2)=8  (3,4)=3  (4,3)=2  (4,5)=2  (5,4)=8 
! 8 wrong pixels (generated / expected)

TRAIN 11852cab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color red
  [001]: a point at (2,4) with color green
  [0]: a rectangle at (3,3) with size (3,3) and color yellow and mask 101010101
  [01]: a point at (4,2) with color green
  [011]: a point at (4,6) with color green
diff: 
delta: (6,4)=3 
   (140.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color yellow and mask 101010101
  [01]: a point at (2,2) with color red
  [011]: a point at (2,4) with color green
  [0111]: a point at (4,2) with color green
  [01111]: a point at (4,6) with color green
diff: 
delta: (2,6)=2  (6,2)=2  (6,4)=3  (6,6)=2 
   (76.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color red
  [001]: a point at (2,4) with color green
  [0]: a rectangle at (3,3) with size (3,3) and color yellow and mask 101010101
  [01]: a point at (4,2) with color green
  [011]: a point at (4,6) with color green
diff: 
delta: (6,4)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color red
  [001]: a point at (2,4) with color green
  [0]: a rectangle at (3,3) with size (3,3) and color yellow and mask 101010101
  [01]: a point at (4,2) with color green
  [011]: a point at (6,4) with color green
diff: 
delta: (4,6)=3 
! 4 wrong pixels (generated / expected)

TRAIN 11852cab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,3) with color cyan
  [001]: a point at (1,5) with color cyan
  [0]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01]: a point at (2,4) with color yellow
  [011]: a point at (3,3) with color cyan
diff: 
delta: (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
   (198.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01]: a point at (1,3) with color cyan
  [011]: a point at (1,5) with color cyan
  [0111]: a point at (2,4) with color yellow
  [01111]: a point at (3,3) with color cyan
diff: 
delta: (2,6)=4  (3,5)=1  (3,7)=8  (4,4)=4  (4,6)=4  (5,3)=8  (5,5)=8  (5,7)=8 
   (148.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,3) with color cyan
  [001]: a point at (1,5) with color cyan
  [0]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01]: a point at (2,4) with color yellow
  [011]: a point at (3,3) with color cyan
diff: 
delta: (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,3) with color cyan
  [001]: a point at (1,5) with color cyan
  [0]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01]: a point at (2,4) with color yellow
  [011]: a point at (3,5) with color blue
diff: 
delta: (3,3)=8  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,3) with color cyan
  [001]: a point at (1,5) with color cyan
  [0]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01]: a point at (2,4) with color yellow
  [011]: a point at (3,7) with color cyan
diff: 
delta: (3,3)=8  (3,5)=1  (5,3)=8  (5,5)=8  (5,7)=8 
! 8 wrong pixels (generated / expected)

TRAIN 11852cab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,1) with color blue
  [001]: a point at (2,3) with color yellow
  [0]: a rectangle at (2,5) with size (1,1) and color blue and mask full
  [01]: a point at (3,2) with color red
  [011]: a point at (3,4) with color red
diff: 
delta: (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,1) with color blue
  [001]: a point at (2,3) with color yellow
  [0]: a rectangle at (2,5) with size (1,1) and color blue and mask full
  [01]: a point at (3,2) with color red
  [011]: a point at (4,3) with color blue
diff: 
delta: (3,4)=2  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,1) with color blue
  [001]: a point at (2,3) with color yellow
  [0]: a rectangle at (2,5) with size (1,1) and color blue and mask full
  [01]: a point at (3,2) with color red
  [011]: a point at (5,2) with color red
diff: 
delta: (3,4)=2  (4,3)=1  (5,4)=2  (6,1)=1  (6,5)=1 
! 8 wrong pixels (generated / expected)

TEST 11852cab.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3732.1 bits (3732.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-380] Checking task 1190e5a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 63078.8 = 63087.7
DL output with Mo: L = 9.0 + 627.8 = 636.7
DL input+output M: L = 17.9 + 63706.6 = 63724.5

# learning a model for train pairs
63724.5	
13550.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13310.5	OUT DEF: color={color}
13275.5	OUT DEF: size=(?,?)
13240.4	IN  DEF: size=(?,?)
13205.4	IN  DEF: layer[0].pos=(?,?)
13047.5	IN  DEF: layer[0].pos.i=0
12889.5	IN  DEF: layer[0].pos.j=0
12854.5	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color {color} and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,0) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 46.3 + 12446.3 = 12492.6
DL output with Mo: L = 12.7 + 349.2 = 361.9
DL input+output M: L = 59.1 + 12795.4 = 12854.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color green and layers
  [0]: a rectangle at (0,0) with size (15,15) and color orange and mask 10010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010111111111111111010010000000010010010000000010
diff: 
delta:
   (280.5 bits)
data: a background with size (2,4) and color green and layers
diff: 
delta:
   (10.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color green and layers
  [0]: a rectangle at (0,0) with size (15,15) and color orange and mask 10010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010010010000000010111111111111111010010000000010010010000000010
diff: 
delta:
! size mismatch, 10x10 instead of 2x4

TRAIN 1190e5a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000011111111111000000100000000001000000000010000000000100000000001000011111111111000000100000000001000000000010000
diff: 
delta:
   (172.9 bits)
data: a background with size (3,2) and color blue and layers
diff: 
delta:
   (9.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000011111111111000000100000000001000000000010000000000100000000001000011111111111000000100000000001000000000010000
diff: 
delta:
! size mismatch, 10x10 instead of 3x2

TRAIN 1190e5a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (27,27) and color green and layers
  [0]: a rectangle at (0,0) with size (27,27) and color blue and mask
diff: 
delta:
   (791.3 bits)
data: a background with size (6,5) and color green and layers
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color green and layers
  [0]: a rectangle at (0,0) with size (27,27) and color blue and mask
diff: 
delta:
! size mismatch, 10x10 instead of 6x5

TRAIN 1190e5a7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color blue and layers
  [0]: a rectangle at (0,0) with size (22,22) and color grey and mask 100001000000000000000010000100000000000000001000010000000000000000100001000000000000000111111111111111111111101000010000000000000000100001000000000000000010000100000000000000001000010000000000000001111111111111111111111010000100000000000000001000010000000000000000100001000000000000000010000100000000000000011111111111111111111110100001000000000000000010000100000000000000001000010000000000000000100001000000000000000111111111111111111111101000010000000000000000100001000000000000000
diff: 
delta:
! size mismatch, 10x10 instead of 5x3

TEST 1190e5a7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 349.2 bits (349.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-379] Checking task 137eaa0f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6381.1 = 6390.1
DL output with Mo: L = 9.0 + 3459.7 = 3468.7
DL input+output M: L = 17.9 + 9840.8 = 9858.8

# learning a model for train pairs
9858.8	
9303.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9000.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8700.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8462.4	OUT DEF: color={layer[01].color}
8391.7	IN  DEF: layer[0].mask=full
8321.0	IN  DEF: layer[011].mask=full
8275.4	IN  DEF: color=black
8240.4	OUT DEF: size=(?,?)
8077.8	OUT DEF: size.i=3
7915.2	OUT DEF: size.j=3
7880.2	IN  DEF: size=(?,?)
7608.9	IN  DEF: size.i=11
7337.6	IN  DEF: size.j=11
7302.6	IN  DEF: layer[0].pos=(?,?)
7267.6	IN  DEF: layer[0].size=(?,?)
7138.9	IN  DEF: layer[0].size.j=2
7068.3	IN  DEF: layer[0].size.i=1
7033.3	IN  DEF: layer[01].pos=(?,?)
6998.3	IN  DEF: layer[01].size=(?,?)
6963.2	IN  DEF: layer[011].pos=(?,?)
6928.2	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color {layer[01].color} and layers
WHERE (Mi)
a background with size (11,11) and color black and layers
  [0]: a rectangle at (?,?) with size (1,2) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 100.3 + 3957.2 = 4057.5
DL output with Mo: L = 19.1 + 2851.6 = 2870.7
DL input+output M: L = 119.4 + 6808.8 = 6928.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,6) with size (1,2) and color pink and mask full
  [01]: a rectangle at (7,6) with size (2,1) and color orange and mask full
  [011]: a rectangle at (3,2) with size (1,2) and color yellow and mask full
diff: 
delta: (2,3)=5# (2,7)=5# (8,5)=5#
   (115.8 bits)
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=6  (0,1)=6  (1,0)=0  (1,1)=5# (2,0)=4  (2,1)=4  (2,2)=0 
   (104.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,6) with size (1,2) and color pink and mask full
  [01]: a rectangle at (3,2) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (7,6) with size (2,1) and color orange and mask full
diff: 
delta: (2,3)=5# (2,7)=5# (8,5)=5#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,6) with size (1,2) and color pink and mask full
  [01]: a rectangle at (7,6) with size (2,1) and color orange and mask full
  [011]: a rectangle at (3,2) with size (1,2) and color yellow and mask full
diff: 
delta: (2,3)=5# (2,7)=5# (8,5)=5#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,2) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (1,6) with size (1,2) and color pink and mask full
  [011]: a rectangle at (7,6) with size (2,1) and color orange and mask full
diff: 
delta: (2,3)=5# (2,7)=5# (8,5)=5#
! 7 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (8,2) with size (1,2) and color red and mask full
  [01]: a rectangle at (8,6) with size (1,3) and color green and mask full
  [011]: a rectangle at (3,4) with size (1,3) and color orange and mask full
diff: 
delta: (2,1)=6  (3,2)=5# (3,5)=5# (7,7)=5# (9,2)=5#
   (155.0 bits)
data: a background with size (3,3) and color green and layers
diff: 
delta: (0,0)=6  (0,1)=2  (0,2)=2  (1,0)=7# (1,1)=5# (1,2)=7#
   (90.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (8,2) with size (1,2) and color red and mask full
  [01]: a rectangle at (8,6) with size (1,3) and color green and mask full
  [011]: a rectangle at (3,4) with size (1,3) and color orange and mask full
diff: 
delta: (2,1)=6  (3,2)=5# (3,5)=5# (7,7)=5# (9,2)=5#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (8,2) with size (1,2) and color red and mask full
  [01]: a rectangle at (3,4) with size (1,3) and color orange and mask full
  [011]: a rectangle at (8,6) with size (1,3) and color green and mask full
diff: 
delta: (2,1)=6  (3,2)=5# (3,5)=5# (7,7)=5# (9,2)=5#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (8,6) with size (1,3) and color green and mask full
  [01]: a rectangle at (8,2) with size (1,2) and color red and mask full
  [011]: a rectangle at (3,4) with size (1,3) and color orange and mask full
diff:   layer[0].size.j
delta: (2,1)=6  (3,2)=5# (3,5)=5# (7,7)=5# (9,2)=5#
! 7 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (9,6) with size (1,2) and color brown and mask full
  [01]: a rectangle at (2,0) with size (2,3) and color blue and mask 1110
  [011]: a rectangle at (4,6) with size (2,1) and color red and mask full
diff: 
delta: (3,1)=5# (4,5)=5# (8,7)=5#
   (125.0 bits)
data: a background with size (3,3) and color blue and layers
diff: 
delta: (0,0)=0  (1,1)=5# (1,2)=2  (2,0)=9# (2,1)=9# (2,2)=2 
   (90.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (9,6) with size (1,2) and color brown and mask full
  [01]: a rectangle at (2,0) with size (2,3) and color blue and mask 1110
  [011]: a rectangle at (4,6) with size (2,1) and color red and mask full
diff: 
delta: (3,1)=5# (4,5)=5# (8,7)=5#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (9,6) with size (1,2) and color brown and mask full
  [01]: a rectangle at (4,6) with size (2,1) and color red and mask full
  [011]: a rectangle at (2,0) with size (2,3) and color blue and mask 1110
diff:   layer[011].mask
delta: (3,1)=5# (4,5)=5# (8,7)=5#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,1) with size (1,2) and color blue and mask full
  [01]: a rectangle at (9,6) with size (1,2) and color brown and mask full
  [011]: a rectangle at (4,6) with size (2,1) and color red and mask full
diff: 
delta: (3,0)=1  (3,1)=5# (4,5)=5# (8,7)=5#
! 7 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (10,3) with size (1,2) and color red and mask full
  [01]: a rectangle at (1,7) with size (3,2) and color brown and mask 10110
  [011]: a rectangle at (2,8) with size (1,1) and color grey and mask full
diff: 
delta: (3,0)=4  (4,1)=5# (4,2)=4  (6,7)=8  (7,6)=5# (9,3)=5#
! 6 wrong pixels (generated / expected)

TEST 137eaa0f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2851.6 bits (2851.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-378] Checking task 150deff5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10566.9 = 10575.9
DL output with Mo: L = 9.0 + 10566.9 = 10575.9
DL input+output M: L = 17.9 + 21133.8 = 21151.7

# learning a model for train pairs
21151.7	
13175.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9857.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8350.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7388.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6825.9	OUT DEF: size={size}
6515.3	OUT DEF: layer[01].pos={layer[0].pos}
6363.7	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6029.1	OUT DEF: layer[0111].color=red
5891.1	IN  DEF: layer[0].color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at {layer[0].pos} with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color red and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color grey and mask ?

DL input  with Mi: L = 27.9 + 2433.6 = 2461.5
DL output with Mo: L = 76.3 + 3353.2 = 3429.5
DL input+output M: L = 104.2 + 5786.9 = 5891.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,11) and color black and layers
  [0]: a rectangle at (1,2) with size (6,6) and color grey and mask 111000110010111110001110011111000011
diff: 
delta:
   (85.9 bits)
data: a background with size (9,11) and color black and layers
  [0]: a rectangle at (2,4) with size (1,3) and color red and mask full
  [01]: a rectangle at (1,2) with size (5,6) and color cyan and mask 110000111100001100011111000011
  [011]: a rectangle at (6,5) with size (1,3) and color red and mask full
  [0111]: a rectangle at (3,3) with size (3,1) and color red and mask full
diff: 
delta:
   (129.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  [0]: a rectangle at (1,2) with size (6,6) and color grey and mask 111000110010111110001110011111000011
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,11) and color grey and layers
  [0]: a rectangle at (0,0) with size (9,11) and color black and mask 111111111111111111111111100011111111001101111110000011111111000111111100000111111111001111111111111
diff:   layer[0].color
delta:
! 25 wrong pixels (generated / expected)

TRAIN 150deff5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (1,1) with size (6,6) and color grey and mask 1000111000111000100100111111111111
diff: 
delta:
   (85.0 bits)
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (1,3) with size (6,2) and color red and mask 101010010101
  [01]: a rectangle at (1,1) with size (2,5) and color cyan and mask full
  [011]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (1,6) with size (3,1) and color red and mask full
diff: 
delta:
   (112.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (1,1) with size (6,6) and color grey and mask 1000111000111000100100111111111111
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (8,10) and color black and mask 11111111111111101111111000111111100011111110110111111000000111100000011111111111
diff:   layer[0].color
delta:
! 24 wrong pixels (generated / expected)

TRAIN 150deff5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1110011100001001100011111
diff: 
delta:
   (72.5 bits)
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (1,4) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (1,3) and color red and mask full
  [011]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (3,3) with size (3,1) and color red and mask full
diff: 
delta:
   (93.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1110011100001001100011111
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,9) and color grey and layers
  [0]: a rectangle at (0,0) with size (8,9) and color black and mask 111111111111111111111000111111000111111110111111001111111000001111111111
diff:   layer[0].color
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (4,3) with size (2,3) and color grey and mask full
diff: 
delta: (1,1)=5# (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (2,4)=5# (2,5)=5# (3,3)=5#
! 17 wrong pixels (generated / expected)

TRAIN 150deff5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  [0]: a rectangle at (0,1) with size (7,7) and color grey and mask 110000011000000111000111000011111101001101110110
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,11) and color grey and layers
  [0]: a rectangle at (0,0) with size (8,11) and color black and mask 1111111111111110011111111100111111111100011111110001111111100000011111011001111100010011
diff:   layer[0].color
delta:
! 28 wrong pixels (generated / expected)

TEST 150deff5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3353.2 bits (3353.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-377] Checking task 178fcbfb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2843.6 = 2852.6
DL output with Mo: L = 9.0 + 18908.8 = 18917.8
DL input+output M: L = 17.9 + 21752.4 = 21770.4

# learning a model for train pairs
21770.4	
17770.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13754.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10031.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8356.2	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7787.0	OUT DEF: size={size}
7649.0	OUT DEF: layer[0111].color=red
7570.6	IN  SHAPE at layer[0]: a point at ? with color ?
7430.7	OUT DEF: layer[0].color={layer[0].color}
7292.7	OUT DEF: layer[011].color=green
7154.7	OUT DEF: layer[01].color=blue
7069.5	IN  SHAPE at layer[00]: a point at ? with color ?
6970.2	IN  SHAPE at layer[01]: a point at ? with color ?
6899.5	OUT DEF: layer[0].mask=full
6828.9	OUT DEF: layer[01].mask=full
6758.2	OUT DEF: layer[011].mask=full
6687.6	OUT DEF: layer[0111].mask=full
6642.0	OUT DEF: color=black
6596.4	IN  DEF: color=black
6561.3	OUT DEF: layer[0].pos=(?,?)
6473.6	OUT DEF: layer[0].pos.i={layer[0].pos.j - 2}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.j - 2},?) with size ? and color {layer[0].color} and mask full
  [01]: a rectangle at ? with size ? and color blue and mask full
  [011]: a rectangle at ? with size ? and color green and mask full
  [0111]: a rectangle at ? with size ? and color red and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [00]: a point at ? with color ?
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 38.0 + 2504.5 = 2542.5
DL output with Mo: L = 88.5 + 3842.6 = 3931.1
DL input+output M: L = 126.5 + 6347.1 = 6473.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [00]: a point at (4,7) with color green
  [0]: a point at (2,2) with color red
  [01]: a point at (6,3) with color blue
diff: 
delta:
   (63.5 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,2) with size (4,1) and color red and mask full
  [01]: a rectangle at (6,0) with size (1,9) and color blue and mask full
  [011]: a rectangle at (4,0) with size (1,9) and color green and mask full
  [0111]: a rectangle at (0,2) with size (9,1) and color red and mask full
diff: 
delta:
   (82.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [00]: a point at (2,2) with color red
  [0]: a point at (4,7) with color green
  [01]: a point at (6,3) with color blue
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [00]: a point at (2,2) with color red
  [0]: a point at (6,3) with color blue
  [01]: a point at (4,7) with color green
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [00]: a point at (4,7) with color green
  [0]: a point at (2,2) with color red
  [01]: a point at (6,3) with color blue
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  [00]: a point at (1,1) with color green
  [0]: a point at (4,3) with color green
  [01]: a point at (6,1) with color blue
diff: 
delta: (7,5)=2 
   (82.7 bits)
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,8) and color green and mask full
  [01]: a rectangle at (6,0) with size (1,8) and color blue and mask full
  [011]: a rectangle at (4,0) with size (1,8) and color green and mask full
  [0111]: a rectangle at (0,5) with size (10,1) and color red and mask full
diff: 
delta:
   (83.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  [00]: a point at (1,1) with color green
  [0]: a point at (4,3) with color green
  [01]: a point at (6,1) with color blue
diff: 
delta: (7,5)=2 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  [00]: a point at (1,1) with color green
  [0]: a point at (6,1) with color blue
  [01]: a point at (4,3) with color green
diff: 
delta: (7,5)=2 
! 33 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  [00]: a point at (1,1) with color blue
  [0]: a point at (3,8) with color green
  [01]: a point at (6,2) with color green
diff: 
delta: (8,3)=2  (9,9)=2 
   (104.3 bits)
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (6,0) with size (1,11) and color green and mask full
  [01]: a rectangle at (1,0) with size (1,11) and color blue and mask full
  [011]: a rectangle at (3,0) with size (1,11) and color green and mask full
  [0111]: a rectangle at (0,3) with size (10,1) and color red and mask full
diff: 
delta: (0,9)=2  (2,9)=2  (4,9)=2  (5,9)=2  (7,9)=2  (8,9)=2  (9,9)=2 
   (218.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  [00]: a point at (1,1) with color blue
  [0]: a point at (3,8) with color green
  [01]: a point at (6,2) with color green
diff: 
delta: (8,3)=2  (9,9)=2 
! 47 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  [00]: a point at (0,3) with color green
  [0]: a point at (1,9) with color red
  [01]: a point at (3,5) with color green
diff: 
delta: (5,4)=2  (7,1)=1  (9,8)=1 
! 64 wrong pixels (generated / expected)

TEST 178fcbfb.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3842.6 bits (3842.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-376] Checking task 1a07d186.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 19232.0 = 19241.0
DL output with Mo: L = 9.0 + 18471.0 = 18480.0
DL input+output M: L = 17.9 + 37703.1 = 37721.0

# learning a model for train pairs
37721.0	
29324.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21152.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15717.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10319.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9660.0	OUT DEF: size={size}
9300.7	OUT DEF: layer[0].pos={layer[0].pos}
8699.0	OUT DEF: layer[0]={layer[0]}
8559.5	OUT DEF: layer[01].color={layer[01].color}
8484.5	IN  SHAPE at layer[00]: a point at ? with color ?
8405.2	IN  SHAPE at layer[001]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 62.8 + 5415.8 = 5478.5
DL output with Mo: L = 31.9 + 2894.8 = 2926.7
DL input+output M: L = 94.7 + 8310.5 = 8405.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  [00]: a point at (3,1) with color yellow
  [001]: a point at (3,6) with color green
  [0]: a rectangle at (0,3) with size (18,1) and color green and mask full
  [01]: a rectangle at (0,12) with size (18,1) and color yellow and mask full
diff: 
delta: (7,9)=4  (10,7)=2  (11,16)=3 
   (187.7 bits)
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,3) with size (18,1) and color green and mask full
  [01]: a rectangle at (0,11) with size (18,2) and color yellow and mask 101010101010101010101110101011101010
diff: 
delta: (3,4)=3  (11,4)=3 
   (110.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  [00]: a point at (3,1) with color yellow
  [001]: a point at (3,6) with color green
  [0]: a rectangle at (0,3) with size (18,1) and color green and mask full
  [01]: a rectangle at (0,12) with size (18,1) and color yellow and mask full
diff: 
delta: (7,9)=4  (10,7)=2  (11,16)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,19) and color black and layers
  [00]: a point at (3,1) with color yellow
  [001]: a point at (3,6) with color green
  [0]: a rectangle at (0,12) with size (18,1) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (18,1) and color green and mask full
diff: 
delta: (7,9)=4  (10,7)=2  (11,16)=3 
! 26 wrong pixels (generated / expected)

TRAIN 1a07d186.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  [00]: a point at (0,3) with color red
  [001]: a point at (1,9) with color yellow
  [0]: a rectangle at (10,0) with size (1,14) and color blue and mask full
  [01]: a rectangle at (3,0) with size (1,14) and color red and mask full
diff: 
delta: (5,10)=1  (7,6)=2  (13,2)=1  (13,10)=2 
   (199.2 bits)
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (10,0) with size (1,14) and color blue and mask full
  [01]: a rectangle at (2,0) with size (3,14) and color red and mask 100010000001111111111111100000000001000
diff: 
delta: (9,10)=1  (11,2)=1 
   (114.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  [00]: a point at (0,3) with color red
  [001]: a point at (1,9) with color yellow
  [0]: a rectangle at (3,0) with size (1,14) and color red and mask full
  [01]: a rectangle at (10,0) with size (1,14) and color blue and mask full
diff: 
delta: (5,10)=1  (7,6)=2  (13,2)=1  (13,10)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  [00]: a point at (0,3) with color red
  [001]: a point at (1,9) with color yellow
  [0]: a rectangle at (10,0) with size (1,14) and color blue and mask full
  [01]: a rectangle at (3,0) with size (1,14) and color red and mask full
diff: 
delta: (5,10)=1  (7,6)=2  (13,2)=1  (13,10)=2 
! 23 wrong pixels (generated / expected)

TRAIN 1a07d186.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  [00]: a point at (1,3) with color blue
  [001]: a point at (1,7) with color cyan
  [0]: a rectangle at (5,0) with size (1,16) and color cyan and mask full
  [01]: a rectangle at (8,11) with size (1,1) and color cyan and mask full
diff: 
delta: (12,3)=8  (13,12)=1 
   (154.7 bits)
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (5,0) with size (1,16) and color cyan and mask full
  [01]: a rectangle at (4,7) with size (2,1) and color cyan and mask full
diff: 
delta: (6,3)=8  (6,11)=8 
   (64.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  [00]: a point at (1,3) with color blue
  [001]: a point at (1,7) with color cyan
  [0]: a rectangle at (5,0) with size (1,16) and color cyan and mask full
  [01]: a rectangle at (8,11) with size (1,1) and color cyan and mask full
diff: 
delta: (12,3)=8  (13,12)=1 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  [00]: a point at (1,3) with color blue
  [001]: a point at (1,7) with color cyan
  [0]: a rectangle at (5,0) with size (1,16) and color cyan and mask full
  [01]: a rectangle at (13,12) with size (1,1) and color blue and mask full
diff: 
delta: (8,11)=8  (12,3)=8 
! 7 wrong pixels (generated / expected)

TRAIN 1a07d186.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,26) and color black and layers
  [00]: a point at (2,16) with color red
  [001]: a point at (4,24) with color cyan
  [0]: a rectangle at (0,4) with size (19,1) and color red and mask full
  [01]: a rectangle at (0,11) with size (19,1) and color green and mask full
diff: 
delta: (0,20)=4  (1,20)=4  (2,20)=4  (3,20)=4  (4,20)=4  (5,9)=8  (5,20)=4  (6,20)=4  (7,6)=4  (7,20)=4  (8,20)=4  (9,13)=3  (9,20)=4  (10,1)=2  (10,20)=4  (11,17)=8  (11,20)=4  (12,20)=4  (13,20)=4  (14,20)=4  (15,0)=8  (15,8)=3  (15,20)=4  (15,24)=4  (16,20)=4  (17,20)=4  (17,22)=3  (18,20)=4 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,26) and color black and layers
  [00]: a point at (2,16) with color red
  [001]: a point at (4,24) with color cyan
  [0]: a rectangle at (0,4) with size (19,1) and color red and mask full
  [01]: a rectangle at (0,20) with size (19,1) and color yellow and mask full
diff: 
delta: (0,11)=3  (1,11)=3  (2,11)=3  (3,11)=3  (4,11)=3  (5,9)=8  (5,11)=3  (6,11)=3  (7,6)=4  (7,11)=3  (8,11)=3  (9,11)=3  (9,13)=3  (10,1)=2  (10,11)=3  (11,11)=3  (11,17)=8  (12,11)=3  (13,11)=3  (14,11)=3  (15,0)=8  (15,8)=3  (15,11)=3  (15,24)=4  (16,11)=3  (17,11)=3  (17,22)=3  (18,11)=3 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,26) and color black and layers
  [00]: a point at (2,16) with color red
  [001]: a point at (4,24) with color cyan
  [0]: a rectangle at (0,11) with size (19,1) and color green and mask full
  [01]: a rectangle at (0,4) with size (19,1) and color red and mask full
diff: 
delta: (0,20)=4  (1,20)=4  (2,20)=4  (3,20)=4  (4,20)=4  (5,9)=8  (5,20)=4  (6,20)=4  (7,6)=4  (7,20)=4  (8,20)=4  (9,13)=3  (9,20)=4  (10,1)=2  (10,20)=4  (11,17)=8  (11,20)=4  (12,20)=4  (13,20)=4  (14,20)=4  (15,0)=8  (15,8)=3  (15,20)=4  (15,24)=4  (16,20)=4  (17,20)=4  (17,22)=3  (18,20)=4 
! 49 wrong pixels (generated / expected)

TEST 1a07d186.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2894.8 bits (2894.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-375] Checking task 1b2d62fb.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15537.1 = 15546.0
DL output with Mo: L = 9.0 + 3640.2 = 3649.2
DL input+output M: L = 17.9 + 19177.3 = 19195.2

# learning a model for train pairs
19195.2	
15497.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13192.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11436.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10197.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9510.0	OUT DEF: size={layer[0].size}
8899.6	IN  DEF: layer[01].color=blue
8782.5	IN  DEF: layer[01].mask=full
8698.6	OUT DEF: layer[0].color=cyan
8623.8	OUT DEF: color=black
8562.4	OUT DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at (?,?) with size ? and color cyan and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color blue and mask full
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 60.1 + 6999.8 = 7059.9
DL output with Mo: L = 32.3 + 1470.2 = 1502.5
DL input+output M: L = 92.4 + 8470.0 = 8562.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,4) with size (5,3) and color brown and mask 111001011011111
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,1) with size (3,2) and color brown and mask 101011
diff: 
delta: (2,0)=9# (4,1)=9# (4,2)=9#
   (167.6 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (3,1) with size (1,2) and color cyan and mask full
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,4) with size (5,3) and color brown and mask 111001011011111
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,1) with size (3,2) and color brown and mask 101011
diff: 
delta: (2,0)=9# (4,1)=9# (4,2)=9#
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color brown and layers
  [0]: a rectangle at (0,0) with size (5,3) and color black and mask 1111001010111
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,5) with size (1,2) and color black and mask full
diff: 
delta:
   (112.8 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,2) and color cyan and mask full
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,4) with size (5,3) and color brown and mask 111111111111001
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (1,0) with size (2,3) and color brown and mask 110101
diff: 
delta: (4,1)=9# (4,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (1,4) with size (4,3) and color brown and mask full
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (1,0) with size (2,3) and color brown and mask 110101
diff: 
delta: (0,4)=9# (4,1)=9# (4,2)=9#
! size mismatch, 4x3 instead of 5x3

TRAIN 1b2d62fb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,4) with size (5,3) and color brown and mask 10110001010101
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,0) with size (5,3) and color brown and mask 100110001001001
diff: 
delta:
   (127.1 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color cyan and mask 1001110100010
diff: 
delta:
   (37.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,4) with size (5,3) and color brown and mask 10110001010101
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,0) with size (5,3) and color brown and mask 100110001001001
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [01]: a rectangle at (0,4) with size (5,3) and color brown and mask 10110001010101
  [011]: a rectangle at (0,0) with size (5,3) and color brown and mask 100110001001001
diff:   layer[01].mask  layer[01].color
delta:
! size mismatch, 5x1 instead of 5x3

TRAIN 1b2d62fb.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color brown and mask 1010111001110
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color brown and mask 111001101
diff: 
delta: (4,4)=9#
   (137.7 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (3,0) with size (2,3) and color cyan and mask 110101
diff: 
delta: (1,1)=8  (1,2)=8 
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color brown and mask 1010111001110
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color brown and mask 111001101
diff: 
delta: (4,4)=9#
! 8 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color brown and mask 111001111101110
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color brown and mask 100111101
diff: 
delta: (3,4)=9# (4,6)=9#
   (154.9 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (3,1) with size (1,2) and color cyan and mask full
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color brown and mask 111001111101110
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color brown and mask 100111101
diff: 
delta: (3,4)=9# (4,6)=9#
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color brown and mask 110111011110011
  [01]: a rectangle at (0,3) with size (5,1) and color blue and mask full
  [011]: a rectangle at (2,4) with size (3,3) and color brown and mask 110101010
diff: 
delta: (0,5)=9#
! 6 wrong pixels (generated / expected)

TEST 1b2d62fb.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1470.2 bits (1470.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-374] Checking task 1b60fb0c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16734.7 = 16743.6
DL output with Mo: L = 9.0 + 21678.2 = 21687.2
DL input+output M: L = 17.9 + 38412.9 = 38430.8

# learning a model for train pairs
38430.8	
25132.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12010.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8339.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5528.5	OUT DEF: layer[0]={layer[0]}
4950.3	OUT DEF: size={size}
4812.3	OUT DEF: layer[01].color=red
4674.3	IN  DEF: layer[0].color=blue
4628.7	OUT DEF: color=black
4583.1	IN  DEF: color=black
4548.1	OUT DEF: layer[01].pos=(?,?)
4410.1	OUT DEF: layer[01].pos.j={layer[0].pos.i}
4279.3	OUT DEF: layer[01].pos.i={size.i - layer[0].size.j}
4244.2	OUT DEF: layer[01].size=(?,?)
4070.4	OUT DEF: layer[01].size.j={layer[0].size.j - layer[0].pos.j}
4035.3	IN  DEF: size=(?,?)
3772.0	IN  DEF: size.i=10
3508.7	IN  DEF: size.j=10
3473.7	IN  DEF: layer[0].pos=(?,?)
3335.7	IN  DEF: layer[0].pos.i=1
3197.7	IN  DEF: layer[0].pos.j=3
3162.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({size.i - layer[0].size.j},{layer[0].pos.i}) with size (?,{layer[0].size.j - layer[0].pos.j}) and color red and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (?,?) and color blue and mask ?

DL input  with Mi: L = 53.9 + 2299.8 = 2353.7
DL output with Mo: L = 55.1 + 753.9 = 809.0
DL input+output M: L = 109.0 + 3053.7 = 3162.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (8,6) and color blue and mask 1110000110000100110110111110100010000110000111
diff: 
delta:
   (66.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (8,6) and color blue and mask 1110000110000100110110111110100010000110000111
  [01]: a rectangle at (4,1) with size (3,3) and color red and mask 1111011
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (8,6) and color blue and mask 1110000110000100110110111110100010000110000111
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (9,7) and color blue and mask 1111100111111100100110010011111001100100110010000111110011111
diff: 
delta:
   (81.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (9,7) and color blue and mask 1111100111111100100110010011111001100100110010000111110011111
  [01]: a rectangle at (3,1) with size (5,4) and color red and mask 110011111100110011
diff: 
delta:
   (29.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (9,7) and color blue and mask 1111100111111100100110010011111001100100110010000111110011111
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (9,7) and color blue and mask 1111100001001001110101010011111001010100100111000001000011111
diff: 
delta:
   (81.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (9,7) and color blue and mask 1111100001001001110101010011111001010100100111000001000011111
  [01]: a rectangle at (3,1) with size (5,4) and color red and mask 10010101111101011001
diff: 
delta:
   (29.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (9,7) and color blue and mask 1111100001001001110101010011111001010100100111000001000011111
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (10,8) and color blue and mask 1000001111100000110001001000011011001111110001000100010011000001111100000100
diff:   layer[0].pos.j  layer[0].pos.i
delta:
! 16 wrong pixels (generated / expected)

TEST 1b60fb0c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 753.9 bits (753.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-373] Checking task 1bfc4729.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1180.6 = 1189.6
DL output with Mo: L = 9.0 + 18921.8 = 18930.8
DL input+output M: L = 17.9 + 20102.4 = 20120.4

# learning a model for train pairs
20120.4	
12656.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5040.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4042.9	OUT DEF: layer[0].mask=10000000011000000001111111111110000000011111111111
3045.5	OUT DEF: layer[01].mask=11111111111000000001111111111110000000011000000001
2659.1	OUT DEF: size={size}
2600.5	IN  SHAPE at layer[0]: a point at ? with color ?
2507.0	OUT DEF: layer[0].color={layer[0].color}
2431.4	IN  SHAPE at layer[01]: a point at ? with color ?
2338.4	OUT DEF: layer[01].color={layer[01].color}
2307.4	OUT DEF: color=black
2276.4	IN  DEF: color=black
2254.6	OUT DEF: layer[0].pos=(?,?)
2164.6	OUT DEF: layer[0].pos.i=0
2074.6	OUT DEF: layer[0].pos.j=0
2052.8	OUT DEF: layer[0].size=(?,?)
1873.9	OUT DEF: layer[0].size.j={size.j}
1738.2	OUT DEF: layer[0].size.i=5
1716.4	OUT DEF: layer[01].pos=(?,?)
1626.5	OUT DEF: layer[01].pos.i=5
1536.5	OUT DEF: layer[01].pos.j=0
1514.7	OUT DEF: layer[01].size=(?,?)
1335.8	OUT DEF: layer[01].size.j={size.j}
1200.1	OUT DEF: layer[01].size.i=5
1178.3	IN  DEF: size=(?,?)
1004.6	IN  DEF: size.i=10
831.0	IN  DEF: size.j=10
809.2	IN  DEF: layer[0].pos=(?,?)
717.6	IN  DEF: layer[0].pos.i=2
695.8	IN  DEF: layer[01].pos=(?,?)
604.3	IN  DEF: layer[01].pos.i=7

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,0) with size (5,{size.j}) and color {layer[0].color} and mask 10000000011000000001111111111110000000011111111111
  [01]: a rectangle at (5,0) with size (5,{size.j}) and color {layer[01].color} and mask 11111111111000000001111111111110000000011000000001
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a point at (2,?) with color ?
  [01]: a point at (7,?) with color ?

DL input  with Mi: L = 56.1 + 371.5 = 427.6
DL output with Mo: L = 176.7 + 0.0 = 176.7
DL input+output M: L = 232.8 + 371.5 = 604.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,2) with color pink
  [01]: a point at (7,7) with color orange
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (5,10) and color pink and mask 10000000011000000001111111111110000000011111111111
  [01]: a rectangle at (5,0) with size (5,10) and color orange and mask 11111111111000000001111111111110000000011000000001
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,2) with color pink
  [01]: a point at (7,7) with color orange
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,6) with color blue
  [01]: a point at (7,5) with color yellow
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (5,10) and color blue and mask 10000000011000000001111111111110000000011111111111
  [01]: a rectangle at (5,0) with size (5,10) and color yellow and mask 11111111111000000001111111111110000000011000000001
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,6) with color blue
  [01]: a point at (7,5) with color yellow
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,4) with color red
  [01]: a point at (7,6) with color cyan
diff: 
delta:
correct output grid

TEST 1bfc4729.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-372] Checking task 1c786137.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 135788.2 = 135797.2
DL output with Mo: L = 9.0 + 17018.7 = 17027.7
DL input+output M: L = 17.9 + 152806.9 = 152824.9

# learning a model for train pairs
152824.9	
138522.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
129833.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
125762.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
122820.3	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
120000.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 105716.5 = 105792.6
DL output with Mo: L = 26.6 + 14181.5 = 14208.0
DL input+output M: L = 102.6 + 119898.0 = 120000.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,21) and color black and layers
  [0]: a rectangle at (3,4) with size (8,10) and color red and mask 11111111111000000001100000000110000000011000000001100000000110000000011111111111
  [01]: a rectangle at (11,0) with size (10,6) and color green and mask 110010011000100101011010001101011110100010100000011000000111
  [011]: a rectangle at (10,0) with size (13,3) and color blue and mask full
  [0111]: a rectangle at (4,8) with size (6,5) and color green and mask 100010000100000110101011110
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,1)=0  (12,2)=0  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,2)=5# (13,3)=1  (13,4)=8  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,4)=1  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,0)=0  (17,2)=8  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,1)=8  (18,4)=1  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,1)=5# (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,2)=0  (20,3)=1  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
   (5976.5 bits)
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (0,3) with size (6,5) and color green and mask 100010000100000110101011110
diff: 
delta: (0,2)=8  (1,0)=1  (1,7)=1  (2,0)=3  (2,1)=3  (2,6)=8  (2,7)=1  (3,0)=3  (3,1)=3  (3,2)=5# (3,3)=1  (4,0)=5# (4,1)=1  (4,2)=3  (4,4)=1  (4,6)=1  (4,7)=1  (5,0)=5# (5,2)=8  (5,6)=8  (5,7)=8 
   (436.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,21) and color black and layers
  [0]: a rectangle at (3,4) with size (8,10) and color red and mask 11111111111000000001100000000110000000011000000001100000000110000000011111111111
  [01]: a rectangle at (11,0) with size (10,6) and color green and mask 110010011000100101011010001101011110100010100000011000000111
  [011]: a rectangle at (10,0) with size (13,3) and color blue and mask full
  [0111]: a rectangle at (4,8) with size (6,5) and color green and mask 100010000100000110101011110
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,1)=0  (12,2)=0  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,2)=5# (13,3)=1  (13,4)=8  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,4)=1  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,0)=0  (17,2)=8  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,1)=8  (18,4)=1  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,1)=5# (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,2)=0  (20,3)=1  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
! size mismatch, 10x10 instead of 6x8

TRAIN 1c786137.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (0,3) with size (5,10) and color pink and mask 1101100101000000011010001110000111110101011
  [01]: a rectangle at (6,2) with size (7,5) and color yellow and mask 11111100011000110001100011000111111
  [011]: a rectangle at (0,0) with size (6,7) and color brown and mask 10001111100001111001010010000110111011100
  [0111]: a rectangle at (2,0) with size (5,3) and color pink and mask 110111011111101
diff: 
delta: (0,1)=6  (0,7)=3  (0,9)=9# (0,13)=9# (0,14)=9# (1,7)=9# (1,8)=3  (1,12)=9# (1,13)=9# (1,15)=6  (2,10)=3  (2,13)=6  (3,7)=3  (3,9)=9# (3,10)=9# (3,13)=3  (3,14)=6  (3,15)=6  (4,9)=3  (4,15)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
   (1694.6 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
diff: 
delta: (1,0)=9# (1,2)=9# (2,0)=6  (2,1)=6  (3,0)=9# (4,0)=6  (4,1)=3  (4,2)=9#
   (165.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (0,3) with size (5,10) and color pink and mask 1101100101000000011010001110000111110101011
  [01]: a rectangle at (6,2) with size (7,5) and color yellow and mask 11111100011000110001100011000111111
  [011]: a rectangle at (0,0) with size (6,7) and color brown and mask 10001111100001111001010010000110111011100
  [0111]: a rectangle at (2,0) with size (5,3) and color pink and mask 110111011111101
diff: 
delta: (0,1)=6  (0,7)=3  (0,9)=9# (0,13)=9# (0,14)=9# (1,7)=9# (1,8)=3  (1,12)=9# (1,13)=9# (1,15)=6  (2,10)=3  (2,13)=6  (3,7)=3  (3,9)=9# (3,10)=9# (3,13)=3  (3,14)=6  (3,15)=6  (4,9)=3  (4,15)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
! size mismatch, 10x10 instead of 5x3

TRAIN 1c786137.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (2,3) with size (10,12) and color cyan and mask 111111111111100000000001100000000001100000000001100000000001100000000001100000000001100000000001100000000001111111111111
  [01]: a rectangle at (3,6) with size (4,7) and color grey and mask 1001011010000000111101000001
  [011]: a rectangle at (13,0) with size (2,6) and color red and mask 11110110101
  [0111]: a rectangle at (0,5) with size (2,6) and color red and mask 111111000100
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,5)=5# (5,7)=2  (5,9)=3  (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,10)=3  (7,4)=5# (7,5)=2  (7,6)=5# (7,7)=2  (7,8)=5# (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,5)=5# (8,6)=2  (8,7)=5# (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,1)=5# (13,3)=5# (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
   (2900.6 bits)
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (0,2) with size (4,7) and color grey and mask 1001011010000000111101000001
diff: 
delta: (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=2  (0,7)=2  (1,0)=3  (1,7)=2  (1,9)=5# (2,0)=3  (2,1)=5# (2,3)=2  (2,5)=3  (2,8)=3  (3,0)=3  (3,1)=2  (3,6)=3  (4,0)=5# (4,1)=2  (4,2)=5# (4,3)=2  (4,4)=5# (4,6)=2  (4,7)=2  (4,8)=2  (4,9)=2  (5,1)=5# (5,2)=2  (5,3)=5# (5,8)=3  (5,9)=3  (6,0)=2  (6,1)=3  (6,2)=2  (6,3)=3  (6,6)=5# (6,8)=5# (7,0)=3  (7,1)=2  (7,2)=5# (7,4)=5# (7,8)=5# (7,9)=5#
   (816.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (2,3) with size (10,12) and color cyan and mask 111111111111100000000001100000000001100000000001100000000001100000000001100000000001100000000001100000000001111111111111
  [01]: a rectangle at (3,6) with size (4,7) and color grey and mask 1001011010000000111101000001
  [011]: a rectangle at (13,0) with size (2,6) and color red and mask 11110110101
  [0111]: a rectangle at (0,5) with size (2,6) and color red and mask 111111000100
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,5)=5# (5,7)=2  (5,9)=3  (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,10)=3  (7,4)=5# (7,5)=2  (7,6)=5# (7,7)=2  (7,8)=5# (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,5)=5# (8,6)=2  (8,7)=5# (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,1)=5# (13,3)=5# (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
! size mismatch, 10x10 instead of 8x10

TRAIN 1c786137.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  [0]: a rectangle at (4,3) with size (10,11) and color green and mask 11111111111100000000011000000000110000000001100000000011000000000110000000001100000000011000000000111111111111
  [01]: a rectangle at (6,4) with size (6,9) and color cyan and mask 110000001111110110000101100101001100010000001100101001
  [011]: a rectangle at (5,7) with size (4,6) and color blue and mask 111111111100101101010111
  [0111]: a rectangle at (1,7) with size (3,5) and color blue and mask 110100011010011
diff: 
delta: (0,3)=8  (0,4)=1  (0,5)=1  (0,6)=8  (0,9)=8  (0,11)=8  (0,15)=8  (1,1)=1  (1,3)=8  (1,4)=8  (1,5)=1  (1,9)=2  (1,10)=8  (1,12)=1  (1,13)=2  (1,15)=2  (2,2)=8  (2,3)=8  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=8  (2,10)=8  (2,12)=8  (2,15)=1  (3,0)=1  (3,2)=1  (3,4)=8  (3,6)=1  (3,7)=8  (3,12)=8  (3,13)=8  (3,14)=8  (4,0)=8  (4,2)=8  (4,15)=2  (5,0)=1  (5,2)=8  (5,4)=2  (5,6)=8  (6,1)=8  (6,2)=8  (6,5)=1  (6,8)=2  (6,11)=2  (6,14)=1  (6,15)=8  (7,0)=1  (7,2)=8  (7,5)=2  (7,7)=2  (7,14)=8  (7,15)=8  (8,1)=8  (8,5)=1  (8,14)=2  (8,15)=1  (9,0)=1  (9,5)=1  (9,11)=2  (9,14)=8  (9,15)=1  (10,1)=8  (10,2)=8  (10,7)=2  (10,14)=8  (10,15)=8  (11,0)=1  (11,1)=1  (11,2)=1  (11,6)=2  (11,14)=8  (12,0)=1  (12,1)=8  (12,5)=2  (12,6)=8  (12,7)=8  (12,8)=1  (12,9)=2  (12,12)=2  (12,14)=8  (12,15)=1  (13,0)=8  (13,1)=1  (13,2)=1  (13,15)=2  (14,0)=8  (14,1)=1  (14,6)=8  (14,7)=8  (14,9)=1  (14,10)=2  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=1  (14,15)=8  (15,0)=8  (15,1)=1  (15,4)=1  (15,5)=1  (15,6)=8  (15,8)=1  (15,9)=2  (15,10)=8  (15,11)=1  (15,13)=1  (15,14)=2  (16,0)=8  (16,2)=8  (16,3)=2  (16,4)=8  (16,6)=8  (16,7)=2  (16,9)=1  (16,10)=8  (16,11)=1  (16,12)=8  (16,13)=1  (16,14)=8  (16,15)=8 
! size mismatch, 10x10 instead of 8x9

TEST 1c786137.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 14181.5 bits (14181.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-371] Checking task 1caeab9d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6943.6 = 6952.6
DL output with Mo: L = 9.0 + 6943.6 = 6952.6
DL input+output M: L = 17.9 + 13887.2 = 13905.2

# learning a model for train pairs
13905.2	
12640.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11356.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9987.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8722.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7438.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6069.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5532.4	OUT DEF: size={size}
5242.4	OUT DEF: layer[0].size={layer[0].size}
4952.4	OUT DEF: layer[01].size={layer[01].size}
4662.4	OUT DEF: layer[011].size={layer[011].size}
4523.9	OUT DEF: layer[01].color={layer[011].color}
4385.4	OUT DEF: layer[0].color={layer[01].color}
4004.1	OUT DEF: layer[0]={layer[01]}
3865.6	OUT DEF: layer[011].color={layer[0].color}
3727.6	IN  DEF: layer[01].color=blue
3657.0	OUT DEF: layer[01].mask=full
3519.0	IN  DEF: layer[0].color=red
3381.0	IN  DEF: layer[011].color=yellow
3310.3	OUT DEF: layer[011].mask=full
3239.7	IN  DEF: layer[0].mask=full
3169.0	IN  DEF: layer[01].mask=full
3098.4	IN  DEF: layer[011].mask=full
3052.8	OUT DEF: color=black
3007.2	IN  DEF: color=black
2972.2	OUT DEF: layer[01].pos=(?,?)
2834.5	OUT DEF: layer[01].pos.j={layer[011].pos.j}
2716.3	OUT DEF: layer[01].pos.i={layer[01].pos.i}
2681.3	OUT DEF: layer[011].pos=(?,?)
2543.7	OUT DEF: layer[011].pos.j={layer[0].pos.j}
2426.0	OUT DEF: layer[011].pos.i={layer[01].pos.i}
2391.0	IN  DEF: size=(?,?)
2127.7	IN  DEF: size.j=10
2092.7	IN  DEF: layer[0].pos=(?,?)
2057.7	IN  DEF: layer[0].size=(?,?)
1929.0	IN  DEF: layer[0].size.i=2
1894.0	IN  DEF: layer[01].pos=(?,?)
1859.0	IN  DEF: layer[01].size=(?,?)
1730.3	IN  DEF: layer[01].size.i=2
1695.3	IN  DEF: layer[011].pos=(?,?)
1660.3	IN  DEF: layer[011].size=(?,?)
1531.6	IN  DEF: layer[011].size.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[01]}
  [01]: a rectangle at ({layer[01].pos.i},{layer[011].pos.j}) with size {layer[01].size} and color {layer[011].color} and mask full
  [011]: a rectangle at ({layer[01].pos.i},{layer[0].pos.j}) with size {layer[011].size} and color {layer[0].color} and mask full
WHERE (Mi)
a background with size (?,10) and color black and layers
  [0]: a rectangle at (?,?) with size (2,?) and color red and mask full
  [01]: a rectangle at (?,?) with size (2,?) and color blue and mask full
  [011]: a rectangle at (?,?) with size (2,?) and color yellow and mask full

DL input  with Mi: L = 100.0 + 1368.9 = 1469.0
DL output with Mo: L = 62.7 + 0.0 = 62.7
DL input+output M: L = 162.7 + 1368.9 = 1531.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,7) with size (2,2) and color blue and mask full
  [011]: a rectangle at (2,4) with size (2,2) and color yellow and mask full
diff: 
delta:
   (44.8 bits)
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (1,7) with size (2,2) and color blue and mask full
  [01]: a rectangle at (1,4) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (1,1) with size (2,2) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,7) with size (2,2) and color blue and mask full
  [011]: a rectangle at (2,4) with size (2,2) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (2,3) and color red and mask full
  [01]: a rectangle at (5,4) with size (2,3) and color blue and mask full
  [011]: a rectangle at (0,7) with size (2,3) and color yellow and mask full
diff: 
delta:
   (53.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,4) with size (2,3) and color blue and mask full
  [01]: a rectangle at (5,7) with size (2,3) and color yellow and mask full
  [011]: a rectangle at (5,1) with size (2,3) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (2,3) and color red and mask full
  [01]: a rectangle at (5,4) with size (2,3) and color blue and mask full
  [011]: a rectangle at (0,7) with size (2,3) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (1,3) with size (2,1) and color red and mask full
  [01]: a rectangle at (2,1) with size (2,1) and color blue and mask full
  [011]: a rectangle at (3,6) with size (2,1) and color yellow and mask full
diff: 
delta:
   (38.8 bits)
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (2,1) with size (2,1) and color blue and mask full
  [01]: a rectangle at (2,6) with size (2,1) and color yellow and mask full
  [011]: a rectangle at (2,3) with size (2,1) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (1,3) with size (2,1) and color red and mask full
  [01]: a rectangle at (2,1) with size (2,1) and color blue and mask full
  [011]: a rectangle at (3,6) with size (2,1) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,8) with size (2,2) and color red and mask full
  [01]: a rectangle at (2,1) with size (2,2) and color blue and mask full
  [011]: a rectangle at (5,4) with size (2,2) and color yellow and mask full
diff: 
delta: (2,7)=2  (4,0)=1  (7,3)=4 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,7) with size (3,3) and color red and mask 1110110
  [01]: a rectangle at (2,1) with size (2,2) and color blue and mask full
  [011]: a rectangle at (5,4) with size (2,2) and color yellow and mask full
diff:   layer[0].mask  layer[0].size.i
delta: (4,0)=1  (7,3)=4 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,8) with size (2,2) and color red and mask full
  [01]: a rectangle at (2,0) with size (3,3) and color blue and mask 1110110
  [011]: a rectangle at (5,4) with size (2,2) and color yellow and mask full
diff:   layer[01].mask  layer[01].size.i
delta: (2,7)=2  (7,3)=4 
! 7 wrong pixels (generated / expected)

TEST 1caeab9d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-370] Checking task 1cf80156.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5330.0 = 5339.0
DL output with Mo: L = 9.0 + 3956.8 = 3965.8
DL input+output M: L = 17.9 + 9286.8 = 9304.8

# learning a model for train pairs
9304.8	
6051.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3893.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3362.0	OUT DEF: layer[0].mask={layer[0].mask}
2946.5	OUT DEF: layer[0].size={layer[0].size}
2532.0	OUT DEF: size={layer[0].size}
2392.0	OUT DEF: layer[0].color={layer[0].color}
2346.4	OUT DEF: color=black
2300.8	IN  DEF: color=black
2265.8	OUT DEF: layer[0].pos=(?,?)
2170.0	OUT DEF: layer[0].pos.i=0
2074.2	OUT DEF: layer[0].pos.j=0
2039.2	IN  DEF: size=(?,?)
1760.6	IN  DEF: size.j=12
1725.6	IN  DEF: layer[0].pos=(?,?)
1690.5	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at (0,0) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,12) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 44.8 + 1612.1 = 1656.9
DL output with Mo: L = 33.7 + 0.0 = 33.7
DL input+output M: L = 78.5 + 1612.1 = 1690.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (2,3) with size (4,4) and color red and mask 101011101001110
diff: 
delta:
   (54.1 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color red and mask 101011101001110
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (2,3) with size (4,4) and color red and mask 101011101001110
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (1,2) with size (5,3) and color blue and mask 100111010011001
diff: 
delta:
   (53.4 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color blue and mask 100111010011001
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (1,2) with size (5,3) and color blue and mask 100111010011001
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,3) with size (3,5) and color cyan and mask 110000111101010
diff: 
delta:
   (53.7 bits)
data: a background with size (3,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,5) and color cyan and mask 110000111101010
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,3) with size (3,5) and color cyan and mask 110000111101010
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (4,2) with size (4,6) and color pink and mask 1111000101000100111100
diff: 
delta:
correct output grid

TEST 1cf80156.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-369] Checking task 1e0a9b12.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3799.1 = 3808.0
DL output with Mo: L = 9.0 + 3799.1 = 3808.0
DL input+output M: L = 17.9 + 7598.1 = 7616.1

# learning a model for train pairs
7616.1	
7076.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6619.7	OUT DEF: size={size}
6365.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6225.6	OUT DEF: layer[0].color={layer[0].color}
6109.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6018.3	OUT SHAPE at layer[011]: a point at ? with color ?
5942.5	IN  SHAPE at layer[01]: a point at ? with color ?
5803.1	OUT DEF: layer[01].color={layer[01].color}
5722.9	IN  SHAPE at layer[011]: a point at ? with color ?
5583.8	OUT DEF: layer[011].color={layer[011].color}
5512.9	OUT DEF: layer[0].mask={layer[0].mask}
5441.9	OUT DEF: layer[01].mask={layer[0].mask}
5371.2	IN  DEF: layer[0].mask=full
5325.6	OUT DEF: color=black
5280.0	IN  DEF: color=black
5245.0	OUT DEF: layer[0].pos=(?,?)
5137.1	OUT DEF: layer[0].pos.j={layer[0].pos.j}
5037.8	OUT DEF: layer[0].pos.i={layer[01].pos.i + 2}
5002.7	OUT DEF: layer[0].size=(?,?)
4858.4	OUT DEF: layer[0].size.i={layer[0].pos.j + layer[0].size.i}
4787.8	OUT DEF: layer[0].size.j=1
4752.7	OUT DEF: layer[01].pos=(?,?)
4644.8	OUT DEF: layer[01].pos.j={layer[01].pos.j}
4544.8	OUT DEF: layer[01].pos.i={layer[01].pos.i + layer[01].pos.j}
4509.8	OUT DEF: layer[01].size=(?,?)
4408.4	OUT DEF: layer[01].size.i={layer[0].size.i - layer[01].pos.i}
4337.8	OUT DEF: layer[01].size.j=1
4302.8	OUT DEF: layer[011].pos=(?,?)
4194.8	OUT DEF: layer[011].pos.j={layer[011].pos.j}
4094.7	OUT DEF: layer[011].pos.i={size.i - 1}
4059.7	IN  DEF: size=(?,?)
4024.6	IN  DEF: layer[0].pos=(?,?)
3989.6	IN  DEF: layer[0].size=(?,?)
3919.0	IN  DEF: layer[0].size.j=1
3884.0	IN  DEF: layer[01].pos=(?,?)
3778.1	IN  DEF: layer[01].pos.j=3
3739.1	IN  SHAPE at layer[0110]: a point at ? with color ?
3693.5	IN  DEF: color=black
3658.5	IN  DEF: layer[0110].pos=(?,?)
3623.5	IN  DEF: layer[011].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.i + 2},{layer[0].pos.j}) with size ({layer[0].pos.j + layer[0].size.i},1) and color {layer[0].color} and mask {layer[0].mask}
  [01]: a rectangle at ({layer[01].pos.i + layer[01].pos.j},{layer[01].pos.j}) with size ({layer[0].size.i - layer[01].pos.i},1) and color {layer[01].color} and mask {layer[0].mask}
  [011]: a point at ({size.i - 1},{layer[011].pos.j}) with color {layer[011].color}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,1) and color ? and mask full
  [01]: a point at (?,3) with color ?
  [0110]: a point at (?,?) with color ?
  [011]: a point at (?,?) with color ?

DL input  with Mi: L = 83.0 + 2721.6 = 2804.6
DL output with Mo: L = 120.1 + 698.8 = 818.9
DL input+output M: L = 203.1 + 3420.3 = 3623.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
  [01]: a point at (0,3) with color brown
  [0110]: a point at (2,1) with color yellow
  [011]: a point at (2,2) with color pink
diff: 
delta: (3,0)=1 
   (73.7 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (2,1) with size (2,1) and color yellow and mask full
  [01]: a rectangle at (3,3) with size (1,1) and color brown and mask full
  [011]: a point at (3,2) with color pink
diff: 
delta: (3,0)=1 
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
  [01]: a point at (0,3) with color brown
  [0110]: a point at (2,1) with color yellow
  [011]: a point at (2,2) with color pink
diff: 
delta: (3,0)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
  [01]: a point at (0,3) with color brown
  [0110]: a point at (2,1) with color yellow
  [011]: a point at (3,0) with color blue
diff: 
delta: (2,2)=6 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
  [01]: a point at (0,3) with color brown
  [0110]: a point at (2,2) with color pink
  [011]: a point at (2,1) with color yellow
diff: 
delta: (3,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,0) with size (3,1) and color yellow and mask full
  [01]: a point at (1,3) with color cyan
  [0110]: a point at (4,3) with color cyan
  [011]: a point at (0,5) with color brown
diff: 
delta: (4,2)=7# (5,2)=7#
   (101.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,0) with size (3,1) and color yellow and mask full
  [01]: a rectangle at (4,3) with size (2,1) and color cyan and mask full
  [011]: a point at (5,5) with color brown
diff: 
delta: (4,2)=7# (5,2)=7#
   (35.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,0) with size (3,1) and color yellow and mask full
  [01]: a point at (1,3) with color cyan
  [0110]: a point at (0,5) with color brown
  [011]: a point at (4,3) with color cyan
diff: 
delta: (4,2)=7# (5,2)=7#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,0) with size (3,1) and color yellow and mask full
  [01]: a point at (1,3) with color cyan
  [0110]: a point at (4,3) with color cyan
  [011]: a point at (0,5) with color brown
diff: 
delta: (4,2)=7# (5,2)=7#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,0) with size (3,1) and color yellow and mask full
  [01]: a point at (4,3) with color cyan
  [0110]: a point at (0,5) with color brown
  [011]: a point at (1,3) with color cyan
diff: 
delta: (4,2)=7# (5,2)=7#
! 7 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (2,1) and color green and mask full
  [01]: a point at (0,3) with color blue
  [0110]: a point at (2,3) with color blue
  [011]: a point at (2,4) with color red
diff: 
delta: (3,0)=6  (4,1)=3 
   (96.7 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (2,1) with size (3,1) and color green and mask full
  [01]: a rectangle at (3,3) with size (2,1) and color blue and mask full
  [011]: a point at (4,4) with color red
diff: 
delta: (4,0)=6 
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (2,1) and color green and mask full
  [01]: a point at (0,3) with color blue
  [0110]: a point at (2,3) with color blue
  [011]: a point at (2,4) with color red
diff: 
delta: (3,0)=6  (4,1)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (2,1) and color green and mask full
  [01]: a point at (0,3) with color blue
  [0110]: a point at (2,3) with color blue
  [011]: a point at (3,0) with color pink
diff: 
delta: (2,4)=2  (4,1)=3 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (2,1) and color green and mask full
  [01]: a point at (0,3) with color blue
  [0110]: a point at (2,3) with color blue
  [011]: a point at (4,1) with color green
diff: 
delta: (2,4)=2  (3,0)=6 
! 2 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,1) and color grey and mask full
  [01]: a point at (0,3) with color yellow
  [0110]: a point at (0,1) with color red
  [011]: a point at (0,4) with color green
diff: 
delta: (1,0)=5# (2,2)=6  (3,1)=2  (3,3)=4 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,1) and color grey and mask full
  [01]: a point at (0,3) with color yellow
  [0110]: a point at (0,1) with color red
  [011]: a point at (1,0) with color grey
diff: 
delta: (0,4)=3  (2,2)=6  (3,1)=2  (3,3)=4 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,1) and color grey and mask full
  [01]: a point at (0,3) with color yellow
  [0110]: a point at (0,1) with color red
  [011]: a point at (2,2) with color pink
diff: 
delta: (0,4)=3  (1,0)=5# (3,1)=2  (3,3)=4 
! 4 wrong pixels (generated / expected)

TEST 1e0a9b12.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 698.8 bits (698.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-368] Checking task 1e32b0e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 46374.8 = 46383.8
DL output with Mo: L = 9.0 + 68762.8 = 68771.8
DL input+output M: L = 17.9 + 115137.6 = 115155.5

# learning a model for train pairs
115155.5	
65871.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
38975.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
36634.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
34293.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
33219.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 17103.6 = 17146.9
DL output with Mo: L = 59.8 + 16012.4 = 16072.2
DL input+output M: L = 103.1 + 33116.0 = 33219.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color cyan and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color red and mask 10111010
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2  (13,2)=2  (14,1)=2  (14,2)=2  (14,3)=2  (15,2)=2 
   (631.3 bits)
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color cyan and mask 10000010000000100100100100000011101011101000000010010010010000000000100000100000111111111111111110000010000010000000100100000100100011101001001011100010010000010010000000100000100000111111111111111110000010000010000000100100100100000000001011101000000010010010010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color red and mask 10111010
  [011]: a rectangle at (13,1) with size (3,3) and color red and mask 10111010
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2 
   (574.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color cyan and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color red and mask 10111010
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2  (13,2)=2  (14,1)=2  (14,2)=2  (14,3)=2  (15,2)=2 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color red and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color blue and mask full
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1  (13,8)=1  (14,7)=1  (14,9)=1  (15,8)=1 
   (564.2 bits)
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color red and mask 10000010000001110101010101110011101001001011100111010101010111000000100000100000111111111111111110000010000010000001110101110101110010101011101011100111010111010111000000100000100000111111111111111110000010000010000001110101110100000011101010001000000001010111010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color blue and mask full
  [011]: a rectangle at (13,7) with size (3,3) and color blue and mask full
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1 
   (517.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color red and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color blue and mask full
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1  (13,8)=1  (14,7)=1  (14,9)=1  (15,8)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color green and mask 10101010
diff: 
delta: (2,7)=3  (2,15)=3  (7,2)=3  (8,1)=3  (14,15)=3  (15,14)=3 
   (514.9 bits)
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 10000010000000000100100100100000101010101010100010010010010010000000100000100000111111111111111110000010000010000000100100100100100010101010101010000010010010010000000000100000100000111111111111111110000010000010000000100100100100000000101010001000000010010010010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color green and mask 10101010
  [011]: a rectangle at (7,1) with size (2,2) and color green and mask 110
diff: 
delta: (2,7)=3  (2,15)=3  (14,15)=3  (15,14)=3 
   (508.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color green and mask 10101010
diff: 
delta: (2,7)=3  (2,15)=3  (7,2)=3  (8,1)=3  (14,15)=3  (15,14)=3 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color brown and mask 10000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000111111111111111110000010000010000000000100000100000000001000001000000000010000010000000000100000100000
  [01]: a rectangle at (1,1) with size (3,3) and color yellow and mask 111101111
diff: 
delta: (1,7)=4  (1,8)=4  (7,2)=4  (8,1)=4  (8,3)=4  (9,2)=4  (9,7)=4  (9,8)=4  (14,7)=4  (14,9)=4 
! size mismatch, 10x10 instead of 17x17

TEST 1e32b0e9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 16012.4 bits (16012.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-367] Checking task 1f0c79e5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3753.3 = 3762.3
DL output with Mo: L = 9.0 + 17405.1 = 17414.1
DL input+output M: L = 17.9 + 21158.5 = 21176.4

# learning a model for train pairs
21176.4	
8600.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7753.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7006.8	OUT DEF: size={size}
6812.5	IN  SHAPE at layer[00]: a point at ? with color ?
6718.7	IN  DEF: layer[0].mask=full
6658.5	OUT DEF: color=black
6598.3	IN  DEF: color=black
6550.1	OUT DEF: layer[0].pos=(?,?)
6501.8	OUT DEF: layer[0].size=(?,?)
6453.6	IN  DEF: size=(?,?)
6112.5	IN  DEF: size.i=9
5771.3	IN  DEF: size.j=9
5723.1	IN  DEF: layer[00].pos=(?,?)
5674.9	IN  DEF: layer[0].pos=(?,?)
5626.6	IN  DEF: layer[0].size=(?,?)
5454.8	IN  DEF: layer[0].size.i=2
5282.9	IN  DEF: layer[0].size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
WHERE (Mi)
a background with size (9,9) and color black and layers
  [00]: a point at (?,?) with color ?
  [0]: a rectangle at (?,?) with size (2,2) and color ? and mask full

DL input  with Mi: L = 65.1 + 1282.9 = 1348.0
DL output with Mo: L = 33.5 + 3901.3 = 3934.9
DL input+output M: L = 98.6 + 5184.2 = 5282.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [00]: a point at (4,3) with color red
  [0]: a rectangle at (4,2) with size (2,2) and color yellow and mask full
diff: 
delta:
   (27.3 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,2) with size (6,7) and color yellow and mask 1100001110001110001110001110001110000
diff: 
delta:
   (73.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [00]: a point at (4,3) with color red
  [0]: a rectangle at (4,2) with size (2,2) and color yellow and mask full
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [00]: a point at (2,3) with color red
  [0]: a rectangle at (1,2) with size (2,2) and color green and mask full
diff: 
delta:
   (27.3 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,2) with size (8,7) and color green and mask 10000001100000111000001110000011100000111000001110000011
diff: 
delta:
   (88.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [00]: a point at (2,3) with color red
  [0]: a rectangle at (1,2) with size (2,2) and color green and mask full
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [00]: a point at (3,3) with color pink
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
diff: 
delta: (4,4)=6 
   (46.5 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color pink and mask 1000000011000000111000001110000011100000111000001110000011100000111000000
diff: 
delta:
   (114.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [00]: a point at (3,3) with color pink
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
diff: 
delta: (4,4)=6 
! 28 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [00]: a point at (4,4) with color orange
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
diff: 
delta:
   (27.3 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color orange and mask 1000000011000000111000001110000011100000111100001111110011100111111000011
diff: 
delta:
   (114.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [00]: a point at (4,4) with color orange
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [00]: a point at (3,5) with color cyan
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST 1f0c79e5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3901.3 bits (3901.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-366] Checking task 1f642eb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10009.3 = 10018.3
DL output with Mo: L = 9.0 + 10009.3 = 10018.3
DL input+output M: L = 17.9 + 20018.6 = 20036.5

# learning a model for train pairs
20036.5	
14197.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10861.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10283.2	OUT DEF: size={size}
9964.3	OUT DEF: layer[0].pos={layer[0].pos}
9824.3	OUT DEF: layer[0].color={layer[0].color}
9686.3	IN  DEF: layer[0].color=cyan
9610.0	IN  SHAPE at layer[01]: a point at ? with color ?
9472.0	IN  DEF: layer[01].color=pink
9389.6	IN  SHAPE at layer[011]: a point at ? with color ?
9295.6	IN  SHAPE at layer[0111]: a point at ? with color ?
9224.6	OUT DEF: layer[0].mask={layer[0].mask}
9154.0	IN  DEF: layer[0].mask=full
9084.9	OUT SHAPE at layer[01]: a point at ? with color ?
8621.9	OUT DEF: layer[01]={layer[01]}
8551.3	OUT SHAPE at layer[011]: a point at ? with color ?
8088.3	OUT DEF: layer[011]={layer[011]}
8015.7	OUT SHAPE at layer[0111]: a point at ? with color ?
7552.7	OUT DEF: layer[0111]={layer[0111]}
7477.3	OUT SHAPE at layer[01111]: a point at ? with color ?
7397.5	OUT SHAPE at layer[011111]: a point at ? with color ?
7308.1	OUT SHAPE at layer[00]: a point at ? with color ?
6990.8	OUT DEF: layer[00].pos={layer[0].pos}
6945.2	OUT DEF: color=black
6899.6	IN  DEF: color=black
6864.6	OUT DEF: layer[0].size=(?,?)
6712.3	OUT DEF: layer[0].size.j={layer[0].size.j}
6677.3	OUT DEF: layer[01111].pos=(?,?)
6546.7	OUT DEF: layer[01111].pos.i={layer[011].pos.j + 1}
6511.7	OUT DEF: layer[011111].pos=(?,?)
6381.6	OUT DEF: layer[011111].pos.j={layer[01].pos.i - layer[0].size.j}
6346.6	IN  DEF: size=(?,?)
6083.2	IN  DEF: size.i=10
5819.9	IN  DEF: size.j=10
5784.9	IN  DEF: layer[0].pos=(?,?)
5646.9	IN  DEF: layer[0].pos.i=3
5611.9	IN  DEF: layer[0].size=(?,?)
5576.9	IN  DEF: layer[01].pos=(?,?)
5541.8	IN  DEF: layer[011].pos=(?,?)
5506.8	IN  DEF: layer[0111].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [00]: a point at {layer[0].pos} with color ?
  [0]: a rectangle at {layer[0].pos} with size (?,{layer[0].size.j}) and color {layer[0].color} and mask {layer[0].mask}
  [01]: {layer[01]}
  [011]: {layer[011]}
  [0111]: {layer[0111]}
  [01111]: a point at ({layer[011].pos.j + 1},?) with color ?
  [011111]: a point at (?,{layer[01].pos.i - layer[0].size.j}) with color ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,?) with size (?,?) and color cyan and mask full
  [01]: a point at (?,?) with color pink
  [011]: a point at (?,?) with color ?
  [0111]: a point at (?,?) with color ?

DL input  with Mi: L = 96.4 + 2559.9 = 2656.3
DL output with Mo: L = 99.6 + 2750.9 = 2850.6
DL input+output M: L = 196.0 + 5310.8 = 5506.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (4,2) and color cyan and mask full
  [01]: a point at (6,0) with color pink
  [011]: a point at (9,5) with color yellow
  [0111]: a point at (0,4) with color brown
diff: 
delta:
   (52.4 bits)
data: a background with size (10,10) and color black and layers
  [00]: a point at (3,4) with color brown
  [0]: a rectangle at (3,4) with size (3,2) and color cyan and mask full
  [01]: a point at (6,0) with color pink
  [011]: a point at (9,5) with color yellow
  [0111]: a point at (0,4) with color brown
  [01111]: a point at (6,5) with color yellow
  [011111]: a point at (6,4) with color pink
diff: 
delta:
   (28.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (4,2) and color cyan and mask full
  [01]: a point at (6,0) with color pink
  [011]: a point at (0,4) with color brown
  [0111]: a point at (9,5) with color yellow
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (4,2) and color cyan and mask full
  [01]: a point at (6,0) with color pink
  [011]: a point at (9,5) with color yellow
  [0111]: a point at (0,4) with color brown
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (4,2) and color cyan and mask full
  [01]: a point at (0,4) with color brown
  [011]: a point at (6,0) with color pink
  [0111]: a point at (9,5) with color yellow
diff:   layer[01].color
delta:
! 6 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,0) with color pink
  [011]: a point at (0,4) with color orange
  [0111]: a point at (9,5) with color blue
diff: 
delta: (5,9)=2  (7,0)=3 
   (92.6 bits)
data: a background with size (10,10) and color black and layers
  [00]: a point at (3,3) with color pink
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,0) with color pink
  [011]: a point at (0,4) with color orange
  [0111]: a point at (9,5) with color blue
  [01111]: a point at (5,9) with color red
  [011111]: a point at (7,0) with color green
diff: 
delta: (3,4)=7# (5,5)=2  (7,3)=3  (7,5)=1 
   (105.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,0) with color pink
  [011]: a point at (0,4) with color orange
  [0111]: a point at (5,9) with color red
diff: 
delta: (7,0)=3  (9,5)=1 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,0) with color pink
  [011]: a point at (0,4) with color orange
  [0111]: a point at (7,0) with color green
diff: 
delta: (5,9)=2  (9,5)=1 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,0) with color pink
  [011]: a point at (0,4) with color orange
  [0111]: a point at (9,5) with color blue
diff: 
delta: (5,9)=2  (7,0)=3 
! 15 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,9) with color pink
  [011]: a point at (0,3) with color yellow
  [0111]: a point at (7,9) with color red
diff: 
delta: (4,0)=3  (6,0)=2  (9,3)=7#
   (111.0 bits)
data: a background with size (10,10) and color black and layers
  [00]: a point at (3,3) with color yellow
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,9) with color pink
  [011]: a point at (0,3) with color yellow
  [0111]: a point at (7,9) with color red
  [01111]: a point at (4,0) with color green
  [011111]: a point at (6,0) with color red
diff: 
delta: (3,5)=6  (4,3)=3  (6,3)=2  (7,3)=7# (7,5)=2  (9,3)=7#
   (141.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,9) with color pink
  [011]: a point at (0,3) with color yellow
  [0111]: a point at (4,0) with color green
diff: 
delta: (6,0)=2  (7,9)=2  (9,3)=7#
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,9) with color pink
  [011]: a point at (0,3) with color yellow
  [0111]: a point at (6,0) with color red
diff: 
delta: (4,0)=3  (7,9)=2  (9,3)=7#
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color cyan and mask full
  [01]: a point at (3,9) with color pink
  [011]: a point at (0,3) with color yellow
  [0111]: a point at (7,9) with color red
diff: 
delta: (4,0)=3  (6,0)=2  (9,3)=7#
! 16 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (4,4) and color cyan and mask full
  [01]: a point at (0,3) with color pink
  [011]: a point at (0,5) with color red
  [0111]: a point at (3,0) with color brown
diff: 
delta: (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (4,4) and color cyan and mask full
  [01]: a point at (0,3) with color pink
  [011]: a point at (0,5) with color red
  [0111]: a point at (4,9) with color orange
diff: 
delta: (3,0)=9# (5,0)=3  (6,0)=4  (9,4)=6 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (4,4) and color cyan and mask full
  [01]: a point at (0,3) with color pink
  [011]: a point at (0,5) with color red
  [0111]: a point at (5,0) with color green
diff: 
delta: (3,0)=9# (4,9)=7# (6,0)=4  (9,4)=6 
! 16 wrong pixels (generated / expected)

TEST 1f642eb9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2750.9 bits (2750.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-365] Checking task 1f85a75f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 32528.6 = 32537.5
DL output with Mo: L = 9.0 + 1368.4 = 1377.3
DL input+output M: L = 17.9 + 33896.9 = 33914.9

# learning a model for train pairs
33914.9	
31106.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30749.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
30479.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30192.1	OUT DEF: layer[0].mask={layer[0].mask}
29931.5	OUT DEF: layer[0].size={layer[0].size}
29671.9	OUT DEF: size={layer[0].size}
29431.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
29339.3	OUT DEF: layer[0].color={layer[0].color}
29255.6	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
29014.9	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 28712.2 = 28804.4
DL output with Mo: L = 31.2 + 179.2 = 210.5
DL input+output M: L = 123.4 + 28891.5 = 29014.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (10,17) with size (5,3) and color green and mask 110111101111011
  [01]: a rectangle at (4,12) with size (1,2) and color blue and mask full
  [011]: a rectangle at (11,13) with size (1,2) and color blue and mask full
  [0111]: a rectangle at (27,7) with size (1,2) and color blue and mask full
  [01111]: a rectangle at (3,8) with size (2,1) and color grey and mask full
diff: 
delta: (0,0)=1  (0,5)=1  (0,22)=5# (1,15)=5# (2,10)=5# (2,26)=1  (3,15)=5# (3,22)=1  (4,3)=5# (4,4)=1  (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,4)=5# (6,7)=1  (7,4)=5# (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,0)=5# (11,2)=5# (11,5)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,20)=1  (25,22)=1  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
   (1946.8 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color green and mask 110111101111011
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (10,17) with size (5,3) and color green and mask 110111101111011
  [01]: a rectangle at (4,12) with size (1,2) and color blue and mask full
  [011]: a rectangle at (11,13) with size (1,2) and color blue and mask full
  [0111]: a rectangle at (27,7) with size (1,2) and color blue and mask full
  [01111]: a rectangle at (3,8) with size (2,1) and color grey and mask full
diff: 
delta: (0,0)=1  (0,5)=1  (0,22)=5# (1,15)=5# (2,10)=5# (2,26)=1  (3,15)=5# (3,22)=1  (4,3)=5# (4,4)=1  (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,4)=5# (6,7)=1  (7,4)=5# (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,0)=5# (11,2)=5# (11,5)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,20)=1  (25,22)=1  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
correct output grid

TRAIN 1f85a75f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (9,11) with size (3,3) and color yellow and mask 110111010
  [01]: a rectangle at (2,7) with size (8,1) and color red and mask full
  [011]: a rectangle at (0,10) with size (1,2) and color red and mask full
  [0111]: a rectangle at (27,17) with size (1,2) and color red and mask full
  [01111]: a rectangle at (2,0) with size (2,1) and color red and mask full
diff: 
delta: (0,23)=2  (1,6)=2  (2,10)=2  (3,2)=2  (3,27)=2  (4,7)=0  (4,13)=2  (5,2)=2  (7,7)=0  (7,20)=2  (7,27)=2  (8,7)=0  (8,20)=2  (9,23)=2  (10,22)=2  (11,3)=2  (12,6)=2  (12,29)=2  (13,29)=2  (14,8)=2  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,21)=2  (28,27)=2 
   (924.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 110111010
diff: 
delta:
   (8.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (9,11) with size (3,3) and color yellow and mask 110111010
  [01]: a rectangle at (2,7) with size (8,1) and color red and mask full
  [011]: a rectangle at (0,10) with size (1,2) and color red and mask full
  [0111]: a rectangle at (27,17) with size (1,2) and color red and mask full
  [01111]: a rectangle at (2,0) with size (2,1) and color red and mask full
diff: 
delta: (0,23)=2  (1,6)=2  (2,10)=2  (3,2)=2  (3,27)=2  (4,7)=0  (4,13)=2  (5,2)=2  (7,7)=0  (7,20)=2  (7,27)=2  (8,7)=0  (8,20)=2  (9,23)=2  (10,22)=2  (11,3)=2  (12,6)=2  (12,29)=2  (13,29)=2  (14,8)=2  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,21)=2  (28,27)=2 
correct output grid

TRAIN 1f85a75f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (12,19) with size (4,4) and color red and mask 1110101110111110
  [01]: a rectangle at (0,19) with size (3,3) and color cyan and mask 111010100
  [011]: a rectangle at (23,10) with size (2,4) and color blue and mask 11100001
  [0111]: a rectangle at (11,10) with size (2,3) and color green and mask 101010
  [01111]: a rectangle at (6,22) with size (3,1) and color cyan and mask full
diff: 
delta: (0,2)=1  (0,4)=3  (0,6)=8  (0,19)=3  (1,2)=8  (1,3)=3  (1,17)=8  (1,27)=1  (1,28)=1  (2,0)=1  (2,22)=1  (2,23)=3  (3,2)=8  (3,9)=8  (3,12)=1  (3,16)=8  (3,20)=3  (3,23)=3  (3,29)=8  (4,0)=1  (4,16)=3  (4,23)=1  (4,24)=8  (4,26)=8  (4,29)=3  (5,17)=8  (5,29)=8  (6,1)=8  (6,3)=1  (6,8)=1  (6,9)=1  (6,26)=8  (6,27)=8  (6,29)=3  (7,3)=1  (7,4)=8  (7,18)=3  (7,19)=1  (8,11)=1  (8,16)=8  (8,18)=3  (8,25)=3  (10,5)=1  (10,20)=8  (11,1)=1  (11,2)=8  (11,5)=3  (11,10)=8  (11,17)=8  (12,3)=1  (12,6)=1  (13,2)=1  (13,10)=8  (13,26)=1  (14,8)=1  (15,3)=3  (15,12)=1  (15,17)=3  (15,24)=8  (15,25)=3  (16,0)=1  (16,13)=3  (16,15)=8  (17,10)=1  (17,11)=1  (18,4)=8  (18,9)=3  (18,17)=8  (19,2)=8  (19,8)=3  (19,17)=8  (19,18)=3  (19,22)=3  (19,29)=3  (20,17)=1  (20,19)=3  (21,8)=3  (21,17)=1  (21,25)=1  (22,6)=8  (22,12)=3  (22,14)=1  (22,29)=3  (23,14)=3  (23,16)=3  (23,18)=1  (23,21)=3  (23,26)=8  (24,6)=8  (24,8)=8  (24,17)=8  (24,25)=1  (25,1)=8  (25,12)=8  (25,16)=8  (25,20)=1  (25,23)=8  (25,25)=3  (25,27)=3  (26,2)=1  (26,5)=3  (26,7)=1  (27,5)=3  (27,14)=1  (27,17)=8  (27,19)=3  (27,20)=1  (27,22)=1  (28,16)=3  (28,21)=3  (29,2)=8  (29,7)=8  (29,17)=3  (29,21)=3  (29,29)=3 
correct output grid

TEST 1f85a75f.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 179.2 bits (179.2 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-364] Checking task 1f876c06.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4670.9 = 4679.8
DL output with Mo: L = 9.0 + 9656.6 = 9665.6
DL input+output M: L = 17.9 + 14327.5 = 14345.4

# learning a model for train pairs
14345.4	
13374.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12440.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11644.9	OUT DEF: layer[01].mask=1000001000001000001000001
10914.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10335.9	OUT DEF: size={size}
10266.2	IN  SHAPE at layer[0]: a point at ? with color ?
9947.0	OUT DEF: layer[0].pos={layer[0].pos}
9746.2	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
9606.2	OUT DEF: layer[0].color={layer[0].color}
9535.1	IN  SHAPE at layer[00]: a point at ? with color ?
9396.0	OUT DEF: layer[011].color={layer[00].color}
9322.2	IN  SHAPE at layer[01]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask 1000001000001000001000001
  [011]: a rectangle at ? with size ? and color {layer[00].color} and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 39.9 + 4422.4 = 4462.2
DL output with Mo: L = 100.4 + 4759.6 = 4860.0
DL input+output M: L = 140.3 + 9181.9 = 9322.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,2) with color red
  [0]: a point at (0,5) with color pink
  [01]: a point at (2,0) with color red
diff: 
delta: (4,9)=6  (5,3)=4  (9,7)=4 
   (123.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,5) with size (5,5) and color pink and mask 1000001000001000001000001
  [01]: a rectangle at (5,3) with size (5,5) and color yellow and mask 1000001000001000001000001
  [011]: a rectangle at (0,2) with size (1,1) and color red and mask full
  [0111]: a rectangle at (0,0) with size (3,3) and color red and mask 1010100
diff: 
delta:
   (132.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,2) with color red
  [0]: a point at (0,5) with color pink
  [01]: a point at (2,0) with color red
diff: 
delta: (4,9)=6  (5,3)=4  (9,7)=4 
! 16 wrong pixels (generated / expected)

TRAIN 1f876c06.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,0) with color brown
  [0]: a point at (0,7) with color green
  [01]: a point at (2,6) with color cyan
diff: 
delta: (2,9)=3  (3,3)=9# (5,5)=7# (7,1)=8  (9,9)=7#
   (159.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,7) with size (3,3) and color green and mask 100010001
  [01]: a rectangle at (5,5) with size (5,5) and color orange and mask 1000001000001000001000001
  [011]: a rectangle at (0,0) with size (4,4) and color brown and mask 1000010000100001
  [0111]: a rectangle at (2,1) with size (6,6) and color cyan and mask 1100010010100001000010100100010
diff: 
delta:
   (168.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,0) with color brown
  [0]: a point at (0,7) with color green
  [01]: a point at (2,6) with color cyan
diff: 
delta: (2,9)=3  (3,3)=9# (5,5)=7# (7,1)=8  (9,9)=7#
! 20 wrong pixels (generated / expected)

TRAIN 1f876c06.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color pink
  [0]: a point at (0,5) with color cyan
  [01]: a point at (2,2) with color yellow
diff: 
delta: (3,0)=6  (4,9)=8  (5,4)=9# (6,6)=4  (9,0)=9#
   (159.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,5) with size (5,5) and color cyan and mask 1000001000001000001000001
  [01]: a rectangle at (2,2) with size (5,5) and color yellow and mask 1000001000001000001000001
  [011]: a rectangle at (0,0) with size (4,4) and color pink and mask 1001011001001000
  [0111]: a rectangle at (5,0) with size (5,5) and color brown and mask 100010001000100010000
diff: 
delta:
   (175.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color pink
  [0]: a point at (0,5) with color cyan
  [01]: a point at (2,2) with color yellow
diff: 
delta: (3,0)=6  (4,9)=8  (5,4)=9# (6,6)=4  (9,0)=9#
! 23 wrong pixels (generated / expected)

TRAIN 1f876c06.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,6) with color green
  [0]: a point at (0,9) with color brown
  [01]: a point at (1,0) with color orange
diff: 
delta: (3,3)=3  (3,6)=9# (4,0)=6  (5,9)=4  (7,3)=6  (7,6)=7# (9,5)=4 
! 27 wrong pixels (generated / expected)

TEST 1f876c06.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4759.6 bits (4759.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-363] Checking task 1fad071e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15749.4 = 15758.3
DL output with Mo: L = 9.0 + 1094.0 = 1103.0
DL input+output M: L = 17.9 + 16843.4 = 16861.3

# learning a model for train pairs
16861.3	
12050.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10780.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10200.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9258.4	IN  DEF: color=blue
9120.4	IN  DEF: layer[0].color=red
8728.2	IN  SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
8493.9	IN  DEF: color=blue
7987.5	IN  DEF: layer[01].color=black
7849.5	IN  DEF: layer[00].color=red
7711.5	IN  DEF: layer[011].color=red
7640.8	IN  DEF: layer[00].mask=full
7570.2	IN  DEF: layer[0].mask=full
7499.5	IN  DEF: layer[011].mask=full
7461.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7274.5	OUT DEF: layer[0].pos={layer[01].pos}
7136.4	OUT DEF: layer[0].color={color}
7065.8	OUT DEF: layer[0].mask=full
7020.2	OUT DEF: color=black
6985.2	OUT DEF: size=(?,?)
6779.8	OUT DEF: size.j=5
6709.2	OUT DEF: size.i=1
6674.2	OUT DEF: layer[0].size=(?,?)
6517.4	OUT DEF: layer[0].size.j={layer[0].pos.i - layer[011].pos.i}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (1,5) and color black and layers
  [0]: a rectangle at {layer[01].pos} with size (?,{layer[0].pos.i - layer[011].pos.i}) and color {color} and mask full
WHERE (Mi)
a background with size ? and color blue and layers
  [00]: a rectangle at ? with size ? and color red and mask full
  [0]: a rectangle at ? with size ? and color red and mask full
  [01]: a rectangle at ? with size ? and color black and mask ?
  [011]: a rectangle at ? with size ? and color red and mask full

DL input  with Mi: L = 83.0 + 6313.5 = 6396.5
DL output with Mo: L = 51.2 + 69.7 = 120.9
DL input+output M: L = 134.2 + 6383.2 = 6517.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,4) with size (2,2) and color red and mask full
  [0]: a rectangle at (4,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 11111101111111111110011111110011111111111110001111111001111001111111001011111111
  [011]: a rectangle at (2,7) with size (2,2) and color red and mask full
diff: 
delta:
   (191.7 bits)
data: a background with size (1,5) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color blue and mask full
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,4) with size (2,2) and color red and mask full
  [0]: a rectangle at (2,7) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 11111101111111111110011111110010011111110010111111111111111001111111001011111111
  [011]: a rectangle at (4,2) with size (2,2) and color red and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,4) with size (2,2) and color red and mask full
  [0]: a rectangle at (4,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 11111101111111111110011111110011111111111110001111111001111001111111001011111111
  [011]: a rectangle at (2,7) with size (2,2) and color red and mask full
diff: 
delta:
correct output grid

TRAIN 1fad071e.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (7,3) with size (2,2) and color red and mask full
  [0]: a rectangle at (4,4) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 100111101100111111111111111011111001111111001011111111110010111110011100011110100
  [011]: a rectangle at (0,3) with size (3,1) and color red and mask full
diff: 
delta: (0,8)=2  (5,8)=2 
   (228.6 bits)
data: a background with size (1,5) and color black and layers
  [0]: a rectangle at (0,0) with size (1,4) and color blue and mask full
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [0]: a rectangle at (4,4) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 100100101100100111111111111011111001111111001011111111110010111110011111011110111
  [011]: a rectangle at (7,3) with size (2,2) and color red and mask full
diff:   layer[00].color
delta: (0,3)=2  (0,8)=2  (2,3)=2  (5,8)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [0]: a rectangle at (7,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 100111101100111111111111111011001001111001001011111111110010111110011111011110111
  [011]: a rectangle at (4,4) with size (2,2) and color red and mask full
diff:   layer[00].color
delta: (0,3)=2  (0,8)=2  (2,3)=2  (5,8)=2 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [0]: a rectangle at (4,4) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 100100101100100111111111111011111001111111001011111111110010111110011111011110111
  [011]: a rectangle at (0,3) with size (3,1) and color red and mask full
diff:   layer[00].color
delta: (0,8)=2  (5,8)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
correct output grid

TRAIN 1fad071e.json/2: 1 3rd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,0) with size (2,2) and color red and mask full
  [0]: a rectangle at (7,7) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 111011001111111001111101111111001111101001001111111001001111110001100111111100111
  [011]: a rectangle at (3,1) with size (2,2) and color red and mask full
diff: 
delta: (6,4)=2 
   (211.0 bits)
data: a background with size (1,5) and color black and layers
  [0]: a rectangle at (0,0) with size (1,4) and color blue and mask full
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,0) with size (2,2) and color red and mask full
  [0]: a rectangle at (3,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 1011001001111001111101111111001111101001111111111111001111110001100111111100111
  [011]: a rectangle at (7,7) with size (2,2) and color red and mask full
diff: 
delta: (6,4)=2 
! 4 wrong pixels (generated / expected)

TRAIN 1fad071e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color blue and layers
  [00]: a rectangle at (0,5) with size (2,2) and color red and mask full
  [0]: a rectangle at (4,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 111100100100100100100111110111111111110011111110011111111111100111110100011111111
  [011]: a rectangle at (6,6) with size (2,2) and color red and mask full
diff: 
delta: (7,0)=2  (7,1)=2  (8,0)=2  (8,1)=2 
! 3 wrong pixels (generated / expected)

TEST 1fad071e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 69.7 bits (69.7 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.28
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-362] Checking task 2013d3e2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8328.1 = 8337.1
DL output with Mo: L = 9.0 + 1934.3 = 1943.2
DL input+output M: L = 17.9 + 10262.4 = 10280.4

# learning a model for train pairs
10280.4	
8922.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8401.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7931.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7752.7	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7509.2	OUT DEF: size={layer[0].pos}
7461.8	IN  DEF: layer[01].mask=full
7416.2	IN  SHAPE at layer[01111]: a point at ? with color ?
7368.4	IN  SHAPE at layer[01110]: a point at ? with color ?
7276.9	IN  DEF: layer[01110].color=pink
7103.4	IN  SHAPE at layer[011111]: a rectangle at ? with size ? and color ? and mask ?
7056.0	IN  DEF: layer[011].mask=full
6964.4	IN  DEF: layer[01111].color=pink
6917.0	IN  DEF: layer[0111].mask=full
6869.5	IN  DEF: layer[011111].mask=full
6824.3	OUT SHAPE at layer[0]: a point at ? with color ?
6732.8	OUT DEF: layer[0].color=pink
6684.8	OUT SHAPE at layer[01]: a point at ? with color ?
6593.7	OUT DEF: layer[01].color={layer[011].color}
6542.3	OUT SHAPE at layer[011]: a point at ? with color ?
6451.1	OUT DEF: layer[011].color={layer[0111].color}
6394.3	OUT SHAPE at layer[0111]: a point at ? with color ?
6303.2	OUT DEF: layer[0111].color={layer[0].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].pos} and color ? and layers
  [0]: a point at ? with color pink
  [01]: a point at ? with color {layer[011].color}
  [011]: a point at ? with color {layer[0111].color}
  [0111]: a point at ? with color {layer[0].color}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full
  [01110]: a point at ? with color pink
  [0111]: a rectangle at ? with size ? and color ? and mask full
  [01111]: a point at ? with color pink
  [011111]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 109.6 + 5059.8 = 5169.4
DL output with Mo: L = 59.0 + 1074.8 = 1133.8
DL input+output M: L = 168.6 + 6134.6 = 6303.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (4,4) and color cyan and mask 110100110010110
  [01]: a rectangle at (4,4) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (4,2) with size (2,6) and color orange and mask full
  [01110]: a point at (3,3) with color pink
  [0111]: a rectangle at (2,4) with size (6,2) and color orange and mask full
  [01111]: a point at (3,6) with color pink
  [011111]: a rectangle at (6,3) with size (1,4) and color pink and mask full
diff: 
delta:
   (196.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color pink
  [01]: a point at (0,2) with color orange
  [011]: a point at (2,0) with color orange
  [0111]: a point at (1,2) with color cyan
diff: 
delta: (2,1)=8  (2,2)=4 
   (61.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (4,4) and color cyan and mask 110100110010110
  [01]: a rectangle at (4,4) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (4,2) with size (2,6) and color orange and mask full
  [01110]: a point at (3,3) with color pink
  [0111]: a rectangle at (2,4) with size (6,2) and color orange and mask full
  [01111]: a point at (3,6) with color pink
  [011111]: a rectangle at (6,3) with size (1,4) and color pink and mask full
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 2013d3e2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color blue and mask full
  [011]: a rectangle at (1,6) with size (1,1) and color blue and mask full
  [01110]: a point at (2,3) with color pink
  [0111]: a rectangle at (2,2) with size (1,4) and color green and mask full
  [01111]: a point at (5,4) with color pink
  [011111]: a rectangle at (5,2) with size (1,4) and color green and mask full
diff: 
delta: (2,4)=5# (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,3)=5# (6,1)=1  (6,6)=1 
   (309.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,2) with color pink
  [01]: a point at (0,0) with color blue
  [011]: a point at (1,1) with color green
  [0111]: a point at (2,2) with color red
diff: 
delta: (2,1)=5#
   (46.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color blue and mask full
  [011]: a rectangle at (1,6) with size (1,1) and color blue and mask full
  [01110]: a point at (2,2) with color green
  [0111]: a rectangle at (2,3) with size (1,1) and color pink and mask full
  [01111]: a point at (3,5) with color pink
  [011111]: a rectangle at (2,5) with size (4,1) and color green and mask full
diff:   layer[01110].color
delta: (2,4)=5# (3,2)=5# (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (6,1)=1  (6,6)=1 
! 5 wrong pixels (generated / expected)

TRAIN 2013d3e2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):

TEST 2013d3e2.json/1: 0 - (ERROR)

# Performance measures on task
bits-train-error = 1074.8 bits (1074.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-361] Checking task 2204b7a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13908.0 = 13916.9
DL output with Mo: L = 9.0 + 13908.0 = 13916.9
DL input+output M: L = 17.9 + 27815.9 = 27833.9

# learning a model for train pairs
27833.9	
23441.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19001.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14608.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10168.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9250.0	OUT DEF: layer[0]={layer[0]}
8331.6	OUT DEF: layer[01]={layer[01]}
7753.8	OUT DEF: size={size}
7675.9	OUT SHAPE at layer[011]: a point at ? with color ?
7536.8	OUT DEF: layer[011].color={layer[0].color}
7453.4	OUT SHAPE at layer[0111]: a point at ? with color ?
7314.3	OUT DEF: layer[0111].color={layer[0].color}
7219.4	OUT SHAPE at layer[01111]: a point at ? with color ?
7080.3	OUT DEF: layer[01111].color={layer[01].color}
7004.8	IN  SHAPE at layer[010]: a point at ? with color ?
6687.3	OUT DEF: layer[011].pos={layer[010].pos}
6549.3	IN  DEF: layer[010].color=green
6468.0	IN  SHAPE at layer[0101]: a point at ? with color ?
6150.8	OUT DEF: layer[01111].pos={layer[0101].pos}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a point at {layer[010].pos} with color {layer[0].color}
  [0111]: a point at ? with color {layer[0].color}
  [01111]: a point at {layer[0101].pos} with color {layer[01].color}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [010]: a point at ? with color green
  [0101]: a point at ? with color ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 64.1 + 4720.8 = 4784.9
DL output with Mo: L = 53.4 + 1312.5 = 1365.9
DL input+output M: L = 117.5 + 6033.3 = 6150.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color blue and mask full
  [010]: a point at (4,4) with color green
  [0101]: a point at (1,6) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color red and mask full
diff: 
delta: (6,2)=3 
   (126.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color blue and mask full
  [01]: a rectangle at (0,9) with size (10,1) and color red and mask full
  [011]: a point at (4,4) with color blue
  [0111]: a point at (6,2) with color blue
  [01111]: a point at (1,6) with color red
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color blue and mask full
  [010]: a point at (1,6) with color green
  [0101]: a point at (4,4) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color red and mask full
diff: 
delta: (6,2)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color blue and mask full
  [010]: a point at (1,6) with color green
  [0101]: a point at (6,2) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color red and mask full
diff: 
delta: (4,4)=3 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color blue and mask full
  [010]: a point at (4,4) with color green
  [0101]: a point at (1,6) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color red and mask full
diff: 
delta: (6,2)=3 
! 1 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color yellow and mask full
  [010]: a point at (2,1) with color green
  [0101]: a point at (6,4) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color orange and mask full
diff: 
delta: (2,7)=3  (3,3)=3  (7,8)=3 
   (163.7 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color yellow and mask full
  [01]: a rectangle at (9,0) with size (1,10) and color orange and mask full
  [011]: a point at (2,1) with color yellow
  [0111]: a point at (2,7) with color yellow
  [01111]: a point at (6,4) with color orange
diff: 
delta: (3,3)=4  (7,8)=7#
   (50.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color yellow and mask full
  [010]: a point at (2,1) with color green
  [0101]: a point at (2,7) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color orange and mask full
diff: 
delta: (3,3)=3  (6,4)=3  (7,8)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color yellow and mask full
  [010]: a point at (2,1) with color green
  [0101]: a point at (3,3) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color orange and mask full
diff: 
delta: (2,7)=3  (6,4)=3  (7,8)=3 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color yellow and mask full
  [010]: a point at (2,1) with color green
  [0101]: a point at (6,4) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color orange and mask full
diff: 
delta: (2,7)=3  (3,3)=3  (7,8)=3 
! 3 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color cyan and mask full
  [010]: a point at (2,4) with color green
  [0101]: a point at (6,1) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color brown and mask full
diff: 
delta: (3,1)=3  (3,7)=3  (6,6)=3  (7,3)=3 
   (181.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color cyan and mask full
  [01]: a rectangle at (9,0) with size (1,10) and color brown and mask full
  [011]: a point at (2,4) with color cyan
  [0111]: a point at (3,1) with color cyan
  [01111]: a point at (6,1) with color brown
diff: 
delta: (3,7)=8  (6,6)=9# (7,3)=9#
   (68.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color cyan and mask full
  [010]: a point at (2,4) with color green
  [0101]: a point at (3,1) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color brown and mask full
diff: 
delta: (3,7)=3  (6,1)=3  (6,6)=3  (7,3)=3 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color cyan and mask full
  [010]: a point at (2,4) with color green
  [0101]: a point at (3,7) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color brown and mask full
diff: 
delta: (3,1)=3  (6,1)=3  (6,6)=3  (7,3)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,10) and color cyan and mask full
  [010]: a point at (2,4) with color green
  [0101]: a point at (6,1) with color green
  [01]: a rectangle at (9,0) with size (1,10) and color brown and mask full
diff: 
delta: (3,1)=3  (3,7)=3  (6,6)=3  (7,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color grey and mask full
  [010]: a point at (0,1) with color green
  [0101]: a point at (1,5) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color yellow and mask full
diff: 
delta: (1,8)=3  (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color grey and mask full
  [010]: a point at (0,1) with color green
  [0101]: a point at (1,8) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color yellow and mask full
diff: 
delta: (1,5)=3  (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color grey and mask full
  [010]: a point at (0,1) with color green
  [0101]: a point at (3,3) with color green
  [01]: a rectangle at (0,9) with size (10,1) and color yellow and mask full
diff: 
delta: (1,5)=3  (1,8)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 8 wrong pixels (generated / expected)

TEST 2204b7a8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1312.5 bits (1312.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-360] Checking task 22168020.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8590.4 = 8599.4
DL output with Mo: L = 9.0 + 16028.0 = 16037.0
DL input+output M: L = 17.9 + 24618.5 = 24636.4

# learning a model for train pairs
24636.4	
16375.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12744.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9782.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8230.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7652.5	OUT DEF: size={size}
7169.2	OUT DEF: layer[01].size={layer[01].size}
6851.0	OUT DEF: layer[0].pos={layer[0].pos}
6532.7	OUT DEF: layer[01].pos={layer[01].pos}
6393.3	OUT DEF: layer[0].color={layer[0].color}
6253.8	OUT DEF: layer[01].color={layer[01].color}
6208.2	OUT DEF: color=black
6162.6	IN  DEF: color=black
6127.6	OUT DEF: layer[0].size=(?,?)
5978.8	OUT DEF: layer[0].size.i={layer[0].size.i}
5943.7	IN  DEF: size=(?,?)
5680.4	IN  DEF: size.i=10
5417.1	IN  DEF: size.j=10
5382.1	IN  DEF: layer[0].pos=(?,?)
5347.1	IN  DEF: layer[0].size=(?,?)
5312.0	IN  DEF: layer[01].pos=(?,?)
5277.0	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i},?) and color {layer[0].color} and mask ?
  [01]: a rectangle at {layer[01].pos} with size {layer[01].size} and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 76.0 + 3261.8 = 3337.8
DL output with Mo: L = 46.8 + 1892.4 = 1939.2
DL input+output M: L = 122.8 + 5154.2 = 5277.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (5,8) and color green and mask 1100000011000001001000100001010000001
diff: 
delta:
   (92.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (1,8) and color green and mask full
  [01]: a rectangle at (1,1) with size (5,8) and color green and mask 1100000011000001111000111111011111111
diff: 
delta:
   (53.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (5,8) and color green and mask 1100000011000001001000100001010000001
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,8) with size (1,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (5,8) and color green and mask 1100000011000001001000100001010000001
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 22168020.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,6) and color blue and mask 1100001100010010100001
  [01]: a rectangle at (6,4) with size (4,6) and color yellow and mask 1100001100010010100001
diff: 
delta:
   (108.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,6) and color blue and mask 1100001100011110111111
  [01]: a rectangle at (6,4) with size (4,6) and color yellow and mask 1100001100011110111111
diff: 
delta:
   (60.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,6) and color blue and mask 1100001100010010100001
  [01]: a rectangle at (6,4) with size (4,6) and color yellow and mask 1100001100010010100001
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (4,6) and color yellow and mask 1100001100010010100001
  [01]: a rectangle at (2,0) with size (4,6) and color blue and mask 1100001100010010100001
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,6) and color blue and mask 1100001100010010100001
  [01]: a rectangle at (8,6) with size (2,2) and color yellow and mask full
diff: 
delta: (6,4)=4  (6,9)=4  (7,5)=4  (7,8)=4 
! 26 wrong pixels (generated / expected)

TRAIN 22168020.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,6) and color pink and mask 1100001100010010100001
  [01]: a rectangle at (5,1) with size (5,8) and color cyan and mask 1100000011000001001000100001010000001
diff: 
delta:
   (125.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,6) and color pink and mask 1100001100011110111111
  [01]: a rectangle at (5,1) with size (5,8) and color cyan and mask 1100000011000001111000111111011111111
diff: 
delta:
   (76.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,1) with size (5,8) and color cyan and mask 1100000011000001001000100001010000001
  [01]: a rectangle at (0,0) with size (4,6) and color pink and mask 1100001100010010100001
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,6) and color pink and mask 1100001100010010100001
  [01]: a rectangle at (5,1) with size (5,8) and color cyan and mask 1100000011000001001000100001010000001
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,1) with size (5,8) and color cyan and mask 1100000011000001001000100001010000001
  [01]: a rectangle at (2,2) with size (2,2) and color pink and mask full
diff: 
delta: (0,0)=6  (0,5)=6  (1,1)=6  (1,4)=6 
! 36 wrong pixels (generated / expected)

TRAIN 22168020.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,4) with size (4,6) and color orange and mask 1100001100010010100001
  [01]: a rectangle at (6,1) with size (4,6) and color green and mask 1100001100010010100001
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,1) with size (4,6) and color green and mask 1100001100010010100001
  [01]: a rectangle at (2,4) with size (4,6) and color orange and mask 1100001100010010100001
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,4) with size (4,6) and color orange and mask 1100001100010010100001
  [01]: a rectangle at (1,0) with size (3,4) and color yellow and mask 11001101001
diff: 
delta: (6,1)=3  (6,6)=3  (7,2)=3  (7,5)=3  (8,3)=3  (8,4)=3  (9,3)=3  (9,4)=3 
! 34 wrong pixels (generated / expected)

TEST 22168020.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1892.4 bits (1892.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-359] Checking task 22233c11.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3223.4 = 3232.4
DL output with Mo: L = 9.0 + 5378.9 = 5387.9
DL input+output M: L = 17.9 + 8602.4 = 8620.3

# learning a model for train pairs
8620.3	
7525.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6496.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5376.2	OUT DEF: layer[0]={layer[0]}
4798.0	OUT DEF: size={size}
4364.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4226.9	IN  DEF: layer[0].color=green
4181.3	OUT DEF: color=black
4135.6	IN  DEF: color=black
4098.7	OUT DEF: layer[01].color=cyan
4024.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
3954.1	OUT DEF: layer[01].mask=full
3908.5	OUT DEF: color=black
3873.5	OUT DEF: layer[01].pos=(?,?)
3737.1	OUT DEF: layer[01].pos.j=5
3701.3	OUT DEF: layer[011].color=cyan
3630.6	OUT DEF: layer[011].mask=full
3595.6	OUT DEF: layer[01].size=(?,?)
3560.6	OUT DEF: layer[011].pos=(?,?)
3427.5	OUT DEF: layer[011].pos.j={layer[0].pos.j - 1}
3392.5	OUT DEF: layer[011].size=(?,?)
3321.8	OUT DEF: layer[011].size.j=1
3286.8	IN  DEF: size=(?,?)
3023.5	IN  DEF: size.i=10
2760.2	IN  DEF: size.j=10
2725.2	IN  DEF: layer[0].pos=(?,?)
2587.2	IN  DEF: layer[0].pos.i=3
2552.2	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,5) with size (?,?) and color cyan and mask full
  [011]: a rectangle at (?,{layer[0].pos.j - 1}) with size (?,1) and color cyan and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,?) with size (?,?) and color green and mask ?

DL input  with Mi: L = 52.6 + 1131.5 = 1184.1
DL output with Mo: L = 71.0 + 1297.1 = 1368.1
DL input+output M: L = 123.6 + 2428.6 = 2552.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (2,2) and color green and mask 1001
diff: 
delta: (6,7)=3  (7,6)=3 
   (57.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (2,2) and color green and mask 1001
  [01]: a rectangle at (5,5) with size (1,1) and color cyan and mask full
  [011]: a rectangle at (5,1) with size (1,1) and color cyan and mask full
diff: 
delta: (2,4)=8  (6,7)=3  (7,6)=3  (8,8)=8 
   (91.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (2,2) and color green and mask 1001
diff: 
delta: (6,7)=3  (7,6)=3 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (1,1) and color green and mask full
diff: 
delta: (4,3)=3  (6,7)=3  (7,6)=3 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,6) with size (2,2) and color green and mask 110
diff:   layer[0].pos.i
delta: (3,2)=3  (4,3)=3 
! 10 wrong pixels (generated / expected)

TRAIN 22233c11.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (4,4) and color green and mask 11001111001100
diff: 
delta:
   (35.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (4,4) and color green and mask 11001111001100
  [01]: a rectangle at (7,5) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (1,0) with size (2,1) and color cyan and mask full
diff: 
delta:
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (4,4) and color green and mask 11001111001100
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color green and mask full
diff: 
delta: (5,1)=3  (5,2)=3  (6,1)=3  (6,2)=3 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,1) with size (2,2) and color green and mask full
diff:   layer[0].pos.i
delta: (3,3)=3  (3,4)=3  (4,3)=3  (4,4)=3 
! 14 wrong pixels (generated / expected)

TRAIN 22233c11.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color green and mask 1001
diff: 
delta:
   (19.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color green and mask 1001
  [01]: a rectangle at (2,5) with size (1,1) and color cyan and mask full
  [011]: a rectangle at (5,2) with size (1,1) and color cyan and mask full
diff: 
delta:
   (16.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color green and mask 1001
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (1,1) and color green and mask full
diff: 
delta: (4,4)=3 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (1,1) and color green and mask full
diff:   layer[0].pos.i
delta: (3,3)=3 
! 9 wrong pixels (generated / expected)

TRAIN 22233c11.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (6,6) and color green and mask 111000111000111111000111000111000
diff:   layer[0].pos.i
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111110001111111000111111100011110001111111000111111100011111111111111111111111111
diff:   color  layer[0].color  layer[0].pos.i
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,6) with size (3,3) and color green and mask full
diff:   layer[0].pos.i
delta: (5,3)=3  (5,4)=3  (5,5)=3  (6,3)=3  (6,4)=3  (6,5)=3  (7,3)=3  (7,4)=3  (7,5)=3 
! 21 wrong pixels (generated / expected)

TEST 22233c11.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1297.1 bits (1297.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-358] Checking task 2281f1f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4490.3 = 4499.3
DL output with Mo: L = 9.0 + 11247.1 = 11256.1
DL input+output M: L = 17.9 + 15737.4 = 15755.4

# learning a model for train pairs
15755.4	
14981.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14317.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13738.7	OUT DEF: size={size}
13219.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12476.9	OUT DEF: layer[01].color=grey
12199.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11875.5	OUT DEF: layer[0].pos={layer[0].pos}
11603.4	OUT DEF: layer[0]={layer[0]}
11443.0	IN  SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
11305.0	IN  DEF: layer[00].color=grey
11167.0	IN  DEF: layer[0].color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color grey and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a rectangle at ? with size ? and color grey and mask ?
  [0]: a rectangle at ? with size ? and color grey and mask ?

DL input  with Mi: L = 46.0 + 3917.5 = 3963.5
DL output with Mo: L = 48.1 + 7155.5 = 7203.5
DL input+output M: L = 94.0 + 11073.0 = 11167.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [0]: a rectangle at (0,3) with size (1,1) and color grey and mask full
diff: 
delta: (0,7)=5# (3,9)=5# (7,9)=5#
   (115.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,3) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [011]: a rectangle at (0,7) with size (1,1) and color grey and mask full
diff: 
delta: (3,0)=2  (3,3)=2  (3,7)=2  (3,9)=5# (7,0)=2  (7,3)=2  (7,7)=2  (7,9)=5#
   (190.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [0]: a rectangle at (0,3) with size (1,1) and color grey and mask full
diff: 
delta: (0,7)=5# (3,9)=5# (7,9)=5#
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [0]: a rectangle at (0,7) with size (1,1) and color grey and mask full
diff: 
delta: (0,3)=5# (3,9)=5# (7,9)=5#
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [0]: a rectangle at (3,9) with size (1,1) and color grey and mask full
diff: 
delta: (0,3)=5# (0,7)=5# (7,9)=5#
! 12 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,3) with size (1,2) and color grey and mask full
  [0]: a rectangle at (2,9) with size (1,1) and color grey and mask full
diff: 
delta: (0,1)=5# (0,7)=5# (4,9)=5# (7,9)=5#
   (135.5 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (2,9) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,1) with size (1,7) and color grey and mask full
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111101011001011111111111111111111101011001011111111111110110010111111111111111111111
diff: 
delta: (0,2)=0  (0,5)=0  (0,6)=0  (4,9)=5# (7,9)=5#
   (262.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,3) with size (1,2) and color grey and mask full
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
diff: 
delta: (0,7)=5# (2,9)=5# (4,9)=5# (7,9)=5#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,3) with size (1,2) and color grey and mask full
  [0]: a rectangle at (0,7) with size (1,1) and color grey and mask full
diff: 
delta: (0,1)=5# (2,9)=5# (4,9)=5# (7,9)=5#
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,3) with size (1,2) and color grey and mask full
  [0]: a rectangle at (2,9) with size (1,1) and color grey and mask full
diff: 
delta: (0,1)=5# (0,7)=5# (4,9)=5# (7,9)=5#
! 20 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (2,9) with size (2,1) and color grey and mask full
  [0]: a rectangle at (0,2) with size (1,7) and color grey and mask full
diff: 
delta: (0,4)=0  (0,6)=0  (6,9)=5# (8,9)=5#
   (141.1 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,2) with size (1,7) and color grey and mask full
  [01]: a rectangle at (2,9) with size (7,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111100101001111111111111001010011111111111111111111111001010011100101001111111111111111111111
diff: 
delta: (0,4)=0  (0,6)=0  (4,9)=0  (5,9)=0  (7,9)=0 
   (262.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,2) with size (1,7) and color grey and mask full
  [0]: a rectangle at (2,9) with size (2,1) and color grey and mask full
diff: 
delta: (0,4)=0  (0,6)=0  (6,9)=5# (8,9)=5#
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (2,9) with size (2,1) and color grey and mask full
  [0]: a rectangle at (0,2) with size (1,7) and color grey and mask full
diff: 
delta: (0,4)=0  (0,6)=0  (6,9)=5# (8,9)=5#
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,2) with size (1,2) and color grey and mask full
  [0]: a rectangle at (0,7) with size (1,2) and color grey and mask full
diff: 
delta: (0,5)=5# (2,9)=5# (3,9)=5# (6,9)=5# (8,9)=5#
! 31 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (0,2) with size (1,2) and color grey and mask full
  [0]: a rectangle at (2,9) with size (2,1) and color grey and mask full
diff: 
delta: (0,0)=5# (0,6)=5# (0,8)=5# (5,9)=5# (7,9)=5# (9,9)=5#
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (2,9) with size (2,1) and color grey and mask full
  [0]: a rectangle at (0,2) with size (1,2) and color grey and mask full
diff: 
delta: (0,0)=5# (0,6)=5# (0,8)=5# (5,9)=5# (7,9)=5# (9,9)=5#
! 35 wrong pixels (generated / expected)

TEST 2281f1f4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7155.5 bits (7155.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-357] Checking task 228f6490.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27853.4 = 27862.4
DL output with Mo: L = 9.0 + 27853.4 = 27862.4
DL input+output M: L = 17.9 + 55706.9 = 55724.8

# learning a model for train pairs
55724.8	
46662.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
38300.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30790.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
23910.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21821.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
20011.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
18967.9	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 9411.9 = 9487.9
DL output with Mo: L = 59.8 + 9420.2 = 9480.0
DL input+output M: L = 135.8 + 18832.1 = 18967.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111111111110011100111111
  [01]: a rectangle at (7,5) with size (3,5) and color grey and mask 111111001111111
  [011]: a rectangle at (8,1) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (0,8) with size (1,2) and color orange and mask full
diff: 
delta: (0,0)=7# (2,7)=6  (2,8)=6  (5,8)=7# (7,4)=7#
   (271.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111111111110011100111111
  [01]: a rectangle at (7,5) with size (3,5) and color grey and mask full
  [011]: a rectangle at (2,2) with size (2,2) and color cyan and mask full
diff: 
delta: (0,0)=7# (0,8)=7# (0,9)=7# (5,8)=7# (7,4)=7# (8,7)=6  (8,8)=6 
   (266.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111111111110011100111111
  [01]: a rectangle at (7,5) with size (3,5) and color grey and mask 111111001111111
  [011]: a rectangle at (8,1) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (0,8) with size (1,2) and color orange and mask full
diff: 
delta: (0,0)=7# (2,7)=6  (2,8)=6  (5,8)=7# (7,4)=7#
! 47 wrong pixels (generated / expected)

TRAIN 228f6490.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,5) and color grey and mask 11111101111000111111
  [01]: a rectangle at (6,3) with size (4,6) and color grey and mask 111111100001100001111111
  [011]: a rectangle at (1,6) with size (2,4) and color brown and mask full
  [0111]: a rectangle at (8,0) with size (2,2) and color pink and mask full
diff: 
delta: (4,7)=6  (4,9)=6  (5,0)=3  (5,1)=3  (5,2)=3  (5,6)=6  (5,7)=6  (6,2)=3 
   (333.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,5) and color grey and mask full
  [01]: a rectangle at (7,4) with size (2,4) and color brown and mask full
  [011]: a rectangle at (6,3) with size (4,6) and color grey and mask full
diff: 
delta: (1,1)=3  (1,2)=3  (1,3)=3  (2,3)=3  (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6  (8,0)=6  (8,1)=6  (9,0)=6  (9,1)=6 
   (333.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,5) and color grey and mask 11111101111000111111
  [01]: a rectangle at (6,3) with size (4,6) and color grey and mask 111111100001100001111111
  [011]: a rectangle at (1,6) with size (2,4) and color brown and mask full
  [0111]: a rectangle at (8,0) with size (2,2) and color pink and mask full
diff: 
delta: (4,7)=6  (4,9)=6  (5,0)=3  (5,1)=3  (5,2)=3  (5,6)=6  (5,7)=6  (6,2)=3 
! 52 wrong pixels (generated / expected)

TRAIN 228f6490.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (5,5) and color grey and mask 1111110001110011111111111
  [01]: a rectangle at (0,4) with size (4,6) and color grey and mask 111111100111110001111111
  [011]: a rectangle at (0,0) with size (2,3) and color red and mask 111011
  [0111]: a rectangle at (8,6) with size (2,4) and color cyan and mask 11000111
diff: 
delta: (3,1)=4  (3,2)=4  (4,2)=4  (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
   (336.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (5,5) and color grey and mask full
  [01]: a rectangle at (1,5) with size (2,4) and color cyan and mask 11000111
  [011]: a rectangle at (0,4) with size (4,6) and color grey and mask full
diff: 
delta: (3,1)=4  (3,2)=4  (4,2)=4  (4,5)=4  (5,7)=4  (5,8)=4  (7,1)=2  (7,2)=2  (7,9)=4  (8,1)=2  (8,2)=2  (8,3)=2 
   (342.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (5,5) and color grey and mask 1111110001110011111111111
  [01]: a rectangle at (0,4) with size (4,6) and color grey and mask 111111100111110001111111
  [011]: a rectangle at (0,0) with size (2,3) and color red and mask 111011
  [0111]: a rectangle at (8,6) with size (2,4) and color cyan and mask 11000111
diff: 
delta: (3,1)=4  (3,2)=4  (4,2)=4  (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
! 60 wrong pixels (generated / expected)

TRAIN 228f6490.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,5) and color grey and mask 1111111111110111000111111
  [01]: a rectangle at (7,3) with size (3,7) and color grey and mask 111111111100011111111
  [011]: a rectangle at (5,0) with size (2,3) and color orange and mask 10111
  [0111]: a rectangle at (2,7) with size (1,3) and color yellow and mask full
diff: 
delta: (0,9)=2  (1,0)=2  (4,9)=2  (5,5)=2  (5,7)=2  (8,1)=2  (9,0)=2 
! 56 wrong pixels (generated / expected)

TEST 228f6490.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9420.2 bits (9420.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-356] Checking task 22eb0ac0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5386.9 = 5395.9
DL output with Mo: L = 9.0 + 9649.3 = 9658.3
DL input+output M: L = 17.9 + 15036.2 = 15054.2

# learning a model for train pairs
15054.2	
12177.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10824.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10245.3	OUT DEF: size={size}
10107.3	OUT DEF: layer[01].color=cyan
10033.3	OUT SHAPE at layer[011]: a point at ? with color ?
9956.3	OUT SHAPE at layer[0111]: a point at ? with color ?
9874.9	OUT SHAPE at layer[01111]: a point at ? with color ?
9786.4	OUT SHAPE at layer[011111]: a point at ? with color ?
9682.7	OUT SHAPE at layer[0111111]: a point at ? with color ?
9612.0	OUT DEF: layer[0].mask=full
9541.3	OUT DEF: layer[01].mask=full
9473.4	IN  SHAPE at layer[0]: a point at ? with color ?
9008.8	OUT DEF: layer[011]={layer[0]}
8869.1	OUT DEF: layer[0111111].color={layer[0].color}
8800.7	IN  SHAPE at layer[00]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color cyan and mask full
  [011]: {layer[0]}
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?
  [0111111]: a point at ? with color {layer[0].color}
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a point at ? with color ?

DL input  with Mi: L = 30.1 + 5227.3 = 5257.4
DL output with Mo: L = 83.8 + 3459.5 = 3543.3
DL input+output M: L = 113.9 + 8686.8 = 8800.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color brown
  [0]: a point at (1,9) with color pink
diff: 
delta: (3,0)=8  (3,9)=9# (5,0)=4  (5,9)=4  (7,0)=6  (7,9)=8 
   (162.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (1,10) and color yellow and mask full
  [01]: a rectangle at (3,0) with size (1,1) and color cyan and mask full
  [011]: a point at (1,9) with color pink
  [0111]: a point at (1,0) with color brown
  [01111]: a point at (3,9) with color brown
  [011111]: a point at (7,9) with color cyan
  [0111111]: a point at (7,0) with color pink
diff: 
delta:
   (102.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color brown
  [0]: a point at (1,9) with color pink
diff: 
delta: (3,0)=8  (3,9)=9# (5,0)=4  (5,9)=4  (7,0)=6  (7,9)=8 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color brown
  [0]: a point at (3,0) with color cyan
diff: 
delta: (1,9)=6  (3,9)=9# (5,0)=4  (5,9)=4  (7,0)=6  (7,9)=8 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color brown
  [0]: a point at (3,9) with color brown
diff: 
delta: (1,9)=6  (3,0)=8  (5,0)=4  (5,9)=4  (7,0)=6  (7,9)=8 
! 18 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color cyan
  [0]: a point at (3,0) with color yellow
diff: 
delta: (1,9)=8  (3,9)=2  (5,0)=3  (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
   (198.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,0) with size (1,10) and color blue and mask full
  [01]: a rectangle at (1,0) with size (1,10) and color cyan and mask full
  [011]: a point at (3,0) with color yellow
  [0111]: a point at (3,9) with color red
  [01111]: a point at (5,0) with color green
  [011111]: a point at (9,0) with color red
  [0111111]: a point at (5,9) with color yellow
diff: 
delta: (9,9)=3 
   (128.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color cyan
  [0]: a point at (1,9) with color cyan
diff: 
delta: (3,0)=4  (3,9)=2  (5,0)=3  (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color cyan
  [0]: a point at (3,0) with color yellow
diff: 
delta: (1,9)=8  (3,9)=2  (5,0)=3  (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color cyan
  [0]: a point at (3,9) with color red
diff: 
delta: (1,9)=8  (3,0)=4  (5,0)=3  (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
! 27 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a point at (3,0) with color green
diff: 
delta: (1,9)=8  (3,9)=4  (5,0)=5# (5,9)=3  (7,0)=8  (7,9)=2 
   (162.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color red and mask full
  [01]: a rectangle at (1,9) with size (1,1) and color cyan and mask full
  [011]: a point at (3,0) with color green
  [0111]: a point at (3,9) with color yellow
  [01111]: a point at (5,0) with color grey
  [011111]: a point at (7,0) with color cyan
  [0111111]: a point at (5,9) with color green
diff: 
delta: (7,9)=2 
   (115.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a point at (1,9) with color cyan
diff: 
delta: (3,0)=3  (3,9)=4  (5,0)=5# (5,9)=3  (7,0)=8  (7,9)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a point at (3,0) with color green
diff: 
delta: (1,9)=8  (3,9)=4  (5,0)=5# (5,9)=3  (7,0)=8  (7,9)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a point at (3,9) with color yellow
diff: 
delta: (1,9)=8  (3,0)=3  (5,0)=5# (5,9)=3  (7,0)=8  (7,9)=2 
! 10 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color yellow
  [0]: a point at (1,9) with color red
diff: 
delta: (3,0)=3  (3,9)=3  (5,0)=2  (5,9)=9# (7,0)=6  (7,9)=6  (9,0)=9# (9,9)=4 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color yellow
  [0]: a point at (3,0) with color green
diff: 
delta: (1,9)=2  (3,9)=3  (5,0)=2  (5,9)=9# (7,0)=6  (7,9)=6  (9,0)=9# (9,9)=4 
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,0) with color yellow
  [0]: a point at (3,9) with color green
diff: 
delta: (1,9)=2  (3,0)=3  (5,0)=2  (5,9)=9# (7,0)=6  (7,9)=6  (9,0)=9# (9,9)=4 
! 28 wrong pixels (generated / expected)

TEST 22eb0ac0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3459.5 bits (3459.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-355] Checking task 234bbc79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7660.1 = 7669.1
DL output with Mo: L = 9.0 + 7485.2 = 7494.2
DL input+output M: L = 17.9 + 15145.3 = 15163.2

# learning a model for train pairs
15163.2	
13337.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12229.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11419.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10983.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10636.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10422.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10236.8	OUT DEF: layer[0].color={layer[0].color}
10051.2	OUT DEF: layer[01].color={layer[01].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color {layer[01].color} and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 6148.8 = 6208.6
DL output with Mo: L = 60.3 + 3782.4 = 3842.7
DL input+output M: L = 120.1 + 9931.2 = 10051.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,9) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (1,7) with size (1,2) and color red and mask full
  [011]: a rectangle at (1,3) with size (2,2) and color grey and mask 1001
diff: 
delta: (0,1)=5# (1,4)=1  (1,6)=5#
   (144.9 bits)
data: a background with size (3,7) and color black and layers
  [0]: a rectangle at (1,4) with size (1,3) and color red and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [011]: a rectangle at (0,2) with size (2,2) and color blue and mask 1011
diff: 
delta:
   (90.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (1,7) with size (1,2) and color red and mask full
  [011]: a rectangle at (1,3) with size (2,2) and color grey and mask 1001
diff: 
delta: (0,1)=5# (1,4)=1  (1,6)=5#
! size mismatch, 10x10 instead of 3x7

TRAIN 234bbc79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,8) with size (2,3) and color green and mask 1111
  [01]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [011]: a rectangle at (0,3) with size (1,3) and color grey and mask full
diff: 
delta: (0,4)=1  (2,1)=5# (2,7)=5#
   (151.6 bits)
data: a background with size (3,9) and color black and layers
  [0]: a rectangle at (1,5) with size (2,4) and color green and mask 111110
  [01]: a rectangle at (1,0) with size (2,2) and color red and mask 1011
  [011]: a rectangle at (2,2) with size (1,3) and color blue and mask full
diff: 
delta:
   (97.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,8) with size (2,3) and color green and mask 1111
  [01]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [011]: a rectangle at (0,3) with size (1,3) and color grey and mask full
diff: 
delta: (0,4)=1  (2,1)=5# (2,7)=5#
! size mismatch, 10x10 instead of 3x9

TRAIN 234bbc79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (1,5) with size (1,2) and color cyan and mask full
  [011]: a rectangle at (2,9) with size (1,2) and color pink and mask full
diff: 
delta: (0,6)=5# (1,4)=5# (2,2)=5# (2,8)=5#
   (159.1 bits)
data: a background with size (3,9) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color red and mask 100111
  [01]: a rectangle at (1,3) with size (2,3) and color cyan and mask 111100
  [011]: a rectangle at (1,6) with size (1,3) and color pink and mask full
diff: 
delta:
   (98.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (1,5) with size (1,2) and color cyan and mask full
  [011]: a rectangle at (2,9) with size (1,2) and color pink and mask full
diff: 
delta: (0,6)=5# (1,4)=5# (2,2)=5# (2,8)=5#
! size mismatch, 10x10 instead of 3x9
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,5) with size (1,2) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color red and mask full
  [011]: a rectangle at (2,9) with size (1,2) and color pink and mask full
diff: 
delta: (0,6)=5# (1,4)=5# (2,2)=5# (2,8)=5#
! size mismatch, 10x10 instead of 3x9

TRAIN 234bbc79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
  [01]: a rectangle at (0,8) with size (2,2) and color red and mask 111
  [011]: a rectangle at (1,4) with size (2,2) and color grey and mask 1001
diff: 
delta: (0,2)=5# (1,5)=2  (1,7)=5#
   (159.3 bits)
data: a background with size (3,8) and color black and layers
  [0]: a rectangle at (0,1) with size (1,2) and color blue and mask full
  [01]: a rectangle at (0,3) with size (2,5) and color red and mask 111011011
  [011]: a rectangle at (1,0) with size (1,2) and color blue and mask full
diff: 
delta:
   (92.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
  [01]: a rectangle at (0,8) with size (2,2) and color red and mask 111
  [011]: a rectangle at (1,4) with size (2,2) and color grey and mask 1001
diff: 
delta: (0,2)=5# (1,5)=2  (1,7)=5#
! size mismatch, 10x10 instead of 3x8
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,8) with size (2,2) and color red and mask 111
  [01]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
  [011]: a rectangle at (1,4) with size (2,2) and color grey and mask 1001
diff: 
delta: (0,2)=5# (1,5)=2  (1,7)=5#
! size mismatch, 10x10 instead of 3x8

TRAIN 234bbc79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,4) with size (2,1) and color blue and mask full
  [011]: a rectangle at (0,10) with size (2,1) and color cyan and mask full
diff: 
delta: (0,1)=5# (0,3)=5# (0,7)=5# (0,9)=5# (1,6)=5# (1,7)=3  (2,4)=5#
! size mismatch, 10x10 instead of 3x8
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,4) with size (2,1) and color blue and mask full
  [01]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [011]: a rectangle at (0,10) with size (2,1) and color cyan and mask full
diff: 
delta: (0,1)=5# (0,3)=5# (0,7)=5# (0,9)=5# (1,6)=5# (1,7)=3  (2,4)=5#
! size mismatch, 10x10 instead of 3x8

TEST 234bbc79.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3782.4 bits (3782.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-354] Checking task 23581191.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1156.3 = 1165.3
DL output with Mo: L = 9.0 + 11657.6 = 11666.5
DL input+output M: L = 17.9 + 12813.9 = 12831.8

# learning a model for train pairs
12831.8	
10308.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7864.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6273.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5899.7	OUT DEF: size={size}
5708.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
5616.9	OUT DEF: layer[0].color=cyan
5525.3	OUT DEF: layer[01].color=orange
4114.9	OUT DEF: layer[0111].color=cyan
4023.4	OUT DEF: layer[011].color=orange
3963.0	OUT SHAPE at layer[0110]: a point at ? with color ?
3871.5	OUT DEF: layer[0110].color=red
3812.9	IN  SHAPE at layer[0]: a point at ? with color ?
3736.8	IN  SHAPE at layer[01]: a point at ? with color ?
3689.4	OUT DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color cyan and mask full
  [01]: a rectangle at ? with size ? and color orange and mask ?
  [0110]: a point at ? with color red
  [011]: a rectangle at ? with size ? and color orange and mask ?
  [0111]: a rectangle at ? with size ? and color cyan and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 30.1 + 1000.0 = 1030.1
DL output with Mo: L = 90.4 + 2568.9 = 2659.3
DL input+output M: L = 120.4 + 3569.0 = 3689.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,2) with color cyan
  [01]: a point at (6,6) with color orange
diff: 
delta:
   (50.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,0) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (0,6) with size (9,1) and color orange and mask full
  [0110]: a point at (6,2) with color red
  [011]: a rectangle at (6,0) with size (1,9) and color orange and mask full
  [0111]: a rectangle at (0,2) with size (9,1) and color cyan and mask full
diff: 
delta: (2,6)=2 
   (128.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (2,2) with color cyan
  [01]: a point at (6,6) with color orange
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 23581191.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,3) with color cyan
  [01]: a point at (7,6) with color orange
diff: 
delta:
   (50.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (0,6) with size (9,1) and color orange and mask full
  [0110]: a point at (7,3) with color red
  [011]: a rectangle at (7,0) with size (1,9) and color orange and mask full
  [0111]: a rectangle at (0,3) with size (9,1) and color cyan and mask full
diff: 
delta: (1,6)=2 
   (128.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,3) with color cyan
  [01]: a point at (7,6) with color orange
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 23581191.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,4) with color cyan
  [01]: a point at (6,1) with color orange
diff: 
delta:
! 32 wrong pixels (generated / expected)

TEST 23581191.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2568.9 bits (2568.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-353] Checking task 239be575.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 19508.2 = 19517.1
DL output with Mo: L = 9.0 + 640.7 = 649.6
DL input+output M: L = 17.9 + 20148.8 = 20166.8

# learning a model for train pairs
20166.8	
15878.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13391.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10799.0	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10559.6	IN  DEF: layer[01].color=red
10419.3	IN  DEF: layer[01].mask=full
10344.6	OUT DEF: size=(?,?)
10204.3	OUT DEF: size.i=1
10064.0	OUT DEF: size.j=1
9989.3	IN  DEF: size=(?,?)
9914.7	IN  DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color red and mask full
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 69.4 + 9550.9 = 9620.3
DL output with Mo: L = 11.6 + 282.7 = 294.3
DL input+output M: L = 81.0 + 9833.7 = 9914.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (5,5) and color black and mask 1110011111011111101101011
diff: 
delta:
   (120.5 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (5,5) and color black and mask 1110011111011111101101011
diff: 
delta:
correct output grid

TRAIN 239be575.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color cyan and mask 1001000100011011100
  [01]: a rectangle at (1,0) with size (2,2) and color red and mask full
  [011]: a rectangle at (2,5) with size (2,2) and color red and mask full
diff: 
delta: (0,1)=8 
   (128.9 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color cyan and mask 1001000100011011100
  [01]: a rectangle at (1,0) with size (2,2) and color red and mask full
  [011]: a rectangle at (2,5) with size (2,2) and color red and mask full
diff: 
delta: (0,1)=8 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,7) and color cyan and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (4,5) with size (2,2) and color red and mask full
  [011]: a rectangle at (1,0) with size (5,5) and color black and mask 1111000010110111100111111
diff: 
delta: (0,5)=0  (0,6)=0  (1,5)=0  (2,6)=0  (3,5)=0 
   (211.1 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color cyan and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (4,5) with size (2,2) and color red and mask full
  [011]: a rectangle at (1,0) with size (5,5) and color black and mask 1111000010110111100111111
diff: 
delta: (0,5)=0  (0,6)=0  (1,5)=0  (2,6)=0  (3,5)=0 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,7) and color cyan and layers
  [0]: a rectangle at (4,3) with size (2,2) and color cyan and mask 1110
  [01]: a rectangle at (4,1) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,7) and color black and mask 11111101111111111110101011100010011001100
diff: 
delta: (0,4)=2  (0,5)=2  (1,4)=2  (1,5)=2 
   (216.7 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,4) and color cyan and mask 100001100011
  [01]: a rectangle at (0,4) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,7) and color black and mask 10000101010011111110101111101111111111111
diff: 
delta: (4,1)=2  (4,2)=2  (5,1)=2  (5,2)=2 
correct output grid

TRAIN 239be575.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:
data: a background with size (6,7) and color cyan and layers
  [0]: a rectangle at (1,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (4,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,7) and color black and mask 101111001110111011011111111010111111011110
diff: 
delta:
   (142.8 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color cyan and layers
  [0]: a rectangle at (1,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (4,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,7) and color black and mask 101111001110111011011111111010111111011110
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (6,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (6,6) and color black and mask 101001011100101000101111100010000110
  [01]: a rectangle at (0,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,0) with size (2,2) and color red and mask full
diff: 
delta:
   (135.2 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color cyan and layers
  [0]: a rectangle at (0,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,0) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,6) and color black and mask 101001011111101011101111111010011110
diff: 
delta:
correct output grid

TRAIN 239be575.json/6: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color cyan and layers
  [0]: a rectangle at (2,0) with size (4,4) and color cyan and mask 100010111100011
  [01]: a rectangle at (0,0) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (8,6) and color black and mask 11101100110100111011111111111011111110111010011
diff: 
delta: (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2 
! 1 wrong pixels (generated / expected)

TEST 239be575.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color cyan and layers
  [0]: a rectangle at (1,1) with size (3,3) and color cyan and mask 1111100
  [01]: a rectangle at (1,4) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,0) with size (8,6) and color black and mask 100101111001011000110111011111111111111111111101
diff: 
delta: (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
correct output grid

TEST 239be575.json/2: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 282.7 bits (282.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.50 tasks (50.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.50

=====================================
[-352] Checking task 23b5c85d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 85410.1 = 85419.1
DL output with Mo: L = 9.0 + 975.1 = 984.0
DL input+output M: L = 17.9 + 86385.2 = 86403.1

# learning a model for train pairs
86403.1	
40997.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21751.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21634.4	IN  DEF: layer[0].mask=full
14127.5	IN  SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
13515.3	IN  DEF: layer[00].mask=full
12855.7	IN  DEF: color=black
12738.6	IN  DEF: layer[01].mask=full
12677.1	OUT DEF: size=(?,?)
12615.7	IN  DEF: size=(?,?)
12554.2	IN  DEF: layer[00].pos=(?,?)
12492.8	IN  DEF: layer[00].size=(?,?)
12431.3	IN  DEF: layer[0].pos=(?,?)
12369.9	IN  DEF: layer[0].size=(?,?)
12308.4	IN  DEF: layer[01].pos=(?,?)
12247.0	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  [00]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 87.4 + 11236.9 = 11324.4
DL output with Mo: L = 13.6 + 909.0 = 922.6
DL input+output M: L = 101.0 + 12145.9 = 12247.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (5,3) with size (3,3) and color cyan and mask full
  [0]: a rectangle at (1,6) with size (6,1) and color red and mask full
  [01]: a rectangle at (1,1) with size (6,6) and color red and mask full
diff: 
delta:
   (95.5 bits)
data: a background with size (3,3) and color cyan and layers
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (5,3) with size (3,3) and color cyan and mask full
  [0]: a rectangle at (1,6) with size (6,1) and color red and mask full
  [01]: a rectangle at (1,1) with size (6,6) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 23b5c85d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [00]: a rectangle at (2,12) with size (7,7) and color cyan and mask full
  [0]: a rectangle at (10,4) with size (5,6) and color red and mask full
  [01]: a rectangle at (3,1) with size (9,8) and color green and mask full
diff: 
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
   (714.2 bits)
data: a background with size (2,3) and color blue and layers
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [00]: a rectangle at (3,1) with size (9,8) and color green and mask 1110000011111111111111111111111111111111111111111111111111111111111
  [0]: a rectangle at (2,12) with size (7,7) and color cyan and mask full
  [01]: a rectangle at (10,4) with size (5,6) and color red and mask full
diff:   layer[00].mask
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 2x3

TRAIN 23b5c85d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  [00]: a rectangle at (0,9) with size (4,3) and color red and mask full
  [0]: a rectangle at (5,5) with size (3,2) and color pink and mask full
  [01]: a rectangle at (1,2) with size (9,4) and color green and mask full
diff: 
delta:
   (99.3 bits)
data: a background with size (3,2) and color pink and layers
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [00]: a rectangle at (1,2) with size (9,4) and color green and mask 111111110111011101111111111111111111
  [0]: a rectangle at (0,9) with size (4,3) and color red and mask full
  [01]: a rectangle at (5,5) with size (3,2) and color pink and mask full
diff:   layer[00].mask
delta:
! size mismatch, 10x10 instead of 3x2

TRAIN 23b5c85d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,15) and color black and layers
  [00]: a rectangle at (9,6) with size (4,7) and color green and mask full
  [0]: a rectangle at (4,3) with size (3,4) and color orange and mask full
  [01]: a rectangle at (2,1) with size (8,13) and color red and mask full
diff: 
delta:
   (108.7 bits)
data: a background with size (3,4) and color orange and layers
diff: 
delta:
   (19.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  [00]: a rectangle at (9,6) with size (4,7) and color green and mask full
  [0]: a rectangle at (4,3) with size (3,4) and color orange and mask full
  [01]: a rectangle at (2,1) with size (8,13) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x4

TRAIN 23b5c85d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (18,15) and color black and layers
  [00]: a rectangle at (2,1) with size (7,8) and color blue and mask full
  [0]: a rectangle at (11,4) with size (4,7) and color pink and mask full
  [01]: a rectangle at (3,11) with size (2,2) and color yellow and mask full
diff: 
delta:
   (106.1 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  [00]: a rectangle at (2,1) with size (7,8) and color blue and mask full
  [0]: a rectangle at (11,4) with size (4,7) and color pink and mask full
  [01]: a rectangle at (3,11) with size (2,2) and color yellow and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 23b5c85d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [00]: a rectangle at (3,9) with size (11,8) and color yellow and mask full
  [0]: a rectangle at (2,2) with size (6,6) and color blue and mask full
  [01]: a rectangle at (13,2) with size (4,5) and color green and mask full
diff: 
delta: (9,7)=6  (9,8)=6  (9,9)=6  (10,7)=6  (10,8)=6  (10,9)=6  (11,7)=6  (11,8)=6  (11,9)=6 
! size mismatch, 10x10 instead of 3x3

TEST 23b5c85d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 909.0 bits (909.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-351] Checking task 253bf280.json: 8 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5782.0 = 5791.0
DL output with Mo: L = 9.0 + 13677.0 = 13686.0
DL input+output M: L = 17.9 + 19459.0 = 19477.0

# learning a model for train pairs
19477.0	
15215.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13804.4	OUT DEF: size={size}
12839.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12583.2	IN  SHAPE at layer[0]: a point at ? with color ?
Stack overflow
Called from unknown location
Error: no learned model
=====================================
[-350] Checking task 25d487eb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7063.9 = 7072.9
DL output with Mo: L = 9.0 + 11491.7 = 11500.7
DL input+output M: L = 17.9 + 18555.7 = 18573.6

# learning a model for train pairs
18573.6	
13203.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8982.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6049.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4477.4	OUT DEF: layer[0]={layer[0]}
3860.0	OUT DEF: size={size}
3741.4	IN  SHAPE at layer[01]: a point at ? with color ?
3601.9	OUT DEF: layer[01].color={layer[01].color}
3531.3	OUT DEF: layer[01].mask=full
3485.7	OUT DEF: color=black
3440.1	IN  DEF: color=black
3405.0	OUT DEF: layer[01].pos=(?,?)
3255.0	OUT DEF: layer[01].pos.j={layer[01].pos.j}
3220.0	OUT DEF: layer[01].size=(?,?)
3185.0	IN  DEF: size=(?,?)
3150.0	IN  DEF: layer[0].pos=(?,?)
3115.0	IN  DEF: layer[0].size=(?,?)
3080.0	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,{layer[01].pos.j}) with size (?,?) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a point at (?,?) with color ?

DL input  with Mi: L = 53.4 + 2493.6 = 2547.0
DL output with Mo: L = 36.7 + 496.2 = 532.9
DL input+output M: L = 90.1 + 2989.8 = 3080.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (2,3) with size (5,3) and color red and mask 1011110011001
  [01]: a point at (4,3) with color blue
diff: 
delta:
   (77.9 bits)
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (2,3) with size (5,3) and color red and mask 1011110011001
  [01]: a rectangle at (4,3) with size (1,12) and color blue and mask full
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (2,3) with size (5,3) and color red and mask 1011110011001
  [01]: a point at (4,3) with color blue
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (3,4) with size (3,1) and color red and mask full
  [01]: a point at (4,3) with color blue
diff: 
delta: (2,3)=2  (3,3)=2  (4,5)=2  (5,3)=2  (6,3)=2 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (3,3) with size (1,2) and color red and mask full
  [01]: a point at (4,3) with color blue
diff: 
delta: (2,3)=2  (4,4)=2  (4,5)=2  (5,3)=2  (5,4)=2  (6,3)=2 
! 20 wrong pixels (generated / expected)

TRAIN 25d487eb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,3) with size (4,7) and color cyan and mask 1110111011111000111000001000
  [01]: a point at (8,6) with color green
diff: 
delta:
   (92.5 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,3) with size (4,7) and color cyan and mask 1110111011111000111000001000
  [01]: a rectangle at (0,6) with size (9,1) and color green and mask full
diff: 
delta:
   (15.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,3) with size (4,7) and color cyan and mask 1110111011111000111000001000
  [01]: a point at (8,6) with color green
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color cyan and layers
  [0]: a rectangle at (0,0) with size (12,12) and color black and mask 111111111111111111111111111111111111110000000111111000001111111100011111111110111111111111111111111111111111111111111111111111111111111111111111
  [01]: a point at (8,6) with color green
diff:   color
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,5) with size (2,3) and color cyan and mask full
  [01]: a point at (8,6) with color green
diff: 
delta: (5,6)=8  (7,4)=8  (7,8)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,7)=8  (8,8)=8  (8,9)=8 
! 15 wrong pixels (generated / expected)

TRAIN 25d487eb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,5) and color green and mask 1000111011011
  [01]: a point at (2,4) with color red
diff: 
delta:
   (79.0 bits)
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,5) and color green and mask 1000111011011
  [01]: a rectangle at (2,4) with size (13,1) and color red and mask full
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,5) and color green and mask 1000111011011
  [01]: a point at (2,4) with color red
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (3,3) with size (1,3) and color green and mask full
  [01]: a point at (2,4) with color red
diff: 
delta: (2,2)=3  (2,3)=3  (2,5)=3  (2,6)=3  (4,4)=3 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (2,2) with size (1,2) and color green and mask full
  [01]: a point at (2,4) with color red
diff: 
delta: (2,5)=3  (2,6)=3  (3,3)=3  (3,4)=3  (3,5)=3  (4,4)=3 
! 21 wrong pixels (generated / expected)

TRAIN 25d487eb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  [0]: a rectangle at (11,1) with size (4,7) and color yellow and mask 1110111011111000111000001000
  [01]: a point at (14,4) with color cyan
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,11) and color black and layers
  [0]: a rectangle at (12,3) with size (2,3) and color yellow and mask full
  [01]: a point at (14,4) with color cyan
diff: 
delta: (11,4)=4  (13,2)=4  (13,6)=4  (14,1)=4  (14,2)=4  (14,3)=4  (14,5)=4  (14,6)=4  (14,7)=4 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,11) and color black and layers
  [0]: a rectangle at (13,2) with size (1,5) and color yellow and mask full
  [01]: a point at (14,4) with color cyan
diff: 
delta: (11,4)=4  (12,3)=4  (12,4)=4  (12,5)=4  (14,1)=4  (14,2)=4  (14,3)=4  (14,5)=4  (14,6)=4  (14,7)=4 
! 22 wrong pixels (generated / expected)

TEST 25d487eb.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 496.2 bits (496.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-349] Checking task 25d8a9c8.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4128.9 = 4137.8
DL output with Mo: L = 9.0 + 2467.8 = 2476.8
DL input+output M: L = 17.9 + 6596.7 = 6614.6

# learning a model for train pairs
6614.6	
5664.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4847.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4354.2	OUT DEF: size={size}
4033.5	OUT DEF: layer[0].size={layer[0].size}
3742.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3648.6	OUT DEF: layer[0].mask=full
3554.7	IN  DEF: layer[0].mask=full
3506.5	OUT DEF: layer[0].pos=(?,?)
3390.9	OUT DEF: layer[0].pos.j={layer[0].pos.j}
3284.8	OUT DEF: layer[0].pos.i={layer[01].pos.j - layer[01].pos.i}
3236.6	IN  DEF: size=(?,?)
3019.1	IN  DEF: size.i=3
2801.6	IN  DEF: size.j=3
2753.4	IN  DEF: layer[0].pos=(?,?)
2636.7	IN  DEF: layer[0].pos.j=0
2588.4	IN  DEF: layer[0].size=(?,?)
2370.9	IN  DEF: layer[0].size.j=3
2277.0	IN  DEF: layer[0].size.i=1
2228.8	IN  DEF: layer[01].pos=(?,?)
2180.6	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ({layer[01].pos.j - layer[01].pos.i},{layer[0].pos.j}) with size {layer[0].size} and color ? and mask full
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,0) with size (1,3) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 70.7 + 1759.6 = 1830.3
DL output with Mo: L = 41.1 + 309.2 = 350.3
DL input+output M: L = 111.8 + 2068.8 = 2180.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (2,2) and color green and mask 1101
diff: 
delta:
   (40.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color grey and mask full
diff: 
delta:
   (6.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (2,2) and color green and mask 1101
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (2,1) with size (1,2) and color green and mask full
diff: 
delta: (1,1)=3 
! 3 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
  [01]: a rectangle at (0,1) with size (1,2) and color green and mask full
diff: 
delta: (2,0)=3 
   (51.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color grey and mask full
diff: 
delta:
   (6.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
  [01]: a rectangle at (0,1) with size (1,2) and color green and mask full
diff: 
delta: (2,0)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
  [01]: a rectangle at (2,1) with size (1,2) and color orange and mask full
diff: 
delta: (0,0)=7#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
  [01]: a rectangle at (0,0) with size (1,1) and color orange and mask full
diff: 
delta: (2,1)=7# (2,2)=7#
! 6 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta: (0,2)=2 
   (49.0 bits)
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,3) and color black and mask full
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta: (0,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (0,2) with size (1,1) and color red and mask full
diff: 
delta: (0,0)=2 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color brown and mask full
diff: 
delta: (0,1)=9#
! 6 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (2,0) with size (1,3) and color blue and mask full
  [01]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff: 
delta:
   (34.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color grey and mask full
diff: 
delta:
   (6.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (2,0) with size (1,3) and color blue and mask full
  [01]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (2,0) with size (1,3) and color blue and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color red and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff:   layer[0].size.j  layer[0].size.i
delta:
! 3 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
diff: 
delta: (1,1)=2 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
diff: 
delta: (1,1)=2 
! 6 wrong pixels (generated / expected)

TEST 25d8a9c8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 309.2 bits (309.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-348] Checking task 25ff71a9.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2402.7 = 2411.7
DL output with Mo: L = 9.0 + 2402.7 = 2411.7
DL input+output M: L = 17.9 + 4805.4 = 4823.4

# learning a model for train pairs
4823.4	
4014.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3206.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2713.5	OUT DEF: size={size}
2331.2	OUT DEF: layer[0].size={layer[0].size}
2144.8	OUT DEF: layer[0].color={layer[0].color}
1970.6	OUT DEF: layer[0].mask={layer[0].mask}
1910.4	OUT DEF: color=black
1850.2	IN  DEF: color=black
1802.0	OUT DEF: layer[0].pos=(?,?)
1685.7	OUT DEF: layer[0].pos.j={layer[0].pos.j}
1575.4	OUT DEF: layer[0].pos.i={layer[0].pos.i + 1}
1527.1	IN  DEF: size=(?,?)
1309.6	IN  DEF: size.i=3
1092.1	IN  DEF: size.j=3
1043.9	IN  DEF: layer[0].pos=(?,?)
995.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i + 1},{layer[0].pos.j}) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 43.0 + 920.3 = 963.3
DL output with Mo: L = 32.3 + 0.0 = 32.3
DL input+output M: L = 75.3 + 920.3 = 995.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta:
   (20.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color blue and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color blue and mask full
diff: 
delta:
   (20.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color blue and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color blue and mask full
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
diff: 
delta:
   (25.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color blue and mask 1110
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask 1011
diff: 
delta:
   (25.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color red and mask 1011
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask 1011
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color red and mask full
diff: 
delta:
correct output grid

TEST 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,1) and color blue and mask full
diff: 
delta:
correct output grid

TEST 25ff71a9.json/2: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-347] Checking task 264363fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 260846.0 = 260854.9
DL output with Mo: L = 9.0 + 253997.7 = 254006.7
DL input+output M: L = 17.9 + 514843.7 = 514861.6

# learning a model for train pairs
514861.6	
292377.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
112767.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
95912.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
89061.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 21471.8 = 21515.2
DL output with Mo: L = 43.4 + 67502.6 = 67546.0
DL input+output M: L = 86.7 + 88974.5 = 89061.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color cyan and layers
  [0]: a rectangle at (1,2) with size (15,17) and color blue and mask full
  [01]: a rectangle at (18,8) with size (9,18) and color blue and mask full
diff: 
delta: (2,25)=2  (3,24)=3  (3,25)=2  (3,26)=3  (4,23)=2  (4,24)=2  (4,25)=3  (4,26)=2  (4,27)=2  (5,5)=3  (5,24)=3  (5,25)=2  (5,26)=3  (6,25)=2  (25,17)=3 
   (436.8 bits)
data: a background with size (30,30) and color blue and layers
  [0]: a rectangle at (0,0) with size (30,30) and color cyan and mask
  [01]: a rectangle at (18,8) with size (7,8) and color blue and mask full
diff: 
delta: (1,5)=2  (2,5)=2  (3,5)=2  (4,4)=3  (4,5)=2  (4,6)=3  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=3  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (5,15)=2  (5,16)=2  (5,17)=2  (5,18)=2  (6,4)=3  (6,5)=2  (6,6)=3  (7,5)=2  (8,5)=2  (9,5)=2  (10,5)=2  (11,5)=2  (12,5)=2  (13,5)=2  (14,5)=2  (15,5)=2  (18,17)=2  (19,17)=2  (20,17)=2  (21,17)=2  (22,17)=2  (23,17)=2  (24,16)=3  (24,17)=2  (24,18)=3  (25,8)=2  (25,9)=2  (25,10)=2  (25,11)=2  (25,12)=2  (25,13)=2  (25,14)=2  (25,15)=2  (25,16)=2  (25,17)=3  (25,18)=2  (25,19)=2  (25,20)=2  (25,21)=2  (25,22)=2  (25,23)=2  (25,24)=2  (25,25)=2  (26,16)=3  (26,17)=2  (26,18)=3 
   (2378.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color cyan and layers
  [0]: a rectangle at (1,2) with size (15,17) and color blue and mask full
  [01]: a rectangle at (18,8) with size (9,18) and color blue and mask full
diff: 
delta: (2,25)=2  (3,24)=3  (3,25)=2  (3,26)=3  (4,23)=2  (4,24)=2  (4,25)=3  (4,26)=2  (4,27)=2  (5,5)=3  (5,24)=3  (5,25)=2  (5,26)=3  (6,25)=2  (25,17)=3 
! size mismatch, 10x10 instead of 30x30

TRAIN 264363fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color blue and layers
  [0]: a rectangle at (15,6) with size (13,18) and color red and mask full
  [01]: a rectangle at (5,1) with size (9,17) and color red and mask full
diff: 
delta: (3,24)=3  (4,24)=3  (5,22)=3  (5,23)=3  (5,24)=4  (5,25)=3  (5,26)=3  (6,24)=3  (7,14)=4  (7,24)=3  (10,5)=4  (24,16)=4 
   (373.6 bits)
data: a background with size (30,30) and color red and layers
  [0]: a rectangle at (0,0) with size (30,30) and color blue and mask
  [01]: a rectangle at (5,1) with size (9,17) and color green and mask 100000000100000001000000001000000010000000010000111111111111011110001000000001000000010000000010000111011111111111110001000000001000000010000000010000
diff: 
delta: (7,14)=4  (10,5)=4  (15,16)=3  (16,16)=3  (17,16)=3  (18,16)=3  (19,16)=3  (20,16)=3  (21,16)=3  (22,16)=3  (23,16)=3  (24,6)=3  (24,7)=3  (24,8)=3  (24,9)=3  (24,10)=3  (24,11)=3  (24,12)=3  (24,13)=3  (24,14)=3  (24,15)=3  (24,16)=4  (24,17)=3  (24,18)=3  (24,19)=3  (24,20)=3  (24,21)=3  (24,22)=3  (24,23)=3  (25,16)=3  (26,16)=3  (27,16)=3 
   (1848.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color blue and layers
  [0]: a rectangle at (15,6) with size (13,18) and color red and mask full
  [01]: a rectangle at (5,1) with size (9,17) and color red and mask full
diff: 
delta: (3,24)=3  (4,24)=3  (5,22)=3  (5,23)=3  (5,24)=4  (5,25)=3  (5,26)=3  (6,24)=3  (7,14)=4  (7,24)=3  (10,5)=4  (24,16)=4 
! size mismatch, 10x10 instead of 30x30

TRAIN 264363fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color green and layers
  [0]: a rectangle at (0,0) with size (30,30) and color cyan and mask
  [01]: a rectangle at (9,1) with size (15,3) and color green and mask full
diff: 
delta: (6,23)=4  (10,15)=4  (12,4)=4  (20,18)=4  (24,24)=5# (25,23)=6  (25,24)=5# (25,25)=6  (26,23)=6  (26,24)=4  (26,25)=6  (27,23)=6  (27,24)=5# (27,25)=6  (28,24)=5#
   (1336.8 bits)
data: a background with size (30,30) and color green and layers
  [0]: a rectangle at (0,0) with size (30,30) and color cyan and mask
  [01]: a rectangle at (2,16) with size (7,6) and color green and mask full
diff: 
delta: (2,15)=5# (2,23)=5# (3,15)=5# (3,23)=5# (4,15)=5# (4,23)=5# (5,15)=5# (5,22)=6  (5,23)=5# (5,24)=6  (6,15)=5# (6,22)=6  (6,23)=4  (6,24)=6  (7,15)=5# (7,22)=6  (7,23)=5# (7,24)=6  (8,15)=5# (8,23)=5# (9,4)=5# (9,14)=6  (9,15)=5# (9,16)=6  (9,23)=5# (10,4)=5# (10,14)=6  (10,15)=4  (10,16)=6  (10,23)=5# (11,3)=6  (11,4)=5# (11,5)=6  (11,14)=6  (11,15)=5# (11,16)=6  (11,23)=5# (12,3)=6  (12,4)=4  (12,5)=6  (12,15)=5# (12,23)=5# (13,3)=6  (13,4)=5# (13,5)=6  (13,15)=5# (13,23)=5# (14,4)=5# (14,15)=5# (14,23)=5# (15,4)=5# (16,4)=5# (16,18)=5# (17,4)=5# (17,18)=5# (18,4)=5# (18,18)=5# (19,4)=5# (19,17)=6  (19,18)=5# (19,19)=6  (20,4)=5# (20,17)=6  (20,18)=4  (20,19)=6  (21,4)=5# (21,17)=6  (21,18)=5# (21,19)=6  (22,4)=5# (22,18)=5# (23,4)=5#
   (2523.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color green and layers
  [0]: a rectangle at (0,0) with size (30,30) and color cyan and mask
  [01]: a rectangle at (9,1) with size (15,3) and color green and mask full
diff: 
delta: (6,23)=4  (10,15)=4  (12,4)=4  (20,18)=4  (24,24)=5# (25,23)=6  (25,24)=5# (25,25)=6  (26,23)=6  (26,24)=4  (26,25)=6  (27,23)=6  (27,24)=5# (27,25)=6  (28,24)=5#
! size mismatch, 10x10 instead of 30x30

TRAIN 264363fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color yellow and layers
  [0]: a rectangle at (14,12) with size (14,17) and color blue and mask full
  [01]: a rectangle at (2,3) with size (10,12) and color blue and mask full
diff: 
delta: (9,6)=2  (17,23)=2  (22,2)=3  (22,3)=3  (22,4)=3  (23,1)=8  (23,2)=8  (23,3)=2  (23,4)=8  (23,5)=8  (24,2)=3  (24,3)=3  (24,4)=3  (24,18)=2 
! size mismatch, 10x10 instead of 30x30

TEST 264363fd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 67502.6 bits (67502.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-346] Checking task 272f95fa.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 23040.0 = 23049.0
DL output with Mo: L = 9.0 + 63445.0 = 63454.0
DL input+output M: L = 17.9 + 86485.0 = 86503.0

# learning a model for train pairs
86503.0	
68468.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
51822.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
38043.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
28896.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
22693.6	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
16767.7	OUT DEF: layer[0]={layer[0]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 6376.9 = 6403.5
DL output with Mo: L = 62.4 + 10301.8 = 10364.2
DL input+output M: L = 89.0 + 16678.7 = 16767.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,0) with size (18,19) and color cyan and mask 10000001000000000001000000100000000000100000010000000000010000001000000000001000000100000000000100000010000000000010000001000000000001000000100000000000100000010000000000010000001000011111111111111111110000000100000010000000000010000001000000000001000000100000000000100000010000111111111111111111100000001000000100000000000100000010000
diff: 
delta:
   (408.4 bits)
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,0) with size (18,19) and color cyan and mask 10000001000000000001000000100000000000100000010000000000010000001000000000001000000100000000000100000010000000000010000001000000000001000000100000000000100000010000000000010000001000011111111111111111110000000100000010000000000010000001000000000001000000100000000000100000010000111111111111111111100000001000000100000000000100000010000
  [01]: a rectangle at (8,5) with size (10,6) and color blue and mask full
  [011]: a rectangle at (3,12) with size (4,7) and color green and mask full
  [0111]: a rectangle at (3,5) with size (4,6) and color pink and mask full
diff: 
delta: (0,5)=2  (0,6)=2  (0,7)=2  (0,8)=2  (0,9)=2  (0,10)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (5,0)=4  (5,1)=4  (5,2)=4  (5,3)=4  (6,0)=4  (6,1)=4  (6,2)=4  (6,3)=4 
   (682.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,0) with size (18,19) and color cyan and mask 10000001000000000001000000100000000000100000010000000000010000001000000000001000000100000000000100000010000000000010000001000000000001000000100000000000100000010000000000010000001000011111111111111111110000000100000010000000000010000001000000000001000000100000000000100000010000111111111111111111100000001000000100000000000100000010000
diff: 
delta:
! size mismatch, 10x10 instead of 18x19
>> Trial 2
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (2,0) with size (1,19) and color cyan and mask full
diff: 
delta: (0,4)=8  (0,11)=8  (1,4)=8  (1,11)=8  (3,4)=8  (3,11)=8  (4,4)=8  (4,11)=8  (5,4)=8  (5,11)=8  (6,4)=8  (6,11)=8  (7,0)=8  (7,1)=8  (7,2)=8  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (7,9)=8  (7,10)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=8  (7,17)=8  (7,18)=8  (8,4)=8  (8,11)=8  (9,4)=8  (9,11)=8  (10,4)=8  (10,11)=8  (11,4)=8  (11,11)=8  (12,4)=8  (12,11)=8  (13,4)=8  (13,11)=8  (14,4)=8  (14,11)=8  (15,4)=8  (15,11)=8  (16,4)=8  (16,11)=8  (17,4)=8  (17,11)=8 
! size mismatch, 10x10 instead of 18x19
>> Trial 3
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (7,0) with size (1,19) and color cyan and mask full
diff: 
delta: (0,4)=8  (0,11)=8  (1,4)=8  (1,11)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=8  (3,4)=8  (3,11)=8  (4,4)=8  (4,11)=8  (5,4)=8  (5,11)=8  (6,4)=8  (6,11)=8  (8,4)=8  (8,11)=8  (9,4)=8  (9,11)=8  (10,4)=8  (10,11)=8  (11,4)=8  (11,11)=8  (12,4)=8  (12,11)=8  (13,4)=8  (13,11)=8  (14,4)=8  (14,11)=8  (15,4)=8  (15,11)=8  (16,4)=8  (16,11)=8  (17,4)=8  (17,11)=8 
! size mismatch, 10x10 instead of 18x19

TRAIN 272f95fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (0,0) with size (12,14) and color cyan and mask 10000001000000100000010000001000000100000010000001001111111111111100001000000100000010000001001111111111111100001000000100000010000001000000100000010000001000000100
diff: 
delta:
   (229.3 bits)
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (0,0) with size (12,14) and color cyan and mask 10000001000000100000010000001000000100000010000001001111111111111100001000000100000010000001001111111111111100001000000100000010000001000000100000010000001000000100
  [01]: a rectangle at (0,3) with size (4,6) and color red and mask full
  [011]: a rectangle at (8,3) with size (4,6) and color blue and mask full
  [0111]: a rectangle at (5,3) with size (2,6) and color pink and mask full
diff: 
delta: (5,0)=4  (5,1)=4  (5,10)=3  (5,11)=3  (5,12)=3  (5,13)=3  (6,0)=4  (6,1)=4  (6,10)=3  (6,11)=3  (6,12)=3  (6,13)=3 
   (347.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (0,0) with size (12,14) and color cyan and mask 10000001000000100000010000001000000100000010000001001111111111111100001000000100000010000001001111111111111100001000000100000010000001000000100000010000001000000100
diff: 
delta:
! size mismatch, 10x10 instead of 12x14
>> Trial 2
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (4,0) with size (1,14) and color cyan and mask full
diff: 
delta: (0,2)=8  (0,9)=8  (1,2)=8  (1,9)=8  (2,2)=8  (2,9)=8  (3,2)=8  (3,9)=8  (5,2)=8  (5,9)=8  (6,2)=8  (6,9)=8  (7,0)=8  (7,1)=8  (7,2)=8  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (7,9)=8  (7,10)=8  (7,11)=8  (7,12)=8  (7,13)=8  (8,2)=8  (8,9)=8  (9,2)=8  (9,9)=8  (10,2)=8  (10,9)=8  (11,2)=8  (11,9)=8 
! size mismatch, 10x10 instead of 12x14
>> Trial 3
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (7,0) with size (1,14) and color cyan and mask full
diff: 
delta: (0,2)=8  (0,9)=8  (1,2)=8  (1,9)=8  (2,2)=8  (2,9)=8  (3,2)=8  (3,9)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (4,8)=8  (4,9)=8  (4,10)=8  (4,11)=8  (4,12)=8  (4,13)=8  (5,2)=8  (5,9)=8  (6,2)=8  (6,9)=8  (8,2)=8  (8,9)=8  (9,2)=8  (9,9)=8  (10,2)=8  (10,9)=8  (11,2)=8  (11,9)=8 
! size mismatch, 10x10 instead of 12x14

TRAIN 272f95fa.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color black and layers
  [0]: a rectangle at (0,0) with size (17,15) and color cyan and mask 100001000000000100001000000000100001000111111111111111000000100001000000000100001000000000100001000000000100001000000000100001000000000100001000111111111111111000000100001000000000100001000000000100001000000000100001000000000100001000000000100001000
diff: 
delta:
! size mismatch, 10x10 instead of 17x15
>> Trial 2
data: a background with size (17,15) and color black and layers
  [0]: a rectangle at (0,3) with size (17,1) and color cyan and mask full
diff: 
delta: (0,8)=8  (1,8)=8  (2,8)=8  (3,8)=8  (4,8)=8  (5,8)=8  (6,0)=8  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,11)=8  (6,12)=8  (6,13)=8  (6,14)=8  (7,8)=8  (8,8)=8  (9,8)=8  (10,8)=8  (11,8)=8  (12,8)=8  (13,0)=8  (13,1)=8  (13,2)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,12)=8  (13,13)=8  (13,14)=8  (14,8)=8  (15,8)=8  (16,8)=8 
! size mismatch, 10x10 instead of 17x15
>> Trial 3
data: a background with size (17,15) and color black and layers
  [0]: a rectangle at (0,8) with size (17,1) and color cyan and mask full
diff: 
delta: (0,3)=8  (1,3)=8  (2,3)=8  (3,3)=8  (4,3)=8  (5,3)=8  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8  (6,9)=8  (6,10)=8  (6,11)=8  (6,12)=8  (6,13)=8  (6,14)=8  (7,3)=8  (8,3)=8  (9,3)=8  (10,3)=8  (11,3)=8  (12,3)=8  (13,0)=8  (13,1)=8  (13,2)=8  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,12)=8  (13,13)=8  (13,14)=8  (14,3)=8  (15,3)=8  (16,3)=8 
! size mismatch, 10x10 instead of 17x15

TEST 272f95fa.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10301.8 bits (10301.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-345] Checking task 27a28665.json: 7 train, 3 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5692.5 = 5701.5
DL output with Mo: L = 9.0 + 975.2 = 984.2
DL input+output M: L = 17.9 + 6667.7 = 6685.6

# learning a model for train pairs
6685.6	
4452.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4348.8	IN  DEF: color=black
4260.9	OUT DEF: size=(?,?)
4097.4	OUT DEF: size.i=1
3933.8	OUT DEF: size.j=1
3845.9	IN  DEF: size=(?,?)
3463.7	IN  DEF: size.i=3
3081.4	IN  DEF: size.j=3
2993.5	IN  DEF: layer[0].pos=(?,?)
2789.6	IN  DEF: layer[0].pos.i=0
2585.7	IN  DEF: layer[0].pos.j=0
2497.8	IN  DEF: layer[0].size=(?,?)
2115.6	IN  DEF: layer[0].size.i=3
1733.3	IN  DEF: layer[0].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ? and layers
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color ? and mask ?

DL input  with Mi: L = 46.5 + 1117.6 = 1164.1
DL output with Mo: L = 11.6 + 557.6 = 569.2
DL input+output M: L = 58.1 + 1675.2 = 1733.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10101011
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10101011
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 101010101
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 101010101
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 101010101
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 101010101
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 1110110
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 1110110
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 1110110
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 1110110
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 10101011
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 10101011
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10111010
diff: 
delta:
   (16.0 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10111010
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 10101011
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 101010101
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/3: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 557.6 bits (557.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-344] Checking task 28bf18c6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3450.5 = 3459.5
DL output with Mo: L = 9.0 + 3799.1 = 3808.0
DL input+output M: L = 17.9 + 7249.6 = 7267.5

# learning a model for train pairs
7267.5	
5381.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3678.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3538.1	OUT DEF: layer[0].color={layer[0].color}
3492.5	OUT DEF: color=black
3446.9	IN  DEF: color=black
3411.9	OUT DEF: size=(?,?)
3191.3	OUT DEF: size.j=6
3027.9	OUT DEF: size.i={layer[0].size.i}
2992.9	OUT DEF: layer[0].pos=(?,?)
2876.3	OUT DEF: layer[0].pos.j=0
2792.0	OUT DEF: layer[0].pos.i=0
2757.0	OUT DEF: layer[0].size=(?,?)
2536.4	OUT DEF: layer[0].size.j=6
2371.8	OUT DEF: layer[0].size.i={layer[0].size.i}
2336.8	IN  DEF: size=(?,?)
2092.2	IN  DEF: size.i=8
1847.5	IN  DEF: size.j=8
1812.5	IN  DEF: layer[0].pos=(?,?)
1777.5	IN  DEF: layer[0].size=(?,?)
1614.9	IN  DEF: layer[0].size.i=3
1452.3	IN  DEF: layer[0].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ({layer[0].size.i},6) and color black and layers
  [0]: a rectangle at (0,0) with size ({layer[0].size.i},6) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (8,8) and color black and layers
  [0]: a rectangle at (?,?) with size (3,3) and color ? and mask ?

DL input  with Mi: L = 53.0 + 738.3 = 791.3
DL output with Mo: L = 51.4 + 609.7 = 661.0
DL input+output M: L = 104.4 + 1347.9 = 1452.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color cyan and mask 111010011
diff: 
delta:
   (24.6 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color cyan and mask 111111010010011011
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color cyan and mask 111010011
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 28bf18c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (5,2) with size (3,3) and color red and mask 11111010
diff: 
delta:
   (24.6 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color red and mask 11011111111010010
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (5,2) with size (3,3) and color red and mask 11111010
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (6,2) with size (2,2) and color red and mask full
diff:   layer[0].size.j  layer[0].size.i
delta: (5,3)=2  (6,4)=2 
! size mismatch, 2x6 instead of 3x6

TRAIN 28bf18c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,4) with size (3,3) and color blue and mask 10001110
diff: 
delta:
   (24.6 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color blue and mask 10010001001110110
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,4) with size (3,3) and color blue and mask 10001110
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,5) with size (1,2) and color blue and mask full
diff:   layer[0].size.j  layer[0].size.i
delta: (2,4)=1  (3,5)=1 
! size mismatch, 1x6 instead of 3x6

TRAIN 28bf18c6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,1) with size (3,3) and color green and mask 1111100
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (5,1) with size (1,3) and color green and mask full
diff:   layer[0].size.i
delta: (4,3)=3  (6,1)=3 
! size mismatch, 1x6 instead of 3x6

TEST 28bf18c6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 609.7 bits (609.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-343] Checking task 28e73c20.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1031.8 = 1040.7
DL output with Mo: L = 9.0 + 46483.3 = 46492.3
DL input+output M: L = 17.9 + 47515.1 = 47533.0

# learning a model for train pairs
47533.0	
9059.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8099.2	OUT DEF: size={size}
7954.4	OUT DEF: layer[0].size={size}
7723.5	OUT DEF: layer[0].color=green
7648.8	OUT DEF: color=black
7574.0	IN  DEF: color=black
7512.6	OUT DEF: layer[0].pos=(?,?)
7284.2	OUT DEF: layer[0].pos.i=0
7055.9	OUT DEF: layer[0].pos.j=0
6994.5	IN  DEF: size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,0) with size {size} and color green and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 11.7 + 892.8 = 904.5
DL output with Mo: L = 33.8 + 6056.1 = 6089.9
DL input+output M: L = 45.6 + 6948.9 = 6994.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
diff: 
delta:
   (15.0 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color green and mask 111111100001101101101111100000111111
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 28e73c20.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
diff: 
delta:
   (16.6 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color green and mask 1111111110000001101111011010110110100001101111111000000011111111
diff: 
delta:
   (66.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 28e73c20.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
diff: 
delta:
   (20.3 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,0) with size (15,15) and color green and mask 111111111111111100000000000001101111111111101101000000000101101011111110101101010000010101101010111010101101010100010101101010111110101101010000000101101011111111101101000000000001101111111111111100000000000000111111111111111
diff: 
delta:
   (227.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
diff: 
delta:
! 98 wrong pixels (generated / expected)

TRAIN 28e73c20.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
diff: 
delta:
   (19.4 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (0,0) with size (13,13) and color green and mask 1111111111111100000000000110111111111011010000000101101011111010110101000101011010101110101101010000010110101111111011010000000001101111111111110000000000001111111111111
diff: 
delta:
   (171.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
diff: 
delta:
! 72 wrong pixels (generated / expected)

TRAIN 28e73c20.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
diff: 
delta:
   (17.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color green and mask 1111111111100000000110111111011010000101101011010110101111011010000001101111111110000000001111111111
diff: 
delta:
   (102.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta:
! 40 wrong pixels (generated / expected)

TRAIN 28e73c20.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
diff: 
delta:
! 144 wrong pixels (generated / expected)

TEST 28e73c20.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6056.1 bits (6056.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-342] Checking task 29623171.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27753.8 = 27762.8
DL output with Mo: L = 9.0 + 28827.9 = 28836.9
DL input+output M: L = 17.9 + 56581.7 = 56599.7

# learning a model for train pairs
56599.7	
39822.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23054.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18280.8	OUT DEF: layer[0]={layer[0]}
14231.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10651.6	IN  DEF: layer[0].mask=1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
10056.8	OUT DEF: size={size}
9682.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9542.9	OUT DEF: layer[01].color={layer[01].color}
9404.9	IN  DEF: layer[0].color=grey
9334.2	OUT DEF: layer[01].mask=full
9264.5	IN  SHAPE at layer[011]: a point at ? with color ?
9192.7	IN  SHAPE at layer[0111]: a point at ? with color ?
9118.4	IN  SHAPE at layer[01111]: a point at ? with color ?
9040.7	IN  SHAPE at layer[010]: a point at ? with color ?
8957.5	IN  SHAPE at layer[011111]: a point at ? with color ?
8862.9	IN  SHAPE at layer[0101]: a point at ? with color ?
8817.3	OUT DEF: color=black
8771.7	IN  DEF: color=black
8736.7	OUT DEF: layer[01].pos=(?,?)
8596.1	OUT DEF: layer[01].pos.j=8
8461.2	OUT DEF: layer[01].pos.i={layer[0111].pos.i - 1}
8426.2	OUT DEF: layer[01].size=(?,?)
8263.6	OUT DEF: layer[01].size.i=3
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0111].pos.i - 1},8) with size (3,?) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at ? with color ?
  [0101]: a point at ? with color ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?

DL input  with Mi: L = 219.8 + 6152.0 = 6371.8
DL output with Mo: L = 54.1 + 1837.7 = 1891.9
DL input+output M: L = 273.9 + 7989.7 = 8263.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,0) with color blue
  [0101]: a point at (1,9) with color blue
  [01]: a rectangle at (2,6) with size (3,1) and color blue and mask full
  [011]: a point at (5,9) with color blue
  [0111]: a point at (9,1) with color blue
  [01111]: a point at (8,8) with color blue
  [011111]: a point at (9,10) with color blue
diff: 
delta:
   (170.6 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (8,8) with size (3,3) and color blue and mask full
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,0) with color blue
  [0101]: a point at (1,9) with color blue
  [01]: a rectangle at (2,6) with size (3,1) and color blue and mask full
  [011]: a point at (5,9) with color blue
  [0111]: a point at (8,8) with color blue
  [01111]: a point at (9,1) with color blue
  [011111]: a point at (9,10) with color blue
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,0) with color blue
  [0101]: a point at (1,9) with color blue
  [01]: a rectangle at (2,6) with size (3,1) and color blue and mask full
  [011]: a point at (5,9) with color blue
  [0111]: a point at (9,1) with color blue
  [01111]: a point at (8,8) with color blue
  [011111]: a point at (9,10) with color blue
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 29623171.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,5) with color red
  [0101]: a point at (0,8) with color red
  [01]: a rectangle at (4,0) with size (2,1) and color red and mask full
  [011]: a point at (1,0) with color red
  [0111]: a point at (1,10) with color red
  [01111]: a point at (5,6) with color red
  [011111]: a point at (6,9) with color red
diff: 
delta: (9,0)=2  (9,6)=2  (9,10)=2 
   (227.0 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (0,8) with size (3,3) and color red and mask full
diff: 
delta: (4,0)=2  (4,1)=2  (4,2)=2  (5,0)=2  (5,1)=2  (5,2)=2  (6,0)=2  (6,1)=2  (6,2)=2 
   (172.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,5) with color red
  [0101]: a point at (0,8) with color red
  [01]: a rectangle at (4,0) with size (2,1) and color red and mask full
  [011]: a point at (1,0) with color red
  [0111]: a point at (1,10) with color red
  [01111]: a point at (5,6) with color red
  [011111]: a point at (6,9) with color red
diff: 
delta: (9,0)=2  (9,6)=2  (9,10)=2 
! 12 wrong pixels (generated / expected)

TRAIN 29623171.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,9) with color green
  [0101]: a point at (5,1) with color green
  [01]: a rectangle at (9,8) with size (2,3) and color green and mask 100011
  [011]: a point at (5,5) with color green
  [0111]: a point at (9,1) with color green
  [01111]: a point at (6,4) with color green
  [011111]: a point at (9,4) with color green
diff: 
delta: (0,0)=3  (0,1)=3 
   (217.5 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (8,8) with size (3,3) and color green and mask full
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,9) with color green
  [0101]: a point at (5,1) with color green
  [01]: a rectangle at (9,8) with size (2,3) and color green and mask 100011
  [011]: a point at (5,5) with color green
  [0111]: a point at (6,4) with color green
  [01111]: a point at (9,1) with color green
  [011111]: a point at (9,4) with color green
diff: 
delta: (0,0)=3  (0,1)=3 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,9) with color green
  [0101]: a point at (5,1) with color green
  [01]: a rectangle at (9,8) with size (2,3) and color green and mask 100011
  [011]: a point at (5,5) with color green
  [0111]: a point at (9,1) with color green
  [01111]: a point at (6,4) with color green
  [011111]: a point at (9,4) with color green
diff: 
delta: (0,0)=3  (0,1)=3 
! 3 wrong pixels (generated / expected)

TRAIN 29623171.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,6) with color yellow
  [0101]: a point at (2,0) with color yellow
  [01]: a rectangle at (5,0) with size (1,11) and color yellow and mask full
  [011]: a point at (4,9) with color yellow
  [0111]: a point at (8,5) with color yellow
  [01111]: a point at (8,10) with color yellow
  [011111]: a point at (9,0) with color yellow
diff: 
delta: (0,0)=4  (0,1)=4  (1,1)=4  (1,8)=4  (1,9)=4  (2,9)=4  (5,1)=0  (5,2)=0  (5,4)=0  (5,6)=0  (5,9)=0  (9,6)=4  (9,9)=4  (10,4)=4  (10,5)=4 
! 22 wrong pixels (generated / expected)

TEST 29623171.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1837.7 bits (1837.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-341] Checking task 29c11459.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1111.6 = 1120.6
DL output with Mo: L = 9.0 + 4200.0 = 4208.9
DL input+output M: L = 17.9 + 5311.6 = 5329.5

# learning a model for train pairs
5329.5	
4191.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3010.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
2659.0	OUT DEF: size={size}
2582.3	OUT SHAPE at layer[011]: a point at ? with color ?
2490.8	OUT DEF: layer[011].color=grey
2432.2	IN  SHAPE at layer[0]: a point at ? with color ?
2236.3	OUT DEF: layer[0].pos={layer[0].pos}
2142.8	OUT DEF: layer[0].color={layer[0].color}
2067.8	IN  SHAPE at layer[01]: a point at ? with color ?
1974.8	OUT DEF: layer[01].color={layer[01].color}
1927.4	OUT DEF: layer[0].mask=full
1879.9	OUT DEF: layer[01].mask=full
1848.9	OUT DEF: color=black
1817.9	IN  DEF: color=black
1796.1	OUT DEF: layer[0].size=(?,?)
1658.2	OUT DEF: layer[0].size.j={size.i}
1610.8	OUT DEF: layer[0].size.i=1
1589.0	OUT DEF: layer[01].pos=(?,?)
1496.3	OUT DEF: layer[01].pos.j=6
1423.6	OUT DEF: layer[01].pos.i={layer[01].pos.i}
1401.8	OUT DEF: layer[01].size=(?,?)
1263.9	OUT DEF: layer[01].size.j={size.i}
1216.5	OUT DEF: layer[01].size.i=1
1194.7	OUT DEF: layer[011].pos=(?,?)
1101.4	OUT DEF: layer[011].pos.j={size.i}
1029.0	OUT DEF: layer[011].pos.i={layer[0].pos.i}
1007.3	IN  DEF: size=(?,?)
828.4	IN  DEF: size.j=11
692.7	IN  DEF: size.i=5
670.9	IN  DEF: layer[0].pos=(?,?)
576.7	IN  DEF: layer[0].pos.j=0
554.9	IN  DEF: layer[01].pos=(?,?)
460.8	IN  DEF: layer[01].pos.j=10

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (1,{size.i}) and color {layer[0].color} and mask full
  [01]: a rectangle at ({layer[01].pos.i},6) with size (1,{size.i}) and color {layer[01].color} and mask full
  [011]: a point at ({layer[0].pos.i},{size.i}) with color grey
WHERE (Mi)
a background with size (5,11) and color black and layers
  [0]: a point at (?,0) with color ?
  [01]: a point at (?,10) with color ?

DL input  with Mi: L = 54.6 + 331.5 = 386.1
DL output with Mo: L = 74.6 + 0.0 = 74.6
DL input+output M: L = 129.2 + 331.5 = 460.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,11) and color black and layers
  [0]: a point at (1,0) with color blue
  [01]: a point at (1,10) with color red
diff: 
delta:
   (16.6 bits)
data: a background with size (5,11) and color black and layers
  [0]: a rectangle at (1,0) with size (1,5) and color blue and mask full
  [01]: a rectangle at (1,6) with size (1,5) and color red and mask full
  [011]: a point at (1,5) with color grey
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  [0]: a point at (1,0) with color blue
  [01]: a point at (1,10) with color red
diff: 
delta:
correct output grid

TRAIN 29c11459.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,11) and color black and layers
  [0]: a point at (3,0) with color green
  [01]: a point at (3,10) with color orange
diff: 
delta:
   (16.6 bits)
data: a background with size (5,11) and color black and layers
  [0]: a rectangle at (3,0) with size (1,5) and color green and mask full
  [01]: a rectangle at (3,6) with size (1,5) and color orange and mask full
  [011]: a point at (3,5) with color grey
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  [0]: a point at (3,0) with color green
  [01]: a point at (3,10) with color orange
diff: 
delta:
correct output grid

TRAIN 29c11459.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  [0]: a point at (1,0) with color yellow
  [01]: a point at (1,10) with color cyan
diff: 
delta: (4,0)=6  (4,10)=9#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,11) and color black and layers
  [0]: a point at (1,0) with color yellow
  [01]: a point at (4,10) with color brown
diff: 
delta: (1,10)=8  (4,0)=6 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,11) and color black and layers
  [0]: a point at (4,0) with color pink
  [01]: a point at (1,10) with color cyan
diff: 
delta: (1,0)=4  (4,10)=9#
! 11 wrong pixels (generated / expected)

TEST 29c11459.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-340] Checking task 29ec7d0e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 170471.6 = 170480.5
DL output with Mo: L = 9.0 + 158900.5 = 158909.4
DL input+output M: L = 17.9 + 329372.1 = 329390.0

# learning a model for train pairs
329390.0	
306433.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
289925.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
288574.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 153946.2 = 153972.8
DL output with Mo: L = 43.4 + 134558.1 = 134601.4
DL input+output M: L = 69.9 + 288504.3 = 288574.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,18) and color grey and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 1000010000100001001000010000100001111111111111111111001000010000100001001000010000100001001000010000100000001000010000100000111111111111110000001000010000100001001000010000100001001000010000100001001000010000100001111100011100111111001000010000100001001000000000100001001000000000100001001000010000100001111111111111100111
diff: 
delta: (0,3)=0  (0,4)=0  (1,1)=2  (1,2)=3  (1,3)=0  (1,4)=0  (1,6)=2  (1,7)=3  (1,8)=4  (1,11)=2  (1,12)=3  (1,13)=4  (1,16)=2  (1,17)=3  (2,1)=3  (2,3)=0  (2,4)=0  (2,6)=3  (2,8)=2  (2,9)=4  (2,10)=0  (2,11)=0  (2,13)=2  (2,14)=4  (2,16)=3  (3,1)=4  (3,2)=2  (3,4)=3  (3,6)=4  (3,7)=2  (3,9)=3  (3,10)=0  (3,11)=0  (3,12)=2  (3,14)=3  (3,16)=4  (3,17)=2  (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=0  (4,7)=0  (4,8)=3  (4,9)=2  (4,12)=4  (4,13)=3  (4,14)=2  (4,17)=4  (5,6)=0  (5,7)=0  (5,11)=0  (5,12)=0  (5,13)=0  (6,1)=2  (6,2)=3  (6,3)=4  (6,6)=2  (6,7)=3  (6,8)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,16)=2  (6,17)=3  (7,1)=3  (7,3)=2  (7,4)=4  (7,6)=3  (7,8)=2  (7,9)=4  (7,11)=3  (7,13)=2  (7,14)=4  (7,16)=3  (8,1)=4  (8,2)=2  (8,4)=3  (8,6)=4  (8,7)=2  (8,9)=3  (8,11)=4  (8,12)=2  (8,14)=3  (8,16)=4  (8,17)=2  (9,2)=4  (9,3)=3  (9,4)=2  (9,7)=4  (9,8)=3  (9,9)=2  (9,12)=4  (9,13)=3  (9,14)=2  (9,17)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,6)=2  (11,7)=3  (11,8)=4  (11,11)=2  (11,12)=3  (11,13)=4  (11,16)=2  (11,17)=3  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=4  (12,6)=3  (12,8)=2  (12,9)=4  (12,11)=3  (12,13)=2  (12,14)=4  (12,16)=3  (13,1)=4  (13,2)=2  (13,4)=3  (13,6)=4  (13,7)=2  (13,9)=3  (13,11)=4  (13,12)=2  (13,14)=3  (13,16)=4  (13,17)=2  (14,2)=4  (14,3)=3  (14,4)=2  (14,7)=4  (14,8)=3  (14,9)=2  (14,12)=4  (14,13)=3  (14,14)=2  (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,6)=2  (16,7)=3  (16,8)=4  (16,11)=2  (16,12)=3  (16,13)=4  (16,16)=2  (16,17)=3  (17,1)=3  (17,3)=2  (17,4)=4  (17,6)=3  (17,8)=2  (17,9)=4  (17,11)=3  (17,13)=2  (17,14)=4  (17,16)=3 
   (3591.1 bits)
data: a background with size (18,18) and color green and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 1000010000100001001000010000100001111111111111111111001000010000100001001000010000100001001000010000100001001000010000100001111111111111111111001000010000100001001000010000100001001000010000100001001000010000100001111111111111111111001000010000100001001000010000100001001000010000100001001000010000100001111111111111111111
  [01]: a rectangle at (1,3) with size (2,2) and color yellow and mask 1001
diff: 
delta: (1,1)=2  (1,4)=5# (1,6)=2  (1,8)=4  (1,9)=5# (1,11)=2  (1,13)=4  (1,14)=5# (1,16)=2  (2,2)=5# (2,3)=2  (2,7)=5# (2,8)=2  (2,9)=4  (2,12)=5# (2,13)=2  (2,14)=4  (2,17)=5# (3,1)=4  (3,2)=2  (3,3)=5# (3,6)=4  (3,7)=2  (3,8)=5# (3,11)=4  (3,12)=2  (3,13)=5# (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,4)=2  (4,6)=5# (4,7)=4  (4,9)=2  (4,11)=5# (4,12)=4  (4,14)=2  (4,16)=5# (4,17)=4  (6,1)=2  (6,3)=4  (6,4)=5# (6,6)=2  (6,8)=4  (6,9)=5# (6,11)=2  (6,13)=4  (6,14)=5# (6,16)=2  (7,2)=5# (7,3)=2  (7,4)=4  (7,7)=5# (7,8)=2  (7,9)=4  (7,12)=5# (7,13)=2  (7,14)=4  (7,17)=5# (8,1)=4  (8,2)=2  (8,3)=5# (8,6)=4  (8,7)=2  (8,8)=5# (8,11)=4  (8,12)=2  (8,13)=5# (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,4)=2  (9,6)=5# (9,7)=4  (9,9)=2  (9,11)=5# (9,12)=4  (9,14)=2  (9,16)=5# (9,17)=4  (11,1)=2  (11,3)=4  (11,4)=5# (11,6)=2  (11,8)=4  (11,9)=5# (11,11)=2  (11,13)=4  (11,14)=5# (11,16)=2  (12,2)=5# (12,3)=2  (12,4)=4  (12,7)=5# (12,8)=2  (12,9)=4  (12,12)=5# (12,13)=2  (12,14)=4  (12,17)=5# (13,1)=4  (13,2)=2  (13,3)=5# (13,6)=4  (13,7)=2  (13,8)=5# (13,11)=4  (13,12)=2  (13,13)=5# (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,4)=2  (14,6)=5# (14,7)=4  (14,9)=2  (14,11)=5# (14,12)=4  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,3)=4  (16,4)=5# (16,6)=2  (16,8)=4  (16,9)=5# (16,11)=2  (16,13)=4  (16,14)=5# (16,16)=2  (17,2)=5# (17,3)=2  (17,4)=4  (17,7)=5# (17,8)=2  (17,9)=4  (17,12)=5# (17,13)=2  (17,14)=4  (17,17)=5#
   (3219.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color grey and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 1000010000100001001000010000100001111111111111111111001000010000100001001000010000100001001000010000100000001000010000100000111111111111110000001000010000100001001000010000100001001000010000100001001000010000100001111100011100111111001000010000100001001000000000100001001000000000100001001000010000100001111111111111100111
diff: 
delta: (0,3)=0  (0,4)=0  (1,1)=2  (1,2)=3  (1,3)=0  (1,4)=0  (1,6)=2  (1,7)=3  (1,8)=4  (1,11)=2  (1,12)=3  (1,13)=4  (1,16)=2  (1,17)=3  (2,1)=3  (2,3)=0  (2,4)=0  (2,6)=3  (2,8)=2  (2,9)=4  (2,10)=0  (2,11)=0  (2,13)=2  (2,14)=4  (2,16)=3  (3,1)=4  (3,2)=2  (3,4)=3  (3,6)=4  (3,7)=2  (3,9)=3  (3,10)=0  (3,11)=0  (3,12)=2  (3,14)=3  (3,16)=4  (3,17)=2  (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=0  (4,7)=0  (4,8)=3  (4,9)=2  (4,12)=4  (4,13)=3  (4,14)=2  (4,17)=4  (5,6)=0  (5,7)=0  (5,11)=0  (5,12)=0  (5,13)=0  (6,1)=2  (6,2)=3  (6,3)=4  (6,6)=2  (6,7)=3  (6,8)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,16)=2  (6,17)=3  (7,1)=3  (7,3)=2  (7,4)=4  (7,6)=3  (7,8)=2  (7,9)=4  (7,11)=3  (7,13)=2  (7,14)=4  (7,16)=3  (8,1)=4  (8,2)=2  (8,4)=3  (8,6)=4  (8,7)=2  (8,9)=3  (8,11)=4  (8,12)=2  (8,14)=3  (8,16)=4  (8,17)=2  (9,2)=4  (9,3)=3  (9,4)=2  (9,7)=4  (9,8)=3  (9,9)=2  (9,12)=4  (9,13)=3  (9,14)=2  (9,17)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,6)=2  (11,7)=3  (11,8)=4  (11,11)=2  (11,12)=3  (11,13)=4  (11,16)=2  (11,17)=3  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=4  (12,6)=3  (12,8)=2  (12,9)=4  (12,11)=3  (12,13)=2  (12,14)=4  (12,16)=3  (13,1)=4  (13,2)=2  (13,4)=3  (13,6)=4  (13,7)=2  (13,9)=3  (13,11)=4  (13,12)=2  (13,14)=3  (13,16)=4  (13,17)=2  (14,2)=4  (14,3)=3  (14,4)=2  (14,7)=4  (14,8)=3  (14,9)=2  (14,12)=4  (14,13)=3  (14,14)=2  (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,6)=2  (16,7)=3  (16,8)=4  (16,11)=2  (16,12)=3  (16,13)=4  (16,16)=2  (16,17)=3  (17,1)=3  (17,3)=2  (17,4)=4  (17,6)=3  (17,8)=2  (17,9)=4  (17,11)=3  (17,13)=2  (17,14)=4  (17,16)=3 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  [0]: a rectangle at (9,1) with size (1,17) and color yellow and mask full
diff: 
delta: (0,7)=0  (0,8)=0  (0,9)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,5)=4  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (7,1)=2  (7,2)=3  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,2)=1  (9,4)=1  (9,6)=1  (9,8)=1  (9,10)=1  (9,12)=1  (9,14)=1  (9,16)=1  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=3  (11,11)=2  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=3  (11,17)=2  (12,7)=0  (12,8)=0  (12,9)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=5# (13,11)=6  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
   (4126.5 bits)
data: a background with size (18,18) and color grey and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 1000001000001001001001001001001010101010101010101001001001001001001000001000001000001111111111111111111000001000001000001001001001001001001010101010101010101001001001001001001000001000001000001111111111111111111000001000001000001001001001001001001010101010101010101001001001001001001000001000001000001111111111111111111
  [01]: a rectangle at (3,1) with size (1,17) and color yellow and mask full
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,7)=2  (1,8)=3  (1,9)=4  (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,17)=6  (2,1)=3  (2,4)=3  (2,7)=3  (2,10)=3  (2,13)=3  (2,16)=3  (4,2)=3  (4,5)=3  (4,8)=3  (4,11)=3  (4,14)=3  (4,17)=3  (5,1)=6  (5,3)=4  (5,4)=3  (5,5)=2  (5,7)=6  (5,9)=4  (5,10)=3  (5,11)=2  (5,13)=6  (5,15)=4  (5,16)=3  (5,17)=2  (7,1)=2  (7,2)=3  (7,3)=4  (7,5)=6  (7,7)=2  (7,8)=3  (7,9)=4  (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,17)=6  (8,1)=3  (8,4)=3  (8,7)=3  (8,10)=3  (8,13)=3  (8,16)=3  (9,1)=4  (9,3)=4  (9,5)=4  (9,7)=4  (9,9)=4  (9,11)=4  (9,13)=4  (9,15)=4  (9,17)=4  (10,2)=3  (10,5)=3  (10,8)=3  (10,11)=3  (10,14)=3  (10,17)=3  (11,1)=6  (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=6  (11,9)=4  (11,10)=3  (11,11)=2  (11,13)=6  (11,15)=4  (11,16)=3  (11,17)=2  (13,1)=2  (13,2)=3  (13,3)=4  (13,5)=6  (13,7)=2  (13,8)=3  (13,9)=4  (13,11)=6  (13,13)=2  (13,14)=3  (13,15)=4  (13,17)=6  (14,1)=3  (14,4)=3  (14,7)=3  (14,10)=3  (14,13)=3  (14,16)=3  (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,2)=3  (16,5)=3  (16,8)=3  (16,11)=3  (16,14)=3  (16,17)=3  (17,1)=6  (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,15)=4  (17,16)=3  (17,17)=2 
   (2872.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  [0]: a rectangle at (9,1) with size (1,17) and color yellow and mask full
diff: 
delta: (0,7)=0  (0,8)=0  (0,9)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,5)=4  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (7,1)=2  (7,2)=3  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,2)=1  (9,4)=1  (9,6)=1  (9,8)=1  (9,10)=1  (9,12)=1  (9,14)=1  (9,16)=1  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=3  (11,11)=2  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=3  (11,17)=2  (12,7)=0  (12,8)=0  (12,9)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=5# (13,11)=6  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 100000010000001000100000010000001000100000010000001111111111111111111000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001110001111111111001000000000000000001000000000000000001000000000000000001000000000000000001000000000010000001000100000010000001111111111111111111
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,6)=6  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,16)=2  (4,17)=6  (5,3)=2  (5,4)=7# (5,5)=5# (5,10)=2  (5,11)=7# (5,16)=4  (5,17)=2  (6,3)=5# (6,4)=4  (6,5)=3  (6,10)=5# (6,11)=4  (6,12)=3  (6,16)=6  (6,17)=5# (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
   (4047.5 bits)
data: a background with size (18,18) and color green and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 100000010000001000100000010000001000100000010000001111111111111111111000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001111111111111111111000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001111111111111111111
  [01]: a rectangle at (1,5) with size (2,2) and color pink and mask 1001
diff: 
delta: (1,1)=2  (1,3)=4  (1,4)=5# (1,6)=7# (1,8)=2  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,17)=4  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,9)=5# (2,10)=7# (2,11)=2  (2,12)=4  (2,13)=6  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,4)=6  (3,5)=2  (3,6)=5# (3,8)=4  (3,9)=7# (3,11)=6  (3,12)=2  (3,13)=5# (3,15)=4  (3,16)=7# (4,1)=5# (4,2)=2  (4,3)=6  (4,5)=7# (4,6)=4  (4,8)=5# (4,9)=2  (4,10)=6  (4,12)=7# (4,13)=4  (4,15)=5# (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=4  (5,3)=2  (5,4)=7# (5,5)=5# (5,8)=6  (5,9)=4  (5,10)=2  (5,11)=7# (5,12)=5# (5,15)=6  (5,16)=4  (5,17)=2  (6,1)=7# (6,2)=6  (6,3)=5# (6,4)=4  (6,6)=2  (6,8)=7# (6,9)=6  (6,10)=5# (6,11)=4  (6,13)=2  (6,15)=7# (6,16)=6  (6,17)=5# (8,1)=2  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,17)=4  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (11,1)=5# (11,2)=2  (11,3)=6  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,17)=4  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7#
   (3990.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 100000010000001000100000010000001000100000010000001111111111111111111000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001000100000010000001110001111111111001000000000000000001000000000000000001000000000000000001000000000000000001000000000010000001000100000010000001111111111111111111
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,6)=6  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,16)=2  (4,17)=6  (5,3)=2  (5,4)=7# (5,5)=5# (5,10)=2  (5,11)=7# (5,16)=4  (5,17)=2  (6,3)=5# (6,4)=4  (6,5)=3  (6,10)=5# (6,11)=4  (6,12)=3  (6,16)=6  (6,17)=5# (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (18,18) and color grey and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 10000000100000001111111111111001111010000000100000001010001000100010001010000000100000001010101010101010101010000000100000001010001000100000001010000000100000001111111111100000111010000000100000001010001000100010001010000000100000001010001010101010101010000000100000001010001000100010001010000000100000001111111111111111111
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,3)=7# (2,5)=3  (2,7)=7# (2,9)=3  (2,11)=7# (2,13)=3  (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,14)=0  (4,15)=0  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,3)=3  (6,5)=7# (6,7)=3  (6,9)=7# (6,11)=3  (6,13)=7# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (9,1)=2  (9,2)=3  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,3)=7# (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=3  (10,11)=7# (10,13)=3  (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,6)=0  (13,7)=0  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,3)=3  (14,5)=7# (14,6)=0  (14,7)=0  (14,9)=7# (14,11)=3  (14,13)=7# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=0  (15,5)=0  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,4)=0  (16,5)=0  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
   (3629.6 bits)
data: a background with size (18,18) and color grey and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 10000000100000001111111111111111111010000000100000001010001000100010001010000000100000001010101010101010101010000000100000001010001000100010001010000000100000001111111111111111111010000000100000001010001000100010001010000000100000001010101010101010101010000000100000001010001000100010001010000000100000001111111111111111111
  [01]: a rectangle at (2,1) with size (1,17) and color green and mask full
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,2)=5# (2,3)=7# (2,6)=5# (2,7)=7# (2,10)=5# (2,11)=7# (2,14)=5# (2,15)=7# (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=3  (3,15)=6  (3,17)=4  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=7# (5,15)=4  (5,17)=6  (6,1)=7# (6,3)=3  (6,5)=7# (6,7)=3  (6,9)=7# (6,11)=3  (6,13)=7# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (9,1)=2  (9,2)=3  (9,3)=4  (9,5)=6  (9,6)=7# (9,7)=8  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,3)=7# (10,5)=3  (10,7)=7# (10,9)=3  (10,11)=7# (10,13)=3  (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,6)=7# (13,7)=4  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,3)=3  (14,5)=7# (14,7)=3  (14,9)=7# (14,11)=3  (14,13)=7# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,5)=4  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
   (3373.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color grey and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 10000000100000001111111111111001111010000000100000001010001000100010001010000000100000001010101010101010101010000000100000001010001000100000001010000000100000001111111111100000111010000000100000001010001000100010001010000000100000001010001010101010101010000000100000001010001000100010001010000000100000001111111111111111111
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,3)=7# (2,5)=3  (2,7)=7# (2,9)=3  (2,11)=7# (2,13)=3  (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,14)=0  (4,15)=0  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,3)=3  (6,5)=7# (6,7)=3  (6,9)=7# (6,11)=3  (6,13)=7# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (9,1)=2  (9,2)=3  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,3)=7# (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=3  (10,11)=7# (10,13)=3  (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,6)=0  (13,7)=0  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,3)=3  (14,5)=7# (14,6)=0  (14,7)=0  (14,9)=7# (14,11)=3  (14,13)=7# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=0  (15,5)=0  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,4)=0  (16,5)=0  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color blue and mask 1000000001000000001000000001001001001001000001000000001000000001000000001000000001001001001001001001000000001000000001000000001000000001111111111111111111000000000000000001000000000000000001000000000001000001000000001000000001000000001000000001001001001001001001000000001000000001000000001000000001110001111111111111
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,8)=9# (1,10)=2  (1,11)=3  (1,12)=4  (1,16)=8  (1,17)=9# (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=9# (2,5)=2  (2,6)=4  (2,7)=6  (2,8)=8  (2,10)=3  (2,11)=5# (2,12)=7# (2,16)=6  (2,17)=8  (3,1)=4  (3,2)=7# (3,4)=4  (3,5)=7# (3,7)=4  (3,8)=7# (3,10)=4  (3,11)=7# (3,13)=4  (3,14)=7# (3,16)=4  (3,17)=7# (4,1)=5# (4,2)=9# (4,3)=4  (4,4)=8  (4,5)=3  (4,6)=7# (4,7)=2  (4,8)=6  (4,10)=5# (4,11)=9# (4,12)=4  (4,13)=8  (4,14)=3  (4,15)=7# (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=2  (5,6)=4  (5,7)=9# (5,8)=5# (5,10)=6  (5,11)=2  (5,12)=7# (5,16)=9# (5,17)=5# (6,1)=7# (6,2)=4  (6,7)=7# (6,8)=4  (6,16)=7# (6,17)=4  (7,1)=8  (7,2)=6  (7,6)=7# (7,7)=5# (7,8)=3  (7,13)=2  (7,14)=9# (7,15)=7# (7,16)=5# (7,17)=3  (8,1)=9# (8,2)=8  (8,6)=4  (8,7)=3  (8,8)=2  (8,13)=6  (8,14)=5# (8,15)=4  (8,16)=3  (8,17)=2  (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,5)=6  (10,6)=7# (10,7)=8  (10,8)=9# (10,10)=2  (10,11)=3  (10,12)=4  (10,13)=5# (10,14)=6  (10,15)=7# (10,16)=8  (10,17)=9# (11,1)=3  (11,2)=5# (11,3)=7# (11,4)=9# (11,5)=2  (11,6)=4  (11,7)=6  (11,8)=8  (11,10)=3  (11,11)=5# (11,12)=7# (11,13)=9# (11,14)=2  (11,15)=4  (11,16)=6  (11,17)=8  (12,1)=4  (12,2)=7# (12,4)=4  (12,5)=7# (12,7)=4  (12,8)=7# (12,10)=4  (12,11)=7# (12,13)=4  (12,14)=7# (12,16)=4  (12,17)=7# (13,4)=8  (13,5)=3  (13,6)=7# (13,7)=2  (13,8)=6  (13,10)=5# (13,11)=9# (13,12)=4  (13,13)=8  (13,14)=3  (13,15)=7# (13,16)=2  (13,17)=6  (14,4)=3  (14,5)=8  (14,6)=4  (14,7)=9# (14,8)=5# (14,10)=6  (14,11)=2  (14,12)=7# (14,13)=3  (14,14)=8  (14,15)=4  (14,16)=9# (14,17)=5# (15,4)=7# (15,5)=4  (15,7)=7# (15,8)=4  (15,10)=7# (15,11)=4  (15,13)=7# (15,14)=4  (15,16)=7# (15,17)=4  (16,4)=2  (16,5)=9# (16,6)=7# (16,7)=5# (16,8)=3  (16,10)=8  (16,11)=6  (16,12)=4  (16,13)=2  (16,14)=9# (16,15)=7# (16,16)=5# (16,17)=3  (17,1)=9# (17,2)=8  (17,3)=7# (17,4)=6  (17,5)=5# (17,6)=4  (17,7)=3  (17,8)=2  (17,10)=9# (17,11)=8  (17,12)=7# (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
! size mismatch, 10x10 instead of 18x18

TEST 29ec7d0e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 134558.1 bits (134558.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-339] Checking task 2bcee788.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5449.1 = 5458.1
DL output with Mo: L = 9.0 + 7322.3 = 7331.3
DL input+output M: L = 17.9 + 12771.5 = 12789.4

# learning a model for train pairs
12789.4	
8373.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6740.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5969.3	OUT DEF: size={size}
5470.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5156.5	OUT DEF: color=green
4970.6	OUT DEF: layer[0].color={layer[0].color}
4786.2	IN  DEF: layer[01].color=red
4692.3	IN  DEF: layer[01].mask=full
4632.1	IN  DEF: color=black
4583.9	OUT DEF: layer[0].pos=(?,?)
4535.6	OUT DEF: layer[0].size=(?,?)
4487.4	IN  DEF: size=(?,?)
4134.4	IN  DEF: size.i=10
3781.4	IN  DEF: size.j=10
3733.2	IN  DEF: layer[0].pos=(?,?)
3685.0	IN  DEF: layer[0].size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color green and layers
  [0]: a rectangle at (?,?) with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at ? with size ? and color red and mask full

DL input  with Mi: L = 67.0 + 2069.1 = 2136.1
DL output with Mo: L = 40.2 + 1508.6 = 1548.8
DL input+output M: L = 107.2 + 3577.7 = 3685.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (3,3) and color yellow and mask 100111100
  [01]: a rectangle at (3,5) with size (3,1) and color red and mask full
diff: 
delta:
   (56.0 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (3,2) with size (3,6) and color yellow and mask 1100111111001100
diff: 
delta:
   (42.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (3,3) and color yellow and mask 100111100
  [01]: a rectangle at (3,5) with size (3,1) and color red and mask full
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,5) with size (3,1) and color red and mask full
  [01]: a rectangle at (3,2) with size (3,3) and color yellow and mask 100111100
diff:   layer[01].mask  layer[01].color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (3,3) and color pink and mask 110010011
  [01]: a rectangle at (3,3) with size (1,2) and color red and mask full
diff: 
delta:
   (54.8 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (1,3) with size (6,3) and color pink and mask 110010011011010110
diff: 
delta:
   (42.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (3,3) and color pink and mask 110010011
  [01]: a rectangle at (3,3) with size (1,2) and color red and mask full
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (1,2) and color red and mask full
  [01]: a rectangle at (4,3) with size (3,3) and color pink and mask 110010011
diff:   layer[01].mask  layer[01].color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color orange and mask 1101
  [01]: a rectangle at (4,3) with size (2,1) and color red and mask full
diff: 
delta:
   (47.5 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (4,2) with size (2,4) and color orange and mask 11110110
diff: 
delta:
   (30.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color orange and mask 1101
  [01]: a rectangle at (4,3) with size (2,1) and color red and mask full
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 2bcee788.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (2,3) and color cyan and mask 100111
  [01]: a rectangle at (6,5) with size (1,1) and color red and mask full
diff: 
delta:
   (48.6 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (4,3) with size (4,3) and color cyan and mask 111100100111
diff: 
delta:
   (35.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (2,3) and color cyan and mask 100111
  [01]: a rectangle at (6,5) with size (1,1) and color red and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,5) with size (1,1) and color red and mask full
  [01]: a rectangle at (4,3) with size (2,3) and color cyan and mask 100111
diff:   layer[01].mask  layer[01].color
delta:
! 12 wrong pixels (generated / expected)

TRAIN 2bcee788.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (3,2) and color blue and mask 101101
  [01]: a rectangle at (4,6) with size (2,1) and color red and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,6) with size (2,1) and color red and mask full
  [01]: a rectangle at (3,4) with size (3,2) and color blue and mask 101101
diff:   layer[01].mask  layer[01].color
delta:
! 12 wrong pixels (generated / expected)

TEST 2bcee788.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1508.6 bits (1508.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-338] Checking task 2bee17df.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 32938.9 = 32947.8
DL output with Mo: L = 9.0 + 46388.1 = 46397.1
DL input+output M: L = 17.9 + 79327.0 = 79344.9

# learning a model for train pairs
79344.9	
65623.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
52826.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
41228.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
29672.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21351.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
20752.5	OUT DEF: size={size}
20181.4	OUT DEF: layer[011].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 8509.7 = 8553.0
DL output with Mo: L = 60.2 + 11568.2 = 11628.4
DL input+output M: L = 103.6 + 20077.8 = 20181.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,12) and color red and mask 100000000000100000000000100000000000100000000000101100100000111110110000111111111111
  [01]: a rectangle at (1,1) with size (10,10) and color black and mask 110001100111001111011111111111111111111111111111111111111111111111111111111111111111111111111111111
diff: 
delta:
   (286.5 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,1) with size (6,10) and color green and mask full
  [01]: a rectangle at (1,0) with size (11,12) and color cyan and mask 111111111111110011100111100011000011111111111111111111111111011111111111011111111111011111111111011111111111000000000001000000000001
  [011]: a rectangle at (0,0) with size (7,12) and color red and mask 111111111111111111111111111111111111111111111111101100100001111110110001111111111111
diff: 
delta: (1,3)=3  (2,3)=3  (9,3)=3  (10,3)=3 
   (386.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,12) and color red and mask 100000000000100000000000100000000000100000000000101100100000111110110000111111111111
  [01]: a rectangle at (1,1) with size (10,10) and color black and mask 110001100111001111011111111111111111111111111111111111111111111111111111111111111111111111111111111
diff: 
delta:
! 135 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,0) with size (11,12) and color cyan and mask 111111111111110011100111100011000011100000000001100000000001000000000001000000000001000000000001000000000001000000000001000000000001
  [01]: a rectangle at (0,0) with size (7,12) and color red and mask 100000000001100000000001100000000001100000000001101100100001111110110001111111111111
diff: 
delta:
! 144 wrong pixels (generated / expected)

TRAIN 2bee17df.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color red and layers
  [0]: a rectangle at (0,0) with size (9,12) and color cyan and mask 100000000000100000000000100000000000100000000000100000000000100010000000100110000000111111000000111111111111
  [01]: a rectangle at (1,1) with size (10,10) and color black and mask 11011010011111111111111111111111111110111111111011111111001111111111111111111111111111101111111111
diff: 
delta:
   (311.2 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (10,10) and color green and mask 11000000001100011111111110000011000000001100000000110001111111111000001100000000110000000011000
  [01]: a rectangle at (1,0) with size (11,12) and color red and mask 111111111111111001111011110000110001011111111111000000110011000000110011000000110111011111111111000000110001000000110011000000110001
  [011]: a rectangle at (0,0) with size (9,12) and color cyan and mask 111111111111100000110011100000110011100000110111111111111111100010110001100110110011111111110001111111111111
diff: 
delta:
   (435.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color red and layers
  [0]: a rectangle at (0,0) with size (9,12) and color cyan and mask 100000000000100000000000100000000000100000000000100000000000100010000000100110000000111111000000111111111111
  [01]: a rectangle at (1,1) with size (10,10) and color black and mask 11011010011111111111111111111111111110111111111011111111001111111111111111111111111111101111111111
diff: 
delta:
! 134 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color cyan and layers
  [0]: a rectangle at (1,0) with size (11,12) and color red and mask 111111111111111001001011110000000001000000000001000000000011000000000011000000000111000000000001000000000001000000000011000000000001
  [01]: a rectangle at (1,1) with size (10,10) and color black and mask 1111111111111111111111111111111111111111111111111111111111111111111111111011111111001111110000011111
diff: 
delta:
! 144 wrong pixels (generated / expected)

TRAIN 2bee17df.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (0,1) with size (10,9) and color red and mask 111111111111110001101100000100000000100000000110000000110000000100000000100000000100000000
  [01]: a rectangle at (1,1) with size (8,8) and color black and mask 1111111111111111111111111111111111111111111111101111011010100100
diff: 
delta:
   (253.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (10,9) and color red and mask 111111111111110001101100000100000000100000000110000000110000000100000000100000000100000000
  [01]: a rectangle at (1,1) with size (8,8) and color green and mask 1111010101100100111111111111111110000100100001000000010000000100
  [011]: a rectangle at (0,0) with size (10,9) and color cyan and mask 111111111111101011011001001111111111111111111100001001100001011000011011010111111111111111
diff: 
delta:
   (335.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (0,1) with size (10,9) and color red and mask 111111111111110001101100000100000000100000000110000000110000000100000000100000000100000000
  [01]: a rectangle at (1,1) with size (8,8) and color black and mask 1111111111111111111111111111111111111111111111101111011010100100
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 2bee17df.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,0) with size (14,14) and color cyan and mask 100000000000011000000000000110000000000000100000000000011000000000000110000000000001100000000000001000000000000110000000000011100000000000001000000000001110010011100111111111111111111
  [01]: a rectangle at (1,1) with size (13,13) and color red and mask 1111111111111111000011010111000000000011000000000000100000000000110000000000011000000000001100000000000011100000000011100000000011100000000000010000000000111110011100111
diff: 
delta:
! 196 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (1,1) with size (13,13) and color red and mask 1111111111111111000011010011000000000001000000000000100000000000010000000000001000000000000100000000000011100000000001100000000000100000000000010000000000001100000000000
  [01]: a rectangle at (0,0) with size (14,14) and color cyan and mask 1111111111111111100001101011110000000000111000000000000110000000000011100000000000111000000000001110000000000001111000000000111100000000011110000000000001100000000001111110011100111111111111111111
diff: 
delta:
! 196 wrong pixels (generated / expected)

TEST 2bee17df.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 11568.2 bits (11568.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-337] Checking task 2c608aff.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13934.4 = 13943.3
DL output with Mo: L = 9.0 + 17818.2 = 17827.2
DL input+output M: L = 17.9 + 31752.6 = 31770.5

# learning a model for train pairs
31770.5	
25023.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18348.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14528.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12703.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11884.1	OUT DEF: size={size}
11339.0	OUT DEF: layer[0].size={layer[0].size}
10598.3	OUT DEF: layer[0]={layer[0]}
10279.1	OUT DEF: color={color}
10185.2	OUT DEF: layer[01].mask=full
10091.4	IN  DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 42.4 + 5235.0 = 5277.3
DL output with Mo: L = 28.8 + 4785.3 = 4814.0
DL input+output M: L = 71.1 + 10020.2 = 10091.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,12) and color cyan and layers
  [0]: a rectangle at (1,2) with size (4,3) and color green and mask full
  [01]: a rectangle at (3,9) with size (1,1) and color yellow and mask full
diff: 
delta: (7,7)=4 
   (99.3 bits)
data: a background with size (9,12) and color cyan and layers
  [0]: a rectangle at (1,2) with size (4,3) and color green and mask full
  [01]: a rectangle at (3,5) with size (1,5) and color yellow and mask full
diff: 
delta: (7,7)=4 
   (45.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,12) and color cyan and layers
  [0]: a rectangle at (1,2) with size (4,3) and color green and mask full
  [01]: a rectangle at (3,9) with size (1,1) and color yellow and mask full
diff: 
delta: (7,7)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,12) and color cyan and layers
  [0]: a rectangle at (0,8) with size (9,1) and color cyan and mask full
  [01]: a rectangle at (1,2) with size (4,3) and color green and mask full
diff: 
delta: (3,9)=4  (7,7)=4 
! 22 wrong pixels (generated / expected)

TRAIN 2c608aff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color red and layers
  [0]: a rectangle at (2,3) with size (3,3) and color blue and mask full
  [01]: a rectangle at (8,3) with size (1,1) and color cyan and mask full
diff: 
delta:
   (79.4 bits)
data: a background with size (10,12) and color red and layers
  [0]: a rectangle at (2,3) with size (3,3) and color blue and mask full
  [01]: a rectangle at (5,3) with size (4,1) and color cyan and mask full
diff: 
delta:
   (25.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color red and layers
  [0]: a rectangle at (2,3) with size (3,3) and color blue and mask full
  [01]: a rectangle at (8,3) with size (1,1) and color cyan and mask full
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color red and layers
  [0]: a rectangle at (8,3) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (2,3) with size (3,3) and color blue and mask full
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,12) and color red and layers
  [0]: a rectangle at (9,0) with size (1,12) and color red and mask full
  [01]: a rectangle at (2,3) with size (3,3) and color blue and mask full
diff: 
delta: (8,3)=8 
! 17 wrong pixels (generated / expected)

TRAIN 2c608aff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color blue and layers
  [0]: a rectangle at (4,3) with size (4,4) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (14,1) and color blue and mask full
diff: 
delta: (0,4)=2  (6,10)=2  (11,1)=2 
   (149.6 bits)
data: a background with size (14,12) and color blue and layers
  [0]: a rectangle at (4,3) with size (4,4) and color yellow and mask full
  [01]: a rectangle at (6,7) with size (1,4) and color red and mask full
diff: 
delta: (0,4)=2  (1,4)=2  (2,4)=2  (3,4)=2  (11,1)=2 
   (122.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color blue and layers
  [0]: a rectangle at (4,3) with size (4,4) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (14,1) and color blue and mask full
diff: 
delta: (0,4)=2  (6,10)=2  (11,1)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color blue and layers
  [0]: a rectangle at (0,0) with size (14,1) and color blue and mask full
  [01]: a rectangle at (4,3) with size (4,4) and color yellow and mask full
diff: 
delta: (0,4)=2  (6,10)=2  (11,1)=2 
! 27 wrong pixels (generated / expected)

TRAIN 2c608aff.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,18) and color blue and layers
  [0]: a rectangle at (0,16) with size (14,2) and color blue and mask full
  [01]: a rectangle at (5,7) with size (4,5) and color grey and mask full
diff: 
delta: (1,8)=4  (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
   (195.3 bits)
data: a background with size (14,18) and color blue and layers
  [0]: a rectangle at (0,16) with size (14,2) and color blue and mask full
  [01]: a rectangle at (5,7) with size (4,5) and color grey and mask full
diff: 
delta: (1,8)=4  (2,8)=4  (3,8)=4  (3,11)=4  (4,8)=4  (4,11)=4  (4,15)=4  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (11,13)=4 
   (284.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color blue and layers
  [0]: a rectangle at (0,16) with size (14,2) and color blue and mask full
  [01]: a rectangle at (5,7) with size (4,5) and color grey and mask full
diff: 
delta: (1,8)=4  (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 37 wrong pixels (generated / expected)

TRAIN 2c608aff.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color red and layers
  [0]: a rectangle at (5,7) with size (6,8) and color cyan and mask full
  [01]: a rectangle at (11,0) with size (2,21) and color red and mask full
diff: 
delta: (1,9)=1  (2,2)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,21) and color red and layers
  [0]: a rectangle at (14,12) with size (5,9) and color red and mask full
  [01]: a rectangle at (5,7) with size (6,8) and color cyan and mask full
diff: 
delta: (1,9)=1  (2,2)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 79 wrong pixels (generated / expected)

TEST 2c608aff.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4785.3 bits (4785.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-336] Checking task 2dc579da.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8800.4 = 8809.4
DL output with Mo: L = 9.0 + 1100.3 = 1109.3
DL input+output M: L = 17.9 + 9900.7 = 9918.6

# learning a model for train pairs
9918.6	
5429.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4174.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3935.3	OUT DEF: color={color}
3815.7	IN  SHAPE at layer[011]: a point at ? with color ?
3745.0	IN  DEF: layer[0].mask=full
3674.4	IN  DEF: layer[01].mask=full
3639.4	OUT DEF: size=(?,?)
3474.3	OUT DEF: size.i={layer[0].pos.i}
3309.3	OUT DEF: size.j={layer[01].pos.j}
3274.3	IN  DEF: size=(?,?)
3239.2	IN  DEF: layer[0].pos=(?,?)
3116.6	IN  DEF: layer[0].pos.j=0
3081.6	IN  DEF: layer[0].size=(?,?)
3010.9	IN  DEF: layer[0].size.i=1
2975.9	IN  DEF: layer[01].pos=(?,?)
2853.3	IN  DEF: layer[01].pos.i=0
2818.3	IN  DEF: layer[01].size=(?,?)
2747.6	IN  DEF: layer[01].size.j=1
2712.6	IN  DEF: layer[011].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({layer[0].pos.i},{layer[01].pos.j}) and color {color} and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,0) with size (1,?) and color ? and mask full
  [01]: a rectangle at (0,?) with size (?,1) and color ? and mask full
  [011]: a point at (?,?) with color ?

DL input  with Mi: L = 82.8 + 2124.8 = 2207.7
DL output with Mo: L = 18.9 + 486.1 = 504.9
DL input+output M: L = 101.7 + 2610.9 = 2712.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (2,0) with size (1,5) and color green and mask full
  [01]: a rectangle at (0,2) with size (5,1) and color green and mask full
  [011]: a point at (4,0) with color yellow
diff: 
delta:
   (64.3 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta: (1,0)=4 
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (2,0) with size (1,5) and color green and mask full
  [01]: a rectangle at (0,2) with size (5,1) and color green and mask full
  [011]: a point at (4,0) with color yellow
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (3,0) with size (1,2) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color green and mask 10000111111110010000100
  [011]: a point at (4,0) with color yellow
diff:   layer[01].mask  layer[01].size.j
delta:
! size mismatch, 3x0 instead of 2x2
>> Trial 3
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (2,0) with size (1,5) and color green and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color green and mask 10000100111110010000100
  [011]: a point at (4,0) with color yellow
diff:   layer[01].mask  layer[01].size.j
delta:
! size mismatch, 2x0 instead of 2x2

TRAIN 2dc579da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (3,0) with size (1,7) and color red and mask full
  [01]: a rectangle at (0,3) with size (7,1) and color red and mask full
  [011]: a point at (1,5) with color blue
diff: 
delta:
   (70.2 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (1,1)=1 
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (3,0) with size (1,7) and color red and mask full
  [01]: a rectangle at (0,3) with size (7,1) and color red and mask full
  [011]: a point at (1,5) with color blue
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask 1000000100000010001111111000100000010000001000
  [01]: a rectangle at (0,4) with size (3,1) and color yellow and mask full
  [011]: a point at (1,5) with color blue
diff:   layer[0].mask  layer[0].size.i
delta:
! size mismatch, 0x4 instead of 3x3
>> Trial 3
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask 1000000100000010001111111000100000010000001000
  [01]: a rectangle at (0,6) with size (3,1) and color yellow and mask full
  [011]: a point at (1,5) with color blue
diff:   layer[0].mask  layer[0].size.i
delta:
! size mismatch, 0x6 instead of 3x3

TRAIN 2dc579da.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (5,0) with size (1,11) and color blue and mask full
  [01]: a rectangle at (0,5) with size (11,1) and color blue and mask full
  [011]: a point at (2,1) with color cyan
diff: 
delta:
   (78.0 bits)
data: a background with size (5,5) and color green and layers
diff: 
delta: (2,1)=8 
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (5,0) with size (1,11) and color blue and mask full
  [01]: a rectangle at (0,5) with size (11,1) and color blue and mask full
  [011]: a point at (2,1) with color cyan
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (0,0) with size (11,11) and color blue and mask 10000000000100000000001000000000010000000000100000111111111110000010000000000100000000001000000000010000000000100000
  [01]: a rectangle at (0,0) with size (5,1) and color green and mask full
  [011]: a point at (2,1) with color cyan
diff:   layer[0].mask  layer[0].size.i
delta:
! size mismatch, 0x0 instead of 5x5
>> Trial 3
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (5,0) with size (1,11) and color blue and mask full
  [01]: a rectangle at (0,0) with size (11,11) and color blue and mask 10000000000100000000001000000000010000000000100000111111111110000010000000000100000000001000000000010000000000100000
  [011]: a point at (2,1) with color cyan
diff:   layer[01].mask  layer[01].size.j
delta:
! size mismatch, 5x0 instead of 5x5

TRAIN 2dc579da.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color blue and layers
  [0]: a rectangle at (6,0) with size (1,13) and color black and mask full
  [01]: a rectangle at (0,6) with size (13,1) and color black and mask full
  [011]: a point at (3,8) with color red
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 2dc579da.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 486.1 bits (486.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-335] Checking task 2dd70a9a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 40530.6 = 40539.6
DL output with Mo: L = 9.0 + 48915.9 = 48924.9
DL input+output M: L = 17.9 + 89446.5 = 89464.5

# learning a model for train pairs
89464.5	
73487.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
57630.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
51730.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
47641.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
43570.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 20568.7 = 20612.0
DL output with Mo: L = 59.8 + 22898.9 = 22958.7
DL input+output M: L = 103.1 + 43467.6 = 43570.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (8,3) with size (12,17) and color cyan and mask 1110000100111101000011100101000101100000100010000000101010110100000000111100011100010100100101010000100100010000110001100101110011100011111111110000100000110100101110001100000100100000011000001000000000
  [01]: a rectangle at (0,10) with size (6,6) and color cyan and mask 1000001010111111011100101000111010
diff: 
delta: (0,4)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,17)=8  (0,19)=8  (1,1)=8  (1,7)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,6)=8  (2,8)=8  (2,17)=2  (3,0)=8  (3,2)=8  (3,3)=8  (3,17)=2  (4,0)=8  (4,3)=8  (4,4)=8  (5,3)=8  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8 
   (1056.6 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (8,3) with size (12,17) and color cyan and mask 1110000100111101000011100101000101100000100010000000101010110100000000111100011100010100100101010000100100010000110001100101110011100011111111110000100000110100101110001100000100100000011000001000000000
  [01]: a rectangle at (0,10) with size (6,6) and color cyan and mask 1000001010111111011100101000111010
  [011]: a rectangle at (4,3) with size (12,15) and color green and mask 1111000111001100100101010001010001000011001001011100111001111111110000101011010010111001000001001000001000001000000001000000000000001111111111111111100010000000000100010100000000
diff: 
delta: (0,4)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,17)=8  (0,19)=8  (1,1)=8  (1,7)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,6)=8  (2,8)=8  (2,17)=2  (3,0)=8  (3,2)=8  (3,3)=8  (3,17)=2  (4,0)=8  (4,3)=8  (4,4)=8  (5,3)=8  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (10,1)=8  (11,0)=8  (16,1)=8 
   (1237.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (8,3) with size (12,17) and color cyan and mask 1110000100111101000011100101000101100000100010000000101010110100000000111100011100010100100101010000100100010000110001100101110011100011111111110000100000110100101110001100000100100000011000001000000000
  [01]: a rectangle at (0,10) with size (6,6) and color cyan and mask 1000001010111111011100101000111010
diff: 
delta: (0,4)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,17)=8  (0,19)=8  (1,1)=8  (1,7)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,6)=8  (2,8)=8  (2,17)=2  (3,0)=8  (3,2)=8  (3,3)=8  (3,17)=2  (4,0)=8  (4,3)=8  (4,4)=8  (5,3)=8  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8 
! size mismatch, 10x10 instead of 20x20

TRAIN 2dd70a9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,1) with size (2,1) and color green and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111110111111101111110110111111011001111111011111111101010110111111110111111111111110110111111111
diff: 
delta: (6,5)=2  (7,5)=2 
   (227.9 bits)
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,1) with size (5,5) and color green and mask 1000010000111110000100001
  [01]: a rectangle at (6,5) with size (2,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111110111111101111111110111111111001111111011111111101010110111111110111111111111110110111111111
diff: 
delta:
   (247.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,1) with size (2,1) and color green and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111110111111101111110110111111011001111111011111111101010110111111110111111111111110110111111111
diff: 
delta: (6,5)=2  (7,5)=2 
! 27 wrong pixels (generated / expected)

TRAIN 2dd70a9a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (10,4) with size (5,10) and color cyan and mask 110010010110000000101011110001010000111000
  [01]: a rectangle at (0,3) with size (4,5) and color cyan and mask 10100011100100110100
diff: 
delta: (0,10)=8  (0,13)=8  (1,11)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,11)=8  (2,12)=8  (2,13)=8  (4,9)=8  (4,13)=8  (5,1)=3  (5,2)=3  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,1)=8  (7,2)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (8,1)=8  (9,0)=8  (9,1)=2  (9,2)=2  (9,13)=8  (10,0)=8  (11,1)=8  (13,14)=8  (14,1)=8 
   (772.3 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (10,4) with size (5,10) and color cyan and mask 110010010110000000101011110001010000111000
  [01]: a rectangle at (5,1) with size (5,7) and color green and mask 11111001000000100000010000001111111
  [011]: a rectangle at (0,3) with size (4,5) and color cyan and mask 10100011100100110100
diff: 
delta: (0,10)=8  (0,13)=8  (1,11)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,11)=8  (2,12)=8  (2,13)=8  (4,9)=8  (4,13)=8  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,1)=8  (7,2)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (8,1)=8  (9,0)=8  (9,1)=2  (9,2)=2  (9,13)=8  (10,0)=8  (11,1)=8  (13,14)=8  (14,1)=8 
   (804.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (10,4) with size (5,10) and color cyan and mask 110010010110000000101011110001010000111000
  [01]: a rectangle at (0,3) with size (4,5) and color cyan and mask 10100011100100110100
diff: 
delta: (0,10)=8  (0,13)=8  (1,11)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,11)=8  (2,12)=8  (2,13)=8  (4,9)=8  (4,13)=8  (5,1)=3  (5,2)=3  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,1)=8  (7,2)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (8,1)=8  (9,0)=8  (9,1)=2  (9,2)=2  (9,13)=8  (10,0)=8  (11,1)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 2dd70a9a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (0,0) with size (6,4) and color cyan and mask 100001000100001000011111
  [01]: a rectangle at (5,10) with size (4,1) and color cyan and mask full
diff: 
delta: (0,9)=8  (0,10)=8  (1,5)=8  (1,6)=2  (1,7)=2  (2,4)=8  (2,5)=8  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (7,0)=8  (7,2)=8  (7,3)=3  (7,4)=3  (8,1)=8  (8,2)=8  (8,5)=8  (9,6)=8  (9,7)=8  (10,1)=8  (10,2)=8  (10,6)=8  (11,3)=8  (12,11)=8 
! size mismatch, 10x10 instead of 13x13

TEST 2dd70a9a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 22898.9 bits (22898.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-334] Checking task 2dee498d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9630.1 = 9639.1
DL output with Mo: L = 9.0 + 3368.0 = 3376.9
DL input+output M: L = 17.9 + 12998.1 = 13016.0

# learning a model for train pairs
13016.0	
12312.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10752.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10673.8	OUT SHAPE at layer[0]: a point at ? with color ?
10376.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10165.9	OUT DEF: layer[01].pos={layer[01].pos}
10026.5	OUT DEF: layer[01].color={layer[01].color}
9888.5	OUT DEF: layer[0].color=blue
9815.0	IN  SHAPE at layer[00]: a point at ? with color ?
9737.5	IN  SHAPE at layer[001]: a point at ? with color ?
9666.8	OUT DEF: layer[01].mask=full
9596.2	IN  DEF: layer[01].mask=full
9458.2	IN  DEF: layer[001].color=blue
9388.1	IN  SHAPE at layer[010]: a rectangle at ? with size ? and color ? and mask ?
9353.1	OUT DEF: size=(?,?)
9192.8	OUT DEF: size.i={size.i}
9033.9	OUT DEF: size.j={size.i}
8998.9	OUT DEF: layer[0].pos=(?,?)
8916.7	OUT DEF: layer[0].pos.j={layer[01].pos.i}
8841.8	OUT DEF: layer[0].pos.i={layer[010].size.i - layer[01].size.i}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i},{size.i}) and color ? and layers
  [0]: a point at ({layer[010].size.i - layer[01].size.i},{layer[01].pos.i}) with color blue
  [01]: a rectangle at {layer[01].pos} with size ? and color {layer[01].color} and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a point at ? with color blue
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [010]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 79.2 + 6865.3 = 6944.5
DL output with Mo: L = 65.5 + 1831.8 = 1897.3
DL input+output M: L = 144.7 + 8697.1 = 8841.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,9) and color blue and layers
  [00]: a point at (0,0) with color yellow
  [001]: a point at (0,8) with color blue
  [0]: a rectangle at (0,0) with size (3,9) and color grey and mask 10010010111111111110010011
  [010]: a rectangle at (0,5) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (2,2) with size (1,2) and color yellow and mask full
diff: 
delta: (2,8)=4 
   (166.4 bits)
data: a background with size (3,3) and color grey and layers
  [0]: a point at (0,2) with color blue
  [01]: a rectangle at (2,2) with size (1,1) and color yellow and mask full
diff: 
delta: (0,0)=4  (2,0)=1 
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color yellow and layers
  [00]: a point at (0,0) with color yellow
  [001]: a point at (0,8) with color blue
  [0]: a rectangle at (0,0) with size (3,9) and color grey and mask 10010010111111111110010011
  [010]: a rectangle at (0,2) with size (1,2) and color blue and mask full
  [01]: a rectangle at (2,5) with size (1,2) and color blue and mask full
diff: 
delta: (2,0)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,9) and color blue and layers
  [00]: a point at (0,0) with color yellow
  [001]: a point at (0,8) with color blue
  [0]: a rectangle at (0,0) with size (3,9) and color grey and mask 10010010111111111110010011
  [010]: a rectangle at (0,5) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (2,2) with size (1,2) and color yellow and mask full
diff: 
delta: (2,8)=4 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,9) and color blue and layers
  [00]: a point at (0,0) with color yellow
  [001]: a point at (0,8) with color blue
  [0]: a rectangle at (0,0) with size (3,9) and color grey and mask 10010010111111111110010011
  [010]: a rectangle at (2,2) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (0,5) with size (1,2) and color yellow and mask full
diff: 
delta: (2,8)=4 
! 9 wrong pixels (generated / expected)

TRAIN 2dee498d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,12) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a point at (0,3) with color blue
  [0]: a rectangle at (0,4) with size (4,4) and color blue and mask 1001001001000
  [010]: a rectangle at (0,4) with size (4,4) and color red and mask 1001011001101001
  [01]: a rectangle at (1,0) with size (2,12) and color yellow and mask full
diff: 
delta: (0,8)=2  (0,11)=1  (1,1)=2  (1,2)=1  (1,9)=2  (1,10)=1  (2,1)=1  (2,2)=2  (2,9)=1  (2,10)=2  (3,0)=1  (3,3)=2  (3,8)=1  (3,11)=2 
   (403.7 bits)
data: a background with size (4,4) and color black and layers
  [0]: a point at (2,1) with color blue
  [01]: a rectangle at (1,0) with size (2,4) and color yellow and mask full
diff: 
delta: (0,0)=2  (0,3)=1  (1,1)=2  (1,2)=1  (2,2)=2  (3,0)=1  (3,3)=2 
   (123.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,12) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a point at (0,3) with color blue
  [0]: a rectangle at (1,3) with size (2,2) and color yellow and mask full
  [010]: a rectangle at (0,4) with size (4,4) and color blue and mask 1001101011000
  [01]: a rectangle at (1,0) with size (2,12) and color yellow and mask full
diff: 
delta: (0,4)=2  (0,8)=2  (0,11)=1  (1,1)=2  (1,2)=1  (1,5)=2  (1,9)=2  (1,10)=1  (2,1)=1  (2,2)=2  (2,6)=2  (2,9)=1  (2,10)=2  (3,0)=1  (3,3)=2  (3,7)=2  (3,8)=1  (3,11)=2 
! 9 wrong pixels (generated / expected)

TRAIN 2dee498d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,6) and color red and layers
  [00]: a point at (0,1) with color blue
  [001]: a point at (0,3) with color blue
  [0]: a rectangle at (0,5) with size (1,1) and color blue and mask full
  [010]: a rectangle at (1,3) with size (1,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color green and mask full
diff: 
delta: (1,5)=3 
   (116.5 bits)
data: a background with size (2,2) and color red and layers
  [0]: a point at (0,1) with color blue
  [01]: a rectangle at (1,1) with size (1,1) and color green and mask full
diff: 
delta:
   (13.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  [00]: a point at (0,1) with color blue
  [001]: a point at (0,3) with color blue
  [0]: a rectangle at (0,5) with size (1,1) and color blue and mask full
  [010]: a rectangle at (1,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (1,3) with size (1,1) and color green and mask full
diff: 
delta: (1,5)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,6) and color red and layers
  [00]: a point at (0,1) with color blue
  [001]: a point at (0,3) with color blue
  [0]: a rectangle at (0,5) with size (1,1) and color blue and mask full
  [010]: a rectangle at (1,3) with size (1,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color green and mask full
diff: 
delta: (1,5)=3 
! 2 wrong pixels (generated / expected)

TRAIN 2dee498d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  [00]: a point at (0,0) with color black
  [001]: a point at (0,5) with color black
  [0]: a rectangle at (0,3) with size (2,12) and color yellow and mask full
  [010]: a rectangle at (0,0) with size (5,5) and color red and mask 100011000011101101111011
  [01]: a rectangle at (3,0) with size (2,12) and color blue and mask full
diff:   layer[001].color
delta: (0,6)=2  (0,7)=0  (0,10)=0  (0,11)=2  (0,12)=0  (1,5)=2  (1,6)=2  (1,7)=0  (1,10)=2  (1,11)=2  (1,12)=0  (2,6)=2  (2,7)=2  (2,8)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,2)=0  (3,7)=0  (3,8)=2  (3,9)=2  (3,13)=2  (3,14)=2  (4,2)=0  (4,4)=0  (4,7)=0  (4,8)=2  (4,9)=0  (4,13)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  [00]: a point at (0,0) with color black
  [001]: a point at (0,5) with color black
  [0]: a rectangle at (0,0) with size (5,5) and color red and mask 100011000011100001100011
  [010]: a rectangle at (0,3) with size (2,12) and color yellow and mask full
  [01]: a rectangle at (3,0) with size (2,12) and color blue and mask full
diff:   layer[001].color
delta: (0,6)=2  (0,7)=0  (0,10)=0  (0,11)=2  (0,12)=0  (1,5)=2  (1,6)=2  (1,7)=0  (1,10)=2  (1,11)=2  (1,12)=0  (2,6)=2  (2,7)=2  (2,8)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,2)=0  (3,7)=0  (3,8)=2  (3,9)=2  (3,13)=2  (3,14)=2  (4,2)=0  (4,4)=0  (4,7)=0  (4,8)=2  (4,9)=0  (4,13)=2 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color red and layers
  [00]: a point at (0,0) with color black
  [001]: a point at (0,5) with color black
  [0]: a rectangle at (0,3) with size (2,12) and color yellow and mask full
  [010]: a rectangle at (3,0) with size (2,2) and color blue and mask full
  [01]: a rectangle at (3,5) with size (2,2) and color blue and mask full
diff:   layer[001].color
delta: (0,2)=0  (0,6)=2  (0,7)=0  (0,10)=0  (0,11)=2  (0,12)=0  (1,2)=0  (1,5)=2  (1,6)=2  (1,7)=0  (1,10)=2  (1,11)=2  (1,12)=0  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,2)=0  (3,7)=0  (3,10)=1  (3,11)=1  (3,12)=0  (4,2)=0  (4,4)=0  (4,7)=0  (4,9)=0  (4,10)=1  (4,11)=1  (4,12)=0  (4,14)=0 
! 17 wrong pixels (generated / expected)

TEST 2dee498d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1831.8 bits (1831.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-333] Checking task 31aa019c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11782.1 = 11791.0
DL output with Mo: L = 9.0 + 5566.0 = 5575.0
DL input+output M: L = 17.9 + 17348.1 = 17366.0

# learning a model for train pairs
17366.0	
13922.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13343.7	OUT DEF: size={size}
13064.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12843.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12705.9	OUT DEF: layer[0].color=red
12586.4	OUT SHAPE at layer[00]: a point at ? with color ?
12515.7	OUT DEF: layer[0].mask=full
12445.0	IN  DEF: layer[0].mask=full
12379.9	IN  SHAPE at layer[011]: a point at ? with color ?
12314.1	IN  SHAPE at layer[0111]: a point at ? with color ?
12247.7	IN  SHAPE at layer[01111]: a point at ? with color ?
12180.8	IN  SHAPE at layer[011111]: a point at ? with color ?
12113.1	IN  SHAPE at layer[0111111]: a point at ? with color ?
12044.5	IN  SHAPE at layer[01111111]: a point at ? with color ?
11975.0	IN  SHAPE at layer[011111111]: a point at ? with color ?
11904.1	IN  SHAPE at layer[0111111111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color red and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?
  [0111111]: a point at ? with color ?
  [01111111]: a point at ? with color ?
  [011111111]: a point at ? with color ?
  [0111111111]: a point at ? with color ?

DL input  with Mi: L = 117.8 + 10559.8 = 10677.6
DL output with Mo: L = 37.7 + 1188.8 = 1226.5
DL input+output M: L = 155.5 + 11748.6 = 11904.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,2) with size (2,1) and color blue and mask full
  [01]: a rectangle at (8,7) with size (2,2) and color green and mask 110
  [011]: a point at (0,3) with color blue
  [0111]: a point at (0,7) with color grey
  [01111]: a point at (2,0) with color red
  [011111]: a point at (2,5) with color red
  [0111111]: a point at (2,9) with color blue
  [01111111]: a point at (3,2) with color blue
  [011111111]: a point at (3,9) with color grey
  [0111111111]: a point at (4,2) with color cyan
diff: 
delta: (6,1)=4  (7,1)=5# (7,4)=1  (8,1)=8  (8,6)=1 
   (290.5 bits)
data: a background with size (10,10) and color black and layers
  [00]: a point at (6,1) with color yellow
  [0]: a rectangle at (5,0) with size (3,3) and color red and mask full
diff: 
delta:
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,2) with size (2,1) and color blue and mask full
  [01]: a rectangle at (8,7) with size (2,2) and color green and mask 110
  [011]: a point at (0,3) with color blue
  [0111]: a point at (0,7) with color grey
  [01111]: a point at (2,0) with color red
  [011111]: a point at (2,5) with color red
  [0111111]: a point at (2,9) with color blue
  [01111111]: a point at (3,2) with color blue
  [011111111]: a point at (3,9) with color grey
  [0111111111]: a point at (4,2) with color cyan
diff: 
delta: (6,1)=4  (7,1)=5# (7,4)=1  (8,1)=8  (8,6)=1 
! 13 wrong pixels (generated / expected)

TRAIN 31aa019c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (1,2) and color orange and mask full
  [01]: a rectangle at (7,0) with size (1,2) and color yellow and mask full
  [011]: a point at (0,0) with color red
  [0111]: a point at (0,3) with color blue
  [01111]: a point at (0,5) with color green
  [011111]: a point at (0,9) with color green
  [0111111]: a point at (1,3) with color brown
  [01111111]: a point at (1,8) with color green
  [011111111]: a point at (1,9) with color orange
  [0111111111]: a point at (2,3) with color blue
diff: 
delta: (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
   (480.9 bits)
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,7) with color pink
  [0]: a rectangle at (1,6) with size (3,3) and color red and mask full
diff: 
delta:
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (1,2) and color orange and mask full
  [01]: a rectangle at (7,0) with size (1,2) and color yellow and mask full
  [011]: a point at (0,0) with color red
  [0111]: a point at (0,3) with color blue
  [01111]: a point at (0,5) with color green
  [011111]: a point at (0,9) with color green
  [0111111]: a point at (1,3) with color brown
  [01111111]: a point at (1,8) with color green
  [011111111]: a point at (1,9) with color orange
  [0111111111]: a point at (2,3) with color blue
diff: 
delta: (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 13 wrong pixels (generated / expected)

TRAIN 31aa019c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,8) with size (2,1) and color red and mask full
  [01]: a rectangle at (3,1) with size (2,1) and color brown and mask full
  [011]: a point at (0,0) with color pink
  [0111]: a point at (0,4) with color cyan
  [01111]: a point at (1,9) with color cyan
  [011111]: a point at (2,1) with color orange
  [0111111]: a point at (2,4) with color red
  [01111111]: a point at (2,6) with color grey
  [011111111]: a point at (3,3) with color blue
  [0111111111]: a point at (4,9) with color blue
diff: 
delta: (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
   (284.5 bits)
data: a background with size (10,10) and color black and layers
  [00]: a point at (8,6) with color green
  [0]: a rectangle at (7,5) with size (3,3) and color red and mask full
diff: 
delta:
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,8) with size (2,1) and color red and mask full
  [01]: a rectangle at (3,1) with size (2,1) and color brown and mask full
  [011]: a point at (0,0) with color pink
  [0111]: a point at (0,4) with color cyan
  [01111]: a point at (1,9) with color cyan
  [011111]: a point at (2,1) with color orange
  [0111111]: a point at (2,4) with color red
  [01111111]: a point at (2,6) with color grey
  [011111111]: a point at (3,3) with color blue
  [0111111111]: a point at (4,9) with color blue
diff: 
delta: (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
! 13 wrong pixels (generated / expected)

TRAIN 31aa019c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (1,4) and color orange and mask full
  [01]: a rectangle at (7,0) with size (1,2) and color grey and mask full
  [011]: a point at (0,4) with color red
  [0111]: a point at (0,5) with color grey
  [01111]: a point at (0,6) with color orange
  [011111]: a point at (1,3) with color grey
  [0111111]: a point at (1,4) with color pink
  [01111111]: a point at (1,6) with color red
  [011111111]: a point at (2,6) with color green
  [0111111111]: a point at (3,2) with color cyan
diff: 
delta: (3,4)=3  (3,9)=8  (4,1)=4  (4,4)=4  (4,9)=4  (5,3)=8  (5,6)=7# (6,5)=9# (6,7)=4  (7,3)=3  (7,6)=6  (7,7)=7# (7,9)=7# (8,2)=3  (8,9)=2  (9,0)=1  (9,2)=1  (9,8)=6  (9,9)=7#
! 13 wrong pixels (generated / expected)

TEST 31aa019c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1188.8 bits (1188.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-332] Checking task 321b1fc6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6911.0 = 6919.9
DL output with Mo: L = 9.0 + 5313.6 = 5322.6
DL input+output M: L = 17.9 + 12224.6 = 12242.5

# learning a model for train pairs
12242.5	
10310.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9884.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9344.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8959.2	OUT DEF: size={size}
8748.8	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
8557.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8363.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8166.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8017.2	OUT DEF: layer[0].size={layer[0111].size}
7867.8	OUT DEF: layer[01].size={layer[0111].size}
7776.0	OUT DEF: layer[0].color={layer[0111].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0111].size} and color {layer[0111].color} and mask ?
  [01]: a rectangle at ? with size {layer[0111].size} and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 3734.8 = 3810.8
DL output with Mo: L = 64.4 + 3900.7 = 3965.1
DL input+output M: L = 140.5 + 7635.5 = 7776.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (7,2) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (8,8) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (1,1) with size (1,1) and color orange and mask full
diff: 
delta: (1,2)=6  (2,1)=9# (2,2)=4 
   (183.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,5) with size (1,1) and color orange and mask full
  [01]: a rectangle at (4,6) with size (1,1) and color pink and mask full
  [011]: a rectangle at (5,5) with size (1,1) and color brown and mask full
diff: 
delta: (5,6)=4  (7,2)=7# (7,3)=6  (8,2)=9# (8,3)=4  (8,8)=7# (8,9)=6  (9,8)=9# (9,9)=4 
   (220.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (7,2) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (8,8) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (1,1) with size (1,1) and color orange and mask full
diff: 
delta: (1,2)=6  (2,1)=9# (2,2)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (7,2) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (8,8) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (1,2) with size (1,1) and color pink and mask full
diff: 
delta: (1,1)=7# (2,1)=9# (2,2)=4 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (7,2) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (8,8) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (2,1) with size (1,1) and color brown and mask full
diff: 
delta: (1,1)=7# (1,2)=6  (2,2)=4 
! 16 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 111011
  [01]: a rectangle at (2,6) with size (2,3) and color cyan and mask 111011
  [011]: a rectangle at (7,3) with size (2,3) and color cyan and mask 111011
  [0111]: a rectangle at (6,5) with size (1,3) and color pink and mask full
diff: 
delta: (5,5)=7# (5,6)=7#
   (189.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (1,3) and color pink and mask full
  [01]: a rectangle at (3,6) with size (1,3) and color pink and mask full
  [011]: a rectangle at (8,3) with size (1,3) and color pink and mask full
diff: 
delta: (1,1)=7# (1,2)=7# (2,6)=7# (2,7)=7# (7,3)=7# (7,4)=7#
   (169.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 111011
  [01]: a rectangle at (2,6) with size (2,3) and color cyan and mask 111011
  [011]: a rectangle at (7,3) with size (2,3) and color cyan and mask 111011
  [0111]: a rectangle at (6,5) with size (1,3) and color pink and mask full
diff: 
delta: (5,5)=7# (5,6)=7#
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 111011
  [01]: a rectangle at (2,6) with size (2,3) and color cyan and mask 111011
  [011]: a rectangle at (6,5) with size (1,3) and color pink and mask full
  [0111]: a rectangle at (7,3) with size (2,3) and color cyan and mask 111011
diff: 
delta: (5,5)=7# (5,6)=7#
! 19 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,9) and color cyan and mask full
  [01]: a rectangle at (6,5) with size (3,4) and color cyan and mask 10011110110
  [011]: a rectangle at (5,1) with size (2,2) and color yellow and mask 111
  [0111]: a rectangle at (6,0) with size (1,4) and color green and mask full
diff: 
delta: (1,0)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,8)=0  (2,4)=0  (3,0)=0  (3,1)=0  (3,3)=0  (3,4)=0  (3,5)=0  (3,6)=0  (3,8)=0  (7,2)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,9) and color cyan and mask full
  [01]: a rectangle at (6,5) with size (3,4) and color cyan and mask 10011110110
  [011]: a rectangle at (6,2) with size (2,2) and color green and mask 111
  [0111]: a rectangle at (5,1) with size (2,2) and color yellow and mask full
diff: 
delta: (1,0)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,8)=0  (2,4)=0  (3,0)=0  (3,1)=0  (3,3)=0  (3,4)=0  (3,5)=0  (3,6)=0  (3,8)=0  (6,0)=3 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,9) and color cyan and mask full
  [01]: a rectangle at (6,5) with size (3,4) and color cyan and mask 10011110110
  [011]: a rectangle at (5,1) with size (2,2) and color yellow and mask 111
  [0111]: a rectangle at (6,2) with size (2,2) and color green and mask 111
diff: 
delta: (1,0)=0  (1,3)=0  (1,4)=0  (1,5)=0  (1,8)=0  (2,4)=0  (3,0)=0  (3,1)=0  (3,3)=0  (3,4)=0  (3,5)=0  (3,6)=0  (3,8)=0  (6,0)=3 
! 24 wrong pixels (generated / expected)

TEST 321b1fc6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3900.7 bits (3900.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-331] Checking task 32597951.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 75524.0 = 75532.9
DL output with Mo: L = 9.0 + 76797.7 = 76806.6
DL input+output M: L = 17.9 + 152321.6 = 152339.6

# learning a model for train pairs
152339.6	
118563.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
87165.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
78137.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
69261.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
64146.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 32684.4 = 32727.8
DL output with Mo: L = 59.8 + 31358.9 = 31418.7
DL input+output M: L = 103.1 + 64043.3 = 64146.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (2,5) with size (5,5) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,17) and color blue and mask full
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,8)=1  (3,9)=1  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (1919.7 bits)
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (2,5) with size (5,5) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,17) and color blue and mask full
  [011]: a rectangle at (7,0) with size (1,17) and color blue and mask full
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=3  (3,6)=3  (3,8)=3  (3,9)=3  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,3)=0  (7,7)=0  (7,11)=0  (7,15)=0  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (1780.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (2,5) with size (5,5) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,17) and color blue and mask full
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,8)=1  (3,9)=1  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,3) with size (10,13) and color blue and mask 1100010110000011000111011010010000000010000011001001101101110010110000011001000110101010000011001000111001111101010101000000010
  [01]: a rectangle at (8,1) with size (9,14) and color blue and mask 101000000100101000001101100001111110110101010101010100101000100100000001010100001000000100010010011000101101100011000111010
diff: 
delta: (0,0)=1  (0,16)=1  (1,0)=1  (1,1)=1  (2,16)=1  (4,2)=1  (4,16)=1  (7,0)=1  (7,1)=8  (7,2)=1  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (8,1)=8  (8,3)=8  (8,7)=8  (8,8)=8  (9,3)=8  (9,6)=8  (9,8)=8  (10,15)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (16,15)=1  (16,16)=1 
   (960.2 bits)
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,3) with size (10,13) and color blue and mask 1100000000000011000000011010010000000010000011001001101101110010110000011001000110101010000011001000111001111101010101000000010
  [01]: a rectangle at (10,1) with size (7,14) and color blue and mask 10100000010010100000110110000111111011010101010101010010100010010000000101010000100000010001001
  [011]: a rectangle at (7,3) with size (3,6) and color cyan and mask full
diff: 
delta: (0,0)=1  (0,16)=1  (1,0)=1  (1,1)=1  (2,16)=1  (4,2)=1  (4,16)=1  (7,0)=1  (7,1)=8  (7,2)=3  (8,1)=8  (8,2)=3  (8,4)=3  (8,5)=3  (8,6)=3  (9,1)=3  (9,2)=3  (9,4)=3  (9,5)=3  (9,7)=3  (10,15)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (16,15)=1  (16,16)=1 
   (907.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,3) with size (10,13) and color blue and mask 1100010110000011000111011010010000000010000011001001101101110010110000011001000110101010000011001000111001111101010101000000010
  [01]: a rectangle at (8,1) with size (9,14) and color blue and mask 101000000100101000001101100001111110110101010101010100101000100100000001010100001000000100010010011000101101100011000111010
diff: 
delta: (0,0)=1  (0,16)=1  (1,0)=1  (1,1)=1  (2,16)=1  (4,2)=1  (4,16)=1  (7,0)=1  (7,1)=8  (7,2)=1  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (8,1)=8  (8,3)=8  (8,7)=8  (8,8)=8  (9,3)=8  (9,6)=8  (9,8)=8  (10,15)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1001001001001001001101101101101101100100100100100100110110110110110110010010010010010011011011011011011001001001001001001101101101101101100100100100100100110110110110110110010010010010010011011011011011011001001001001001001101101101101101100100100100100100110110110110110110010010010010010
  [01]: a rectangle at (3,4) with size (5,5) and color cyan and mask full
diff: 
delta:
   (388.6 bits)
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1001001001001001001101101101101101100100100100100100110110110110110110010010010010010011011011011011011001001001001001001101101101101101100100100100100100110110100000110110010010000000010011011010000011011001001000000001001101101000001101100100100100100100110110110110110110010010010010010
  [01]: a rectangle at (3,4) with size (5,5) and color green and mask 1011001001101100100110110
  [011]: a rectangle at (3,4) with size (5,5) and color cyan and mask full
diff: 
delta:
   (447.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1001001001001001001101101101101101100100100100100100110110110110110110010010010010010011011011011011011001001001001001001101101101101101100100100100100100110110110110110110010010010010010011011011011011011001001001001001001101101101101101100100100100100100110110110110110110010010010010010
  [01]: a rectangle at (3,4) with size (5,5) and color cyan and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001001
  [01]: a rectangle at (11,7) with size (4,6) and color cyan and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 17x17

TEST 32597951.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 31358.9 bits (31358.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-330] Checking task 3345333e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16207.5 = 16216.4
DL output with Mo: L = 9.0 + 13166.2 = 13175.1
DL input+output M: L = 17.9 + 29373.6 = 29391.6

# learning a model for train pairs
29391.6	
18624.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10369.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5596.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5157.2	OUT DEF: size={size}
4917.9	OUT DEF: layer[0].pos={layer[0].pos}
4824.9	OUT DEF: layer[0].color={layer[0].color}
4777.5	IN  DEF: layer[01].mask=full
4746.4	OUT DEF: color=black
4715.4	IN  DEF: color=black
4693.6	OUT DEF: layer[0].size=(?,?)
4524.6	OUT DEF: layer[0].size.i={layer[0].size.i}
4376.8	OUT DEF: layer[0].size.j={layer[01].size.i + layer[01].size.i}
4355.0	IN  DEF: size=(?,?)
4155.6	IN  DEF: size.i=16
3956.1	IN  DEF: size.j=16
3934.3	IN  DEF: layer[0].pos=(?,?)
3912.5	IN  DEF: layer[0].size=(?,?)
3890.8	IN  DEF: layer[01].pos=(?,?)
3869.0	IN  DEF: layer[01].size=(?,?)
3745.5	IN  DEF: layer[01].size.j=4

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i},{layer[01].size.i + layer[01].size.i}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (16,16) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,4) and color ? and mask full

DL input  with Mi: L = 80.7 + 2398.1 = 2478.8
DL output with Mo: L = 40.3 + 1226.4 = 1266.7
DL input+output M: L = 121.0 + 3624.6 = 3745.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,3) with size (9,5) and color pink and mask 11001111010010111100110000100001100001110011
  [01]: a rectangle at (3,6) with size (3,4) and color blue and mask full
diff: 
delta: (2,8)=6 
   (119.9 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,3) with size (9,6) and color pink and mask 1100011110010010011110001100001100011110110011110011
diff: 
delta:
   (56.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,3) with size (9,5) and color pink and mask 11001111010010111100110000100001100001110011
  [01]: a rectangle at (3,6) with size (3,4) and color blue and mask full
diff: 
delta: (2,8)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (3,6) with size (3,4) and color blue and mask full
  [01]: a rectangle at (2,3) with size (9,5) and color pink and mask 11001111010010111100110011100111101101110011
diff:   layer[01].mask  layer[01].size.j
delta: (2,8)=6 
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,3) with size (9,5) and color pink and mask 11001111010010111100110000100001100001110011
  [01]: a rectangle at (2,7) with size (1,2) and color pink and mask full
diff:   layer[01].size.j
delta: (3,6)=1  (3,7)=1  (3,8)=1  (3,9)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1 
! 30 wrong pixels (generated / expected)

TRAIN 3345333e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (3,1) with size (8,8) and color red and mask 1100001111011011011111100100000001011000111110000111100000100100
  [01]: a rectangle at (4,0) with size (4,4) and color green and mask full
diff: 
delta:
   (119.9 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (3,1) with size (8,8) and color red and mask 1100001111011011011111100100001001011010111111110111111000100100
diff: 
delta:
   (66.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (3,1) with size (8,8) and color red and mask 1100001111011011011111100100000001011000111110000111100000100100
  [01]: a rectangle at (4,0) with size (4,4) and color green and mask full
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color green and mask full
  [01]: a rectangle at (3,1) with size (8,8) and color red and mask 1100001111011011011111100100011101011111111111110111111100100100
diff:   layer[01].mask  layer[01].size.j
delta:
! 82 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color red and layers
  [0]: a rectangle at (0,0) with size (16,16) and color black and mask 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111110011110011111111001001001111111110000001111111111011100001111111101000000111111100000000011111111000000001111111110110111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (4,0) with size (4,4) and color green and mask full
diff:   color
delta:
! 38 wrong pixels (generated / expected)

TRAIN 3345333e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (5,6) with size (8,8) and color grey and mask 10001001101011111111000000100011111100110000000101110000100010
  [01]: a rectangle at (6,4) with size (5,4) and color cyan and mask full
diff: 
delta:
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (6,4) with size (5,4) and color cyan and mask full
  [01]: a rectangle at (5,6) with size (8,8) and color grey and mask 10001001101011111111110000101111111111110000110101111100100010
diff:   layer[01].mask  layer[01].size.j
delta:
! 69 wrong pixels (generated / expected)

TEST 3345333e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1226.4 bits (1226.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-329] Checking task 3428a4f5.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21990.6 = 21999.5
DL output with Mo: L = 9.0 + 9102.6 = 9111.5
DL input+output M: L = 17.9 + 31093.1 = 31111.0

# learning a model for train pairs
31111.0	
25142.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19262.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13613.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11189.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10560.2	OUT DEF: size={layer[0].size}
10375.8	OUT DEF: layer[0].color=green
10191.4	IN  DEF: layer[0].color=red
10006.9	IN  DEF: layer[01].color=red
9822.5	IN  DEF: layer[011].color=yellow
9728.6	IN  DEF: layer[011].mask=full
9668.4	OUT DEF: color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at ? with size ? and color green and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color red and mask ?
  [01]: a rectangle at ? with size ? and color red and mask ?
  [011]: a rectangle at ? with size ? and color yellow and mask full

DL input  with Mi: L = 62.8 + 7017.1 = 7079.8
DL output with Mo: L = 27.6 + 2561.0 = 2588.6
DL input+output M: L = 90.4 + 9578.1 = 9668.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (7,0) with size (6,5) and color red and mask 10011100000100001010001100001
  [01]: a rectangle at (0,2) with size (5,3) and color red and mask 100100110101110
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (2,0)=2  (3,0)=2  (3,1)=2  (5,1)=2 
   (211.7 bits)
data: a background with size (6,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color green and mask 10110100010111111001011111001
diff: 
delta:
   (57.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (7,0) with size (6,5) and color red and mask 10011100000100001010001100001
  [01]: a rectangle at (0,2) with size (5,3) and color red and mask 100100110101110
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (2,0)=2  (3,0)=2  (3,1)=2  (5,1)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,2) with size (5,3) and color red and mask 100100110101110
  [01]: a rectangle at (7,0) with size (6,5) and color red and mask 10011100000100001010001100001
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (2,0)=2  (3,0)=2  (3,1)=2  (5,1)=2 
! size mismatch, 5x3 instead of 6x5

TRAIN 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 100110111101100111011000011110
  [01]: a rectangle at (9,1) with size (4,4) and color red and mask 111010101001000
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (8,2)=2  (9,0)=2 
   (177.5 bits)
data: a background with size (6,5) and color black and layers
  [0]: a rectangle at (0,1) with size (6,4) and color green and mask 111000100010011010101111
diff: 
delta: (4,0)=3  (5,0)=3 
   (85.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 100110111101100111011000011110
  [01]: a rectangle at (9,1) with size (4,4) and color red and mask 111010101001000
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (8,2)=2  (9,0)=2 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (9,1) with size (4,4) and color red and mask 111010101001000
  [01]: a rectangle at (0,0) with size (6,5) and color red and mask 100110111101100111011000011110
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (8,2)=2  (9,0)=2 
! size mismatch, 4x4 instead of 6x5

TRAIN 3428a4f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 1011011101010000011110111011
  [01]: a rectangle at (7,0) with size (6,5) and color red and mask 101101101010100000111010011001
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta:
   (156.2 bits)
data: a background with size (6,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color green and mask 100110110111110000100100100010
diff: 
delta:
   (57.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 1011011101010000011110111011
  [01]: a rectangle at (7,0) with size (6,5) and color red and mask 101101101010100000111010011001
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 101011111000110011101101101010
  [01]: a rectangle at (7,0) with size (6,5) and color red and mask 11010101110001101010011011101
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta:
   (156.2 bits)
data: a background with size (6,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color green and mask 110001010110111110111110110111
diff: 
delta:
   (57.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 101011111000110011101101101010
  [01]: a rectangle at (7,0) with size (6,5) and color red and mask 11010101110001101010011011101
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 111110011011111001111100101101
  [01]: a rectangle at (8,0) with size (5,5) and color red and mask 1110101101001101011110001
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta: (7,3)=2  (7,4)=2 
! 14 wrong pixels (generated / expected)

TEST 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color red and mask 101110110101110010001010110101
  [01]: a rectangle at (7,0) with size (6,5) and color red and mask 11011000010011001111000011
  [011]: a rectangle at (6,0) with size (1,5) and color yellow and mask full
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 3428a4f5.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2561.0 bits (2561.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-328] Checking task 3618c87e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4588.1 = 4597.0
DL output with Mo: L = 9.0 + 3792.6 = 3801.5
DL input+output M: L = 17.9 + 8380.7 = 8398.6

# learning a model for train pairs
8398.6	
6337.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5071.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4613.0	OUT DEF: size={size}
4234.4	OUT DEF: layer[0].size={layer[0].size}
3975.5	OUT DEF: layer[0].pos={layer[0].pos}
3835.6	OUT DEF: layer[0].color={layer[0].color}
3697.6	IN  DEF: layer[0].color=grey
3570.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3432.1	OUT DEF: layer[01].color=blue
3330.6	IN  SHAPE at layer[01]: a point at ? with color ?
3192.6	IN  DEF: layer[01].color=blue
3121.9	OUT DEF: layer[01].mask=full
3076.3	OUT DEF: color=black
3030.7	IN  DEF: color=black
2995.7	OUT DEF: layer[01].pos=(?,?)
2886.8	OUT DEF: layer[01].pos.j={layer[01].pos.j}
2780.4	OUT DEF: layer[01].pos.i=4
2745.4	OUT DEF: layer[01].size=(?,?)
2674.7	OUT DEF: layer[01].size.i=1
2639.7	IN  DEF: size=(?,?)
2434.4	IN  DEF: size.i=5
2229.1	IN  DEF: size.j=5
2194.0	IN  DEF: layer[0].pos=(?,?)
2085.0	IN  DEF: layer[0].pos.i=3
1976.1	IN  DEF: layer[0].pos.j=0
1941.0	IN  DEF: layer[0].size=(?,?)
1735.7	IN  DEF: layer[0].size.j=5
1607.0	IN  DEF: layer[0].size.i=2
1572.0	IN  DEF: layer[01].pos=(?,?)
1463.0	IN  DEF: layer[01].pos.i=2
1461.6	OUT DEF: layer[01].color={layer[01].color}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[0].color} and mask ?
  [01]: a rectangle at (4,{layer[01].pos.j}) with size (1,?) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask ?
  [01]: a point at (2,?) with color blue

DL input  with Mi: L = 69.0 + 830.5 = 899.4
DL output with Mo: L = 51.1 + 511.0 = 562.1
DL input+output M: L = 120.1 + 1341.5 = 1461.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111100100
  [01]: a point at (2,2) with color blue
diff: 
delta:
   (16.0 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1101100100
  [01]: a rectangle at (4,2) with size (1,1) and color blue and mask full
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111100100
  [01]: a point at (2,2) with color blue
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (4,0) with size (1,5) and color grey and mask full
  [01]: a point at (2,2) with color blue
diff:   layer[0].size.i  layer[0].pos.i
delta: (3,2)=5#
! 2 wrong pixels (generated / expected)

TRAIN 3618c87e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111101010
  [01]: a point at (2,1) with color blue
diff: 
delta: (2,3)=1 
   (33.5 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1010101010
  [01]: a rectangle at (4,1) with size (1,3) and color blue and mask full
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111101010
  [01]: a point at (2,1) with color blue
diff: 
delta: (2,3)=1 
! 5 wrong pixels (generated / expected)

TRAIN 3618c87e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111110010
  [01]: a point at (2,1) with color blue
diff: 
delta: (2,4)=1 
   (33.5 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 110110010
  [01]: a rectangle at (4,1) with size (1,4) and color blue and mask full
diff: 
delta:
   (18.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111110010
  [01]: a point at (2,1) with color blue
diff: 
delta: (2,4)=1 
! 5 wrong pixels (generated / expected)

TRAIN 3618c87e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color grey and mask 1111110100
  [01]: a point at (2,2) with color blue
diff: 
delta: (2,4)=1 
! 5 wrong pixels (generated / expected)

TEST 3618c87e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 511.0 bits (511.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-327] Checking task 3631a71a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 382673.1 = 382682.1
DL output with Mo: L = 9.0 + 351128.8 = 351137.8
DL input+output M: L = 17.9 + 733801.9 = 733819.9

# learning a model for train pairs
733819.9	
700782.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
668172.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
645716.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 327145.6 = 327189.0
DL output with Mo: L = 26.6 + 318501.3 = 318527.9
DL input+output M: L = 69.9 + 645646.9 = 645716.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (5,22) with size (8,8) and color brown and mask full
  [01]: a rectangle at (9,12) with size (6,7) and color brown and mask full
diff: 
delta: (0,8)=6  (0,9)=6  (0,10)=5# (0,11)=5# (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,10)=5# (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,8)=5# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,0)=9# (8,1)=9# (8,2)=9# (8,3)=9# (8,4)=9# (8,5)=9# (8,6)=9# (8,10)=4  (8,21)=4  (9,0)=9# (9,1)=9# (9,2)=9# (9,3)=9# (9,4)=9# (9,5)=9# (9,6)=9# (9,7)=7# (9,9)=8  (10,0)=9# (10,1)=9# (10,2)=9# (10,3)=9# (10,4)=9# (10,5)=9# (10,6)=9# (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (11,29)=0  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (12,28)=0  (12,29)=0  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=1  (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,12)=1  (16,13)=1  (16,15)=1  (16,16)=1  (16,18)=1  (16,19)=1  (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,13)=1  (17,14)=1  (17,17)=1  (17,18)=1  (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,14)=1  (18,15)=1  (18,16)=1  (18,17)=1  (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,15)=1  (19,16)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (5658.4 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (12,12) with size (8,8) and color blue and mask 1001100100111100011001101101101111011011011001100011110010011001
diff: 
delta: (0,8)=6  (0,9)=6  (0,10)=5# (0,11)=5# (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,10)=5# (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,8)=5# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (5,23)=1  (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (6,25)=3  (6,28)=7# (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (7,22)=7# (7,29)=7# (8,0)=6  (8,1)=6  (8,2)=5# (8,3)=5# (8,5)=1  (8,10)=4  (8,21)=4  (8,26)=1  (8,28)=5# (8,29)=5# (9,0)=6  (9,1)=6  (9,2)=5# (9,4)=1  (9,7)=7# (9,9)=8  (9,22)=8  (9,24)=7# (9,27)=1  (9,29)=5# (10,0)=5# (10,1)=5# (10,2)=4  (10,8)=4  (10,11)=5# (10,15)=7# (10,16)=7# (10,20)=5# (10,23)=4  (10,29)=4  (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,14)=7# (11,17)=7# (11,21)=5# (11,24)=2  (11,26)=7# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,25)=4  (12,27)=7# (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (5373.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (5,22) with size (8,8) and color brown and mask full
  [01]: a rectangle at (9,12) with size (6,7) and color brown and mask full
diff: 
delta: (0,8)=6  (0,9)=6  (0,10)=5# (0,11)=5# (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,10)=5# (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,8)=5# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,0)=9# (8,1)=9# (8,2)=9# (8,3)=9# (8,4)=9# (8,5)=9# (8,6)=9# (8,10)=4  (8,21)=4  (9,0)=9# (9,1)=9# (9,2)=9# (9,3)=9# (9,4)=9# (9,5)=9# (9,6)=9# (9,7)=7# (9,9)=8  (10,0)=9# (10,1)=9# (10,2)=9# (10,3)=9# (10,4)=9# (10,5)=9# (10,6)=9# (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (11,29)=0  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (12,28)=0  (12,29)=0  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=1  (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,12)=1  (16,13)=1  (16,15)=1  (16,16)=1  (16,18)=1  (16,19)=1  (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,13)=1  (17,14)=1  (17,17)=1  (17,18)=1  (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,14)=1  (18,15)=1  (18,16)=1  (18,17)=1  (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,15)=1  (19,16)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (1,21) with size (4,5) and color brown and mask full
  [01]: a rectangle at (28,17) with size (2,7) and color brown and mask full
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,14)=7# (8,17)=7# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,15)=7# (9,16)=7# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,12)=7# (10,15)=7# (10,16)=7# (10,19)=7# (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,13)=7# (11,14)=7# (11,17)=7# (11,18)=7# (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,13)=7# (20,14)=7# (20,17)=7# (20,18)=7# (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,12)=7# (21,15)=7# (21,16)=7# (21,19)=7# (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,15)=7# (22,16)=7# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,14)=7# (23,17)=7# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,20)=9# (25,21)=9# (25,22)=9# (25,23)=9# (25,24)=9# (25,25)=9# (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,20)=9# (26,21)=9# (26,22)=9# (26,23)=9# (26,24)=9# (26,25)=9# (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
   (8598.9 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (8,12) with size (4,8) and color orange and mask 1100110100110010001100000100100
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (1,21)=3  (1,23)=8  (1,24)=3  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,21)=4  (2,22)=3  (2,23)=3  (2,25)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,21)=4  (3,23)=3  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (4,21)=8  (4,23)=1  (4,24)=1  (4,25)=1  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=7# (16,10)=7# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=7# (19,22)=5# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,13)=7# (20,14)=7# (20,17)=7# (20,18)=7# (20,21)=2  (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,12)=7# (21,15)=7# (21,16)=7# (21,19)=7# (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,15)=7# (22,16)=7# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,14)=7# (23,17)=7# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,20)=6  (25,21)=6  (25,23)=8  (25,24)=2  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,22)=1  (26,24)=1  (26,25)=1  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,17)=6  (28,21)=4  (28,23)=3  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,17)=6  (29,19)=8  (29,20)=4  (29,21)=4  (29,22)=3  (29,23)=3  (29,25)=4  (29,28)=7# (29,29)=7#
   (8598.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (1,21) with size (4,5) and color brown and mask full
  [01]: a rectangle at (28,17) with size (2,7) and color brown and mask full
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,14)=7# (8,17)=7# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,15)=7# (9,16)=7# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,12)=7# (10,15)=7# (10,16)=7# (10,19)=7# (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,13)=7# (11,14)=7# (11,17)=7# (11,18)=7# (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,13)=7# (20,14)=7# (20,17)=7# (20,18)=7# (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,12)=7# (21,15)=7# (21,16)=7# (21,19)=7# (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,15)=7# (22,16)=7# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,14)=7# (23,17)=7# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,20)=9# (25,21)=9# (25,22)=9# (25,23)=9# (25,24)=9# (25,25)=9# (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,20)=9# (26,21)=9# (26,22)=9# (26,23)=9# (26,24)=9# (26,25)=9# (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (0,17) with size (7,4) and color brown and mask full
  [01]: a rectangle at (7,0) with size (7,3) and color brown and mask full
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,15)=6  (10,16)=6  (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,14)=6  (11,17)=6  (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,13)=6  (12,14)=7# (12,17)=7# (12,18)=6  (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,12)=6  (13,13)=6  (13,15)=7# (13,16)=7# (13,18)=6  (13,19)=6  (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,11)=6  (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,20)=6  (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,10)=6  (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,21)=6  (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,10)=6  (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,21)=6  (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,11)=6  (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,20)=6  (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,12)=6  (18,13)=6  (18,15)=7# (18,16)=7# (18,18)=6  (18,19)=6  (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,13)=6  (19,14)=7# (19,17)=7# (19,18)=6  (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,14)=6  (20,17)=6  (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,15)=6  (21,16)=6  (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,10)=8  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,21)=8  (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,10)=8  (25,11)=8  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,20)=8  (25,21)=8  (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,12)=8  (26,13)=8  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,18)=8  (26,19)=8  (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,12)=8  (27,13)=8  (27,15)=7# (27,16)=7# (27,18)=8  (27,19)=8  (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,14)=8  (28,17)=8  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,14)=8  (29,15)=8  (29,16)=8  (29,17)=8  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (8995.4 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (10,10) with size (12,12) and color pink and mask 1100000000010010000000100001000001100001100010000000010100000000001100000000001010000000010001100001100000100001000000010010000000001100000
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,18)=4  (0,19)=4  (0,20)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,18)=4  (1,19)=4  (1,20)=4  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,17)=8  (3,18)=3  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,18)=8  (4,19)=8  (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,17)=7# (5,18)=8  (5,19)=8  (5,20)=3  (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,18)=7# (6,20)=8  (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,2)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,0)=8  (8,1)=8  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,0)=8  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,1)=4  (10,2)=2  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,0)=4  (11,1)=4  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,0)=4  (12,1)=4  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,0)=4  (13,1)=4  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,10)=8  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,21)=8  (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,10)=8  (25,11)=8  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,20)=8  (25,21)=8  (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,12)=8  (26,13)=8  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,18)=8  (26,19)=8  (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,12)=8  (27,13)=8  (27,15)=7# (27,16)=7# (27,18)=8  (27,19)=8  (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,14)=8  (28,17)=8  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,14)=8  (29,15)=8  (29,16)=8  (29,17)=8  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (9150.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (0,17) with size (7,4) and color brown and mask full
  [01]: a rectangle at (7,0) with size (7,3) and color brown and mask full
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,15)=6  (10,16)=6  (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,14)=6  (11,17)=6  (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,13)=6  (12,14)=7# (12,17)=7# (12,18)=6  (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,12)=6  (13,13)=6  (13,15)=7# (13,16)=7# (13,18)=6  (13,19)=6  (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,11)=6  (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,20)=6  (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,10)=6  (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,21)=6  (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,10)=6  (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,21)=6  (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,11)=6  (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,20)=6  (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,12)=6  (18,13)=6  (18,15)=7# (18,16)=7# (18,18)=6  (18,19)=6  (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,13)=6  (19,14)=7# (19,17)=7# (19,18)=6  (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,14)=6  (20,17)=6  (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,15)=6  (21,16)=6  (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,10)=8  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,21)=8  (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,10)=8  (25,11)=8  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,20)=8  (25,21)=8  (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,12)=8  (26,13)=8  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,18)=8  (26,19)=8  (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,12)=8  (27,13)=8  (27,15)=7# (27,16)=7# (27,18)=8  (27,19)=8  (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,14)=8  (28,17)=8  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,14)=8  (29,15)=8  (29,16)=8  (29,17)=8  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (8,8) with size (16,16) and color red and mask 110000000000000111100000000000100001000000000110000110000000101011010100000111011110111000100010000100010110011000011001111001100001100110100010000100000001110111100000000010101101000000000110000100000000001000010000000000011110000000000000110000000
  [01]: a rectangle at (11,5) with size (7,8) and color brown and mask 10111100111111001111111111111111111111111111111111111
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,15)=2  (0,16)=2  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,14)=2  (1,17)=2  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,13)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=2  (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,12)=2  (3,14)=7# (3,17)=7# (3,19)=2  (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,20)=2  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,21)=2  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,6)=2  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,22)=2  (6,25)=2  (6,27)=6  (7,7)=2  (7,8)=2  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,23)=2  (7,24)=2  (7,27)=9# (7,28)=9# (7,29)=9# (8,3)=6  (8,4)=3  (8,5)=3  (8,7)=2  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,24)=2  (8,26)=3  (8,27)=9# (8,28)=9# (8,29)=9# (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,6)=2  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,25)=2  (9,27)=9# (9,28)=9# (9,29)=9# (10,1)=6  (10,2)=3  (10,3)=3  (10,5)=2  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,26)=2  (10,27)=9# (10,28)=9# (10,29)=9# (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,4)=2  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,27)=2  (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,3)=2  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (12,28)=2  (13,0)=3  (13,2)=2  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (13,29)=2  (14,1)=2  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,0)=2  (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,0)=2  (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,1)=2  (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,2)=2  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,3)=2  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,4)=2  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,5)=2  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,6)=2  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,7)=2  (23,9)=9# (23,10)=9# (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,7)=2  (24,8)=2  (24,9)=9# (24,10)=9# (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,6)=2  (25,9)=9# (25,10)=9# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,9)=9# (26,10)=9# (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=9# (27,10)=9# (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=9# (28,10)=9# (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=9# (29,10)=9# (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (9461.9 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (0,0) with size (30,30) and color red and mask
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=3  (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,10)=7# (6,11)=7# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=3  (8,28)=6  (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=3  (9,28)=6  (9,29)=6  (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,28)=3  (10,29)=3  (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,6)=7# (11,8)=1  (11,9)=1  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,5)=4  (12,6)=1  (12,8)=7# (12,9)=7# (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,5)=4  (13,8)=7# (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,10)=4  (14,11)=4  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,7)=4  (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,7)=4  (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,9)=8  (23,10)=1  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,26)=3  (23,27)=3  (23,28)=6  (24,10)=7# (24,15)=4  (24,16)=4  (24,21)=7# (25,0)=6  (25,4)=6  (25,10)=7# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=3  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=6  (28,10)=3  (28,11)=3  (28,14)=7# (28,17)=7# (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=6  (29,10)=3  (29,11)=3  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (8728.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (8,8) with size (16,16) and color red and mask 110000000000000111100000000000100001000000000110000110000000101011010100000111011110111000100010000100010110011000011001111001100001100110100010000100000001110111100000000010101101000000000110000100000000001000010000000000011110000000000000110000000
  [01]: a rectangle at (11,5) with size (7,8) and color brown and mask 10111100111111001111111111111111111111111111111111111
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,15)=2  (0,16)=2  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,14)=2  (1,17)=2  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,13)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=2  (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,12)=2  (3,14)=7# (3,17)=7# (3,19)=2  (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,20)=2  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,21)=2  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,6)=2  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,22)=2  (6,25)=2  (6,27)=6  (7,7)=2  (7,8)=2  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,23)=2  (7,24)=2  (7,27)=9# (7,28)=9# (7,29)=9# (8,3)=6  (8,4)=3  (8,5)=3  (8,7)=2  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,24)=2  (8,26)=3  (8,27)=9# (8,28)=9# (8,29)=9# (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,6)=2  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,25)=2  (9,27)=9# (9,28)=9# (9,29)=9# (10,1)=6  (10,2)=3  (10,3)=3  (10,5)=2  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,26)=2  (10,27)=9# (10,28)=9# (10,29)=9# (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,4)=2  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,27)=2  (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,3)=2  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (12,28)=2  (13,0)=3  (13,2)=2  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (13,29)=2  (14,1)=2  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,0)=2  (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,0)=2  (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,1)=2  (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,2)=2  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,3)=2  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,4)=2  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,5)=2  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,6)=2  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,7)=2  (23,9)=9# (23,10)=9# (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,7)=2  (24,8)=2  (24,9)=9# (24,10)=9# (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,6)=2  (25,9)=9# (25,10)=9# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,9)=9# (26,10)=9# (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=9# (27,10)=9# (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=9# (28,10)=9# (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=9# (29,10)=9# (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (3,20) with size (9,7) and color brown and mask 111110011111001111100111110011111110011111001111100111110011111
  [01]: a rectangle at (2,0) with size (3,7) and color brown and mask full
diff: 
delta: (0,0)=8  (0,2)=7# (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,9)=3  (0,11)=6  (0,13)=8  (0,18)=8  (0,20)=6  (0,22)=3  (0,24)=1  (0,25)=1  (0,26)=7# (0,27)=7# (0,29)=7# (1,1)=8  (1,4)=7# (1,5)=7# (1,6)=1  (1,7)=1  (1,8)=3  (1,9)=3  (1,10)=6  (1,11)=6  (1,12)=8  (1,13)=8  (1,18)=8  (1,19)=8  (1,20)=6  (1,21)=6  (1,22)=3  (1,23)=3  (1,24)=1  (1,25)=1  (1,26)=7# (1,27)=7# (2,7)=8  (2,9)=6  (2,10)=7# (2,11)=7# (2,15)=6  (2,16)=6  (2,20)=7# (2,21)=7# (2,22)=6  (2,24)=8  (2,26)=1  (2,27)=1  (2,29)=2  (3,8)=6  (3,9)=6  (3,10)=7# (3,11)=7# (3,14)=6  (3,17)=6  (3,25)=8  (3,26)=1  (3,27)=1  (4,7)=6  (4,9)=8  (4,12)=6  (4,13)=6  (4,18)=6  (4,19)=6  (4,28)=1  (4,29)=1  (5,0)=7# (5,1)=7# (5,2)=1  (5,3)=1  (5,5)=5# (5,6)=6  (5,7)=6  (5,8)=8  (5,9)=8  (5,12)=6  (5,13)=6  (5,18)=6  (5,19)=6  (5,25)=6  (5,26)=5# (5,28)=1  (5,29)=1  (6,0)=1  (6,1)=1  (6,3)=8  (6,5)=6  (6,6)=2  (6,11)=6  (6,14)=5# (6,15)=5# (6,16)=5# (6,17)=5# (6,25)=2  (6,26)=6  (6,28)=8  (7,0)=1  (7,1)=1  (7,2)=8  (7,4)=6  (7,5)=6  (7,7)=2  (7,10)=6  (7,14)=5# (7,17)=5# (7,27)=6  (7,29)=8  (8,1)=3  (8,3)=6  (8,5)=8  (8,12)=6  (8,14)=3  (8,17)=3  (8,19)=6  (8,28)=6  (9,0)=3  (9,1)=3  (9,2)=6  (9,3)=6  (9,4)=8  (9,5)=8  (9,9)=6  (9,11)=5# (9,15)=3  (9,16)=3  (9,20)=5# (9,27)=8  (9,28)=6  (9,29)=6  (10,1)=6  (10,2)=7# (10,3)=7# (10,7)=6  (10,12)=3  (10,15)=6  (10,16)=6  (10,19)=3  (10,28)=7# (10,29)=7# (11,0)=6  (11,1)=6  (11,2)=7# (11,3)=7# (11,6)=6  (11,9)=5# (11,13)=3  (11,14)=6  (11,15)=6  (11,16)=6  (11,17)=6  (11,18)=3  (11,28)=7# (11,29)=7# (12,1)=8  (12,4)=6  (12,5)=6  (12,8)=6  (12,10)=3  (12,13)=4  (12,14)=3  (12,17)=3  (12,18)=4  (12,21)=3  (12,23)=6  (12,26)=6  (12,27)=6  (13,0)=8  (13,1)=8  (13,4)=6  (13,5)=6  (13,11)=3  (13,12)=4  (13,19)=4  (13,20)=3  (13,26)=6  (13,27)=6  (14,3)=6  (14,6)=5# (14,7)=5# (14,8)=3  (14,11)=6  (14,12)=3  (14,14)=2  (14,17)=2  (14,19)=3  (14,20)=6  (14,23)=3  (14,24)=5# (14,25)=5# (14,28)=6  (15,2)=6  (15,6)=5# (15,9)=3  (15,10)=6  (15,11)=6  (15,15)=2  (15,16)=2  (15,20)=6  (15,21)=6  (15,22)=3  (15,25)=5# (15,29)=6  (16,2)=6  (16,6)=5# (16,9)=3  (16,10)=6  (16,11)=6  (16,15)=2  (16,16)=2  (16,20)=6  (16,21)=6  (16,22)=3  (16,25)=5# (16,29)=6  (17,3)=6  (17,6)=5# (17,7)=5# (17,8)=3  (17,11)=6  (17,12)=3  (17,14)=2  (17,17)=2  (17,19)=3  (17,20)=6  (17,23)=3  (17,24)=5# (17,25)=5# (17,28)=6  (18,0)=8  (18,1)=8  (18,4)=6  (18,5)=6  (18,11)=3  (18,12)=4  (18,19)=4  (18,20)=3  (18,26)=6  (18,27)=6  (19,1)=8  (19,4)=6  (19,5)=6  (19,8)=6  (19,10)=3  (19,13)=4  (19,14)=3  (19,17)=3  (19,18)=4  (19,21)=3  (19,23)=6  (19,26)=6  (19,27)=6  (20,0)=6  (20,1)=6  (20,2)=7# (20,3)=7# (20,6)=6  (20,9)=5# (20,13)=3  (20,14)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=3  (20,22)=5# (20,25)=6  (20,28)=7# (20,29)=7# (21,1)=6  (21,2)=7# (21,3)=7# (21,7)=6  (21,12)=3  (21,15)=6  (21,16)=6  (21,19)=3  (21,24)=6  (21,28)=7# (21,29)=7# (22,0)=3  (22,1)=3  (22,2)=6  (22,3)=6  (22,4)=8  (22,5)=8  (22,9)=6  (22,11)=5# (22,15)=3  (22,16)=3  (22,20)=5# (22,22)=6  (22,26)=8  (22,27)=8  (22,28)=6  (22,29)=6  (23,1)=3  (23,3)=6  (23,5)=8  (23,12)=6  (23,14)=3  (23,17)=3  (23,19)=6  (23,26)=8  (23,28)=6  (24,0)=1  (24,1)=1  (24,2)=8  (24,4)=6  (24,5)=6  (24,7)=2  (24,10)=6  (24,14)=5# (24,17)=5# (24,21)=6  (24,24)=2  (24,26)=6  (24,27)=6  (24,29)=8  (25,0)=1  (25,1)=1  (25,3)=8  (25,5)=6  (25,6)=2  (25,11)=6  (25,14)=5# (25,15)=5# (25,16)=5# (25,17)=5# (25,20)=6  (25,25)=2  (25,26)=6  (25,28)=8  (26,0)=7# (26,1)=7# (26,2)=1  (26,3)=1  (26,5)=5# (26,6)=6  (26,7)=6  (26,8)=8  (26,9)=8  (26,12)=6  (26,13)=6  (26,18)=6  (26,19)=6  (26,22)=8  (26,23)=8  (26,24)=6  (26,25)=6  (26,26)=5# (26,28)=1  (26,29)=1  (27,0)=7# (27,1)=7# (27,2)=1  (27,3)=1  (27,7)=6  (27,9)=8  (27,12)=6  (27,13)=6  (27,18)=9# (27,19)=9# (27,20)=9# (27,21)=9# (27,22)=9# (27,23)=9# (27,24)=9# (27,28)=1  (27,29)=1  (28,4)=1  (28,5)=1  (28,6)=8  (28,8)=6  (28,9)=6  (28,10)=7# (28,11)=7# (28,14)=6  (28,17)=6  (28,18)=9# (28,19)=9# (28,20)=9# (28,21)=9# (28,22)=9# (28,23)=9# (28,24)=9# (28,25)=8  (28,26)=1  (28,27)=1  (29,0)=7# (29,2)=2  (29,4)=1  (29,5)=1  (29,7)=8  (29,9)=6  (29,10)=7# (29,11)=7# (29,15)=6  (29,16)=6  (29,20)=7# (29,21)=7# (29,22)=6  (29,24)=8  (29,26)=1  (29,27)=1  (29,29)=2 
! size mismatch, 10x10 instead of 30x30

TEST 3631a71a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 318501.3 bits (318501.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-326] Checking task 363442ee.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12834.8 = 12843.8
DL output with Mo: L = 9.0 + 31426.7 = 31435.7
DL input+output M: L = 17.9 + 44261.5 = 44279.5

# learning a model for train pairs
44279.5	
39720.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35792.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
32265.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
29807.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
28629.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27538.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 7694.3 = 7737.7
DL output with Mo: L = 76.0 + 19724.6 = 19800.7
DL input+output M: L = 119.4 + 27418.9 = 27538.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (2,3) and color red and mask full
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (2,1)=4  (2,2)=4  (4,8)=1  (7,8)=1 
   (229.0 bits)
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (2,7) and color red and mask full
  [011]: a rectangle at (2,1) with size (1,6) and color yellow and mask full
  [0111]: a rectangle at (3,7) with size (5,3) and color red and mask full
diff: 
delta: (0,0)=4  (0,4)=4  (1,1)=6  (1,5)=6  (2,0)=6  (2,4)=6  (3,7)=4  (4,8)=6  (5,7)=6  (5,8)=4  (5,9)=4  (6,7)=4  (7,8)=6  (8,7)=6  (8,8)=4  (8,9)=4 
   (436.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (2,3) and color red and mask full
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (2,1)=4  (2,2)=4  (4,8)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask 1110100
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (2,1)=7# (2,2)=7# (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
   (275.3 bits)
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (3,4) with size (6,9) and color green and mask 1001000110110000100100001000001110000110100000100
  [01]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [011]: a rectangle at (5,5) with size (4,2) and color orange and mask full
  [0111]: a rectangle at (3,4) with size (5,1) and color red and mask full
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=3  (0,7)=2  (0,8)=7# (0,9)=3  (1,0)=2  (1,1)=3  (1,2)=3  (1,7)=2  (1,8)=3  (1,9)=3  (2,0)=3  (2,1)=7# (2,2)=7# (2,7)=3  (2,8)=7# (2,9)=7# (3,5)=7# (3,10)=2  (3,11)=7# (4,10)=2  (5,11)=7# (5,12)=7# (6,7)=2  (6,8)=7# (7,7)=2  (8,8)=7# (8,9)=7#
   (724.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask 1110100
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (2,1)=7# (2,2)=7# (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (1,0) with size (2,3) and color brown and mask full
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (1,1)=8  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
   (265.1 bits)
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (2,0) with size (1,13) and color brown and mask full
  [01]: a rectangle at (7,7) with size (2,6) and color brown and mask full
  [011]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [0111]: a rectangle at (4,7) with size (2,3) and color brown and mask full
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (0,4)=3  (0,5)=8  (0,6)=6  (0,10)=3  (0,11)=8  (0,12)=6  (1,0)=9# (1,1)=8  (1,2)=2  (1,4)=9# (1,5)=8  (1,6)=2  (1,10)=9# (1,11)=8  (1,12)=2  (2,3)=5# (2,7)=0  (2,8)=0  (2,9)=0  (3,7)=3  (3,8)=8  (3,9)=6  (4,8)=8  (4,9)=2  (6,7)=3  (6,8)=8  (6,9)=6  (6,10)=3  (6,11)=8  (6,12)=6  (7,8)=8  (7,9)=2  (7,11)=8  (7,12)=2 
   (811.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (1,0) with size (2,3) and color brown and mask full
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (1,1)=8  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (0,3) with size (9,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (1,2) and color green and mask full
diff: 
delta: (0,2)=9# (1,0)=8  (1,1)=4  (1,2)=4  (1,8)=1  (1,11)=1  (2,0)=8  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TEST 363442ee.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 19724.6 bits (19724.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-325] Checking task 36d67576.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13037.5 = 13046.5
DL output with Mo: L = 9.0 + 17462.9 = 17471.9
DL input+output M: L = 17.9 + 30500.5 = 30518.4

# learning a model for train pairs
30518.4	
28847.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
27167.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
25474.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
23809.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22139.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20464.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
19841.3	OUT DEF: size={size}
18746.7	OUT DEF: layer[0]={layer[0]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 7942.7 = 8002.5
DL output with Mo: L = 47.6 + 10696.7 = 10744.2
DL input+output M: L = 107.4 + 18639.3 = 18746.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,1) with size (1,5) and color yellow and mask full
  [01]: a rectangle at (8,3) with size (1,5) and color yellow and mask full
  [011]: a rectangle at (2,10) with size (5,1) and color yellow and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,5)=2  (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
   (262.1 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,1) with size (1,5) and color yellow and mask full
  [01]: a rectangle at (8,3) with size (1,5) and color yellow and mask full
  [011]: a rectangle at (2,10) with size (5,1) and color yellow and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,5)=2  (2,9)=3  (3,1)=3  (3,3)=3  (3,5)=3  (3,11)=1  (4,9)=3  (5,11)=1  (6,9)=3  (6,11)=2  (7,3)=3  (7,5)=3  (7,7)=3  (9,3)=2  (9,4)=1  (9,6)=1 
   (397.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,1) with size (1,5) and color yellow and mask full
  [01]: a rectangle at (8,3) with size (1,5) and color yellow and mask full
  [011]: a rectangle at (2,10) with size (5,1) and color yellow and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,5)=2  (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (8,3) with size (1,5) and color yellow and mask full
  [01]: a rectangle at (2,1) with size (1,5) and color yellow and mask full
  [011]: a rectangle at (2,10) with size (5,1) and color yellow and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,5)=2  (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 32 wrong pixels (generated / expected)

TRAIN 36d67576.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color yellow and mask 100100111
  [01]: a rectangle at (5,9) with size (3,3) and color yellow and mask 1001111
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 111100100
diff: 
delta: (1,4)=2  (2,5)=1  (4,2)=3  (4,3)=3  (4,5)=3  (4,9)=2  (11,6)=2 
   (275.5 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color yellow and mask 100100111
  [01]: a rectangle at (5,9) with size (3,3) and color yellow and mask 1001111
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 111100100
diff: 
delta: (1,4)=2  (2,5)=1  (4,2)=3  (4,3)=3  (4,5)=3  (4,9)=2  (5,8)=1  (7,8)=3  (7,10)=3  (7,11)=3  (9,3)=3  (10,3)=3  (11,6)=2  (12,3)=3  (12,5)=1 
   (363.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color yellow and mask 100100111
  [01]: a rectangle at (5,9) with size (3,3) and color yellow and mask 1001111
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 111100100
diff: 
delta: (1,4)=2  (2,5)=1  (4,2)=3  (4,3)=3  (4,5)=3  (4,9)=2  (11,6)=2 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (5,9) with size (3,3) and color yellow and mask 1001111
  [01]: a rectangle at (2,2) with size (3,3) and color yellow and mask 100100111
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 111100100
diff: 
delta: (1,4)=2  (2,5)=1  (4,2)=3  (4,3)=3  (4,5)=3  (4,9)=2  (11,6)=2 
! 29 wrong pixels (generated / expected)

TRAIN 36d67576.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color yellow and mask 10111010
  [01]: a rectangle at (5,7) with size (3,3) and color yellow and mask 10111010
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 10111010
diff: 
delta: (1,4)=2  (2,1)=1  (3,2)=3  (4,3)=1  (5,7)=2  (11,3)=2 
   (256.7 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color yellow and mask 10111010
  [01]: a rectangle at (5,7) with size (3,3) and color yellow and mask 10111010
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 10111010
diff: 
delta: (1,4)=2  (2,1)=1  (3,2)=3  (4,3)=1  (5,7)=2  (6,10)=1  (7,9)=3  (8,4)=1  (8,8)=1  (9,5)=3  (10,6)=1  (11,3)=2 
   (308.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color yellow and mask 10111010
  [01]: a rectangle at (5,7) with size (3,3) and color yellow and mask 10111010
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 10111010
diff: 
delta: (1,4)=2  (2,1)=1  (3,2)=3  (4,3)=1  (5,7)=2  (11,3)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (5,7) with size (3,3) and color yellow and mask 10111010
  [01]: a rectangle at (1,2) with size (3,3) and color yellow and mask 10111010
  [011]: a rectangle at (9,3) with size (3,3) and color yellow and mask 10111010
diff: 
delta: (1,4)=2  (2,1)=1  (3,2)=3  (4,3)=1  (5,7)=2  (11,3)=2 
! 26 wrong pixels (generated / expected)

TRAIN 36d67576.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (3,2) with size (3,3) and color yellow and mask 110101011
  [01]: a rectangle at (3,10) with size (3,3) and color yellow and mask 11101110
  [011]: a rectangle at (9,1) with size (3,3) and color yellow and mask 110101011
diff: 
delta: (2,2)=1  (2,3)=3  (3,4)=2  (4,5)=3  (5,5)=1  (5,12)=2  (9,8)=2  (9,9)=4  (9,10)=4  (10,8)=4  (10,10)=4  (11,1)=2  (11,8)=4  (11,9)=4 
! 42 wrong pixels (generated / expected)

TEST 36d67576.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10696.7 bits (10696.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-324] Checking task 36fdfd69.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 69880.0 = 69888.9
DL output with Mo: L = 9.0 + 71135.1 = 71144.1
DL input+output M: L = 17.9 + 141015.1 = 141033.0

# learning a model for train pairs
141033.0	
109120.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
89442.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
77410.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
68514.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
61573.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 25901.2 = 25944.6
DL output with Mo: L = 59.8 + 35569.1 = 35628.9
DL input+output M: L = 103.1 + 61470.3 = 61573.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (0,0) with size (17,13) and color blue and mask 1101110010011010111000000000100100010001011000000100000101100000001111100000001010101101100000000100000000100001101000100010010000000101000101111000110010110001110011100010000001001111000001011101001111110110000001100001
  [01]: a rectangle at (0,10) with size (17,8) and color blue and mask 1000001111100101011000000011101011101000100110010000101000110000110000000101000110110000000011110011010011110001011001110011101010001000
diff: 
delta: (1,2)=2  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (7,15)=2  (8,14)=2  (8,15)=2  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2 
   (872.9 bits)
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (0,10) with size (17,8) and color blue and mask 1000001111100101011000000011101011101000100110000000101000110000110000000100000110110000000011110011010011110001011001110011101010001000
  [01]: a rectangle at (0,0) with size (11,6) and color blue and mask 110110100000011010001000000101100101001110000001000011000011100001
  [011]: a rectangle at (1,2) with size (3,7) and color red and mask full
diff: 
delta: (0,6)=1  (1,3)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=4  (1,8)=4  (2,2)=4  (2,4)=4  (3,3)=4  (4,6)=1  (4,7)=1  (4,8)=1  (5,6)=1  (6,6)=1  (6,8)=1  (7,6)=1  (7,14)=4  (7,15)=2  (8,9)=1  (8,14)=2  (8,15)=2  (10,6)=2  (10,7)=4  (10,8)=2  (10,9)=4  (10,10)=2  (11,6)=4  (11,7)=4  (11,8)=4  (11,9)=4  (11,10)=4  (12,5)=1  (12,6)=4  (12,7)=2  (12,8)=4  (12,9)=2  (12,10)=2  (13,1)=1  (13,8)=1  (13,9)=1  (14,2)=1  (14,6)=1  (14,9)=1  (15,6)=1  (15,7)=1  (15,8)=1  (16,0)=1  (16,3)=1  (16,6)=1  (16,7)=1  (16,8)=1 
   (1345.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (0,0) with size (17,13) and color blue and mask 1101110010011010111000000000100100010001011000000100000101100000001111100000001010101101100000000100000000100001101000100010010000000101000101111000110010110001110011100010000001001111000001011101001111110110000001100001
  [01]: a rectangle at (0,10) with size (17,8) and color blue and mask 1000001111100101011000000011101011101000100110010000101000110000110000000101000110110000000011110011010011110001011001110011101010001000
diff: 
delta: (1,2)=2  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (7,15)=2  (8,14)=2  (8,15)=2  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2 
! size mismatch, 10x10 instead of 17x18

TRAIN 36fdfd69.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (0,0) with size (15,10) and color cyan and mask 101011100011101100001111001000110001010110110011011101101000001000111010101011111011001001110100100100010001000010100111101110010000000101100100001
  [01]: a rectangle at (9,9) with size (6,7) and color cyan and mask 111111011110101000010111011010110011110001
diff: 
delta: (0,10)=8  (0,11)=8  (0,12)=8  (1,11)=8  (1,13)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,15)=8  (3,11)=8  (3,12)=8  (3,13)=2  (3,14)=8  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,12)=8  (4,13)=2  (4,14)=8  (5,2)=2  (5,4)=2  (5,11)=8  (5,14)=8  (5,15)=8  (6,11)=8  (6,12)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,15)=8  (9,4)=2  (10,2)=2  (10,5)=2  (11,9)=2  (12,9)=2  (12,11)=2 
   (1016.5 bits)
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (5,0) with size (10,8) and color cyan and mask 1010111011101100111100101100010110000011100000100010001010101011101100110000001
  [01]: a rectangle at (0,6) with size (6,10) and color cyan and mask 110010001001000000100100001000101011111100101010000001111100
  [011]: a rectangle at (9,10) with size (6,6) and color cyan and mask 111111111101100000111000101100111000
diff: 
delta: (0,0)=8  (0,5)=8  (1,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,2)=8  (3,4)=8  (3,11)=4  (3,12)=4  (3,13)=2  (4,2)=2  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,12)=4  (4,13)=2  (5,2)=2  (5,3)=4  (5,4)=2  (5,5)=4  (5,6)=4  (6,8)=8  (6,9)=8  (6,11)=8  (6,12)=8  (7,8)=8  (7,9)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,15)=8  (9,2)=4  (9,3)=4  (9,4)=2  (9,5)=4  (9,9)=8  (10,2)=2  (10,3)=4  (10,4)=4  (10,5)=2  (10,9)=8  (11,9)=2  (11,10)=4  (11,11)=4  (12,9)=2  (12,10)=4  (12,11)=2 
   (1261.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (0,0) with size (15,10) and color cyan and mask 101011100011101100001111001000110001010110110011011101101000001000111010101011111011001001110100100100010001000010100111101110010000000101100100001
  [01]: a rectangle at (9,9) with size (6,7) and color cyan and mask 111111011110101000010111011010110011110001
diff: 
delta: (0,10)=8  (0,11)=8  (0,12)=8  (1,11)=8  (1,13)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,15)=8  (3,11)=8  (3,12)=8  (3,13)=2  (3,14)=8  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,12)=8  (4,13)=2  (4,14)=8  (5,2)=2  (5,4)=2  (5,11)=8  (5,14)=8  (5,15)=8  (6,11)=8  (6,12)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,15)=8  (9,4)=2  (10,2)=2  (10,5)=2  (11,9)=2  (12,9)=2  (12,11)=2 
! size mismatch, 10x10 instead of 15x16

TRAIN 36fdfd69.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (0,5) with size (15,9) and color green and mask 110110000000001010101101001101011001010001100010100011110011011100001011000100010011000011101000100110011100000011100010001011000110100
  [01]: a rectangle at (8,0) with size (7,7) and color green and mask 1001101011001101000110110000101011001111101100
diff: 
delta: (0,0)=3  (0,1)=3  (1,2)=3  (2,2)=3  (2,3)=3  (3,0)=3  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,1)=3  (5,2)=3  (5,3)=2  (5,4)=2  (5,7)=2  (6,1)=3  (6,3)=2  (6,4)=2  (6,5)=2  (6,7)=2  (9,3)=2  (10,2)=2 
   (700.7 bits)
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (7,5) with size (8,9) and color green and mask 110110000000001010101101001101011001010001100010100011110011011100001011
  [01]: a rectangle at (8,0) with size (7,7) and color green and mask 1001101011001101000110110000001011000111101100
  [011]: a rectangle at (4,3) with size (3,5) and color red and mask full
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,7)=4  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,5)=4  (5,6)=4  (5,11)=3  (5,12)=3  (6,1)=3  (6,6)=4  (6,10)=3  (9,2)=4  (9,3)=2  (10,2)=2  (10,3)=4 
   (949.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (0,5) with size (15,9) and color green and mask 110110000000001010101101001101011001010001100010100011110011011100001011000100010011000011101000100110011100000011100010001011000110100
  [01]: a rectangle at (8,0) with size (7,7) and color green and mask 1001101011001101000110110000101011001111101100
diff: 
delta: (0,0)=3  (0,1)=3  (1,2)=3  (2,2)=3  (2,3)=3  (3,0)=3  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,1)=3  (5,2)=3  (5,3)=2  (5,4)=2  (5,7)=2  (6,1)=3  (6,3)=2  (6,4)=2  (6,5)=2  (6,7)=2  (9,3)=2  (10,2)=2 
! size mismatch, 10x10 instead of 15x14

TRAIN 36fdfd69.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (0,0) with size (17,18) and color brown and mask 11101000000000001010010001011001010101101000101111110010010010000111111011100010011101101101110001110100110111100100101010110100001100110101011000010111110001000101110110100101101000011010000100000000010010010101111111100101101000110010111111000000000010010011100011000000001001000100101010000001100111000
  [01]: a rectangle at (13,11) with size (3,6) and color red and mask full
diff: 
delta: (1,1)=2  (1,3)=2  (1,4)=2  (2,1)=2  (2,2)=2  (2,5)=2  (5,6)=2  (5,8)=2  (5,9)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (10,7)=2  (11,6)=2 
! size mismatch, 10x10 instead of 17x18

TEST 36fdfd69.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 35569.1 bits (35569.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-323] Checking task 3906de3d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17086.9 = 17095.8
DL output with Mo: L = 9.0 + 17086.9 = 17095.8
DL input+output M: L = 17.9 + 34173.7 = 34191.6

# learning a model for train pairs
34191.6	
22773.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11914.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10422.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9060.8	OUT DEF: layer[0]={layer[0]}
7568.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6990.7	OUT DEF: size={size}
6607.4	OUT DEF: layer[01].size={layer[01].size}
6467.9	OUT DEF: layer[01].color={layer[01].color}
6329.9	IN  DEF: layer[0].color=blue
6220.6	OUT DEF: color={color}
6185.6	OUT DEF: layer[01].pos=(?,?)
6046.9	OUT DEF: layer[01].pos.j={layer[01].pos.j}
6011.9	IN  DEF: size=(?,?)
5748.6	IN  DEF: size.i=10
5485.2	IN  DEF: size.j=10
5450.2	IN  DEF: layer[0].pos=(?,?)
5312.2	IN  DEF: layer[0].pos.i=0
5277.2	IN  DEF: layer[0].size=(?,?)
5242.2	IN  DEF: layer[01].pos=(?,?)
5207.2	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,{layer[01].pos.j}) with size {layer[01].size} and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color ? and layers
  [0]: a rectangle at (0,?) with size (?,?) and color blue and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 80.5 + 3686.8 = 3767.3
DL output with Mo: L = 35.2 + 1404.7 = 1439.9
DL input+output M: L = 115.7 + 5091.5 = 5207.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (4,5) and color blue and mask 11011110111111111111
  [01]: a rectangle at (7,4) with size (3,1) and color red and mask full
diff: 
delta:
   (65.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (4,5) and color blue and mask 11011110111111111111
  [01]: a rectangle at (2,4) with size (3,1) and color red and mask full
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (4,5) and color blue and mask 11011110111111111111
  [01]: a rectangle at (7,4) with size (3,1) and color red and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (4,5) and color blue and mask full
  [01]: a rectangle at (7,4) with size (3,1) and color red and mask full
diff: 
delta: (2,4)=0  (3,4)=0 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,2) with size (4,5) and color blue and mask 11011110111111111111
diff:   layer[0].color  layer[0].pos.i
delta:
! 6 wrong pixels (generated / expected)

TRAIN 3906de3d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,7) and color blue and mask 11000001101011110101111110111111111
  [01]: a rectangle at (6,6) with size (4,1) and color red and mask full
diff: 
delta: (9,4)=2 
   (102.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,7) and color blue and mask 11000001101011110101111110111111111
  [01]: a rectangle at (2,6) with size (4,1) and color red and mask full
diff: 
delta: (1,4)=2 
   (26.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,7) and color blue and mask 11000001101011110101111110111111111
  [01]: a rectangle at (6,6) with size (4,1) and color red and mask full
diff: 
delta: (9,4)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,6) with size (4,1) and color red and mask full
  [01]: a rectangle at (0,2) with size (5,7) and color blue and mask 11000001101011110101111110111111111
diff:   layer[0].color  layer[0].pos.i
delta: (9,4)=2 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,7) and color blue and mask 11000001101011110101111110111111111
  [01]: a rectangle at (9,4) with size (1,1) and color red and mask full
diff: 
delta: (6,6)=2  (7,6)=2  (8,6)=2  (9,6)=2 
! 5 wrong pixels (generated / expected)

TRAIN 3906de3d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,1) with size (4,9) and color blue and mask 101010011101111011111111011111111111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1010100111101010011110101101111110111111111111111111111111111111111111111111111111111111111111111111
diff: 
delta:
   (200.1 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,1) with size (4,9) and color blue and mask 101010011101111011111111011111111111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111111110111111111011111110101011111010100111101111011111111101111111111111
diff: 
delta:
   (107.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,1) with size (4,9) and color blue and mask 101010011101111011111111011111111111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1010100111101010011110101101111110111111111111111111111111111111111111111111111111111111111111111111
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (4,9) and color blue and mask 101010011101111011111111011111111111
  [01]: a rectangle at (7,3) with size (3,2) and color red and mask 111101
diff: 
delta: (6,6)=2  (7,6)=2  (7,8)=2  (8,6)=2  (8,8)=2  (9,6)=2  (9,8)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (4,9) and color blue and mask 101010011101111011111111011111111111
  [01]: a rectangle at (8,3) with size (2,2) and color red and mask full
diff: 
delta: (6,6)=2  (7,3)=2  (7,6)=2  (7,8)=2  (8,6)=2  (8,8)=2  (9,6)=2  (9,8)=2 
! 11 wrong pixels (generated / expected)

TRAIN 3906de3d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (5,9) and color blue and mask 100000100101000101101010101101111101111111111
  [01]: a rectangle at (6,4) with size (4,3) and color red and mask 111011010010
diff: 
delta: (4,8)=2  (5,8)=2  (6,8)=2  (7,2)=2  (7,8)=2  (8,2)=2  (8,8)=2  (9,2)=2  (9,8)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (5,9) and color blue and mask 100000100101000101101010101101111101111111111
  [01]: a rectangle at (4,8) with size (6,1) and color red and mask full
diff: 
delta: (6,5)=2  (7,2)=2  (7,5)=2  (8,2)=2  (8,4)=2  (8,5)=2  (9,2)=2  (9,4)=2  (9,5)=2  (9,6)=2 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,1) with size (5,9) and color blue and mask 100000100101000101101010101101111101111111111
  [01]: a rectangle at (0,0) with size (10,9) and color black and mask 10001011011001011011011011011011111011111111011111111111111111111111111111111111111111111
diff: 
delta: (5,9)=0  (6,9)=0  (7,9)=0  (8,9)=0  (9,9)=0 
! 21 wrong pixels (generated / expected)

TEST 3906de3d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1404.7 bits (1404.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-322] Checking task 39a8645d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15611.6 = 15620.6
DL output with Mo: L = 9.0 + 2374.6 = 2383.5
DL input+output M: L = 17.9 + 17986.2 = 18004.1

# learning a model for train pairs
18004.1	
16228.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14442.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12617.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11735.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11367.0	OUT DEF: layer[0].size={layer[0].size}
10999.4	OUT DEF: size={layer[0].size}
10953.8	OUT DEF: color=black
10908.2	IN  DEF: color=black
10873.2	OUT DEF: layer[0].pos=(?,?)
10795.6	OUT DEF: layer[0].pos.i={layer[0].size.i - layer[01].size.i}
10717.8	OUT DEF: layer[0].pos.j={layer[01].size.j - layer[0].size.j}
10682.8	IN  DEF: size=(?,?)
10391.3	IN  DEF: size.i=14
10099.8	IN  DEF: size.j=14
10064.8	IN  DEF: layer[0].pos=(?,?)
10029.8	IN  DEF: layer[0].size=(?,?)
9867.2	IN  DEF: layer[0].size.i=3
9704.6	IN  DEF: layer[0].size.j=3
9669.6	IN  DEF: layer[01].pos=(?,?)
9634.6	IN  DEF: layer[01].size=(?,?)
9472.0	IN  DEF: layer[01].size.i=3
9309.4	IN  DEF: layer[01].size.j=3
9274.4	IN  DEF: layer[011].pos=(?,?)
9239.4	IN  DEF: layer[011].size=(?,?)
9076.8	IN  DEF: layer[011].size.i=3
8914.2	IN  DEF: layer[011].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at ({layer[0].size.i - layer[01].size.i},{layer[01].size.j - layer[0].size.j}) with size {layer[0].size} and color ? and mask ?
WHERE (Mi)
a background with size (14,14) and color black and layers
  [0]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (3,3) and color ? and mask ?

DL input  with Mi: L = 116.7 + 8267.9 = 8384.6
DL output with Mo: L = 50.6 + 479.0 = 529.6
DL input+output M: L = 167.3 + 8746.9 = 8914.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color cyan and mask 101010101
  [01]: a rectangle at (2,10) with size (3,3) and color cyan and mask 101010101
  [011]: a rectangle at (7,3) with size (3,3) and color cyan and mask 101010101
diff: 
delta: (7,9)=2  (7,11)=2  (8,9)=2  (8,11)=2  (9,10)=2  (11,1)=2  (11,3)=2  (12,1)=2  (12,3)=2  (13,2)=2 
   (271.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 101010101
diff: 
delta:
   (16.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color cyan and mask 101010101
  [01]: a rectangle at (2,10) with size (3,3) and color cyan and mask 101010101
  [011]: a rectangle at (7,3) with size (3,3) and color cyan and mask 101010101
diff: 
delta: (7,9)=2  (7,11)=2  (8,9)=2  (8,11)=2  (9,10)=2  (11,1)=2  (11,3)=2  (12,1)=2  (12,3)=2  (13,2)=2 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,7) with size (3,3) and color blue and mask 10111101
  [01]: a rectangle at (6,1) with size (3,3) and color blue and mask 10111101
  [011]: a rectangle at (11,11) with size (3,3) and color blue and mask 10111101
diff: 
delta: (1,2)=4  (2,3)=4  (2,4)=4  (3,2)=4  (3,11)=4  (4,12)=4  (4,13)=4  (5,6)=2  (5,8)=2  (5,11)=4  (6,7)=2  (7,6)=2  (7,8)=2  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (12,2)=4 
   (477.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 1110001
diff: 
delta:
   (16.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,7) with size (3,3) and color blue and mask 10111101
  [01]: a rectangle at (6,1) with size (3,3) and color blue and mask 10111101
  [011]: a rectangle at (11,11) with size (3,3) and color blue and mask 10111101
diff: 
delta: (1,2)=4  (2,3)=4  (2,4)=4  (3,2)=4  (3,11)=4  (4,12)=4  (4,13)=4  (5,6)=2  (5,8)=2  (5,11)=4  (6,7)=2  (7,6)=2  (7,8)=2  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (12,2)=4 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color cyan and mask 10111010
  [01]: a rectangle at (2,9) with size (3,3) and color pink and mask 100011011
  [011]: a rectangle at (8,8) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
   (78.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
   (16.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color cyan and mask 10111010
  [01]: a rectangle at (2,9) with size (3,3) and color pink and mask 100011011
  [011]: a rectangle at (8,8) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (2,3) with size (3,3) and color green and mask 101110101
  [01]: a rectangle at (2,9) with size (3,3) and color red and mask 11111010
  [011]: a rectangle at (8,0) with size (3,3) and color red and mask 11111010
diff: 
delta: (7,7)=8  (8,6)=8  (8,8)=8  (9,7)=8  (11,5)=2  (11,9)=3  (11,11)=3  (12,4)=2  (12,5)=2  (12,6)=2  (12,10)=3  (12,11)=3  (13,4)=2  (13,5)=2  (13,9)=3  (13,11)=3 
! 9 wrong pixels (generated / expected)

TEST 39a8645d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 479.0 bits (479.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-321] Checking task 39e1d7f9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 206822.7 = 206831.7
DL output with Mo: L = 9.0 + 238625.7 = 238634.7
DL input+output M: L = 17.9 + 445448.4 = 445466.4

# learning a model for train pairs
445466.4	
313937.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
191579.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
169872.8	OUT DEF: layer[0]={layer[0]}
153529.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
138992.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
124437.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 46150.3 = 46210.1
DL output with Mo: L = 31.0 + 78196.4 = 78227.3
DL input+output M: L = 90.8 + 124346.7 = 124437.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color cyan and mask
  [01]: a rectangle at (5,0) with size (4,14) and color green and mask full
  [011]: a rectangle at (0,5) with size (14,4) and color green and mask full
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6 
   (1374.9 bits)
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color cyan and mask
  [01]: a rectangle at (5,0) with size (4,14) and color green and mask full
diff: 
delta: (0,5)=3  (0,6)=3  (0,7)=3  (0,8)=3  (1,5)=3  (1,6)=3  (1,7)=3  (1,8)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,8)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (12,5)=3  (12,6)=3  (12,7)=3  (12,8)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3  (20,10)=3  (20,11)=3  (20,12)=3  (20,13)=3  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (20,20)=3  (20,21)=3  (20,22)=3  (20,23)=3  (21,10)=3  (21,11)=3  (21,12)=3  (21,13)=3  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,10)=3  (22,11)=3  (22,12)=3  (22,13)=3  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,10)=3  (23,11)=3  (23,12)=3  (23,13)=3  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6  (23,20)=3  (23,21)=3  (23,22)=3  (23,23)=3 
   (2328.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color cyan and mask
  [01]: a rectangle at (5,0) with size (4,14) and color green and mask full
  [011]: a rectangle at (0,5) with size (14,4) and color green and mask full
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (5,0) with size (4,14) and color green and mask full
  [01]: a rectangle at (0,0) with size (24,24) and color cyan and mask
  [011]: a rectangle at (0,5) with size (14,4) and color green and mask full
diff: 
delta: (5,4)=8  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=8  (6,4)=8  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=8  (7,4)=8  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (7,9)=8  (8,4)=8  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=8  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6 
! size mismatch, 10x10 instead of 24x24

TRAIN 39e1d7f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color green and mask
  [01]: a rectangle at (8,4) with size (3,11) and color pink and mask full
  [011]: a rectangle at (4,8) with size (11,3) and color pink and mask full
diff: 
delta: (0,24)=4  (0,25)=4  (0,26)=4  (1,24)=4  (1,25)=4  (1,26)=4  (2,24)=4  (2,25)=4  (2,26)=4  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
   (1435.4 bits)
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color green and mask 100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000
  [01]: a rectangle at (8,4) with size (3,11) and color pink and mask full
diff: 
delta: (0,20)=6  (0,21)=6  (0,22)=6  (0,24)=4  (0,25)=4  (0,26)=4  (1,20)=6  (1,21)=6  (1,22)=6  (1,24)=4  (1,25)=4  (1,26)=4  (2,20)=6  (2,21)=6  (2,22)=6  (2,24)=4  (2,25)=4  (2,26)=4  (4,8)=6  (4,9)=6  (4,10)=6  (4,24)=6  (4,25)=6  (4,26)=6  (5,8)=6  (5,9)=6  (5,10)=6  (5,24)=6  (5,25)=6  (5,26)=6  (6,8)=6  (6,9)=6  (6,10)=6  (6,24)=6  (6,25)=6  (6,26)=6  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (12,8)=6  (12,9)=6  (12,10)=6  (13,8)=6  (13,9)=6  (13,10)=6  (14,8)=6  (14,9)=6  (14,10)=6  (16,12)=6  (16,13)=6  (16,14)=6  (17,12)=6  (17,13)=6  (17,14)=6  (18,12)=6  (18,13)=6  (18,14)=6  (20,8)=6  (20,9)=6  (20,10)=6  (20,12)=4  (20,13)=4  (20,14)=4  (20,16)=6  (20,17)=6  (20,18)=6  (21,8)=6  (21,9)=6  (21,10)=6  (21,12)=4  (21,13)=4  (21,14)=4  (21,16)=6  (21,17)=6  (21,18)=6  (22,8)=6  (22,9)=6  (22,10)=6  (22,12)=4  (22,13)=4  (22,14)=4  (22,16)=6  (22,17)=6  (22,18)=6  (24,12)=6  (24,13)=6  (24,14)=6  (25,12)=6  (25,13)=6  (25,14)=6  (26,12)=6  (26,13)=6  (26,14)=6 
   (2099.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color green and mask
  [01]: a rectangle at (8,4) with size (3,11) and color pink and mask full
  [011]: a rectangle at (4,8) with size (11,3) and color pink and mask full
diff: 
delta: (0,24)=4  (0,25)=4  (0,26)=4  (1,24)=4  (1,25)=4  (1,26)=4  (2,24)=4  (2,25)=4  (2,26)=4  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color cyan and mask 100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000
  [01]: a rectangle at (12,12) with size (3,11) and color yellow and mask full
  [011]: a rectangle at (20,12) with size (3,11) and color yellow and mask full
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,12)=4  (16,13)=4  (16,14)=4  (16,16)=2  (16,17)=2  (16,18)=2  (16,20)=4  (16,21)=4  (16,22)=4  (17,12)=4  (17,13)=4  (17,14)=4  (17,16)=2  (17,17)=2  (17,18)=2  (17,20)=4  (17,21)=4  (17,22)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,16)=2  (18,17)=2  (18,18)=2  (18,20)=4  (18,21)=4  (18,22)=4 
   (1804.8 bits)
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color cyan and mask
  [01]: a rectangle at (0,20) with size (23,3) and color yellow and mask full
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,4)=4  (0,5)=4  (0,6)=4  (0,8)=4  (0,9)=4  (0,10)=4  (0,24)=2  (0,25)=2  (0,26)=2  (1,0)=4  (1,1)=4  (1,2)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,8)=4  (1,9)=4  (1,10)=4  (1,24)=2  (1,25)=2  (1,26)=2  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,5)=4  (2,6)=4  (2,8)=4  (2,9)=4  (2,10)=4  (2,24)=2  (2,25)=2  (2,26)=2  (4,0)=4  (4,1)=4  (4,2)=4  (4,4)=2  (4,5)=2  (4,6)=2  (4,8)=4  (4,9)=4  (4,10)=4  (4,24)=4  (4,25)=4  (4,26)=4  (5,0)=4  (5,1)=4  (5,2)=4  (5,4)=2  (5,5)=2  (5,6)=2  (5,8)=4  (5,9)=4  (5,10)=4  (5,24)=4  (5,25)=4  (5,26)=4  (6,0)=4  (6,1)=4  (6,2)=4  (6,4)=2  (6,5)=2  (6,6)=2  (6,8)=4  (6,9)=4  (6,10)=4  (6,24)=4  (6,25)=4  (6,26)=4  (8,0)=4  (8,1)=4  (8,2)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,8)=4  (8,9)=4  (8,10)=4  (8,20)=0  (8,21)=0  (8,22)=0  (9,0)=4  (9,1)=4  (9,2)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,8)=4  (9,9)=4  (9,10)=4  (9,20)=0  (9,21)=0  (9,22)=0  (10,0)=4  (10,1)=4  (10,2)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,8)=4  (10,9)=4  (10,10)=4  (10,20)=0  (10,21)=0  (10,22)=0  (12,12)=4  (12,13)=4  (12,14)=4  (12,16)=4  (12,17)=4  (12,18)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,16)=4  (13,17)=4  (13,18)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,16)=4  (14,17)=4  (14,18)=4  (16,12)=4  (16,13)=4  (16,14)=4  (16,16)=2  (16,17)=2  (16,18)=2  (17,12)=4  (17,13)=4  (17,14)=4  (17,16)=2  (17,17)=2  (17,18)=2  (18,12)=4  (18,13)=4  (18,14)=4  (18,16)=2  (18,17)=2  (18,18)=2  (20,12)=4  (20,13)=4  (20,14)=4  (20,16)=4  (20,17)=4  (20,18)=4  (21,12)=4  (21,13)=4  (21,14)=4  (21,16)=4  (21,17)=4  (21,18)=4  (22,12)=4  (22,13)=4  (22,14)=4  (22,16)=4  (22,17)=4  (22,18)=4 
   (3391.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color cyan and mask
  [01]: a rectangle at (12,12) with size (3,11) and color yellow and mask full
  [011]: a rectangle at (20,12) with size (3,11) and color yellow and mask full
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,12)=4  (16,13)=4  (16,14)=4  (16,16)=2  (16,17)=2  (16,18)=2  (16,20)=4  (16,21)=4  (16,22)=4  (17,12)=4  (17,13)=4  (17,14)=4  (17,16)=2  (17,17)=2  (17,18)=2  (17,20)=4  (17,21)=4  (17,22)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,16)=2  (18,17)=2  (18,18)=2  (18,20)=4  (18,21)=4  (18,22)=4 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color yellow and mask
  [01]: a rectangle at (6,6) with size (2,8) and color cyan and mask full
  [011]: a rectangle at (9,6) with size (2,8) and color green and mask full
diff: 
delta: (3,21)=6  (3,22)=6  (4,21)=6  (4,22)=6  (6,9)=3  (6,10)=3  (7,9)=3  (7,10)=3  (9,9)=6  (9,10)=6  (10,9)=6  (10,10)=6  (12,6)=8  (12,7)=8  (12,9)=3  (12,10)=3  (12,12)=8  (12,13)=8  (13,6)=8  (13,7)=8  (13,9)=3  (13,10)=3  (13,12)=8  (13,13)=8  (21,15)=6  (21,16)=6  (22,15)=6  (22,16)=6  (24,0)=6  (24,1)=6  (25,0)=6  (25,1)=6 
! size mismatch, 10x10 instead of 29x29

TEST 39e1d7f9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 78196.4 bits (78196.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-320] Checking task 3aa6fb7a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2977.6 = 2986.6
DL output with Mo: L = 9.0 + 3819.7 = 3828.7
DL input+output M: L = 17.9 + 6797.3 = 6815.2

# learning a model for train pairs
6815.2	
5962.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5498.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4826.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4481.4	OUT DEF: size={size}
4209.7	OUT DEF: layer[01].size={layer[0].size}
4017.7	OUT DEF: layer[01].pos={layer[0].pos}
3922.6	OUT DEF: color={color}
3829.3	OUT DEF: layer[01].color={layer[0].color}
3807.6	OUT DEF: layer[0].pos=(?,?)
3727.9	OUT DEF: layer[0].pos.i=1
3706.1	OUT DEF: layer[0].size=(?,?)
3620.6	OUT DEF: layer[0].size.i=2
3535.2	OUT DEF: layer[0].size.j=2
3513.4	IN  DEF: size=(?,?)
3359.3	IN  DEF: size.i=7
3205.2	IN  DEF: size.j=7
3183.4	IN  DEF: layer[0].pos=(?,?)
3161.6	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at (1,?) with size (2,2) and color ? and mask ?
  [01]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (7,7) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 49.7 + 1710.3 = 1760.0
DL output with Mo: L = 55.1 + 1346.4 = 1401.6
DL input+output M: L = 104.9 + 3056.7 = 3161.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,4) with size (2,2) and color cyan and mask 1011
diff: 
delta: (1,1)=8  (2,1)=8  (2,2)=8 
   (83.0 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (3,4) with size (2,2) and color cyan and mask full
diff: 
delta: (1,2)=1  (4,4)=1 
   (49.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color cyan and mask 1101
diff: 
delta: (3,4)=8  (3,5)=8  (4,5)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,4) with size (2,2) and color cyan and mask 1011
diff: 
delta: (1,1)=8  (2,1)=8  (2,2)=8 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,7) and color black and mask 1111111111111110111111001111111100111111011111111
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,7) and color black and mask 1100111110111111111111110011111101110111111001111
diff: 
delta:
   (88.1 bits)
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (1,3) with size (2,2) and color blue and mask 110
  [01]: a rectangle at (0,0) with size (7,7) and color black and mask 1100111110011111111111110011111101110111111001111
diff: 
delta: (5,3)=1 
   (85.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,7) and color black and mask 1100111110111111111111110011111101110111111001111
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,4) with size (2,2) and color cyan and mask 1011
diff: 
delta: (2,2)=8  (3,2)=8  (3,3)=8  (5,4)=8  (6,3)=8  (6,4)=8 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color cyan and mask 1101
diff: 
delta: (0,4)=8  (0,5)=8  (1,5)=8  (5,4)=8  (6,3)=8  (6,4)=8 
! 13 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,5) with size (2,2) and color cyan and mask 1011
diff: 
delta: (1,0)=8  (1,1)=8  (2,0)=8  (3,3)=8  (4,3)=8  (4,4)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color cyan and mask 111
diff: 
delta: (0,5)=8  (0,6)=8  (1,6)=8  (3,3)=8  (4,3)=8  (4,4)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color cyan and mask 1101
diff: 
delta: (0,5)=8  (0,6)=8  (1,0)=8  (1,1)=8  (1,6)=8  (2,0)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 13 wrong pixels (generated / expected)

TEST 3aa6fb7a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1346.4 bits (1346.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-319] Checking task 3ac3eb23.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 926.2 = 935.1
DL output with Mo: L = 9.0 + 5025.9 = 5034.9
DL input+output M: L = 17.9 + 5952.1 = 5970.0

# learning a model for train pairs
5970.0	
3895.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3045.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
2655.6	OUT DEF: layer[01].mask=101010101010101010
2309.0	OUT DEF: size={size}
2242.1	IN  SHAPE at layer[0]: a point at ? with color ?
2148.6	OUT DEF: layer[0].color={layer[0].color}
2117.5	OUT DEF: color=black
2086.5	IN  DEF: color=black
2064.7	OUT DEF: layer[0].pos=(?,?)
1978.0	OUT DEF: layer[0].pos.j={layer[0].pos.i}
1956.2	OUT DEF: layer[0].size=(?,?)
1934.4	OUT DEF: layer[01].pos=(?,?)
1856.1	OUT DEF: layer[01].pos.i={layer[0].pos.i}
1834.3	OUT DEF: layer[01].size=(?,?)
1684.3	OUT DEF: layer[01].size.i={size.i}
1576.7	OUT DEF: layer[01].size.j=3
1554.9	IN  DEF: size=(?,?)
1409.2	IN  DEF: size.i=6
1387.4	IN  DEF: layer[0].pos=(?,?)
1302.6	IN  DEF: layer[0].pos.j=1
1225.0	IN  DEF: layer[0].pos.i=0

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,{layer[0].pos.i}) with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at ({layer[0].pos.i},?) with size ({size.i},3) and color ? and mask 101010101010101010
WHERE (Mi)
a background with size (6,?) and color black and layers
  [0]: a point at (0,1) with color ?

DL input  with Mi: L = 35.0 + 450.3 = 485.3
DL output with Mo: L = 78.3 + 661.5 = 739.7
DL input+output M: L = 113.3 + 1111.7 = 1225.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,10) and color black and layers
  [0]: a point at (0,1) with color red
diff: 
delta: (0,5)=8 
   (32.4 bits)
data: a background with size (6,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,3) and color red and mask 101010101010101010
  [01]: a rectangle at (0,4) with size (6,3) and color cyan and mask 101010101010101010
diff: 
delta:
   (46.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  [0]: a point at (0,1) with color red
diff: 
delta: (0,5)=8 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  [0]: a point at (0,5) with color cyan
diff:   layer[0].pos.j
delta: (0,1)=2 
! 20 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  [0]: a point at (0,1) with color yellow
diff: 
delta:
   (12.6 bits)
data: a background with size (6,7) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (6,3) and color yellow and mask 101010101010101010
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  [0]: a point at (0,1) with color yellow
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,12) and color black and layers
  [0]: a point at (0,2) with color green
diff:   layer[0].pos.j
delta: (0,6)=6  (0,9)=7#
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,12) and color black and layers
  [0]: a point at (0,6) with color pink
diff:   layer[0].pos.j
delta: (0,2)=3  (0,9)=7#
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,12) and color black and layers
  [0]: a point at (0,9) with color orange
diff:   layer[0].pos.j
delta: (0,2)=3  (0,6)=6 
! 37 wrong pixels (generated / expected)

TEST 3ac3eb23.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 661.5 bits (661.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-318] Checking task 3af2c5a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2899.7 = 2908.7
DL output with Mo: L = 9.0 + 10860.4 = 10869.3
DL input+output M: L = 17.9 + 13760.1 = 13778.0

# learning a model for train pairs
13778.0	
5379.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4011.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3724.3	OUT DEF: layer[0].pos={layer[0].pos}
3584.4	OUT DEF: layer[0].color={layer[0].color}
3474.7	OUT DEF: color={color}
3439.7	OUT DEF: size=(?,?)
3195.0	OUT DEF: size.j=8
2974.4	OUT DEF: size.i=6
2939.4	OUT DEF: layer[0].size=(?,?)
2712.1	OUT DEF: layer[0].size.j={layer[0].size.j + layer[0].size.j}
2504.7	OUT DEF: layer[0].size.i={layer[0].size.i + layer[0].size.i}
2469.7	IN  DEF: size=(?,?)
2283.1	IN  DEF: size.j=4
2120.5	IN  DEF: size.i=3
2085.5	IN  DEF: layer[0].pos=(?,?)
2050.4	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (6,8) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i + layer[0].size.i},{layer[0].size.j + layer[0].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,4) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 45.7 + 1040.8 = 1086.4
DL output with Mo: L = 54.3 + 909.7 = 964.0
DL input+output M: L = 100.0 + 1950.4 = 2050.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 10101010
diff: 
delta:
   (34.6 bits)
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (0,1) with size (6,6) and color cyan and mask 10010101101010010010010101101010010
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 10101010
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,4) and color black and mask 101101011011
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (0,2) with size (1,1) and color cyan and mask full
diff: 
delta: (1,1)=8  (1,3)=8  (2,2)=8 
! 16 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color green and mask 11110101100
diff: 
delta:
   (38.5 bits)
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (0,0) with size (6,8) and color green and mask 1111000101101011100111111001110101101000111100
diff: 
delta:
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color green and mask 11110101100
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color green and layers
  [0]: a rectangle at (0,0) with size (3,4) and color black and mask 100001010011
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color green and layers
  [0]: a rectangle at (0,0) with size (1,2) and color black and mask full
diff: 
delta: (1,0)=0  (1,2)=0  (2,3)=0 
! 20 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,4) and color green and layers
  [0]: a rectangle at (1,1) with size (2,3) and color black and mask full
diff: 
delta:
   (31.0 bits)
data: a background with size (6,8) and color green and layers
  [0]: a rectangle at (1,1) with size (4,6) and color black and mask full
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
  [0]: a rectangle at (1,1) with size (2,3) and color black and mask full
diff: 
delta:
correct output grid

TRAIN 3af2c5a8.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,4) and color black and mask 110001111110
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (2,0) with size (1,2) and color yellow and mask full
diff: 
delta: (0,0)=4  (1,3)=4 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color yellow and mask full
diff: 
delta: (1,3)=4  (2,0)=4  (2,1)=4 
! 18 wrong pixels (generated / expected)

TEST 3af2c5a8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 909.7 bits (909.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-317] Checking task 3bd67248.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5127.8 = 5136.7
DL output with Mo: L = 9.0 + 12921.9 = 12930.9
DL input+output M: L = 17.9 + 18049.7 = 18067.6

# learning a model for train pairs
18067.6	
14351.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10909.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7808.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6955.5	OUT DEF: layer[0]={layer[0]}
6170.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5658.8	OUT DEF: size={size}
5520.8	OUT DEF: layer[01].color=yellow
5382.8	OUT DEF: layer[011].color=red
5311.8	OUT DEF: layer[01].mask={layer[0].mask}
5241.1	IN  DEF: layer[0].mask=full
5195.5	OUT DEF: color=black
5149.9	IN  DEF: color=black
5114.9	OUT DEF: layer[01].pos=(?,?)
4993.6	OUT DEF: layer[01].pos.j={layer[0].size.j}
4878.4	OUT DEF: layer[01].pos.i={layer[0].size.i - 1}
4843.4	OUT DEF: layer[01].size=(?,?)
4632.3	OUT DEF: layer[01].size.j={size.j - layer[0].size.j}
4561.7	OUT DEF: layer[01].size.i=1
4526.7	OUT DEF: layer[011].pos=(?,?)
4404.2	OUT DEF: layer[011].pos.i={layer[0].pos.i}
4283.0	OUT DEF: layer[011].pos.j={layer[0].size.j}
4247.9	OUT DEF: layer[011].size=(?,?)
4036.9	OUT DEF: layer[011].size.j={size.j - layer[0].size.j}
3825.9	OUT DEF: layer[011].size.i={layer[0].size.i - 1}
3790.9	IN  DEF: size=(?,?)
3755.9	IN  DEF: layer[0].pos=(?,?)
3636.1	IN  DEF: layer[0].pos.i=0
3516.4	IN  DEF: layer[0].pos.j=0
3481.4	IN  DEF: layer[0].size=(?,?)
3410.7	IN  DEF: layer[0].size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].size.i - 1},{layer[0].size.j}) with size (1,{size.j - layer[0].size.j}) and color yellow and mask {layer[0].mask}
  [011]: a rectangle at ({layer[0].pos.i},{layer[0].size.j}) with size ({layer[0].size.i - 1},{size.j - layer[0].size.j}) and color red and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (0,0) with size (?,1) and color ? and mask full

DL input  with Mi: L = 42.5 + 846.2 = 888.7
DL output with Mo: L = 92.4 + 2429.7 = 2522.0
DL input+output M: L = 134.8 + 3275.9 = 3410.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,0) with size (15,1) and color pink and mask full
diff: 
delta:
   (35.1 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,0) with size (15,1) and color pink and mask full
  [01]: a rectangle at (14,1) with size (1,14) and color yellow and mask full
  [011]: a rectangle at (0,1) with size (14,14) and color red and mask 100000000000010000000000001000000000000100000000000010000000000001000000000000100000000000010000000000001000000000000100000000000010000000000001000000000000100000000000010000000000000
diff: 
delta:
   (198.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,0) with size (15,1) and color pink and mask full
diff: 
delta:
! 182 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,1) with size (15,14) and color black and mask full
diff:   color  layer[0].size.j  layer[0].pos.j
delta:
! 43 wrong pixels (generated / expected)

TRAIN 3bd67248.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,1) and color grey and mask full
diff: 
delta:
   (21.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,1) and color grey and mask full
  [01]: a rectangle at (2,1) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (0,1) with size (2,2) and color red and mask 110
diff: 
delta:
   (6.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,1) and color grey and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,1) with size (3,2) and color black and mask full
diff:   color  layer[0].size.j  layer[0].pos.j
delta:
! 7 wrong pixels (generated / expected)

TRAIN 3bd67248.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,1) and color cyan and mask full
diff: 
delta:
   (28.5 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,1) and color cyan and mask full
  [01]: a rectangle at (6,1) with size (1,6) and color yellow and mask full
  [011]: a rectangle at (0,1) with size (6,6) and color red and mask 1000010000100001000010000100000
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,1) and color cyan and mask full
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color cyan and layers
  [0]: a rectangle at (0,1) with size (7,6) and color black and mask full
diff:   color  layer[0].size.j  layer[0].pos.j
delta:
! 19 wrong pixels (generated / expected)

TRAIN 3bd67248.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,1) and color green and mask full
diff: 
delta:
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (0,1) with size (10,9) and color black and mask full
diff:   color  layer[0].size.j  layer[0].pos.j
delta:
! 28 wrong pixels (generated / expected)

TEST 3bd67248.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2429.7 bits (2429.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-316] Checking task 3bdb4ada.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 35400.0 = 35409.0
DL output with Mo: L = 9.0 + 29979.9 = 29988.9
DL input+output M: L = 17.9 + 65379.9 = 65397.9

# learning a model for train pairs
65397.9	
43666.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
26685.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14915.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5674.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5250.8	OUT DEF: size={size}
4901.9	OUT DEF: layer[0].size={layer[0].size}
4582.1	OUT DEF: layer[01].size={layer[01].size}
4350.5	OUT DEF: layer[0].pos={layer[0].pos}
4119.0	OUT DEF: layer[01].pos={layer[01].pos}
4026.0	OUT DEF: layer[0].color={layer[0].color}
3933.0	OUT DEF: layer[01].color={layer[01].color}
3885.5	IN  DEF: layer[0].mask=full
3838.1	IN  DEF: layer[01].mask=full
3807.1	OUT DEF: color=black
3776.0	IN  DEF: color=black
3754.3	IN  DEF: size=(?,?)
3592.8	IN  DEF: size.i=8
3571.0	IN  DEF: layer[0].pos=(?,?)
3485.6	IN  DEF: layer[0].pos.i=1
3463.8	IN  DEF: layer[0].size=(?,?)
3356.1	IN  DEF: layer[0].size.i=3
3334.3	IN  DEF: layer[01].pos=(?,?)
3248.9	IN  DEF: layer[01].pos.i=5
3227.1	IN  DEF: layer[01].size=(?,?)
3119.4	IN  DEF: layer[01].size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[0].color} and mask ?
  [01]: a rectangle at {layer[01].pos} with size {layer[01].size} and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (8,?) and color black and layers
  [0]: a rectangle at (1,?) with size (3,?) and color ? and mask full
  [01]: a rectangle at (5,?) with size (3,?) and color ? and mask full

DL input  with Mi: L = 74.1 + 1050.9 = 1124.9
DL output with Mo: L = 41.6 + 1952.9 = 1994.5
DL input+output M: L = 115.7 + 3003.7 = 3119.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,30) and color black and layers
  [0]: a rectangle at (1,0) with size (3,29) and color yellow and mask full
  [01]: a rectangle at (5,12) with size (3,13) and color cyan and mask full
diff: 
delta:
   (55.6 bits)
data: a background with size (8,30) and color black and layers
  [0]: a rectangle at (1,0) with size (3,29) and color yellow and mask 111111111111111111111111111111010101010101010101010101010111111111111111111111111111111
  [01]: a rectangle at (5,12) with size (3,13) and color cyan and mask 111111111111110101010101011111111111111
diff: 
delta:
   (130.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,30) and color black and layers
  [0]: a rectangle at (1,0) with size (3,29) and color yellow and mask full
  [01]: a rectangle at (5,12) with size (3,13) and color cyan and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,20) and color black and layers
  [0]: a rectangle at (1,1) with size (3,9) and color blue and mask full
  [01]: a rectangle at (5,7) with size (3,11) and color orange and mask full
diff: 
delta:
   (49.4 bits)
data: a background with size (8,20) and color black and layers
  [0]: a rectangle at (1,1) with size (3,9) and color blue and mask 111111111101010101111111111
  [01]: a rectangle at (5,7) with size (3,11) and color orange and mask 111111111111010101010111111111111
diff: 
delta:
   (64.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,20) and color black and layers
  [0]: a rectangle at (1,1) with size (3,9) and color blue and mask full
  [01]: a rectangle at (5,7) with size (3,11) and color orange and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color black and layers
  [0]: a rectangle at (1,2) with size (3,7) and color grey and mask full
  [01]: a rectangle at (5,1) with size (3,13) and color yellow and mask full
diff:   size.i
delta: (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (8,19)=8  (9,15)=8  (9,16)=8  (9,17)=8  (9,18)=8  (9,19)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,18)=8  (10,19)=8 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color black and layers
  [0]: a rectangle at (8,15) with size (3,5) and color cyan and mask full
  [01]: a rectangle at (5,1) with size (3,13) and color yellow and mask full
diff:   size.i  layer[0].pos.i
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5#
! 26 wrong pixels (generated / expected)

TEST 3bdb4ada.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1952.9 bits (1952.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-315] Checking task 3befdf3e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8057.2 = 8066.2
DL output with Mo: L = 9.0 + 21498.4 = 21507.3
DL input+output M: L = 17.9 + 29555.6 = 29573.5

# learning a model for train pairs
29573.5	
17118.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12229.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7435.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6544.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5966.2	OUT DEF: size={size}
5564.1	OUT DEF: layer[01].size={layer[01].size}
5245.9	OUT DEF: layer[01].pos={layer[01].pos}
5107.0	OUT DEF: layer[0].color={layer[01].color}
4968.1	OUT DEF: layer[01].color={layer[0].color}
4897.5	OUT DEF: layer[01].mask=full
4826.8	IN  DEF: layer[0].mask=full
4756.1	IN  DEF: layer[01].mask=full
4710.5	OUT DEF: color=black
4664.9	IN  DEF: color=black
4629.9	OUT DEF: layer[0].pos=(?,?)
4497.9	OUT DEF: layer[0].pos.i={layer[01].pos.i - layer[0].size.i}
4366.0	OUT DEF: layer[0].pos.j={layer[01].pos.j - layer[0].size.j}
4331.0	OUT DEF: layer[0].size=(?,?)
4295.9	IN  DEF: size=(?,?)
4032.6	IN  DEF: size.i=10
3769.3	IN  DEF: size.j=10
3734.3	IN  DEF: layer[0].pos=(?,?)
3596.3	IN  DEF: layer[0].pos.i=4
3561.3	IN  DEF: layer[0].size=(?,?)
3526.2	IN  DEF: layer[01].pos=(?,?)
3388.2	IN  DEF: layer[01].pos.i=3
3353.2	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.i - layer[0].size.i},{layer[01].pos.j - layer[0].size.j}) with size (?,?) and color {layer[01].color} and mask ?
  [01]: a rectangle at {layer[01].pos} with size {layer[01].size} and color {layer[0].color} and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (3,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 76.6 + 1139.3 = 1215.9
DL output with Mo: L = 65.5 + 2071.9 = 2137.3
DL input+output M: L = 142.1 + 3211.1 = 3353.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (1,1) and color pink and mask full
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask full
diff: 
delta:
   (34.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color yellow and mask 111010001101011000101110
  [01]: a rectangle at (3,3) with size (3,3) and color pink and mask full
diff: 
delta:
   (41.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (1,1) and color pink and mask full
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask full
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask full
diff:   layer[0].pos.i
delta: (4,4)=6 
! 24 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color orange and mask full
  [01]: a rectangle at (3,3) with size (4,4) and color red and mask full
diff: 
delta:
   (39.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (8,8) and color red and mask 11110000111100110000111101101111011011110000110011110000111100
  [01]: a rectangle at (3,3) with size (4,4) and color orange and mask full
diff: 
delta:
   (83.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color orange and mask full
  [01]: a rectangle at (3,3) with size (4,4) and color red and mask full
diff: 
delta:
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (4,4) and color red and mask 1111100110011111
  [01]: a rectangle at (4,4) with size (2,2) and color orange and mask full
diff:   layer[01].pos.i  layer[0].mask  layer[0].pos.i
delta:
! 48 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (2,2) and color blue and mask full
  [01]: a rectangle at (3,2) with size (4,4) and color green and mask full
diff: 
delta:
   (39.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (8,8) and color green and mask 11110000111100110000111101101111011011110000110011110000111100
  [01]: a rectangle at (3,2) with size (4,4) and color blue and mask full
diff: 
delta:
   (83.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (2,2) and color blue and mask full
  [01]: a rectangle at (3,2) with size (4,4) and color green and mask full
diff: 
delta:
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (4,4) and color green and mask 1111100110011111
  [01]: a rectangle at (4,3) with size (2,2) and color blue and mask full
diff:   layer[01].pos.i  layer[0].mask  layer[0].pos.i
delta:
! 46 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,6) with size (4,4) and color cyan and mask full
  [01]: a rectangle at (3,1) with size (1,3) and color cyan and mask full
diff:   size.j  size.i  layer[0].pos.i
delta: (1,1)=8  (1,2)=8  (1,3)=8  (2,1)=8  (2,2)=3  (2,3)=8  (7,7)=3  (7,8)=3  (8,7)=3  (8,8)=3 
! 69 wrong pixels (generated / expected)

TEST 3befdf3e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2071.9 bits (2071.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-314] Checking task 3c9b0459.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3545.4 = 3554.4
DL output with Mo: L = 9.0 + 3545.4 = 3554.4
DL input+output M: L = 17.9 + 7090.8 = 7108.7

# learning a model for train pairs
7108.7	
6398.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5687.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5194.5	OUT DEF: size={size}
4760.4	OUT DEF: layer[0].size={layer[0].size}
4440.9	OUT DEF: color={color}
4254.5	OUT DEF: layer[0].color={layer[0].color}
4206.3	OUT DEF: layer[0].pos=(?,?)
4092.9	OUT DEF: layer[0].pos.j=0
4044.7	IN  DEF: size=(?,?)
3827.2	IN  DEF: size.i=3
3609.7	IN  DEF: size.j=3
3561.5	IN  DEF: layer[0].pos=(?,?)
3513.2	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at (?,0) with size {layer[0].size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 44.8 + 2219.1 = 2264.0
DL output with Mo: L = 31.6 + 1217.6 = 1249.3
DL input+output M: L = 76.5 + 3436.8 = 3513.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask 100110
diff: 
delta: (2,1)=8 
   (52.7 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,2) and color blue and mask 11001
diff: 
delta: (0,1)=8 
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask 100110
diff: 
delta: (2,1)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1101011
diff: 
delta: (2,1)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (1,1) and color blue and mask full
diff: 
delta: (1,1)=1  (2,1)=8  (2,2)=1 
! 3 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 1110
diff: 
delta: (0,0)=9# (2,1)=9#
   (64.8 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (2,2) and color yellow and mask 111
diff: 
delta: (0,1)=9# (2,2)=9#
   (40.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 1110
diff: 
delta: (0,0)=9# (2,1)=9#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (1,2) and color yellow and mask full
diff: 
delta: (0,0)=9# (0,2)=4  (2,1)=9#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,0)=9# (1,1)=4  (2,1)=9#
! 5 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,3) and color grey and mask 110011
diff: 
delta:
   (36.6 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,3) and color grey and mask 110011
diff: 
delta:
   (11.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,3) and color grey and mask 110011
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (2,3) and color cyan and mask 100111
diff: 
delta: (2,0)=8 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
diff: 
delta: (2,1)=5# (2,2)=5#
! 2 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (2,3) and color brown and mask 111100
diff: 
delta: (0,1)=2  (2,0)=2 
   (67.9 bits)
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,0) with size (2,3) and color brown and mask 1111
diff: 
delta: (0,2)=2  (2,1)=2 
   (42.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (2,3) and color brown and mask 111100
diff: 
delta: (0,1)=2  (2,0)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (2,1) with size (1,2) and color green and mask full
diff: 
delta: (0,0)=3  (0,1)=2  (2,0)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,0) with size (1,3) and color brown and mask full
diff: 
delta: (0,1)=2  (0,2)=9# (2,0)=2 
! 8 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,2) and color pink and mask 101101
diff: 
delta: (2,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 1011
diff: 
delta: (2,0)=4  (2,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,1) with size (1,2) and color yellow and mask full
diff: 
delta: (1,2)=4  (2,0)=4  (2,2)=7#
! 6 wrong pixels (generated / expected)

TEST 3c9b0459.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1217.6 bits (1217.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-313] Checking task 3de23699.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8802.8 = 8811.8
DL output with Mo: L = 9.0 + 4525.7 = 4534.7
DL input+output M: L = 17.9 + 13328.6 = 13346.5

# learning a model for train pairs
13346.5	
10654.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8659.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8289.9	OUT DEF: layer[0].mask={layer[0].mask}
7786.0	OUT DEF: layer[0].size={layer[0].size}
7680.3	IN  SHAPE at layer[01]: a point at ? with color ?
7495.0	OUT DEF: layer[0].color={layer[01].color}
7383.1	IN  SHAPE at layer[011]: a point at ? with color ?
7259.9	IN  SHAPE at layer[0111]: a point at ? with color ?
7110.5	IN  SHAPE at layer[01111]: a point at ? with color ?
7050.3	OUT DEF: color=black
6990.1	IN  DEF: color=black
6941.9	OUT DEF: size=(?,?)
6716.6	OUT DEF: size.i={layer[01111].pos.i - layer[0].pos.i}
6668.3	OUT DEF: layer[0].pos=(?,?)
6546.7	OUT DEF: layer[0].pos.i=0
6498.4	IN  DEF: size=(?,?)
6450.2	IN  DEF: layer[0].pos=(?,?)
6402.0	IN  DEF: layer[0].size=(?,?)
6353.7	IN  DEF: layer[01].pos=(?,?)
6305.5	IN  DEF: layer[011].pos=(?,?)
6257.3	IN  DEF: layer[0111].pos=(?,?)
6071.7	IN  DEF: layer[0111].pos.i=5
6023.5	IN  DEF: layer[01111].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({layer[01111].pos.i - layer[0].pos.i},?) and color black and layers
  [0]: a rectangle at (0,?) with size {layer[0].size} and color {layer[01].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a point at (?,?) with color ?
  [011]: a point at (?,?) with color ?
  [0111]: a point at (5,?) with color ?
  [01111]: a point at (?,?) with color ?

DL input  with Mi: L = 99.2 + 4945.1 = 5044.3
DL output with Mo: L = 48.3 + 930.9 = 979.2
DL input+output M: L = 147.4 + 5876.0 = 6023.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color red and mask 110111010
  [01]: a point at (1,1) with color yellow
  [011]: a point at (1,5) with color yellow
  [0111]: a point at (5,1) with color yellow
  [01111]: a point at (5,5) with color yellow
diff: 
delta:
   (98.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 110111010
diff: 
delta:
   (8.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color red and mask 110111010
  [01]: a point at (1,1) with color yellow
  [011]: a point at (1,5) with color yellow
  [0111]: a point at (5,1) with color yellow
  [01111]: a point at (5,5) with color yellow
diff: 
delta:
! size mismatch, 3x10 instead of 3x3

TRAIN 3de23699.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,9) and color black and layers
  [0]: a rectangle at (2,2) with size (3,5) and color red and mask 10011011000110
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (5,1) with color green
  [01111]: a point at (5,7) with color green
diff: 
delta:
   (113.2 bits)
data: a background with size (3,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,5) and color green and mask 10011011000110
diff: 
delta:
   (10.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,9) and color black and layers
  [0]: a rectangle at (2,2) with size (3,5) and color red and mask 10011011000110
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (5,1) with color green
  [01111]: a point at (5,7) with color green
diff: 
delta:
! size mismatch, 3x10 instead of 3x5

TRAIN 3de23699.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (6,4) with size (4,3) and color cyan and mask 110111010010
  [01]: a point at (5,3) with color pink
  [011]: a point at (10,3) with color pink
  [0111]: a point at (5,8) with color pink
  [01111]: a point at (10,8) with color pink
diff: 
delta:
   (114.1 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,3) and color pink and mask 110111010010
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (6,4) with size (4,3) and color cyan and mask 110111010010
  [01]: a point at (5,3) with color pink
  [011]: a point at (10,3) with color pink
  [0111]: a point at (5,8) with color pink
  [01111]: a point at (10,8) with color pink
diff: 
delta:
! size mismatch, 4x10 instead of 4x4

TRAIN 3de23699.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,18) and color black and layers
  [0]: a rectangle at (2,5) with size (2,3) and color yellow and mask 11110
  [01]: a point at (1,2) with color cyan
  [011]: a point at (1,11) with color cyan
  [0111]: a point at (5,7) with color yellow
  [01111]: a point at (6,2) with color cyan
diff: 
delta: (4,9)=4  (5,9)=4  (6,11)=8 
   (168.7 bits)
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (0,2) with size (2,3) and color cyan and mask 11110
diff: 
delta: (2,6)=8  (3,4)=8  (3,6)=8 
   (64.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  [0]: a rectangle at (2,5) with size (2,3) and color yellow and mask 11110
  [01]: a point at (1,2) with color cyan
  [011]: a point at (1,11) with color cyan
  [0111]: a point at (5,7) with color yellow
  [01111]: a point at (6,2) with color cyan
diff: 
delta: (4,9)=4  (5,9)=4  (6,11)=8 
! size mismatch, 4x10 instead of 4x8

TRAIN 3de23699.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (6,6) with size (3,3) and color green and mask 100111001
  [01]: a point at (2,2) with color red
  [011]: a point at (2,13) with color red
  [0111]: a point at (11,2) with color red
  [01111]: a point at (11,13) with color red
diff:   layer[0111].pos.i
delta: (4,4)=3  (4,9)=3  (4,10)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3 
! size mismatch, 5x10 instead of 8x10

TEST 3de23699.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 930.9 bits (930.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-312] Checking task 3e980e27.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8122.2 = 8131.2
DL output with Mo: L = 9.0 + 14421.4 = 14430.4
DL input+output M: L = 17.9 + 22543.7 = 22561.6

# learning a model for train pairs
22561.6	
20937.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19349.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17743.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16530.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15698.8	OUT DEF: size={size}
15213.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 5977.9 = 6021.3
DL output with Mo: L = 59.6 + 9132.3 = 9191.9
DL input+output M: L = 103.0 + 15110.2 = 15213.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color blue and mask 100011010
  [01]: a rectangle at (3,3) with size (1,1) and color red and mask full
diff: 
delta: (8,7)=2 
   (106.5 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color blue and mask 100011010
  [01]: a rectangle at (8,5) with size (3,3) and color blue and mask 1110010
  [011]: a rectangle at (3,3) with size (1,1) and color red and mask full
diff: 
delta: (8,7)=2 
   (125.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color blue and mask 100011010
  [01]: a rectangle at (3,3) with size (1,1) and color red and mask full
diff: 
delta: (8,7)=2 
! 14 wrong pixels (generated / expected)

TRAIN 3e980e27.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,5) with size (3,3) and color yellow and mask 11101010
  [01]: a rectangle at (2,6) with size (1,1) and color green and mask full
diff: 
delta: (6,2)=3  (9,9)=3 
   (126.0 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,5) with size (3,3) and color yellow and mask 11101010
  [01]: a rectangle at (5,1) with size (3,3) and color yellow and mask 11101010
  [011]: a rectangle at (8,8) with size (3,3) and color yellow and mask 11101010
diff: 
delta: (2,6)=3  (6,2)=3  (9,9)=3 
   (179.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,5) with size (3,3) and color yellow and mask 11101010
  [01]: a rectangle at (2,6) with size (1,1) and color green and mask full
diff: 
delta: (6,2)=3  (9,9)=3 
! 22 wrong pixels (generated / expected)

TRAIN 3e980e27.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (2,3) and color cyan and mask 1110
  [01]: a rectangle at (7,6) with size (2,3) and color yellow and mask 110001
diff: 
delta: (1,10)=2  (2,2)=3  (7,7)=2  (8,1)=3 
   (171.1 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,9) with size (2,3) and color yellow and mask 11100
  [01]: a rectangle at (2,2) with size (2,3) and color cyan and mask 1110
  [011]: a rectangle at (7,6) with size (2,3) and color yellow and mask 110001
diff: 
delta: (1,10)=2  (2,2)=3  (7,7)=2  (8,1)=3  (8,2)=8  (8,3)=8  (9,1)=8 
   (242.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (2,3) and color cyan and mask 1110
  [01]: a rectangle at (7,6) with size (2,3) and color yellow and mask 110001
diff: 
delta: (1,10)=2  (2,2)=3  (7,7)=2  (8,1)=3 
! 20 wrong pixels (generated / expected)

TRAIN 3e980e27.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,7) with size (3,3) and color yellow and mask 100100111
  [01]: a rectangle at (7,9) with size (2,3) and color blue and mask 101110
diff: 
delta: (2,3)=2  (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (194.2 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color yellow and mask 1001111
  [01]: a rectangle at (1,7) with size (3,3) and color yellow and mask 100100111
  [011]: a rectangle at (10,7) with size (3,3) and color yellow and mask 1001111
diff: 
delta: (2,3)=2  (2,8)=2  (7,10)=1  (7,11)=1  (8,4)=1  (8,5)=1  (8,9)=1  (8,10)=3  (8,11)=1  (9,3)=1  (9,4)=3  (9,5)=1  (11,8)=2 
   (366.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,7) with size (3,3) and color yellow and mask 100100111
  [01]: a rectangle at (7,9) with size (2,3) and color blue and mask 101110
diff: 
delta: (2,3)=2  (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! 32 wrong pixels (generated / expected)

TRAIN 3e980e27.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (5,8) with size (3,3) and color cyan and mask 10100111
  [01]: a rectangle at (1,1) with size (3,2) and color blue and mask 110110
diff: 
delta: (1,5)=3  (1,9)=2  (2,2)=2  (6,9)=3  (9,3)=2  (10,7)=3 
! 37 wrong pixels (generated / expected)

TEST 3e980e27.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9132.3 bits (9132.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-311] Checking task 3eda0437.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 22396.8 = 22405.7
DL output with Mo: L = 9.0 + 26711.0 = 26720.0
DL input+output M: L = 17.9 + 49107.8 = 49125.7

# learning a model for train pairs
49125.7	
41869.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35466.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
31488.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27584.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24137.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
20903.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 8804.7 = 8864.5
DL output with Mo: L = 59.8 + 11978.9 = 12038.7
DL input+output M: L = 119.6 + 20783.6 = 20903.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,30) and color black and layers
  [0]: a rectangle at (1,7) with size (2,8) and color blue and mask 1101110111101111
  [01]: a rectangle at (0,17) with size (3,7) and color blue and mask 110010010111001001011
  [011]: a rectangle at (0,0) with size (3,6) and color blue and mask 100011001010111110
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,26)=1 
   (334.2 bits)
data: a background with size (3,30) and color black and layers
  [0]: a rectangle at (1,7) with size (2,8) and color blue and mask 1101110111101111
  [01]: a rectangle at (0,17) with size (3,7) and color blue and mask 110010010111001001011
  [011]: a rectangle at (0,0) with size (3,6) and color blue and mask 100011001010111110
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,15)=6  (1,16)=6  (1,17)=6  (1,18)=6  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,15)=6  (2,16)=6  (2,17)=6  (2,18)=6  (2,26)=1 
   (475.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,30) and color black and layers
  [0]: a rectangle at (1,7) with size (2,8) and color blue and mask 1101110111101111
  [01]: a rectangle at (0,17) with size (3,7) and color blue and mask 110010010111001001011
  [011]: a rectangle at (0,0) with size (3,6) and color blue and mask 100011001010111110
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,26)=1 
! size mismatch, 10x10 instead of 3x30

TRAIN 3eda0437.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,20) and color black and layers
  [0]: a rectangle at (0,7) with size (4,8) and color blue and mask 111011101101010110101000011110
  [01]: a rectangle at (0,0) with size (4,7) and color blue and mask 1010001110001101111100111
  [011]: a rectangle at (0,16) with size (4,4) and color blue and mask 1111011111101010
diff: 
delta:
   (193.3 bits)
data: a background with size (4,20) and color black and layers
  [0]: a rectangle at (0,7) with size (4,8) and color blue and mask 111011101101010110101000011110
  [01]: a rectangle at (0,0) with size (4,7) and color blue and mask 1010001110001101111100111
  [011]: a rectangle at (0,16) with size (4,4) and color blue and mask 1111011111101010
diff: 
delta: (0,14)=6  (0,15)=6  (0,16)=6  (1,14)=6  (1,15)=6  (1,16)=6 
   (302.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color black and layers
  [0]: a rectangle at (0,7) with size (4,8) and color blue and mask 111011101101010110101000011110
  [01]: a rectangle at (0,0) with size (4,7) and color blue and mask 1010001110001101111100111
  [011]: a rectangle at (0,16) with size (4,4) and color blue and mask 1111011111101010
diff: 
delta:
! size mismatch, 10x10 instead of 4x20

TRAIN 3eda0437.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,20) and color black and layers
  [0]: a rectangle at (0,7) with size (2,4) and color blue and mask 11110100
  [01]: a rectangle at (0,12) with size (2,4) and color blue and mask 1101001
  [011]: a rectangle at (0,0) with size (2,2) and color blue and mask 1011
diff: 
delta: (0,17)=1  (0,19)=1 
   (156.4 bits)
data: a background with size (2,20) and color blue and layers
  [0]: a rectangle at (0,2) with size (2,5) and color pink and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [011]: a rectangle at (0,10) with size (2,10) and color black and mask 11111001100101011011
diff: 
delta: (0,7)=0  (0,8)=0  (1,0)=0 
   (183.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,20) and color black and layers
  [0]: a rectangle at (0,7) with size (2,4) and color blue and mask 11110100
  [01]: a rectangle at (0,12) with size (2,4) and color blue and mask 1101001
  [011]: a rectangle at (0,0) with size (2,2) and color blue and mask 1011
diff: 
delta: (0,17)=1  (0,19)=1 
! size mismatch, 10x10 instead of 2x20

TRAIN 3eda0437.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,20) and color black and layers
  [0]: a rectangle at (0,5) with size (4,12) and color blue and mask 111111100110100010101010010000010011000111110001
  [01]: a rectangle at (2,2) with size (2,2) and color blue and mask 111
  [011]: a rectangle at (1,0) with size (2,1) and color blue and mask full
diff: 
delta: (0,2)=1  (3,19)=1 
   (196.6 bits)
data: a background with size (4,20) and color black and layers
  [0]: a rectangle at (0,5) with size (4,12) and color blue and mask 111111100110100010101010010000010011000111110001
  [01]: a rectangle at (0,17) with size (3,3) and color pink and mask full
  [011]: a rectangle at (2,2) with size (2,2) and color blue and mask 111
diff: 
delta: (0,2)=1  (1,0)=1  (2,0)=1  (3,19)=1 
   (236.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color black and layers
  [0]: a rectangle at (0,5) with size (4,12) and color blue and mask 111111100110100010101010010000010011000111110001
  [01]: a rectangle at (2,2) with size (2,2) and color blue and mask 111
  [011]: a rectangle at (1,0) with size (2,1) and color blue and mask full
diff: 
delta: (0,2)=1  (3,19)=1 
! size mismatch, 10x10 instead of 4x20

TRAIN 3eda0437.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,24) and color black and layers
  [0]: a rectangle at (0,9) with size (4,15) and color blue and mask 100011011011111111100110001011011111011011000010110000100000
  [01]: a rectangle at (0,4) with size (3,5) and color blue and mask 11100111110101
  [011]: a rectangle at (3,2) with size (1,2) and color blue and mask full
diff: 
delta: (1,0)=1 
! size mismatch, 10x10 instead of 4x24

TEST 3eda0437.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 11978.9 bits (11978.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-310] Checking task 3f7978a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12400.1 = 12409.0
DL output with Mo: L = 9.0 + 6760.9 = 6769.9
DL input+output M: L = 17.9 + 19160.9 = 19178.9

# learning a model for train pairs
19178.9	
17076.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15808.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14523.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13471.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13097.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12863.1	OUT DEF: color=cyan
12725.1	OUT DEF: layer[0].color=black
12587.2	OUT DEF: layer[01].color=grey
12516.5	OUT DEF: layer[0].mask=full
12445.8	OUT DEF: layer[01].mask=full
12410.8	OUT DEF: size=(?,?)
12203.7	OUT DEF: size.j={layer[01].pos.i + layer[011].pos.j}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,{layer[01].pos.i + layer[011].pos.j}) and color cyan and layers
  [0]: a rectangle at ? with size ? and color black and mask full
  [01]: a rectangle at ? with size ? and color grey and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 9422.4 = 9482.2
DL output with Mo: L = 64.9 + 2656.6 = 2721.5
DL input+output M: L = 124.7 + 12079.1 = 12203.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color cyan and layers
  [0]: a rectangle at (2,1) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 111111101101110111111111111111011101111011111101010111111011111011011101111111111
  [011]: a rectangle at (2,5) with size (3,1) and color grey and mask full
diff: 
delta:
   (196.3 bits)
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (0,1) with size (5,3) and color black and mask full
  [01]: a rectangle at (1,0) with size (3,5) and color grey and mask full
diff: 
delta: (2,2)=8 
   (69.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color cyan and layers
  [0]: a rectangle at (2,1) with size (3,1) and color grey and mask full
  [01]: a rectangle at (2,5) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (9,9) and color black and mask 111111101101110111111111111111011101111111111101110111111111111011011101111111111
diff: 
delta:
! size mismatch, 10x2 instead of 5x5
>> Trial 2
data: a background with size (9,9) and color cyan and layers
  [0]: a rectangle at (2,1) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 111111101101110111111111111111011101111011111101010111111011111011011101111111111
  [011]: a rectangle at (2,5) with size (3,1) and color grey and mask full
diff: 
delta:
! size mismatch, 10x5 instead of 5x5

TRAIN 3f7978a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,11) and color cyan and layers
  [0]: a rectangle at (1,8) with size (3,3) and color cyan and mask 1110100
  [01]: a rectangle at (7,8) with size (2,2) and color cyan and mask 1101
  [011]: a rectangle at (0,0) with size (9,11) and color black and mask 111111111011111110101111011111011110100110111101111101011111111011111111111111111011101111111111101
diff: 
delta: (4,2)=5# (4,8)=5# (5,2)=5# (5,8)=5# (6,2)=5# (6,8)=5#
   (344.3 bits)
data: a background with size (5,7) and color cyan and layers
  [0]: a rectangle at (0,1) with size (5,5) and color black and mask full
  [01]: a rectangle at (1,0) with size (3,7) and color grey and mask full
diff: 
delta: (2,3)=8  (2,4)=8  (4,2)=8 
   (107.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color cyan and layers
  [0]: a rectangle at (1,8) with size (3,3) and color cyan and mask 1110100
  [01]: a rectangle at (7,8) with size (2,2) and color cyan and mask 1101
  [011]: a rectangle at (0,0) with size (9,11) and color black and mask 111111111011111110101111011111011110100110111101111101011111111011111111111111111011101111111111101
diff: 
delta: (4,2)=5# (4,8)=5# (5,2)=5# (5,8)=5# (6,2)=5# (6,8)=5#
! size mismatch, 10x7 instead of 5x7
>> Trial 2
data: a background with size (9,11) and color cyan and layers
  [0]: a rectangle at (1,8) with size (3,3) and color cyan and mask 1110100
  [01]: a rectangle at (0,1) with size (2,2) and color cyan and mask 1001
  [011]: a rectangle at (0,0) with size (9,11) and color black and mask 100111111011101110101111011111011110100110111101111101011111111011111111111111111011111111111111111
diff: 
delta: (4,2)=5# (4,8)=5# (5,2)=5# (5,8)=5# (6,2)=5# (6,8)=5#
! size mismatch, 10x0 instead of 5x7

TRAIN 3f7978a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (3,3) with size (4,1) and color grey and mask full
  [01]: a rectangle at (3,7) with size (4,1) and color grey and mask full
  [011]: a rectangle at (9,2) with size (1,2) and color cyan and mask full
diff: 
delta: (0,9)=8  (0,10)=8  (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (7,10)=8  (8,10)=8  (9,7)=8  (10,8)=8 
   (401.6 bits)
data: a background with size (6,5) and color cyan and layers
  [0]: a rectangle at (0,1) with size (6,3) and color black and mask full
  [01]: a rectangle at (1,0) with size (4,5) and color grey and mask full
diff: 
delta: (2,2)=8  (4,2)=8 
   (89.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (3,3) with size (4,1) and color grey and mask full
  [01]: a rectangle at (3,7) with size (4,1) and color grey and mask full
  [011]: a rectangle at (0,9) with size (1,2) and color cyan and mask full
diff: 
delta: (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (7,10)=8  (8,10)=8  (9,2)=8  (9,3)=8  (9,7)=8  (10,8)=8 
! size mismatch, 10x12 instead of 6x5
>> Trial 2
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (3,3) with size (4,1) and color grey and mask full
  [01]: a rectangle at (3,7) with size (4,1) and color grey and mask full
  [011]: a rectangle at (9,2) with size (1,2) and color cyan and mask full
diff: 
delta: (0,9)=8  (0,10)=8  (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (7,10)=8  (8,10)=8  (9,7)=8  (10,8)=8 
! size mismatch, 10x5 instead of 6x5
>> Trial 3
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (3,3) with size (4,1) and color grey and mask full
  [01]: a rectangle at (3,7) with size (4,1) and color grey and mask full
  [011]: a rectangle at (7,10) with size (2,1) and color cyan and mask full
diff: 
delta: (0,9)=8  (0,10)=8  (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (9,2)=8  (9,3)=8  (9,7)=8  (10,8)=8 
! size mismatch, 10x13 instead of 6x5

TRAIN 3f7978a0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  [0]: a rectangle at (4,0) with size (8,1) and color grey and mask full
  [01]: a rectangle at (4,3) with size (8,1) and color grey and mask full
  [011]: a rectangle at (3,3) with size (10,1) and color cyan and mask full
diff: 
delta: (0,0)=8  (2,8)=8  (3,0)=8  (4,1)=8  (4,12)=8  (7,6)=8  (7,9)=8  (8,2)=8  (8,4)=8  (8,12)=8  (9,5)=8  (10,1)=8  (10,10)=8  (10,12)=8  (11,7)=8  (12,0)=8  (13,12)=8 
! size mismatch, 10x7 instead of 10x4
>> Trial 2
data: a background with size (14,13) and color black and layers
  [0]: a rectangle at (4,3) with size (8,1) and color grey and mask full
  [01]: a rectangle at (3,3) with size (10,1) and color cyan and mask full
  [011]: a rectangle at (4,0) with size (8,1) and color grey and mask full
diff: 
delta: (0,0)=8  (2,8)=8  (3,0)=8  (4,1)=8  (4,12)=8  (7,6)=8  (7,9)=8  (8,2)=8  (8,4)=8  (8,12)=8  (9,5)=8  (10,1)=8  (10,10)=8  (10,12)=8  (11,7)=8  (12,0)=8  (13,12)=8 
! size mismatch, 10x3 instead of 10x4

TEST 3f7978a0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2656.6 bits (2656.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-309] Checking task 40853293.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4497.9 = 4506.9
DL output with Mo: L = 9.0 + 14344.5 = 14353.5
DL input+output M: L = 17.9 + 18842.4 = 18860.4

# learning a model for train pairs
18860.4	
15408.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12715.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10784.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9228.7	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
8186.2	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
7728.1	OUT DEF: size={size}
7636.6	OUT DEF: layer[011].color=green
7545.0	OUT DEF: layer[0111].color=cyan
7497.6	OUT DEF: layer[0].mask=full
7450.1	OUT DEF: layer[01].mask=full
7402.7	OUT DEF: layer[011].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color green and mask full
  [0111]: a rectangle at ? with size ? and color cyan and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers

DL input  with Mi: L = 9.0 + 4497.9 = 4506.9
DL output with Mo: L = 90.5 + 2805.3 = 2895.8
DL input+output M: L = 99.5 + 7303.2 = 7402.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,20) and color black and layers
diff: 
delta: (2,6)=2  (6,3)=3  (6,11)=3  (12,14)=8  (13,6)=2  (17,14)=8  (18,4)=6  (20,2)=5# (20,7)=5# (27,4)=6 
   (234.4 bits)
data: a background with size (30,20) and color black and layers
  [0]: a rectangle at (2,6) with size (12,1) and color red and mask full
  [01]: a rectangle at (18,4) with size (10,1) and color pink and mask full
  [011]: a rectangle at (6,3) with size (1,9) and color green and mask full
  [0111]: a rectangle at (12,14) with size (6,1) and color cyan and mask full
  [01111]: a rectangle at (20,2) with size (1,6) and color grey and mask full
diff: 
delta:
   (146.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,20) and color black and layers
diff: 
delta: (2,6)=2  (6,3)=3  (6,11)=3  (12,14)=8  (13,6)=2  (17,14)=8  (18,4)=6  (20,2)=5# (20,7)=5# (27,4)=6 
! 45 wrong pixels (generated / expected)

TRAIN 40853293.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
diff: 
delta: (2,3)=4  (4,2)=3  (4,7)=3  (8,2)=7# (8,5)=7# (10,3)=4  (12,5)=9# (14,1)=8  (14,6)=8  (18,5)=9#
   (215.4 bits)
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (2,3) with size (9,1) and color yellow and mask full
  [01]: a rectangle at (12,5) with size (7,1) and color brown and mask full
  [011]: a rectangle at (4,2) with size (1,6) and color green and mask full
  [0111]: a rectangle at (14,1) with size (1,6) and color cyan and mask full
  [01111]: a rectangle at (8,2) with size (1,4) and color orange and mask full
diff: 
delta:
   (134.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
diff: 
delta: (2,3)=4  (4,2)=3  (4,7)=3  (8,2)=7# (8,5)=7# (10,3)=4  (12,5)=9# (14,1)=8  (14,6)=8  (18,5)=9#
! 33 wrong pixels (generated / expected)

TRAIN 40853293.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
diff: 
delta: (1,3)=3  (2,9)=5# (3,1)=2  (3,16)=2  (7,7)=7# (7,13)=7# (9,9)=5# (14,8)=8  (14,14)=8  (18,3)=3 
! 57 wrong pixels (generated / expected)

TEST 40853293.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2805.3 bits (2805.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-308] Checking task 4093f84a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 34600.5 = 34609.4
DL output with Mo: L = 9.0 + 34600.5 = 34609.4
DL input+output M: L = 17.9 + 69200.9 = 69218.9

# learning a model for train pairs
69218.9	
39097.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11470.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10833.7	OUT DEF: size={size}
10693.7	OUT DEF: layer[0].color={layer[0].color}
10555.7	IN  DEF: layer[0].color=grey
10485.0	IN  DEF: layer[0].mask=full
10416.8	IN  SHAPE at layer[01]: a point at ? with color ?
10346.9	IN  SHAPE at layer[011]: a point at ? with color ?
10275.1	IN  SHAPE at layer[0111]: a point at ? with color ?
10201.1	IN  SHAPE at layer[01111]: a point at ? with color ?
10123.7	IN  SHAPE at layer[011111]: a point at ? with color ?
10041.1	IN  SHAPE at layer[0111111]: a point at ? with color ?
9947.5	IN  SHAPE at layer[01111111]: a point at ? with color ?
9901.9	OUT DEF: color=black
9856.3	IN  DEF: color=black
9821.3	OUT DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,?) with size ? and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color grey and mask full
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?
  [0111111]: a point at ? with color ?
  [01111111]: a point at ? with color ?

DL input  with Mi: L = 92.1 + 6095.2 = 6187.3
DL output with Mo: L = 31.0 + 3603.0 = 3634.0
DL input+output M: L = 123.2 + 9698.1 = 9821.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (5,0) with size (4,14) and color grey and mask full
  [01]: a point at (0,8) with color red
  [011]: a point at (2,2) with color red
  [0111]: a point at (3,10) with color red
  [01111]: a point at (9,9) with color red
  [011111]: a point at (10,1) with color red
  [0111111]: a point at (11,4) with color red
  [01111111]: a point at (12,11) with color red
diff: 
delta:
   (163.9 bits)
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (4,0) with size (6,14) and color grey and mask 1010000100101111111111111111111111111111111111111111111111111111111100010100000100
diff: 
delta:
   (115.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (5,0) with size (4,14) and color grey and mask full
  [01]: a point at (0,8) with color red
  [011]: a point at (2,2) with color red
  [0111]: a point at (3,10) with color red
  [01111]: a point at (9,9) with color red
  [011111]: a point at (10,1) with color red
  [0111111]: a point at (11,4) with color red
  [01111111]: a point at (12,11) with color red
diff: 
delta:
! 67 wrong pixels (generated / expected)

TRAIN 4093f84a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,4) with size (14,5) and color grey and mask full
  [01]: a point at (0,12) with color green
  [011]: a point at (1,9) with color green
  [0111]: a point at (2,3) with color green
  [01111]: a point at (2,11) with color green
  [011111]: a point at (4,0) with color green
  [0111111]: a point at (6,10) with color green
  [01111111]: a point at (6,12) with color green
diff: 
delta: (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
   (243.4 bits)
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,3) with size (14,8) and color grey and mask 11111001111110001111100011111001111111001111100011111111111110001111100011111100111110011111110111111001111110
diff: 
delta:
   (144.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,4) with size (14,5) and color grey and mask full
  [01]: a point at (0,12) with color green
  [011]: a point at (1,9) with color green
  [0111]: a point at (2,3) with color green
  [01111]: a point at (2,11) with color green
  [011111]: a point at (4,0) with color green
  [0111111]: a point at (6,10) with color green
  [01111111]: a point at (6,12) with color green
diff: 
delta: (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
! 85 wrong pixels (generated / expected)

TRAIN 4093f84a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (7,0) with size (2,14) and color grey and mask full
  [01]: a point at (1,7) with color blue
  [011]: a point at (3,3) with color blue
  [0111]: a point at (3,7) with color blue
  [01111]: a point at (3,12) with color blue
  [011111]: a point at (5,8) with color blue
  [0111111]: a point at (9,1) with color blue
  [01111111]: a point at (10,11) with color blue
diff: 
delta: (11,3)=1  (11,8)=1 
   (202.2 bits)
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (5,0) with size (5,14) and color grey and mask 10010000101011111111111111111111111111110100011000100000000010000000
diff: 
delta:
   (100.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (7,0) with size (2,14) and color grey and mask full
  [01]: a point at (1,7) with color blue
  [011]: a point at (3,3) with color blue
  [0111]: a point at (3,7) with color blue
  [01111]: a point at (3,12) with color blue
  [011111]: a point at (5,8) with color blue
  [0111111]: a point at (9,1) with color blue
  [01111111]: a point at (10,11) with color blue
diff: 
delta: (11,3)=1  (11,8)=1 
! 41 wrong pixels (generated / expected)

TRAIN 4093f84a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,5) with size (14,2) and color grey and mask full
  [01]: a point at (1,2) with color yellow
  [011]: a point at (1,9) with color yellow
  [0111]: a point at (3,3) with color yellow
  [01111]: a point at (4,1) with color yellow
  [011111]: a point at (6,7) with color yellow
  [0111111]: a point at (6,11) with color yellow
  [01111111]: a point at (11,1) with color yellow
diff: 
delta: (11,3)=4  (11,10)=4  (13,12)=4 
! 42 wrong pixels (generated / expected)

TEST 4093f84a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3603.0 bits (3603.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-307] Checking task 41e4d17e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9771.6 = 9780.6
DL output with Mo: L = 9.0 + 23507.7 = 23516.7
DL input+output M: L = 17.9 + 33279.3 = 33297.2

# learning a model for train pairs
33297.2	
27377.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
25981.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
25549.6	OUT DEF: size={size}
25260.2	IN  DEF: layer[01].mask=1111110001100011000111111
25100.4	OUT DEF: color={color}
24945.7	IN  DEF: color=cyan
24854.1	IN  DEF: layer[0].color=blue
24762.6	IN  DEF: layer[01].color=blue
24740.8	IN  DEF: size=(?,?)
24544.9	IN  DEF: size.i=15
24349.0	IN  DEF: size.j=15
24327.2	IN  DEF: layer[0].pos=(?,?)
24224.5	IN  DEF: layer[0].pos.j=3
24202.7	IN  DEF: layer[0].size=(?,?)
24067.1	IN  DEF: layer[0].size.j=5
24045.3	IN  DEF: layer[01].pos=(?,?)
24023.5	IN  DEF: layer[01].size=(?,?)
23887.8	IN  DEF: layer[01].size.i=5
23752.1	IN  DEF: layer[01].size.j=5

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
WHERE (Mi)
a background with size (15,15) and color cyan and layers
  [0]: a rectangle at (?,3) with size (?,5) and color blue and mask ?
  [01]: a rectangle at (?,?) with size (5,5) and color blue and mask 1111110001100011000111111

DL input  with Mi: L = 124.3 + 703.0 = 827.4
DL output with Mo: L = 8.2 + 22916.5 = 22924.8
DL input+output M: L = 132.6 + 23619.6 = 23752.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  [0]: a rectangle at (1,3) with size (1,5) and color blue and mask full
  [01]: a rectangle at (1,3) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta:
   (20.3 bits)
data: a background with size (15,15) and color cyan and layers
diff: 
delta: (0,5)=6  (1,3)=1  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (2,3)=1  (2,5)=6  (2,7)=1  (3,0)=6  (3,1)=6  (3,2)=6  (3,3)=1  (3,4)=6  (3,5)=6  (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=6  (3,10)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (4,3)=1  (4,5)=6  (4,7)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (6,5)=6  (7,5)=6  (8,5)=6  (9,5)=6  (10,5)=6  (11,5)=6  (12,5)=6  (13,5)=6  (14,5)=6 
   (779.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  [0]: a rectangle at (1,3) with size (1,5) and color blue and mask full
  [01]: a rectangle at (1,3) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta:
! 41 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  [0]: a rectangle at (3,3) with size (5,5) and color blue and mask 1111110001100011000111111
  [01]: a rectangle at (9,8) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta:
   (50.0 bits)
data: a background with size (15,15) and color cyan and layers
diff: 
delta: (0,5)=6  (0,10)=6  (1,5)=6  (1,10)=6  (2,5)=6  (2,10)=6  (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,7)=1  (3,10)=6  (4,3)=1  (4,5)=6  (4,7)=1  (4,10)=6  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=1  (5,4)=6  (5,5)=6  (5,6)=6  (5,7)=1  (5,8)=6  (5,9)=6  (5,10)=6  (5,11)=6  (5,12)=6  (5,13)=6  (5,14)=6  (6,3)=1  (6,5)=6  (6,7)=1  (6,10)=6  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (7,10)=6  (8,5)=6  (8,10)=6  (9,5)=6  (9,8)=1  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (10,5)=6  (10,8)=1  (10,10)=6  (10,12)=1  (11,0)=6  (11,1)=6  (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=1  (11,9)=6  (11,10)=6  (11,11)=6  (11,12)=1  (11,13)=6  (11,14)=6  (12,5)=6  (12,8)=1  (12,10)=6  (12,12)=1  (13,5)=6  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=1  (13,12)=1  (14,5)=6  (14,10)=6 
   (1512.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  [0]: a rectangle at (3,3) with size (5,5) and color blue and mask 1111110001100011000111111
  [01]: a rectangle at (9,8) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta:
! 80 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  [0]: a rectangle at (9,3) with size (5,5) and color blue and mask 1111110001100011000111111
  [01]: a rectangle at (1,6) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta:
! 80 wrong pixels (generated / expected)

TEST 41e4d17e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 22916.5 bits (22916.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-306] Checking task 4258a5f9.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1697.5 = 1706.5
DL output with Mo: L = 9.0 + 11483.4 = 11492.4
DL input+output M: L = 17.9 + 13180.9 = 13198.8

# learning a model for train pairs
13198.8	
8153.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6802.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5794.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5420.3	OUT DEF: size={size}
5328.8	OUT DEF: layer[0].color=blue
5237.2	OUT DEF: layer[01].color=blue
5145.7	OUT DEF: layer[011].color=blue
5095.7	IN  SHAPE at layer[0]: a point at ? with color ?
5004.2	IN  DEF: layer[0].color=grey
4948.1	IN  SHAPE at layer[01]: a point at ? with color ?
4880.0	IN  SHAPE at layer[011]: a point at ? with color ?
4788.4	IN  DEF: layer[01].color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color blue and mask ?
  [01]: a rectangle at ? with size ? and color blue and mask ?
  [011]: a rectangle at ? with size ? and color blue and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color grey
  [01]: a point at ? with color grey
  [011]: a point at ? with color ?

DL input  with Mi: L = 42.5 + 1306.0 = 1348.5
DL output with Mo: L = 63.2 + 3376.7 = 3439.9
DL input+output M: L = 105.7 + 4682.7 = 4788.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,6) with color grey
  [01]: a point at (4,3) with color grey
  [011]: a point at (7,1) with color grey
diff: 
delta:
   (55.7 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,5) with size (3,3) and color blue and mask full
  [01]: a rectangle at (3,2) with size (3,3) and color blue and mask full
  [011]: a rectangle at (6,0) with size (3,3) and color blue and mask full
diff: 
delta: (1,6)=5# (4,3)=5# (7,1)=5#
   (132.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,6) with color grey
  [01]: a point at (4,3) with color grey
  [011]: a point at (7,1) with color grey
diff: 
delta:
! 31 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,7) with color grey
  [01]: a point at (2,3) with color grey
  [011]: a point at (5,7) with color grey
diff: 
delta: (7,3)=5#
   (74.9 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,6) with size (7,3) and color blue and mask full
  [01]: a rectangle at (1,2) with size (3,3) and color blue and mask full
  [011]: a rectangle at (6,2) with size (3,3) and color blue and mask full
diff: 
delta: (1,7)=5# (2,3)=5# (3,6)=0  (3,7)=0  (3,8)=0  (5,7)=5# (7,3)=5#
   (205.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,7) with color grey
  [01]: a point at (2,3) with color grey
  [011]: a point at (5,7) with color grey
diff: 
delta: (7,3)=5#
! 40 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,1) with color grey
  [01]: a point at (2,7) with color grey
  [011]: a point at (4,3) with color grey
diff: 
delta: (7,1)=5# (7,5)=5#
! 42 wrong pixels (generated / expected)

TEST 4258a5f9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3376.7 bits (3376.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-305] Checking task 4290ef0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24197.5 = 24206.4
DL output with Mo: L = 9.0 + 24228.2 = 24237.1
DL input+output M: L = 17.9 + 48425.6 = 48443.6

# learning a model for train pairs
48443.6	
45334.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
42992.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
41387.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
41131.6	OUT SHAPE at layer[00]: a point at ? with color ?
41047.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
37051.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
34143.6	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 17158.6 = 17218.4
DL output with Mo: L = 69.4 + 16855.8 = 16925.2
DL input+output M: L = 129.2 + 34014.4 = 34143.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,17) and color blue and layers
  [0]: a rectangle at (0,0) with size (13,17) and color yellow and mask 1111101111111111111111111111111111111111111111111111111111111111111011111011111111110011100111111111111111111100100111111111111011101111111111111111111111000111101110111110101111001001111100011111111111111111111111111111
  [01]: a rectangle at (1,12) with size (3,3) and color green and mask full
  [011]: a rectangle at (7,10) with size (2,7) and color pink and mask full
diff: 
delta: (12,10)=6  (12,16)=6 
   (394.7 bits)
data: a background with size (7,7) and color pink and layers
  [00]: a point at (3,3) with color yellow
  [0]: a rectangle at (2,2) with size (3,3) and color green and mask full
  [01]: a rectangle at (2,0) with size (3,7) and color yellow and mask full
  [011]: a rectangle at (0,2) with size (7,3) and color yellow and mask full
diff: 
delta: (1,1)=1  (1,2)=1  (1,4)=1  (1,5)=1  (2,1)=1  (2,5)=1  (4,1)=1  (4,5)=1  (5,1)=1  (5,2)=1  (5,4)=1  (5,5)=1 
   (336.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color blue and layers
  [0]: a rectangle at (0,0) with size (13,17) and color yellow and mask 1111101111111111111111111111111111111111111111111111111111111111111011111011111111110011100111111111111111111100100111111111111011101111111111111111111111000111101110111110101111001001111100011111111111111111111111111111
  [01]: a rectangle at (1,12) with size (3,3) and color green and mask full
  [011]: a rectangle at (7,10) with size (2,7) and color pink and mask full
diff: 
delta: (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  [0]: a rectangle at (0,0) with size (18,18) and color cyan and mask 111111111111111111111111001001111111111111011101111111111111111111111111111111011101110001111111001001110101111111111111110001111111111111111111111111111111111111111111111000100011111111111011111011111101111011111011111111111111111111111111111011111011111111111011111011111111111000100011111111111111111111111111111111111111
  [01]: a rectangle at (11,1) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (12,7) with size (2,5) and color red and mask full
diff: 
delta: (6,13)=0  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
   (600.9 bits)
data: a background with size (7,7) and color blue and layers
  [00]: a point at (3,3) with color black
  [0]: a rectangle at (2,2) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (2,5) and color red and mask full
  [011]: a rectangle at (4,1) with size (2,5) and color red and mask full
diff: 
delta: (0,3)=8  (1,3)=8  (3,0)=8  (3,1)=8  (3,5)=8  (3,6)=8  (5,3)=8  (6,3)=8 
   (265.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  [0]: a rectangle at (0,0) with size (18,18) and color cyan and mask 111111111111111111111111001001111111111111011101111111111111111111111111111111011101110001111111001001110101111111111111110001111111111111111111111111111111111111111111111000100011111111111011111011111101111011111011111111111111111111111111111011111011111111111011111011111111111000100011111111111111111111111111111111111111
  [01]: a rectangle at (11,1) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (12,7) with size (2,5) and color red and mask full
diff: 
delta: (6,13)=0  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  [0]: a rectangle at (0,0) with size (18,18) and color green and mask 111111111111111111101111111111111111111111111111111111111101111111110111111100111111100111111111111111111111111111111111111111111100011100011111111101111111011111111101110001011111111111110101111000100111110001111011110111111111111011111101111111011111110101111111011011100100011100011011111111111111111000111111111111111111
  [01]: a rectangle at (1,0) with size (7,3) and color red and mask full
  [011]: a rectangle at (6,7) with size (3,3) and color orange and mask full
diff: 
delta: (2,15)=8  (2,16)=8  (3,15)=8  (5,15)=8  (6,15)=8  (6,16)=8  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
   (720.3 bits)
data: a background with size (11,11) and color green and layers
  [00]: a point at (5,5) with color pink
  [0]: a rectangle at (4,0) with size (3,11) and color green and mask full
  [01]: a rectangle at (1,1) with size (9,3) and color blue and mask full
  [011]: a rectangle at (1,7) with size (9,3) and color blue and mask full
diff: 
delta: (0,0)=4  (0,1)=4  (0,9)=4  (0,10)=4  (1,0)=4  (1,10)=4  (2,2)=2  (2,3)=2  (2,4)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,2)=2  (3,3)=8  (3,4)=8  (3,6)=8  (3,7)=8  (3,8)=2  (4,2)=2  (4,3)=8  (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=8  (4,8)=2  (5,4)=7# (5,6)=7# (6,2)=2  (6,3)=8  (6,4)=7# (6,5)=7# (6,6)=7# (6,7)=8  (6,8)=2  (7,2)=2  (7,3)=8  (7,4)=8  (7,6)=8  (7,7)=8  (7,8)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=4  (9,10)=4  (10,0)=4  (10,1)=4  (10,9)=4  (10,10)=4 
   (1083.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  [0]: a rectangle at (0,0) with size (18,18) and color green and mask 111111111111111111101111111111111111111111111111111111111101111111110111111100111111100111111111111111111111111111111111111111111100011100011111111101111111011111111101110001011111111111110101111000100111110001111011110111111111111011111101111111011111110101111111011011100100011100011011111111111111111000111111111111111111
  [01]: a rectangle at (1,0) with size (7,3) and color red and mask full
  [011]: a rectangle at (6,7) with size (3,3) and color orange and mask full
diff: 
delta: (2,15)=8  (2,16)=8  (3,15)=8  (5,15)=8  (6,15)=8  (6,16)=8  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11

TRAIN 4290ef0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color green and layers
  [0]: a rectangle at (0,0) with size (19,19) and color blue and mask 1111011111111111111111111011111110111111111101111111011111111110001110001111111101111111111111111100111111111111111111111111100100111111111111110111011111111111111111111111111111111101110111111111111110010011111111111111111111111000001111111111111111110111000111111111111011101011111111111101110001111111111110111111111111111111111111111111111111101111111111111
  [01]: a rectangle at (15,4) with size (3,9) and color red and mask full
  [011]: a rectangle at (2,13) with size (5,5) and color yellow and mask full
diff: 
delta: (0,13)=4  (3,7)=8  (3,8)=8  (3,9)=8  (4,7)=8  (4,9)=8  (5,7)=8  (5,8)=8  (5,9)=8  (13,14)=6  (13,15)=6  (14,14)=6  (18,14)=6 
! size mismatch, 10x10 instead of 11x11

TEST 4290ef0e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 16855.8 bits (16855.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-304] Checking task 42a50994.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24771.6 = 24780.6
DL output with Mo: L = 9.0 + 16951.0 = 16959.9
DL input+output M: L = 17.9 + 41722.6 = 41740.5

# learning a model for train pairs
41740.5	
39348.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
37091.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35337.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
33824.3	OUT DEF: layer[0]={layer[0]}
32016.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
30831.7	IN  SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
29810.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
28968.5	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a rectangle at ? with size ? and color ? and mask ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 19524.9 = 19584.7
DL output with Mo: L = 47.6 + 9336.2 = 9383.8
DL input+output M: L = 107.4 + 28861.2 = 28968.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,11) and color cyan and layers
  [00]: a rectangle at (8,4) with size (3,3) and color cyan and mask 1110010
  [0]: a rectangle at (2,2) with size (5,3) and color cyan and mask 1010011100100
  [01]: a rectangle at (0,0) with size (16,11) and color black and mask 11011111111111111011111011011111111111111101111111111111111111110111111111111011111111111111111111111110111111110111111111111111111111111111111101011111111111111111011111111101
diff: 
delta:
   (331.0 bits)
data: a background with size (16,11) and color black and layers
  [0]: a rectangle at (2,2) with size (5,3) and color cyan and mask 1010011100100
  [01]: a rectangle at (8,4) with size (3,3) and color cyan and mask 1110010
  [011]: a rectangle at (0,0) with size (2,2) and color cyan and mask 110
diff: 
delta:
   (73.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color cyan and layers
  [00]: a rectangle at (2,2) with size (5,3) and color cyan and mask 1010011100100
  [0]: a rectangle at (8,4) with size (3,3) and color cyan and mask 1110010
  [01]: a rectangle at (0,0) with size (16,11) and color black and mask 11011111111111111011111011011111111111111101111111111111111111110111111111111011111111111111111111111110111111110111111111111111111111111111111101011111111111111111011111111101
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,11) and color cyan and layers
  [00]: a rectangle at (8,4) with size (3,3) and color cyan and mask 1110010
  [0]: a rectangle at (2,2) with size (5,3) and color cyan and mask 1010011100100
  [01]: a rectangle at (0,0) with size (16,11) and color black and mask 11011111111111111011111011011111111111111101111111111111111111110111111111111011111111111111111111111110111111110111111111111111111111111111111101011111111111111111011111111101
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 42a50994.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,18) and color black and layers
  [00]: a rectangle at (1,14) with size (3,1) and color pink and mask full
  [0]: a rectangle at (1,1) with size (3,2) and color pink and mask 11001
  [01]: a rectangle at (8,7) with size (1,2) and color pink and mask full
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,11)=6  (9,13)=6  (10,7)=6  (10,11)=6  (11,2)=6  (11,16)=6  (11,17)=6 
   (514.6 bits)
data: a background with size (12,18) and color black and layers
  [0]: a rectangle at (1,1) with size (3,2) and color pink and mask 11001
  [01]: a rectangle at (1,14) with size (3,1) and color pink and mask full
  [011]: a rectangle at (8,7) with size (1,2) and color pink and mask full
diff: 
delta: (0,11)=6  (1,10)=6  (4,7)=6  (5,8)=6  (9,11)=6  (10,11)=6  (11,16)=6  (11,17)=6 
   (211.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  [00]: a rectangle at (1,14) with size (3,1) and color pink and mask full
  [0]: a rectangle at (1,1) with size (3,2) and color pink and mask 11001
  [01]: a rectangle at (8,7) with size (1,2) and color pink and mask full
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,11)=6  (9,13)=6  (10,7)=6  (10,11)=6  (11,2)=6  (11,16)=6  (11,17)=6 
! 16 wrong pixels (generated / expected)

TRAIN 42a50994.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,19) and color black and layers
  [00]: a rectangle at (7,16) with size (4,3) and color grey and mask 100011001110
  [0]: a rectangle at (1,9) with size (4,5) and color grey and mask 10000011010001000001
  [01]: a rectangle at (4,1) with size (5,3) and color grey and mask 100100010010001
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (2,16)=5# (3,16)=5# (4,4)=5# (4,6)=5# (4,15)=5# (4,16)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (8,13)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5# (10,13)=5#
   (605.1 bits)
data: a background with size (11,19) and color black and layers
  [0]: a rectangle at (1,9) with size (4,5) and color grey and mask 10000011010001000001
  [01]: a rectangle at (7,16) with size (4,3) and color grey and mask 100011001110
  [011]: a rectangle at (4,1) with size (5,3) and color grey and mask 100100010010001
diff: 
delta: (2,16)=5# (3,16)=5# (4,15)=5# (4,16)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5#
   (342.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,19) and color black and layers
  [00]: a rectangle at (7,16) with size (4,3) and color grey and mask 100011001110
  [0]: a rectangle at (1,9) with size (4,5) and color grey and mask 10000011010001000001
  [01]: a rectangle at (4,1) with size (5,3) and color grey and mask 100100010010001
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (2,16)=5# (3,16)=5# (4,4)=5# (4,6)=5# (4,15)=5# (4,16)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (8,13)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5# (10,13)=5#
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,19) and color black and layers
  [00]: a rectangle at (7,16) with size (4,3) and color grey and mask 100011001110
  [0]: a rectangle at (4,1) with size (5,3) and color grey and mask 100100010010001
  [01]: a rectangle at (1,9) with size (4,5) and color grey and mask 10000011010001000001
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (2,16)=5# (3,16)=5# (4,4)=5# (4,6)=5# (4,15)=5# (4,16)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (8,13)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5# (10,13)=5#
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,19) and color black and layers
  [00]: a rectangle at (1,9) with size (4,5) and color grey and mask 10000011010001000001
  [0]: a rectangle at (7,16) with size (4,3) and color grey and mask 100011001110
  [01]: a rectangle at (4,1) with size (5,3) and color grey and mask 100100010010001
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (2,16)=5# (3,16)=5# (4,4)=5# (4,6)=5# (4,15)=5# (4,16)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (8,13)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5# (10,13)=5#
! 28 wrong pixels (generated / expected)

TRAIN 42a50994.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (17,9) and color black and layers
  [00]: a rectangle at (3,2) with size (4,3) and color yellow and mask 1101001110
  [0]: a rectangle at (8,0) with size (5,3) and color yellow and mask 10101010100100
  [01]: a rectangle at (13,4) with size (3,2) and color yellow and mask 11110
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,7)=4  (5,8)=4  (6,0)=4  (8,6)=4  (10,6)=4  (10,8)=4  (11,4)=4  (11,7)=4  (12,7)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
   (501.8 bits)
data: a background with size (17,9) and color black and layers
  [0]: a rectangle at (8,0) with size (5,3) and color yellow and mask 10101010100100
  [01]: a rectangle at (3,2) with size (4,3) and color yellow and mask 1001001110
  [011]: a rectangle at (13,4) with size (3,2) and color yellow and mask 11110
diff: 
delta: (0,5)=4  (1,4)=4  (5,7)=4  (5,8)=4  (10,6)=4  (10,8)=4  (11,7)=4  (12,7)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
   (305.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,9) and color black and layers
  [00]: a rectangle at (3,2) with size (4,3) and color yellow and mask 1101001110
  [0]: a rectangle at (8,0) with size (5,3) and color yellow and mask 10101010100100
  [01]: a rectangle at (13,4) with size (3,2) and color yellow and mask 11110
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,7)=4  (5,8)=4  (6,0)=4  (8,6)=4  (10,6)=4  (10,8)=4  (11,4)=4  (11,7)=4  (12,7)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,9) and color black and layers
  [00]: a rectangle at (3,2) with size (4,3) and color yellow and mask 1101001110
  [0]: a rectangle at (13,4) with size (3,2) and color yellow and mask 11110
  [01]: a rectangle at (8,0) with size (5,3) and color yellow and mask 10101010100100
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,7)=4  (5,8)=4  (6,0)=4  (8,6)=4  (10,6)=4  (10,8)=4  (11,4)=4  (11,7)=4  (12,7)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
! 27 wrong pixels (generated / expected)

TRAIN 42a50994.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  [00]: a rectangle at (10,2) with size (5,7) and color green and mask 10000010010010110111000010100010100
  [0]: a rectangle at (0,6) with size (3,5) and color green and mask 11111010000
  [01]: a rectangle at (3,9) with size (2,3) and color green and mask 10111
diff: 
delta: (0,1)=3  (0,4)=3  (0,13)=3  (1,0)=3  (1,13)=3  (2,0)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,4)=3  (7,5)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,0)=3  (13,12)=3  (14,0)=3  (14,11)=3  (15,0)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  [00]: a rectangle at (10,2) with size (5,7) and color green and mask 10000010010010110111000010100010100
  [0]: a rectangle at (3,9) with size (2,3) and color green and mask 10111
  [01]: a rectangle at (0,6) with size (3,5) and color green and mask 11111010000
diff: 
delta: (0,1)=3  (0,4)=3  (0,13)=3  (1,0)=3  (1,13)=3  (2,0)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,4)=3  (7,5)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,0)=3  (13,12)=3  (14,0)=3  (14,11)=3  (15,0)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 42 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,14) and color black and layers
  [00]: a rectangle at (0,6) with size (3,5) and color green and mask 11111010000
  [0]: a rectangle at (10,2) with size (5,7) and color green and mask 10000010010010110111000010100010100
  [01]: a rectangle at (3,9) with size (2,3) and color green and mask 10111
diff: 
delta: (0,1)=3  (0,4)=3  (0,13)=3  (1,0)=3  (1,13)=3  (2,0)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,4)=3  (7,5)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,0)=3  (13,12)=3  (14,0)=3  (14,11)=3  (15,0)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 35 wrong pixels (generated / expected)

TEST 42a50994.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9336.2 bits (9336.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-303] Checking task 4347f46a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 31583.5 = 31592.4
DL output with Mo: L = 9.0 + 21219.8 = 21228.7
DL input+output M: L = 17.9 + 52803.3 = 52821.2

# learning a model for train pairs
52821.2	
37933.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
29956.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24837.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24237.0	OUT DEF: size={size}
23769.0	OUT DEF: layer[01].size={layer[0].size}
23439.4	OUT DEF: layer[01].pos={layer[0].pos}
23299.7	OUT DEF: layer[01].color={layer[0].color}
23229.0	IN  DEF: layer[0].mask=full
23183.4	OUT DEF: color=black
23137.8	IN  DEF: color=black
23102.8	OUT DEF: layer[0].pos=(?,?)
23067.8	OUT DEF: layer[0].size=(?,?)
23032.7	IN  DEF: size=(?,?)
22997.7	IN  DEF: layer[0].pos=(?,?)
22962.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 37.6 + 16446.0 = 16483.7
DL output with Mo: L = 49.2 + 6429.8 = 6479.1
DL input+output M: L = 86.9 + 22875.8 = 22962.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,16) and color black and layers
  [0]: a rectangle at (3,6) with size (5,7) and color green and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
   (1113.5 bits)
data: a background with size (18,16) and color black and layers
  [0]: a rectangle at (10,2) with size (4,7) and color pink and mask 1111111100000110000011111111
  [01]: a rectangle at (3,6) with size (5,7) and color green and mask 11111111000001100000110000011111111
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,12)=7# (10,13)=7# (10,14)=7# (11,12)=7# (11,14)=7# (12,12)=7# (12,14)=7# (13,12)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
   (526.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color black and layers
  [0]: a rectangle at (3,6) with size (5,7) and color green and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 58 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,16) and color black and layers
  [0]: a rectangle at (10,2) with size (4,7) and color pink and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (10,12)=7# (10,13)=7# (10,14)=7# (11,12)=7# (11,13)=7# (11,14)=7# (12,12)=7# (12,13)=7# (12,14)=7# (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 55 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,16) and color green and layers
  [0]: a rectangle at (0,0) with size (18,16) and color black and mask 111111111111111111111111111111111111111111111111100011111111111110001110000000111000111000000011100011100000001110001110000000111111111111111111111111111111111111100000001111111110000000111111111000000011111111100000001111111110000000100001111111111110000111111111111000011111111111111111
diff:   color  layer[0].mask
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 63 wrong pixels (generated / expected)

TRAIN 4347f46a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color red and mask full
diff: 
delta:
   (42.6 bits)
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (2,2) with size (2,3) and color black and mask full
  [01]: a rectangle at (1,1) with size (4,5) and color red and mask full
diff: 
delta:
   (27.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color red and mask full
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,7) and color red and layers
  [0]: a rectangle at (0,0) with size (8,7) and color black and mask 11111111111111111111110000011000001100000110000011111111
diff:   color  layer[0].mask
delta:
! 17 wrong pixels (generated / expected)

TRAIN 4347f46a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (1,2) with size (4,8) and color grey and mask full
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
   (488.4 bits)
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (6,1) with size (4,6) and color yellow and mask 111111100001100001111111
  [01]: a rectangle at (1,2) with size (4,8) and color grey and mask 11111111100000011000000111111111
diff: 
delta:
   (88.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (1,2) with size (4,8) and color grey and mask full
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (6,1) with size (4,6) and color yellow and mask full
diff: 
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (1,9)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5#
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,12) and color grey and layers
  [0]: a rectangle at (0,0) with size (11,12) and color black and mask 111111111111111110000001111110000001111110000001111110000001111111111111110000000011110000000011110000000011110000000011111111111111
diff:   color  layer[0].mask
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
! 40 wrong pixels (generated / expected)

TRAIN 4347f46a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  [0]: a rectangle at (6,10) with size (6,8) and color blue and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,7)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,7)=4  (10,2)=4  (10,3)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,7)=4  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 85 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,19) and color black and layers
  [0]: a rectangle at (5,2) with size (7,6) and color yellow and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (11,16)=1  (11,17)=1  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 83 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,19) and color blue and layers
  [0]: a rectangle at (0,0) with size (17,19) and color black and mask 11111111111111111111111111110000011111111111111000001111111111111100000111111111111111111111111100000000110000001110000000011000000111000000001100000011100000000110000001110000000011000000111000000001100000011111111111110000001111111111111111111111111000011110000001111100001111000000111110000111100000011111111111111111111
diff:   color  layer[0].mask
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,7)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,7)=4  (10,2)=4  (10,3)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,7)=4  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 85 wrong pixels (generated / expected)

TEST 4347f46a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6429.8 bits (6429.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-302] Checking task 444801d8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12844.6 = 12853.5
DL output with Mo: L = 9.0 + 22031.9 = 22040.8
DL input+output M: L = 17.9 + 34876.5 = 34894.4

# learning a model for train pairs
34894.4	
28639.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22973.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17589.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14584.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11612.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9572.0	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
8994.2	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 4172.3 = 4215.6
DL output with Mo: L = 75.9 + 4702.7 = 4778.6
DL input+output M: L = 119.2 + 8875.0 = 8994.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color blue and mask 1111110001100011000111011
  [01]: a rectangle at (3,3) with size (1,1) and color red and mask full
diff: 
delta:
   (102.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (5,5) and color red and mask 111001110011100010011111
  [01]: a rectangle at (1,1) with size (1,2) and color blue and mask full
  [011]: a rectangle at (1,4) with size (1,2) and color blue and mask full
  [0111]: a rectangle at (1,1) with size (5,5) and color blue and mask full
diff: 
delta:
   (143.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color blue and mask 1111110001100011000111011
  [01]: a rectangle at (3,3) with size (1,1) and color red and mask full
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 444801d8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (7,4) with size (3,5) and color blue and mask 111111000111011
diff: 
delta: (3,3)=2  (8,6)=3 
   (157.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (1,1) with size (4,5) and color red and mask full
  [011]: a rectangle at (7,4) with size (3,5) and color blue and mask 111111000111011
  [0111]: a rectangle at (6,4) with size (3,5) and color green and mask full
diff: 
delta:
   (163.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (7,4) with size (3,5) and color blue and mask 111111000111011
diff: 
delta: (3,3)=2  (8,6)=3 
! 48 wrong pixels (generated / expected)

TRAIN 444801d8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (7,4) with size (3,5) and color blue and mask 111111000111011
diff: 
delta: (2,3)=6  (8,6)=8 
   (157.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (0,1) with size (4,5) and color pink and mask full
  [011]: a rectangle at (7,4) with size (3,5) and color blue and mask 111111000111011
  [0111]: a rectangle at (6,4) with size (3,5) and color cyan and mask full
diff: 
delta:
   (163.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (7,4) with size (3,5) and color blue and mask 111111000111011
diff: 
delta: (2,3)=6  (8,6)=8 
! 47 wrong pixels (generated / expected)

TRAIN 444801d8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (4,5) and color blue and mask 11111100011000111011
  [01]: a rectangle at (6,4) with size (4,5) and color blue and mask 11111100011000111011
diff: 
delta: (2,2)=4  (7,6)=7#
! 50 wrong pixels (generated / expected)

TEST 444801d8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4702.7 bits (4702.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-301] Checking task 445eab21.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16029.5 = 16038.4
DL output with Mo: L = 9.0 + 537.9 = 546.9
DL input+output M: L = 17.9 + 16567.4 = 16585.4

# learning a model for train pairs
16585.4	
9238.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4449.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4211.8	OUT DEF: color={layer[0].color}
4166.2	IN  DEF: color=black
4131.2	OUT DEF: size=(?,?)
4002.6	OUT DEF: size.i=2
3873.9	OUT DEF: size.j=2
3838.9	IN  DEF: size=(?,?)
3575.6	IN  DEF: size.i=10
3312.2	IN  DEF: size.j=10
3277.2	IN  DEF: layer[0].pos=(?,?)
3242.2	IN  DEF: layer[0].size=(?,?)
3207.2	IN  DEF: layer[01].pos=(?,?)
3172.2	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (2,2) and color {layer[0].color} and layers
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 76.0 + 3079.7 = 3155.7
DL output with Mo: L = 16.5 + 0.0 = 16.5
DL input+output M: L = 92.5 + 3079.7 = 3172.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (4,5) and color cyan and mask 11111100011000111111
  [01]: a rectangle at (0,1) with size (4,4) and color orange and mask 1111100110011111
diff: 
delta:
   (94.4 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (4,5) and color cyan and mask 11111100011000111111
  [01]: a rectangle at (0,1) with size (4,4) and color orange and mask 1111100110011111
diff: 
delta:
correct output grid

TRAIN 445eab21.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,2) with size (4,6) and color orange and mask 111111100001100001111111
  [01]: a rectangle at (0,0) with size (4,5) and color pink and mask 11111100011000111111
diff: 
delta:
   (103.6 bits)
data: a background with size (2,2) and color orange and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,2) with size (4,6) and color orange and mask 111111100001100001111111
  [01]: a rectangle at (0,0) with size (4,5) and color pink and mask 11111100011000111111
diff: 
delta:
correct output grid

TRAIN 445eab21.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (7,6) and color yellow and mask 111111100001100001100001100001100001111111
  [01]: a rectangle at (7,7) with size (3,3) and color red and mask 111101111
diff: 
delta:
   (109.9 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (7,6) and color yellow and mask 111111100001100001100001100001100001111111
  [01]: a rectangle at (7,7) with size (3,3) and color red and mask 111101111
diff: 
delta:
correct output grid

TRAIN 445eab21.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (9,5) and color green and mask 111111000110001100011000110001100011000111111
  [01]: a rectangle at (0,6) with size (10,4) and color brown and mask 1111100110011001100110011001100110011111
diff: 
delta:
correct output grid

TEST 445eab21.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-300] Checking task 447fd412.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8039.7 = 8048.6
DL output with Mo: L = 9.0 + 17818.9 = 17827.9
DL input+output M: L = 17.9 + 25858.6 = 25876.5

# learning a model for train pairs
25876.5	
18248.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15343.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12881.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11470.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10629.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10006.6	OUT DEF: size={size}
9641.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 4320.4 = 4380.2
DL output with Mo: L = 59.9 + 5201.6 = 5261.6
DL input+output M: L = 119.7 + 9522.1 = 9641.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color blue and mask 111010011
  [01]: a rectangle at (8,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (8,9) with size (2,2) and color red and mask full
diff: 
delta: (2,1)=2  (2,4)=2 
   (158.2 bits)
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (8,5) with size (6,6) and color blue and mask 111111111111001100001100001111001111
  [01]: a rectangle at (8,3) with size (2,8) and color red and mask full
  [011]: a rectangle at (2,2) with size (3,3) and color blue and mask 111010011
diff: 
delta: (2,1)=2  (2,4)=2 
   (183.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color blue and mask 111010011
  [01]: a rectangle at (8,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (8,9) with size (2,2) and color red and mask full
diff: 
delta: (2,1)=2  (2,4)=2 
! 44 wrong pixels (generated / expected)

TRAIN 447fd412.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (4,5) with size (2,3) and color blue and mask 10111
  [01]: a rectangle at (3,6) with size (4,1) and color red and mask full
  [011]: a rectangle at (8,2) with size (1,1) and color red and mask full
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
   (169.2 bits)
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (4,5) with size (2,3) and color blue and mask 10111
  [01]: a rectangle at (9,1) with size (2,3) and color blue and mask 10111
  [011]: a rectangle at (10,8) with size (2,3) and color blue and mask 10111
diff: 
delta: (3,6)=2  (6,6)=2  (8,2)=2  (9,9)=2  (11,2)=2  (12,9)=2 
   (223.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (4,5) with size (2,3) and color blue and mask 10111
  [01]: a rectangle at (3,6) with size (4,1) and color red and mask full
  [011]: a rectangle at (8,2) with size (1,1) and color red and mask full
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
! 22 wrong pixels (generated / expected)

TRAIN 447fd412.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (7,7) with size (3,3) and color red and mask full
  [01]: a rectangle at (2,1) with size (1,3) and color blue and mask full
  [011]: a rectangle at (2,4) with size (1,1) and color red and mask full
diff: 
delta:
   (104.6 bits)
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (7,0) with size (3,7) and color blue and mask full
  [01]: a rectangle at (7,7) with size (3,3) and color red and mask full
  [011]: a rectangle at (2,1) with size (1,3) and color blue and mask full
diff: 
delta: (2,4)=2 
   (112.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (7,7) with size (3,3) and color red and mask full
  [01]: a rectangle at (2,1) with size (1,3) and color blue and mask full
  [011]: a rectangle at (2,4) with size (1,1) and color red and mask full
diff: 
delta:
! 38 wrong pixels (generated / expected)

TRAIN 447fd412.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,21) and color black and layers
  [0]: a rectangle at (8,17) with size (3,3) and color red and mask full
  [01]: a rectangle at (2,2) with size (3,3) and color blue and mask 111001001
  [011]: a rectangle at (11,5) with size (2,2) and color red and mask full
diff: 
delta: (2,12)=2  (3,4)=2 
! 94 wrong pixels (generated / expected)

TEST 447fd412.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5201.6 bits (5201.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-299] Checking task 44d8ac46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 32802.9 = 32811.9
DL output with Mo: L = 9.0 + 38248.1 = 38257.1
DL input+output M: L = 17.9 + 71051.0 = 71069.0

# learning a model for train pairs
71069.0	
58567.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
46468.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
34843.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
23313.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19224.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17332.8	OUT DEF: layer[0]={layer[0]}
16520.4	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 9135.9 = 9179.3
DL output with Mo: L = 46.7 + 7294.4 = 7341.1
DL input+output M: L = 90.1 + 16430.3 = 16520.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (4,7) with size (4,4) and color grey and mask 1111100111011111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111000011111111001011111111000011111111000011111111111111111111111111111111100001111111101101111111101101111111100001111111111111111111111111
diff: 
delta:
   (258.7 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (4,7) with size (4,4) and color grey and mask 1111100111011111
  [01]: a rectangle at (8,2) with size (4,4) and color grey and mask full
  [011]: a rectangle at (2,1) with size (4,4) and color grey and mask full
diff: 
delta: (3,2)=2  (3,3)=2  (4,2)=2  (4,3)=2  (10,3)=2 
   (161.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (8,2) with size (4,4) and color grey and mask 1111110111111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111111111111111111111111111111111111111111111100001111111101101111111100101100001100001101101111111101101111111100001111111111111111111111111
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (4,7) with size (4,4) and color grey and mask 1111100111011111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111000011111111001011111111000011111111000011111111111111111111111111111111100001111111101101111111101101111111100001111111111111111111111111
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (2,1) with size (4,4) and color grey and mask 1111100110011111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111000011111111001011111111000011111111000011100001111111101101111111100101111111100001111111111111111111111111111111111111111111111111111111
diff: 
delta:
! 37 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111100000111111100110111111100110000000100000011110100000011110111111011110111111011110111111000000111111111111111111111111111111111111111111
diff: 
delta:
   (258.7 bits)
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110111111
  [01]: a rectangle at (4,7) with size (4,4) and color red and mask full
  [011]: a rectangle at (0,0) with size (12,12) and color black and mask 111111100000111111100000111111100000000000100000011110100000011110111111011110111111011110111111000000111111111111110111111111111111111111111111
diff: 
delta: (2,3)=2  (9,1)=2  (9,2)=2  (10,1)=2  (10,2)=2 
   (318.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111100000111111100110111111100110000000100000011110100000011110111111011110111111011110111111000000111111111111111111111111111111111111111111
diff: 
delta:
! 65 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,1) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111100000111111100110111111100110000000100000011110100000011110111111011110111111011110111111000000111111111111111111111111111111111111111111
diff: 
delta: (2,3)=0 
! 65 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (7,0) with size (5,5) and color grey and mask 1111111001110011111111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111111111111111111111111111111111000000111111011110111111011110111111011110111111011110100001000000100001111111101001111111100001111111111111
diff: 
delta:
! 59 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (8,3) with size (4,6) and color grey and mask 111111100001100001111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111111111111111111111111111111111111111111111111111111111100001000001101101011101101101011101100001011101111111011101111111000001111111111111
diff: 
delta:
   (267.9 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (8,3) with size (4,6) and color grey and mask 111111100001100001111111
  [01]: a rectangle at (1,1) with size (6,5) and color grey and mask 111111000110001100011000111111
  [011]: a rectangle at (3,7) with size (4,4) and color grey and mask full
diff: 
delta: (4,8)=2  (4,9)=2  (5,8)=2  (5,9)=2 
   (174.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (3,7) with size (4,4) and color grey and mask 1111100110011111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111000000111111011110111111011110111111000000111111111111111111111000001111111011101111111011101111111011101111111011101111111000001111111111111
diff: 
delta:
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (8,3) with size (4,6) and color grey and mask 111111100001100001111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111111111111111111111111111111111111111111111111111111111111100001000001101101011101101101011101100001011101111111011101111111000001111111111111
diff: 
delta:
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,1) with size (6,5) and color grey and mask 111111000110001100011000111111
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111000000111111011110111111011110111111000000111111111111111100001111111101101111111101101111111100001111111111111111111111111111111111111111111
diff: 
delta:
! 35 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,3) with size (5,5) and color grey and mask 1111110001110011100111111
  [01]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110011111
diff: 
delta:
   (128.2 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,3) with size (5,5) and color grey and mask 1111110001110011100111111
  [01]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110011111
  [011]: a rectangle at (2,2) with size (1,2) and color black and mask full
diff: 
delta:
   (75.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,3) with size (5,5) and color grey and mask 1111110001110011100111111
  [01]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110011111
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color grey and mask 1111111110011111
  [01]: a rectangle at (6,3) with size (5,5) and color grey and mask 1111110001110011100111111
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (8,2) with size (4,6) and color grey and mask 111111100001100001111111
  [01]: a rectangle at (1,0) with size (5,5) and color grey and mask 1111110001100011000111111
diff: 
delta: (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=5# (2,7)=5# (2,8)=5# (2,10)=5# (3,7)=5# (3,10)=5# (4,7)=5# (4,10)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5#
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,0) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (8,2) with size (4,6) and color grey and mask 111111100001100001111111
diff: 
delta: (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=5# (2,7)=5# (2,8)=5# (2,10)=5# (3,7)=5# (3,10)=5# (4,7)=5# (4,10)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5#
! 42 wrong pixels (generated / expected)

TEST 44d8ac46.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7294.4 bits (7294.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-298] Checking task 44f52bb0.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3879.8 = 3888.8
DL output with Mo: L = 9.0 + 835.9 = 844.9
DL input+output M: L = 17.9 + 4715.7 = 4733.7

# learning a model for train pairs
4733.7	
3615.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3541.2	OUT DEF: size=(?,?)
3400.9	OUT DEF: size.i=1
3260.6	OUT DEF: size.j=1
3185.9	IN  DEF: size=(?,?)
2858.6	IN  DEF: size.i=3
2531.2	IN  DEF: size.j=3
2456.5	IN  DEF: layer[0].pos=(?,?)
2381.9	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ? and layers
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 44.8 + 1847.5 = 1892.3
DL output with Mo: L = 11.6 + 477.9 = 489.6
DL input+output M: L = 56.5 + 2325.4 = 2381.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 101010101
diff: 
delta:
   (34.2 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 101010101
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask 100101
diff: 
delta:
   (30.1 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask 100101
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,1) and color black and mask full
diff: 
delta:
   (28.6 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,1) and color black and mask full
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color red and mask full
diff: 
delta: (1,2)=2 
   (35.0 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color red and mask full
diff: 
delta: (1,2)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 110011
diff: 
delta:
   (30.1 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 110011
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1011
diff: 
delta:
   (26.9 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1011
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 101111101
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 477.9 bits (477.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-297] Checking task 4522001f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1496.3 = 1505.2
DL output with Mo: L = 9.0 + 11657.6 = 11666.5
DL input+output M: L = 17.9 + 13153.8 = 13171.8

# learning a model for train pairs
13171.8	
3918.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2655.2	OUT DEF: layer[0].mask=1111000011110000111100001111000000001111000011110000111100001111
2255.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2048.5	OUT DEF: layer[0].pos={layer[0].pos}
1955.0	OUT DEF: layer[0].color={layer[0].color}
1863.4	IN  DEF: layer[0].color=green
1788.1	IN  SHAPE at layer[00]: a point at ? with color ?
1696.5	IN  DEF: layer[00].color=red
1649.1	IN  DEF: layer[0].mask=full
1618.1	OUT DEF: color=black
1587.0	IN  DEF: color=black
1565.3	OUT DEF: size=(?,?)
1397.4	OUT DEF: size.i=9
1229.5	OUT DEF: size.j=9
1207.7	OUT DEF: layer[0].size=(?,?)
1046.2	OUT DEF: layer[0].size.i=8
884.8	OUT DEF: layer[0].size.j=8
863.0	IN  DEF: size=(?,?)
755.3	IN  DEF: size.i=3
647.7	IN  DEF: size.j=3
625.9	IN  DEF: layer[00].pos=(?,?)
567.3	IN  DEF: layer[00].pos.i=1
508.8	IN  DEF: layer[00].pos.j=1
487.0	IN  DEF: layer[0].pos=(?,?)
465.2	IN  DEF: layer[0].size=(?,?)
379.7	IN  DEF: layer[0].size.i=2
294.3	IN  DEF: layer[0].size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (8,8) and color {layer[0].color} and mask 1111000011110000111100001111000000001111000011110000111100001111
WHERE (Mi)
a background with size (3,3) and color black and layers
  [00]: a point at (1,1) with color red
  [0]: a rectangle at (?,?) with size (2,2) and color green and mask full

DL input  with Mi: L = 60.6 + 116.3 = 176.9
DL output with Mo: L = 117.4 + 0.0 = 117.4
DL input+output M: L = 178.0 + 116.3 = 294.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,1) with color red
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
diff: 
delta:
   (5.8 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color green and mask 1111000011110000111100001111000000001111000011110000111100001111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,1) with color red
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
diff: 
delta:
correct output grid

TRAIN 4522001f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,1) with color red
  [0]: a rectangle at (1,1) with size (2,2) and color green and mask full
diff: 
delta:
   (5.8 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,1) with size (8,8) and color green and mask 1111000011110000111100001111000000001111000011110000111100001111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,1) with color red
  [0]: a rectangle at (1,1) with size (2,2) and color green and mask full
diff: 
delta:
correct output grid

TRAIN 4522001f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,1) with color red
  [0]: a rectangle at (0,1) with size (2,2) and color green and mask full
diff: 
delta:
! 64 wrong pixels (generated / expected)

TEST 4522001f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-296] Checking task 4612dd53.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11964.6 = 11973.6
DL output with Mo: L = 9.0 + 17965.7 = 17974.6
DL input+output M: L = 17.9 + 29930.3 = 29948.2

# learning a model for train pairs
29948.2	
27591.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
25766.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24265.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22789.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
21350.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20742.4	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 8989.8 = 9033.1
DL output with Mo: L = 59.6 + 11649.6 = 11709.2
DL input+output M: L = 103.0 + 20639.4 = 20742.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,13) and color blue and layers
  [0]: a rectangle at (6,2) with size (2,2) and color blue and mask 1101
  [01]: a rectangle at (0,0) with size (9,13) and color black and mask 111111111111111001001111111101111111111110111111111111111111111111101111111111111111111101111010011010111111111111111
diff: 
delta:
   (213.9 bits)
data: a background with size (9,13) and color black and layers
  [0]: a rectangle at (7,2) with size (1,9) and color blue and mask full
  [01]: a rectangle at (1,3) with size (1,7) and color red and mask full
  [011]: a rectangle at (1,10) with size (7,1) and color blue and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (1,8)=1  (2,2)=1  (2,10)=2  (3,2)=2  (4,2)=2  (4,10)=2  (5,2)=2  (6,2)=1  (7,4)=2  (7,5)=2  (7,8)=2 
   (347.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color blue and layers
  [0]: a rectangle at (6,2) with size (2,2) and color blue and mask 1101
  [01]: a rectangle at (0,0) with size (9,13) and color black and mask 111111111111111001001111111101111111111110111111111111111111111111101111111111111111111101111010011010111111111111111
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 4612dd53.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (7,2) with size (2,4) and color blue and mask 11110100
  [01]: a rectangle at (2,8) with size (6,1) and color blue and mask full
diff: 
delta: (2,2)=1  (2,3)=1  (2,4)=1  (2,7)=1  (3,2)=1  (4,4)=1  (4,8)=0  (5,2)=1  (5,4)=1  (6,2)=1  (8,7)=1 
   (295.2 bits)
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (8,2) with size (1,6) and color blue and mask full
  [01]: a rectangle at (2,8) with size (6,1) and color blue and mask full
  [011]: a rectangle at (2,2) with size (5,1) and color blue and mask full
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=2  (2,6)=2  (2,7)=1  (3,4)=2  (4,2)=2  (4,4)=1  (4,8)=2  (5,4)=1  (6,4)=2  (7,2)=2  (7,4)=1  (8,6)=2  (8,8)=2 
   (368.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (7,2) with size (2,4) and color blue and mask 11110100
  [01]: a rectangle at (2,8) with size (6,1) and color blue and mask full
diff: 
delta: (2,2)=1  (2,3)=1  (2,4)=1  (2,7)=1  (3,2)=1  (4,4)=1  (4,8)=0  (5,2)=1  (5,4)=1  (6,2)=1  (8,7)=1 
! 33 wrong pixels (generated / expected)

TRAIN 4612dd53.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,2) with size (1,9) and color blue and mask full
  [01]: a rectangle at (6,2) with size (3,2) and color blue and mask 11101
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (4,10)=1  (6,10)=1  (7,5)=1  (7,7)=1  (7,8)=1  (8,10)=1  (9,10)=1  (10,2)=1  (10,3)=1  (10,5)=1  (10,6)=1  (10,9)=1  (10,10)=1 
   (389.8 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,2) with size (1,9) and color blue and mask full
  [01]: a rectangle at (10,2) with size (1,9) and color blue and mask full
  [011]: a rectangle at (7,2) with size (1,7) and color blue and mask full
diff: 
delta: (3,4)=2  (3,7)=2  (4,2)=1  (4,10)=1  (5,2)=2  (5,10)=2  (6,2)=1  (6,10)=1  (7,4)=2  (7,6)=2  (7,9)=2  (7,10)=2  (8,2)=1  (8,10)=1  (9,2)=2  (9,10)=1  (10,4)=2  (10,7)=2  (10,8)=2 
   (449.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,2) with size (1,9) and color blue and mask full
  [01]: a rectangle at (6,2) with size (3,2) and color blue and mask 11101
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (4,10)=1  (6,10)=1  (7,5)=1  (7,7)=1  (7,8)=1  (8,10)=1  (9,10)=1  (10,2)=1  (10,3)=1  (10,5)=1  (10,6)=1  (10,9)=1  (10,10)=1 
! 41 wrong pixels (generated / expected)

TRAIN 4612dd53.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,4) with size (1,7) and color blue and mask full
  [01]: a rectangle at (10,4) with size (1,7) and color blue and mask full
diff: 
delta: (2,2)=1  (2,6)=0  (2,8)=0  (3,2)=1  (3,10)=1  (6,2)=1  (6,10)=1  (7,2)=1  (7,4)=1  (7,6)=1  (7,9)=1  (7,10)=1  (9,2)=1  (9,10)=1  (10,2)=1  (10,6)=0  (10,8)=0 
! 43 wrong pixels (generated / expected)

TEST 4612dd53.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 11649.6 bits (11649.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-295] Checking task 46442a0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2242.3 = 2251.3
DL output with Mo: L = 9.0 + 7928.8 = 7937.8
DL input+output M: L = 17.9 + 10171.1 = 10189.1

# learning a model for train pairs
10189.1	
5767.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5183.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4929.0	OUT DEF: layer[0].pos={layer[0].pos}
4802.5	OUT DEF: color={color}
4662.6	OUT DEF: layer[0].color={layer[0].color}
4627.5	OUT DEF: size=(?,?)
4419.6	OUT DEF: size.i={size.i + size.i}
4211.7	OUT DEF: size.j={size.j + size.j}
4176.7	OUT DEF: layer[0].size=(?,?)
3981.1	OUT DEF: layer[0].size.i={layer[0].size.i + layer[0].size.i}
3785.4	OUT DEF: layer[0].size.j={layer[0].size.j + layer[0].size.j}
3750.4	IN  DEF: size=(?,?)
3715.4	IN  DEF: layer[0].pos=(?,?)
3680.4	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i + size.i},{size.j + size.j}) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i + layer[0].size.i},{layer[0].size.j + layer[0].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 40.5 + 1643.2 = 1683.7
DL output with Mo: L = 55.5 + 1941.2 = 1996.6
DL input+output M: L = 96.0 + 3584.4 = 3680.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,2) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color pink and mask 110
diff: 
delta:
   (40.9 bits)
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,4) and color pink and mask 110100110010110
diff: 
delta:
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color pink and mask 110
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1001
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,2) and color pink and layers
  [0]: a rectangle at (0,0) with size (1,1) and color cyan and mask full
diff: 
delta: (1,1)=8 
! 8 wrong pixels (generated / expected)

TRAIN 46442a0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111100100
diff: 
delta:
   (51.7 bits)
data: a background with size (6,6) and color orange and layers
  [0]: a rectangle at (0,0) with size (6,6) and color cyan and mask 1100001100111111111111001100001100
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask full
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111100100
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
diff: 
delta: (0,2)=8  (1,2)=8 
! 8 wrong pixels (generated / expected)

TRAIN 46442a0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,1) with size (2,2) and color yellow and mask full
diff: 
delta: (0,1)=9# (0,2)=9#
   (71.7 bits)
data: a background with size (6,6) and color pink and layers
  [0]: a rectangle at (1,1) with size (4,4) and color yellow and mask full
diff: 
delta: (0,1)=9# (0,2)=9# (1,5)=9# (2,5)=9# (3,0)=9# (4,0)=9# (5,3)=9# (5,4)=9#
   (137.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,1) and color pink and mask full
diff: 
delta: (0,1)=9# (0,2)=9#
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,1) with size (2,2) and color yellow and mask full
diff: 
delta: (0,1)=9# (0,2)=9#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (1,2) and color brown and mask full
diff: 
delta: (0,0)=6  (1,0)=6  (2,0)=6 
! 22 wrong pixels (generated / expected)

TRAIN 46442a0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (2,3) and color yellow and mask 101010
diff: 
delta: (0,0)=1  (0,2)=1  (2,1)=1 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (1,0) with size (2,3) and color brown and mask 101010
diff: 
delta: (0,0)=1  (0,2)=1  (2,1)=1 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta: (0,1)=4  (1,0)=4  (1,2)=4  (2,1)=1 
! 23 wrong pixels (generated / expected)

TEST 46442a0e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1941.2 bits (1941.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-294] Checking task 469497ad.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6804.2 = 6813.2
DL output with Mo: L = 9.0 + 78549.7 = 78558.7
DL input+output M: L = 17.9 + 85353.9 = 85371.8

# learning a model for train pairs
85371.8	
60507.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
40056.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
28468.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
22929.5	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
21067.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19173.3	OUT DEF: layer[0111].color={color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color {color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 5029.9 = 5056.5
DL output with Mo: L = 75.8 + 14041.0 = 14116.8
DL input+output M: L = 102.4 + 19070.9 = 19173.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (2,1)=8  (2,2)=8 
   (119.7 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (8,0) with size (2,10) and color green and mask full
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (8,8) and color black and mask 111111010111101111111111111111111111111111111111011110101111110
  [0111]: a rectangle at (0,8) with size (10,2) and color green and mask full
diff: 
delta:
   (218.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask full
diff: 
delta: (1,1)=8  (1,2)=8  (2,1)=8  (2,2)=8 
! 62 wrong pixels (generated / expected)

TRAIN 469497ad.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask full
diff: 
delta: (0,4)=7# (1,0)=4  (1,1)=4  (1,4)=7# (2,0)=4  (2,1)=4  (4,0)=7# (4,1)=7#
   (183.7 bits)
data: a background with size (15,15) and color orange and layers
  [0]: a rectangle at (3,0) with size (6,6) and color yellow and mask full
  [01]: a rectangle at (0,6) with size (3,3) and color red and mask 1010100
  [011]: a rectangle at (0,0) with size (12,12) and color black and mask full
  [0111]: a rectangle at (5,6) with size (10,9) and color pink and mask full
diff: 
delta: (9,6)=2  (10,7)=2  (11,8)=2 
   (237.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask full
diff: 
delta: (0,4)=7# (1,0)=4  (1,1)=4  (1,4)=7# (2,0)=4  (2,1)=4  (4,0)=7# (4,1)=7#
! size mismatch, 10x10 instead of 15x15

TRAIN 469497ad.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color brown and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask full
diff: 
delta: (1,1)=1  (1,2)=1  (2,1)=1  (2,2)=1  (2,4)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=4 
   (199.6 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,4) with size (8,8) and color blue and mask full
  [01]: a rectangle at (8,8) with size (12,12) and color green and mask 11111111000011111111000011111111000011111111111100000000111100000000111100000000111100000000111100001111111100001111111100001111111100001111
  [011]: a rectangle at (16,0) with size (4,8) and color brown and mask full
  [0111]: a rectangle at (0,16) with size (8,4) and color brown and mask full
diff: 
delta: (0,0)=2  (0,15)=2  (1,1)=2  (1,14)=2  (2,2)=2  (2,13)=2  (3,3)=2  (3,12)=2  (12,3)=2  (12,12)=2  (13,2)=2  (13,13)=2  (14,1)=2  (14,14)=2  (15,0)=2  (15,15)=2  (16,16)=4  (16,17)=4  (16,18)=4  (16,19)=4  (17,16)=4  (17,17)=4  (17,18)=4  (17,19)=4  (18,16)=4  (18,17)=4  (18,18)=4  (18,19)=4  (19,16)=4  (19,17)=4  (19,18)=4  (19,19)=4 
   (949.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color blue and mask full
diff: 
delta: (0,4)=9# (1,4)=9# (2,4)=3  (3,4)=3  (4,0)=9# (4,1)=9# (4,2)=3  (4,3)=3  (4,4)=4 
! size mismatch, 10x10 instead of 20x20

TRAIN 469497ad.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color pink and mask full
diff: 
delta: (0,4)=8  (1,4)=8  (2,4)=1  (3,4)=7# (4,0)=8  (4,1)=8  (4,2)=1  (4,3)=7# (4,4)=9#
! size mismatch, 10x10 instead of 25x25

TEST 469497ad.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 14041.0 bits (14041.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-293] Checking task 46f33fce.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3773.2 = 3782.1
DL output with Mo: L = 9.0 + 54377.3 = 54386.3
DL input+output M: L = 17.9 + 58150.5 = 58168.4

# learning a model for train pairs
58168.4	
43540.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35141.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
26729.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
18243.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
18105.3	OUT DEF: layer[0111].color=yellow
17967.3	OUT DEF: layer[011].color=green
17829.3	OUT DEF: layer[0].color=red
17691.3	OUT DEF: layer[01].color=blue
17618.5	IN  SHAPE at layer[0]: a point at ? with color ?
17542.0	IN  SHAPE at layer[01]: a point at ? with color ?
17461.0	IN  SHAPE at layer[011]: a point at ? with color ?
17372.6	IN  SHAPE at layer[0111]: a point at ? with color ?
17269.0	IN  SHAPE at layer[01111]: a point at ? with color ?
17198.4	OUT DEF: layer[0].mask=full
17127.7	OUT DEF: layer[01].mask=full
17057.1	OUT DEF: layer[011].mask=full
16986.4	OUT DEF: layer[0111].mask=full
16940.8	OUT DEF: color=black
16895.2	IN  DEF: color=black
16860.2	OUT DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  [0]: a rectangle at ? with size ? and color red and mask full
  [01]: a rectangle at ? with size ? and color blue and mask full
  [011]: a rectangle at ? with size ? and color green and mask full
  [0111]: a rectangle at ? with size ? and color yellow and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?

DL input  with Mi: L = 57.1 + 3257.1 = 3314.2
DL output with Mo: L = 80.1 + 13465.8 = 13546.0
DL input+output M: L = 137.2 + 16723.0 = 16860.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color red
  [01]: a point at (3,1) with color yellow
  [011]: a point at (3,3) with color blue
  [0111]: a point at (5,5) with color green
  [01111]: a point at (7,7) with color yellow
diff: 
delta: (9,9)=3 
   (115.1 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color red and mask full
  [01]: a rectangle at (4,4) with size (4,4) and color blue and mask full
  [011]: a rectangle at (8,8) with size (4,4) and color green and mask full
  [0111]: a rectangle at (4,0) with size (4,4) and color yellow and mask full
diff: 
delta: (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,15)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (16,16)=3  (16,17)=3  (16,18)=3  (16,19)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3 
   (764.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color red
  [01]: a point at (3,1) with color yellow
  [011]: a point at (3,3) with color blue
  [0111]: a point at (5,5) with color green
  [01111]: a point at (7,7) with color yellow
diff: 
delta: (9,9)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN 46f33fce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color blue
  [01]: a point at (1,3) with color green
  [011]: a point at (3,3) with color yellow
  [0111]: a point at (7,9) with color cyan
  [01111]: a point at (9,7) with color red
diff: 
delta: (9,9)=2 
   (115.1 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (16,12) with size (4,8) and color red and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color blue and mask full
  [011]: a rectangle at (0,4) with size (4,4) and color green and mask full
  [0111]: a rectangle at (4,4) with size (4,4) and color yellow and mask full
diff: 
delta: (12,16)=8  (12,17)=8  (12,18)=8  (12,19)=8  (13,16)=8  (13,17)=8  (13,18)=8  (13,19)=8  (14,16)=8  (14,17)=8  (14,18)=8  (14,19)=8  (15,16)=8  (15,17)=8  (15,18)=8  (15,19)=8 
   (451.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color blue
  [01]: a point at (1,3) with color green
  [011]: a point at (3,3) with color yellow
  [0111]: a point at (7,9) with color cyan
  [01111]: a point at (9,7) with color red
diff: 
delta: (9,9)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN 46f33fce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (1,3) with color red
  [011]: a point at (9,1) with color blue
  [0111]: a point at (9,3) with color blue
  [01111]: a point at (9,9) with color yellow
diff: 
delta:
   (95.5 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,4) with size (4,4) and color red and mask full
  [01]: a rectangle at (16,0) with size (4,8) and color blue and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color green and mask full
  [0111]: a rectangle at (16,16) with size (4,4) and color yellow and mask full
diff: 
delta:
   (130.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (1,3) with color red
  [011]: a point at (9,1) with color blue
  [0111]: a point at (9,3) with color blue
  [01111]: a point at (9,9) with color yellow
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TRAIN 46f33fce.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,3) with color pink
  [01]: a point at (5,5) with color blue
  [011]: a point at (7,3) with color green
  [0111]: a point at (7,7) with color yellow
  [01111]: a point at (9,1) with color red
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TEST 46f33fce.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 13465.8 bits (13465.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-292] Checking task 47c1f68c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12122.8 = 12131.8
DL output with Mo: L = 9.0 + 10314.1 = 10323.0
DL input+output M: L = 17.9 + 22436.9 = 22454.8

# learning a model for train pairs
22454.8	
17100.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14174.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12312.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10981.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10243.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9947.1	OUT DEF: layer[0].pos={layer[011].pos}
9808.0	OUT DEF: layer[0].color={layer[0].color}
9669.0	OUT DEF: layer[01].color={layer[01].color}
8690.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8619.7	IN  DEF: layer[0].mask=full
8549.0	IN  DEF: layer[01].mask=full
8503.4	IN  DEF: color=black
8468.4	OUT DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at {layer[011].pos} with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color {layer[01].color} and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 55.9 + 3341.8 = 3397.7
DL output with Mo: L = 66.0 + 5004.7 = 5070.7
DL input+output M: L = 121.9 + 8346.5 = 8468.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color red and mask full
  [01]: a rectangle at (0,5) with size (11,1) and color red and mask full
  [011]: a rectangle at (1,0) with size (3,3) and color blue and mask 110011010
diff: 
delta:
   (115.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color red and mask 110011010
  [01]: a rectangle at (1,7) with size (3,3) and color red and mask 11110010
  [011]: a rectangle at (6,0) with size (3,3) and color red and mask 10011110
diff: 
delta: (6,7)=2  (6,8)=2  (7,8)=2  (7,9)=2  (8,8)=2 
   (209.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color red and mask full
  [01]: a rectangle at (0,5) with size (11,1) and color red and mask full
  [011]: a rectangle at (1,0) with size (3,3) and color blue and mask 110011010
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color red and mask full
  [01]: a rectangle at (1,0) with size (3,3) and color blue and mask 110011010
  [011]: a rectangle at (0,5) with size (11,1) and color red and mask full
diff:   layer[01].mask
delta:
! 27 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (0,4) with size (9,1) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color green and mask 1011101
diff: 
delta:
   (111.7 bits)
data: a background with size (8,8) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 1011101
  [01]: a rectangle at (0,5) with size (3,3) and color cyan and mask 100110101
  [011]: a rectangle at (0,0) with size (8,8) and color black and mask 101101000111100011111101111111111111111111111111111111111111111
diff: 
delta:
   (180.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (0,4) with size (9,1) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color green and mask 1011101
diff: 
delta:
! size mismatch, 10x10 instead of 8x8
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask 1011101
  [011]: a rectangle at (0,4) with size (9,1) and color cyan and mask full
diff:   layer[01].mask
delta:
! size mismatch, 10x10 instead of 8x8

TRAIN 47c1f68c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,7) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (7,1) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color red and mask 10110001
diff: 
delta:
   (106.7 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color yellow and mask full
  [01]: a rectangle at (0,5) with size (1,1) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (6,6) and color yellow and mask 100001011110010010010010011110100001
diff: 
delta:
   (110.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,7) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (7,1) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color red and mask 10110001
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,7) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color red and mask 10110001
  [011]: a rectangle at (0,3) with size (7,1) and color yellow and mask full
diff:   layer[01].mask
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 47c1f68c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (6,0) with size (1,13) and color green and mask full
  [01]: a rectangle at (0,6) with size (13,1) and color green and mask full
  [011]: a rectangle at (0,0) with size (5,4) and color cyan and mask 11000100010100100100
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (6,0) with size (1,13) and color green and mask full
  [01]: a rectangle at (0,0) with size (5,4) and color cyan and mask 11000100010100100100
  [011]: a rectangle at (0,6) with size (13,1) and color green and mask full
diff:   layer[01].mask
delta:
! size mismatch, 10x10 instead of 12x12

TEST 47c1f68c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5004.7 bits (5004.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-291] Checking task 484b58aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 349252.8 = 349261.7
DL output with Mo: L = 9.0 + 329425.6 = 329434.6
DL input+output M: L = 17.9 + 678678.4 = 678696.3

# learning a model for train pairs
678696.3	
582547.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
498178.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
465276.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 264866.7 = 264893.3
DL output with Mo: L = 43.4 + 200339.8 = 200383.1
DL input+output M: L = 69.9 + 465206.4 = 465276.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (29,29) and color grey and layers
  [0]: a rectangle at (1,0) with size (28,29) and color red and mask
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,3)=1  (1,5)=3  (1,6)=4  (1,9)=1  (1,11)=3  (1,12)=4  (1,15)=1  (1,17)=3  (1,18)=4  (1,21)=1  (1,23)=3  (1,24)=4  (1,27)=1  (2,1)=6  (2,2)=1  (2,5)=4  (2,7)=6  (2,8)=1  (2,11)=4  (2,13)=6  (2,14)=1  (2,17)=4  (2,19)=6  (2,20)=1  (2,23)=4  (2,25)=6  (2,26)=1  (3,1)=1  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,9)=3  (3,10)=4  (3,13)=1  (3,15)=3  (3,16)=4  (3,19)=1  (3,21)=3  (3,22)=4  (3,25)=1  (3,27)=3  (3,28)=4  (4,0)=1  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,15)=4  (4,17)=6  (4,18)=1  (4,21)=4  (4,23)=6  (4,24)=1  (4,27)=4  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,11)=1  (5,13)=3  (5,14)=4  (5,17)=1  (5,19)=3  (5,20)=4  (5,23)=1  (5,25)=3  (5,26)=4  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,13)=4  (6,15)=6  (6,16)=1  (6,19)=4  (6,21)=6  (6,22)=1  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,9)=1  (7,11)=3  (7,12)=4  (7,15)=1  (7,17)=3  (7,18)=4  (7,21)=1  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (8,1)=6  (8,2)=1  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,11)=4  (8,13)=6  (8,14)=1  (8,17)=4  (8,19)=6  (8,20)=1  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (9,1)=1  (9,3)=3  (9,4)=0  (9,5)=0  (9,7)=1  (9,9)=3  (9,10)=4  (9,13)=1  (9,15)=3  (9,16)=4  (9,19)=1  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,3)=4  (10,5)=6  (10,6)=1  (10,9)=4  (10,11)=6  (10,12)=1  (10,15)=4  (10,17)=6  (10,18)=1  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,1)=3  (11,2)=4  (11,5)=1  (11,7)=3  (11,8)=4  (11,11)=1  (11,13)=3  (11,14)=4  (11,17)=1  (11,19)=3  (11,20)=4  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (12,1)=4  (12,3)=6  (12,4)=1  (12,7)=4  (12,9)=6  (12,10)=1  (12,13)=4  (12,15)=6  (12,16)=1  (12,19)=4  (12,21)=6  (12,22)=1  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=1  (13,11)=3  (13,12)=4  (13,15)=1  (13,17)=3  (13,18)=4  (13,21)=1  (13,23)=3  (13,24)=4  (13,27)=1  (14,1)=6  (14,2)=1  (14,5)=4  (14,7)=6  (14,8)=1  (14,11)=4  (14,13)=6  (14,14)=1  (14,17)=4  (14,19)=6  (14,20)=1  (14,23)=4  (14,25)=6  (14,26)=1  (15,1)=1  (15,3)=3  (15,4)=4  (15,7)=1  (15,9)=3  (15,10)=4  (15,13)=1  (15,15)=3  (15,16)=4  (15,19)=1  (15,21)=3  (15,22)=4  (15,25)=1  (15,27)=3  (15,28)=4  (16,0)=1  (16,3)=4  (16,5)=6  (16,6)=1  (16,9)=4  (16,11)=6  (16,12)=1  (16,15)=4  (16,17)=6  (16,18)=1  (16,21)=4  (16,23)=6  (16,24)=1  (16,27)=4  (17,1)=3  (17,2)=4  (17,5)=1  (17,7)=3  (17,8)=4  (17,11)=1  (17,13)=3  (17,14)=4  (17,17)=1  (17,19)=3  (17,20)=4  (17,23)=1  (17,25)=3  (17,26)=4  (18,1)=4  (18,3)=6  (18,4)=1  (18,7)=4  (18,9)=6  (18,10)=1  (18,13)=4  (18,15)=6  (18,16)=1  (18,19)=4  (18,21)=6  (18,22)=1  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,3)=1  (19,5)=3  (19,6)=4  (19,9)=1  (19,11)=3  (19,12)=4  (19,15)=1  (19,17)=3  (19,18)=4  (19,21)=1  (19,23)=3  (19,24)=4  (19,27)=1  (20,1)=6  (20,2)=1  (20,5)=4  (20,7)=6  (20,8)=1  (20,11)=4  (20,13)=6  (20,14)=1  (20,17)=4  (20,19)=6  (20,20)=1  (20,23)=4  (20,25)=6  (20,26)=1  (21,1)=1  (21,3)=3  (21,4)=4  (21,7)=1  (21,9)=3  (21,10)=4  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,19)=1  (21,21)=3  (21,22)=4  (21,25)=1  (21,27)=3  (21,28)=4  (22,0)=1  (22,3)=4  (22,5)=6  (22,6)=1  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,21)=4  (22,23)=6  (22,24)=1  (22,27)=4  (23,1)=3  (23,2)=4  (23,5)=1  (23,7)=3  (23,8)=4  (23,11)=1  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,19)=3  (23,20)=4  (23,23)=1  (23,25)=3  (23,26)=4  (24,1)=4  (24,3)=6  (24,4)=1  (24,7)=4  (24,9)=6  (24,10)=1  (24,13)=4  (24,15)=6  (24,16)=1  (24,19)=4  (24,21)=6  (24,22)=1  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,3)=1  (25,5)=3  (25,6)=4  (25,9)=1  (25,11)=3  (25,12)=4  (25,15)=1  (25,17)=3  (25,18)=4  (25,21)=1  (25,23)=3  (25,24)=4  (25,27)=1  (26,1)=6  (26,2)=1  (26,5)=4  (26,7)=6  (26,8)=1  (26,11)=4  (26,13)=6  (26,14)=1  (26,17)=4  (26,19)=6  (26,20)=1  (26,23)=4  (26,25)=6  (26,26)=1  (27,1)=1  (27,3)=3  (27,4)=4  (27,7)=1  (27,9)=3  (27,10)=4  (27,13)=1  (27,15)=3  (27,16)=4  (27,19)=1  (27,21)=3  (27,22)=4  (27,25)=1  (27,27)=3  (27,28)=4  (28,0)=1  (28,3)=4  (28,5)=6  (28,6)=1  (28,9)=4  (28,11)=6  (28,12)=1  (28,15)=4  (28,17)=6  (28,18)=1  (28,21)=4  (28,23)=6  (28,24)=1  (28,27)=4 
   (10200.3 bits)
data: a background with size (29,29) and color grey and layers
  [0]: a rectangle at (1,0) with size (28,29) and color red and mask
  [01]: a rectangle at (0,0) with size (29,29) and color blue and mask
diff: 
delta: (0,1)=4  (0,3)=6  (0,5)=2  (0,7)=4  (0,9)=6  (0,11)=2  (0,13)=4  (0,15)=6  (0,17)=2  (0,19)=4  (0,21)=6  (0,23)=2  (0,25)=4  (0,27)=6  (1,0)=4  (1,5)=3  (1,6)=4  (1,11)=3  (1,12)=4  (1,17)=3  (1,18)=4  (1,23)=3  (1,24)=4  (2,1)=6  (2,5)=4  (2,7)=6  (2,11)=4  (2,13)=6  (2,17)=4  (2,19)=6  (2,23)=4  (2,25)=6  (3,3)=3  (3,4)=4  (3,9)=3  (3,10)=4  (3,15)=3  (3,16)=4  (3,21)=3  (3,22)=4  (3,27)=3  (3,28)=4  (4,3)=4  (4,5)=6  (4,9)=4  (4,11)=6  (4,15)=4  (4,17)=6  (4,21)=4  (4,23)=6  (4,27)=4  (5,1)=3  (5,2)=4  (5,7)=3  (5,8)=4  (5,13)=3  (5,14)=4  (5,19)=3  (5,20)=4  (5,25)=3  (5,26)=4  (6,1)=4  (6,3)=6  (6,7)=4  (6,9)=6  (6,13)=4  (6,15)=6  (6,19)=4  (6,21)=6  (6,25)=4  (6,27)=6  (7,0)=4  (7,5)=3  (7,6)=4  (7,11)=3  (7,12)=4  (7,17)=3  (7,18)=4  (7,23)=3  (7,24)=4  (8,1)=6  (8,5)=4  (8,7)=6  (8,11)=4  (8,13)=6  (8,17)=4  (8,19)=6  (8,23)=4  (8,25)=6  (9,3)=3  (9,4)=4  (9,9)=3  (9,10)=4  (9,15)=3  (9,16)=4  (9,21)=3  (9,22)=4  (9,27)=3  (9,28)=4  (10,3)=4  (10,5)=6  (10,9)=4  (10,11)=6  (10,15)=4  (10,17)=6  (10,21)=4  (10,23)=6  (10,27)=4  (11,1)=3  (11,2)=4  (11,7)=3  (11,8)=4  (11,13)=3  (11,14)=4  (11,19)=3  (11,20)=4  (11,25)=3  (11,26)=4  (12,1)=4  (12,3)=6  (12,7)=4  (12,9)=6  (12,13)=4  (12,15)=6  (12,19)=4  (12,21)=6  (12,25)=4  (12,27)=6  (13,0)=4  (13,5)=3  (13,6)=4  (13,11)=3  (13,12)=4  (13,17)=3  (13,18)=4  (13,23)=3  (13,24)=4  (14,1)=6  (14,5)=4  (14,7)=6  (14,11)=4  (14,13)=6  (14,17)=4  (14,19)=6  (14,23)=4  (14,25)=6  (15,3)=3  (15,4)=4  (15,9)=3  (15,10)=4  (15,15)=3  (15,16)=4  (15,21)=3  (15,22)=4  (15,27)=3  (15,28)=4  (16,3)=4  (16,5)=6  (16,9)=4  (16,11)=6  (16,15)=4  (16,17)=6  (16,21)=4  (16,23)=6  (16,27)=4  (17,1)=3  (17,2)=4  (17,7)=3  (17,8)=4  (17,13)=3  (17,14)=4  (17,19)=3  (17,20)=4  (17,25)=3  (17,26)=4  (18,1)=4  (18,3)=6  (18,7)=4  (18,9)=6  (18,13)=4  (18,15)=6  (18,19)=4  (18,21)=6  (18,25)=4  (18,27)=6  (19,0)=4  (19,5)=3  (19,6)=4  (19,11)=3  (19,12)=4  (19,17)=3  (19,18)=4  (19,23)=3  (19,24)=4  (20,1)=6  (20,5)=4  (20,7)=6  (20,11)=4  (20,13)=6  (20,17)=4  (20,19)=6  (20,23)=4  (20,25)=6  (21,3)=3  (21,4)=4  (21,9)=3  (21,10)=4  (21,15)=3  (21,16)=4  (21,21)=3  (21,22)=4  (21,27)=3  (21,28)=4  (22,3)=4  (22,5)=6  (22,9)=4  (22,11)=6  (22,15)=4  (22,17)=6  (22,21)=4  (22,23)=6  (22,27)=4  (23,1)=3  (23,2)=4  (23,7)=3  (23,8)=4  (23,13)=3  (23,14)=4  (23,19)=3  (23,20)=4  (23,25)=3  (23,26)=4  (24,1)=4  (24,3)=6  (24,7)=4  (24,9)=6  (24,13)=4  (24,15)=6  (24,19)=4  (24,21)=6  (24,25)=4  (24,27)=6  (25,0)=4  (25,5)=3  (25,6)=4  (25,11)=3  (25,12)=4  (25,17)=3  (25,18)=4  (25,23)=3  (25,24)=4  (26,1)=6  (26,5)=4  (26,7)=6  (26,11)=4  (26,13)=6  (26,17)=4  (26,19)=6  (26,23)=4  (26,25)=6  (27,3)=3  (27,4)=4  (27,9)=3  (27,10)=4  (27,15)=3  (27,16)=4  (27,21)=3  (27,22)=4  (27,27)=3  (27,28)=4  (28,3)=4  (28,5)=6  (28,9)=4  (28,11)=6  (28,15)=4  (28,17)=6  (28,21)=4  (28,23)=6  (28,27)=4 
   (7555.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color grey and layers
  [0]: a rectangle at (1,0) with size (28,29) and color red and mask
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,3)=1  (1,5)=3  (1,6)=4  (1,9)=1  (1,11)=3  (1,12)=4  (1,15)=1  (1,17)=3  (1,18)=4  (1,21)=1  (1,23)=3  (1,24)=4  (1,27)=1  (2,1)=6  (2,2)=1  (2,5)=4  (2,7)=6  (2,8)=1  (2,11)=4  (2,13)=6  (2,14)=1  (2,17)=4  (2,19)=6  (2,20)=1  (2,23)=4  (2,25)=6  (2,26)=1  (3,1)=1  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,9)=3  (3,10)=4  (3,13)=1  (3,15)=3  (3,16)=4  (3,19)=1  (3,21)=3  (3,22)=4  (3,25)=1  (3,27)=3  (3,28)=4  (4,0)=1  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,15)=4  (4,17)=6  (4,18)=1  (4,21)=4  (4,23)=6  (4,24)=1  (4,27)=4  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,11)=1  (5,13)=3  (5,14)=4  (5,17)=1  (5,19)=3  (5,20)=4  (5,23)=1  (5,25)=3  (5,26)=4  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,13)=4  (6,15)=6  (6,16)=1  (6,19)=4  (6,21)=6  (6,22)=1  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,9)=1  (7,11)=3  (7,12)=4  (7,15)=1  (7,17)=3  (7,18)=4  (7,21)=1  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (8,1)=6  (8,2)=1  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,11)=4  (8,13)=6  (8,14)=1  (8,17)=4  (8,19)=6  (8,20)=1  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (9,1)=1  (9,3)=3  (9,4)=0  (9,5)=0  (9,7)=1  (9,9)=3  (9,10)=4  (9,13)=1  (9,15)=3  (9,16)=4  (9,19)=1  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,3)=4  (10,5)=6  (10,6)=1  (10,9)=4  (10,11)=6  (10,12)=1  (10,15)=4  (10,17)=6  (10,18)=1  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,1)=3  (11,2)=4  (11,5)=1  (11,7)=3  (11,8)=4  (11,11)=1  (11,13)=3  (11,14)=4  (11,17)=1  (11,19)=3  (11,20)=4  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (12,1)=4  (12,3)=6  (12,4)=1  (12,7)=4  (12,9)=6  (12,10)=1  (12,13)=4  (12,15)=6  (12,16)=1  (12,19)=4  (12,21)=6  (12,22)=1  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=1  (13,11)=3  (13,12)=4  (13,15)=1  (13,17)=3  (13,18)=4  (13,21)=1  (13,23)=3  (13,24)=4  (13,27)=1  (14,1)=6  (14,2)=1  (14,5)=4  (14,7)=6  (14,8)=1  (14,11)=4  (14,13)=6  (14,14)=1  (14,17)=4  (14,19)=6  (14,20)=1  (14,23)=4  (14,25)=6  (14,26)=1  (15,1)=1  (15,3)=3  (15,4)=4  (15,7)=1  (15,9)=3  (15,10)=4  (15,13)=1  (15,15)=3  (15,16)=4  (15,19)=1  (15,21)=3  (15,22)=4  (15,25)=1  (15,27)=3  (15,28)=4  (16,0)=1  (16,3)=4  (16,5)=6  (16,6)=1  (16,9)=4  (16,11)=6  (16,12)=1  (16,15)=4  (16,17)=6  (16,18)=1  (16,21)=4  (16,23)=6  (16,24)=1  (16,27)=4  (17,1)=3  (17,2)=4  (17,5)=1  (17,7)=3  (17,8)=4  (17,11)=1  (17,13)=3  (17,14)=4  (17,17)=1  (17,19)=3  (17,20)=4  (17,23)=1  (17,25)=3  (17,26)=4  (18,1)=4  (18,3)=6  (18,4)=1  (18,7)=4  (18,9)=6  (18,10)=1  (18,13)=4  (18,15)=6  (18,16)=1  (18,19)=4  (18,21)=6  (18,22)=1  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,3)=1  (19,5)=3  (19,6)=4  (19,9)=1  (19,11)=3  (19,12)=4  (19,15)=1  (19,17)=3  (19,18)=4  (19,21)=1  (19,23)=3  (19,24)=4  (19,27)=1  (20,1)=6  (20,2)=1  (20,5)=4  (20,7)=6  (20,8)=1  (20,11)=4  (20,13)=6  (20,14)=1  (20,17)=4  (20,19)=6  (20,20)=1  (20,23)=4  (20,25)=6  (20,26)=1  (21,1)=1  (21,3)=3  (21,4)=4  (21,7)=1  (21,9)=3  (21,10)=4  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,19)=1  (21,21)=3  (21,22)=4  (21,25)=1  (21,27)=3  (21,28)=4  (22,0)=1  (22,3)=4  (22,5)=6  (22,6)=1  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,21)=4  (22,23)=6  (22,24)=1  (22,27)=4  (23,1)=3  (23,2)=4  (23,5)=1  (23,7)=3  (23,8)=4  (23,11)=1  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,19)=3  (23,20)=4  (23,23)=1  (23,25)=3  (23,26)=4  (24,1)=4  (24,3)=6  (24,4)=1  (24,7)=4  (24,9)=6  (24,10)=1  (24,13)=4  (24,15)=6  (24,16)=1  (24,19)=4  (24,21)=6  (24,22)=1  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,3)=1  (25,5)=3  (25,6)=4  (25,9)=1  (25,11)=3  (25,12)=4  (25,15)=1  (25,17)=3  (25,18)=4  (25,21)=1  (25,23)=3  (25,24)=4  (25,27)=1  (26,1)=6  (26,2)=1  (26,5)=4  (26,7)=6  (26,8)=1  (26,11)=4  (26,13)=6  (26,14)=1  (26,17)=4  (26,19)=6  (26,20)=1  (26,23)=4  (26,25)=6  (26,26)=1  (27,1)=1  (27,3)=3  (27,4)=4  (27,7)=1  (27,9)=3  (27,10)=4  (27,13)=1  (27,15)=3  (27,16)=4  (27,19)=1  (27,21)=3  (27,22)=4  (27,25)=1  (27,27)=3  (27,28)=4  (28,0)=1  (28,3)=4  (28,5)=6  (28,6)=1  (28,9)=4  (28,11)=6  (28,12)=1  (28,15)=4  (28,17)=6  (28,18)=1  (28,21)=4  (28,23)=6  (28,24)=1  (28,27)=4 
! size mismatch, 10x10 instead of 29x29

TRAIN 484b58aa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (29,29) and color grey and layers
  [0]: a rectangle at (0,0) with size (29,29) and color red and mask 11000010101010010010011010000101000110000101010100100100010001001010001100001010101001010000100010010100011000010100100110100001000100101000110101001001001101000010001001010010101010010010011010000100000110000101010100100100000100001010001100001010101000001000100010010100011000010000010010100001000100101000110000101001001101000010001001000001101010010000011010000100000010100101000000100100110100001000001100000010101000001001101000010100000000010000010010010001000000001000110000101010100101000000001001010001100001010010011010000100010010100011010100100100110100001000100101001010101001001001101000010000011000010101010010010011010000101000110000101010100100100010001001010001100001010101001010000100010010100011000000000100110100001000100101000000101001001001101000010001000000010101010010010011010000000000110000101010100100100110100
diff: 
delta: (0,1)=4  (0,3)=1  (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=7# (1,7)=4  (1,9)=1  (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,11)=7# (2,13)=4  (2,15)=1  (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,17)=7# (3,19)=4  (3,21)=1  (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,23)=7# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,1)=4  (7,3)=1  (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,5)=7# (8,7)=4  (8,9)=1  (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,11)=7# (9,13)=4  (9,15)=1  (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,17)=7# (10,19)=4  (10,21)=1  (10,25)=3  (10,27)=7# (10,28)=1  (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=0  (11,20)=0  (11,21)=0  (11,22)=0  (11,23)=0  (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=3  (12,25)=7# (12,26)=1  (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,17)=7# (13,18)=1  (13,19)=0  (13,20)=0  (13,21)=0  (13,22)=0  (13,23)=0  (13,25)=1  (13,27)=3  (13,28)=3  (14,1)=4  (14,3)=1  (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,19)=0  (14,20)=0  (14,21)=0  (14,22)=0  (14,23)=0  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,5)=7# (15,7)=4  (15,9)=1  (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=0  (15,20)=0  (15,21)=0  (15,22)=0  (15,23)=1  (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,11)=7# (16,13)=4  (16,15)=1  (16,19)=0  (16,20)=0  (16,21)=0  (16,22)=0  (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,17)=7# (17,19)=4  (17,21)=1  (17,25)=3  (17,27)=7# (17,28)=1  (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,23)=7# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,5)=7# (22,7)=4  (22,9)=1  (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,11)=7# (23,13)=4  (23,15)=1  (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,17)=7# (24,19)=4  (24,21)=1  (24,25)=3  (24,27)=7# (24,28)=1  (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,23)=7# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,1)=4  (28,3)=1  (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,17)=1  (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
   (10270.7 bits)
data: a background with size (29,29) and color grey and layers
  [0]: a rectangle at (0,0) with size (29,29) and color red and mask
  [01]: a rectangle at (3,3) with size (26,26) and color blue and mask
diff: 
delta: (0,1)=4  (0,3)=1  (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=3  (1,1)=7# (1,2)=1  (1,5)=7# (1,7)=4  (1,9)=1  (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (2,1)=1  (2,3)=3  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,11)=7# (2,13)=4  (2,15)=1  (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=1  (3,3)=4  (3,4)=3  (3,5)=7# (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,17)=7# (3,19)=4  (3,25)=3  (3,27)=7# (4,5)=7# (4,9)=4  (4,10)=3  (4,11)=7# (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,23)=7# (4,25)=4  (5,0)=3  (5,1)=6  (5,3)=6  (5,11)=7# (5,15)=4  (5,16)=3  (5,17)=7# (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (6,1)=3  (6,3)=7# (6,6)=3  (6,7)=6  (6,9)=6  (6,17)=7# (6,21)=4  (6,22)=3  (6,23)=7# (6,27)=3  (6,28)=3  (7,1)=4  (7,7)=3  (7,9)=7# (7,12)=3  (7,13)=6  (7,15)=6  (7,23)=7# (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,5)=7# (8,7)=4  (8,13)=3  (8,15)=7# (8,18)=3  (8,19)=6  (8,21)=6  (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,11)=7# (9,13)=4  (9,19)=3  (9,21)=7# (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,17)=7# (10,19)=4  (10,25)=3  (10,27)=7# (11,5)=7# (11,9)=4  (11,10)=3  (11,11)=7# (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=7# (11,23)=7# (11,25)=4  (12,0)=3  (12,1)=6  (12,3)=6  (12,11)=7# (12,15)=4  (12,16)=3  (12,17)=7# (12,21)=3  (12,22)=3  (12,24)=3  (12,25)=7# (13,1)=3  (13,3)=7# (13,6)=3  (13,7)=6  (13,9)=6  (13,17)=7# (13,21)=4  (13,22)=3  (13,23)=7# (13,27)=3  (13,28)=3  (14,1)=4  (14,7)=3  (14,9)=7# (14,12)=3  (14,13)=6  (14,15)=6  (14,23)=7# (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,5)=7# (15,7)=4  (15,13)=3  (15,15)=7# (15,18)=3  (15,19)=6  (15,21)=6  (16,1)=1  (16,3)=3  (16,4)=3  (16,6)=3  (16,7)=7# (16,11)=7# (16,13)=4  (16,19)=3  (16,21)=7# (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=3  (17,5)=7# (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,17)=7# (17,19)=4  (17,25)=3  (17,27)=7# (18,5)=7# (18,9)=4  (18,10)=3  (18,11)=7# (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,23)=7# (18,25)=4  (19,0)=3  (19,1)=6  (19,3)=6  (19,11)=7# (19,15)=4  (19,16)=3  (19,17)=7# (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (20,1)=3  (20,3)=7# (20,6)=3  (20,7)=6  (20,9)=6  (20,17)=7# (20,21)=4  (20,22)=3  (20,23)=7# (20,27)=3  (20,28)=3  (21,1)=4  (21,7)=3  (21,9)=7# (21,12)=3  (21,13)=6  (21,15)=6  (21,23)=7# (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,5)=7# (22,7)=4  (22,13)=3  (22,15)=7# (22,18)=3  (22,19)=6  (22,21)=6  (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,11)=7# (23,13)=4  (23,19)=3  (23,21)=7# (23,24)=3  (23,25)=6  (23,27)=6  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,17)=7# (24,19)=4  (24,25)=3  (24,27)=7# (25,5)=7# (25,9)=4  (25,10)=3  (25,11)=7# (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,23)=7# (25,25)=4  (26,0)=3  (26,1)=6  (26,3)=6  (26,11)=7# (26,15)=4  (26,16)=3  (26,17)=7# (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (27,1)=3  (27,3)=7# (27,6)=3  (27,7)=6  (27,9)=6  (27,17)=7# (27,21)=4  (27,22)=3  (27,23)=7# (27,27)=3  (27,28)=3  (28,1)=4  (28,7)=3  (28,9)=7# (28,12)=3  (28,13)=6  (28,15)=6  (28,23)=7# (28,27)=4  (28,28)=3 
   (8245.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color grey and layers
  [0]: a rectangle at (0,0) with size (29,29) and color red and mask
diff: 
delta: (0,1)=4  (0,3)=1  (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=7# (1,7)=4  (1,9)=1  (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,11)=7# (2,13)=4  (2,15)=1  (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,17)=7# (3,19)=4  (3,21)=1  (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,23)=7# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,1)=4  (7,3)=1  (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,5)=7# (8,7)=4  (8,9)=1  (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,11)=7# (9,13)=4  (9,15)=1  (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,17)=7# (10,19)=4  (10,21)=1  (10,25)=3  (10,27)=7# (10,28)=1  (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=0  (11,20)=0  (11,21)=0  (11,22)=0  (11,23)=0  (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=3  (12,25)=7# (12,26)=1  (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,17)=7# (13,18)=1  (13,19)=0  (13,20)=0  (13,21)=0  (13,22)=0  (13,23)=0  (13,25)=1  (13,27)=3  (13,28)=3  (14,1)=4  (14,3)=1  (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,19)=0  (14,20)=0  (14,21)=0  (14,22)=0  (14,23)=0  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,5)=7# (15,7)=4  (15,9)=1  (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=0  (15,20)=0  (15,21)=0  (15,22)=0  (15,23)=1  (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,11)=7# (16,13)=4  (16,15)=1  (16,19)=0  (16,20)=0  (16,21)=0  (16,22)=0  (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,17)=7# (17,19)=4  (17,21)=1  (17,25)=3  (17,27)=7# (17,28)=1  (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,23)=7# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,5)=7# (22,7)=4  (22,9)=1  (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,11)=7# (23,13)=4  (23,15)=1  (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,17)=7# (24,19)=4  (24,21)=1  (24,25)=3  (24,27)=7# (24,28)=1  (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,23)=7# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,1)=4  (28,3)=1  (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,17)=1  (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
! size mismatch, 10x10 instead of 29x29

TRAIN 484b58aa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (29,29) and color red and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,1)=8  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
   (6015.6 bits)
data: a background with size (29,29) and color red and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
  [01]: a rectangle at (1,0) with size (1,29) and color red and mask full
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,7)=4  (4,9)=6  (4,11)=8  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (6,1)=8  (6,5)=4  (6,7)=6  (6,9)=8  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (8,3)=4  (8,5)=6  (8,7)=8  (8,11)=4  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (10,1)=4  (10,3)=6  (10,5)=8  (10,9)=4  (10,11)=6  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=8  (16,27)=4  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,25)=4  (18,27)=6  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,23)=4  (20,25)=6  (20,27)=8  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=4  (22,23)=6  (22,25)=8  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,27)=4  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
   (4233.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color red and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,1)=8  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
! size mismatch, 10x10 instead of 29x29

TRAIN 484b58aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color red and layers
  [0]: a rectangle at (3,3) with size (26,26) and color blue and mask
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=6  (0,4)=1  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,10)=1  (0,12)=5# (0,13)=1  (0,15)=9# (0,16)=1  (0,18)=8  (0,19)=1  (0,21)=6  (0,22)=1  (0,25)=1  (0,27)=3  (0,28)=1  (1,0)=1  (1,1)=8  (1,3)=1  (1,4)=5# (1,5)=9# (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=8  (1,11)=9# (1,12)=1  (1,13)=5# (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=9# (1,18)=1  (1,19)=8  (1,21)=1  (1,22)=5# (1,23)=9# (1,24)=1  (1,27)=1  (1,28)=8  (2,0)=5# (2,1)=3  (2,2)=1  (2,3)=8  (2,5)=1  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=8  (2,11)=1  (2,12)=8  (2,13)=9# (2,14)=0  (2,15)=0  (2,16)=0  (2,17)=1  (2,18)=5# (2,19)=3  (2,20)=1  (2,21)=8  (2,23)=1  (2,25)=6  (2,26)=1  (2,27)=5# (2,28)=8  (3,0)=5# (3,1)=1  (3,3)=9# (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,14)=0  (3,15)=0  (3,16)=0  (3,18)=5# (3,21)=9# (3,24)=8  (3,27)=6  (4,0)=1  (4,1)=5# (4,5)=9# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=5# (4,11)=9# (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=9# (4,19)=5# (4,23)=9# (4,25)=8  (4,28)=5# (5,0)=8  (5,1)=9# (5,2)=1  (5,4)=5# (5,6)=5# (5,7)=3  (5,9)=8  (5,13)=6  (5,14)=0  (5,15)=0  (5,16)=0  (5,18)=8  (5,19)=9# (5,22)=5# (5,24)=5# (5,25)=3  (5,27)=8  (6,1)=1  (6,3)=3  (6,6)=5# (6,9)=9# (6,12)=8  (6,14)=0  (6,15)=0  (6,16)=0  (6,21)=3  (6,24)=5# (6,27)=9# (7,0)=1  (7,4)=8  (7,5)=9# (7,7)=5# (7,11)=9# (7,13)=8  (7,14)=0  (7,15)=0  (7,16)=0  (7,17)=9# (7,22)=8  (7,23)=9# (7,25)=5# (8,1)=6  (8,2)=1  (8,3)=5# (8,4)=8  (8,6)=8  (8,7)=9# (8,10)=5# (8,12)=5# (8,13)=3  (8,15)=8  (8,19)=6  (8,21)=5# (8,22)=8  (8,24)=8  (8,25)=9# (8,28)=5# (9,0)=8  (9,1)=1  (9,3)=6  (9,9)=3  (9,12)=5# (9,15)=9# (9,18)=8  (9,21)=6  (9,27)=3  (10,0)=1  (10,1)=8  (10,4)=5# (10,5)=9# (10,10)=8  (10,11)=9# (10,13)=5# (10,17)=9# (10,19)=8  (10,22)=5# (10,23)=9# (10,28)=8  (11,0)=5# (11,1)=3  (11,2)=1  (11,3)=8  (11,7)=6  (11,9)=5# (11,10)=8  (11,12)=8  (11,13)=9# (11,16)=5# (11,18)=5# (11,19)=3  (11,21)=8  (11,25)=6  (11,27)=5# (11,28)=8  (12,0)=5# (12,1)=1  (12,2)=0  (12,3)=0  (12,6)=8  (12,9)=6  (12,13)=0  (12,14)=0  (12,15)=0  (12,18)=5# (12,21)=9# (12,24)=8  (12,27)=6  (13,0)=1  (13,1)=5# (13,2)=0  (13,3)=0  (13,5)=9# (13,7)=8  (13,10)=5# (13,11)=9# (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=8  (13,17)=9# (13,19)=5# (13,23)=9# (13,25)=8  (13,28)=5# (14,0)=8  (14,1)=9# (14,2)=0  (14,3)=0  (14,4)=5# (14,6)=5# (14,7)=3  (14,9)=8  (14,13)=6  (14,15)=5# (14,16)=8  (14,18)=8  (14,19)=9# (14,22)=5# (14,24)=5# (14,25)=3  (14,27)=8  (15,1)=1  (15,2)=0  (15,3)=0  (15,4)=0  (15,6)=5# (15,9)=9# (15,12)=8  (15,15)=6  (15,21)=3  (15,24)=5# (15,27)=9# (16,0)=1  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=9# (16,7)=5# (16,11)=9# (16,13)=8  (16,16)=5# (16,17)=9# (16,22)=8  (16,23)=9# (16,25)=5# (17,1)=6  (17,2)=1  (17,3)=0  (17,4)=0  (17,6)=8  (17,7)=9# (17,10)=5# (17,12)=5# (17,13)=3  (17,15)=8  (17,19)=6  (17,21)=5# (17,22)=8  (17,24)=8  (17,25)=9# (17,28)=5# (18,0)=8  (18,1)=1  (18,3)=0  (18,4)=0  (18,9)=3  (18,12)=5# (18,15)=9# (18,18)=8  (18,21)=6  (18,27)=3  (19,0)=1  (19,1)=8  (19,4)=5# (19,5)=9# (19,10)=8  (19,11)=9# (19,13)=5# (19,17)=9# (19,19)=8  (19,22)=5# (19,23)=9# (19,28)=8  (20,0)=5# (20,1)=3  (20,2)=1  (20,3)=8  (20,7)=6  (20,9)=5# (20,10)=8  (20,12)=8  (20,13)=9# (20,16)=5# (20,18)=5# (20,19)=3  (20,21)=8  (20,25)=6  (20,27)=5# (20,28)=8  (21,0)=5# (21,1)=1  (21,3)=9# (21,6)=8  (21,9)=6  (21,15)=3  (21,18)=5# (21,21)=9# (21,24)=8  (21,27)=6  (22,0)=1  (22,1)=5# (22,5)=9# (22,7)=8  (22,10)=5# (22,11)=9# (22,16)=8  (22,17)=9# (22,19)=5# (22,23)=9# (22,25)=8  (22,28)=5# (23,0)=8  (23,1)=9# (23,2)=1  (23,4)=5# (23,6)=5# (23,7)=3  (23,9)=8  (23,13)=6  (23,15)=5# (23,16)=8  (23,18)=8  (23,19)=9# (23,22)=5# (23,24)=5# (23,25)=3  (23,27)=8  (24,1)=1  (24,3)=3  (24,6)=5# (24,9)=9# (24,12)=8  (24,15)=6  (24,21)=3  (24,24)=5# (24,27)=9# (25,0)=1  (25,4)=8  (25,5)=9# (25,7)=5# (25,11)=9# (25,13)=8  (25,16)=5# (25,17)=9# (25,22)=8  (25,23)=9# (25,25)=5# (26,1)=6  (26,2)=1  (26,3)=5# (26,4)=8  (26,6)=8  (26,7)=9# (26,10)=5# (26,12)=5# (26,13)=3  (26,15)=8  (26,19)=6  (26,21)=5# (26,22)=8  (26,24)=8  (26,25)=9# (26,28)=5# (27,0)=8  (27,1)=1  (27,3)=6  (27,9)=3  (27,12)=5# (27,15)=9# (27,18)=8  (27,21)=6  (27,27)=3  (28,0)=1  (28,1)=8  (28,4)=5# (28,5)=9# (28,10)=8  (28,11)=9# (28,13)=5# (28,17)=9# (28,19)=8  (28,22)=5# (28,23)=9# (28,28)=8 
! size mismatch, 10x10 instead of 29x29

TEST 484b58aa.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 200339.8 bits (200339.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-290] Checking task 48d8fb45.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7878.8 = 7887.8
DL output with Mo: L = 9.0 + 2227.1 = 2236.1
DL input+output M: L = 17.9 + 10105.9 = 10123.9

# learning a model for train pairs
10123.9	
7331.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6516.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5781.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5571.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5202.6	OUT DEF: layer[0].size={layer[0].size}
4835.0	OUT DEF: size={layer[0].size}
4495.8	OUT DEF: layer[0].mask={layer[01].mask}
4356.7	OUT DEF: layer[0].color={layer[0].color}
4311.1	OUT DEF: color=black
4265.5	IN  DEF: color=black
4230.5	OUT DEF: layer[0].pos=(?,?)
4152.7	OUT DEF: layer[0].pos.i={layer[01].size.i - layer[0].size.i}
4074.9	OUT DEF: layer[0].pos.j={layer[01].size.j - layer[0].size.j}
4039.8	IN  DEF: size=(?,?)
3776.5	IN  DEF: size.i=10
3513.2	IN  DEF: size.j=10
3478.2	IN  DEF: layer[0].pos=(?,?)
3443.2	IN  DEF: layer[0].size=(?,?)
3280.6	IN  DEF: layer[0].size.i=3
3118.0	IN  DEF: layer[0].size.j=3
3083.0	IN  DEF: layer[01].pos=(?,?)
3048.0	IN  DEF: layer[01].size=(?,?)
2885.4	IN  DEF: layer[01].size.i=3
2722.8	IN  DEF: layer[01].size.j=3
2687.8	IN  DEF: layer[011].pos=(?,?)
2549.8	IN  DEF: layer[011].pos.j=7
2514.8	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at ({layer[01].size.i - layer[0].size.i},{layer[01].size.j - layer[0].size.j}) with size {layer[0].size} and color {layer[0].color} and mask {layer[01].mask}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [011]: a rectangle at (?,7) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 111.7 + 2352.0 = 2463.7
DL output with Mo: L = 51.1 + 0.0 = 51.1
DL input+output M: L = 162.8 + 2352.0 = 2514.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,5) with size (3,3) and color blue and mask 110111110
  [01]: a rectangle at (3,2) with size (3,3) and color blue and mask 110111010
  [011]: a rectangle at (1,7) with size (3,3) and color blue and mask 10011110
diff: 
delta: (2,3)=5#
   (101.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 110111010
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,5) with size (3,3) and color blue and mask 110111110
  [01]: a rectangle at (3,2) with size (3,3) and color blue and mask 110111010
  [011]: a rectangle at (1,7) with size (3,3) and color blue and mask 10011110
diff: 
delta: (2,3)=5#
correct output grid

TRAIN 48d8fb45.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (3,3) and color yellow and mask 110101010
  [01]: a rectangle at (2,6) with size (3,3) and color yellow and mask 10100011
  [011]: a rectangle at (1,7) with size (1,1) and color grey and mask full
diff: 
delta:
   (66.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 10100011
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (3,3) and color yellow and mask 110101010
  [01]: a rectangle at (2,6) with size (3,3) and color yellow and mask 10100011
  [011]: a rectangle at (1,7) with size (1,1) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN 48d8fb45.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (3,3) and color red and mask 10101110
  [01]: a rectangle at (5,6) with size (3,3) and color red and mask 10011110
  [011]: a rectangle at (4,7) with size (1,1) and color grey and mask full
diff: 
delta:
   (66.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 10011110
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (3,3) and color red and mask 10101110
  [01]: a rectangle at (5,6) with size (3,3) and color red and mask 10011110
  [011]: a rectangle at (4,7) with size (1,1) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN 48d8fb45.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,5) with size (3,3) and color green and mask 110111010
  [01]: a rectangle at (1,5) with size (3,3) and color green and mask 110011010
  [011]: a rectangle at (4,1) with size (3,2) and color green and mask 101110
diff:   layer[011].pos.j
delta: (0,6)=5#
correct output grid

TEST 48d8fb45.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-289] Checking task 4938f0c2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10643.2 = 10652.1
DL output with Mo: L = 9.0 + 19914.5 = 19923.5
DL input+output M: L = 17.9 + 30557.7 = 30575.7

# learning a model for train pairs
30575.7	
27648.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24761.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21867.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19238.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16559.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
14838.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 5960.9 = 6004.3
DL output with Mo: L = 76.0 + 8758.3 = 8834.4
DL input+output M: L = 119.4 + 14719.2 = 14838.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,30) and color black and layers
  [0]: a rectangle at (3,5) with size (4,4) and color red and mask 1111100110011001
  [01]: a rectangle at (7,9) with size (2,2) and color green and mask full
diff: 
delta:
   (106.1 bits)
data: a background with size (20,30) and color black and layers
  [0]: a rectangle at (3,5) with size (4,4) and color red and mask 1111100110011001
  [01]: a rectangle at (3,11) with size (4,4) and color red and mask 1111100110011001
  [011]: a rectangle at (9,5) with size (4,4) and color red and mask 1001100110011111
  [0111]: a rectangle at (9,11) with size (4,4) and color red and mask 1001100110011111
diff: 
delta: (7,9)=3  (7,10)=3  (8,9)=3  (8,10)=3 
   (311.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,30) and color black and layers
  [0]: a rectangle at (3,5) with size (4,4) and color red and mask 1111100110011001
  [01]: a rectangle at (7,9) with size (2,2) and color green and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 20x30

TRAIN 4938f0c2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (3,3) and color red and mask 110101011
  [01]: a rectangle at (3,4) with size (2,2) and color green and mask full
diff: 
delta:
   (87.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (3,3) and color red and mask 110101011
  [01]: a rectangle at (0,6) with size (3,3) and color red and mask 11101110
  [011]: a rectangle at (5,1) with size (3,3) and color red and mask 11101110
  [0111]: a rectangle at (5,6) with size (3,3) and color red and mask 110101011
diff: 
delta: (3,4)=3  (3,5)=3  (4,4)=3  (4,5)=3 
   (251.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (3,3) and color red and mask 110101011
  [01]: a rectangle at (3,4) with size (2,2) and color green and mask full
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN 4938f0c2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color red and mask 111001101
  [01]: a rectangle at (1,7) with size (3,3) and color red and mask 111100101
diff: 
delta: (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
   (402.8 bits)
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (3,2) with size (1,8) and color red and mask full
  [01]: a rectangle at (6,2) with size (3,3) and color red and mask 101001111
  [011]: a rectangle at (6,7) with size (3,3) and color red and mask 101100111
  [0111]: a rectangle at (4,5) with size (2,2) and color green and mask full
diff: 
delta: (1,2)=2  (1,4)=2  (1,7)=2  (1,9)=2  (2,2)=2  (2,9)=2  (3,5)=0  (3,6)=0 
   (313.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (1,2) with size (3,3) and color red and mask 111001101
  [01]: a rectangle at (1,7) with size (3,3) and color red and mask 111100101
diff: 
delta: (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! size mismatch, 10x10 instead of 12x14

TRAIN 4938f0c2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,14) and color black and layers
  [0]: a rectangle at (2,2) with size (4,4) and color red and mask 1100010000101111
  [01]: a rectangle at (6,6) with size (2,2) and color green and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 18x14

TEST 4938f0c2.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 8758.3 bits (8758.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-288] Checking task 496994bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3578.1 = 3587.1
DL output with Mo: L = 9.0 + 6763.4 = 6772.3
DL input+output M: L = 17.9 + 10341.5 = 10359.4

# learning a model for train pairs
10359.4	
7449.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5366.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4102.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3245.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
2915.1	OUT DEF: size={size}
2730.3	OUT DEF: layer[01].pos={layer[01].pos}
2571.9	OUT DEF: color={layer[0].color}
2478.9	OUT DEF: layer[01].color={layer[01].color}
2386.6	OUT DEF: layer[0].color={color}
2295.1	IN  DEF: layer[0].color=red
2247.6	OUT DEF: layer[0].mask=full
2200.2	OUT DEF: layer[01].mask=full
2152.8	IN  DEF: layer[0].mask=full
2105.3	IN  DEF: layer[01].mask=full
2074.3	IN  DEF: color=black
2052.5	OUT DEF: layer[0].pos=(?,?)
1966.9	OUT DEF: layer[0].pos.i={layer[01].pos.i + 1}
1902.0	OUT DEF: layer[0].pos.j={layer[0].pos.j}
1880.2	OUT DEF: layer[0].size=(?,?)
1750.3	OUT DEF: layer[0].size.i={layer[0].size.j + 1}
1626.5	OUT DEF: layer[0].size.j={layer[0].size.j}
1604.7	OUT DEF: layer[01].size=(?,?)
1458.0	OUT DEF: layer[01].size.i={layer[01].size.j + 3}
1334.2	OUT DEF: layer[01].size.j={layer[01].size.j}
1312.4	IN  DEF: size=(?,?)
1138.7	IN  DEF: size.i=10
1116.9	IN  DEF: layer[0].pos=(?,?)
1025.4	IN  DEF: layer[0].pos.i=0
962.8	IN  DEF: layer[0].pos.j=0
941.0	IN  DEF: layer[0].size=(?,?)
919.2	IN  DEF: layer[01].pos=(?,?)
856.6	IN  DEF: layer[01].pos.j=0
834.8	IN  DEF: layer[01].size=(?,?)
787.4	IN  DEF: layer[01].size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at ({layer[01].pos.i + 1},{layer[0].pos.j}) with size ({layer[0].size.j + 1},{layer[0].size.j}) and color {color} and mask full
  [01]: a rectangle at {layer[01].pos} with size ({layer[01].size.j + 3},{layer[01].size.j}) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (10,?) and color black and layers
  [0]: a rectangle at (0,0) with size (?,?) and color red and mask full
  [01]: a rectangle at (?,0) with size (1,?) and color ? and mask full

DL input  with Mi: L = 75.8 + 625.9 = 701.7
DL output with Mo: L = 85.6 + 0.0 = 85.6
DL input+output M: L = 161.4 + 625.9 = 787.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color green and mask full
diff: 
delta:
   (30.1 bits)
data: a background with size (10,3) and color red and layers
  [0]: a rectangle at (3,0) with size (4,3) and color black and mask full
  [01]: a rectangle at (2,0) with size (6,3) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color green and mask full
diff: 
delta:
correct output grid

TRAIN 496994bd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,5) and color black and layers
  [0]: a rectangle at (0,0) with size (1,5) and color red and mask full
  [01]: a rectangle at (1,0) with size (1,5) and color cyan and mask full
diff: 
delta:
   (32.5 bits)
data: a background with size (10,5) and color red and layers
  [0]: a rectangle at (2,0) with size (6,5) and color black and mask full
  [01]: a rectangle at (1,0) with size (8,5) and color cyan and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  [0]: a rectangle at (0,0) with size (1,5) and color red and mask full
  [01]: a rectangle at (1,0) with size (1,5) and color cyan and mask full
diff: 
delta:
correct output grid

TRAIN 496994bd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,6) and color green and mask full
  [01]: a rectangle at (1,0) with size (2,6) and color grey and mask full
diff:   layer[01].size.i  layer[0].color
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,6) and color black and layers
  [0]: a rectangle at (1,0) with size (2,6) and color grey and mask full
  [01]: a rectangle at (0,0) with size (1,6) and color green and mask full
diff:   layer[0].color  layer[0].pos.i
delta:
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,6) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,6) and color green and mask full
  [01]: a rectangle at (3,0) with size (7,6) and color black and mask full
diff:   color  layer[01].size.i  layer[0].color
delta:
! 36 wrong pixels (generated / expected)

TEST 496994bd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-287] Checking task 49d1d64f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2348.7 = 2357.7
DL output with Mo: L = 9.0 + 7270.9 = 7279.9
DL input+output M: L = 17.9 + 9619.7 = 9637.6

# learning a model for train pairs
9637.6	
9058.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8472.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8245.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7737.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7599.3	OUT DEF: layer[0111].color=green
7458.6	OUT DEF: layer[01].color={color}
7380.0	IN  SHAPE at layer[0]: a point at ? with color ?
7240.3	OUT DEF: layer[011].color={layer[0].color}
7093.6	OUT DEF: layer[0].mask=1110
6947.0	OUT DEF: layer[011].mask=1101
6860.0	IN  SHAPE at layer[00]: a point at ? with color ?
6722.0	IN  DEF: layer[00].color=blue
6616.7	IN  SHAPE at layer[01]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask 1110
  [01]: a rectangle at ? with size ? and color {color} and mask ?
  [011]: a rectangle at ? with size ? and color {layer[0].color} and mask 1101
  [0111]: a rectangle at ? with size ? and color green and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color blue
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 41.2 + 1904.3 = 1945.5
DL output with Mo: L = 85.0 + 4586.3 = 4671.2
DL input+output M: L = 126.2 + 6490.6 = 6616.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,2) and color cyan and layers
  [00]: a point at (0,0) with color blue
  [0]: a point at (0,1) with color red
  [01]: a point at (1,0) with color green
diff: 
delta:
   (45.1 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
  [01]: a rectangle at (2,2) with size (2,2) and color cyan and mask 111
  [011]: a rectangle at (0,2) with size (2,2) and color red and mask 1101
  [0111]: a rectangle at (2,0) with size (2,2) and color green and mask 1011
diff: 
delta:
   (104.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color cyan and layers
  [00]: a point at (0,0) with color blue
  [0]: a point at (0,1) with color red
  [01]: a point at (1,0) with color green
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (2,2) and color green and layers
  [00]: a point at (0,0) with color blue
  [0]: a point at (0,1) with color red
  [01]: a point at (1,1) with color cyan
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TRAIN 49d1d64f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (2,3) and color cyan and layers
  [00]: a point at (0,0) with color blue
  [0]: a point at (0,2) with color yellow
  [01]: a point at (1,1) with color green
diff: 
delta:
   (48.0 bits)
data: a background with size (4,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
  [01]: a rectangle at (0,0) with size (4,5) and color cyan and mask 1010110110011100110
  [011]: a rectangle at (0,3) with size (2,2) and color yellow and mask 1101
  [0111]: a rectangle at (2,2) with size (2,1) and color green and mask full
diff: 
delta:
   (121.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,3) and color cyan and layers
  [00]: a point at (0,0) with color blue
  [0]: a point at (0,2) with color yellow
  [01]: a point at (1,1) with color green
diff: 
delta:
! size mismatch, 10x10 instead of 4x5

TRAIN 49d1d64f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [00]: a point at (0,1) with color blue
  [0]: a point at (0,2) with color yellow
  [01]: a point at (1,0) with color cyan
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
   (97.3 bits)
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [01]: a rectangle at (2,2) with size (3,3) and color red and mask 1001110
  [011]: a rectangle at (0,3) with size (2,2) and color yellow and mask 1101
  [0111]: a rectangle at (3,0) with size (2,2) and color green and mask full
diff: 
delta: (0,0)=0  (0,2)=1  (0,4)=0  (1,2)=1  (2,2)=0  (4,0)=0  (4,4)=0 
   (233.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [00]: a point at (0,1) with color blue
  [0]: a point at (0,2) with color yellow
  [01]: a point at (1,0) with color cyan
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
! size mismatch, 10x10 instead of 5x5

TRAIN 49d1d64f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color yellow and layers
  [00]: a point at (1,0) with color blue
  [0]: a point at (0,0) with color red
  [01]: a point at (0,1) with color cyan
diff: 
delta: (2,0)=3 
! size mismatch, 10x10 instead of 5x4

TEST 49d1d64f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4586.3 bits (4586.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-286] Checking task 4be741c5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 42695.1 = 42704.0
DL output with Mo: L = 9.0 + 1513.4 = 1522.3
DL input+output M: L = 17.9 + 44208.4 = 44226.4

# learning a model for train pairs
44226.4	
22939.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9896.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9806.0	OUT SHAPE at layer[0]: a point at ? with color ?
9567.9	OUT DEF: color={layer[01].color}
9428.5	OUT DEF: layer[0].color={layer[0].color}
9393.5	OUT DEF: size=(?,?)
9358.5	OUT DEF: layer[0].pos=(?,?)
9323.5	IN  DEF: size=(?,?)
9288.4	IN  DEF: layer[0].pos=(?,?)
9253.4	IN  DEF: layer[0].size=(?,?)
9218.4	IN  DEF: layer[01].pos=(?,?)
9183.4	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color {layer[01].color} and layers
  [0]: a point at (?,?) with color {layer[0].color}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 66.6 + 8132.4 = 8199.0
DL output with Mo: L = 30.0 + 954.4 = 984.4
DL input+output M: L = 96.6 + 9086.8 = 9183.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,16) and color yellow and layers
  [0]: a rectangle at (0,4) with size (14,10) and color red and mask 1111111000011111110001111111101111111111111111110111111111001111110000011111000001111110001111111000011111000001111000000111100001111111000
  [01]: a rectangle at (0,12) with size (14,4) and color cyan and mask full
diff: 
delta:
   (238.2 bits)
data: a background with size (1,3) and color cyan and layers
  [0]: a point at (0,1) with color red
diff: 
delta: (0,0)=4 
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color yellow and layers
  [0]: a rectangle at (0,4) with size (14,10) and color red and mask 1111111000011111110001111111101111111111111111110111111111001111110000011111000001111110001111111000011111000001111000000111100001111111000
  [01]: a rectangle at (0,12) with size (14,4) and color cyan and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 1x3
>> Trial 2
data: a background with size (14,16) and color cyan and layers
  [0]: a rectangle at (0,4) with size (14,10) and color red and mask 1111111000011111110001111111101111111111111111110111111111001111110000011111000001111110001111111000011111000001111000000111100001111111000
  [01]: a rectangle at (0,0) with size (14,8) and color yellow and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 1x3
>> Trial 3
data: a background with size (14,16) and color red and layers
  [0]: a rectangle at (0,0) with size (14,8) and color yellow and mask 11111100011111000011110000111100011111000111110111111101111111001111110011111101111111111111111111111101111111
  [01]: a rectangle at (0,12) with size (14,4) and color cyan and mask 11101111111111101100110011101111111111101111111111111100
diff: 
delta:
! size mismatch, 10x10 instead of 1x3

TRAIN 4be741c5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,7) and color red and layers
  [0]: a rectangle at (3,0) with size (5,7) and color cyan and mask 101100111111111111111111001110
  [01]: a rectangle at (6,0) with size (3,7) and color grey and mask full
diff: 
delta:
   (119.1 bits)
data: a background with size (3,1) and color grey and layers
  [0]: a point at (1,0) with color cyan
diff: 
delta: (0,0)=2 
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,7) and color red and layers
  [0]: a rectangle at (3,0) with size (5,7) and color cyan and mask 101100111111111111111111001110
  [01]: a rectangle at (6,0) with size (3,7) and color grey and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x1
>> Trial 2
data: a background with size (9,7) and color grey and layers
  [0]: a rectangle at (3,0) with size (5,7) and color cyan and mask 101100111111111111111111001110
  [01]: a rectangle at (0,0) with size (4,7) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x1
>> Trial 3
data: a background with size (9,7) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,7) and color red and mask 110001111111111111111111111
  [01]: a rectangle at (6,0) with size (3,7) and color grey and mask 111111111111010011000
diff: 
delta:
! size mismatch, 10x10 instead of 3x1

TRAIN 4be741c5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,9) and color yellow and layers
  [0]: a rectangle at (8,0) with size (3,9) and color green and mask full
  [01]: a rectangle at (0,0) with size (3,9) and color pink and mask 1010001111110011111111111
diff: 
delta: (6,1)=2  (6,2)=2  (6,6)=2  (6,7)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=2  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2 
   (456.0 bits)
data: a background with size (4,1) and color pink and layers
  [0]: a point at (3,0) with color green
diff: 
delta: (1,0)=4  (2,0)=2 
   (42.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color yellow and layers
  [0]: a rectangle at (8,0) with size (3,9) and color green and mask full
  [01]: a rectangle at (0,0) with size (3,9) and color pink and mask 1010001111110011111111111
diff: 
delta: (6,1)=2  (6,2)=2  (6,6)=2  (6,7)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=2  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2 
! size mismatch, 10x10 instead of 4x1
>> Trial 2
data: a background with size (11,9) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,9) and color pink and mask 1010001111110011111111111
  [01]: a rectangle at (8,0) with size (3,9) and color green and mask full
diff: 
delta: (6,1)=2  (6,2)=2  (6,6)=2  (6,7)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=2  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2 
! size mismatch, 10x10 instead of 4x1
>> Trial 3
data: a background with size (11,9) and color yellow and layers
  [0]: a rectangle at (6,0) with size (3,9) and color red and mask 1111101111111111011000110
  [01]: a rectangle at (8,0) with size (3,9) and color green and mask full
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (0,3)=6  (0,4)=6  (0,5)=6  (0,6)=6  (0,7)=6  (0,8)=6  (1,0)=6  (1,1)=6  (1,4)=6  (1,5)=6  (1,6)=6  (1,7)=6  (1,8)=6  (2,0)=6  (2,4)=6  (2,6)=6 
! size mismatch, 10x10 instead of 4x1

TRAIN 4be741c5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color blue and layers
  [0]: a rectangle at (0,3) with size (14,6) and color red and mask 111000011100011110111111111111011110011110011111111100111110001100001100011111111110
  [01]: a rectangle at (0,0) with size (14,6) and color green and mask full
diff: 
delta: (0,12)=8  (0,13)=8  (1,11)=8  (1,12)=8  (1,13)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (3,11)=8  (3,12)=8  (3,13)=8  (4,12)=8  (4,13)=8  (5,13)=8  (6,12)=8  (6,13)=8  (7,11)=8  (7,12)=8  (7,13)=8  (8,12)=8  (8,13)=8  (9,12)=8  (9,13)=8  (10,11)=8  (10,12)=8  (10,13)=8  (11,12)=8  (11,13)=8  (12,12)=8  (12,13)=8  (13,12)=8  (13,13)=8 
! size mismatch, 10x10 instead of 1x4
>> Trial 2
data: a background with size (14,14) and color green and layers
  [0]: a rectangle at (0,3) with size (14,6) and color red and mask 111000011100011110111111111111011110011110011111111100111110001100001100011111111110
  [01]: a rectangle at (0,7) with size (14,6) and color blue and mask full
diff: 
delta: (0,12)=8  (0,13)=8  (1,11)=8  (1,12)=8  (1,13)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (3,11)=8  (3,12)=8  (3,13)=8  (4,12)=8  (4,13)=8  (5,13)=8  (6,12)=8  (6,13)=8  (7,11)=8  (7,12)=8  (7,13)=8  (8,12)=8  (8,13)=8  (9,12)=8  (9,13)=8  (10,11)=8  (10,12)=8  (10,13)=8  (11,12)=8  (11,13)=8  (12,12)=8  (12,13)=8  (13,12)=8  (13,13)=8 
! size mismatch, 10x10 instead of 1x4
>> Trial 3
data: a background with size (14,14) and color blue and layers
  [0]: a rectangle at (0,0) with size (14,6) and color green and mask 111111011111001111000111000111001111001111000111011111001111011111011111000111001111
  [01]: a rectangle at (0,3) with size (14,6) and color red and mask 111111011111011111111111111111011111011111011111111111111111001111001111011111111111
diff: 
delta: (0,12)=8  (0,13)=8  (1,11)=8  (1,12)=8  (1,13)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (3,11)=8  (3,12)=8  (3,13)=8  (4,12)=8  (4,13)=8  (5,13)=8  (6,12)=8  (6,13)=8  (7,11)=8  (7,12)=8  (7,13)=8  (8,12)=8  (8,13)=8  (9,12)=8  (9,13)=8  (10,11)=8  (10,12)=8  (10,13)=8  (11,12)=8  (11,13)=8  (12,12)=8  (12,13)=8  (13,12)=8  (13,13)=8 
! size mismatch, 10x10 instead of 1x4

TEST 4be741c5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 954.4 bits (954.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-285] Checking task 4c4377d9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3802.9 = 3811.9
DL output with Mo: L = 9.0 + 7090.3 = 7099.3
DL input+output M: L = 17.9 + 10893.3 = 10911.2

# learning a model for train pairs
10911.2	
6740.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5266.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4947.3	OUT DEF: color={color}
4761.0	OUT DEF: layer[0].color={layer[0].color}
4638.3	OUT DEF: layer[0].pos={layer[0].pos}
4590.1	OUT DEF: size=(?,?)
4294.6	OUT DEF: size.i=6
4041.6	OUT DEF: size.j={size.j}
3993.4	OUT DEF: layer[0].size=(?,?)
3697.9	OUT DEF: layer[0].size.i=6
3453.5	OUT DEF: layer[0].size.j={layer[0].size.j}
3405.3	IN  DEF: size=(?,?)
3155.4	IN  DEF: size.j=4
2937.9	IN  DEF: size.i=3
2889.7	IN  DEF: layer[0].pos=(?,?)
2756.8	IN  DEF: layer[0].pos.j=0
2640.1	IN  DEF: layer[0].pos.i=0
2591.9	IN  DEF: layer[0].size=(?,?)
2374.4	IN  DEF: layer[0].size.i=3
2222.8	IN  DEF: layer[0].size.j=4

# Learned model:
CONSTRUCT (Mo)
a background with size (6,{size.j}) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size (6,{layer[0].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,4) and color ? and layers
  [0]: a rectangle at (0,0) with size (3,4) and color ? and mask ?

DL input  with Mi: L = 50.4 + 1077.3 = 1127.7
DL output with Mo: L = 42.2 + 1052.9 = 1095.1
DL input+output M: L = 92.6 + 2130.1 = 2222.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,4) and color brown and mask 110111001011
diff: 
delta:
   (26.9 bits)
data: a background with size (6,4) and color grey and layers
  [0]: a rectangle at (0,0) with size (6,4) and color brown and mask 110111001011101111001101
diff: 
delta:
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,4) and color brown and mask 110111001011
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10011100
diff:   layer[0].size.j
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color brown and layers
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
diff:   layer[0].size.j  layer[0].size.i  layer[0].pos.i
delta: (0,2)=5# (2,1)=5#
! 8 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,4) and color blue and mask 100011110110
diff: 
delta:
   (26.9 bits)
data: a background with size (6,4) and color yellow and layers
  [0]: a rectangle at (0,0) with size (6,4) and color blue and mask 100011110110011011111000
diff: 
delta:
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,4) and color blue and mask 100011110110
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color blue and layers
  [0]: a rectangle at (2,0) with size (1,3) and color yellow and mask full
diff:   layer[0].size.j  layer[0].size.i  layer[0].pos.i
delta: (0,0)=4  (0,3)=4 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (1,0) with size (1,4) and color blue and mask full
diff:   layer[0].size.i  layer[0].pos.i
delta: (0,1)=1  (0,2)=1  (2,3)=1 
! 8 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 111111001010
diff: 
delta:
   (26.9 bits)
data: a background with size (6,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (6,4) and color yellow and mask 111111001010101011001111
diff: 
delta:
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 111111001010
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,0) with size (2,3) and color brown and mask 11101
diff:   layer[0].size.j  layer[0].size.i
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,0) with size (2,1) and color brown and mask full
diff:   layer[0].size.j  layer[0].size.i
delta: (0,2)=9# (1,1)=9#
! 6 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,4) and color green and layers
  [0]: a rectangle at (0,0) with size (3,4) and color grey and mask 1101101100
diff: 
delta:
   (26.9 bits)
data: a background with size (6,4) and color green and layers
  [0]: a rectangle at (0,0) with size (6,4) and color grey and mask 1101101100110001100011
diff: 
delta:
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
  [0]: a rectangle at (0,0) with size (3,4) and color grey and mask 1101101100
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 1111110011
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,2) and color yellow and mask full
diff:   layer[0].size.j
delta: (1,2)=4  (1,3)=4 
! 4 wrong pixels (generated / expected)

TEST 4c4377d9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1052.9 bits (1052.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-284] Checking task 4c5c2cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7711.5 = 7720.5
DL output with Mo: L = 9.0 + 19968.4 = 19977.4
DL input+output M: L = 17.9 + 27679.9 = 27697.9

# learning a model for train pairs
27697.9	
24951.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22254.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19549.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17842.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17215.4	OUT DEF: size={size}
16815.2	OUT DEF: layer[0].size={layer[0].size}
14098.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11765.8	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 3224.3 = 3267.6
DL output with Mo: L = 76.1 + 8422.1 = 8498.2
DL input+output M: L = 119.4 + 11646.3 = 11765.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (3,3) with size (5,4) and color red and mask 10110110010111001
  [01]: a rectangle at (7,6) with size (3,3) and color yellow and mask 101010101
diff: 
delta:
   (115.7 bits)
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (3,3) with size (5,4) and color red and mask 10110110010111001
  [01]: a rectangle at (3,8) with size (5,4) and color red and mask 10000110001111011001
  [011]: a rectangle at (9,3) with size (5,4) and color red and mask 10011011110001100001
  [0111]: a rectangle at (9,8) with size (5,4) and color red and mask 10011101001101101000
diff: 
delta: (7,6)=4  (7,8)=4  (8,7)=4  (9,6)=4  (9,8)=4 
   (297.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (3,3) with size (5,4) and color red and mask 10110110010111001
  [01]: a rectangle at (7,6) with size (3,3) and color yellow and mask 101010101
diff: 
delta:
! 63 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (7,6) with size (3,3) and color yellow and mask 101010101
  [01]: a rectangle at (3,3) with size (5,4) and color red and mask 10010110110010111001
diff: 
delta:
! 54 wrong pixels (generated / expected)

TRAIN 4c5c2cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (3,6) with size (3,4) and color cyan and mask 11111100100
  [01]: a rectangle at (6,4) with size (3,3) and color green and mask 101010101
diff: 
delta:
   (106.2 bits)
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (3,1) with size (3,4) and color cyan and mask 111001110010
  [01]: a rectangle at (9,2) with size (2,7) and color cyan and mask full
  [011]: a rectangle at (3,6) with size (3,4) and color cyan and mask 11111100100
  [0111]: a rectangle at (6,4) with size (3,3) and color green and mask 101010101
diff: 
delta: (9,5)=0  (10,1)=8  (10,4)=0  (10,5)=0  (10,6)=0  (10,9)=8  (11,2)=8  (11,8)=8 
   (302.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (3,6) with size (3,4) and color cyan and mask 11111100100
  [01]: a rectangle at (6,4) with size (3,3) and color green and mask 101010101
diff: 
delta:
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (6,4) with size (3,3) and color green and mask 101010101
  [01]: a rectangle at (3,6) with size (3,4) and color cyan and mask 11111100100
diff: 
delta:
! 42 wrong pixels (generated / expected)

TRAIN 4c5c2cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,4) with size (3,3) and color cyan and mask 101010101
  [01]: a rectangle at (9,1) with size (3,3) and color blue and mask 10101110
diff: 
delta:
   (100.6 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,1) with size (3,3) and color blue and mask 110101010
  [01]: a rectangle at (3,7) with size (3,3) and color blue and mask 11101010
  [011]: a rectangle at (6,4) with size (3,3) and color cyan and mask 101010101
  [0111]: a rectangle at (9,1) with size (3,3) and color blue and mask 10101110
diff: 
delta: (9,7)=1  (9,8)=1  (10,7)=1  (10,9)=1  (11,8)=1 
   (242.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,4) with size (3,3) and color cyan and mask 101010101
  [01]: a rectangle at (9,1) with size (3,3) and color blue and mask 10101110
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 4c5c2cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (8,7) with size (6,4) and color yellow and mask 100010110001010110100
  [01]: a rectangle at (6,5) with size (3,3) and color orange and mask 101010101
diff: 
delta:
! 63 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (6,5) with size (3,3) and color orange and mask 101010101
  [01]: a rectangle at (8,7) with size (6,4) and color yellow and mask 100010110001010110101
diff: 
delta:
! 50 wrong pixels (generated / expected)

TEST 4c5c2cf0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 8422.1 bits (8422.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-283] Checking task 50846271.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 117848.9 = 117857.8
DL output with Mo: L = 9.0 + 121947.2 = 121956.1
DL input+output M: L = 17.9 + 239796.0 = 239814.0

# learning a model for train pairs
239814.0	
147117.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
64330.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
60073.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
57333.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 22378.5 = 22421.9
DL output with Mo: L = 43.4 + 34867.9 = 34911.3
DL input+output M: L = 86.7 + 57246.4 = 57333.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,22) and color black and layers
  [0]: a rectangle at (0,0) with size (20,22) and color grey and mask 10001010100000000000001100010110011110001110111000110001000100110000011100100101100100010000011100100101100110010100101100000001100010001100100000111001010001100000100111001100110011011011010010011011011101000011111010100010000011011000001001101000000000010100000100010110100110001000001110010010010000010110000101011101010001001001101001100010001000000011101110000100011001010000000011001110110111001001010100111100100001001111110010000000
  [01]: a rectangle at (2,11) with size (7,2) and color red and mask 10101011101011
diff: 
delta: (5,9)=2  (5,15)=2  (12,5)=2  (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (16,5)=2  (17,5)=2 
   (759.6 bits)
data: a background with size (20,22) and color black and layers
  [0]: a rectangle at (1,6) with size (19,16) and color grey and mask 1000101010000000110001011001111011100011000100010001110010010110000001110010010101010010110000001000110010000011000110000010011111001101101101001101110100001111001000001101100010100000000001010001011010011000111001001001000000010100000001000110100110001000001110111000010001000000001100111100100101010011
  [01]: a rectangle at (0,0) with size (9,10) and color grey and mask 10100000110001000000000010110010001001010001000000100011001001110110100111100100010000000
diff: 
delta: (0,10)=5# (0,11)=5# (0,12)=5# (0,13)=5# (0,14)=5# (0,15)=5# (0,18)=5# (2,12)=2  (3,12)=2  (4,12)=2  (5,9)=2  (5,10)=8  (5,11)=2  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=2  (6,12)=2  (7,12)=2  (8,12)=2  (9,0)=5# (9,3)=5# (10,1)=5# (10,3)=5# (10,5)=5# (11,1)=5# (11,2)=5# (11,5)=8  (12,2)=5# (12,3)=5# (12,5)=2  (13,0)=5# (13,2)=5# (13,5)=8  (14,2)=2  (14,3)=8  (14,4)=8  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (15,1)=5# (15,2)=5# (15,5)=8  (16,0)=5# (16,4)=5# (16,5)=2  (17,2)=5# (17,3)=5# (17,5)=2  (18,1)=5# (18,2)=5# (18,3)=5#
   (1556.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,22) and color black and layers
  [0]: a rectangle at (0,0) with size (20,22) and color grey and mask 10001010100000000000001100010110011110001110111000110001000100110000011100100101100100010000011100100101100110010100101100000001100010001100100000111001010001100000100111001100110011011011010010011011011101000011111010100010000011011000001001101000000000010100000100010110100110001000001110010010010000010110000101011101010001001001101001100010001000000011101110000100011001010000000011001110110111001001010100111100100001001111110010000000
  [01]: a rectangle at (2,11) with size (7,2) and color red and mask 10101011101011
diff: 
delta: (5,9)=2  (5,15)=2  (12,5)=2  (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (16,5)=2  (17,5)=2 
! size mismatch, 10x10 instead of 20x22

TRAIN 50846271.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color grey and mask 1000001100110101011111001011101110110100010001001110110101000011010011010110011000110010011001110100110011110110111000110000000111001011001101111111110110100100101001001110000001001000001010111110110111111101011011101001101001110111100100011011001110111010100010100100110011001100000011001011101100110001101011000010101011111000101010011001110010010010110110100110001001011011101111011000110110001010
  [01]: a rectangle at (3,6) with size (3,3) and color red and mask 111111011
diff: 
delta: (4,4)=2  (10,12)=2  (10,14)=2  (10,15)=2  (10,16)=2  (15,7)=2  (15,8)=2  (16,7)=2 
   (671.4 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color grey and mask 1000001100110101011111001011101110110100010001001110010101000011010011010110011000110010010000010100110011110110011000110000000111000011001101111011110110100100101000001110000001001000000010111110110111111001011011101001101000110111100100011011001110111010100010100100110010001100000011001011101100110001101011000000101011111000101010011001110010010010100110100110001001011011101111011000110110001010
  [01]: a rectangle at (3,6) with size (3,3) and color red and mask 111111011
diff: 
delta: (2,6)=8  (4,4)=2  (4,5)=8  (6,6)=8  (8,14)=8  (9,14)=8  (10,12)=2  (10,13)=8  (10,14)=2  (10,15)=2  (10,16)=2  (11,14)=8  (12,14)=8  (13,7)=8  (14,7)=8  (15,5)=8  (15,6)=8  (15,7)=2  (15,8)=2  (15,9)=8  (16,7)=2  (17,7)=8 
   (948.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color grey and mask 1000001100110101011111001011101110110100010001001110110101000011010011010110011000110010011001110100110011110110111000110000000111001011001101111111110110100100101001001110000001001000001010111110110111111101011011101001101001110111100100011011001110111010100010100100110011001100000011001011101100110001101011000010101011111000101010011001110010010010110110100110001001011011101111011000110110001010
  [01]: a rectangle at (3,6) with size (3,3) and color red and mask 111111011
diff: 
delta: (4,4)=2  (10,12)=2  (10,14)=2  (10,15)=2  (10,16)=2  (15,7)=2  (15,8)=2  (16,7)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN 50846271.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,0) with size (18,19) and color grey and mask 111101001000001011010101001000000101010000101011011110011000111101000100111010111011100111110010001001001100110010011110111110011010010111100111100111010011111111001001001000011101001111011111101111010111110100101100100101100101110100101010100000100100011110111000110010011111100011111001011100011010111010111110011110111000110001101111010100
  [01]: a rectangle at (5,9) with size (2,5) and color red and mask 1111101110
diff: 
delta: (8,11)=2  (9,1)=2  (9,2)=2  (10,1)=2  (11,1)=2 
   (552.3 bits)
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,0) with size (18,19) and color grey and mask 111101001000001011010101001000000101010000101011011110011000111101000100111010111011100111110010001001001100110010011110111110011010010111100111100111010011111111001000000000011101001111010111101110010111110000101100000101100101110100101010100000100100010110111000110010011111100011111001011100011010111010111110011110111000110001101111010100
  [01]: a rectangle at (5,9) with size (2,5) and color red and mask 1101101110
diff: 
delta: (4,11)=8  (6,11)=8  (7,1)=8  (7,11)=8  (8,1)=8  (8,11)=2  (9,0)=8  (9,1)=2  (9,2)=2  (9,3)=8  (10,1)=2  (11,1)=2 
   (690.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  [0]: a rectangle at (0,0) with size (18,19) and color grey and mask 111101001000001011010101001000000101010000101011011110011000111101000100111010111011100111110010001001001100110010011110111110011010010111100111100111010011111111001001001000011101001111011111101111010111110100101100100101100101110100101010100000100100011110111000110010011111100011111001011100011010111010111110011110111000110001101111010100
  [01]: a rectangle at (5,9) with size (2,5) and color red and mask 1111101110
diff: 
delta: (8,11)=2  (9,1)=2  (9,2)=2  (10,1)=2  (11,1)=2 
! size mismatch, 10x10 instead of 18x19

TRAIN 50846271.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (0,0) with size (11,12) and color grey and mask 111100100001000111110001001000010110000000100001000110010111100010110111000010111001101001010011010001100101100100000101100001000010
  [01]: a rectangle at (2,8) with size (4,3) and color red and mask 1111011101
diff: 
delta: (4,6)=2 
   (254.6 bits)
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (0,0) with size (11,12) and color grey and mask 111100100001000111110001001000010110000000100001000010010111100010110111000000111001101001010011010001100101100100000101100001000010
  [01]: a rectangle at (2,8) with size (4,3) and color red and mask 1111011101
diff: 
delta: (4,6)=2  (4,7)=8  (6,8)=8 
   (292.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  [0]: a rectangle at (0,0) with size (11,12) and color grey and mask 111100100001000111110001001000010110000000100001000110010111100010110111000010111001101001010011010001100101100100000101100001000010
  [01]: a rectangle at (2,8) with size (4,3) and color red and mask 1111011101
diff: 
delta: (4,6)=2 
! size mismatch, 10x10 instead of 11x12

TRAIN 50846271.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  [0]: a rectangle at (0,0) with size (19,22) and color grey and mask 1010110010111101011111011011101000001010010111010100000001100001111100001111010101010001011001011101110001101110100111110011111111001011001101011001110011110001101001111000111001100101011010101110000000111011000100111000011100110101011001111101010010111000000000011111100010001100110011001111000010111010100001100111010010010010100111011010101011101100111001100110000111000011100000110011000110100110001010001011001010
  [01]: a rectangle at (4,4) with size (3,5) and color red and mask 101111111011111
diff: 
delta: (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2 
! size mismatch, 10x10 instead of 19x22

TEST 50846271.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 34867.9 bits (34867.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-282] Checking task 508bd3b6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17604.0 = 17612.9
DL output with Mo: L = 9.0 + 22695.4 = 22704.3
DL input+output M: L = 17.9 + 40299.3 = 40317.3

# learning a model for train pairs
40317.3	
25952.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11675.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9263.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8240.9	OUT DEF: layer[0]={layer[0]}
7631.1	OUT DEF: size={size}
7196.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6651.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5641.8	OUT DEF: layer[01]={layer[01]}
5503.9	OUT DEF: layer[011].color=green
5365.9	IN  DEF: layer[0].color=red
5227.9	IN  DEF: layer[01].color=cyan
5157.2	IN  DEF: layer[0].mask=full
5111.6	OUT DEF: color=black
5066.0	IN  DEF: color=black
5031.0	OUT DEF: layer[011].pos=(?,?)
4996.0	OUT DEF: layer[011].size=(?,?)
4961.0	IN  DEF: size=(?,?)
4682.4	IN  DEF: size.i=12
4403.8	IN  DEF: size.j=12
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at (?,?) with size (?,?) and color green and mask ?
WHERE (Mi)
a background with size (12,12) and color black and layers
  [0]: a rectangle at ? with size ? and color red and mask full
  [01]: a rectangle at ? with size ? and color cyan and mask ?

DL input  with Mi: L = 60.1 + 1769.3 = 1829.5
DL output with Mo: L = 42.6 + 2531.7 = 2574.3
DL input+output M: L = 102.7 + 4301.1 = 4403.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,10) with size (12,2) and color red and mask full
  [01]: a rectangle at (10,2) with size (2,2) and color cyan and mask 110
diff: 
delta:
   (53.7 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,10) with size (12,2) and color red and mask full
  [01]: a rectangle at (10,2) with size (2,2) and color cyan and mask 110
  [011]: a rectangle at (0,4) with size (10,6) and color green and mask 1000010000100001000010000100000010000001000000100000010
diff: 
delta:
   (88.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,10) with size (12,2) and color red and mask full
  [01]: a rectangle at (10,2) with size (2,2) and color cyan and mask 110
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,10) with size (12,2) and color red and mask full
  [01]: a rectangle at (10,3) with size (1,1) and color cyan and mask full
diff: 
delta: (11,2)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,10) with size (12,2) and color red and mask full
  [01]: a rectangle at (11,2) with size (1,1) and color cyan and mask full
diff: 
delta: (10,3)=8 
! 15 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (9,0) with size (3,12) and color red and mask full
  [01]: a rectangle at (2,0) with size (3,3) and color cyan and mask 100010001
diff: 
delta:
   (62.2 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (9,0) with size (3,12) and color red and mask full
  [01]: a rectangle at (2,0) with size (3,3) and color cyan and mask 100010001
  [011]: a rectangle at (3,3) with size (6,9) and color green and mask 1000000010100000100010001000001010000000100000000
diff: 
delta:
   (82.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (9,0) with size (3,12) and color red and mask full
  [01]: a rectangle at (2,0) with size (3,3) and color cyan and mask 100010001
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (9,0) with size (3,12) and color red and mask full
  [01]: a rectangle at (2,0) with size (1,1) and color cyan and mask full
diff: 
delta: (3,1)=8  (4,2)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (9,0) with size (3,12) and color red and mask full
  [01]: a rectangle at (3,1) with size (1,1) and color cyan and mask full
diff: 
delta: (2,0)=8  (4,2)=8 
! 15 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,0) with size (12,2) and color red and mask full
  [01]: a rectangle at (9,6) with size (3,3) and color cyan and mask 100010001
diff: 
delta:
   (61.0 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,0) with size (12,2) and color red and mask full
  [01]: a rectangle at (9,6) with size (3,3) and color cyan and mask 100010001
  [011]: a rectangle at (0,2) with size (9,6) and color green and mask 1000000100000010000001000010000100001000010000100000
diff: 
delta:
   (82.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,0) with size (12,2) and color red and mask full
  [01]: a rectangle at (9,6) with size (3,3) and color cyan and mask 100010001
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,0) with size (12,2) and color red and mask full
  [01]: a rectangle at (9,6) with size (1,1) and color cyan and mask full
diff: 
delta: (10,7)=8  (11,8)=8 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,0) with size (12,2) and color red and mask full
  [01]: a rectangle at (10,7) with size (1,1) and color cyan and mask full
diff: 
delta: (9,6)=8  (11,8)=8 
! 11 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,8) with size (12,4) and color red and mask full
  [01]: a rectangle at (0,3) with size (2,2) and color cyan and mask 1001
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,8) with size (12,4) and color red and mask full
  [01]: a rectangle at (0,3) with size (1,1) and color cyan and mask full
diff: 
delta: (1,4)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,8) with size (12,4) and color red and mask full
  [01]: a rectangle at (1,4) with size (1,1) and color cyan and mask full
diff: 
delta: (0,3)=8 
! 15 wrong pixels (generated / expected)

TEST 508bd3b6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2531.7 bits (2531.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-281] Checking task 50cb2852.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 33959.2 = 33968.2
DL output with Mo: L = 9.0 + 33959.2 = 33968.2
DL input+output M: L = 17.9 + 67918.5 = 67936.4

# learning a model for train pairs
67936.4	
53357.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
41412.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
32542.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
25099.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20614.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16868.7	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
15490.2	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 7401.3 = 7444.6
DL output with Mo: L = 92.2 + 7953.4 = 8045.5
DL input+output M: L = 135.5 + 15354.6 = 15490.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,15) and color black and layers
  [0]: a rectangle at (8,8) with size (5,7) and color green and mask full
  [01]: a rectangle at (1,2) with size (6,5) and color red and mask full
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
   (265.2 bits)
data: a background with size (13,15) and color black and layers
  [0]: a rectangle at (8,8) with size (5,7) and color green and mask 11111111000001100000110000011111111
  [01]: a rectangle at (1,2) with size (6,5) and color red and mask 111111000110001100011000111111
  [011]: a rectangle at (9,9) with size (3,5) and color cyan and mask full
  [0111]: a rectangle at (1,10) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (2,3) with size (4,3) and color cyan and mask full
diff: 
delta: (2,11)=8 
   (272.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  [0]: a rectangle at (8,8) with size (5,7) and color green and mask full
  [01]: a rectangle at (1,2) with size (6,5) and color red and mask full
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
! size mismatch, 10x10 instead of 13x15

TRAIN 50cb2852.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (7,2) with size (3,6) and color blue and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
diff: 
delta:
   (85.7 bits)
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (7,2) with size (3,6) and color blue and mask 111111100001111111
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask 1111100110011111
  [011]: a rectangle at (8,3) with size (1,4) and color cyan and mask full
  [0111]: a rectangle at (2,2) with size (2,2) and color cyan and mask full
  [01111]: a rectangle at (0,0) with size (1,11) and color black and mask full
diff: 
delta:
   (206.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (7,2) with size (3,6) and color blue and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 12x11

TRAIN 50cb2852.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  [0]: a rectangle at (8,2) with size (4,8) and color blue and mask full
  [01]: a rectangle at (1,6) with size (6,4) and color red and mask full
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (389.2 bits)
data: a background with size (12,13) and color black and layers
  [0]: a rectangle at (8,2) with size (4,8) and color blue and mask 11111111100000011000000111111111
  [01]: a rectangle at (1,6) with size (6,4) and color red and mask 111110011001100110011111
  [011]: a rectangle at (2,0) with size (4,4) and color green and mask full
  [0111]: a rectangle at (9,3) with size (2,6) and color cyan and mask full
  [01111]: a rectangle at (2,7) with size (4,2) and color cyan and mask full
diff: 
delta: (3,1)=8  (3,2)=8  (4,1)=8  (4,2)=8 
   (316.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  [0]: a rectangle at (8,2) with size (4,8) and color blue and mask full
  [01]: a rectangle at (1,6) with size (6,4) and color red and mask full
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! size mismatch, 10x10 instead of 12x13

TRAIN 50cb2852.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  [0]: a rectangle at (5,2) with size (6,6) and color red and mask full
  [01]: a rectangle at (7,9) with size (7,4) and color green and mask full
diff: 
delta: (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (1,9)=1  (1,10)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1 
! size mismatch, 10x10 instead of 14x13

TEST 50cb2852.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7953.4 bits (7953.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-280] Checking task 5117e062.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11929.3 = 11938.3
DL output with Mo: L = 9.0 + 2144.7 = 2153.7
DL input+output M: L = 17.9 + 14074.1 = 14092.0

# learning a model for train pairs
14092.0	
11413.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9456.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8087.6	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7435.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6999.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6631.0	OUT DEF: layer[0].size={layer[0].size}
6263.7	OUT DEF: size={layer[0].size}
6125.5	OUT DEF: layer[0].color={layer[011].color}
6079.9	OUT DEF: color=black
6034.3	IN  DEF: color=black
5999.3	OUT DEF: layer[0].pos=(?,?)
5922.4	OUT DEF: layer[0].pos.i={layer[0].size.i - layer[01].size.i}
5845.3	OUT DEF: layer[0].pos.j={layer[01].size.j - layer[0].size.j}
5810.3	IN  DEF: size=(?,?)
5525.0	IN  DEF: size.i=13
5239.7	IN  DEF: size.j=13
5204.7	IN  DEF: layer[0].pos=(?,?)
5169.7	IN  DEF: layer[0].size=(?,?)
5007.1	IN  DEF: layer[0].size.i=3
4844.5	IN  DEF: layer[0].size.j=3
4809.5	IN  DEF: layer[01].pos=(?,?)
4774.5	IN  DEF: layer[01].size=(?,?)
4611.9	IN  DEF: layer[01].size.i=3
4449.3	IN  DEF: layer[01].size.j=3
4414.3	IN  DEF: layer[011].pos=(?,?)
4379.3	IN  DEF: layer[011].size=(?,?)
4216.7	IN  DEF: layer[011].size.j=3
4181.7	IN  DEF: layer[0111].pos=(?,?)
4146.7	IN  DEF: layer[0111].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at ({layer[0].size.i - layer[01].size.i},{layer[01].size.j - layer[0].size.j}) with size {layer[0].size} and color {layer[011].color} and mask ?
WHERE (Mi)
a background with size (13,13) and color black and layers
  [0]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (?,3) and color ? and mask ?
  [0111]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 139.6 + 3613.7 = 3753.3
DL output with Mo: L = 53.7 + 339.7 = 393.4
DL input+output M: L = 193.3 + 3953.3 = 4146.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,8) with size (3,3) and color pink and mask 111101110
  [01]: a rectangle at (0,1) with size (3,3) and color green and mask 11111010
  [011]: a rectangle at (0,9) with size (3,3) and color yellow and mask 10101010
  [0111]: a rectangle at (4,4) with size (3,3) and color red and mask 10111001
diff: 
delta: (1,10)=8 
   (140.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 10111010
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,8) with size (3,3) and color pink and mask 111101110
  [01]: a rectangle at (0,1) with size (3,3) and color green and mask 11111010
  [011]: a rectangle at (4,4) with size (3,3) and color red and mask 10111001
  [0111]: a rectangle at (0,9) with size (3,3) and color yellow and mask 10101010
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,8) with size (3,3) and color pink and mask 111101110
  [01]: a rectangle at (0,1) with size (3,3) and color green and mask 11111010
  [011]: a rectangle at (0,9) with size (3,3) and color yellow and mask 10101010
  [0111]: a rectangle at (4,4) with size (3,3) and color red and mask 10111001
diff: 
delta: (1,10)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,8) with size (3,3) and color pink and mask 111101110
  [01]: a rectangle at (4,4) with size (3,3) and color red and mask 10111001
  [011]: a rectangle at (0,1) with size (3,3) and color green and mask 11111010
  [0111]: a rectangle at (0,9) with size (3,3) and color yellow and mask 10101010
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (8,7) with size (3,3) and color blue and mask 111111101
  [01]: a rectangle at (0,7) with size (3,3) and color red and mask 10111010
  [011]: a rectangle at (4,2) with size (3,3) and color green and mask 110001110
  [0111]: a rectangle at (5,3) with size (1,1) and color cyan and mask full
diff: 
delta:
   (105.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 110011110
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (8,7) with size (3,3) and color blue and mask 111111101
  [01]: a rectangle at (0,7) with size (3,3) and color red and mask 10111010
  [011]: a rectangle at (4,2) with size (3,3) and color green and mask 110001110
  [0111]: a rectangle at (5,3) with size (1,1) and color cyan and mask full
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (8,7) with size (3,3) and color blue and mask 111111101
  [01]: a rectangle at (4,2) with size (3,3) and color green and mask 110001110
  [011]: a rectangle at (0,7) with size (3,3) and color red and mask 10111010
  [0111]: a rectangle at (5,3) with size (1,1) and color cyan and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,8) with size (3,3) and color green and mask 100111101
  [01]: a rectangle at (8,3) with size (3,3) and color blue and mask 10111101
  [011]: a rectangle at (2,1) with size (1,3) and color red and mask full
  [0111]: a rectangle at (4,1) with size (1,2) and color red and mask full
diff: 
delta: (3,2)=8 
   (115.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 11010111
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,8) with size (3,3) and color green and mask 100111101
  [01]: a rectangle at (8,3) with size (3,3) and color blue and mask 10111101
  [011]: a rectangle at (2,1) with size (1,3) and color red and mask full
  [0111]: a rectangle at (4,1) with size (1,2) and color red and mask full
diff: 
delta: (3,2)=8 
! 3 wrong pixels (generated / expected)

TRAIN 5117e062.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,7) with size (3,3) and color green and mask 111010111
  [01]: a rectangle at (1,5) with size (3,3) and color blue and mask 100110111
  [011]: a rectangle at (4,9) with size (3,3) and color orange and mask 10101110
  [0111]: a rectangle at (6,1) with size (3,3) and color red and mask 110011001
diff: 
delta: (5,10)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,7) with size (3,3) and color green and mask 111010111
  [01]: a rectangle at (1,5) with size (3,3) and color blue and mask 100110111
  [011]: a rectangle at (6,1) with size (3,3) and color red and mask 110011001
  [0111]: a rectangle at (4,9) with size (3,3) and color orange and mask 10101110
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,7) with size (3,3) and color green and mask 111010111
  [01]: a rectangle at (4,9) with size (3,3) and color orange and mask 10101110
  [011]: a rectangle at (1,5) with size (3,3) and color blue and mask 100110111
  [0111]: a rectangle at (6,1) with size (3,3) and color red and mask 110011001
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)

TEST 5117e062.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 339.7 bits (339.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-279] Checking task 5168d44c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7870.4 = 7879.4
DL output with Mo: L = 9.0 + 7870.4 = 7879.4
DL input+output M: L = 17.9 + 15740.9 = 15758.8

# learning a model for train pairs
15758.8	
12476.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9193.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8641.5	OUT DEF: size={size}
8222.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7852.4	OUT DEF: layer[0].size={layer[0].size}
7520.8	OUT DEF: layer[0].mask=111101111
7283.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6377.7	OUT DEF: layer[01]={layer[01]}
6046.0	IN  DEF: layer[0].mask=111101111
5906.6	OUT DEF: layer[0].color={layer[0].color}
5768.6	IN  DEF: layer[0].color=red
5630.6	IN  DEF: layer[01].color=green
5559.9	IN  DEF: layer[01].mask=full
5514.3	OUT DEF: color=black
5468.7	IN  DEF: color=black
5433.7	OUT DEF: layer[0].pos=(?,?)
5303.0	OUT DEF: layer[0].pos.j={layer[0].pos.i}
5178.5	OUT DEF: layer[0].pos.i={layer[01].pos.j + 1}
5143.5	IN  DEF: size=(?,?)
5108.5	IN  DEF: layer[0].pos=(?,?)
5073.5	IN  DEF: layer[0].size=(?,?)
4910.9	IN  DEF: layer[0].size.i=3
4748.3	IN  DEF: layer[0].size.j=3
4713.3	IN  DEF: layer[01].pos=(?,?)
4678.3	IN  DEF: layer[01].size=(?,?)
4669.7	OUT DEF: layer[0].mask={layer[0].mask}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.j + 1},{layer[0].pos.i}) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [01]: {layer[01]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (?,?) with size (?,?) and color green and mask full

DL input  with Mi: L = 78.7 + 3055.3 = 3134.0
DL output with Mo: L = 43.1 + 1492.7 = 1535.7
DL input+output M: L = 121.8 + 4548.0 = 4669.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (2,0) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (3,1) with size (1,11) and color green and mask full
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
   (121.9 bits)
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (3,1) with size (1,11) and color green and mask full
diff: 
delta: (3,6)=0  (3,8)=0  (3,10)=0 
   (56.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (2,0) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (3,1) with size (1,11) and color green and mask full
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (2,0) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (3,1) with size (1,1) and color green and mask full
diff: 
delta: (3,3)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (2,0) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (3,3) with size (1,1) and color green and mask full
diff: 
delta: (3,1)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 15 wrong pixels (generated / expected)

TRAIN 5168d44c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,7) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,4) with size (13,1) and color green and mask full
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
   (122.4 bits)
data: a background with size (13,7) and color black and layers
  [0]: a rectangle at (5,3) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,4) with size (13,1) and color green and mask full
diff: 
delta: (1,4)=0  (3,4)=0  (9,4)=0  (11,4)=0 
   (74.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,7) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,4) with size (13,1) and color green and mask full
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,7) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color red and mask full
  [01]: a rectangle at (0,4) with size (13,1) and color green and mask full
diff:   layer[0].mask
delta: (1,4)=0  (4,4)=3  (7,4)=0  (9,4)=0  (11,4)=0 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,7) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,4) with size (1,1) and color green and mask full
diff: 
delta: (2,4)=3  (4,4)=3  (6,4)=3  (8,4)=3  (10,4)=3  (12,4)=3 
! 6 wrong pixels (generated / expected)

TRAIN 5168d44c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,2) with size (7,1) and color green and mask full
diff: 
delta: (5,2)=0 
   (61.2 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,1) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,2) with size (7,1) and color green and mask full
diff: 
delta: (1,2)=0 
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,2) with size (7,1) and color green and mask full
diff: 
delta: (5,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask full
  [01]: a rectangle at (0,2) with size (7,1) and color green and mask full
diff:   layer[0].mask
delta: (2,2)=3  (5,2)=0 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,2) with size (1,1) and color green and mask full
diff: 
delta: (2,2)=3  (4,2)=3  (6,2)=3 
! 3 wrong pixels (generated / expected)

TRAIN 5168d44c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,17) and color black and layers
  [0]: a rectangle at (3,7) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (4,0) with size (1,17) and color green and mask full
diff: 
delta: (4,1)=0  (4,3)=0  (4,5)=0  (4,11)=0  (4,13)=0  (4,15)=0 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,17) and color black and layers
  [0]: a rectangle at (3,7) with size (3,3) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,17) and color green and mask full
diff:   layer[0].mask
delta: (4,1)=0  (4,3)=0  (4,5)=0  (4,8)=3  (4,11)=0  (4,13)=0  (4,15)=0 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,17) and color black and layers
  [0]: a rectangle at (3,7) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (4,0) with size (1,1) and color green and mask full
diff: 
delta: (4,2)=3  (4,4)=3  (4,6)=3  (4,8)=3  (4,10)=3  (4,12)=3  (4,14)=3  (4,16)=3 
! 24 wrong pixels (generated / expected)

TEST 5168d44c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1492.7 bits (1492.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-278] Checking task 539a4f51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8353.0 = 8361.9
DL output with Mo: L = 9.0 + 24689.1 = 24698.0
DL input+output M: L = 17.9 + 33042.0 = 33060.0

# learning a model for train pairs
33060.0	
24165.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19434.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16941.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14743.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14425.2	OUT DEF: layer[0].pos={layer[0].pos}
14107.0	OUT DEF: layer[01].pos={layer[01].pos}
13967.5	OUT DEF: layer[0].color={layer[0].color}
13828.1	OUT DEF: layer[01].color={layer[01].color}
13757.4	IN  DEF: layer[0].mask=full
11820.6	OUT SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
11502.7	OUT DEF: layer[00].pos={layer[0].pos}
11432.0	IN  DEF: layer[01].mask=full
11397.0	OUT DEF: size=(?,?)
11133.7	OUT DEF: size.i=10
10870.4	OUT DEF: size.j=10
10835.4	OUT DEF: layer[00].size=(?,?)
10800.3	OUT DEF: layer[0].size=(?,?)
10765.3	OUT DEF: layer[01].size=(?,?)
10730.3	IN  DEF: size=(?,?)
10525.0	IN  DEF: size.i=5
10319.7	IN  DEF: size.j=5
10284.6	IN  DEF: layer[0].pos=(?,?)
10175.6	IN  DEF: layer[0].pos.i=0
10066.7	IN  DEF: layer[0].pos.j=0
9688.3	IN  SHAPE at layer[010]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (10,10) and color ? and layers
  [00]: a rectangle at {layer[0].pos} with size (?,?) and color ? and mask ?
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at {layer[01].pos} with size (?,?) and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (5,5) and color ? and layers
  [0]: a rectangle at (0,0) with size ? and color ? and mask full
  [010]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 75.0 + 2375.9 = 2450.9
DL output with Mo: L = 92.1 + 7145.3 = 7237.5
DL input+output M: L = 167.1 + 9521.2 = 9688.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask full
  [010]: a rectangle at (3,0) with size (1,4) and color green and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask full
diff: 
delta:
   (71.2 bits)
data: a background with size (10,10) and color red and layers
  [00]: a rectangle at (0,0) with size (4,4) and color green and mask 1111100010001000
  [0]: a rectangle at (0,0) with size (7,7) and color red and mask full
  [01]: a rectangle at (0,0) with size (8,8) and color green and mask full
diff: 
delta:
   (80.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask full
  [010]: a rectangle at (3,0) with size (1,4) and color green and mask full
  [01]: a rectangle at (0,3) with size (4,1) and color green and mask full
diff: 
delta:
! 98 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask full
  [010]: a rectangle at (0,3) with size (4,1) and color green and mask full
  [01]: a rectangle at (3,0) with size (1,4) and color green and mask full
diff: 
delta:
! 98 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask full
  [010]: a rectangle at (3,0) with size (1,4) and color green and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask full
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 539a4f51.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [010]: a rectangle at (0,0) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color pink and mask full
diff: 
delta:
   (71.2 bits)
data: a background with size (10,10) and color blue and layers
  [00]: a rectangle at (0,0) with size (7,7) and color yellow and mask 1111111100000010000001000000100011110001001000100
  [0]: a rectangle at (0,0) with size (6,6) and color blue and mask 111111111111110000110111110111110111
  [01]: a rectangle at (0,0) with size (8,8) and color pink and mask full
diff: 
delta:
   (152.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [010]: a rectangle at (0,0) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color pink and mask full
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 539a4f51.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [010]: a rectangle at (0,0) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color blue and mask full
diff: 
delta: (0,0)=2 
   (95.3 bits)
data: a background with size (10,10) and color pink and layers
  [00]: a rectangle at (0,0) with size (8,8) and color yellow and mask 1111111110000000100000001000000010000000100001111000010010000100
  [0]: a rectangle at (0,0) with size (7,7) and color green and mask 1111111100000010000001000000100011110001111000110
  [01]: a rectangle at (0,0) with size (9,9) and color blue and mask 111111111111111111111111111111000000111000000111001111111001111111001111111001110
diff: 
delta: (0,0)=2  (0,5)=2  (1,5)=2  (2,5)=2  (3,5)=2  (4,5)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2 
   (481.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 111100100
  [010]: a rectangle at (0,0) with size (2,2) and color green and mask 1110
  [01]: a rectangle at (0,0) with size (4,4) and color blue and mask full
diff:   layer[0].mask
delta: (0,0)=2 
! 100 wrong pixels (generated / expected)

TRAIN 539a4f51.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [010]: a rectangle at (2,0) with size (1,3) and color green and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color green and mask full
diff: 
delta:
! 98 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [010]: a rectangle at (0,2) with size (3,1) and color green and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color green and mask full
diff: 
delta:
! 98 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [010]: a rectangle at (2,0) with size (1,3) and color green and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask full
diff: 
delta:
! 100 wrong pixels (generated / expected)

TEST 539a4f51.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7145.3 bits (7145.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-277] Checking task 53b68214.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5349.8 = 5358.8
DL output with Mo: L = 9.0 + 8057.6 = 8066.5
DL input+output M: L = 17.9 + 13407.4 = 13425.3

# learning a model for train pairs
13425.3	
8207.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5046.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4728.1	OUT DEF: layer[0].pos={layer[0].pos}
4588.1	OUT DEF: layer[0].color={layer[0].color}
4542.5	OUT DEF: color=black
4496.9	IN  DEF: color=black
4461.9	OUT DEF: size=(?,?)
4192.8	OUT DEF: size.j={size.j}
3925.2	OUT DEF: size.i={size.j}
3890.2	OUT DEF: layer[0].size=(?,?)
3855.2	IN  DEF: size=(?,?)
3591.9	IN  DEF: size.j=10
3556.8	IN  DEF: layer[0].pos=(?,?)
3441.0	IN  DEF: layer[0].pos.i=0
3406.0	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.j},{size.j}) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,10) and color black and layers
  [0]: a rectangle at (0,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 47.2 + 1621.4 = 1668.6
DL output with Mo: L = 34.0 + 1703.4 = 1737.4
DL input+output M: L = 81.2 + 3324.8 = 3406.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,7) and color blue and mask 100000011100000010000001110000001000000111
diff: 
delta:
   (76.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (9,10) and color blue and mask 110000000001000000000111000000000100000000011100000000010000000001110000000001000000000111
diff: 
delta:
   (109.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,7) and color blue and mask 100000011100000010000001110000001000000111
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  [0]: a rectangle at (0,2) with size (3,1) and color blue and mask full
diff: 
delta: (0,0)=1  (0,1)=1  (2,3)=1  (2,4)=1  (3,4)=1  (4,4)=1  (4,5)=1  (4,6)=1  (5,6)=1 
! 18 wrong pixels (generated / expected)

TRAIN 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,1) and color green and mask full
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (10,1) and color green and mask full
diff: 
delta:
   (13.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,1) and color green and mask full
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 53b68214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (0,0) with size (8,3) and color red and mask 10010101010010101010010
diff: 
delta:
   (57.7 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,3) and color red and mask 10101010010101010010101010010
diff: 
delta:
   (46.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (0,0) with size (8,3) and color red and mask 10010101010010101010010
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,10) and color red and layers
  [0]: a rectangle at (0,0) with size (8,10) and color black and mask 11111111011111111101111111101011111111011111111101111111101011111111011111111101
diff:   color
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (0,1) with size (8,1) and color red and mask full
diff: 
delta: (2,0)=2  (2,1)=0  (2,2)=2  (5,0)=2  (5,1)=0  (5,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 53b68214.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  [0]: a rectangle at (0,3) with size (8,2) and color pink and mask 110011001100110
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,10) and color pink and layers
  [0]: a rectangle at (0,0) with size (8,10) and color black and mask 11111101111111101111111111011111111011111111110111111110111111111101111111101111
diff:   color
delta:
! 10 wrong pixels (generated / expected)

TEST 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (0,1) with size (5,3) and color cyan and mask 111101111101111
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 53b68214.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1703.4 bits (1703.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-276] Checking task 543a7ed5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15236.9 = 15245.8
DL output with Mo: L = 9.0 + 41914.4 = 41923.4
DL input+output M: L = 17.9 + 57151.3 = 57169.2

# learning a model for train pairs
57169.2	
40177.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30856.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24776.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20148.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17988.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
16861.3	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 5898.0 = 5924.5
DL output with Mo: L = 92.2 + 10844.5 = 10936.7
DL input+output M: L = 118.8 + 16742.5 = 16861.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,15) and color cyan and mask 111111111111111111111000011111111111000011111111111000011111111111000011111111111111111111111111111111111111111111111111111000011111111111011011100111111011011100111111011011111111111000011111111111111111111111111111111111111
diff: 
delta:
   (294.9 bits)
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,15) and color cyan and mask 111110000001111111110000001111111110000001111111110000001111111110000001111111110000001111111111111111111110000001111111110000001000011110000001000011110000001000011110000001000011110000001111111110000001111111111111111111111
  [01]: a rectangle at (1,7) with size (7,6) and color green and mask 111111100001100001100001100001100001111111
  [011]: a rectangle at (9,4) with size (6,6) and color green and mask 111111100001100001100001100001111111
  [0111]: a rectangle at (3,2) with size (4,4) and color green and mask 1111100110011111
  [01111]: a rectangle at (3,9) with size (3,2) and color yellow and mask full
diff: 
delta:
   (522.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,15) and color cyan and mask 111111111111111111111000011111111111000011111111111000011111111111000011111111111111111111111111111111111111111111111111111000011111111111011011100111111011011100111111011011111111111000011111111111111111111111111111111111111
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 543a7ed5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,15) and color cyan and mask 111111111111111100000011111111101111011111111101111011111111101111011111111101111011111111100000011111111111111111111111111111111000011111111111001011111111111001011111100011000011111100011111111111100011111111111111111111111
diff: 
delta:
   (294.9 bits)
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,7) and color cyan and mask 111111111111111111111111111111111111111111111111100000010000001000000100000010000001000000111111111111111
  [01]: a rectangle at (0,1) with size (15,14) and color green and mask 111111111111111000000111111110000001111111100000011111111000000111111110000001111111100000011111111111111111111100000000100001000000001000010001111110000100010001100001000100011111110001000111111100011111111111
  [011]: a rectangle at (0,12) with size (7,3) and color cyan and mask full
  [0111]: a rectangle at (9,9) with size (4,4) and color yellow and mask full
  [01111]: a rectangle at (5,7) with size (2,8) and color cyan and mask full
diff: 
delta: (4,3)=4  (5,3)=4 
   (562.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,15) and color cyan and mask 111111111111111100000011111111101111011111111101111011111111101111011111111101111011111111100000011111111111111111111111111111111000011111111111001011111111111001011111100011000011111100011111111111100011111111111111111111111
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 543a7ed5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  [0]: a rectangle at (0,0) with size (15,15) and color cyan and mask 111111111111111111100000001111111100011001111111100000001111111111111111111111111111111111111111111111111111000111111111111010111000011111010111011011111010111011011111000111000011111000111111111111111111111111111111111111111
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TEST 543a7ed5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10844.5 bits (10844.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-275] Checking task 54d82841.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4806.3 = 4815.2
DL output with Mo: L = 9.0 + 5636.0 = 5644.9
DL input+output M: L = 17.9 + 10442.2 = 10460.2

# learning a model for train pairs
10460.2	
8777.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7140.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6325.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5496.7	OUT DEF: layer[0]={layer[0]}
4669.3	IN  SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
4174.7	OUT DEF: size={size}
3930.0	IN  DEF: layer[0].mask=101111
3740.0	OUT DEF: layer[01].mask={layer[00].mask}
3694.4	OUT DEF: color=black
3648.8	IN  DEF: color=black
3613.8	OUT DEF: layer[01].pos=(?,?)
3501.6	OUT DEF: layer[01].pos.j={size.j - layer[0].size.j}
3466.6	OUT DEF: layer[01].size=(?,?)
3334.8	OUT DEF: layer[01].size.j={layer[00].size.j}
3299.7	IN  DEF: size=(?,?)
3264.7	IN  DEF: layer[00].pos=(?,?)
3229.7	IN  DEF: layer[00].size=(?,?)
3101.1	IN  DEF: layer[00].size.i=2
3066.0	IN  DEF: layer[0].pos=(?,?)
2948.0	IN  DEF: layer[0].pos.j=1
2913.0	IN  DEF: layer[0].size=(?,?)
2750.4	IN  DEF: layer[0].size.j=3
2621.7	IN  DEF: layer[0].size.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,{size.j - layer[0].size.j}) with size (?,{layer[00].size.j}) and color ? and mask {layer[00].mask}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [00]: a rectangle at (?,?) with size (2,?) and color ? and mask ?
  [0]: a rectangle at (?,1) with size (2,3) and color ? and mask 101111

DL input  with Mi: L = 76.8 + 1409.3 = 1486.1
DL output with Mo: L = 47.4 + 1088.3 = 1135.7
DL input+output M: L = 124.2 + 2497.6 = 2621.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [00]: a rectangle at (2,5) with size (2,3) and color pink and mask 101111
  [0]: a rectangle at (0,1) with size (2,3) and color pink and mask 101111
diff: 
delta:
   (52.7 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,1) with size (2,3) and color pink and mask 101111
  [01]: a rectangle at (2,5) with size (2,3) and color pink and mask 101111
diff: 
delta: (7,2)=4  (7,6)=4 
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [00]: a rectangle at (2,5) with size (2,3) and color pink and mask 101111
  [0]: a rectangle at (0,1) with size (2,3) and color pink and mask 101111
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [00]: a rectangle at (0,1) with size (2,3) and color pink and mask 101111
  [0]: a rectangle at (2,5) with size (2,3) and color pink and mask 101111
diff:   layer[0].pos.j
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  [00]: a rectangle at (2,5) with size (2,3) and color pink and mask full
  [0]: a rectangle at (0,1) with size (2,3) and color pink and mask 101111
diff: 
delta: (3,6)=0 
! 13 wrong pixels (generated / expected)

TRAIN 54d82841.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [00]: a rectangle at (0,1) with size (2,1) and color green and mask full
  [0]: a rectangle at (0,1) with size (2,3) and color green and mask 101111
diff: 
delta:
   (38.8 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,1) with size (2,3) and color green and mask 101111
  [01]: a rectangle at (4,2) with size (1,1) and color yellow and mask full
diff: 
delta:
   (10.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [00]: a rectangle at (0,1) with size (2,1) and color green and mask full
  [0]: a rectangle at (0,1) with size (2,3) and color green and mask 101111
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [00]: a rectangle at (0,1) with size (1,3) and color green and mask full
  [0]: a rectangle at (0,1) with size (2,3) and color green and mask 101111
diff:   layer[00].size.i
delta:
! 4 wrong pixels (generated / expected)

TRAIN 54d82841.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [00]: a rectangle at (2,4) with size (2,3) and color pink and mask 101111
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 101111
diff: 
delta:
   (49.4 bits)
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 101111
  [01]: a rectangle at (2,4) with size (2,3) and color pink and mask 101111
diff: 
delta: (4,2)=4  (4,5)=4 
   (47.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [00]: a rectangle at (2,4) with size (2,3) and color pink and mask 101111
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 101111
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [00]: a rectangle at (1,1) with size (2,3) and color cyan and mask 101111
  [0]: a rectangle at (2,4) with size (2,3) and color pink and mask 101111
diff:   layer[0].pos.j
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  [00]: a rectangle at (2,4) with size (2,3) and color pink and mask full
  [0]: a rectangle at (1,1) with size (2,3) and color cyan and mask 101111
diff: 
delta: (3,5)=0 
! 13 wrong pixels (generated / expected)

TRAIN 54d82841.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  [00]: a rectangle at (1,5) with size (2,3) and color cyan and mask 101111
  [0]: a rectangle at (0,1) with size (2,3) and color grey and mask 101111
diff: 
delta: (2,8)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,11) and color black and layers
  [00]: a rectangle at (0,1) with size (2,3) and color grey and mask 101111
  [0]: a rectangle at (1,5) with size (2,3) and color cyan and mask 101111
diff:   layer[0].pos.j
delta: (2,8)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3 
! 18 wrong pixels (generated / expected)

TEST 54d82841.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1088.3 bits (1088.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-274] Checking task 54d9e175.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10323.4 = 10332.4
DL output with Mo: L = 9.0 + 20718.6 = 20727.6
DL input+output M: L = 17.9 + 31042.0 = 31060.0

# learning a model for train pairs
31060.0	
25582.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21263.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17695.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15188.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14324.5	OUT DEF: layer[0].mask={layer[0].mask}
13657.3	OUT DEF: size={size}
12997.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12631.6	OUT DEF: layer[0].size={layer[0].size}
12259.0	OUT DEF: layer[0].pos={layer[0].pos}
12165.1	OUT DEF: layer[01].mask=full
12071.2	OUT DEF: layer[011].mask=full
11977.4	IN  DEF: layer[01].mask=full
11917.2	IN  DEF: color=black
11869.0	OUT DEF: layer[01].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask {layer[0].mask}
  [01]: a rectangle at (?,?) with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 40.5 + 6064.8 = 6105.3
DL output with Mo: L = 62.0 + 5701.7 = 5763.7
DL input+output M: L = 102.5 + 11766.5 = 11869.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=1  (1,5)=2  (1,9)=1 
   (115.9 bits)
data: a background with size (3,11) and color pink and layers
  [0]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,4) with size (3,3) and color orange and mask full
  [011]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta:
   (60.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=1  (1,5)=2  (1,9)=1 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,7) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=1  (1,5)=2  (1,9)=1 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color black and mask full
  [01]: a rectangle at (0,3) with size (3,5) and color grey and mask full
diff: 
delta: (1,1)=1  (1,5)=2  (1,9)=1 
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color black and mask full
  [01]: a rectangle at (0,3) with size (3,5) and color grey and mask full
diff: 
delta: (1,1)=2  (1,5)=3  (1,9)=1 
   (123.7 bits)
data: a background with size (3,11) and color grey and layers
  [0]: a rectangle at (0,4) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color orange and mask full
  [011]: a rectangle at (0,8) with size (3,3) and color pink and mask full
diff: 
delta:
   (63.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=2  (1,5)=3  (1,9)=1 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,7) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=2  (1,5)=3  (1,9)=1 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color black and mask full
  [01]: a rectangle at (0,3) with size (3,5) and color grey and mask full
diff: 
delta: (1,1)=2  (1,5)=3  (1,9)=1 
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color black and mask full
  [01]: a rectangle at (0,3) with size (3,5) and color grey and mask full
diff: 
delta: (1,1)=3  (1,5)=1  (1,9)=4 
   (123.7 bits)
data: a background with size (3,11) and color grey and layers
  [0]: a rectangle at (0,4) with size (3,3) and color pink and mask full
  [01]: a rectangle at (0,0) with size (3,3) and color cyan and mask full
  [011]: a rectangle at (0,8) with size (3,3) and color brown and mask full
diff: 
delta:
   (63.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=3  (1,5)=1  (1,9)=4 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,7) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
diff: 
delta: (1,1)=3  (1,5)=1  (1,9)=4 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color black and mask full
  [01]: a rectangle at (0,3) with size (3,5) and color grey and mask full
diff: 
delta: (1,1)=3  (1,5)=1  (1,9)=4 
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,11) and color black and layers
  [0]: a rectangle at (0,0) with size (7,11) and color grey and mask 10001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
diff: 
delta: (1,5)=1  (1,9)=2  (5,1)=2  (5,5)=3  (5,9)=4 
   (243.2 bits)
data: a background with size (7,11) and color orange and layers
  [0]: a rectangle at (0,0) with size (7,11) and color grey and mask 10001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (0,0) with size (3,3) and color brown and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color pink and mask full
diff: 
delta: (4,4)=8  (4,5)=8  (4,6)=8  (4,8)=9# (4,9)=9# (4,10)=9# (5,4)=8  (5,5)=8  (5,6)=8  (5,8)=9# (5,9)=9# (5,10)=9# (6,4)=8  (6,5)=8  (6,6)=8  (6,8)=9# (6,9)=9# (6,10)=9#
   (383.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  [0]: a rectangle at (0,0) with size (7,11) and color grey and mask 10001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
diff: 
delta: (1,5)=1  (1,9)=2  (5,1)=2  (5,5)=3  (5,9)=4 
! 77 wrong pixels (generated / expected)

TRAIN 54d9e175.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  [0]: a rectangle at (0,0) with size (7,11) and color grey and mask 10001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (1,1) with size (1,1) and color red and mask full
diff: 
delta: (1,5)=3  (1,9)=4  (5,1)=1  (5,5)=1  (5,9)=3 
! 77 wrong pixels (generated / expected)

TEST 54d9e175.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5701.7 bits (5701.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-273] Checking task 5521c0d9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16722.4 = 16731.3
DL output with Mo: L = 9.0 + 16722.4 = 16731.3
DL input+output M: L = 17.9 + 33444.7 = 33462.7

# learning a model for train pairs
33462.7	
25760.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18058.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14792.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11525.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9268.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7010.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6362.7	OUT DEF: size={size}
5961.0	OUT DEF: layer[0].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 3445.4 = 3505.2
DL output with Mo: L = 60.6 + 2395.2 = 2455.8
DL input+output M: L = 120.4 + 5840.6 = 5961.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (11,9) with size (4,4) and color yellow and mask full
  [01]: a rectangle at (13,4) with size (2,4) and color red and mask full
  [011]: a rectangle at (11,1) with size (4,2) and color blue and mask full
diff: 
delta:
   (117.2 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,9) with size (4,4) and color yellow and mask full
  [01]: a rectangle at (11,4) with size (2,4) and color red and mask full
  [011]: a rectangle at (7,1) with size (4,2) and color blue and mask full
diff: 
delta:
   (81.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (11,9) with size (4,4) and color yellow and mask full
  [01]: a rectangle at (13,4) with size (2,4) and color red and mask full
  [011]: a rectangle at (11,1) with size (4,2) and color blue and mask full
diff: 
delta:
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (13,4) with size (2,4) and color red and mask full
  [01]: a rectangle at (11,9) with size (4,4) and color yellow and mask full
  [011]: a rectangle at (11,1) with size (4,2) and color blue and mask full
diff: 
delta:
! 40 wrong pixels (generated / expected)

TRAIN 5521c0d9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (9,1) with size (6,4) and color yellow and mask full
  [01]: a rectangle at (10,11) with size (5,2) and color red and mask full
  [011]: a rectangle at (13,7) with size (2,2) and color blue and mask full
diff: 
delta:
   (117.0 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,1) with size (6,4) and color yellow and mask full
  [01]: a rectangle at (5,11) with size (5,2) and color red and mask full
  [011]: a rectangle at (11,7) with size (2,2) and color blue and mask full
diff: 
delta:
   (80.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (9,1) with size (6,4) and color yellow and mask full
  [01]: a rectangle at (10,11) with size (5,2) and color red and mask full
  [011]: a rectangle at (13,7) with size (2,2) and color blue and mask full
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (10,11) with size (5,2) and color red and mask full
  [01]: a rectangle at (9,1) with size (6,4) and color yellow and mask full
  [011]: a rectangle at (13,7) with size (2,2) and color blue and mask full
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 5521c0d9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (12,11) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (14,1) with size (1,4) and color red and mask full
  [011]: a rectangle at (11,7) with size (4,1) and color blue and mask full
diff: 
delta:
   (110.4 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (9,11) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (13,1) with size (1,4) and color red and mask full
  [011]: a rectangle at (7,7) with size (4,1) and color blue and mask full
diff: 
delta:
   (77.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (12,11) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (14,1) with size (1,4) and color red and mask full
  [011]: a rectangle at (11,7) with size (4,1) and color blue and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (14,1) with size (1,4) and color red and mask full
  [01]: a rectangle at (12,11) with size (3,2) and color yellow and mask full
  [011]: a rectangle at (11,7) with size (4,1) and color blue and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 5521c0d9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (8,0) with size (7,4) and color red and mask full
  [01]: a rectangle at (9,5) with size (6,3) and color yellow and mask full
  [011]: a rectangle at (12,10) with size (3,5) and color blue and mask full
diff: 
delta:
! 65 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (9,5) with size (6,3) and color yellow and mask full
  [01]: a rectangle at (8,0) with size (7,4) and color red and mask full
  [011]: a rectangle at (12,10) with size (3,5) and color blue and mask full
diff: 
delta:
! 64 wrong pixels (generated / expected)

TEST 5521c0d9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2395.2 bits (2395.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-272] Checking task 5582e5ca.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3314.9 = 3323.8
DL output with Mo: L = 9.0 + 608.1 = 617.1
DL input+output M: L = 17.9 + 3923.0 = 3940.9

# learning a model for train pairs
3940.9	
3570.4	OUT DEF: size={size}
3330.1	OUT DEF: color={color}
3135.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3056.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
2986.0	IN  DEF: layer[0].mask=full
2891.5	IN  SHAPE at layer[011]: a point at ? with color ?
2771.8	IN  SHAPE at layer[0111]: a point at ? with color ?
2736.8	IN  DEF: size=(?,?)
2574.2	IN  DEF: size.i=3
2411.6	IN  DEF: size.j=3
2376.6	IN  DEF: layer[0].pos=(?,?)
2341.6	IN  DEF: layer[0].size=(?,?)
2306.5	IN  DEF: layer[01].pos=(?,?)
2271.5	IN  DEF: layer[01].size=(?,?)
2236.5	IN  DEF: layer[011].pos=(?,?)
2148.9	IN  DEF: layer[011].pos.i=0
2113.9	IN  DEF: layer[0111].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [011]: a point at (0,?) with color ?
  [0111]: a point at (?,?) with color ?

DL input  with Mi: L = 98.2 + 2006.7 = 2104.9
DL output with Mo: L = 9.0 + 0.0 = 9.0
DL input+output M: L = 107.2 + 2006.7 = 2113.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (1,0) with size (2,1) and color pink and mask full
  [01]: a rectangle at (1,1) with size (2,2) and color green and mask 110
  [011]: a point at (0,2) with color cyan
  [0111]: a point at (2,2) with color black
diff: 
delta:
   (68.5 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,0) with size (2,1) and color pink and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color yellow and mask full
  [011]: a point at (0,2) with color cyan
  [0111]: a point at (2,2) with color black
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (1,0) with size (2,1) and color pink and mask full
  [01]: a rectangle at (1,1) with size (2,2) and color green and mask 110
  [011]: a point at (0,2) with color cyan
  [0111]: a point at (2,2) with color black
diff: 
delta:
correct output grid

TRAIN 5582e5ca.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color blue and mask full
  [011]: a point at (0,0) with color pink
  [0111]: a point at (2,1) with color yellow
diff: 
delta:
   (63.7 bits)
data: a background with size (3,3) and color brown and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color blue and mask full
  [011]: a point at (0,0) with color pink
  [0111]: a point at (2,1) with color yellow
diff: 
delta:
correct output grid

TRAIN 5582e5ca.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color yellow and mask 1001
  [011]: a point at (0,2) with color brown
  [0111]: a point at (1,2) with color blue
diff: 
delta:
   (68.5 bits)
data: a background with size (3,3) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color yellow and mask 1001
  [011]: a point at (0,2) with color brown
  [0111]: a point at (1,2) with color blue
diff: 
delta:
correct output grid

TRAIN 5582e5ca.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,2) with size (1,1) and color pink and mask full
  [01]: a rectangle at (1,0) with size (1,1) and color yellow and mask full
  [011]: a point at (1,1) with color pink
  [0111]: a point at (1,2) with color brown
diff:   layer[011].pos.i
delta: (2,1)=3  (2,2)=0 
correct output grid

TEST 5582e5ca.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-271] Checking task 5614dbcf.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12695.5 = 12704.4
DL output with Mo: L = 9.0 + 1345.8 = 1354.7
DL input+output M: L = 17.9 + 14041.2 = 14059.2

# learning a model for train pairs
14059.2	
11539.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9356.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8333.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7305.7	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6447.1	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
6203.1	OUT DEF: size={layer[0].size}
6063.4	IN  SHAPE at layer[010]: a point at ? with color ?
5971.8	IN  DEF: layer[010].color=grey
5917.8	IN  SHAPE at layer[0110]: a point at ? with color ?
5854.3	IN  SHAPE at layer[011111]: a point at ? with color ?
5762.8	IN  DEF: layer[0110].color=grey
5710.4	OUT SHAPE at layer[0]: a point at ? with color ?
5618.8	OUT DEF: layer[0].color=orange
5556.1	OUT SHAPE at layer[01]: a point at ? with color ?
5465.1	OUT DEF: layer[01].color={layer[0].color}
5417.7	IN  DEF: layer[0].mask=full
5370.2	IN  DEF: layer[011].mask=full
5322.8	IN  DEF: layer[0111].mask=full
5275.3	IN  DEF: layer[01111].mask=full
5183.8	IN  DEF: layer[011111].color=grey
5152.8	OUT DEF: color=black
5121.7	IN  DEF: color=black
5099.9	OUT DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a point at (?,?) with color orange
  [01]: a point at ? with color {layer[0].color}
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [010]: a point at ? with color grey
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [0110]: a point at ? with color grey
  [011]: a rectangle at ? with size ? and color ? and mask full
  [0111]: a rectangle at ? with size ? and color ? and mask full
  [01111]: a rectangle at ? with size ? and color ? and mask full
  [011111]: a point at ? with color grey

DL input  with Mi: L = 118.4 + 4221.1 = 4339.5
DL output with Mo: L = 38.4 + 722.0 = 760.4
DL input+output M: L = 156.8 + 4943.2 = 5099.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask full
  [010]: a point at (1,7) with color grey
  [01]: a rectangle at (0,6) with size (3,3) and color cyan and mask full
  [0110]: a point at (3,4) with color grey
  [011]: a rectangle at (3,3) with size (3,3) and color orange and mask full
  [0111]: a rectangle at (6,0) with size (3,3) and color pink and mask full
  [01111]: a rectangle at (6,6) with size (3,3) and color brown and mask full
  [011111]: a point at (6,5) with color grey
diff: 
delta: (8,1)=5# (8,4)=5# (8,8)=5#
   (244.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color orange
  [01]: a point at (0,0) with color green
diff: 
delta: (0,2)=8  (2,0)=6  (2,2)=9#
   (59.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask full
  [010]: a point at (1,7) with color grey
  [01]: a rectangle at (0,6) with size (3,3) and color cyan and mask full
  [0110]: a point at (3,4) with color grey
  [011]: a rectangle at (3,3) with size (3,3) and color orange and mask full
  [0111]: a rectangle at (6,0) with size (3,3) and color pink and mask full
  [01111]: a rectangle at (6,6) with size (3,3) and color brown and mask full
  [011111]: a point at (6,5) with color grey
diff: 
delta: (8,1)=5# (8,4)=5# (8,8)=5#
! 5 wrong pixels (generated / expected)

TRAIN 5614dbcf.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color red and mask full
  [010]: a point at (1,1) with color grey
  [01]: a rectangle at (6,3) with size (3,3) and color orange and mask 111011111
  [0110]: a point at (3,0) with color grey
  [011]: a rectangle at (4,3) with size (1,1) and color grey and mask full
  [0111]: a rectangle at (4,7) with size (1,1) and color grey and mask full
  [01111]: a rectangle at (6,1) with size (1,1) and color grey and mask full
  [011111]: a point at (7,5) with color grey
diff: 
delta:
   (178.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,1) with color orange
  [01]: a point at (0,1) with color red
diff: 
delta:
   (12.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color red and mask full
  [010]: a point at (1,1) with color grey
  [01]: a rectangle at (6,3) with size (3,3) and color orange and mask 111011111
  [0110]: a point at (3,0) with color grey
  [011]: a rectangle at (4,3) with size (1,1) and color grey and mask full
  [0111]: a rectangle at (4,7) with size (1,1) and color grey and mask full
  [01111]: a rectangle at (6,1) with size (1,1) and color grey and mask full
  [011111]: a point at (7,5) with color grey
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 5614dbcf.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color green and mask full
  [010]: a point at (0,7) with color grey
  [01]: a rectangle at (0,0) with size (3,3) and color yellow and mask 111110111
  [0110]: a point at (1,0) with color grey
  [011]: a rectangle at (6,3) with size (3,3) and color brown and mask 111101111
  [0111]: a rectangle at (2,4) with size (6,1) and color grey and mask full
  [01111]: a rectangle at (3,7) with size (1,1) and color grey and mask full
  [011111]: a point at (6,2) with color grey
diff:   layer[011].mask
delta:
! 3 wrong pixels (generated / expected)

TEST 5614dbcf.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 722.0 bits (722.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-270] Checking task 56dc2b01.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8063.4 = 8072.3
DL output with Mo: L = 9.0 + 10498.1 = 10507.1
DL input+output M: L = 17.9 + 18561.5 = 18579.4

# learning a model for train pairs
18579.4	
15107.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11663.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9947.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8328.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6611.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6056.2	OUT DEF: size={size}
5215.6	OUT DEF: layer[011]={layer[01]}
4665.4	OUT DEF: layer[0].mask={layer[0].mask}
4248.5	OUT DEF: layer[0].size={layer[0].size}
3936.9	OUT DEF: layer[01].size={layer[01].size}
3797.5	OUT DEF: layer[0].color={layer[0].color}
3659.5	OUT DEF: layer[01].color=cyan
3521.5	IN  DEF: layer[0].color=green
3383.5	IN  DEF: layer[01].color=red
3312.8	OUT DEF: layer[01].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [01]: a rectangle at ? with size {layer[01].size} and color cyan and mask full
  [011]: {layer[01]}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color green and mask ?
  [01]: a rectangle at ? with size ? and color red and mask ?

DL input  with Mi: L = 46.0 + 2561.7 = 2607.7
DL output with Mo: L = 47.1 + 658.1 = 705.1
DL input+output M: L = 93.1 + 3219.8 = 3312.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,16) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 1110001111100010
  [01]: a rectangle at (0,10) with size (4,1) and color red and mask full
diff: 
delta:
   (83.9 bits)
data: a background with size (4,16) and color black and layers
  [0]: a rectangle at (0,6) with size (4,4) and color green and mask 1110001111100010
  [01]: a rectangle at (0,5) with size (4,1) and color cyan and mask full
  [011]: a rectangle at (0,10) with size (4,1) and color red and mask full
diff: 
delta:
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,16) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 1110001111100010
  [01]: a rectangle at (0,10) with size (4,1) and color red and mask full
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,16) and color black and layers
  [0]: a rectangle at (0,10) with size (4,1) and color red and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask 1110001111100010
diff:   layer[01].color  layer[0].color
delta:
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,16) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color green and mask full
  [01]: a rectangle at (0,10) with size (4,1) and color red and mask full
diff: 
delta: (0,1)=3  (2,0)=3  (2,2)=0  (2,3)=0 
! 23 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (1,0) with size (4,5) and color green and mask 1110110110000100011
  [01]: a rectangle at (15,0) with size (1,5) and color red and mask full
diff: 
delta:
   (90.9 bits)
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (11,0) with size (4,5) and color green and mask 1110110110000100011
  [01]: a rectangle at (10,0) with size (1,5) and color cyan and mask full
  [011]: a rectangle at (15,0) with size (1,5) and color red and mask full
diff: 
delta:
   (22.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (1,0) with size (4,5) and color green and mask 1110110110000100011
  [01]: a rectangle at (15,0) with size (1,5) and color red and mask full
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (15,0) with size (1,5) and color red and mask full
  [01]: a rectangle at (1,0) with size (4,5) and color green and mask 1110110110000100011
diff:   layer[01].color  layer[0].color
delta:
! 43 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (3,1) with size (2,3) and color green and mask full
  [01]: a rectangle at (15,0) with size (1,5) and color red and mask full
diff: 
delta: (1,0)=3  (1,1)=3  (2,0)=3  (3,0)=3  (3,2)=0  (3,4)=3 
! 23 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (11,0) with size (3,4) and color green and mask 101110011111
  [01]: a rectangle at (3,0) with size (1,5) and color red and mask full
diff: 
delta:
   (81.4 bits)
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (4,0) with size (3,4) and color green and mask 101110011111
  [01]: a rectangle at (7,0) with size (1,5) and color cyan and mask full
  [011]: a rectangle at (3,0) with size (1,5) and color red and mask full
diff: 
delta:
   (22.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (11,0) with size (3,4) and color green and mask 101110011111
  [01]: a rectangle at (3,0) with size (1,5) and color red and mask full
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (3,0) with size (1,5) and color red and mask full
  [01]: a rectangle at (11,0) with size (3,4) and color green and mask 101110011111
diff:   layer[01].color  layer[0].color
delta:
! 41 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  [0]: a rectangle at (11,0) with size (3,4) and color green and mask full
  [01]: a rectangle at (3,0) with size (1,5) and color red and mask full
diff: 
delta: (12,1)=0  (12,2)=0  (13,2)=0 
! 27 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,18) and color black and layers
  [0]: a rectangle at (0,11) with size (4,3) and color green and mask 1111101110
  [01]: a rectangle at (0,4) with size (4,1) and color red and mask full
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,18) and color black and layers
  [0]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01]: a rectangle at (0,11) with size (4,3) and color green and mask 1111101110
diff:   layer[01].color  layer[0].color
delta:
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,18) and color black and layers
  [0]: a rectangle at (0,11) with size (4,3) and color green and mask full
  [01]: a rectangle at (0,4) with size (4,1) and color red and mask full
diff: 
delta: (0,11)=0  (1,12)=0  (3,12)=0  (3,13)=0 
! 24 wrong pixels (generated / expected)

TEST 56dc2b01.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 658.1 bits (658.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-269] Checking task 56ff96f3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3019.6 = 3028.6
DL output with Mo: L = 9.0 + 17603.4 = 17612.3
DL input+output M: L = 17.9 + 20623.0 = 20640.9

# learning a model for train pairs
20640.9	
9225.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8482.4	OUT DEF: size={size}
8364.5	IN  SHAPE at layer[0]: a point at ? with color ?
8178.1	OUT DEF: layer[0].color={layer[0].color}
8039.5	IN  SHAPE at layer[01]: a point at ? with color ?
7945.6	OUT DEF: layer[0].mask=full
7885.4	OUT DEF: color=black
7825.3	IN  DEF: color=black
7777.0	OUT DEF: layer[0].pos=(?,?)
7596.0	OUT DEF: layer[0].pos.j=1
7423.0	OUT DEF: layer[0].pos.i={layer[0].pos.i}
7374.7	OUT DEF: layer[0].size=(?,?)
7326.5	IN  DEF: size=(?,?)
7278.3	IN  DEF: layer[0].pos=(?,?)
7230.0	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},1) with size (?,?) and color {layer[0].color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color ?
  [01]: a point at (?,?) with color ?

DL input  with Mi: L = 42.1 + 2524.0 = 2566.2
DL output with Mo: L = 35.2 + 4628.7 = 4663.9
DL input+output M: L = 77.3 + 7152.7 = 7230.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,6) with color blue
  [01]: a point at (3,1) with color blue
diff: 
delta: (5,3)=2  (7,7)=2 
   (84.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,6) and color blue and mask full
diff: 
delta: (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2  (6,7)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2 
   (284.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,6) with color blue
  [01]: a point at (3,1) with color blue
diff: 
delta: (5,3)=2  (7,7)=2 
! 29 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (3,7) with color orange
diff: 
delta: (4,2)=3  (4,4)=7#
   (79.1 bits)
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (1,1) with size (4,2) and color green and mask full
diff: 
delta: (3,4)=7# (3,5)=7# (3,6)=7# (3,7)=7# (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7#
   (150.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (3,7) with color orange
diff: 
delta: (4,2)=3  (4,4)=7#
! 12 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,1) with color yellow
  [01]: a point at (6,5) with color yellow
diff: 
delta:
   (45.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (5,5) and color yellow and mask full
diff: 
delta:
   (13.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,1) with color yellow
  [01]: a point at (6,5) with color yellow
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (6,5) with color yellow
  [01]: a point at (2,1) with color yellow
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,11) and color black and layers
  [0]: a point at (1,1) with color orange
  [01]: a point at (3,7) with color orange
diff: 
delta:
   (43.4 bits)
data: a background with size (6,11) and color black and layers
  [0]: a rectangle at (1,1) with size (3,7) and color orange and mask full
diff: 
delta:
   (13.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  [0]: a point at (1,1) with color orange
  [01]: a point at (3,7) with color orange
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,11) and color black and layers
  [0]: a point at (3,7) with color orange
  [01]: a point at (1,1) with color orange
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  [0]: a point at (0,0) with color cyan
  [01]: a point at (1,2) with color cyan
diff: 
delta: (4,5)=6  (7,1)=6 
! 22 wrong pixels (generated / expected)

TEST 56ff96f3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4628.7 bits (4628.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-268] Checking task 57aa92db.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13416.9 = 13425.8
DL output with Mo: L = 9.0 + 30464.7 = 30473.6
DL input+output M: L = 17.9 + 43881.5 = 43899.4

# learning a model for train pairs
43899.4	
27650.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24721.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21802.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19476.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17162.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15457.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 6428.1 = 6487.9
DL output with Mo: L = 59.8 + 8909.8 = 8969.6
DL input+output M: L = 119.6 + 15338.0 = 15457.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,12) and color black and layers
  [0]: a rectangle at (9,5) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (9,7) with size (2,2) and color blue and mask full
  [011]: a rectangle at (1,2) with size (3,2) and color green and mask 101110
diff: 
delta: (2,4)=1 
   (135.7 bits)
data: a background with size (16,12) and color black and layers
  [0]: a rectangle at (7,3) with size (6,4) and color yellow and mask 110011001111111111001100
  [01]: a rectangle at (9,7) with size (2,2) and color blue and mask full
  [011]: a rectangle at (1,2) with size (3,2) and color green and mask 101110
diff: 
delta: (2,4)=1 
   (164.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  [0]: a rectangle at (9,5) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (9,7) with size (2,2) and color blue and mask full
  [011]: a rectangle at (1,2) with size (3,2) and color green and mask 101110
diff: 
delta: (2,4)=1 
! size mismatch, 10x10 instead of 16x12

TRAIN 57aa92db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,3) with size (3,3) and color cyan and mask 100111100
  [01]: a rectangle at (2,2) with size (1,1) and color red and mask full
  [011]: a rectangle at (7,10) with size (1,1) and color red and mask full
diff: 
delta: (7,11)=6  (12,5)=2  (12,6)=3 
   (175.6 bits)
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,3) with size (3,3) and color cyan and mask 100111100
  [01]: a rectangle at (6,11) with size (3,3) and color pink and mask 100111100
  [011]: a rectangle at (11,6) with size (3,3) and color green and mask 100111100
diff: 
delta: (2,2)=2  (7,10)=2  (12,5)=2 
   (206.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,3) with size (3,3) and color cyan and mask 100111100
  [01]: a rectangle at (2,2) with size (1,1) and color red and mask full
  [011]: a rectangle at (7,10) with size (1,1) and color red and mask full
diff: 
delta: (7,11)=6  (12,5)=2  (12,6)=3 
! size mismatch, 10x10 instead of 16x18

TRAIN 57aa92db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (7,9) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (10,9) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (2,2) with size (3,3) and color blue and mask 101101111
diff: 
delta: (3,3)=4 
   (148.6 bits)
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (7,6) with size (9,9) and color cyan and mask 111000111111000111111000111111000111111000111111000111111111111111111111111111111
  [01]: a rectangle at (10,9) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (2,2) with size (3,3) and color blue and mask 101101111
diff: 
delta: (3,3)=4 
   (236.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (7,9) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (10,9) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (2,2) with size (3,3) and color blue and mask 101101111
diff: 
delta: (3,3)=4 
! size mismatch, 10x10 instead of 17x18

TRAIN 57aa92db.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,18) and color black and layers
  [0]: a rectangle at (7,6) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (9,6) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,12) with size (3,3) and color cyan and mask 100011100
diff: 
delta: (2,4)=3  (2,5)=2  (4,14)=2 
   (182.9 bits)
data: a background with size (15,18) and color black and layers
  [0]: a rectangle at (7,2) with size (6,6) and color yellow and mask 110000110000001111001111110000110000
  [01]: a rectangle at (9,6) with size (2,2) and color red and mask full
  [011]: a rectangle at (1,3) with size (3,3) and color green and mask 100011100
diff: 
delta: (2,5)=2  (3,14)=8  (4,12)=8  (4,13)=8  (4,14)=2  (5,14)=8 
   (283.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  [0]: a rectangle at (7,6) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (9,6) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,12) with size (3,3) and color cyan and mask 100011100
diff: 
delta: (2,4)=3  (2,5)=2  (4,14)=2 
! size mismatch, 10x10 instead of 15x18

TRAIN 57aa92db.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,30) and color black and layers
  [0]: a rectangle at (7,21) with size (4,4) and color blue and mask full
  [01]: a rectangle at (7,25) with size (4,4) and color red and mask full
  [011]: a rectangle at (3,10) with size (3,3) and color yellow and mask full
diff: 
delta: (2,4)=8  (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,13)=1  (3,14)=1  (3,15)=1  (4,3)=8  (4,4)=8  (4,13)=1  (4,14)=1  (4,15)=1  (5,13)=1  (5,14)=1  (5,15)=1  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! size mismatch, 10x10 instead of 19x30

TEST 57aa92db.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 8909.8 bits (8909.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-267] Checking task 5ad4f10b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 70552.0 = 70561.0
DL output with Mo: L = 9.0 + 2227.1 = 2236.1
DL input+output M: L = 17.9 + 72779.1 = 72797.1

# learning a model for train pairs
72797.1	
27138.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
26196.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
25462.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24864.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
24716.6	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
24440.0	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
24302.1	OUT DEF: layer[0].color={layer[01].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 22846.1 = 22938.3
DL output with Mo: L = 27.9 + 1335.8 = 1363.7
DL input+output M: L = 120.1 + 24181.9 = 24302.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,24) and color black and layers
  [0]: a rectangle at (3,3) with size (12,12) and color yellow and mask 111111111111111111111111111111111111111111111111000011110000000011110000000011110000000011110000111100001111111100001111111100001111111100001111
  [01]: a rectangle at (11,19) with size (1,4) and color cyan and mask full
  [011]: a rectangle at (0,9) with size (2,2) and color cyan and mask 1011
  [0111]: a rectangle at (14,15) with size (2,3) and color cyan and mask 11100
  [01111]: a rectangle at (1,20) with size (3,2) and color cyan and mask 100110
diff: 
delta: (0,23)=8  (2,1)=8  (2,18)=8  (3,7)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,21)=0  (12,17)=8  (13,19)=8  (14,0)=8  (14,20)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,0)=8  (19,1)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
   (852.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111010101
diff: 
delta:
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,24) and color black and layers
  [0]: a rectangle at (3,3) with size (12,12) and color yellow and mask 111111111111111111111111111111111111111111111111000011110000000011110000000011110000000011110000111100001111111100001111111100001111111100001111
  [01]: a rectangle at (11,19) with size (1,4) and color cyan and mask full
  [011]: a rectangle at (0,9) with size (2,2) and color cyan and mask 1011
  [0111]: a rectangle at (14,15) with size (2,3) and color cyan and mask 11100
  [01111]: a rectangle at (1,20) with size (3,2) and color cyan and mask 100110
diff: 
delta: (0,23)=8  (2,1)=8  (2,18)=8  (3,7)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,21)=0  (12,17)=8  (13,19)=8  (14,0)=8  (14,20)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,0)=8  (19,1)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN 5ad4f10b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,23) and color black and layers
  [0]: a rectangle at (1,10) with size (9,9) and color blue and mask 111000000111000000111000111000000111000000111000111000111111000111111000111
  [01]: a rectangle at (5,8) with size (2,5) and color red and mask 101010101
  [011]: a rectangle at (3,1) with size (2,2) and color red and mask 1101
  [0111]: a rectangle at (9,15) with size (1,2) and color red and mask full
  [01111]: a rectangle at (12,4) with size (1,2) and color red and mask full
diff: 
delta: (0,2)=2  (1,5)=2  (1,21)=2  (2,5)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,7)=2  (8,22)=2  (9,6)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
   (804.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1010101
diff: 
delta:
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,23) and color black and layers
  [0]: a rectangle at (1,10) with size (9,9) and color blue and mask 111000000111000000111000111000000111000000111000111000111111000111111000111
  [01]: a rectangle at (5,8) with size (2,5) and color red and mask 101010101
  [011]: a rectangle at (3,1) with size (2,2) and color red and mask 1101
  [0111]: a rectangle at (9,15) with size (1,2) and color red and mask full
  [01111]: a rectangle at (12,4) with size (1,2) and color red and mask full
diff: 
delta: (0,2)=2  (1,5)=2  (1,21)=2  (2,5)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,7)=2  (8,22)=2  (9,6)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
! size mismatch, 10x10 instead of 3x3

TRAIN 5ad4f10b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,23) and color black and layers
  [0]: a rectangle at (5,2) with size (15,15) and color pink and mask 111110000011111111110000011111111110000011111111110000011111111110000011111111111111100000111111111100000111111111100000111111111100000111111111100000000001111100000000001111100000000001111100000000001111100000000001111100000
  [01]: a rectangle at (10,3) with size (2,1) and color green and mask full
  [011]: a rectangle at (17,8) with size (2,1) and color green and mask full
  [0111]: a rectangle at (0,1) with size (1,1) and color green and mask full
  [01111]: a rectangle at (1,6) with size (1,1) and color green and mask full
diff: 
delta: (1,15)=3  (2,0)=3  (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (23,21)=3 
   (627.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 101110010
diff: 
delta:
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,23) and color black and layers
  [0]: a rectangle at (5,2) with size (15,15) and color pink and mask 111110000011111111110000011111111110000011111111110000011111111110000011111111111111100000111111111100000111111111100000111111111100000111111111100000000001111100000000001111100000000001111100000000001111100000000001111100000
  [01]: a rectangle at (10,3) with size (2,1) and color green and mask full
  [011]: a rectangle at (17,8) with size (2,1) and color green and mask full
  [0111]: a rectangle at (0,1) with size (1,1) and color green and mask full
  [01111]: a rectangle at (1,6) with size (1,1) and color green and mask full
diff: 
delta: (1,15)=3  (2,0)=3  (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (23,21)=3 
! size mismatch, 10x10 instead of 3x3

TRAIN 5ad4f10b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,26) and color black and layers
  [0]: a rectangle at (4,2) with size (12,12) and color cyan and mask 111100000000111100000000111100000000111100000000111111110000111111110000111111110000111111110000111100001111111100001111111100001111111100001111
  [01]: a rectangle at (15,1) with size (2,5) and color yellow and mask 110110010
  [011]: a rectangle at (2,18) with size (1,4) and color yellow and mask full
  [0111]: a rectangle at (15,16) with size (4,2) and color yellow and mask 1100110
  [01111]: a rectangle at (6,21) with size (2,3) and color yellow and mask 101010
diff: 
delta: (0,21)=4  (1,3)=4  (1,10)=4  (1,23)=4  (2,8)=4  (2,13)=4  (3,4)=4  (3,9)=4  (3,12)=4  (4,19)=4  (7,14)=4  (9,15)=4  (9,16)=4  (9,24)=4  (11,1)=4  (12,1)=4  (12,4)=4  (12,9)=4  (13,2)=4  (13,25)=4  (14,0)=4  (14,8)=4  (14,19)=4  (15,19)=4  (15,25)=4  (16,9)=4  (16,11)=4  (18,4)=4  (18,13)=4  (18,21)=4  (18,25)=4  (19,8)=4  (19,11)=4  (21,11)=4  (21,14)=4  (21,15)=4  (21,20)=4 
! size mismatch, 10x10 instead of 3x3

TEST 5ad4f10b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1335.8 bits (1335.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-266] Checking task 5bd6f4ac.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20705.4 = 20714.3
DL output with Mo: L = 9.0 + 3493.6 = 3502.6
DL input+output M: L = 17.9 + 24199.0 = 24216.9

# learning a model for train pairs
24216.9	
23423.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23058.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
22888.3	OUT SHAPE at layer[0]: a point at ? with color ?
22775.0	OUT SHAPE at layer[01]: a point at ? with color ?
22647.4	OUT SHAPE at layer[011]: a point at ? with color ?
22553.5	IN  DEF: layer[01].mask=full
22465.0	IN  SHAPE at layer[011]: a point at ? with color ?
22280.1	OUT DEF: layer[0].color={layer[011].color}
22191.4	IN  SHAPE at layer[0110]: a point at ? with color ?
22102.3	IN  SHAPE at layer[010]: a point at ? with color ?
22012.6	IN  SHAPE at layer[0101]: a point at ? with color ?
21922.5	IN  SHAPE at layer[01011]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a point at ? with color {layer[011].color}
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [010]: a point at ? with color ?
  [0101]: a point at ? with color ?
  [01011]: a point at ? with color ?
  [01]: a rectangle at ? with size ? and color ? and mask full
  [0110]: a point at ? with color ?
  [011]: a point at ? with color ?

DL input  with Mi: L = 90.0 + 18925.4 = 19015.4
DL output with Mo: L = 41.6 + 2865.4 = 2907.1
DL input+output M: L = 131.6 + 21790.9 = 21922.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color orange and mask 1011100
  [010]: a point at (0,0) with color green
  [0101]: a point at (0,3) with color orange
  [01011]: a point at (0,6) with color brown
  [01]: a rectangle at (2,0) with size (2,2) and color blue and mask full
  [0110]: a point at (0,7) with color orange
  [011]: a point at (1,0) with color cyan
diff: 
delta: (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
   (564.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (0,0) with color brown
  [011]: a point at (1,2) with color yellow
diff: 
delta: (0,1)=7# (1,0)=4  (2,0)=4 
   (90.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color orange and mask 1011100
  [010]: a point at (0,0) with color green
  [0101]: a point at (0,3) with color orange
  [01011]: a point at (0,6) with color brown
  [01]: a rectangle at (2,0) with size (2,2) and color blue and mask 1101
  [0110]: a point at (0,7) with color orange
  [011]: a point at (1,0) with color cyan
diff:   layer[01].mask
delta: (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color orange and mask 1011100
  [010]: a point at (0,0) with color green
  [0101]: a point at (0,3) with color orange
  [01011]: a point at (0,6) with color brown
  [01]: a rectangle at (2,0) with size (2,2) and color blue and mask 1101
  [0110]: a point at (0,7) with color orange
  [011]: a point at (1,1) with color yellow
diff:   layer[01].mask
delta: (1,0)=8  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN 5bd6f4ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,8) with size (3,1) and color orange and mask full
  [010]: a point at (0,0) with color brown
  [0101]: a point at (0,7) with color pink
  [01011]: a point at (1,1) with color yellow
  [01]: a rectangle at (2,6) with size (1,2) and color yellow and mask full
  [0110]: a point at (1,3) with color orange
  [011]: a point at (1,5) with color grey
diff: 
delta: (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
   (637.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,2) with color grey
  [01]: a point at (0,1) with color pink
  [011]: a point at (1,1) with color cyan
diff: 
delta: (1,2)=1  (2,0)=4  (2,1)=4 
   (90.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,8) with size (3,1) and color orange and mask full
  [010]: a point at (0,0) with color brown
  [0101]: a point at (0,7) with color pink
  [01011]: a point at (1,1) with color yellow
  [01]: a rectangle at (2,6) with size (1,2) and color yellow and mask full
  [0110]: a point at (1,3) with color orange
  [011]: a point at (1,5) with color grey
diff: 
delta: (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,8) with size (3,1) and color orange and mask full
  [010]: a point at (0,0) with color brown
  [0101]: a point at (0,7) with color pink
  [01011]: a point at (1,1) with color yellow
  [01]: a rectangle at (2,6) with size (1,2) and color yellow and mask full
  [0110]: a point at (1,3) with color orange
  [011]: a point at (1,7) with color cyan
diff: 
delta: (1,5)=5# (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,8) with size (3,1) and color orange and mask full
  [010]: a point at (0,0) with color brown
  [0101]: a point at (0,7) with color pink
  [01011]: a point at (1,1) with color yellow
  [01]: a rectangle at (2,6) with size (1,2) and color yellow and mask full
  [0110]: a point at (1,3) with color orange
  [011]: a point at (1,8) with color blue
diff: 
delta: (1,5)=5# (1,7)=8  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! size mismatch, 10x10 instead of 3x3

TRAIN 5bd6f4ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color grey and mask 1101
  [010]: a point at (0,4) with color pink
  [0101]: a point at (1,3) with color orange
  [01011]: a point at (1,6) with color pink
  [01]: a rectangle at (0,0) with size (2,1) and color red and mask full
  [0110]: a point at (1,8) with color blue
  [011]: a point at (2,5) with color blue
diff: 
delta: (2,1)=3  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
   (363.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,2) with color blue
  [01]: a point at (1,0) with color pink
  [011]: a point at (2,0) with color brown
diff: 
delta: (2,1)=4 
   (60.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color grey and mask 1101
  [010]: a point at (0,4) with color pink
  [0101]: a point at (1,3) with color orange
  [01011]: a point at (1,6) with color pink
  [01]: a rectangle at (0,0) with size (2,1) and color red and mask full
  [0110]: a point at (1,8) with color blue
  [011]: a point at (2,1) with color green
diff: 
delta: (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color grey and mask 1101
  [010]: a point at (0,4) with color pink
  [0101]: a point at (1,3) with color orange
  [01011]: a point at (1,6) with color pink
  [01]: a rectangle at (0,0) with size (2,1) and color red and mask full
  [0110]: a point at (1,8) with color blue
  [011]: a point at (2,5) with color blue
diff: 
delta: (2,1)=3  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color grey and mask 1101
  [010]: a point at (0,4) with color pink
  [0101]: a point at (1,3) with color orange
  [01011]: a point at (1,6) with color pink
  [01]: a rectangle at (0,0) with size (2,1) and color red and mask full
  [0110]: a point at (1,8) with color blue
  [011]: a point at (2,6) with color brown
diff: 
delta: (2,1)=3  (2,5)=1  (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! size mismatch, 10x10 instead of 3x3

TRAIN 5bd6f4ac.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,0) with size (2,2) and color blue and mask 110
  [010]: a point at (0,1) with color grey
  [0101]: a point at (0,4) with color cyan
  [01011]: a point at (0,8) with color yellow
  [01]: a rectangle at (1,6) with size (1,1) and color green and mask full
  [0110]: a point at (2,4) with color red
  [011]: a point at (2,8) with color green
diff: 
delta: (2,5)=1  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
   (326.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color green
  [01]: a point at (0,2) with color yellow
  [011]: a point at (2,2) with color green
diff: 
delta:
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,0) with size (2,2) and color blue and mask 110
  [010]: a point at (0,1) with color grey
  [0101]: a point at (0,4) with color cyan
  [01011]: a point at (0,8) with color yellow
  [01]: a rectangle at (1,6) with size (1,1) and color green and mask full
  [0110]: a point at (2,4) with color red
  [011]: a point at (2,5) with color blue
diff: 
delta: (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,0) with size (2,2) and color blue and mask 110
  [010]: a point at (0,1) with color grey
  [0101]: a point at (0,4) with color cyan
  [01011]: a point at (0,8) with color yellow
  [01]: a rectangle at (1,6) with size (1,1) and color green and mask full
  [0110]: a point at (2,4) with color red
  [011]: a point at (2,8) with color green
diff: 
delta: (2,5)=1  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 5bd6f4ac.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,5) with size (3,4) and color brown and mask 1101001000
  [010]: a point at (0,0) with color pink
  [0101]: a point at (0,4) with color blue
  [01011]: a point at (0,6) with color grey
  [01]: a rectangle at (7,0) with size (2,2) and color brown and mask 1011
  [0110]: a point at (0,7) with color cyan
  [011]: a point at (1,0) with color red
diff:   layer[01].mask
delta: (0,1)=9# (1,1)=9# (1,3)=6  (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,0)=7# (4,1)=7# (4,2)=4  (4,4)=7# (4,6)=9# (5,2)=7# (5,5)=1  (5,6)=5# (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,5)=5# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,5) with size (3,4) and color brown and mask 1101001000
  [010]: a point at (0,0) with color pink
  [0101]: a point at (0,4) with color blue
  [01011]: a point at (0,6) with color grey
  [01]: a rectangle at (7,0) with size (2,2) and color brown and mask 1011
  [0110]: a point at (0,7) with color cyan
  [011]: a point at (1,3) with color pink
diff:   layer[01].mask
delta: (0,1)=9# (1,0)=2  (1,1)=9# (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,0)=7# (4,1)=7# (4,2)=4  (4,4)=7# (4,6)=9# (5,2)=7# (5,5)=1  (5,6)=5# (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,5)=5# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,5) with size (3,4) and color brown and mask 1101001000
  [010]: a point at (0,0) with color pink
  [0101]: a point at (0,4) with color blue
  [01011]: a point at (0,6) with color grey
  [01]: a rectangle at (7,0) with size (2,2) and color brown and mask 1011
  [0110]: a point at (0,7) with color cyan
  [011]: a point at (1,5) with color cyan
diff:   layer[01].mask
delta: (0,1)=9# (1,0)=2  (1,1)=9# (1,3)=6  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,0)=7# (4,1)=7# (4,2)=4  (4,4)=7# (4,6)=9# (5,2)=7# (5,5)=1  (5,6)=5# (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,5)=5# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! size mismatch, 10x10 instead of 3x3

TEST 5bd6f4ac.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2865.4 bits (2865.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-265] Checking task 5c0a986e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5029.6 = 5038.6
DL output with Mo: L = 9.0 + 8946.0 = 8955.0
DL input+output M: L = 17.9 + 13975.7 = 13993.6

# learning a model for train pairs
13993.6	
11963.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9801.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8485.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7080.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6502.3	OUT DEF: size={size}
6184.1	OUT DEF: layer[0].pos={layer[0].pos}
6044.6	OUT DEF: layer[0].color={layer[0].color}
5905.2	OUT DEF: layer[01].color={layer[01].color}
5767.2	IN  DEF: layer[0].color=red
5629.2	IN  DEF: layer[01].color=blue
5558.5	IN  DEF: layer[0].mask=full
5487.9	IN  DEF: layer[01].mask=full
5442.3	OUT DEF: color=black
5396.7	IN  DEF: color=black
5361.7	OUT DEF: layer[0].size=(?,?)
5154.2	OUT DEF: layer[0].size.j={layer[0].size.j + layer[01].pos.j}
4947.3	OUT DEF: layer[0].size.i={layer[0].size.i + layer[01].pos.j}
4912.3	OUT DEF: layer[01].pos=(?,?)
4775.9	OUT DEF: layer[01].pos.j=0
4645.5	OUT DEF: layer[01].pos.i={layer[01].pos.i - layer[01].pos.j}
4610.5	OUT DEF: layer[01].size=(?,?)
4402.7	OUT DEF: layer[01].size.j={layer[01].pos.j + layer[01].size.j}
4195.7	OUT DEF: layer[01].size.i={layer[01].pos.j + layer[01].size.i}
4160.7	IN  DEF: size=(?,?)
3897.4	IN  DEF: size.i=10
3634.0	IN  DEF: size.j=10
3599.0	IN  DEF: layer[0].pos=(?,?)
3564.0	IN  DEF: layer[0].size=(?,?)
3435.3	IN  DEF: layer[0].size.i=2
3306.7	IN  DEF: layer[0].size.j=2
3271.7	IN  DEF: layer[01].pos=(?,?)
3236.7	IN  DEF: layer[01].size=(?,?)
3108.0	IN  DEF: layer[01].size.i=2
2979.3	IN  DEF: layer[01].size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i + layer[01].pos.j},{layer[0].size.j + layer[01].pos.j}) and color {layer[0].color} and mask ?
  [01]: a rectangle at ({layer[01].pos.i - layer[01].pos.j},0) with size ({layer[01].pos.j + layer[01].size.i},{layer[01].pos.j + layer[01].size.j}) and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (2,2) and color red and mask full
  [01]: a rectangle at (?,?) with size (2,2) and color blue and mask full

DL input  with Mi: L = 80.6 + 557.3 = 637.9
DL output with Mo: L = 102.1 + 2239.3 = 2341.4
DL input+output M: L = 182.8 + 2796.6 = 2979.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (2,2) and color red and mask full
  [01]: a rectangle at (2,2) with size (2,2) and color blue and mask full
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (4,4) and color red and mask 1000010000110011
  [01]: a rectangle at (0,0) with size (4,4) and color blue and mask 1100110000100001
diff: 
delta:
   (36.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (2,2) and color red and mask full
  [01]: a rectangle at (2,2) with size (2,2) and color blue and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color blue and mask full
  [01]: a rectangle at (6,4) with size (2,2) and color red and mask full
diff:   layer[01].color  layer[0].color
delta:
! 48 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (7,6) with size (2,2) and color blue and mask full
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (8,8) and color red and mask 1000000001000000001000000001000000001000000001000000001100000011
  [01]: a rectangle at (1,0) with size (8,8) and color blue and mask 1100000011000000001000001001000001001000001001000001001000001101
diff: 
delta:
   (132.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (7,6) with size (2,2) and color blue and mask full
diff: 
delta:
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,6) with size (2,2) and color blue and mask full
  [01]: a rectangle at (0,2) with size (2,2) and color red and mask full
diff:   layer[01].color  layer[0].color
delta:
! 22 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
  [01]: a rectangle at (5,3) with size (2,2) and color blue and mask full
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (5,5) and color red and mask 1000001000001000001100011
  [01]: a rectangle at (2,0) with size (5,5) and color blue and mask 1100011000001000001000001
diff: 
delta:
   (54.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
  [01]: a rectangle at (5,3) with size (2,2) and color blue and mask full
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (2,2) and color blue and mask full
  [01]: a rectangle at (2,5) with size (2,2) and color red and mask full
diff:   layer[01].color  layer[0].color
delta:
! 57 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,6) with size (2,2) and color blue and mask full
diff: 
delta:
! 66 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,6) with size (2,2) and color blue and mask full
  [01]: a rectangle at (5,2) with size (2,2) and color red and mask full
diff:   layer[01].color  layer[0].color
delta:
! 30 wrong pixels (generated / expected)

TEST 5c0a986e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2239.3 bits (2239.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-264] Checking task 5c2c9af4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2683.6 = 2692.6
DL output with Mo: L = 9.0 + 107898.1 = 107907.1
DL input+output M: L = 17.9 + 110581.7 = 110599.6

# learning a model for train pairs
110599.6	
26547.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18150.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17427.2	OUT DEF: size={size}
17343.9	IN  SHAPE at layer[0]: a point at ? with color ?
17203.9	OUT DEF: layer[0].color={layer[0].color}
17064.2	OUT DEF: layer[01].color={layer[0].color}
16971.0	IN  SHAPE at layer[00]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a point at ? with color ?

DL input  with Mi: L = 30.1 + 2484.3 = 2514.4
DL output with Mo: L = 42.6 + 14413.9 = 14456.6
DL input+output M: L = 72.7 + 16898.2 = 16971.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [00]: a point at (2,11) with color cyan
  [0]: a point at (5,14) with color cyan
diff: 
delta: (8,17)=8 
   (82.8 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,2) with size (18,21) and color cyan and mask 111111111111111111111000000000000000000001000000000000000000001111111111111111111001000000000000000001001000000000000000001001001111111111111001001001000000000001001001001000000000001001001001001111111001001001001001000001001001001001001000001001001001001001001001001001001001001000001001001001001001000001001001001001001111111001001001001000000000001001001001000000000001001001
  [01]: a rectangle at (20,0) with size (1,23) and color cyan and mask full
diff: 
delta:
   (448.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [00]: a point at (2,11) with color cyan
  [0]: a point at (5,14) with color cyan
diff: 
delta: (8,17)=8 
! 157 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [00]: a point at (11,13) with color red
  [0]: a point at (13,11) with color red
diff: 
delta: (15,9)=2 
   (82.8 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (3,1) with size (20,21) and color red and mask 100000000000000000001101111111111111111101101000000000000000101101011111111111110101101010000000000010101101010111111111010101101010100000001010101101010101111101010101101010101000101010101101010101010101010101101010101000101010101101010101111101010101101010100000001010101101010111111111010101101010000000000010101101011111111111110101101000000000000000101101111111111111111101100000000000000000001111111111111111111111
  [01]: a rectangle at (1,0) with size (1,23) and color red and mask full
diff: 
delta:
   (490.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [00]: a point at (11,13) with color red
  [0]: a point at (13,11) with color red
diff: 
delta: (15,9)=2 
! 243 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [00]: a point at (4,12) with color green
  [0]: a point at (8,8) with color green
diff: 
delta: (12,4)=3 
   (82.8 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (8,8) with size (1,1) and color green and mask full
  [01]: a rectangle at (0,0) with size (21,21) and color green and mask 111111111111111111111100000000000000000000100000000000000000000100000000000000000000100011111111111111111100010000000000000001100010000000000000001100010000000000000001100010001111111110001100010001000000010001100010001000000010001100010001000000010001100010001000100010001100010001000000010001100010001000000010001100010001000000010001100010001111111110001100010000000000000001100010000000000000001100010000000000000001100011111111111111111
diff: 
delta:
   (502.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [00]: a point at (4,12) with color green
  [0]: a point at (8,8) with color green
diff: 
delta: (12,4)=3 
! 136 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color black and layers
  [00]: a point at (12,7) with color yellow
  [0]: a point at (18,13) with color yellow
diff: 
delta: (24,19)=4 
! 144 wrong pixels (generated / expected)

TEST 5c2c9af4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 14413.9 bits (14413.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-263] Checking task 5daaa586.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 45259.9 = 45268.8
DL output with Mo: L = 9.0 + 28181.7 = 28190.7
DL input+output M: L = 17.9 + 73441.6 = 73459.5

# learning a model for train pairs
73459.5	
63445.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
54793.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
46797.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
39378.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
32118.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
27705.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
23431.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 13865.1 = 13941.1
DL output with Mo: L = 59.8 + 9431.0 = 9490.8
DL input+output M: L = 135.8 + 23296.1 = 23431.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (22,22) and color black and layers
  [0]: a rectangle at (0,5) with size (22,1) and color green and mask full
  [01]: a rectangle at (0,16) with size (22,1) and color cyan and mask full
  [011]: a rectangle at (1,0) with size (1,22) and color blue and mask full
  [0111]: a rectangle at (15,0) with size (1,22) and color red and mask full
diff: 
delta: (0,9)=2  (4,0)=2  (5,0)=2  (5,15)=2  (6,3)=2  (6,18)=2  (7,9)=2  (7,19)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
   (510.0 bits)
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (4,1) with size (11,10) and color red and mask 11111111111100001011110000101011000010101100001000110000100011000010001100001000100000100010000000001000000000
  [01]: a rectangle at (0,0) with size (15,1) and color green and mask full
  [011]: a rectangle at (0,11) with size (15,1) and color cyan and mask full
diff: 
delta: (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (0,6)=1  (0,7)=1  (0,8)=1  (0,9)=1  (0,10)=1 
   (425.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  [0]: a rectangle at (0,5) with size (22,1) and color green and mask full
  [01]: a rectangle at (0,16) with size (22,1) and color cyan and mask full
  [011]: a rectangle at (1,0) with size (1,22) and color blue and mask full
  [0111]: a rectangle at (15,0) with size (1,22) and color red and mask full
diff: 
delta: (0,9)=2  (4,0)=2  (5,0)=2  (5,15)=2  (6,3)=2  (6,18)=2  (7,9)=2  (7,19)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
! size mismatch, 10x10 instead of 15x12

TRAIN 5daaa586.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,9) with size (12,1) and color blue and mask full
  [01]: a rectangle at (9,0) with size (1,12) and color pink and mask full
  [011]: a rectangle at (0,2) with size (12,1) and color yellow and mask full
  [0111]: a rectangle at (2,0) with size (1,12) and color cyan and mask full
diff: 
delta: (5,6)=8  (5,11)=8  (6,3)=8  (6,6)=8  (8,7)=8  (8,11)=8  (10,6)=8  (11,1)=8  (11,7)=8 
   (316.3 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,1) with size (7,6) and color cyan and mask 10000010000011001011001011001011001111111
  [01]: a rectangle at (0,7) with size (8,1) and color blue and mask full
  [011]: a rectangle at (7,0) with size (1,7) and color pink and mask full
diff: 
delta: (0,0)=4  (1,0)=4  (2,0)=4  (3,0)=4  (4,0)=4  (5,0)=4  (6,0)=4 
   (277.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,9) with size (12,1) and color blue and mask full
  [01]: a rectangle at (9,0) with size (1,12) and color pink and mask full
  [011]: a rectangle at (0,2) with size (12,1) and color yellow and mask full
  [0111]: a rectangle at (2,0) with size (1,12) and color cyan and mask full
diff: 
delta: (5,6)=8  (5,11)=8  (6,3)=8  (6,6)=8  (8,7)=8  (8,11)=8  (10,6)=8  (11,1)=8  (11,7)=8 
! size mismatch, 10x10 instead of 8x8

TRAIN 5daaa586.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (0,10) with size (14,3) and color yellow and mask 10010011010011011010010010111010010010010
  [01]: a rectangle at (0,3) with size (14,1) and color green and mask full
  [011]: a rectangle at (5,0) with size (1,15) and color red and mask full
  [0111]: a rectangle at (10,0) with size (1,15) and color cyan and mask full
diff: 
delta: (0,2)=4  (0,7)=4  (1,5)=4  (2,6)=4  (3,5)=4  (4,14)=4  (6,0)=4  (6,4)=4  (6,5)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
   (560.2 bits)
data: a background with size (6,9) and color yellow and layers
  [0]: a rectangle at (0,1) with size (1,7) and color red and mask full
  [01]: a rectangle at (5,1) with size (1,7) and color cyan and mask full
  [011]: a rectangle at (2,1) with size (3,7) and color black and mask 1100011111111111
diff: 
delta: (0,0)=3  (1,0)=3  (2,0)=3  (3,0)=3  (4,0)=3  (5,0)=3 
   (240.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (0,10) with size (14,3) and color yellow and mask 10010011010011011010010010111010010010010
  [01]: a rectangle at (0,3) with size (14,1) and color green and mask full
  [011]: a rectangle at (5,0) with size (1,15) and color red and mask full
  [0111]: a rectangle at (10,0) with size (1,15) and color cyan and mask full
diff: 
delta: (0,2)=4  (0,7)=4  (1,5)=4  (2,6)=4  (3,5)=4  (4,14)=4  (6,0)=4  (6,4)=4  (6,5)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
! size mismatch, 10x10 instead of 6x9

TRAIN 5daaa586.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  [0]: a rectangle at (0,3) with size (13,3) and color blue and mask 1001101011001001001001101001001001101
  [01]: a rectangle at (13,0) with size (1,15) and color cyan and mask full
  [011]: a rectangle at (0,12) with size (16,1) and color red and mask full
  [0111]: a rectangle at (2,0) with size (1,15) and color green and mask full
diff: 
delta: (0,9)=1  (1,7)=1  (3,0)=1  (4,10)=1  (5,0)=1  (6,8)=1  (6,14)=1  (7,10)=1  (8,9)=1  (9,1)=1  (10,7)=1  (11,1)=1  (14,3)=1  (14,4)=1  (15,3)=1  (15,6)=1 
! size mismatch, 10x10 instead of 12x10

TEST 5daaa586.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9431.0 bits (9431.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-262] Checking task 60b61512.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4870.1 = 4879.0
DL output with Mo: L = 9.0 + 6789.7 = 6798.7
DL input+output M: L = 17.9 + 11659.8 = 11677.7

# learning a model for train pairs
11677.7	
9695.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7860.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6533.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5624.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5120.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4747.6	OUT DEF: size={size}
4452.3	OUT DEF: layer[01].size={layer[0].size}
4246.3	OUT DEF: layer[01].pos={layer[01].pos}
4050.4	OUT DEF: layer[0].size={layer[0].size}
3511.9	OUT DEF: layer[0]={layer[0]}
3358.8	OUT DEF: layer[01]={layer[01]}
3267.3	OUT DEF: layer[011].color=orange
3175.7	IN  DEF: layer[0].color=yellow
3084.2	IN  DEF: layer[01].color=yellow
3019.0	OUT SHAPE at layer[0111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at ? with size ? and color orange and mask ?
  [0111]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color yellow and mask ?
  [01]: a rectangle at ? with size ? and color yellow and mask ?

DL input  with Mi: L = 46.0 + 1759.4 = 1805.4
DL output with Mo: L = 44.8 + 1168.8 = 1213.6
DL input+output M: L = 90.8 + 2928.2 = 3019.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask 100101111
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 101110011
diff: 
delta:
   (88.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask 100101111
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 101110011
  [011]: a rectangle at (2,0) with size (2,2) and color orange and mask full
  [0111]: a point at (4,7) with color orange
diff: 
delta: (5,5)=7# (6,6)=7#
   (76.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask 100101111
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 101110011
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,5) with size (3,3) and color yellow and mask 101110011
  [01]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
diff: 
delta: (2,0)=4  (2,2)=4  (3,2)=4 
! 11 wrong pixels (generated / expected)

TRAIN 60b61512.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask 111110111
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 10010111
diff: 
delta:
   (88.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask 111110111
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 10010111
  [011]: a rectangle at (5,5) with size (2,3) and color orange and mask full
  [0111]: a point at (2,0) with color orange
diff: 
delta:
   (40.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask 111110111
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 10010111
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (4,5) with size (3,3) and color yellow and mask 10010111
diff: 
delta: (2,0)=0 
! 7 wrong pixels (generated / expected)

TRAIN 60b61512.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (6,5) with size (3,3) and color yellow and mask 10111001
  [01]: a rectangle at (1,2) with size (3,3) and color yellow and mask 1011100
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (6,5) with size (3,3) and color yellow and mask 10111001
  [01]: a rectangle at (2,2) with size (1,2) and color yellow and mask full
diff: 
delta: (1,4)=4  (3,2)=4 
! 15 wrong pixels (generated / expected)

TEST 60b61512.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1168.8 bits (1168.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-261] Checking task 6150a2bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1853.1 = 1862.1
DL output with Mo: L = 9.0 + 1853.1 = 1862.1
DL input+output M: L = 17.9 + 3706.2 = 3724.1

# learning a model for train pairs
3724.1	
3402.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3079.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2833.2	OUT DEF: size={size}
2653.5	OUT DEF: layer[0].size={layer[0].size}
2560.0	OUT DEF: layer[0].color={layer[0].color}
2503.7	OUT SHAPE at layer[01]: a point at ? with color ?
2435.4	OUT SHAPE at layer[011]: a point at ? with color ?
2379.9	IN  SHAPE at layer[01]: a point at ? with color ?
2286.9	OUT DEF: layer[01].color={layer[01].color}
2219.7	IN  SHAPE at layer[011]: a point at ? with color ?
2127.0	OUT DEF: layer[011].color={layer[011].color}
2079.3	OUT DEF: layer[0].mask={layer[0].mask}
2031.8	IN  DEF: layer[0].mask=full
2000.8	OUT DEF: color=black
1969.8	IN  DEF: color=black
1948.0	OUT DEF: layer[0].pos=(?,?)
1892.8	OUT DEF: layer[0].pos.j=1
1842.0	OUT DEF: layer[0].pos.i={layer[01].pos.i + 1}
1820.2	OUT DEF: layer[01].pos=(?,?)
1763.4	OUT DEF: layer[01].pos.j={layer[011].pos.j}
1707.8	OUT DEF: layer[01].pos.i={layer[0].size.i}
1686.0	OUT DEF: layer[011].pos=(?,?)
1629.3	OUT DEF: layer[011].pos.j={layer[01].pos.j}
1573.3	OUT DEF: layer[011].pos.i={layer[011].pos.j}
1551.5	IN  DEF: size=(?,?)
1443.9	IN  DEF: size.i=3
1336.2	IN  DEF: size.j=3
1314.4	IN  DEF: layer[0].pos=(?,?)
1255.9	IN  DEF: layer[0].pos.i=0
1197.3	IN  DEF: layer[0].pos.j=0
1175.5	IN  DEF: layer[0].size=(?,?)
1090.1	IN  DEF: layer[0].size.j=2
1068.3	IN  DEF: layer[01].pos=(?,?)
1046.5	IN  DEF: layer[011].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.i + 1},1) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [01]: a point at ({layer[0].size.i},{layer[011].pos.j}) with color {layer[01].color}
  [011]: a point at ({layer[011].pos.j},{layer[01].pos.j}) with color {layer[011].color}
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (?,2) and color ? and mask full
  [01]: a point at (?,?) with color ?
  [011]: a point at (?,?) with color ?

DL input  with Mi: L = 71.4 + 738.6 = 810.0
DL output with Mo: L = 75.5 + 161.0 = 236.5
DL input+output M: L = 146.8 + 899.7 = 1046.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [01]: a point at (0,2) with color cyan
  [011]: a point at (2,0) with color grey
diff: 
delta: (1,1)=7#
   (46.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color green and mask full
  [01]: a point at (2,0) with color cyan
  [011]: a point at (0,2) with color grey
diff: 
delta: (1,1)=7#
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [01]: a point at (0,2) with color cyan
  [011]: a point at (2,0) with color grey
diff: 
delta: (1,1)=7#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [01]: a point at (2,0) with color grey
  [011]: a point at (0,2) with color cyan
diff: 
delta: (1,1)=7#
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask 111
  [01]: a point at (0,2) with color cyan
  [011]: a point at (1,1) with color orange
diff:   layer[0].mask
delta: (2,0)=5#
! 4 wrong pixels (generated / expected)

TRAIN 6150a2bd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color grey and mask full
  [01]: a point at (1,0) with color blue
  [011]: a point at (0,2) with color red
diff: 
delta:
   (27.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,1) with size (1,2) and color grey and mask full
  [01]: a point at (1,2) with color blue
  [011]: a point at (2,0) with color red
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color grey and mask full
  [01]: a point at (0,2) with color red
  [011]: a point at (1,0) with color blue
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color grey and mask full
  [01]: a point at (1,0) with color blue
  [011]: a point at (0,2) with color red
diff: 
delta:
correct output grid

TRAIN 6150a2bd.json/2: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color pink and mask full
  [01]: a point at (0,1) with color green
  [011]: a point at (0,2) with color grey
diff:   layer[0].size.j
delta: (1,1)=8  (2,0)=4 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color pink and mask full
  [01]: a point at (0,1) with color green
  [011]: a point at (1,1) with color cyan
diff:   layer[0].size.j
delta: (0,2)=5# (2,0)=4 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color pink and mask full
  [01]: a point at (0,1) with color green
  [011]: a point at (2,0) with color yellow
diff:   layer[0].size.j
delta: (0,2)=5# (1,1)=8 
! 7 wrong pixels (generated / expected)

TEST 6150a2bd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 161.0 bits (161.0 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-260] Checking task 623ea044.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1247.9 = 1256.9
DL output with Mo: L = 9.0 + 10590.8 = 10599.7
DL input+output M: L = 17.9 + 11838.7 = 11856.6

# learning a model for train pairs
11856.6	
7686.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7081.5	OUT DEF: size={size}
6963.1	IN  SHAPE at layer[0]: a point at ? with color ?
6823.1	OUT DEF: layer[0].color={layer[0].color}
6777.5	OUT DEF: color=black
6731.9	IN  DEF: color=black
6696.9	OUT DEF: layer[0].pos=(?,?)
6554.0	OUT DEF: layer[0].pos.i=0
6418.3	OUT DEF: layer[0].pos.j={layer[0].pos.i - 3}
6383.3	OUT DEF: layer[0].size=(?,?)
6101.1	OUT DEF: layer[0].size.i={size.i}
6066.1	IN  DEF: size=(?,?)
6031.1	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,{layer[0].pos.i - 3}) with size ({size.i},?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color ?

DL input  with Mi: L = 27.4 + 995.2 = 1022.6
DL output with Mo: L = 45.4 + 4963.2 = 5008.5
DL input+output M: L = 72.7 + 5958.4 = 6031.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a point at (3,3) with color red
diff: 
delta:
   (35.4 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,0) with size (15,15) and color red and mask 100000000000000010000000000000001000000000000000100000000000000010000000000000001000000000000000100000000000000010000000000000001000001000000000100010000000000010100000000000001000000000000010100000000000100010000000001000001
diff: 
delta:
   (237.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (3,3) with color red
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 623ea044.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a point at (5,11) with color orange
diff: 
delta:
   (35.4 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,2) with size (15,13) and color orange and mask 100000000000100000000000100000000000100000000000100000000000100000100000100000001000100000000010100000000000100000000000101000000000100010000000100000100000000000001000000000000010000
diff: 
delta:
   (207.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (5,11) with color orange
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 623ea044.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a point at (3,2) with color cyan
diff: 
delta:
   (28.8 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,6) and color cyan and mask 100000010001001010000100001010010001100000
diff: 
delta:
   (51.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a point at (3,2) with color cyan
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 623ea044.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a point at (7,12) with color pink
diff: 
delta:
! 53 wrong pixels (generated / expected)

TEST 623ea044.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4963.2 bits (4963.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-259] Checking task 62c24649.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3104.3 = 3113.3
DL output with Mo: L = 9.0 + 11885.7 = 11894.6
DL input+output M: L = 17.9 + 14990.0 = 15007.9

# learning a model for train pairs
15007.9	
12158.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10744.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10569.0	OUT DEF: color={color}
10431.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10157.2	OUT DEF: layer[0].pos={layer[0].pos}
10017.2	OUT DEF: layer[0].color={layer[0].color}
9937.8	IN  SHAPE at layer[00]: a point at ? with color ?
9850.7	IN  SHAPE at layer[01]: a point at ? with color ?
9780.0	OUT DEF: layer[01].mask=full
9730.4	OUT SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
9515.9	IN  SHAPE at layer[001]: a rectangle at ? with size ? and color ? and mask ?
9294.7	OUT DEF: layer[01].pos={layer[001].pos}
9080.1	OUT SHAPE at layer[010]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [00]: a rectangle at ? with size ? and color ? and mask ?
  [0]: a rectangle at {layer[0].pos} with size ? and color {layer[0].color} and mask ?
  [010]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at {layer[001].pos} with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a rectangle at ? with size ? and color ? and mask ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 62.8 + 2568.8 = 2631.6
DL output with Mo: L = 77.5 + 6371.0 = 6448.5
DL input+output M: L = 140.2 + 8939.8 = 9080.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  [00]: a point at (1,0) with color black
  [001]: a rectangle at (1,1) with size (1,2) and color red and mask full
  [0]: a rectangle at (2,0) with size (1,2) and color blue and mask full
  [01]: a point at (2,2) with color black
diff: 
delta:
   (88.0 bits)
data: a background with size (6,6) and color green and layers
  [00]: a rectangle at (2,2) with size (2,2) and color black and mask full
  [0]: a rectangle at (2,0) with size (2,6) and color blue and mask full
  [010]: a rectangle at (1,0) with size (4,1) and color black and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
diff: 
delta: (1,5)=0  (4,5)=0 
   (145.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [00]: a point at (1,0) with color black
  [001]: a rectangle at (1,1) with size (1,2) and color red and mask full
  [0]: a rectangle at (2,0) with size (1,2) and color blue and mask full
  [01]: a point at (2,2) with color black
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color green and layers
  [00]: a point at (1,0) with color black
  [001]: a rectangle at (2,0) with size (1,2) and color blue and mask full
  [0]: a rectangle at (1,1) with size (1,2) and color red and mask full
  [01]: a point at (2,2) with color black
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 62c24649.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color blue
  [001]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [0]: a rectangle at (2,1) with size (1,2) and color red and mask full
  [01]: a point at (0,2) with color blue
diff: 
delta:
   (83.5 bits)
data: a background with size (6,6) and color black and layers
  [00]: a rectangle at (5,0) with size (1,6) and color green and mask full
  [0]: a rectangle at (2,1) with size (2,4) and color red and mask full
  [010]: a rectangle at (0,2) with size (1,2) and color blue and mask full
  [01]: a rectangle at (0,0) with size (1,6) and color green and mask full
diff: 
delta: (1,0)=1  (1,1)=3  (1,4)=3  (1,5)=1  (4,0)=1  (4,1)=3  (4,4)=3  (4,5)=1  (5,2)=1  (5,3)=1 
   (267.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color blue
  [001]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [0]: a rectangle at (2,1) with size (1,2) and color red and mask full
  [01]: a point at (0,2) with color blue
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color blue
  [001]: a rectangle at (2,1) with size (1,2) and color red and mask full
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [01]: a point at (0,2) with color blue
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 62c24649.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a rectangle at (0,1) with size (1,1) and color blue and mask full
  [0]: a rectangle at (1,1) with size (2,2) and color green and mask 110
  [01]: a point at (1,1) with color red
diff: 
delta:
   (85.5 bits)
data: a background with size (6,6) and color black and layers
  [00]: a rectangle at (0,0) with size (2,2) and color red and mask 1001
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 110100110010111
  [010]: a rectangle at (4,1) with size (1,4) and color red and mask full
  [01]: a rectangle at (0,1) with size (6,1) and color blue and mask full
diff: 
delta: (0,4)=1  (0,5)=2  (1,4)=2  (5,0)=2  (5,4)=1  (5,5)=2 
   (224.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a rectangle at (1,1) with size (2,2) and color green and mask 110
  [0]: a rectangle at (0,1) with size (1,1) and color blue and mask full
  [01]: a point at (1,1) with color red
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a rectangle at (1,1) with size (2,2) and color green and mask 110
  [0]: a rectangle at (1,1) with size (1,1) and color red and mask full
  [01]: a point at (0,1) with color blue
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a rectangle at (0,1) with size (1,1) and color blue and mask full
  [0]: a rectangle at (1,1) with size (2,2) and color green and mask 110
  [01]: a point at (1,1) with color red
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 62c24649.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color black
  [001]: a rectangle at (1,0) with size (2,2) and color green and mask full
  [0]: a rectangle at (0,0) with size (1,2) and color blue and mask full
  [01]: a point at (1,2) with color red
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color black
  [001]: a rectangle at (0,0) with size (1,2) and color blue and mask full
  [0]: a rectangle at (1,0) with size (2,2) and color green and mask full
  [01]: a point at (1,2) with color red
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TEST 62c24649.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6371.0 bits (6371.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-258] Checking task 63613498.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14437.8 = 14446.8
DL output with Mo: L = 9.0 + 14437.8 = 14446.8
DL input+output M: L = 17.9 + 28875.6 = 28893.6

# learning a model for train pairs
28893.6	
26619.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24345.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22905.7	OUT DEF: layer[0]={layer[0]}
21613.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20322.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19206.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
18090.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17010.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
15886.2	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 9704.9 = 9764.7
DL output with Mo: L = 79.8 + 6041.7 = 6121.5
DL input+output M: L = 139.6 + 15746.6 = 15886.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (8,3) with size (2,4) and color cyan and mask 11110010
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 100110011
diff: 
delta: (0,7)=7# (1,6)=7# (1,7)=7# (1,8)=7# (2,7)=7# (5,5)=6  (5,6)=6  (6,0)=7# (6,1)=7# (6,2)=7# (6,6)=6  (6,7)=6  (7,2)=7# (7,7)=6 
   (398.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (8,3) with size (2,4) and color cyan and mask 11110010
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 100110011
  [0111]: a rectangle at (0,6) with size (3,3) and color orange and mask 10111010
  [01111]: a rectangle at (5,5) with size (3,3) and color grey and mask 100110011
diff: 
delta: (6,0)=7# (6,1)=7# (6,2)=7# (7,2)=7#
   (249.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (8,3) with size (2,4) and color cyan and mask 11110010
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 100110011
diff: 
delta: (0,7)=7# (1,6)=7# (1,7)=7# (1,8)=7# (2,7)=7# (5,5)=6  (5,6)=6  (6,0)=7# (6,1)=7# (6,2)=7# (6,6)=6  (6,7)=6  (7,2)=7# (7,7)=6 
! 25 wrong pixels (generated / expected)

TRAIN 63613498.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (8,0) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (6,2) with size (1,3) and color orange and mask full
diff: 
delta: (0,1)=3  (1,0)=3  (1,1)=3  (2,6)=4  (2,7)=4  (3,6)=4  (7,8)=9# (8,7)=9# (8,8)=9#
   (287.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (8,0) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (6,2) with size (1,3) and color orange and mask full
  [0111]: a rectangle at (0,0) with size (2,2) and color green and mask 1110
  [01111]: a rectangle at (2,6) with size (2,2) and color yellow and mask 111
diff: 
delta: (7,8)=5# (8,7)=5# (8,8)=5#
   (194.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (8,0) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (6,2) with size (1,3) and color orange and mask full
diff: 
delta: (0,1)=3  (1,0)=3  (1,1)=3  (2,6)=4  (2,7)=4  (3,6)=4  (7,8)=9# (8,7)=9# (8,8)=9#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,0) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [011]: a rectangle at (6,2) with size (1,3) and color orange and mask full
diff: 
delta: (0,1)=3  (1,0)=3  (1,1)=3  (2,6)=4  (2,7)=4  (3,6)=4  (7,8)=9# (8,7)=9# (8,8)=9#
! 20 wrong pixels (generated / expected)

TRAIN 63613498.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (0,0) with size (2,3) and color yellow and mask 111010
  [011]: a rectangle at (0,6) with size (2,3) and color blue and mask 111010
diff: 
delta: (4,6)=3  (5,6)=3  (5,7)=3  (6,6)=3  (7,1)=6  (7,2)=6  (7,3)=6  (8,2)=6 
   (284.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (0,0) with size (2,3) and color yellow and mask 111010
  [011]: a rectangle at (0,6) with size (2,3) and color grey and mask 111010
  [0111]: a rectangle at (7,1) with size (2,3) and color pink and mask 10111
  [01111]: a rectangle at (4,6) with size (3,2) and color green and mask 11101
diff: 
delta:
   (159.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (0,0) with size (2,3) and color yellow and mask 111010
  [011]: a rectangle at (0,6) with size (2,3) and color blue and mask 111010
diff: 
delta: (4,6)=3  (5,6)=3  (5,7)=3  (6,6)=3  (7,1)=6  (7,2)=6  (7,3)=6  (8,2)=6 
! 17 wrong pixels (generated / expected)

TRAIN 63613498.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100010001000
  [01]: a rectangle at (1,0) with size (2,3) and color red and mask 100111
  [011]: a rectangle at (6,0) with size (2,3) and color cyan and mask 1111
diff: 
delta: (0,7)=6  (1,7)=6  (1,8)=6  (2,7)=6  (3,5)=3  (4,5)=3  (5,5)=3  (5,6)=3  (6,8)=4  (7,8)=4  (8,4)=7# (8,5)=7# (8,6)=7# (8,8)=4  (9,6)=7#
! 25 wrong pixels (generated / expected)

TEST 63613498.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6041.7 bits (6041.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-257] Checking task 6430c8c4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13780.6 = 13789.6
DL output with Mo: L = 9.0 + 3495.9 = 3504.8
DL input+output M: L = 17.9 + 17276.5 = 17294.4

# learning a model for train pairs
17294.4	
13407.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10741.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9377.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8322.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7765.9	OUT DEF: size={layer[0].size}
7457.0	OUT DEF: layer[0].size={layer[0].size}
7143.0	OUT DEF: color=green
6958.2	OUT DEF: layer[0].color={color}
6773.8	IN  DEF: layer[011].color=yellow
6679.9	IN  DEF: layer[011].mask=full
6619.7	IN  DEF: color=black
6571.5	OUT DEF: layer[0].pos=(?,?)
6441.2	OUT DEF: layer[0].pos.i={layer[0].pos.j}
6309.4	OUT DEF: layer[0].pos.j={layer[0].pos.j}
6261.2	IN  DEF: size=(?,?)
5920.1	IN  DEF: size.i=9
5670.2	IN  DEF: size.j=4
5621.9	IN  DEF: layer[0].pos=(?,?)
5489.1	IN  DEF: layer[0].pos.j=0
5440.8	IN  DEF: layer[0].size=(?,?)
5191.0	IN  DEF: layer[0].size.i=4
4941.1	IN  DEF: layer[0].size.j=4
4892.8	IN  DEF: layer[01].pos=(?,?)
4844.6	IN  DEF: layer[01].size=(?,?)
4796.4	IN  DEF: layer[011].pos=(?,?)
4617.9	IN  DEF: layer[011].pos.i=4
4485.0	IN  DEF: layer[011].pos.j=0
4436.8	IN  DEF: layer[011].size=(?,?)
4186.9	IN  DEF: layer[011].size.j=4
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color green and layers
  [0]: a rectangle at ({layer[0].pos.j},{layer[0].pos.j}) with size {layer[0].size} and color {color} and mask ?
WHERE (Mi)
a background with size (9,4) and color black and layers
  [0]: a rectangle at (?,0) with size (4,4) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [011]: a rectangle at (4,0) with size (?,4) and color yellow and mask full

DL input  with Mi: L = 109.3 + 3302.0 = 3411.3
DL output with Mo: L = 42.7 + 732.9 = 775.6
DL input+output M: L = 152.0 + 4034.9 = 4186.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 110111001101011
  [01]: a rectangle at (6,0) with size (3,4) and color red and mask 100101111010
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
   (68.4 bits)
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 1111111111101011
diff: 
delta:
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 110111001101011
  [01]: a rectangle at (6,0) with size (3,4) and color red and mask 100101111010
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (6,0) with size (3,4) and color red and mask 100101111010
  [01]: a rectangle at (0,0) with size (4,4) and color orange and mask 110111001101011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff:   layer[0].size.i
delta:
! size mismatch, 3x4 instead of 4x4

TRAIN 6430c8c4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 11011011001100
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 100011010100101
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
   (73.2 bits)
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 111011011101101
diff: 
delta:
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 11011011001100
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 100011010100101
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 1010001111100100
  [01]: a rectangle at (0,1) with size (4,3) and color orange and mask 111001111100
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
   (68.4 bits)
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 1110001111101100
diff: 
delta:
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 1010001111100100
  [01]: a rectangle at (0,1) with size (4,3) and color orange and mask 111001111100
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,1) with size (4,3) and color orange and mask 111001111100
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 1010001111100100
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff:   layer[0].size.j  layer[0].pos.j
delta:
! size mismatch, 4x3 instead of 4x4

TRAIN 6430c8c4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 11110111000101
  [01]: a rectangle at (5,2) with size (1,2) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta: (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
   (120.3 bits)
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 1011110111001101
diff: 
delta:
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 11110111000101
  [01]: a rectangle at (5,2) with size (1,2) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta: (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
! 5 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 101000111101111
  [01]: a rectangle at (7,0) with size (2,4) and color red and mask 101101
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta: (5,1)=2  (5,2)=2  (5,3)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (7,0) with size (2,4) and color red and mask 101101
  [01]: a rectangle at (0,0) with size (4,4) and color orange and mask 101000111101111
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff:   layer[0].size.i
delta: (5,1)=2  (5,2)=2  (5,3)=2 
! size mismatch, 2x4 instead of 4x4

TEST 6430c8c4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 732.9 bits (732.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-256] Checking task 6455b5f5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 32810.7 = 32819.7
DL output with Mo: L = 9.0 + 88789.9 = 88798.9
DL input+output M: L = 17.9 + 121600.7 = 121618.6

# learning a model for train pairs
121618.6	
73420.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
50597.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
28226.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20867.0	OUT DEF: layer[0].mask={layer[0].mask}
16920.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15413.3	OUT DEF: layer[0]={layer[0]}
14566.1	OUT DEF: size={size}
14381.7	OUT DEF: layer[01].color=blue
14197.2	OUT DEF: layer[011].color=cyan
14012.8	IN  DEF: layer[0].color=red
13918.9	OUT DEF: layer[01].mask=full
13825.1	OUT DEF: layer[011].mask=full
13764.9	OUT DEF: color=black
13704.7	IN  DEF: color=black
13656.5	OUT DEF: layer[01].pos=(?,?)
13608.2	OUT DEF: layer[01].size=(?,?)
13560.0	OUT DEF: layer[011].pos=(?,?)
13357.4	OUT DEF: layer[011].pos.i={layer[0].pos.i}
13309.1	OUT DEF: layer[011].size=(?,?)
13260.9	IN  DEF: size=(?,?)
13212.7	IN  DEF: layer[0].pos=(?,?)
13008.7	IN  DEF: layer[0].pos.j=0
12808.8	IN  DEF: layer[0].pos.i=0
12760.5	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,?) and color blue and mask full
  [011]: a rectangle at ({layer[0].pos.i},?) with size (?,?) and color cyan and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (0,0) with size (?,?) and color red and mask ?

DL input  with Mi: L = 45.8 + 9610.2 = 9656.0
DL output with Mo: L = 63.1 + 3041.4 = 3104.5
DL input+output M: L = 108.9 + 12651.6 = 12760.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,13) and color black and layers
  [0]: a rectangle at (0,0) with size (18,13) and color red and mask 10000000000001000000000000100000000000010000000000001000000000000100000000000010000000000001001111111111111010000100001011111110000100001001000010000100111111000010010000101111111000010000000100001000000010000110000001000010
diff: 
delta:
   (277.1 bits)
data: a background with size (18,13) and color black and layers
  [0]: a rectangle at (0,0) with size (18,13) and color red and mask 10000000000001000000000000100000000000010000000000001000000000000100000000000010000000000001001111111111111010000100001011111110000100001001000010000100111111000010010000101111111000010000000100001000000010000110000001000010
  [01]: a rectangle at (10,3) with size (8,10) and color blue and mask full
  [011]: a rectangle at (0,0) with size (1,1) and color cyan and mask full
diff: 
delta: (8,12)=8 
   (58.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,13) and color black and layers
  [0]: a rectangle at (0,0) with size (18,13) and color red and mask 10000000000001000000000000100000000000010000000000001000000000000100000000000010000000000001001111111111111010000100001011111110000100001001000010000100111111000010010000101111111000010000000100001000000010000110000001000010
diff: 
delta:
! 82 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (0,0) with size (11,13) and color red and mask 100000000000010000000000001000000000000100000000000010000000000001111100000000100000000000010000000000001000011111111100000000000010000
diff: 
delta:
   (183.2 bits)
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (0,0) with size (11,13) and color red and mask 100000000000010000000000001000000000000100000000000010000000000001111100000000100000000000010000000000001000011111111100000000000010000
  [01]: a rectangle at (2,5) with size (9,8) and color blue and mask full
  [011]: a rectangle at (0,5) with size (1,8) and color cyan and mask full
diff: 
delta:
   (42.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (0,0) with size (11,13) and color red and mask 100000000000010000000000001000000000000100000000000010000000000001111100000000100000000000010000000000001000011111111100000000000010000
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (0,4) with size (11,1) and color red and mask full
diff:   layer[0].pos.j
delta: (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=2  (1,12)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2 
! 96 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,13) and color black and layers
  [0]: a rectangle at (1,4) with size (1,9) and color red and mask full
diff:   layer[0].pos.j  layer[0].pos.i
delta: (0,4)=2  (2,4)=2  (3,4)=2  (4,4)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (6,4)=2  (7,4)=2  (8,4)=2  (9,4)=2  (10,4)=2 
! 100 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,16) and color black and layers
  [0]: a rectangle at (0,0) with size (11,16) and color red and mask 100100000000000010010000000000001001000000011111111100000000000000010000000000000001111111100000000100010000000000010001000000000001111100000000000100010000000000010001000
diff: 
delta:
   (217.4 bits)
data: a background with size (11,16) and color black and layers
  [0]: a rectangle at (0,0) with size (11,16) and color red and mask 100100000000000010010000000000001001000000011111111100000000000000010000000000000001111111100000000100010000000000010001000000000001111100000000000100010000000000010001000
  [01]: a rectangle at (0,8) with size (7,8) and color blue and mask full
  [011]: a rectangle at (0,4) with size (5,3) and color cyan and mask full
diff: 
delta: (8,8)=8  (8,9)=8  (9,8)=8  (9,9)=8  (10,8)=8  (10,9)=8 
   (160.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,16) and color black and layers
  [0]: a rectangle at (0,0) with size (11,16) and color red and mask 100100000000000010010000000000001001000000011111111100000000000000010000000000000001111111100000000100010000000000010001000000000001111100000000000100010000000000010001000
diff: 
delta:
! 78 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,16) and color black and layers
  [0]: a rectangle at (0,7) with size (11,1) and color red and mask full
diff:   layer[0].pos.j
delta: (0,3)=2  (1,3)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,3)=2  (4,3)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (7,8)=2  (7,9)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,14)=2  (7,15)=2  (8,10)=2  (9,10)=2  (10,10)=2 
! 104 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,16) and color black and layers
  [0]: a rectangle at (7,7) with size (1,9) and color red and mask full
diff:   layer[0].pos.j  layer[0].pos.i
delta: (0,3)=2  (0,7)=2  (1,3)=2  (1,7)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (3,3)=2  (3,7)=2  (4,3)=2  (4,7)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (6,7)=2  (8,7)=2  (8,10)=2  (9,7)=2  (9,10)=2  (10,7)=2  (10,10)=2 
! 110 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (0,0) with size (15,16) and color red and mask 100000000010000010000000001000001000000000100000100000000010011110000000001000001000000000111000100000000010000010000000001000001000000000100000100000000010000011111111111110001000000001000111100000000100000010000000010000001000000001000
diff: 
delta:
   (283.2 bits)
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (0,0) with size (15,16) and color red and mask 100000000010000010000000001000001000000000100000100000000010011110000000001000001000000000111000100000000010000010000000001000001000000000100000100000000010000011111111111110001000000001000111100000000100000010000000010000001000000001000
  [01]: a rectangle at (5,3) with size (10,9) and color blue and mask full
  [011]: a rectangle at (0,13) with size (2,3) and color cyan and mask full
diff: 
delta:
   (43.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (0,0) with size (15,16) and color red and mask 100000000010000010000000001000001000000000100000100000000010011110000000001000001000000000111000100000000010000010000000001000001000000000100000100000000010000011111111111110001000000001000111100000000100000010000000010000001000000001000
diff: 
delta:
! 100 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (0,12) with size (15,1) and color red and mask full
diff:   layer[0].pos.j
delta: (0,3)=2  (1,3)=2  (2,3)=2  (2,13)=2  (2,14)=2  (2,15)=2  (3,3)=2  (4,0)=2  (4,1)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (5,2)=2  (6,2)=2  (7,2)=2  (8,2)=2  (9,0)=2  (9,1)=2  (9,2)=2  (10,2)=2  (10,13)=2  (10,14)=2  (10,15)=2  (11,2)=2  (12,2)=2  (13,2)=2  (14,2)=2 
! 134 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (4,0) with size (1,13) and color red and mask full
diff:   layer[0].pos.i
delta: (0,3)=2  (0,12)=2  (1,3)=2  (1,12)=2  (2,3)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,15)=2  (3,3)=2  (3,12)=2  (5,2)=2  (5,12)=2  (6,2)=2  (6,12)=2  (7,2)=2  (7,12)=2  (8,2)=2  (8,12)=2  (9,0)=2  (9,1)=2  (9,2)=2  (9,12)=2  (10,2)=2  (10,12)=2  (10,13)=2  (10,14)=2  (10,15)=2  (11,2)=2  (11,12)=2  (12,2)=2  (12,12)=2  (13,2)=2  (13,12)=2  (14,2)=2  (14,12)=2 
! 138 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (0,0) with size (13,16) and color red and mask 1010000001000000101000000111100010100000010001111111111111111000001000000000000000100000000000000010000000000000001000000000011111100000000000000010000000000000001111111111100000100000000000000010000000000
diff: 
delta:
! 73 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (9,0) with size (1,16) and color red and mask full
diff:   layer[0].pos.i
delta: (0,10)=2  (1,10)=2  (2,0)=2  (2,1)=2  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,10)=2  (3,10)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (4,14)=2  (4,15)=2  (5,10)=2  (6,10)=2  (7,10)=2  (8,10)=2  (10,3)=2  (10,10)=2  (10,12)=2  (11,0)=2  (11,1)=2  (11,2)=2  (11,3)=2  (11,10)=2  (11,12)=2  (12,3)=2  (12,10)=2  (12,12)=2 
! 107 wrong pixels (generated / expected)

TEST 6455b5f5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3041.4 bits (3041.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-255] Checking task 662c240a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14154.6 = 14163.6
DL output with Mo: L = 9.0 + 2957.9 = 2966.9
DL input+output M: L = 17.9 + 17112.6 = 17130.5

# learning a model for train pairs
17130.5	
14929.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12886.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11624.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10754.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10204.7	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
9714.3	OUT DEF: size={layer[0].size}
9245.0	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
8801.4	OUT DEF: layer[0].size={layer[0111].size}
8707.5	IN  DEF: layer[01111].mask=full
8659.3	OUT DEF: layer[0].pos=(?,?)
8545.3	OUT DEF: layer[0].pos.j={layer[011].pos.j}
8432.5	OUT DEF: layer[0].pos.i={layer[011].pos.j}
8384.3	IN  DEF: size=(?,?)
8043.1	IN  DEF: size.i=9
7825.6	IN  DEF: size.j=3
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color ? and layers
  [0]: a rectangle at ({layer[011].pos.j},{layer[011].pos.j}) with size {layer[0111].size} and color ? and mask ?
WHERE (Mi)
a background with size (9,3) and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 103.3 + 6834.1 = 6937.4
DL output with Mo: L = 40.9 + 847.3 = 888.2
DL input+output M: L = 144.3 + 7681.4 = 7825.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111110101
  [01]: a rectangle at (6,0) with size (2,3) and color yellow and mask 11111
  [011]: a rectangle at (3,0) with size (3,3) and color red and mask 100011011
  [0111]: a rectangle at (7,0) with size (2,3) and color green and mask full
  [01111]: a rectangle at (0,0) with size (2,2) and color brown and mask full
diff: 
delta:
   (164.9 bits)
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (2,3) and color yellow and mask 11111
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111110101
  [01]: a rectangle at (6,0) with size (2,3) and color yellow and mask 11111
  [011]: a rectangle at (3,0) with size (3,3) and color red and mask 100011011
  [0111]: a rectangle at (0,0) with size (2,2) and color brown and mask full
  [01111]: a rectangle at (7,0) with size (2,3) and color green and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111110101
  [01]: a rectangle at (6,0) with size (2,3) and color yellow and mask 11111
  [011]: a rectangle at (3,0) with size (3,3) and color red and mask 100011011
  [0111]: a rectangle at (7,0) with size (2,3) and color green and mask full
  [01111]: a rectangle at (0,0) with size (2,2) and color brown and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,3) and color grey and layers
  [0]: a rectangle at (3,0) with size (3,3) and color green and mask 1101111
  [01]: a rectangle at (0,0) with size (3,3) and color blue and mask 110110001
  [011]: a rectangle at (7,1) with size (2,2) and color red and mask full
  [0111]: a rectangle at (4,1) with size (2,2) and color pink and mask full
  [01111]: a rectangle at (6,0) with size (3,3) and color orange and mask full
diff: 
delta:
   (158.9 bits)
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,1) with size (2,2) and color pink and mask 1101
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color grey and layers
  [0]: a rectangle at (3,0) with size (3,3) and color green and mask 1101111
  [01]: a rectangle at (0,0) with size (3,3) and color blue and mask 110110001
  [011]: a rectangle at (7,1) with size (2,2) and color red and mask full
  [0111]: a rectangle at (6,0) with size (3,3) and color orange and mask full
  [01111]: a rectangle at (4,1) with size (2,2) and color pink and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1011111
  [01]: a rectangle at (3,0) with size (3,3) and color grey and mask 110110001
  [011]: a rectangle at (3,0) with size (3,3) and color orange and mask full
  [0111]: a rectangle at (6,0) with size (3,2) and color cyan and mask 101011
  [01111]: a rectangle at (1,1) with size (2,2) and color green and mask full
diff: 
delta:
   (166.1 bits)
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,2) and color cyan and mask 101011
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1011111
  [01]: a rectangle at (3,0) with size (3,3) and color grey and mask 110110001
  [011]: a rectangle at (6,0) with size (3,2) and color cyan and mask 101011
  [0111]: a rectangle at (3,0) with size (3,3) and color orange and mask full
  [01111]: a rectangle at (1,1) with size (2,2) and color green and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1011111
  [01]: a rectangle at (3,0) with size (3,3) and color grey and mask 110110001
  [011]: a rectangle at (3,0) with size (3,3) and color orange and mask full
  [0111]: a rectangle at (6,0) with size (3,2) and color cyan and mask 101011
  [01111]: a rectangle at (1,1) with size (2,2) and color green and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1011111
  [01]: a rectangle at (3,0) with size (3,3) and color grey and mask 110110001
  [011]: a rectangle at (6,0) with size (3,2) and color cyan and mask 101011
  [0111]: a rectangle at (1,1) with size (2,2) and color green and mask full
  [01111]: a rectangle at (3,0) with size (3,3) and color orange and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,3) and color cyan and layers
  [0]: a rectangle at (6,0) with size (3,3) and color red and mask 11111110
  [01]: a rectangle at (0,0) with size (3,3) and color yellow and mask 11111100
  [011]: a rectangle at (3,0) with size (2,2) and color blue and mask 111
  [0111]: a rectangle at (3,0) with size (3,3) and color green and mask full
  [01111]: a rectangle at (6,0) with size (1,1) and color pink and mask full
diff: 
delta: (5,2)=1  (8,2)=6 
   (193.5 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 11111100
diff: 
delta:
   (23.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color cyan and layers
  [0]: a rectangle at (6,0) with size (3,3) and color red and mask 11111110
  [01]: a rectangle at (0,0) with size (3,3) and color yellow and mask 11111100
  [011]: a rectangle at (3,0) with size (2,2) and color blue and mask 111
  [0111]: a rectangle at (3,0) with size (3,3) and color green and mask full
  [01111]: a rectangle at (6,0) with size (1,1) and color pink and mask full
diff: 
delta: (5,2)=1  (8,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color cyan and layers
  [0]: a rectangle at (6,0) with size (3,3) and color red and mask 11111110
  [01]: a rectangle at (0,0) with size (3,3) and color yellow and mask 11111100
  [011]: a rectangle at (3,0) with size (2,2) and color blue and mask 111
  [0111]: a rectangle at (5,2) with size (1,1) and color blue and mask full
  [01111]: a rectangle at (3,0) with size (3,3) and color green and mask full
diff: 
delta: (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 101101110
  [01]: a rectangle at (3,0) with size (3,3) and color green and mask 100011011
  [011]: a rectangle at (3,0) with size (3,3) and color red and mask full
  [0111]: a rectangle at (0,0) with size (3,2) and color grey and mask full
  [01111]: a rectangle at (7,1) with size (2,2) and color cyan and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 101101110
  [01]: a rectangle at (3,0) with size (3,3) and color green and mask 100011011
  [011]: a rectangle at (7,1) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (6,0) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (0,0) with size (3,2) and color grey and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 662c240a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 847.3 bits (847.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-254] Checking task 67385a82.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5275.2 = 5284.2
DL output with Mo: L = 9.0 + 5509.2 = 5518.1
DL input+output M: L = 17.9 + 10784.4 = 10802.3

# learning a model for train pairs
10802.3	
8335.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6780.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6208.2	OUT DEF: size={size}
5812.6	OUT DEF: layer[0].mask={layer[0].mask}
4717.5	OUT DEF: layer[0]={layer[0]}
4403.5	OUT DEF: color=cyan
4089.5	IN  DEF: color=green
3905.1	IN  DEF: layer[0].color=black
3856.8	IN  DEF: size=(?,?)
3808.6	IN  DEF: layer[0].pos=(?,?)
3671.1	IN  DEF: layer[0].pos.j=0
3542.0	IN  DEF: layer[0].pos.i=0
3493.8	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color cyan and layers
  [0]: {layer[0]}
WHERE (Mi)
a background with size (?,?) and color green and layers
  [0]: a rectangle at (0,0) with size (?,?) and color black and mask ?

DL input  with Mi: L = 52.3 + 1920.9 = 1973.1
DL output with Mo: L = 17.0 + 1503.7 = 1520.7
DL input+output M: L = 69.2 + 3424.6 = 3493.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 10101100
diff: 
delta:
   (33.3 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 10101100
diff: 
delta: (2,0)=3  (2,2)=3 
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 10101100
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 101010011
diff:   color  layer[0].color
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,2) with size (2,1) and color black and mask full
diff:   layer[0].pos.j
delta: (1,0)=0  (2,1)=0 
! 4 wrong pixels (generated / expected)

TRAIN 67385a82.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,6) and color green and layers
  [0]: a rectangle at (0,0) with size (4,6) and color black and mask 111101101111110001011101
diff: 
delta:
   (53.9 bits)
data: a background with size (4,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,6) and color black and mask 111101101111110001011101
diff: 
delta: (0,5)=3  (2,4)=3  (3,1)=3 
   (50.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,6) and color green and layers
  [0]: a rectangle at (0,0) with size (4,6) and color black and mask 111101101111110001011101
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,6) and color black and layers
  [0]: a rectangle at (0,1) with size (3,4) and color green and mask 100001110001
diff:   color  layer[0].color  layer[0].pos.j
delta: (0,5)=3  (3,1)=3 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,6) and color black and layers
  [0]: a rectangle at (0,1) with size (2,1) and color green and mask full
diff:   color  layer[0].color  layer[0].pos.j
delta: (0,5)=3  (1,2)=3  (1,3)=3  (2,4)=3  (3,1)=3 
! 22 wrong pixels (generated / expected)

TRAIN 67385a82.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 11011011000100
diff: 
delta:
   (43.6 bits)
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 11011011000100
diff: 
delta: (0,3)=3 
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 11011011000100
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,2) with size (3,1) and color black and mask full
diff:   layer[0].pos.j
delta: (1,3)=0  (2,1)=0  (3,0)=0  (3,1)=0 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (3,0) with size (1,2) and color black and mask full
diff:   layer[0].pos.i
delta: (0,2)=0  (1,2)=0  (1,3)=0  (2,1)=0  (2,2)=0 
! 6 wrong pixels (generated / expected)

TRAIN 67385a82.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,6) and color green and layers
  [0]: a rectangle at (0,0) with size (5,6) and color black and mask 11001111001111110101101111100
diff: 
delta:
   (61.2 bits)
data: a background with size (5,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (5,6) and color black and mask 11001111001111110101101111100
diff: 
delta: (1,4)=3  (2,0)=3  (4,5)=3 
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color green and layers
  [0]: a rectangle at (0,0) with size (5,6) and color black and mask 11001111001111110101101111100
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  [0]: a rectangle at (0,0) with size (5,3) and color green and mask 110110001010011
diff:   color  layer[0].color
delta: (1,4)=3  (4,5)=3 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color green and mask full
diff:   color  layer[0].color
delta: (1,1)=3  (1,4)=3  (2,0)=3  (3,1)=3  (3,2)=3  (4,1)=3  (4,2)=3  (4,5)=3 
! 25 wrong pixels (generated / expected)

TRAIN 67385a82.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  [0]: a rectangle at (0,0) with size (5,5) and color black and mask 1100111001011111100001010
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color green and mask 111101
diff:   color  layer[0].color
delta: (0,4)=3  (2,4)=3  (3,1)=3  (3,2)=3  (4,1)=3  (4,2)=3 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color green and mask full
diff:   color  layer[0].color
delta: (0,1)=0  (0,4)=3  (2,4)=3  (3,1)=3  (3,2)=3  (4,1)=3  (4,2)=3 
! 21 wrong pixels (generated / expected)

TEST 67385a82.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1503.7 bits (1503.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-253] Checking task 673ef223.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7545.4 = 7554.4
DL output with Mo: L = 9.0 + 21897.6 = 21906.6
DL input+output M: L = 17.9 + 29443.0 = 29461.0

# learning a model for train pairs
29461.0	
24094.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20911.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18580.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16656.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14686.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14056.4	OUT DEF: size={size}
13636.5	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 3616.5 = 3659.9
DL output with Mo: L = 75.9 + 9900.8 = 9976.6
DL input+output M: L = 119.2 + 13517.3 = 13636.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,8) and color black and layers
  [0]: a rectangle at (1,0) with size (4,1) and color red and mask full
  [01]: a rectangle at (11,7) with size (4,1) and color red and mask full
diff: 
delta: (3,4)=8 
   (98.4 bits)
data: a background with size (19,8) and color black and layers
  [0]: a rectangle at (13,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (4,1) and color red and mask full
  [011]: a rectangle at (3,1) with size (1,3) and color cyan and mask full
  [0111]: a rectangle at (11,7) with size (4,1) and color red and mask full
diff: 
delta: (3,4)=4 
   (135.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,8) and color black and layers
  [0]: a rectangle at (1,0) with size (4,1) and color red and mask full
  [01]: a rectangle at (11,7) with size (4,1) and color red and mask full
diff: 
delta: (3,4)=8 
! 22 wrong pixels (generated / expected)

TRAIN 673ef223.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (1,0) with size (5,1) and color red and mask full
  [01]: a rectangle at (11,9) with size (5,1) and color red and mask full
diff: 
delta: (2,7)=8  (4,5)=8 
   (121.4 bits)
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (12,0) with size (3,9) and color cyan and mask full
  [01]: a rectangle at (2,1) with size (1,6) and color cyan and mask full
  [011]: a rectangle at (1,0) with size (5,1) and color red and mask full
  [0111]: a rectangle at (11,9) with size (5,1) and color red and mask full
diff: 
delta: (2,7)=4  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=4  (13,0)=0  (13,1)=0  (13,2)=0  (13,3)=0  (13,4)=0  (13,5)=0  (13,6)=0  (13,7)=0  (13,8)=0 
   (410.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (1,0) with size (5,1) and color red and mask full
  [01]: a rectangle at (11,9) with size (5,1) and color red and mask full
diff: 
delta: (2,7)=8  (4,5)=8 
! 43 wrong pixels (generated / expected)

TRAIN 673ef223.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (3,9) with size (6,1) and color red and mask full
  [01]: a rectangle at (13,0) with size (6,1) and color red and mask full
diff: 
delta: (4,6)=8  (5,2)=8  (7,4)=8 
   (141.9 bits)
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (14,1) with size (4,9) and color cyan and mask full
  [01]: a rectangle at (4,3) with size (2,6) and color cyan and mask 111111110000
  [011]: a rectangle at (3,9) with size (6,1) and color red and mask full
  [0111]: a rectangle at (13,0) with size (6,1) and color red and mask full
diff: 
delta: (4,6)=4  (5,2)=4  (7,4)=4  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,9)=0 
   (444.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (3,9) with size (6,1) and color red and mask full
  [01]: a rectangle at (13,0) with size (6,1) and color red and mask full
diff: 
delta: (4,6)=8  (5,2)=8  (7,4)=8 
! 58 wrong pixels (generated / expected)

TRAIN 673ef223.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,12) and color black and layers
  [0]: a rectangle at (1,0) with size (6,1) and color red and mask full
  [01]: a rectangle at (14,11) with size (6,1) and color red and mask full
diff: 
delta: (2,8)=8  (3,7)=8  (5,4)=8 
! 67 wrong pixels (generated / expected)

TEST 673ef223.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9900.8 bits (9900.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-252] Checking task 6773b310.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 38079.5 = 38088.4
DL output with Mo: L = 9.0 + 2104.1 = 2113.1
DL input+output M: L = 17.9 + 40183.6 = 40201.5

# learning a model for train pairs
40201.5	
17838.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13026.0	IN  DEF: layer[0].mask=1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
12818.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12634.5	IN  DEF: layer[0].color=cyan
12450.1	IN  DEF: layer[01].color=pink
12319.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12135.4	OUT DEF: layer[0].color=blue
12040.8	IN  SHAPE at layer[011]: a point at ? with color ?
11856.3	IN  DEF: layer[011].color=pink
11760.2	IN  SHAPE at layer[0111]: a point at ? with color ?
11575.8	IN  DEF: layer[0111].color=pink
11477.9	IN  SHAPE at layer[010]: a point at ? with color ?
11293.4	IN  DEF: layer[010].color=pink
11211.7	OUT SHAPE at layer[01]: a point at ? with color ?
11027.3	OUT DEF: layer[01].color=blue
10933.4	OUT DEF: layer[0].mask=full
10873.2	OUT DEF: color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color blue and mask full
  [01]: a point at ? with color blue
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at ? with color pink
  [01]: a rectangle at ? with size ? and color pink and mask ?
  [011]: a point at ? with color pink
  [0111]: a point at ? with color pink

DL input  with Mi: L = 198.9 + 9296.1 = 9495.0
DL output with Mo: L = 36.5 + 1341.7 = 1378.2
DL input+output M: L = 235.4 + 10637.9 = 10873.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,0) with color pink
  [01]: a rectangle at (1,9) with size (2,2) and color pink and mask 110
  [011]: a point at (1,5) with color pink
  [0111]: a point at (2,2) with color pink
diff: 
delta: (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
   (242.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color blue and mask full
  [01]: a point at (0,2) with color blue
diff: 
delta:
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (1,0) with color pink
  [01]: a rectangle at (1,9) with size (2,2) and color pink and mask 110
  [011]: a point at (1,5) with color pink
  [0111]: a point at (2,2) with color pink
diff: 
delta: (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 6773b310.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,0) with color pink
  [01]: a rectangle at (6,6) with size (1,3) and color pink and mask full
  [011]: a point at (1,6) with color pink
  [0111]: a point at (1,10) with color pink
diff: 
delta: (4,0)=6  (5,9)=6  (9,0)=6  (10,1)=6  (10,5)=6  (10,10)=6 
   (219.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,2) with size (1,1) and color blue and mask full
  [01]: a point at (2,0) with color blue
diff: 
delta:
   (32.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,0) with color pink
  [01]: a rectangle at (6,6) with size (1,3) and color pink and mask full
  [011]: a point at (1,6) with color pink
  [0111]: a point at (1,10) with color pink
diff: 
delta: (4,0)=6  (5,9)=6  (9,0)=6  (10,1)=6  (10,5)=6  (10,10)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 6773b310.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,5) with color pink
  [01]: a rectangle at (0,9) with size (2,2) and color pink and mask 110
  [011]: a point at (2,1) with color pink
  [0111]: a point at (2,5) with color pink
diff: 
delta: (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
   (242.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,2) and color blue and mask full
  [01]: a point at (2,2) with color blue
diff: 
delta:
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,5) with color pink
  [01]: a rectangle at (0,9) with size (2,2) and color pink and mask 110
  [011]: a point at (2,1) with color pink
  [0111]: a point at (2,5) with color pink
diff: 
delta: (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 6773b310.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,10) with color pink
  [01]: a rectangle at (4,5) with size (2,2) and color pink and mask 1001
  [011]: a point at (1,2) with color pink
  [0111]: a point at (1,8) with color pink
diff: 
delta: (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
   (224.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,2) with size (1,1) and color blue and mask full
  [01]: a point at (1,1) with color blue
diff: 
delta:
   (32.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,10) with color pink
  [01]: a rectangle at (4,5) with size (2,2) and color pink and mask 1001
  [011]: a point at (1,2) with color pink
  [0111]: a point at (1,8) with color pink
diff: 
delta: (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 6773b310.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color cyan and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [010]: a point at (0,8) with color pink
  [01]: a rectangle at (5,4) with size (2,2) and color pink and mask 110
  [011]: a point at (0,10) with color pink
  [0111]: a point at (1,1) with color pink
diff: 
delta: (1,6)=6  (4,9)=6  (5,2)=6  (6,10)=6  (8,2)=6  (9,0)=6  (9,9)=6  (10,5)=6 
! size mismatch, 10x10 instead of 3x3

TEST 6773b310.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1341.7 bits (1341.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-251] Checking task 67a3c6ac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11961.5 = 11970.5
DL output with Mo: L = 9.0 + 11961.5 = 11970.5
DL input+output M: L = 17.9 + 23923.1 = 23941.0

# learning a model for train pairs
23941.0	
21094.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18248.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17112.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15975.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15443.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14910.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14436.3	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 7395.6 = 7455.4
DL output with Mo: L = 59.9 + 6921.0 = 6980.9
DL input+output M: L = 119.7 + 14316.6 = 14436.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,0) with size (2,3) and color pink and mask full
  [01]: a rectangle at (2,0) with size (2,3) and color orange and mask 10101
  [011]: a rectangle at (3,0) with size (1,1) and color blue and mask full
diff: 
delta: (1,1)=1 
   (117.9 bits)
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,1) with size (2,3) and color pink and mask full
  [01]: a rectangle at (2,1) with size (2,3) and color orange and mask 10101
  [011]: a rectangle at (3,3) with size (1,1) and color blue and mask full
diff: 
delta: (1,2)=1 
   (103.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,0) with size (2,3) and color pink and mask full
  [01]: a rectangle at (2,0) with size (2,3) and color orange and mask 10101
  [011]: a rectangle at (3,0) with size (1,1) and color blue and mask full
diff: 
delta: (1,1)=1 
! 16 wrong pixels (generated / expected)

TRAIN 67a3c6ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,6) and color orange and mask 100101011100000011110010000111
  [01]: a rectangle at (2,3) with size (4,4) and color red and mask 11111011110010
  [011]: a rectangle at (2,0) with size (3,3) and color red and mask full
diff: 
delta: (0,6)=2  (1,2)=1  (1,3)=1  (1,6)=1  (2,3)=1  (4,3)=1  (5,5)=1  (5,6)=1  (6,1)=2 
   (318.4 bits)
data: a background with size (7,7) and color pink and layers
  [0]: a rectangle at (0,1) with size (5,6) and color orange and mask 101001001110110000010011111000
  [01]: a rectangle at (2,0) with size (4,4) and color red and mask 1100011111110100
  [011]: a rectangle at (2,4) with size (3,3) and color red and mask full
diff: 
delta: (0,0)=2  (1,0)=1  (1,3)=1  (1,4)=1  (2,3)=1  (4,3)=1  (5,0)=1  (5,1)=1  (6,5)=2 
   (301.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,6) and color orange and mask 100101011100000011110010000111
  [01]: a rectangle at (2,3) with size (4,4) and color red and mask 11111011110010
  [011]: a rectangle at (2,0) with size (3,3) and color red and mask full
diff: 
delta: (0,6)=2  (1,2)=1  (1,3)=1  (1,6)=1  (2,3)=1  (4,3)=1  (5,5)=1  (5,6)=1  (6,1)=2 
! 49 wrong pixels (generated / expected)

TRAIN 67a3c6ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 10100101010010001
  [01]: a rectangle at (3,3) with size (3,3) and color orange and mask 110010001
  [011]: a rectangle at (0,3) with size (1,3) and color blue and mask full
diff: 
delta: (0,2)=7# (1,2)=7# (1,3)=7# (1,5)=6  (2,3)=6  (2,5)=1  (3,4)=6  (4,1)=7# (4,5)=1  (5,2)=6 
   (303.3 bits)
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (0,3) with size (6,3) and color blue and mask 10001101010010100
  [01]: a rectangle at (3,0) with size (3,3) and color orange and mask 11010100
  [011]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta: (0,3)=7# (1,0)=6  (1,2)=7# (1,3)=7# (2,0)=1  (2,2)=6  (3,1)=6  (4,0)=1  (4,4)=7# (5,3)=6 
   (287.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (0,0) with size (6,3) and color blue and mask 10100101010010001
  [01]: a rectangle at (3,3) with size (3,3) and color orange and mask 110010001
  [011]: a rectangle at (0,3) with size (1,3) and color blue and mask full
diff: 
delta: (0,2)=7# (1,2)=7# (1,3)=7# (1,5)=6  (2,3)=6  (2,5)=1  (3,4)=6  (4,1)=7# (4,5)=1  (5,2)=6 
! 36 wrong pixels (generated / expected)

TRAIN 67a3c6ac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (2,1) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color orange and mask 1001
  [011]: a rectangle at (0,2) with size (1,1) and color blue and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 67a3c6ac.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6921.0 bits (6921.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-250] Checking task 67a423a3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6093.9 = 6102.9
DL output with Mo: L = 9.0 + 7647.8 = 7656.7
DL input+output M: L = 17.9 + 13741.7 = 13759.6

# learning a model for train pairs
13759.6	
11113.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8963.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7200.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6271.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5467.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4984.6	OUT DEF: size={size}
4652.9	OUT DEF: layer[0].mask=111101111
4513.8	OUT DEF: layer[011].color={layer[01].color}
4375.0	OUT DEF: layer[01].color={layer[0].color}
4237.0	OUT DEF: layer[0].color=yellow
4166.3	OUT DEF: layer[01].mask=full
4095.7	OUT DEF: layer[011].mask=full
4025.0	IN  DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color yellow and mask 111101111
  [01]: a rectangle at ? with size ? and color {layer[0].color} and mask full
  [011]: a rectangle at ? with size ? and color {layer[01].color} and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 42.4 + 2077.1 = 2119.4
DL output with Mo: L = 67.6 + 1838.0 = 1905.6
DL input+output M: L = 109.9 + 3915.1 = 4025.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (1,0) with size (1,4) and color red and mask full
  [01]: a rectangle at (0,1) with size (4,1) and color green and mask full
diff: 
delta:
   (62.9 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 111101111
  [01]: a rectangle at (1,1) with size (1,3) and color red and mask full
  [011]: a rectangle at (3,1) with size (1,1) and color green and mask full
diff: 
delta:
   (52.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (1,0) with size (1,4) and color red and mask full
  [01]: a rectangle at (0,1) with size (4,1) and color green and mask full
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (2,1) with size (2,1) and color green and mask full
  [01]: a rectangle at (1,0) with size (1,4) and color red and mask full
diff: 
delta: (0,1)=3 
! 8 wrong pixels (generated / expected)

TRAIN 67a423a3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,4) with size (8,1) and color pink and mask full
  [01]: a rectangle at (4,0) with size (1,8) and color cyan and mask full
diff: 
delta:
   (74.9 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color yellow and mask 111101111
  [01]: a rectangle at (0,4) with size (8,1) and color pink and mask full
  [011]: a rectangle at (4,0) with size (1,8) and color cyan and mask full
diff: 
delta:
   (67.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,4) with size (8,1) and color pink and mask full
  [01]: a rectangle at (4,0) with size (1,8) and color cyan and mask full
diff: 
delta:
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,0) with size (1,8) and color cyan and mask full
  [01]: a rectangle at (0,4) with size (8,1) and color pink and mask full
diff: 
delta: (4,4)=6 
! 23 wrong pixels (generated / expected)

TRAIN 67a423a3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,2) with size (6,1) and color blue and mask full
  [01]: a rectangle at (2,0) with size (1,6) and color brown and mask full
diff: 
delta:
   (69.9 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color yellow and mask 111101111
  [01]: a rectangle at (0,2) with size (6,1) and color blue and mask full
  [011]: a rectangle at (2,0) with size (1,6) and color brown and mask full
diff: 
delta:
   (63.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,2) with size (6,1) and color blue and mask full
  [01]: a rectangle at (2,0) with size (1,6) and color brown and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,0) with size (1,6) and color brown and mask full
  [01]: a rectangle at (0,2) with size (6,1) and color blue and mask full
diff: 
delta: (2,2)=1 
! 18 wrong pixels (generated / expected)

TRAIN 67a423a3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,8) with size (12,1) and color grey and mask full
  [01]: a rectangle at (6,0) with size (1,12) and color green and mask full
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,0) with size (1,12) and color green and mask full
  [01]: a rectangle at (0,8) with size (12,1) and color grey and mask full
diff: 
delta: (6,8)=5#
! 31 wrong pixels (generated / expected)

TEST 67a423a3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1838.0 bits (1838.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-249] Checking task 67e8384a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3689.7 = 3698.7
DL output with Mo: L = 9.0 + 13550.6 = 13559.5
DL input+output M: L = 17.9 + 17240.3 = 17258.2

# learning a model for train pairs
17258.2	
13997.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12703.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11958.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11725.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11539.5	OUT DEF: layer[0].color={color}
11417.2	IN  SHAPE at layer[01]: a point at ? with color ?
11051.6	OUT DEF: layer[01].pos={layer[01].pos}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color {color} and mask ?
  [01]: a rectangle at {layer[01].pos} with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 36.7 + 3305.9 = 3342.6
DL output with Mo: L = 60.2 + 7648.8 = 7709.0
DL input+output M: L = 96.9 + 10954.7 = 11051.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,1) with size (3,2) and color yellow and mask 110110
  [01]: a point at (0,0) with color grey
diff: 
delta: (1,2)=5#
   (79.4 bits)
data: a background with size (6,6) and color grey and layers
  [0]: a rectangle at (0,4) with size (6,2) and color green and mask 11010101001
  [01]: a rectangle at (0,0) with size (6,2) and color green and mask 100101010110
  [011]: a rectangle at (0,1) with size (6,4) and color yellow and mask 111110011111111110011111
diff: 
delta:
   (148.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,1) with size (3,2) and color yellow and mask 110110
  [01]: a point at (0,0) with color grey
diff: 
delta: (1,2)=5#
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,1) with size (3,2) and color yellow and mask 110110
  [01]: a point at (1,2) with color grey
diff: 
delta: (0,0)=5#
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,2) and color green and mask 10110
  [01]: a point at (0,0) with color grey
diff: 
delta: (1,2)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask 1101
  [01]: a point at (0,2) with color grey
diff: 
delta: (2,0)=5# (2,1)=3 
   (91.5 bits)
data: a background with size (6,6) and color orange and layers
  [0]: a rectangle at (0,1) with size (6,4) and color blue and mask 100101100110011001101001
  [01]: a rectangle at (0,2) with size (6,2) and color grey and mask full
  [011]: a rectangle at (2,1) with size (2,4) and color green and mask full
diff: 
delta: (2,0)=5# (2,5)=5# (3,0)=5# (3,5)=5#
   (192.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask 1101
  [01]: a point at (0,2) with color grey
diff: 
delta: (2,0)=5# (2,1)=3 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask 1101
  [01]: a point at (2,0) with color grey
diff: 
delta: (0,2)=5# (2,1)=3 
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask 1101
  [01]: a point at (2,1) with color green
diff: 
delta: (0,2)=5# (2,0)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
  [01]: a point at (1,1) with color pink
diff: 
delta: (1,2)=4 
   (68.2 bits)
data: a background with size (6,6) and color grey and layers
  [0]: a rectangle at (0,0) with size (6,6) and color red and mask 101101100001111111111111100001101101
  [01]: a rectangle at (1,1) with size (4,1) and color pink and mask full
  [011]: a rectangle at (1,2) with size (4,2) and color yellow and mask full
diff: 
delta: (1,4)=6  (4,4)=6 
   (168.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
  [01]: a point at (1,1) with color pink
diff: 
delta: (1,2)=4 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
  [01]: a point at (1,2) with color yellow
diff: 
delta: (1,1)=6 
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (1,1) and color pink and mask full
  [01]: a point at (0,1) with color grey
diff: 
delta: (1,2)=4 
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 110
  [01]: a point at (2,2) with color pink
diff: 
delta: (1,1)=8  (2,0)=8 
   (91.5 bits)
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (0,1) with size (6,4) and color blue and mask 11001101001100101100110
  [01]: a rectangle at (2,2) with size (2,2) and color pink and mask full
  [011]: a rectangle at (2,0) with size (2,6) and color cyan and mask full
diff: 
delta: (0,0)=1  (0,5)=1  (1,1)=8  (1,4)=8  (4,1)=8  (4,4)=8  (5,0)=1  (5,5)=1 
   (256.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 110
  [01]: a point at (1,1) with color cyan
diff: 
delta: (2,0)=8  (2,2)=6 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 110
  [01]: a point at (2,0) with color cyan
diff: 
delta: (1,1)=8  (2,2)=6 
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 110
  [01]: a point at (2,2) with color pink
diff: 
delta: (1,1)=8  (2,0)=8 
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,2) and color pink and mask full
  [01]: a point at (0,0) with color blue
diff: 
delta: (1,0)=5#
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,2) and color pink and mask full
  [01]: a point at (1,0) with color grey
diff: 
delta: (0,0)=1 
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,0) with size (2,3) and color red and mask full
  [01]: a point at (0,0) with color blue
diff: 
delta: (1,0)=5#
! size mismatch, 10x10 instead of 6x6

TEST 67e8384a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7648.8 bits (7648.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-248] Checking task 681b3aeb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5566.0 = 5575.0
DL output with Mo: L = 9.0 + 2292.2 = 2301.1
DL input+output M: L = 17.9 + 7858.2 = 7876.1

# learning a model for train pairs
7876.1	
6098.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5058.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4297.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3975.4	OUT DEF: layer[0].size={layer[0].size}
3737.3	OUT DEF: color={layer[01].color}
3507.1	OUT DEF: layer[0].mask={layer[0].mask}
3367.6	OUT DEF: layer[0].color={layer[0].color}
3322.0	IN  DEF: color=black
3287.0	OUT DEF: size=(?,?)
3124.4	OUT DEF: size.i=3
2961.8	OUT DEF: size.j=3
2926.8	OUT DEF: layer[0].pos=(?,?)
2839.2	OUT DEF: layer[0].pos.i=0
2751.6	OUT DEF: layer[0].pos.j=0
2716.6	IN  DEF: size=(?,?)
2453.2	IN  DEF: size.i=10
2189.9	IN  DEF: size.j=10
2154.9	IN  DEF: layer[0].pos=(?,?)
2119.9	IN  DEF: layer[0].size=(?,?)
2084.9	IN  DEF: layer[01].pos=(?,?)
2049.8	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color {layer[01].color} and layers
  [0]: a rectangle at (0,0) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 76.0 + 1934.0 = 2010.0
DL output with Mo: L = 39.8 + 0.0 = 39.8
DL input+output M: L = 115.8 + 1934.0 = 2049.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (3,2) and color green and mask 10111
  [01]: a rectangle at (7,8) with size (3,2) and color orange and mask 111110
diff: 
delta:
   (64.1 bits)
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,0) with size (3,2) and color green and mask 10111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,8) with size (3,2) and color orange and mask 111110
  [01]: a rectangle at (2,1) with size (3,2) and color green and mask 10111
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (3,2) and color green and mask 10111
  [01]: a rectangle at (7,8) with size (3,2) and color orange and mask 111110
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (3,3) and color pink and mask 100110111
  [01]: a rectangle at (0,8) with size (2,2) and color yellow and mask 1101
diff: 
delta:
   (65.1 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color pink and mask 100110111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (3,3) and color pink and mask 100110111
  [01]: a rectangle at (0,8) with size (2,2) and color yellow and mask 1101
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,1) with size (2,3) and color blue and mask 101111
  [01]: a rectangle at (4,3) with size (2,3) and color green and mask 111010
diff: 
delta:
   (64.1 bits)
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 101111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,1) with size (2,3) and color blue and mask 101111
  [01]: a rectangle at (4,3) with size (2,3) and color green and mask 111010
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,7) with size (3,3) and color cyan and mask 111001011
  [01]: a rectangle at (2,3) with size (2,2) and color red and mask 1110
diff: 
delta:
correct output grid

TEST 681b3aeb.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-247] Checking task 6855a6e4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13522.9 = 13531.9
DL output with Mo: L = 9.0 + 13522.9 = 13531.9
DL input+output M: L = 17.9 + 27045.9 = 27063.8

# learning a model for train pairs
27063.8	
24026.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21128.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18255.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15359.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13279.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11824.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10754.4	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 5161.1 = 5237.2
DL output with Mo: L = 59.8 + 5457.4 = 5517.2
DL input+output M: L = 135.8 + 10618.5 = 10754.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,2) with size (2,5) and color red and mask 1000111111
  [01]: a rectangle at (10,2) with size (2,5) and color red and mask 1111110001
  [011]: a rectangle at (13,3) with size (1,3) and color grey and mask full
  [0111]: a rectangle at (0,4) with size (2,1) and color grey and mask full
diff: 
delta:
   (160.4 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,2) with size (2,5) and color red and mask 1000111111
  [01]: a rectangle at (9,3) with size (1,3) and color grey and mask full
  [011]: a rectangle at (10,2) with size (2,5) and color red and mask 1111110001
diff: 
delta: (5,4)=5# (6,4)=5#
   (174.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,2) with size (2,5) and color red and mask 1000111111
  [01]: a rectangle at (10,2) with size (2,5) and color red and mask 1111110001
  [011]: a rectangle at (13,3) with size (1,3) and color grey and mask full
  [0111]: a rectangle at (0,4) with size (2,1) and color grey and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 6855a6e4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (5,3) with size (6,2) and color red and mask 110101010111
  [01]: a rectangle at (5,10) with size (6,2) and color red and mask 111010101011
  [011]: a rectangle at (6,13) with size (4,2) and color grey and mask 1111101
  [0111]: a rectangle at (7,0) with size (2,2) and color grey and mask full
diff: 
delta:
   (178.2 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,5) with size (2,5) and color grey and mask full
  [01]: a rectangle at (5,3) with size (6,2) and color red and mask 110101010111
  [011]: a rectangle at (5,10) with size (6,2) and color red and mask 111010101011
diff: 
delta: (6,9)=5# (7,7)=0  (8,7)=0  (9,9)=5#
   (221.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (5,3) with size (6,2) and color red and mask 110101010111
  [01]: a rectangle at (5,10) with size (6,2) and color red and mask 111010101011
  [011]: a rectangle at (6,13) with size (4,2) and color grey and mask 1111101
  [0111]: a rectangle at (7,0) with size (2,2) and color grey and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 6855a6e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,3) with size (5,2) and color red and mask 1101010111
  [01]: a rectangle at (4,9) with size (5,2) and color red and mask 1110101011
  [011]: a rectangle at (5,0) with size (3,2) and color grey and mask 101110
  [0111]: a rectangle at (5,12) with size (3,2) and color grey and mask 101101
diff: 
delta:
   (177.5 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (5,5) with size (3,4) and color grey and mask 10111111001
  [01]: a rectangle at (4,3) with size (5,2) and color red and mask 1101010111
  [011]: a rectangle at (4,9) with size (5,2) and color red and mask 1110101011
diff: 
delta:
   (149.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,3) with size (5,2) and color red and mask 1101010111
  [01]: a rectangle at (4,9) with size (5,2) and color red and mask 1110101011
  [011]: a rectangle at (5,0) with size (3,2) and color grey and mask 101110
  [0111]: a rectangle at (5,12) with size (3,2) and color grey and mask 101101
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 6855a6e4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (2,7) and color red and mask 10000011111111
  [01]: a rectangle at (10,3) with size (2,7) and color red and mask 11111111000001
  [011]: a rectangle at (0,4) with size (2,5) and color grey and mask 1101101110
  [0111]: a rectangle at (13,4) with size (2,5) and color grey and mask 1111100100
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TEST 6855a6e4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5457.4 bits (5457.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-246] Checking task 68b16354.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12877.4 = 12886.3
DL output with Mo: L = 9.0 + 12877.4 = 12886.3
DL input+output M: L = 17.9 + 25754.8 = 25772.7

# learning a model for train pairs
25772.7	
24656.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23539.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22965.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
22391.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21914.2	OUT DEF: size={size}
21545.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
21055.4	OUT DEF: layer[01].size={layer[01].size}
20727.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size {layer[01].size} and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 10767.5 = 10827.3
DL output with Mo: L = 60.6 + 9839.9 = 9900.4
DL input+output M: L = 120.4 + 20607.4 = 20727.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color yellow and layers
  [0]: a rectangle at (2,1) with size (3,2) and color orange and mask 111101
  [01]: a rectangle at (1,3) with size (4,2) and color cyan and mask 10011010
  [011]: a rectangle at (0,2) with size (3,1) and color red and mask full
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
   (231.2 bits)
data: a background with size (5,5) and color yellow and layers
  [0]: a rectangle at (2,2) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,3) with size (4,2) and color cyan and mask 10100110
  [011]: a rectangle at (0,1) with size (3,2) and color orange and mask full
diff: 
delta: (0,0)=8  (1,0)=2  (1,4)=7# (2,0)=3  (4,0)=8  (4,1)=1  (4,3)=1 
   (198.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color yellow and layers
  [0]: a rectangle at (2,1) with size (3,2) and color orange and mask 111101
  [01]: a rectangle at (1,3) with size (4,2) and color cyan and mask 10011010
  [011]: a rectangle at (0,2) with size (3,1) and color red and mask full
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color yellow and layers
  [0]: a rectangle at (2,1) with size (3,2) and color orange and mask 111101
  [01]: a rectangle at (0,2) with size (3,1) and color red and mask full
  [011]: a rectangle at (1,3) with size (4,2) and color cyan and mask 10011010
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! 25 wrong pixels (generated / expected)

TRAIN 68b16354.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (1,2) and color green and mask full
  [01]: a rectangle at (2,0) with size (3,4) and color orange and mask 110000111010
  [011]: a rectangle at (1,1) with size (2,2) and color cyan and mask full
diff: 
delta: (0,0)=7# (0,4)=2  (1,2)=2  (1,3)=4  (2,0)=2  (2,4)=2  (3,2)=4  (3,4)=8  (4,0)=8 
   (259.8 bits)
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (4,1) with size (1,2) and color green and mask full
  [01]: a rectangle at (0,0) with size (3,4) and color orange and mask 101000111100
  [011]: a rectangle at (2,1) with size (2,2) and color cyan and mask full
diff: 
delta: (0,0)=8  (1,2)=4  (1,4)=8  (2,0)=2  (2,4)=2  (3,2)=2  (3,3)=4  (4,0)=7# (4,4)=2 
   (231.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (2,0) with size (3,4) and color orange and mask 110000111010
  [01]: a rectangle at (0,1) with size (1,2) and color green and mask full
  [011]: a rectangle at (1,1) with size (2,2) and color cyan and mask full
diff: 
delta: (0,0)=7# (0,4)=2  (1,2)=2  (1,3)=4  (2,0)=2  (2,4)=2  (3,2)=4  (3,4)=8  (4,0)=8 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (1,2) and color green and mask full
  [01]: a rectangle at (2,0) with size (3,4) and color orange and mask 110000111010
  [011]: a rectangle at (1,1) with size (2,2) and color cyan and mask full
diff: 
delta: (0,0)=7# (0,4)=2  (1,2)=2  (1,3)=4  (2,0)=2  (2,4)=2  (3,2)=4  (3,4)=8  (4,0)=8 
! 25 wrong pixels (generated / expected)

TRAIN 68b16354.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (2,3) with size (5,4) and color yellow and mask 10011010001101000
  [01]: a rectangle at (0,5) with size (2,2) and color green and mask full
  [011]: a rectangle at (4,3) with size (1,4) and color blue and mask full
diff: 
delta: (0,1)=7# (0,2)=4  (0,3)=3  (0,4)=4  (0,5)=8  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,2)=4  (2,3)=3  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=7# (4,1)=4  (4,2)=3  (5,0)=4  (5,1)=8  (5,2)=7# (5,5)=8  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,6)=8 
   (585.7 bits)
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (2,3) with size (2,2) and color blue and mask 111
  [01]: a rectangle at (5,5) with size (2,2) and color green and mask full
  [011]: a rectangle at (4,4) with size (2,2) and color red and mask full
diff: 
delta: (0,0)=7# (0,1)=3  (0,2)=8  (0,4)=3  (0,5)=2  (0,6)=8  (1,1)=8  (1,2)=7# (1,5)=8  (1,6)=2  (2,0)=2  (2,2)=3  (2,6)=1  (3,0)=1  (3,1)=1  (3,2)=2  (3,6)=7# (4,0)=8  (4,1)=7# (4,3)=3  (5,0)=2  (5,1)=3  (5,2)=7# (5,3)=1  (6,0)=2  (6,1)=7# (6,3)=3  (6,5)=8 
   (554.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (2,3) with size (5,4) and color yellow and mask 10011010001101000
  [01]: a rectangle at (4,3) with size (1,4) and color blue and mask full
  [011]: a rectangle at (0,5) with size (2,2) and color green and mask full
diff: 
delta: (0,1)=7# (0,2)=4  (0,3)=3  (0,4)=4  (0,5)=8  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,2)=4  (2,3)=3  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=7# (4,1)=4  (4,2)=3  (5,0)=4  (5,1)=8  (5,2)=7# (5,5)=8  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,6)=8 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (2,3) with size (5,4) and color yellow and mask 10011010001101000
  [01]: a rectangle at (0,5) with size (2,2) and color green and mask full
  [011]: a rectangle at (4,3) with size (1,4) and color blue and mask full
diff: 
delta: (0,1)=7# (0,2)=4  (0,3)=3  (0,4)=4  (0,5)=8  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,2)=4  (2,3)=3  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=7# (4,1)=4  (4,2)=3  (5,0)=4  (5,1)=8  (5,2)=7# (5,5)=8  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,6)=8 
! 49 wrong pixels (generated / expected)

TRAIN 68b16354.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (7,5) and color blue and mask 1001100000111000011011110110000100
  [01]: a rectangle at (1,5) with size (3,2) and color green and mask 101001
  [011]: a rectangle at (3,4) with size (3,2) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,1)=8  (0,3)=3  (0,4)=2  (0,6)=1  (2,5)=7# (3,2)=2  (3,3)=3  (3,5)=1  (4,4)=7# (5,0)=3  (5,1)=2  (5,2)=8  (6,2)=7# (6,4)=2  (6,5)=3 
! 49 wrong pixels (generated / expected)

TEST 68b16354.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9839.9 bits (9839.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-245] Checking task 694f12f3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14159.4 = 14168.4
DL output with Mo: L = 9.0 + 14159.4 = 14168.4
DL input+output M: L = 17.9 + 28318.8 = 28336.8

# learning a model for train pairs
28336.8	
17475.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10803.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8052.9	OUT DEF: layer[0]={layer[0]}
5608.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5023.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4579.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3910.9	OUT DEF: layer[011]={layer[01]}
3325.4	OUT SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
2940.1	OUT DEF: size={size}
2848.5	OUT DEF: layer[00].color=red
2757.0	OUT DEF: layer[01].color=blue
2665.4	IN  DEF: layer[0].color=yellow
2573.9	IN  DEF: layer[01].color=yellow
2526.4	OUT DEF: layer[00].mask=full
2479.0	OUT DEF: layer[01].mask=full
2431.6	IN  DEF: layer[0].mask=full
2384.1	IN  DEF: layer[01].mask=full
2353.1	OUT DEF: color=black
2322.1	IN  DEF: color=black
2300.3	OUT DEF: layer[00].pos=(?,?)
2214.4	OUT DEF: layer[00].pos.i={layer[0].pos.i + 1}
2128.6	OUT DEF: layer[00].pos.j={layer[0].pos.j + 1}
2106.8	OUT DEF: layer[00].size=(?,?)
1991.0	OUT DEF: layer[00].size.j={layer[01].size.i}
1902.1	OUT DEF: layer[00].size.i={layer[0].size.i - 2}
1880.3	OUT DEF: layer[01].pos=(?,?)
1794.0	OUT DEF: layer[01].pos.i={layer[01].pos.i + 1}
1707.8	OUT DEF: layer[01].pos.j={layer[01].pos.j + 1}
1686.0	OUT DEF: layer[01].size=(?,?)
1600.6	OUT DEF: layer[01].size.j=2
1542.9	OUT DEF: layer[01].size.i={layer[01].size.i - 2}
1521.1	IN  DEF: size=(?,?)
1347.5	IN  DEF: size.i=10
1173.8	IN  DEF: size.j=10
1152.0	IN  DEF: layer[0].pos=(?,?)
1130.2	IN  DEF: layer[0].size=(?,?)
1108.4	IN  DEF: layer[01].pos=(?,?)
1086.6	IN  DEF: layer[01].size=(?,?)
963.2	IN  DEF: layer[01].size.j=4

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [00]: a rectangle at ({layer[0].pos.i + 1},{layer[0].pos.j + 1}) with size ({layer[0].size.i - 2},{layer[01].size.i}) and color red and mask full
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[01].pos.i + 1},{layer[01].pos.j + 1}) with size ({layer[01].size.i - 2},2) and color blue and mask full
  [011]: {layer[01]}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color yellow and mask full
  [01]: a rectangle at (?,?) with size (?,4) and color yellow and mask full

DL input  with Mi: L = 79.6 + 767.1 = 846.7
DL output with Mo: L = 116.4 + 0.0 = 116.4
DL input+output M: L = 196.1 + 767.1 = 963.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,3) with size (4,6) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color yellow and mask full
diff: 
delta:
   (38.7 bits)
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (7,4) with size (2,4) and color red and mask full
  [0]: a rectangle at (6,3) with size (4,6) and color yellow and mask full
  [01]: a rectangle at (2,2) with size (2,2) and color blue and mask full
  [011]: a rectangle at (1,1) with size (4,4) and color yellow and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,3) with size (4,6) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color yellow and mask full
  [01]: a rectangle at (7,5) with size (3,4) and color yellow and mask full
diff: 
delta:
   (38.0 bits)
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (2,2) with size (3,3) and color red and mask full
  [0]: a rectangle at (1,1) with size (5,5) and color yellow and mask full
  [01]: a rectangle at (8,6) with size (1,2) and color blue and mask full
  [011]: a rectangle at (7,5) with size (3,4) and color yellow and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color yellow and mask full
  [01]: a rectangle at (7,5) with size (3,4) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color yellow and mask full
  [01]: a rectangle at (7,4) with size (3,6) and color yellow and mask full
diff:   layer[01].size.j
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (3,6) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (6,6) and color yellow and mask full
diff:   layer[01].size.j
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color yellow and layers
  [0]: a rectangle at (0,6) with size (7,4) and color black and mask full
  [01]: a rectangle at (6,0) with size (4,4) and color black and mask full
diff:   color  layer[01].color  layer[0].color
delta: (6,4)=0  (6,5)=0 
! 73 wrong pixels (generated / expected)

TEST 694f12f3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-244] Checking task 6a1e5592.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20282.1 = 20291.1
DL output with Mo: L = 9.0 + 20282.1 = 20291.1
DL input+output M: L = 17.9 + 40564.2 = 40582.1

# learning a model for train pairs
40582.1	
28530.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17379.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14204.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11230.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10064.9	OUT DEF: layer[0]={layer[0]}
9127.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8307.0	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7898.9	OUT DEF: size={size}
7616.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7012.6	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6779.1	OUT DEF: layer[011].size={layer[011].size}
6687.6	OUT DEF: layer[01].color=blue
6596.0	OUT DEF: layer[011].color=blue
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color blue and mask ?
  [011]: a rectangle at ? with size {layer[011].size} and color blue and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 4780.7 = 4856.8
DL output with Mo: L = 68.1 + 1671.2 = 1739.3
DL input+output M: L = 144.1 + 6451.9 = 6596.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 11111000111001011111111111101111111111111111
  [01]: a rectangle at (8,1) with size (2,3) and color grey and mask full
  [011]: a rectangle at (7,6) with size (3,3) and color grey and mask 111011001
  [0111]: a rectangle at (6,13) with size (4,1) and color grey and mask full
diff: 
delta:
   (198.9 bits)
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 11111000111001011111111111101111111111111111
  [01]: a rectangle at (2,6) with size (2,3) and color blue and mask full
  [011]: a rectangle at (1,1) with size (3,3) and color blue and mask full
  [0111]: a rectangle at (1,14) with size (4,1) and color blue and mask full
diff: 
delta:
   (67.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 11111000111001011111111111101111111111111111
  [01]: a rectangle at (8,1) with size (2,3) and color grey and mask full
  [011]: a rectangle at (7,6) with size (3,3) and color grey and mask 111011001
  [0111]: a rectangle at (6,13) with size (4,1) and color grey and mask full
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 11111000111001011111111111101111111111111111
  [01]: a rectangle at (8,1) with size (2,3) and color grey and mask full
  [011]: a rectangle at (6,13) with size (4,1) and color grey and mask full
  [0111]: a rectangle at (7,6) with size (3,3) and color grey and mask 111011001
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 11111000111001011111111111101111111111111111
  [01]: a rectangle at (7,6) with size (3,3) and color grey and mask 111011001
  [011]: a rectangle at (8,1) with size (2,3) and color grey and mask full
  [0111]: a rectangle at (6,13) with size (4,1) and color grey and mask full
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 110010001101001110011011101111111111111111111
  [01]: a rectangle at (6,0) with size (4,4) and color grey and mask 110111101100110
  [011]: a rectangle at (8,12) with size (2,3) and color grey and mask 111110
  [0111]: a rectangle at (8,6) with size (2,3) and color grey and mask 111010
diff: 
delta: (7,10)=5# (8,10)=5# (9,10)=5#
   (279.2 bits)
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 110010001101001110011011101111111111111111111
  [01]: a rectangle at (1,7) with size (4,7) and color blue and mask 110000111100011111111111111
  [011]: a rectangle at (2,0) with size (2,3) and color blue and mask full
  [0111]: a rectangle at (1,4) with size (3,1) and color blue and mask full
diff: 
delta:
   (99.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 110010001101001110011011101111111111111111111
  [01]: a rectangle at (6,0) with size (4,4) and color grey and mask 110111101100110
  [011]: a rectangle at (8,12) with size (2,3) and color grey and mask 111110
  [0111]: a rectangle at (8,6) with size (2,3) and color grey and mask 111010
diff: 
delta: (7,10)=5# (8,10)=5# (9,10)=5#
! 22 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 100011000111001111011010111101111111111111111
  [01]: a rectangle at (6,11) with size (4,3) and color grey and mask 111111111101
  [011]: a rectangle at (7,1) with size (3,4) and color grey and mask 111101110001
  [0111]: a rectangle at (6,7) with size (4,2) and color grey and mask 11011101
diff: 
delta:
! 22 wrong pixels (generated / expected)

TEST 6a1e5592.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1671.2 bits (1671.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-243] Checking task 6aa20dc0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11790.2 = 11799.1
DL output with Mo: L = 9.0 + 29326.9 = 29335.9
DL input+output M: L = 17.9 + 41117.1 = 41135.0

# learning a model for train pairs
41135.0	
28882.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
27218.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
26515.2	OUT DEF: size={size}
25814.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24370.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
23896.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 9609.6 = 9652.9
DL output with Mo: L = 59.6 + 14184.0 = 14243.6
DL input+output M: L = 103.0 + 23793.6 = 23896.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,19) and color blue and layers
  [0]: a rectangle at (0,8) with size (11,5) and color blue and mask full
  [01]: a rectangle at (7,7) with size (13,2) and color blue and mask full
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
   (442.8 bits)
data: a background with size (20,19) and color blue and layers
  [0]: a rectangle at (4,11) with size (16,8) and color blue and mask full
  [01]: a rectangle at (11,5) with size (6,6) and color cyan and mask 110000110000111100111100001111001111
  [011]: a rectangle at (1,13) with size (3,3) and color cyan and mask 1011110
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
   (499.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,19) and color blue and layers
  [0]: a rectangle at (0,8) with size (11,5) and color blue and mask full
  [01]: a rectangle at (7,7) with size (13,2) and color blue and mask full
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
! 380 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,21) and color yellow and layers
  [0]: a rectangle at (7,11) with size (3,3) and color red and mask full
  [01]: a rectangle at (13,5) with size (3,3) and color pink and mask full
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1 
   (258.8 bits)
data: a background with size (20,21) and color yellow and layers
  [0]: a rectangle at (0,14) with size (20,7) and color yellow and mask full
  [01]: a rectangle at (7,5) with size (9,9) and color blue and mask 111111000111111000111111000111000111111000111111000111000111111000111111000111111
  [011]: a rectangle at (7,11) with size (3,3) and color red and mask full
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1  (13,5)=6  (13,6)=6  (13,7)=6  (14,5)=6  (14,6)=6  (14,7)=6  (15,5)=6  (15,6)=6  (15,7)=6 
   (541.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,21) and color yellow and layers
  [0]: a rectangle at (7,11) with size (3,3) and color red and mask full
  [01]: a rectangle at (13,5) with size (3,3) and color pink and mask full
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1 
! 420 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,22) and color cyan and layers
  [0]: a rectangle at (0,8) with size (21,14) and color cyan and mask full
  [01]: a rectangle at (5,6) with size (3,3) and color green and mask 110111110
diff: 
delta: (5,6)=2  (6,8)=3  (7,8)=4  (10,13)=4  (12,15)=2  (14,7)=2  (16,5)=4 
   (259.4 bits)
data: a background with size (21,22) and color cyan and layers
  [0]: a rectangle at (0,8) with size (21,14) and color cyan and mask full
  [01]: a rectangle at (14,5) with size (3,3) and color green and mask 10111010
  [011]: a rectangle at (5,6) with size (3,3) and color green and mask 110111110
diff: 
delta: (5,6)=2  (6,8)=3  (7,8)=4  (10,13)=4  (10,14)=3  (11,13)=3  (11,14)=3  (11,15)=3  (12,14)=3  (12,15)=2  (14,7)=2  (16,5)=4 
   (377.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color cyan and layers
  [0]: a rectangle at (0,8) with size (21,14) and color cyan and mask full
  [01]: a rectangle at (5,6) with size (3,3) and color green and mask 110111110
diff: 
delta: (5,6)=2  (6,8)=3  (7,8)=4  (10,13)=4  (12,15)=2  (14,7)=2  (16,5)=4 
! 462 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color green and layers
  [0]: a rectangle at (4,8) with size (9,8) and color green and mask full
  [01]: a rectangle at (0,2) with size (15,3) and color green and mask full
diff: 
delta: (1,10)=4  (1,11)=4  (1,12)=4  (2,10)=4  (2,11)=4  (2,12)=4  (3,10)=4  (3,11)=4  (3,12)=4  (4,6)=8  (4,7)=4  (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (7,16)=1  (7,17)=1  (7,18)=1  (8,16)=1  (8,17)=1  (8,18)=1  (9,16)=1  (9,17)=1  (9,18)=1  (13,1)=1  (13,15)=1  (13,16)=1  (14,15)=1  (14,16)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 484 wrong pixels (generated / expected)

TEST 6aa20dc0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 14184.0 bits (14184.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-242] Checking task 6b9890af.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20565.2 = 20574.1
DL output with Mo: L = 9.0 + 22128.6 = 22137.6
DL input+output M: L = 17.9 + 42693.8 = 42711.8

# learning a model for train pairs
42711.8	
29239.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18864.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11436.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9386.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8787.2	OUT DEF: layer[0].mask={layer[0].mask}
8286.7	OUT DEF: layer[0].size={layer[0].size}
7782.7	OUT DEF: size={layer[0].size}
7643.2	OUT DEF: layer[0].color={layer[0].color}
7505.2	IN  DEF: layer[0].color=red
7459.6	IN  DEF: color=black
7424.6	OUT DEF: layer[0].pos=(?,?)
7300.0	OUT DEF: layer[0].pos.i=0
7175.5	OUT DEF: layer[0].pos.j=0
7140.5	OUT DEF: layer[01].pos=(?,?)
7015.9	OUT DEF: layer[01].pos.i=1
6891.3	OUT DEF: layer[01].pos.j=1
6856.3	OUT DEF: layer[01].size=(?,?)
6649.2	OUT DEF: layer[01].size.i={layer[0].size.i - 2}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color ? and layers
  [0]: a rectangle at (0,0) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [01]: a rectangle at (1,1) with size ({layer[0].size.i - 2},?) and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color red and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 42.8 + 5014.8 = 5057.6
DL output with Mo: L = 79.0 + 1512.5 = 1591.6
DL input+output M: L = 121.9 + 6527.4 = 6649.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,21) and color black and layers
  [0]: a rectangle at (7,6) with size (8,8) and color red and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (2,5) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
   (160.7 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color red and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (1,1) with size (6,6) and color cyan and mask 1100001100111111111111001100001100
diff: 
delta:
   (51.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,21) and color black and layers
  [0]: a rectangle at (7,6) with size (8,8) and color red and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (2,5) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,21) and color black and layers
  [0]: a rectangle at (2,5) with size (3,3) and color cyan and mask 10111010
  [01]: a rectangle at (7,6) with size (8,8) and color red and mask 1111111110000001100000011000000110000001100000011000000111111111
diff:   layer[0].color
delta:
! size mismatch, 3x3 instead of 8x8

TRAIN 6b9890af.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,22) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color red and mask 1111110001100011000111111
  [01]: a rectangle at (9,10) with size (3,3) and color blue and mask 110001110
diff: 
delta:
   (119.6 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color red and mask 1111110001100011000111111
  [01]: a rectangle at (1,1) with size (3,3) and color blue and mask 110001110
diff: 
delta:
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color red and mask 1111110001100011000111111
  [01]: a rectangle at (9,10) with size (3,3) and color blue and mask 110001110
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,22) and color black and layers
  [0]: a rectangle at (9,10) with size (3,3) and color blue and mask 110001110
  [01]: a rectangle at (2,2) with size (5,5) and color red and mask 1111110001100011000111111
diff:   layer[0].color
delta:
! size mismatch, 3x3 instead of 5x5

TRAIN 6b9890af.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (1,2) with size (11,11) and color red and mask 1111111111110000000001100000000011000000000110000000001100000000011000000000110000000001100000000011000000000111111111111
  [01]: a rectangle at (15,13) with size (3,3) and color yellow and mask 100101110
diff: 
delta:
   (221.2 bits)
data: a background with size (11,11) and color yellow and layers
  [0]: a rectangle at (0,0) with size (11,11) and color red and mask 1111111111110000000001100000000011000000000110000000001100000000011000000000110000000001100000000011000000000111111111111
  [01]: a rectangle at (1,1) with size (9,6) and color black and mask 111111111111111111111000111000111000000111000111000111
diff: 
delta:
   (76.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (2,3) with size (9,9) and color black and mask full
  [01]: a rectangle at (1,2) with size (11,11) and color red and mask full
diff:   layer[0].color
delta: (15,14)=4  (15,15)=4  (16,13)=4  (16,15)=4  (17,15)=4 
! size mismatch, 9x9 instead of 11x11
>> Trial 2
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (1,2) with size (11,11) and color red and mask 1111111111110000000001100000000011000000000110000000001100000000011000000000110000000001100000000011000000000111111111111
  [01]: a rectangle at (15,13) with size (3,3) and color yellow and mask 100101110
diff: 
delta:
! 57 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (15,13) with size (3,3) and color yellow and mask 100101110
  [01]: a rectangle at (1,2) with size (11,11) and color red and mask 1111111111110000000001100000000011000000000110000000001100000000011000000000110000000001100000000011000000000111111111111
diff:   layer[0].color
delta:
! size mismatch, 3x3 instead of 11x11

TRAIN 6b9890af.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,26) and color black and layers
  [0]: a rectangle at (4,2) with size (14,14) and color red and mask 1111111111111110000000000001100000000000011000000000000110000000000001100000000000011000000000000110000000000001100000000000011000000000000110000000000001100000000000011000000000000111111111111111
  [01]: a rectangle at (4,20) with size (3,3) and color green and mask 10101010
diff: 
delta:
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,26) and color black and layers
  [0]: a rectangle at (4,20) with size (3,3) and color green and mask 10101010
  [01]: a rectangle at (4,2) with size (14,14) and color red and mask 1111111111111110000000000001100000000000011000000000000110000000000001100000000000011000000000000110000000000001100000000000011000000000000110000000000001100000000000011000000000000111111111111111
diff:   layer[0].color
delta:
! size mismatch, 3x3 instead of 14x14

TEST 6b9890af.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1512.5 bits (1512.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-241] Checking task 6c434453.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10627.5 = 10636.5
DL output with Mo: L = 9.0 + 8505.3 = 8514.3
DL input+output M: L = 17.9 + 19132.9 = 19150.8

# learning a model for train pairs
19150.8	
16473.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14177.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12952.0	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11975.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10400.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9153.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8768.8	OUT DEF: size={size}
8385.1	OUT DEF: layer[01].size={size}
8139.6	OUT DEF: layer[0].size={layer[0].size}
7894.7	OUT DEF: layer[011].size={layer[0].size}
7676.3	OUT DEF: layer[0].mask=10111010
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color ? and mask 10111010
  [01]: a rectangle at ? with size {size} and color ? and mask ?
  [011]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 4377.9 = 4437.7
DL output with Mo: L = 71.2 + 3167.4 = 3238.6
DL input+output M: L = 131.0 + 7545.3 = 7676.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 111101111
  [01]: a rectangle at (4,0) with size (5,6) and color blue and mask 111000101000111010000111000010
  [011]: a rectangle at (1,6) with size (3,3) and color blue and mask 10111010
diff: 
delta: (7,8)=1  (7,9)=1 
   (200.1 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 10111010
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111110111100110001111111101101111111100011111111011101111111100011111111011111111111111111
  [011]: a rectangle at (6,3) with size (3,3) and color red and mask full
diff: 
delta:
   (158.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (5,6) and color blue and mask 111000101000111010000111000010
  [01]: a rectangle at (0,0) with size (3,3) and color blue and mask 111101111
  [011]: a rectangle at (1,6) with size (3,3) and color blue and mask 10111010
diff: 
delta: (7,8)=1  (7,9)=1 
! 100 wrong pixels (generated / expected)

TRAIN 6c434453.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,4) with size (3,3) and color blue and mask 111101111
  [01]: a rectangle at (7,6) with size (2,3) and color blue and mask 111001
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111100011111110101101111000100011111111011111111111111110011111111001111111111
diff: 
delta:
   (237.6 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,4) with size (3,3) and color red and mask 10111010
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111100011111111101110111111110001101111101100011111111011111111111111110011111111001111111111
  [011]: a rectangle at (5,1) with size (3,3) and color red and mask full
diff: 
delta:
   (158.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,4) with size (3,3) and color blue and mask 111101111
  [01]: a rectangle at (7,6) with size (2,3) and color blue and mask 111001
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111100011111110101101111000100011111111011111111111111110011111111001111111111
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 6c434453.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (2,1) with size (3,3) and color blue and mask 111101111
  [01]: a rectangle at (6,6) with size (1,2) and color blue and mask full
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 11110001001111010111111100011111111111111111111111111111111111111111101111111100011111111011111111
diff: 
delta:
! 100 wrong pixels (generated / expected)

TEST 6c434453.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3167.4 bits (3167.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-240] Checking task 6cdd2623.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 23129.1 = 23138.1
DL output with Mo: L = 9.0 + 20490.2 = 20499.2
DL input+output M: L = 17.9 + 43619.3 = 43637.3

# learning a model for train pairs
43637.3	
33330.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
25866.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
25176.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24517.9	OUT DEF: size={size}
24065.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
23821.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
23751.3	OUT DEF: layer[0].mask=full
23680.6	OUT DEF: layer[01].mask=full
23617.7	IN  SHAPE at layer[00]: a point at ? with color ?
23554.6	IN  SHAPE at layer[001]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 78.9 + 21545.9 = 21624.7
DL output with Mo: L = 41.7 + 1888.1 = 1929.8
DL input+output M: L = 120.6 + 23434.0 = 23554.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,22) and color black and layers
  [00]: a point at (0,11) with color green
  [001]: a point at (0,17) with color red
  [0]: a rectangle at (0,5) with size (3,3) and color red and mask 100010011
  [01]: a rectangle at (2,4) with size (2,3) and color grey and mask 11100
  [011]: a rectangle at (4,2) with size (3,2) and color red and mask 11010
diff: 
delta: (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,5)=2  (4,14)=2  (5,7)=2  (5,10)=2  (5,18)=2  (5,20)=5# (6,9)=5# (6,10)=5# (6,13)=5# (6,19)=2  (6,20)=5# (7,13)=2  (7,18)=2  (8,0)=3  (8,3)=5# (8,4)=5# (8,6)=2  (8,7)=5# (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
   (914.3 bits)
data: a background with size (11,22) and color black and layers
  [0]: a rectangle at (8,0) with size (1,22) and color green and mask full
  [01]: a rectangle at (0,11) with size (11,1) and color green and mask full
diff: 
delta:
   (62.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,22) and color black and layers
  [00]: a point at (0,11) with color green
  [001]: a point at (0,17) with color red
  [0]: a rectangle at (0,5) with size (3,3) and color red and mask 100010011
  [01]: a rectangle at (2,4) with size (2,3) and color grey and mask 11100
  [011]: a rectangle at (4,2) with size (3,2) and color red and mask 11010
diff: 
delta: (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,5)=2  (4,14)=2  (5,7)=2  (5,10)=2  (5,18)=2  (5,20)=5# (6,9)=5# (6,10)=5# (6,13)=5# (6,19)=2  (6,20)=5# (7,13)=2  (7,18)=2  (8,0)=3  (8,3)=5# (8,4)=5# (8,6)=2  (8,7)=5# (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
! 36 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,20) and color black and layers
  [00]: a point at (0,5) with color cyan
  [001]: a point at (1,10) with color cyan
  [0]: a rectangle at (1,12) with size (2,1) and color blue and mask full
  [01]: a rectangle at (8,13) with size (2,2) and color cyan and mask 1001
  [011]: a rectangle at (2,8) with size (1,1) and color blue and mask full
diff: 
delta: (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
   (491.2 bits)
data: a background with size (13,20) and color black and layers
  [0]: a rectangle at (3,0) with size (1,20) and color red and mask full
  [01]: a rectangle at (11,0) with size (1,20) and color red and mask full
diff: 
delta:
   (63.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,20) and color black and layers
  [00]: a point at (0,5) with color cyan
  [001]: a point at (1,10) with color cyan
  [0]: a rectangle at (1,12) with size (2,1) and color blue and mask full
  [01]: a rectangle at (8,13) with size (2,2) and color cyan and mask 1001
  [011]: a rectangle at (2,8) with size (1,1) and color blue and mask full
diff: 
delta: (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
! 44 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  [00]: a point at (0,7) with color yellow
  [001]: a point at (0,13) with color cyan
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 1011
  [01]: a rectangle at (11,14) with size (3,2) and color yellow and mask 101001
  [011]: a rectangle at (4,8) with size (2,1) and color grey and mask full
diff: 
delta: (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (13,8)=4  (14,0)=4  (14,2)=4  (14,4)=4  (14,8)=4  (14,9)=5# (14,13)=8 
   (749.2 bits)
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (10,0) with size (1,17) and color cyan and mask full
  [01]: a rectangle at (0,13) with size (15,1) and color cyan and mask full
diff: 
delta:
   (62.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  [00]: a point at (0,7) with color yellow
  [001]: a point at (0,13) with color cyan
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 1011
  [01]: a rectangle at (11,14) with size (3,2) and color yellow and mask 101001
  [011]: a rectangle at (4,8) with size (2,1) and color grey and mask full
diff: 
delta: (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (13,8)=4  (14,0)=4  (14,2)=4  (14,4)=4  (14,8)=4  (14,9)=5# (14,13)=8 
! 35 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color black and layers
  [00]: a point at (0,3) with color pink
  [001]: a point at (0,12) with color orange
  [0]: a rectangle at (5,10) with size (6,1) and color orange and mask full
  [01]: a rectangle at (2,15) with size (1,2) and color cyan and mask full
  [011]: a rectangle at (5,16) with size (1,2) and color orange and mask full
diff: 
delta: (0,16)=7# (0,17)=8  (1,0)=7# (1,6)=8  (1,9)=8  (1,15)=7# (2,1)=7# (2,6)=8  (4,11)=8  (5,0)=6  (5,18)=6  (6,1)=7# (6,8)=7# (6,12)=8  (7,3)=8  (7,6)=7# (7,8)=7# (7,10)=0  (8,12)=8  (8,14)=8  (8,18)=7# (9,4)=7# (9,10)=0  (10,15)=7# (10,18)=7# (11,9)=7# (11,17)=8  (12,18)=7# (14,12)=7# (14,13)=8  (15,0)=7# (15,3)=6  (15,4)=7# (15,6)=8  (15,7)=7#
! 38 wrong pixels (generated / expected)

TEST 6cdd2623.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1888.1 bits (1888.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-239] Checking task 6cf79266.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 100823.7 = 100832.7
DL output with Mo: L = 9.0 + 100823.7 = 100832.7
DL input+output M: L = 17.9 + 201647.4 = 201665.3

# learning a model for train pairs
201665.3	
114885.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35370.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22072.1	OUT DEF: layer[0]={layer[0]}
17608.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16910.3	OUT DEF: size={size}
16772.3	OUT DEF: layer[01].color=blue
16701.6	OUT DEF: layer[01].mask=full
16656.0	OUT DEF: color=black
16610.4	IN  DEF: color=black
16575.4	OUT DEF: layer[01].pos=(?,?)
16540.4	OUT DEF: layer[01].size=(?,?)
16377.8	OUT DEF: layer[01].size.i=3
16215.2	OUT DEF: layer[01].size.j=3
16180.2	IN  DEF: size=(?,?)
15858.9	IN  DEF: size.i=20
15537.5	IN  DEF: size.j=20
15502.5	IN  DEF: layer[0].pos=(?,?)
15335.5	IN  DEF: layer[0].pos.i=0
15168.5	IN  DEF: layer[0].pos.j=0
15133.5	IN  DEF: layer[0].size=(?,?)
14812.2	IN  DEF: layer[0].size.i=20
14490.9	IN  DEF: layer[0].size.j=20

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (3,3) and color blue and mask full
WHERE (Mi)
a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color ? and mask ?

DL input  with Mi: L = 73.9 + 12209.0 = 12282.8
DL output with Mo: L = 41.2 + 2166.9 = 2208.0
DL input+output M: L = 115.0 + 14375.8 = 14490.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color grey and mask 1000101011011110011111011001111111111111101101000111110111110100010100100110101001011010111000101001101110111101101111001011011101111111101111111110111001111001101110101111011111011111110010011111011111011101111011000100100010100111100100111000101011100011100010001110100111111111111101010101001010101011000111001011111110001101101000111110110011111111111111111101101111001111110100111100111111001001
diff: 
delta:
   (407.0 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color grey and mask 1000101011011110011111011001111111111111101101000111110111110100010100100110101001011010111000101001101110111101101111001011011101111111101111111110111001111001101110101111011111011111110010011111011111011101111011000100100010100111100100111000101011100011100010001110100111111111111101010101001010101011000111001011111110001101101000111110110011111111111111111101101111001111110100111100111111001001
  [01]: a rectangle at (6,16) with size (3,3) and color blue and mask full
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color grey and mask 1000101011011110011111011001111111111111101101000111110111110100010100100110101001011010111000101001101110111101101111001011011101111111101111111110111001111001101110101111011111011111110010011111011111011101111011000100100010100111100100111000101011100011100010001110100111111111111101010101001010101011000111001011111110001101101000111110110011111111111111111101101111001111110100111100111111001001
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6cf79266.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color green and mask 1011101010001110110111111100100101101001000110011101110010101100010100000001101100111011010100110100100111111110110111010101001110001111010011001001111011000110111010100111100010011011000101001110110111101010111110011000111100110110100001101111111011100000010101010001001011000010011110100111101100110011101110111010100001101110110100001101111101101000100111110110011010110100110000101110011010101111
diff: 
delta:
   (407.0 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color green and mask 1011101010001110110111111100100101101001000110011101110010101100010100000001101100111011010100110100100111111110110111010101001110001111010011001001111011000110111010100111100010011011000101001110110111101010111110011000111100110110100001101111111011100000010101010001001011000010011110100111101100110011101110111010100001101110110100001101111101101000100111110110011010110100110000101110011010101111
  [01]: a rectangle at (6,3) with size (3,3) and color blue and mask full
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color green and mask 1011101010001110110111111100100101101001000110011101110010101100010100000001101100111011010100110100100111111110110111010101001110001111010011001001111011000110111010100111100010011011000101001110110111101010111110011000111100110110100001101111111011100000010101010001001011000010011110100111101100110011101110111010100001101110110100001101111101101000100111110110011010110100110000101110011010101111
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 6cf79266.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color orange and mask 1101001111001011011010111010001011000001000001001011010001110000101011011100011100111001111101011101111011101011010111001101110110111110110011001011011000111010111100101111011100110110000100100000000101011011010010111011110001100111000010001000001110010101111011000010101100101000101000110110111111111001001111010010010001011001100011010101010000101111001000001001100001110101010011101001100110111101
diff: 
delta:
   (407.0 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color orange and mask 1101001111001011011010111010001011000001000001001011010001110000101011011100011100111001111101011101111011101011010111001101110110111110110011001011011000111010111100101111011100110110000100100000000101011011010010111011110001100111000010001000001110010101111011000010101100101000101000110110111111111001001111010010010001011001100011010101010000101111001000001001100001110101010011101001100110111101
  [01]: a rectangle at (5,14) with size (3,3) and color blue and mask full
diff: 
delta: (16,3)=1  (16,4)=1  (16,5)=1  (17,3)=1  (17,4)=1  (17,5)=1  (18,3)=1  (18,4)=1  (18,5)=1 
   (194.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color orange and mask 1101001111001011011010111010001011000001000001001011010001110000101011011100011100111001111101011101111011101011010111001101110110111110110011001011011000111010111100101111011100110110000100100000000101011011010010111011110001100111000010001000001110010101111011000010101100101000101000110110111111111001001111010010010001011001100011010101010000101111001000001001100001110101010011101001100110111101
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 6cf79266.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (20,20) and color yellow and mask 1101010100011000001100000010010111100000111000101011011000011100001110011010101100101010100101011001111110110010100111100011100001110010110111000110100100100100010111110001111001101101110100111010100010101110100100110001000111010011100011100000011000011000110110110101111100001000010110011111100100111010110111111101100100101110000001001011010111111010101001110111110000110100110001111101000111011010
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST 6cf79266.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2166.9 bits (2166.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-238] Checking task 6d0160f0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 46736.4 = 46745.4
DL output with Mo: L = 9.0 + 32348.3 = 32357.2
DL input+output M: L = 17.9 + 79084.7 = 79102.6

# learning a model for train pairs
79102.6	
56640.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
36239.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
31427.1	OUT DEF: layer[0].mask=1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
30634.3	OUT DEF: size={size}
29841.8	OUT DEF: layer[0].size={layer[0].size}
29405.8	OUT DEF: layer[0].pos={layer[0].pos}
29219.4	OUT DEF: layer[0].color={layer[0].color}
29035.0	IN  DEF: layer[0].color=grey
28922.8	OUT SHAPE at layer[01]: a point at ? with color ?
28738.3	OUT DEF: layer[01].color=yellow
28615.2	OUT SHAPE at layer[011]: a point at ? with color ?
28430.8	OUT DEF: layer[011].color=orange
28284.1	OUT SHAPE at layer[0111]: a point at ? with color ?
28198.3	IN  SHAPE at layer[01]: a point at ? with color ?
28111.5	IN  SHAPE at layer[011]: a point at ? with color ?
28024.2	IN  SHAPE at layer[0111]: a point at ? with color ?
27936.4	IN  SHAPE at layer[01111]: a point at ? with color ?
27848.2	IN  SHAPE at layer[011111]: a point at ? with color ?
27664.0	OUT DEF: layer[0111].color={layer[011111].color}
27603.9	OUT DEF: color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[0].color} and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at ? with color yellow
  [011]: a point at ? with color orange
  [0111]: a point at ? with color {layer[011111].color}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color grey and mask ?
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?

DL input  with Mi: L = 76.3 + 25643.3 = 25719.6
DL output with Mo: L = 181.0 + 1703.2 = 1884.2
DL input+output M: L = 257.4 + 27346.5 = 27603.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1001100001110101110010100110001111111111100010001000010100110000011100101011111111111000100110000001001100001010001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,4) with color orange
  [0111]: a point at (0,6) with color pink
  [01111]: a point at (0,8) with color cyan
  [011111]: a point at (1,5) with color green
diff: 
delta: (0,10)=7# (1,2)=9# (1,9)=6  (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,0)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
   (816.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,10) with color yellow
  [011]: a point at (1,8) with color orange
  [0111]: a point at (0,9) with color green
diff: 
delta: (2,10)=2 
   (52.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1001100001110101110010100110001111111111100010001000010100110000011100101011111111111000100110000001001100001010001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,4) with color orange
  [0111]: a point at (0,6) with color pink
  [01111]: a point at (0,8) with color cyan
  [011111]: a point at (0,10) with color orange
diff: 
delta: (1,2)=9# (1,5)=3  (1,9)=6  (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,0)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,5) with color red
  [0111]: a point at (0,9) with color pink
  [01111]: a point at (1,2) with color orange
  [011111]: a point at (1,10) with color brown
diff: 
delta: (2,1)=6  (2,5)=1  (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
   (528.7 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (5,10) with color yellow
  [011]: a point at (6,8) with color orange
  [0111]: a point at (4,9) with color brown
diff: 
delta:
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,5) with color red
  [0111]: a point at (0,9) with color pink
  [01111]: a point at (1,2) with color orange
  [011111]: a point at (1,10) with color brown
diff: 
delta: (2,1)=6  (2,5)=1  (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
! 4 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,1) with color orange
  [011]: a point at (0,5) with color pink
  [0111]: a point at (0,8) with color orange
  [01111]: a point at (1,0) with color cyan
  [011111]: a point at (1,2) with color pink
diff: 
delta: (1,1)=3  (1,9)=8  (2,5)=3  (4,1)=8  (4,2)=7# (4,5)=3  (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
   (654.7 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (5,0) with color yellow
  [011]: a point at (6,2) with color orange
  [0111]: a point at (6,1) with color pink
diff: 
delta: (5,2)=8 
   (52.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,1) with color orange
  [011]: a point at (0,5) with color pink
  [0111]: a point at (0,8) with color orange
  [01111]: a point at (1,0) with color cyan
  [011111]: a point at (1,1) with color green
diff: 
delta: (1,2)=6  (1,9)=8  (2,5)=3  (4,1)=8  (4,2)=7# (4,5)=3  (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,5) with color blue
  [0111]: a point at (0,10) with color red
  [01111]: a point at (1,1) with color red
  [011111]: a point at (1,5) with color green
diff: 
delta: (1,9)=6  (4,1)=1  (4,9)=3  (5,0)=7# (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
   (564.7 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,5) with color yellow
  [011]: a point at (1,5) with color orange
  [0111]: a point at (2,5) with color green
diff: 
delta:
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,5) with color blue
  [0111]: a point at (0,10) with color red
  [01111]: a point at (1,1) with color red
  [011111]: a point at (1,5) with color green
diff: 
delta: (1,9)=6  (4,1)=1  (4,9)=3  (5,0)=7# (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color grey and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a point at (0,0) with color red
  [011]: a point at (0,2) with color green
  [0111]: a point at (0,4) with color red
  [01111]: a point at (0,9) with color green
  [011111]: a point at (1,0) with color orange
diff: 
delta: (1,1)=6  (1,5)=7# (1,8)=6  (1,9)=7# (2,4)=6  (2,6)=3  (2,10)=2  (4,0)=7# (4,8)=6  (4,10)=4  (5,1)=6  (5,5)=2  (5,6)=7# (5,9)=2  (6,0)=6  (6,2)=2  (6,5)=3  (6,9)=7# (8,0)=7# (8,5)=6  (8,8)=2  (8,9)=3  (9,2)=6  (9,5)=2  (10,0)=2  (10,5)=7# (10,9)=6  (10,10)=7#
! 5 wrong pixels (generated / expected)

TEST 6d0160f0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1703.2 bits (1703.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-237] Checking task 6d0aefbc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3399.1 = 3408.1
DL output with Mo: L = 9.0 + 6284.7 = 6293.7
DL input+output M: L = 17.9 + 9683.9 = 9701.8

# learning a model for train pairs
9701.8	
7713.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7130.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6558.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6383.8	OUT DEF: layer[01].pos={layer[0].pos}
6197.6	OUT DEF: layer[01].color={layer[0].color}
6029.6	OUT DEF: layer[0].color={color}
5981.3	OUT DEF: size=(?,?)
5685.8	OUT DEF: size.j=6
5466.1	OUT DEF: size.i={size.i}
5417.8	OUT DEF: layer[0].pos=(?,?)
5309.0	OUT DEF: layer[0].pos.i={layer[0].size.i - 1}
5233.3	OUT DEF: layer[0].pos.j=0
5185.0	OUT DEF: layer[0].size=(?,?)
4889.5	OUT DEF: layer[0].size.j=6
4841.3	OUT DEF: layer[01].size=(?,?)
4708.9	OUT DEF: layer[01].size.i={layer[0].size.i}
4660.7	IN  DEF: size=(?,?)
4443.2	IN  DEF: size.i=3
4225.7	IN  DEF: size.j=3
4177.4	IN  DEF: layer[0].pos=(?,?)
4129.2	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i},6) and color ? and layers
  [0]: a rectangle at ({layer[0].size.i - 1},0) with size (?,6) and color {color} and mask ?
  [01]: a rectangle at {layer[0].pos} with size ({layer[0].size.i},?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 44.8 + 2349.5 = 2394.3
DL output with Mo: L = 78.0 + 1656.9 = 1734.9
DL input+output M: L = 122.8 + 4006.4 = 4129.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
diff: 
delta: (1,0)=1  (1,2)=1 
   (58.8 bits)
data: a background with size (3,6) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,6) and color pink and mask 1100010010111111
  [01]: a rectangle at (2,0) with size (1,6) and color cyan and mask full
diff: 
delta:
   (43.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
diff: 
delta: (1,0)=1  (1,2)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,0) with size (1,1) and color blue and mask full
diff: 
delta: (1,2)=1  (2,0)=8  (2,1)=8 
! 10 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,1) with size (1,1) and color cyan and mask full
diff: 
delta: (0,0)=6  (1,0)=6  (2,2)=6 
   (71.7 bits)
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,6) and color blue and mask 110011011110001100
  [01]: a rectangle at (0,1) with size (1,4) and color cyan and mask full
diff: 
delta:
   (42.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 11110100
diff: 
delta: (0,1)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,1) and color pink and mask full
diff: 
delta: (0,1)=8  (2,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,1) with size (1,1) and color cyan and mask full
diff: 
delta: (0,0)=6  (1,0)=6  (2,2)=6 
! 12 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 10111
diff: 
delta: (1,2)=6  (2,0)=6 
   (67.9 bits)
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (1,0) with size (2,6) and color cyan and mask 11110100001
  [01]: a rectangle at (0,0) with size (2,6) and color blue and mask 110011111111
diff: 
delta:
   (48.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 10111
diff: 
delta: (1,2)=6  (2,0)=6 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (1,0) with size (2,3) and color cyan and mask 110001
diff: 
delta: (1,2)=6  (2,0)=6 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (2,1) with size (1,2) and color cyan and mask full
diff: 
delta: (1,0)=8  (1,2)=6  (2,0)=6 
! 8 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 1111
diff: 
delta:
   (36.6 bits)
data: a background with size (3,6) and color blue and layers
  [0]: a rectangle at (1,0) with size (2,6) and color pink and mask 111111011110
  [01]: a rectangle at (0,0) with size (2,1) and color blue and mask full
diff: 
delta:
   (31.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (1,0) with size (2,3) and color pink and mask 111110
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 1111
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta: (1,0)=1 
! 14 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,3) and color cyan and mask 101010
diff: 
delta: (2,0)=1  (2,2)=1 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color pink and mask 10010101
diff: 
delta: (2,0)=1  (2,2)=1 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,1) with size (1,1) and color cyan and mask full
diff: 
delta: (1,0)=8  (1,2)=8  (2,0)=1  (2,2)=1 
! 12 wrong pixels (generated / expected)

TEST 6d0aefbc.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1656.9 bits (1656.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-236] Checking task 6d58a25d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14521.6 = 14530.6
DL output with Mo: L = 9.0 + 28280.8 = 28289.7
DL input+output M: L = 17.9 + 42802.4 = 42820.3

# learning a model for train pairs
42820.3	
33627.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
28032.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24021.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21688.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
20941.0	OUT DEF: layer[01].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 10493.4 = 10520.0
DL output with Mo: L = 59.7 + 10361.4 = 10421.1
DL input+output M: L = 86.3 + 20854.7 = 20941.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,6) with size (4,7) and color brown and mask 1000001011011000111000001000
diff: 
delta: (2,5)=8  (3,16)=8  (4,3)=8  (10,1)=8  (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
   (250.8 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (7,9) with size (13,1) and color cyan and mask full
  [01]: a rectangle at (5,6) with size (4,7) and color brown and mask 1001001011111000111000001000
  [011]: a rectangle at (2,5) with size (1,1) and color cyan and mask full
diff: 
delta: (3,16)=8  (4,3)=8  (10,1)=8  (10,18)=8  (18,15)=8  (19,1)=8 
   (253.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,6) with size (4,7) and color brown and mask 1000001011011000111000001000
diff: 
delta: (2,5)=8  (3,16)=8  (4,3)=8  (10,1)=8  (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,8) with size (2,3) and color brown and mask full
diff: 
delta: (2,5)=8  (3,16)=8  (4,3)=8  (5,9)=9# (7,7)=9# (7,9)=0  (7,11)=9# (8,6)=9# (8,12)=9# (10,1)=8  (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,8) with size (1,3) and color brown and mask full
diff: 
delta: (2,5)=8  (3,16)=8  (4,3)=8  (5,9)=9# (7,7)=9# (7,8)=9# (7,10)=9# (7,11)=9# (8,6)=9# (8,12)=9# (10,1)=8  (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
! size mismatch, 10x10 instead of 20x20

TRAIN 6d58a25d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,4) with size (4,7) and color orange and mask 1000001011011000111000001000
diff: 
delta: (1,8)=2  (2,2)=2  (4,13)=2  (4,16)=2  (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (310.4 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (8,6) with size (12,1) and color red and mask full
  [01]: a rectangle at (5,4) with size (4,7) and color orange and mask 1000101011011000111000001000
  [011]: a rectangle at (8,9) with size (12,1) and color red and mask full
diff: 
delta: (1,8)=2  (2,2)=2  (4,13)=2  (4,16)=2  (9,17)=2  (10,1)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (320.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,4) with size (4,7) and color orange and mask 1000001011011000111000001000
diff: 
delta: (1,8)=2  (2,2)=2  (4,13)=2  (4,16)=2  (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,6) with size (2,3) and color orange and mask full
diff: 
delta: (1,8)=2  (2,2)=2  (4,13)=2  (4,16)=2  (5,7)=7# (7,5)=7# (7,7)=0  (7,9)=7# (8,4)=7# (8,10)=7# (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,6) with size (1,3) and color orange and mask full
diff: 
delta: (1,8)=2  (2,2)=2  (4,13)=2  (4,16)=2  (5,7)=7# (7,5)=7# (7,6)=7# (7,8)=7# (7,9)=7# (8,4)=7# (8,10)=7# (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN 6d58a25d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,9) with size (4,7) and color yellow and mask 1000001011011000111000001000
diff: 
delta: (1,14)=3  (2,5)=3  (2,10)=3  (4,1)=3  (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
   (488.2 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (7,10) with size (13,1) and color green and mask full
  [01]: a rectangle at (4,9) with size (4,7) and color yellow and mask 1000011011011000111000001000
  [011]: a rectangle at (6,12) with size (14,2) and color green and mask full
diff: 
delta: (1,14)=3  (2,5)=3  (2,10)=3  (4,1)=3  (5,7)=3  (5,18)=3  (7,4)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,18)=3  (15,4)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,19)=3 
   (461.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,9) with size (4,7) and color yellow and mask 1000001011011000111000001000
diff: 
delta: (1,14)=3  (2,5)=3  (2,10)=3  (4,1)=3  (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,11) with size (2,3) and color yellow and mask full
diff: 
delta: (1,14)=3  (2,5)=3  (2,10)=3  (4,1)=3  (4,12)=4  (5,7)=3  (5,18)=3  (6,10)=4  (6,12)=0  (6,14)=4  (7,4)=3  (7,9)=4  (7,15)=4  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,11) with size (1,3) and color yellow and mask full
diff: 
delta: (1,14)=3  (2,5)=3  (2,10)=3  (4,1)=3  (4,12)=4  (5,7)=3  (5,18)=3  (6,10)=4  (6,11)=4  (6,13)=4  (6,14)=4  (7,4)=3  (7,9)=4  (7,15)=4  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN 6d58a25d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,3) with size (4,7) and color blue and mask 1000001011011000111000001000
diff: 
delta: (1,4)=6  (1,10)=6  (1,18)=6  (2,11)=6  (3,2)=6  (5,13)=6  (5,18)=6  (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,5) with size (2,3) and color blue and mask full
diff: 
delta: (1,4)=6  (1,10)=6  (1,18)=6  (2,11)=6  (3,2)=6  (3,6)=1  (5,4)=1  (5,6)=0  (5,8)=1  (5,13)=6  (5,18)=6  (6,3)=1  (6,9)=1  (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,5) with size (1,3) and color blue and mask full
diff: 
delta: (1,4)=6  (1,10)=6  (1,18)=6  (2,11)=6  (3,2)=6  (3,6)=1  (5,4)=1  (5,5)=1  (5,7)=1  (5,8)=1  (5,13)=6  (5,18)=6  (6,3)=1  (6,9)=1  (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! size mismatch, 10x10 instead of 20x20

TEST 6d58a25d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10361.4 bits (10361.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-235] Checking task 6d75e8bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10764.4 = 10773.4
DL output with Mo: L = 9.0 + 16550.7 = 16559.7
DL input+output M: L = 17.9 + 27315.1 = 27333.0

# learning a model for train pairs
27333.0	
18358.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10107.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6052.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4297.6	OUT DEF: layer[0]={layer[0]}
3735.8	OUT DEF: size={size}
3597.9	OUT DEF: layer[01].color=red
3459.9	IN  DEF: layer[0].color=cyan
3389.2	OUT DEF: layer[01].mask=full
3343.6	OUT DEF: color=black
3298.0	IN  DEF: color=black
3263.0	OUT DEF: layer[01].pos=(?,?)
3128.4	OUT DEF: layer[01].pos.i=2
2996.9	OUT DEF: layer[01].pos.j={layer[0].pos.i}
2961.9	OUT DEF: layer[01].size=(?,?)
2926.9	IN  DEF: size=(?,?)
2891.8	IN  DEF: layer[0].pos=(?,?)
2761.9	IN  DEF: layer[0].pos.j=1
2726.9	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (2,{layer[0].pos.i}) with size (?,?) and color red and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,1) with size (?,?) and color cyan and mask ?

DL input  with Mi: L = 42.9 + 2061.2 = 2104.0
DL output with Mo: L = 41.1 + 581.7 = 622.8
DL input+output M: L = 84.0 + 2642.9 = 2726.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (2,1) with size (9,4) and color cyan and mask 1101110111000101110011111100010111
diff: 
delta:
   (77.3 bits)
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (2,1) with size (9,4) and color cyan and mask 1101110111000101110011111100010111
  [01]: a rectangle at (2,2) with size (9,3) and color red and mask full
diff: 
delta:
   (14.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (2,1) with size (9,4) and color cyan and mask 1101110111000101110011111100010111
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (2,1) with size (8,3) and color cyan and mask full
diff: 
delta: (3,2)=0  (3,3)=0  (4,4)=8  (5,3)=0  (7,2)=0  (7,3)=0  (10,1)=8  (10,2)=8 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,10) and color cyan and layers
  [0]: a rectangle at (0,0) with size (14,10) and color black and mask 11111111111111111111111111111111111110011111110001111111000111111111011111110001111111100111111000011111111101111111000111111111111111111111
diff:   color  layer[0].color  layer[0].pos.j
delta:
! 36 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (1,1) with size (4,6) and color cyan and mask 110100100101101101111111
diff: 
delta:
   (60.5 bits)
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (1,1) with size (4,6) and color cyan and mask 110100100101101101111111
  [01]: a rectangle at (2,1) with size (3,5) and color red and mask full
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (1,1) with size (4,6) and color cyan and mask 110100100101101101111111
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color cyan and layers
  [0]: a rectangle at (0,0) with size (7,8) and color black and mask 11111111111111111001011110110101101001011000000111111111
diff:   color  layer[0].color  layer[0].pos.j
delta:
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (1,1) with size (4,6) and color cyan and mask full
diff: 
delta: (2,2)=0  (2,5)=0  (3,2)=0  (3,4)=0  (3,5)=0  (4,1)=0  (4,2)=0  (4,4)=0 
! 8 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,8) and color black and layers
  [0]: a rectangle at (1,1) with size (6,5) and color cyan and mask 111001100011100111101010011111
diff: 
delta:
   (68.3 bits)
data: a background with size (9,8) and color black and layers
  [0]: a rectangle at (1,1) with size (6,5) and color cyan and mask 111001100011100111101010011111
  [01]: a rectangle at (2,1) with size (5,3) and color red and mask full
diff: 
delta: (2,4)=2 
   (31.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  [0]: a rectangle at (1,1) with size (6,5) and color cyan and mask 111001100011100111101010011111
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color cyan and layers
  [0]: a rectangle at (0,0) with size (9,8) and color black and mask 111111111111111111000111110011111100011111000011110101111100000111111111
diff:   color  layer[0].color  layer[0].pos.j
delta:
! 30 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  [0]: a rectangle at (2,2) with size (6,7) and color cyan and mask 111111111011110100111010010101100010000001
diff:   layer[0].pos.j
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,11) and color cyan and layers
  [0]: a rectangle at (0,0) with size (9,11) and color black and mask 111111111111100000001111001000011111011000111110110101111100111011111111110111111111111111111111111
diff:   color  layer[0].color  layer[0].pos.j
delta:
! 42 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,11) and color black and layers
  [0]: a rectangle at (6,2) with size (2,7) and color cyan and mask full
diff:   layer[0].pos.j
delta: (2,2)=8  (3,2)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,4)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,7)=8  (6,6)=0 
! 27 wrong pixels (generated / expected)

TEST 6d75e8bb.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 581.7 bits (581.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-234] Checking task 6e02f1e3.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2989.4 = 2998.3
DL output with Mo: L = 9.0 + 3003.4 = 3012.4
DL input+output M: L = 17.9 + 5992.8 = 6010.7

# learning a model for train pairs
6010.7	
5240.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4623.4	OUT DEF: size={size}
4392.6	OUT DEF: layer[0].color=grey
4317.8	OUT DEF: color=black
4256.3	OUT DEF: layer[0].pos=(?,?)
4113.9	OUT DEF: layer[0].pos.i=0
3971.5	OUT DEF: layer[0].pos.j=0
3910.0	OUT DEF: layer[0].size=(?,?)
3634.7	OUT DEF: layer[0].size.j={size.j}
3573.2	IN  DEF: size=(?,?)
3300.8	IN  DEF: size.i=3
3028.4	IN  DEF: size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,0) with size (?,{size.j}) and color grey and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers

DL input  with Mi: L = 17.9 + 2374.1 = 2392.0
DL output with Mo: L = 39.0 + 597.3 = 636.3
DL input+output M: L = 57.0 + 2971.4 = 3028.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,1)=2 
   (69.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 100010001
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,1)=2 
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (1,1)=2  (1,2)=2  (2,2)=2 
   (98.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 1010100
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (1,1)=2  (1,2)=2  (2,2)=2 
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
diff: 
delta:
   (8.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color grey and mask full
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color green and layers
diff: 
delta:
   (8.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color grey and mask full
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3 
   (54.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 100010001
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3 
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (1,0)=2  (1,1)=3  (1,2)=2  (2,0)=3  (2,1)=2  (2,2)=3 
! 5 wrong pixels (generated / expected)

TEST 6e02f1e3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 597.3 bits (597.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-233] Checking task 6e19193c.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2635.6 = 2644.5
DL output with Mo: L = 9.0 + 5136.0 = 5145.0
DL input+output M: L = 17.9 + 7771.6 = 7789.5

# learning a model for train pairs
7789.5	
7256.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6519.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6081.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5594.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5209.1	OUT DEF: size={size}
4825.0	OUT DEF: layer[01].size={size}
4666.6	OUT DEF: color={layer[0].color}
4543.2	IN  DEF: layer[0].mask=1101
4419.7	IN  DEF: layer[01].mask=1011
4326.7	OUT DEF: layer[0].color={layer[0].color}
4234.4	OUT DEF: layer[01].color={color}
4203.4	IN  DEF: color=black
4181.6	OUT DEF: layer[0].pos=(?,?)
4091.6	OUT DEF: layer[0].pos.i=1
4001.7	OUT DEF: layer[0].pos.j=3
3979.9	OUT DEF: layer[0].size=(?,?)
3958.1	OUT DEF: layer[01].pos=(?,?)
3868.1	OUT DEF: layer[01].pos.i=0
3778.1	OUT DEF: layer[01].pos.j=0
3756.3	IN  DEF: size=(?,?)
3582.7	IN  DEF: size.i=10
3409.0	IN  DEF: size.j=10
3387.2	IN  DEF: layer[0].pos=(?,?)
3365.4	IN  DEF: layer[0].size=(?,?)
3280.0	IN  DEF: layer[0].size.i=2
3194.5	IN  DEF: layer[0].size.j=2
3172.7	IN  DEF: layer[01].pos=(?,?)
3150.9	IN  DEF: layer[01].size=(?,?)
3065.5	IN  DEF: layer[01].size.i=2
2980.1	IN  DEF: layer[01].size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at (1,3) with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at (0,0) with size {size} and color {color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (2,2) and color ? and mask 1101
  [01]: a rectangle at (?,?) with size (2,2) and color ? and mask 1011

DL input  with Mi: L = 86.0 + 557.3 = 643.3
DL output with Mo: L = 71.0 + 2265.8 = 2336.8
DL input+output M: L = 157.0 + 2823.0 = 2980.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (2,2) and color orange and mask 1101
  [01]: a rectangle at (4,6) with size (2,2) and color orange and mask 1011
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color orange and layers
  [0]: a rectangle at (1,3) with size (1,1) and color orange and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111011111111011111111011111111011111110111111111001111111111111001111111110111111111111111101111
diff: 
delta:
   (109.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (2,2) and color orange and mask 1101
  [01]: a rectangle at (4,6) with size (2,2) and color orange and mask 1011
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 6e19193c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,3) with size (2,2) and color brown and mask 1101
  [01]: a rectangle at (1,3) with size (2,2) and color brown and mask 1011
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color brown and layers
  [0]: a rectangle at (1,3) with size (2,2) and color brown and mask 1011
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111001111111110111111101111011101111011101111011101111111101111111111111111111
diff: 
delta:
   (117.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,3) with size (2,2) and color brown and mask 1101
  [01]: a rectangle at (1,3) with size (2,2) and color brown and mask 1011
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6e19193c.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (2,2) and color cyan and mask 1110
  [01]: a rectangle at (6,2) with size (2,2) and color cyan and mask 1011
diff:   layer[0].mask
delta: (4,7)=8  (4,8)=8  (5,7)=8 
! 16 wrong pixels (generated / expected)

TEST 6e19193c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2265.8 bits (2265.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-232] Checking task 6e82a1ae.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8768.7 = 8777.7
DL output with Mo: L = 9.0 + 8768.7 = 8777.7
DL input+output M: L = 17.9 + 17537.4 = 17555.3

# learning a model for train pairs
17555.3	
13725.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12505.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11411.5	OUT DEF: layer[0].mask={layer[0].mask}
10364.0	OUT DEF: layer[0]={layer[0]}
9403.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8591.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8012.8	OUT DEF: size={size}
7778.4	IN  DEF: color=grey
7640.4	OUT DEF: layer[011].color=red
7502.4	IN  DEF: layer[0].color=black
7431.8	OUT DEF: layer[01].mask=full
7361.1	OUT DEF: layer[011].mask=full
7326.1	OUT DEF: layer[01].pos=(?,?)
7291.1	OUT DEF: layer[01].size=(?,?)
7162.4	OUT DEF: layer[01].size.j=2
7127.4	OUT DEF: layer[011].pos=(?,?)
7092.4	OUT DEF: layer[011].size=(?,?)
7057.4	IN  DEF: size=(?,?)
6794.1	IN  DEF: size.i=10
6530.7	IN  DEF: size.j=10
6495.7	IN  DEF: layer[0].pos=(?,?)
6357.7	IN  DEF: layer[0].pos.i=0
6219.7	IN  DEF: layer[0].pos.j=0
6184.7	IN  DEF: layer[0].size=(?,?)
5921.4	IN  DEF: layer[0].size.i=10
5658.1	IN  DEF: layer[0].size.j=10

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,2) and color ? and mask full
  [011]: a rectangle at (?,?) with size (?,?) and color red and mask full
WHERE (Mi)
a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask ?

DL input  with Mi: L = 71.7 + 3069.7 = 3141.3
DL output with Mo: L = 64.4 + 2452.3 = 2516.7
DL input+output M: L = 136.1 + 5521.9 = 5658.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111100111111110110101111111010110011111011111111111111111111111110011100111100110011111111111111111
diff: 
delta:
   (102.3 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111100111111110110101111111010110011111011111111111111111111111110011100111100110011111111111111111
  [01]: a rectangle at (8,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (5,9) with size (3,1) and color red and mask full
diff: 
delta: (6,5)=3  (6,6)=3  (7,1)=3  (8,1)=3 
   (118.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111100111111110110101111111010110011111011111111111111111111111110011100111100110011111111111111111
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111001100011100111011111111111110111111110011111111111111101111111110111000111111111111111111111
diff: 
delta:
   (102.3 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111001100011100111011111111111110111111110011111111111111101111111110111000111111111111111111111
  [01]: a rectangle at (5,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (2,1) with size (1,3) and color red and mask full
diff: 
delta: (2,7)=3  (3,7)=3 
   (81.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111001100011100111011111111111110111111110011111111111111101111111110111000111111111111111111111
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111011111111001111111110111100111111111111111111111111110111101111001110111111111111
diff: 
delta:
   (102.3 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111011111111001111111110111100111111111111111111111111110111101111001110111111111111
  [01]: a rectangle at (6,0) with size (3,2) and color blue and mask full
  [011]: a rectangle at (1,6) with size (2,2) and color red and mask full
diff: 
delta:
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111011111111001111111110111100111111111111111111111111110111101111001110111111111111
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111110111111011011001101111111110111111111111111111110110111001011001001101111111110111111111
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST 6e82a1ae.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2452.3 bits (2452.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-231] Checking task 6ecd11f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 75833.3 = 75842.3
DL output with Mo: L = 9.0 + 3650.9 = 3659.8
DL input+output M: L = 17.9 + 79484.2 = 79502.1

# learning a model for train pairs
79502.1	
18330.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18050.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17941.1	IN  SHAPE at layer[010]: a point at ? with color ?
17869.9	OUT SHAPE at layer[0]: a point at ? with color ?
17731.4	OUT DEF: layer[0].color={layer[010].color}
17657.2	OUT SHAPE at layer[01]: a point at ? with color ?
17518.1	OUT DEF: layer[01].color={layer[01].color}
17440.1	OUT SHAPE at layer[011]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a point at ? with color {layer[010].color}
  [01]: a point at ? with color {layer[01].color}
  [011]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [010]: a point at ? with color ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 53.2 + 14228.1 = 14281.2
DL output with Mo: L = 40.9 + 3117.9 = 3158.8
DL input+output M: L = 94.1 + 17346.0 = 17440.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (27,21) and color black and layers
  [0]: a rectangle at (1,1) with size (15,15) and color blue and mask 111110000011111111110000011111111110000011111111110000011111111110000011111000001111100000000001111100000000001111100000000001111100000000001111100000111110000011111111110000011111111110000011111111110000011111111110000011111
  [010]: a point at (19,9) with color orange
  [01]: a rectangle at (19,7) with size (3,1) and color green and mask full
diff: 
delta: (19,8)=1  (20,7)=2  (20,8)=8  (20,9)=9# (21,8)=4  (21,9)=6 
   (465.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color orange
  [01]: a point at (0,0) with color green
  [011]: a point at (1,1) with color cyan
diff: 
delta: (2,0)=3  (2,2)=6 
   (71.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,21) and color black and layers
  [0]: a rectangle at (1,1) with size (15,15) and color blue and mask 111110000011111111110000011111111110000011111111110000011111111110000011111000001111100000000001111100000000001111100000000001111100000000001111100000111110000011111111110000011111111110000011111111110000011111111110000011111
  [010]: a point at (19,8) with color blue
  [01]: a rectangle at (19,7) with size (3,1) and color green and mask full
diff: 
delta: (19,9)=7# (20,7)=2  (20,8)=8  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (27,21) and color black and layers
  [0]: a rectangle at (1,1) with size (15,15) and color blue and mask 111110000011111111110000011111111110000011111111110000011111111110000011111000001111100000000001111100000000001111100000000001111100000000001111100000111110000011111111110000011111111110000011111111110000011111111110000011111
  [010]: a point at (19,9) with color orange
  [01]: a rectangle at (19,7) with size (3,1) and color green and mask full
diff: 
delta: (19,8)=1  (20,7)=2  (20,8)=8  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (27,21) and color black and layers
  [0]: a rectangle at (1,1) with size (15,15) and color blue and mask 111110000011111111110000011111111110000011111111110000011111111110000011111000001111100000000001111100000000001111100000000001111100000000001111100000111110000011111111110000011111111110000011111111110000011111111110000011111
  [010]: a point at (20,7) with color red
  [01]: a rectangle at (19,7) with size (3,1) and color green and mask full
diff: 
delta: (19,8)=1  (19,9)=7# (20,8)=8  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 6ecd11f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,25) and color black and layers
  [0]: a rectangle at (3,9) with size (9,9) and color green and mask 111111000111111000111111000000111111000111111000111111111000111111000111111000111
  [010]: a point at (20,8) with color yellow
  [01]: a rectangle at (20,8) with size (2,2) and color cyan and mask full
diff: 
delta: (19,8)=2  (19,9)=1  (19,10)=7# (20,10)=9# (21,9)=6  (21,10)=1 
   (322.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color yellow
  [01]: a point at (1,1) with color cyan
  [011]: a point at (0,0) with color red
diff: 
delta: (0,2)=7# (2,1)=6  (2,2)=1 
   (86.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color black and layers
  [0]: a rectangle at (3,9) with size (9,9) and color green and mask 111111000111111000111111000000111111000111111000111111111000111111000111111000111
  [010]: a point at (20,8) with color yellow
  [01]: a rectangle at (20,8) with size (2,2) and color cyan and mask full
diff: 
delta: (19,8)=2  (19,9)=1  (19,10)=7# (20,10)=9# (21,9)=6  (21,10)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (27,25) and color black and layers
  [0]: a rectangle at (3,9) with size (9,9) and color green and mask 111111000111111000111111000000111111000111111000111111111000111111000111111000111
  [010]: a point at (21,9) with color pink
  [01]: a rectangle at (20,8) with size (2,2) and color cyan and mask full
diff: 
delta: (19,8)=2  (19,9)=1  (19,10)=7# (20,8)=4  (20,10)=9# (21,10)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (27,25) and color black and layers
  [0]: a rectangle at (3,9) with size (9,9) and color green and mask 111111000111111000111111000000111111000111111000111111111000111111000111111000111
  [010]: a point at (19,8) with color red
  [01]: a rectangle at (20,8) with size (2,2) and color cyan and mask 110
diff: 
delta: (19,9)=1  (19,10)=7# (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 6ecd11f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (22,22) and color black and layers
  [0]: a rectangle at (1,2) with size (16,16) and color cyan and mask 111111111111000011111111111100001111111111110000111111111111111100000000111111110000000011111111000000001111111100000000111100001111000011110000111100001111000011110000111100001111000011111111111100001111111111110000111111111111000011111111111100001111
  [010]: a point at (16,17) with color yellow
  [01]: a rectangle at (17,17) with size (1,3) and color pink and mask full
diff: 
delta: (16,18)=1  (16,19)=9# (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
   (635.3 bits)
data: a background with size (4,4) and color black and layers
  [0]: a point at (0,0) with color yellow
  [01]: a point at (1,0) with color pink
  [011]: a point at (0,2) with color brown
diff: 
delta: (0,3)=4  (1,2)=6  (2,0)=3  (2,3)=5# (3,0)=2  (3,1)=4  (3,2)=2 
   (154.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  [0]: a rectangle at (1,2) with size (16,16) and color cyan and mask 111111111111000011111111111100001111111111110000111111111111111100000000111111110000000011111111000000001111111100000000111100001111000011110000111100001111000011110000111100001111000011111111111100001111111111110000111111111111000011111111111100001111
  [010]: a point at (16,17) with color yellow
  [01]: a rectangle at (17,17) with size (1,3) and color pink and mask full
diff: 
delta: (16,18)=1  (16,19)=9# (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
! size mismatch, 10x10 instead of 4x4

TRAIN 6ecd11f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (1,2) with size (12,12) and color red and mask 111000000111111000000111111000000111111111111111111111111111111111111111000111111000000111111000000111111000111111000111111111000111111111000111
  [010]: a point at (15,16) with color cyan
  [01]: a rectangle at (15,16) with size (2,3) and color green and mask full
diff: 
delta: (15,15)=4  (15,17)=6  (16,15)=9# (16,18)=5# (17,15)=6  (17,16)=7# (17,17)=7# (17,18)=4  (18,15)=1  (18,16)=5# (18,17)=8  (18,18)=1 
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (1,2) with size (12,12) and color red and mask 111000000111111000000111111000000111111111111111111111111111111111111111000111111000000111111000000111111000111111000111111111000111111111000111
  [010]: a point at (15,17) with color pink
  [01]: a rectangle at (15,16) with size (2,3) and color green and mask full
diff: 
delta: (15,15)=4  (15,16)=8  (16,15)=9# (16,18)=5# (17,15)=6  (17,16)=7# (17,17)=7# (17,18)=4  (18,15)=1  (18,16)=5# (18,17)=8  (18,18)=1 
! size mismatch, 10x10 instead of 4x4
>> Trial 3
data: a background with size (21,24) and color black and layers
  [0]: a rectangle at (1,2) with size (12,12) and color red and mask 111000000111111000000111111000000111111111111111111111111111111111111111000111111000000111111000000111111000111111000111111111000111111111000111
  [010]: a point at (16,18) with color grey
  [01]: a rectangle at (15,16) with size (2,3) and color green and mask full
diff: 
delta: (15,15)=4  (15,16)=8  (15,17)=6  (16,15)=9# (17,15)=6  (17,16)=7# (17,17)=7# (17,18)=4  (18,15)=1  (18,16)=5# (18,17)=8  (18,18)=1 
! size mismatch, 10x10 instead of 4x4

TEST 6ecd11f4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3117.9 bits (3117.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-230] Checking task 6f8cd79b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 616.6 = 625.6
DL output with Mo: L = 9.0 + 4306.0 = 4314.9
DL input+output M: L = 17.9 + 4922.6 = 4940.5

# learning a model for train pairs
4940.5	
2508.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
1948.6	OUT DEF: size={size}
1634.6	OUT DEF: color=cyan
1447.5	OUT DEF: layer[0].color={color}
1353.7	OUT DEF: layer[0].mask=full
1293.5	IN  DEF: color=black
1245.2	OUT DEF: layer[0].pos=(?,?)
1113.0	OUT DEF: layer[0].pos.i=1
985.5	OUT DEF: layer[0].pos.j=1
937.2	OUT DEF: layer[0].size=(?,?)
768.2	OUT DEF: layer[0].size.i={size.i - 2}
622.6	OUT DEF: layer[0].size.j={size.j - 2}
574.3	IN  DEF: size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color cyan and layers
  [0]: a rectangle at (1,1) with size ({size.i - 2},{size.j - 2}) and color {color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 11.7 + 505.4 = 517.2
DL output with Mo: L = 57.1 + 0.0 = 57.1
DL input+output M: L = 68.9 + 505.4 = 574.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
diff: 
delta:
   (11.0 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,1) with size (1,1) and color black and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,3) and color black and layers
diff: 
delta:
   (11.8 bits)
data: a background with size (4,3) and color cyan and layers
  [0]: a rectangle at (1,1) with size (2,1) and color black and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,4) and color black and layers
diff: 
delta:
   (13.3 bits)
data: a background with size (5,4) and color cyan and layers
  [0]: a rectangle at (1,1) with size (3,2) and color black and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (5,6) and color black and layers
diff: 
delta:
   (14.5 bits)
data: a background with size (5,6) and color cyan and layers
  [0]: a rectangle at (1,1) with size (3,4) and color black and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
diff: 
delta:
correct output grid

TEST 6f8cd79b.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-229] Checking task 6fa7a44f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3983.4 = 3992.4
DL output with Mo: L = 9.0 + 7515.1 = 7524.0
DL input+output M: L = 17.9 + 11498.5 = 11516.4

# learning a model for train pairs
11516.4	
9604.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8860.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8416.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8090.5	OUT DEF: layer[0].pos={layer[0].pos}
7802.7	OUT DEF: color={color}
7616.3	OUT DEF: layer[0].color={layer[0].color}
7522.4	OUT DEF: layer[01].mask=full
7474.2	OUT DEF: size=(?,?)
7178.7	OUT DEF: size.i=6
6958.9	OUT DEF: size.j={size.j}
6910.7	OUT DEF: layer[0].size=(?,?)
6640.1	OUT DEF: layer[0].size.i={layer[0].size.i + layer[0].size.i}
6444.0	OUT DEF: layer[0].size.j={layer[0].size.j}
6395.8	OUT DEF: layer[01].pos=(?,?)
6259.7	OUT DEF: layer[01].pos.i={layer[0].pos.i}
6211.5	OUT DEF: layer[01].size=(?,?)
5941.6	OUT DEF: layer[01].size.i={layer[0].size.i + layer[0].size.i}
5847.7	OUT DEF: layer[01].size.j=1
5799.4	IN  DEF: size=(?,?)
5581.9	IN  DEF: size.i=3
5364.4	IN  DEF: size.j=3
5316.2	IN  DEF: layer[0].pos=(?,?)
5268.0	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (6,{size.j}) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i + layer[0].size.i},{layer[0].size.j}) and color {layer[0].color} and mask ?
  [01]: a rectangle at ({layer[0].pos.i},?) with size ({layer[0].size.i + layer[0].size.i},1) and color ? and mask full
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 44.8 + 2955.9 = 3000.8
DL output with Mo: L = 74.3 + 2192.9 = 2267.2
DL input+output M: L = 119.2 + 5148.8 = 5268.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (2,0)=2 
   (76.9 bits)
data: a background with size (6,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (6,2) and color blue and mask 10111110101
  [01]: a rectangle at (0,2) with size (6,1) and color yellow and mask full
diff: 
delta: (2,0)=2  (3,0)=2 
   (55.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,1) and color brown and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (2,0)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,0)=9# (1,0)=9# (2,0)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (2,0)=2 
! 10 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,3) and color orange and mask 10101
diff: 
delta: (0,0)=4  (0,2)=4  (1,1)=6 
   (82.9 bits)
data: a background with size (6,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (4,3) and color orange and mask 101010010101
  [01]: a rectangle at (1,1) with size (4,1) and color pink and mask full
diff: 
delta: (0,0)=4  (0,2)=4  (5,0)=4  (5,2)=4 
   (86.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,3) and color orange and mask 10101
diff: 
delta: (0,0)=4  (0,2)=4  (1,1)=6 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,0) with size (1,3) and color yellow and mask full
diff: 
delta: (0,1)=8  (1,1)=6  (2,0)=8  (2,2)=8 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,3) and color orange and mask full
diff: 
delta: (0,0)=4  (0,2)=4  (1,1)=6  (2,1)=7#
! 11 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (1,0) with size (2,3) and color grey and mask 1110
diff: 
delta: (1,0)=9# (2,1)=1 
   (67.9 bits)
data: a background with size (6,3) and color orange and layers
  [0]: a rectangle at (1,0) with size (4,3) and color grey and mask 110001001110
  [01]: a rectangle at (1,0) with size (4,1) and color brown and mask full
diff: 
delta: (2,1)=1  (3,1)=1 
   (55.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (1,0) with size (2,3) and color grey and mask 1110
diff: 
delta: (1,0)=9# (2,1)=1 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (1,1) with size (1,2) and color grey and mask full
diff: 
delta: (1,0)=9# (2,0)=5# (2,1)=1 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,3) and color orange and mask full
diff: 
delta: (1,0)=9# (2,1)=1  (2,2)=7#
! 11 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,2) and color brown and mask 11010
diff: 
delta: (0,1)=6  (1,1)=6 
   (67.9 bits)
data: a background with size (6,3) and color red and layers
  [0]: a rectangle at (0,1) with size (6,2) and color brown and mask 101001011010
  [01]: a rectangle at (0,1) with size (6,1) and color pink and mask full
diff: 
delta:
   (21.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,2) and color brown and mask 11010
diff: 
delta: (0,1)=6  (1,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (2,1) and color pink and mask full
diff: 
delta: (0,2)=9# (1,2)=9# (2,1)=9#
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (2,1) and color brown and mask full
diff: 
delta: (0,1)=6  (1,1)=6  (2,1)=9#
! 14 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,1) and color brown and mask full
diff: 
delta: (1,0)=8  (1,1)=5# (2,2)=8 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (1,1) and color cyan and mask full
diff: 
delta: (0,1)=9# (1,1)=5# (2,2)=8 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (1,1) and color grey and mask full
diff: 
delta: (0,1)=9# (1,0)=8  (2,2)=8 
! 9 wrong pixels (generated / expected)

TEST 6fa7a44f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2192.9 bits (2192.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-228] Checking task 72322fa7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7324.7 = 7333.7
DL output with Mo: L = 9.0 + 11707.3 = 11716.3
DL input+output M: L = 17.9 + 19032.0 = 19050.0

# learning a model for train pairs
19050.0	
18399.7	OUT DEF: size={size}
17847.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17303.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16331.2	OUT DEF: layer[0]={layer[0]}
15784.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15233.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14677.8	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
14275.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13969.8	OUT DEF: layer[011].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 6333.6 = 6377.0
DL output with Mo: L = 63.6 + 7529.3 = 7592.9
DL input+output M: L = 106.9 + 13862.9 = 13969.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,22) and color black and layers
  [0]: a rectangle at (3,5) with size (3,3) and color cyan and mask 10101010
  [01]: a rectangle at (9,15) with size (3,3) and color cyan and mask 10101010
diff: 
delta: (1,13)=3  (4,6)=6  (5,19)=6  (9,1)=1  (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
   (283.0 bits)
data: a background with size (13,22) and color black and layers
  [0]: a rectangle at (3,5) with size (3,3) and color cyan and mask 10101010
  [01]: a rectangle at (4,18) with size (3,3) and color cyan and mask 10101010
  [011]: a rectangle at (9,8) with size (3,3) and color cyan and mask 10101010
  [0111]: a rectangle at (9,15) with size (3,3) and color cyan and mask 10101010
diff: 
delta: (0,12)=1  (0,14)=1  (1,13)=3  (2,12)=1  (2,14)=1  (4,6)=6  (5,19)=6  (9,1)=1  (9,3)=1  (10,2)=3  (10,9)=6  (10,16)=6  (11,1)=1  (11,3)=1 
   (385.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,22) and color black and layers
  [0]: a rectangle at (3,5) with size (3,3) and color cyan and mask 10101010
  [01]: a rectangle at (9,15) with size (3,3) and color cyan and mask 10101010
diff: 
delta: (1,13)=3  (4,6)=6  (5,19)=6  (9,1)=1  (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,22) and color black and layers
  [0]: a rectangle at (9,15) with size (3,3) and color cyan and mask 10101010
  [01]: a rectangle at (3,5) with size (3,3) and color cyan and mask 10101010
diff: 
delta: (1,13)=3  (4,6)=6  (5,19)=6  (9,1)=1  (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 35 wrong pixels (generated / expected)

TRAIN 72322fa7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (3,1) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (4,10) with size (1,1) and color cyan and mask full
diff: 
delta: (3,2)=8  (9,0)=4  (9,2)=4  (10,7)=8 
   (151.0 bits)
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (3,1) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (4,9) with size (1,3) and color yellow and mask full
  [011]: a rectangle at (9,0) with size (1,3) and color yellow and mask full
  [0111]: a rectangle at (10,6) with size (1,3) and color yellow and mask full
diff: 
delta: (3,2)=8  (4,10)=8  (9,1)=8  (10,7)=8 
   (151.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (3,1) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (4,10) with size (1,1) and color cyan and mask full
diff: 
delta: (3,2)=8  (9,0)=4  (9,2)=4  (10,7)=8 
! 15 wrong pixels (generated / expected)

TRAIN 72322fa7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,19) and color black and layers
  [0]: a rectangle at (1,15) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (4,3) with size (3,1) and color blue and mask full
diff: 
delta: (1,16)=2  (3,8)=8  (3,10)=8  (5,3)=3  (11,5)=2  (12,12)=3 
   (199.3 bits)
data: a background with size (14,19) and color black and layers
  [0]: a rectangle at (1,15) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (3,8) with size (1,3) and color cyan and mask full
  [011]: a rectangle at (11,4) with size (1,3) and color cyan and mask full
  [0111]: a rectangle at (4,3) with size (3,1) and color blue and mask full
diff: 
delta: (1,16)=2  (3,9)=2  (5,3)=3  (11,5)=2  (11,12)=1  (12,12)=3  (13,12)=1 
   (215.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,19) and color black and layers
  [0]: a rectangle at (1,15) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (4,3) with size (3,1) and color blue and mask full
diff: 
delta: (1,16)=2  (3,8)=8  (3,10)=8  (5,3)=3  (11,5)=2  (12,12)=3 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,19) and color black and layers
  [0]: a rectangle at (4,3) with size (3,1) and color blue and mask full
  [01]: a rectangle at (1,15) with size (1,3) and color cyan and mask full
diff: 
delta: (1,16)=2  (3,8)=8  (3,10)=8  (5,3)=3  (11,5)=2  (12,12)=3 
! 18 wrong pixels (generated / expected)

TRAIN 72322fa7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (7,15) with size (3,3) and color red and mask 10101010
  [01]: a rectangle at (14,10) with size (3,3) and color red and mask 10101010
diff: 
delta: (1,12)=3  (1,13)=7# (1,14)=3  (2,8)=8  (3,3)=4  (6,5)=3  (6,7)=3  (8,16)=4  (10,1)=8  (10,9)=7# (15,17)=1  (16,5)=4  (16,17)=8  (17,17)=1 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (14,10) with size (3,3) and color red and mask 10101010
  [01]: a rectangle at (7,15) with size (3,3) and color red and mask 10101010
diff: 
delta: (1,12)=3  (1,13)=7# (1,14)=3  (2,8)=8  (3,3)=4  (6,5)=3  (6,7)=3  (8,16)=4  (10,1)=8  (10,9)=7# (15,17)=1  (16,5)=4  (16,17)=8  (17,17)=1 
! 43 wrong pixels (generated / expected)

TEST 72322fa7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7529.3 bits (7529.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-227] Checking task 72ca375d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9834.6 = 9843.6
DL output with Mo: L = 9.0 + 1198.6 = 1207.6
DL input+output M: L = 17.9 + 11033.3 = 11051.2

# learning a model for train pairs
11051.2	
8386.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6475.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5213.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4876.0	OUT DEF: size={layer[01].size}
4638.2	OUT DEF: color={layer[01].color}
4592.6	IN  DEF: color=black
4557.6	IN  DEF: size=(?,?)
4294.3	IN  DEF: size.i=10
4031.0	IN  DEF: size.j=10
3996.0	IN  DEF: layer[0].pos=(?,?)
3960.9	IN  DEF: layer[0].size=(?,?)
3925.9	IN  DEF: layer[011].pos=(?,?)
3797.3	IN  DEF: layer[0].size.i=2
3762.3	IN  DEF: layer[01].pos=(?,?)
3727.2	IN  DEF: layer[01].size=(?,?)
3598.6	IN  DEF: layer[01].size.i=2
3563.6	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[01].size} and color {layer[01].color} and layers
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (2,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (2,?) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 103.7 + 2827.4 = 2931.2
DL output with Mo: L = 11.8 + 620.7 = 632.4
DL input+output M: L = 115.5 + 3448.1 = 3563.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (2,4) and color red and mask 11100011
  [01]: a rectangle at (6,3) with size (2,4) and color pink and mask 1101111
  [011]: a rectangle at (2,6) with size (2,3) and color orange and mask 101110
diff: 
delta:
   (93.2 bits)
data: a background with size (2,4) and color pink and layers
diff: 
delta: (1,0)=0  (1,3)=0 
   (31.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,3) with size (2,4) and color pink and mask 1101111
  [01]: a rectangle at (1,1) with size (2,4) and color red and mask 11100011
  [011]: a rectangle at (2,6) with size (2,3) and color orange and mask 101110
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,3) with size (2,4) and color pink and mask 1101111
  [01]: a rectangle at (2,6) with size (2,3) and color orange and mask 101110
  [011]: a rectangle at (1,1) with size (2,4) and color red and mask 11100011
diff: 
delta:
! size mismatch, 2x3 instead of 2x4
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (2,4) and color red and mask 11100011
  [01]: a rectangle at (6,3) with size (2,4) and color pink and mask 1101111
  [011]: a rectangle at (2,6) with size (2,3) and color orange and mask 101110
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 72ca375d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,1) with size (2,5) and color red and mask 11111110
  [01]: a rectangle at (1,2) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (2,6) with size (2,4) and color cyan and mask 11010111
diff: 
delta:
   (88.7 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,1) with size (2,5) and color red and mask 11111110
  [01]: a rectangle at (2,6) with size (2,4) and color cyan and mask 11010111
  [011]: a rectangle at (1,2) with size (2,2) and color yellow and mask full
diff: 
delta:
! size mismatch, 2x4 instead of 2x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,1) with size (2,5) and color red and mask 11111110
  [01]: a rectangle at (1,2) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (2,6) with size (2,4) and color cyan and mask 11010111
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,0) with size (2,7) and color cyan and mask 11011110111000
  [01]: a rectangle at (2,5) with size (2,4) and color grey and mask 11111001
  [011]: a rectangle at (1,1) with size (3,2) and color green and mask 101011
diff: 
delta:
   (100.8 bits)
data: a background with size (2,4) and color grey and layers
diff: 
delta: (0,1)=0  (0,2)=0 
   (31.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,0) with size (2,7) and color cyan and mask 11011110111000
  [01]: a rectangle at (2,5) with size (2,4) and color grey and mask 11111001
  [011]: a rectangle at (1,1) with size (3,2) and color green and mask 101011
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,0) with size (2,7) and color cyan and mask 11011110111000
  [01]: a rectangle at (1,1) with size (3,2) and color green and mask 101011
  [011]: a rectangle at (2,5) with size (2,4) and color grey and mask 11111001
diff:   layer[01].size.i
delta:
! size mismatch, 3x2 instead of 2x4

TRAIN 72ca375d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (2,5) and color yellow and mask 1100111111
  [01]: a rectangle at (2,0) with size (3,4) and color brown and mask 111101100110
  [011]: a rectangle at (1,5) with size (3,4) and color green and mask 100011111001
diff:   layer[01].size.i
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (2,5) and color yellow and mask 1100111111
  [01]: a rectangle at (1,5) with size (3,4) and color green and mask 100011111001
  [011]: a rectangle at (2,0) with size (3,4) and color brown and mask 111101100110
diff:   layer[01].size.i
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (3,4) and color brown and mask 111101100110
  [01]: a rectangle at (7,4) with size (2,5) and color yellow and mask 1100111111
  [011]: a rectangle at (1,5) with size (3,4) and color green and mask 100011111001
diff:   layer[0].size.i
delta:
! size mismatch, 2x5 instead of 3x4

TEST 72ca375d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 620.7 bits (620.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-226] Checking task 73251a56.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 149097.6 = 149106.5
DL output with Mo: L = 9.0 + 128974.4 = 128983.4
DL input+output M: L = 17.9 + 278072.0 = 278089.9

# learning a model for train pairs
278089.9	
226917.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
181086.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
168768.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
157508.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 91972.2 = 92015.6
DL output with Mo: L = 43.4 + 65449.8 = 65493.1
DL input+output M: L = 86.7 + 157422.0 = 157508.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color blue and layers
  [0]: a rectangle at (0,0) with size (21,21) and color pink and mask 11111111110000000010101111100001000000010110111100001000000000111011111111100000000111101111111100000000111110111111110000000111100000111110000000111100000111111000001111100000001111000001111100000001111100000111111111101111100000011111111100011110000000111111100011110000000001111100001111000000000011111110111000000000000011111011100000000000001111101100000000000000011110110000000000000000111010110000000000000001101000000011000000000010
  [01]: a rectangle at (1,7) with size (5,14) and color red and mask 1100000000111111111000000111000111110000010000000111100011000000000111
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (4,11)=0  (4,12)=0  (4,13)=0  (5,0)=2  (5,11)=0  (5,12)=0  (5,13)=0  (6,0)=3  (7,0)=3  (7,1)=2  (7,8)=0  (7,9)=0  (7,10)=0  (8,0)=4  (8,1)=2  (8,8)=0  (8,9)=0  (8,10)=0  (9,0)=4  (9,1)=2  (9,8)=0  (9,9)=0  (9,10)=0  (10,0)=5# (10,1)=3  (10,2)=2  (11,0)=5# (11,1)=3  (11,2)=2  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=0  (12,1)=3  (12,2)=2  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (12,16)=0  (13,1)=4  (13,2)=2  (13,3)=2  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=0  (14,1)=4  (14,2)=3  (14,3)=2  (14,12)=0  (14,13)=0  (14,14)=0  (14,15)=0  (14,16)=0  (15,1)=4  (15,2)=3  (15,3)=2  (16,0)=2  (16,1)=5# (16,2)=3  (16,3)=2  (16,4)=2  (17,0)=2  (17,1)=5# (17,2)=3  (17,3)=2  (17,4)=2  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,4)=2  (18,10)=0  (18,11)=0  (18,12)=0  (18,13)=0  (19,0)=3  (19,2)=4  (19,3)=3  (19,4)=2  (19,5)=2  (19,10)=0  (19,11)=0  (19,12)=0  (19,13)=0  (20,0)=4  (20,2)=4  (20,3)=3  (20,4)=2  (20,5)=2 
   (3200.9 bits)
data: a background with size (21,21) and color red and layers
  [0]: a rectangle at (0,0) with size (21,21) and color pink and mask 11111111110000000010101111111111000000010110111111111000000000111011111111100000000111101111111100000000111110111111110000000111111011111110000000111111101111111000001111111110111111000001111111111011111100000111111111101111100000011111111110111110000000111111111011110000000001111111101111000000000011111110111000000000000111111011100000000000001111101100000000000000011110110000000000000000111010110000000000000001101000000011000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color blue and mask 111111111111111000010111111111111111000010111111111111111100000111111111111111100000111111111111111100000111111111111111110001111111111111111110001111111111111111110001111111111111111111001111111111111111111000111111111111111111000111111111111111111100111111111111111111100111111111111111111100111111111111111111110001111111111111111110000001111111111111110000000001111111111111000000000001111111111110000000000001111111000001111000000001111
diff: 
delta: (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (6,0)=3  (7,0)=3  (8,0)=4  (9,0)=4  (10,0)=5# (10,1)=3  (11,0)=5# (11,1)=3  (12,1)=3  (13,1)=4  (14,1)=4  (14,2)=3  (15,1)=4  (15,2)=3  (16,1)=5# (16,2)=3  (17,1)=5# (17,2)=3  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (19,0)=3  (19,2)=4  (19,3)=3  (20,0)=4  (20,2)=4  (20,3)=3 
   (2115.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color blue and layers
  [0]: a rectangle at (0,0) with size (21,21) and color pink and mask 11111111110000000010101111100001000000010110111100001000000000111011111111100000000111101111111100000000111110111111110000000111100000111110000000111100000111111000001111100000001111000001111100000001111100000111111111101111100000011111111100011110000000111111100011110000000001111100001111000000000011111110111000000000000011111011100000000000001111101100000000000000011110110000000000000000111010110000000000000001101000000011000000000010
  [01]: a rectangle at (1,7) with size (5,14) and color red and mask 1100000000111111111000000111000111110000010000000111100011000000000111
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (4,11)=0  (4,12)=0  (4,13)=0  (5,0)=2  (5,11)=0  (5,12)=0  (5,13)=0  (6,0)=3  (7,0)=3  (7,1)=2  (7,8)=0  (7,9)=0  (7,10)=0  (8,0)=4  (8,1)=2  (8,8)=0  (8,9)=0  (8,10)=0  (9,0)=4  (9,1)=2  (9,8)=0  (9,9)=0  (9,10)=0  (10,0)=5# (10,1)=3  (10,2)=2  (11,0)=5# (11,1)=3  (11,2)=2  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=0  (12,1)=3  (12,2)=2  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (12,16)=0  (13,1)=4  (13,2)=2  (13,3)=2  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=0  (14,1)=4  (14,2)=3  (14,3)=2  (14,12)=0  (14,13)=0  (14,14)=0  (14,15)=0  (14,16)=0  (15,1)=4  (15,2)=3  (15,3)=2  (16,0)=2  (16,1)=5# (16,2)=3  (16,3)=2  (16,4)=2  (17,0)=2  (17,1)=5# (17,2)=3  (17,3)=2  (17,4)=2  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,4)=2  (18,10)=0  (18,11)=0  (18,12)=0  (18,13)=0  (19,0)=3  (19,2)=4  (19,3)=3  (19,4)=2  (19,5)=2  (19,10)=0  (19,11)=0  (19,12)=0  (19,13)=0  (20,0)=4  (20,2)=4  (20,3)=3  (20,4)=2  (20,5)=2 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color grey and mask 11111111110000000000101111111111000000000110111111000000000000111011111000000000000111101111111100000000111110111111110000001111111011111110000001111111101111111000000111111110111111000000111111111011111100000111111111101111100000011100000110111110000000100000000011110000000001111000101000000000000011000110000000000000000111111000100000000000001111000100000000000000011000110000000000000000111010000000000000000001101000001100000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color pink and mask 111111111111111000000111111111111111000000111111111000011100000111111111000011100001111111111111111100001111111111111111000001111111111111111000001111111111111111110000111111111111111111000111111111111111111000111111111111111111000111100000111111111100111100000000111111100111111111000111000100111111111000111000110001111111111111000110000001111111111000110000000001111111000111000000000001111111111000000000000001111111000111100000000001111
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,18)=7# (0,19)=7# (0,20)=1  (1,7)=7# (1,8)=7# (1,9)=7# (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,13)=7# (3,14)=7# (3,15)=7# (3,16)=7# (3,17)=7# (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (4,16)=7# (4,17)=7# (4,18)=7# (4,19)=7# (4,20)=7# (5,0)=7# (5,19)=7# (5,20)=7# (6,0)=1  (7,0)=1  (7,1)=7# (8,0)=2  (8,1)=7# (9,0)=2  (9,1)=7# (10,0)=3  (10,1)=1  (10,2)=7# (11,0)=3  (11,1)=1  (11,2)=7# (12,0)=4  (12,1)=1  (12,2)=7# (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (14,1)=2  (15,1)=2  (16,1)=3  (16,2)=1  (16,3)=7# (16,4)=7# (17,1)=3  (17,2)=1  (17,3)=7# (17,4)=7# (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (18,4)=7# (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (19,4)=7# (19,5)=7# (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1  (20,4)=7# (20,5)=7#
   (3017.9 bits)
data: a background with size (21,21) and color orange and layers
  [0]: a rectangle at (0,0) with size (21,21) and color grey and mask 11111111110000000000101111111111000000000110111111111000000000111011111111100000000111101111111100000000111110111111110000001111111011111110000001111111101111111000000111111110111111000000111111111011111100000111111111101111100000011111111110111110000000111111111011110000000001111111101111000000000011111110111000000000000111111011100000000000001111101100000000000000011110110000000000000000111010000000000000000001101000001100000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color pink and mask 111111111111111000000111111111111111000000111111111111111100000111111111111111100001111111111111111100001111111111111111110001111111111111111110001111111111111111110000111111111111111111000111111111111111111000111111111111111111000111111111111111111100111111111111111111100111111111111111111100111111111111111111110001111111111111111110000001111111111111110000000001111111111111000000000001111111111000000000000001111111000111100000000001111
diff: 
delta: (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,20)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,18)=1  (3,19)=1  (3,20)=1  (6,0)=1  (7,0)=1  (8,0)=2  (9,0)=2  (10,0)=3  (10,1)=1  (11,0)=3  (11,1)=1  (12,0)=4  (12,1)=1  (13,0)=4  (13,1)=2  (14,1)=2  (14,2)=1  (15,1)=2  (15,2)=1  (16,1)=3  (16,2)=1  (17,1)=3  (17,2)=1  (18,1)=3  (18,2)=2  (18,3)=1  (19,1)=4  (19,2)=2  (19,3)=1  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1 
   (2194.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color grey and mask 11111111110000000000101111111111000000000110111111000000000000111011111000000000000111101111111100000000111110111111110000001111111011111110000001111111101111111000000111111110111111000000111111111011111100000111111111101111100000011100000110111110000000100000000011110000000001111000101000000000000011000110000000000000000111111000100000000000001111000100000000000000011000110000000000000000111010000000000000000001101000001100000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color pink and mask 111111111111111000000111111111111111000000111111111000011100000111111111000011100001111111111111111100001111111111111111000001111111111111111000001111111111111111110000111111111111111111000111111111111111111000111111111111111111000111100000111111111100111100000000111111100111111111000111000100111111111000111000110001111111111111000110000001111111111000110000000001111111000111000000000001111111111000000000000001111111000111100000000001111
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,18)=7# (0,19)=7# (0,20)=1  (1,7)=7# (1,8)=7# (1,9)=7# (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,13)=7# (3,14)=7# (3,15)=7# (3,16)=7# (3,17)=7# (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (4,16)=7# (4,17)=7# (4,18)=7# (4,19)=7# (4,20)=7# (5,0)=7# (5,19)=7# (5,20)=7# (6,0)=1  (7,0)=1  (7,1)=7# (8,0)=2  (8,1)=7# (9,0)=2  (9,1)=7# (10,0)=3  (10,1)=1  (10,2)=7# (11,0)=3  (11,1)=1  (11,2)=7# (12,0)=4  (12,1)=1  (12,2)=7# (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (14,1)=2  (15,1)=2  (16,1)=3  (16,2)=1  (16,3)=7# (16,4)=7# (17,1)=3  (17,2)=1  (17,3)=7# (17,4)=7# (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (18,4)=7# (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (19,4)=7# (19,5)=7# (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1  (20,4)=7# (20,5)=7#
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color yellow and mask 11111111110000000000101111111111000000000110111111000000000000111011111000100000001111101111000100000001111110000000110000000111111000000110000000111111000001111000000111111110011111000000111111110011111100000111111110001111100000011111111110111110000000111111111011110000000001111111101111000000000011111110111000000000000111111011100000000000001111101100000000000000011110110000000000000000111010000000000000000001101000110000000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color grey and mask 111111111111111000000111111111111111000001111111111000111100001111111111000111100001111111111000111100001111111000000111110000111111000000111110000111111000001111110000111111110011111111000111111110011111111000111111110011111111000111111111111111111100111111111111111111100111111111111111111100111001111111111111110001001111111111111110000001111111111111110000000001111111111111000000000001111111111000000000000001111111011110000000000001111
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,20)=6  (1,7)=6  (1,8)=6  (1,9)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,10)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=7# (2,15)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,13)=6  (3,14)=6  (3,15)=6  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,19)=6  (5,20)=6  (6,0)=7# (7,0)=7# (7,1)=6  (8,0)=8  (8,1)=6  (9,0)=8  (9,1)=6  (10,0)=1  (10,1)=7# (10,2)=6  (11,0)=1  (11,1)=7# (11,2)=6  (12,0)=2  (12,1)=7# (12,2)=6  (13,0)=2  (13,1)=8  (13,2)=6  (13,3)=6  (14,0)=3  (14,1)=8  (14,2)=7# (14,3)=6  (15,0)=3  (15,1)=8  (15,2)=7# (15,3)=6  (16,1)=1  (16,2)=7# (16,3)=6  (16,4)=6  (17,1)=1  (17,2)=7# (17,3)=6  (17,4)=6  (18,1)=1  (18,2)=8  (18,3)=7# (18,4)=6  (19,1)=2  (19,2)=8  (19,3)=7# (19,4)=6  (19,5)=6  (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7# (20,4)=6  (20,5)=6 
   (2978.4 bits)
data: a background with size (21,21) and color pink and layers
  [0]: a rectangle at (0,0) with size (21,21) and color yellow and mask 11111111110000000000101111111111000000000110111111111000000000111011111111100000001111101111111100000001111110111111110000000111111011111110000000111111101111111000000111111110111111000000111111111011111100000111111111101111100000011111111110111110000000111111111011110000000001111111101111000000000011111110111000000000000111111011100000000000001111101100000000000000011110110000000000000000111010000000000000000001101000110000000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color grey and mask 111111111111111000000111111111111111000001111111111111111100001111111111111111100001111111111111111100001111111111111111110000111111111111111110000111111111111111110000111111111111111111000111111111111111111000111111111111111111000111111111111111111100111111111111111111100111111111111111111100111111111111111111110001111111111111111110000001111111111111110000000001111111111111000000000001111111111000000000000001111111011110000000000001111
diff: 
delta: (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,18)=7# (3,19)=7# (3,20)=7# (6,0)=7# (7,0)=7# (8,0)=8  (9,0)=8  (10,0)=1  (10,1)=7# (11,0)=1  (11,1)=7# (12,0)=2  (12,1)=7# (13,0)=2  (13,1)=8  (14,0)=3  (14,1)=8  (14,2)=7# (15,0)=3  (15,1)=8  (15,2)=7# (16,1)=1  (16,2)=7# (17,1)=1  (17,2)=7# (18,1)=1  (18,2)=8  (18,3)=7# (19,1)=2  (19,2)=8  (19,3)=7# (20,1)=2  (20,2)=8  (20,3)=7#
   (2234.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color yellow and mask 11111111110000000000101111111111000000000110111111000000000000111011111000100000001111101111000100000001111110000000110000000111111000000110000000111111000001111000000111111110011111000000111111110011111100000111111110001111100000011111111110111110000000111111111011110000000001111111101111000000000011111110111000000000000111111011100000000000001111101100000000000000011110110000000000000000111010000000000000000001101000110000000000000010
  [01]: a rectangle at (0,0) with size (21,21) and color grey and mask 111111111111111000000111111111111111000001111111111000111100001111111111000111100001111111111000111100001111111000000111110000111111000000111110000111111000001111110000111111110011111111000111111110011111111000111111110011111111000111111111111111111100111111111111111111100111111111111111111100111001111111111111110001001111111111111110000001111111111111110000000001111111111111000000000001111111111000000000000001111111011110000000000001111
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,20)=6  (1,7)=6  (1,8)=6  (1,9)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,10)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=7# (2,15)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,13)=6  (3,14)=6  (3,15)=6  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,19)=6  (5,20)=6  (6,0)=7# (7,0)=7# (7,1)=6  (8,0)=8  (8,1)=6  (9,0)=8  (9,1)=6  (10,0)=1  (10,1)=7# (10,2)=6  (11,0)=1  (11,1)=7# (11,2)=6  (12,0)=2  (12,1)=7# (12,2)=6  (13,0)=2  (13,1)=8  (13,2)=6  (13,3)=6  (14,0)=3  (14,1)=8  (14,2)=7# (14,3)=6  (15,0)=3  (15,1)=8  (15,2)=7# (15,3)=6  (16,1)=1  (16,2)=7# (16,3)=6  (16,4)=6  (17,1)=1  (17,2)=7# (17,3)=6  (17,4)=6  (18,1)=1  (18,2)=8  (18,3)=7# (18,4)=6  (19,1)=2  (19,2)=8  (19,3)=7# (19,4)=6  (19,5)=6  (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7# (20,4)=6  (20,5)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color yellow and layers
  [0]: a rectangle at (0,0) with size (21,21) and color green and mask 11111111110000000000101100000111000000001110100000111000000001111011111111000000000100000111111000000000100000111111000000000111111011111110000000111111101111111000000111111110111111000000111111111011111100000111111111101111100000011111111110111100000000111111111011100000000001111111101111000000000011111110111000000000000001111011100000000000001111101100000000000000011110110000000000000000111010000000000000000001101011000000000000000010
  [01]: a rectangle at (2,12) with size (4,9) and color grey and mask 110000000111110000000111110000000011
diff: 
delta: (0,4)=5# (0,5)=5# (0,6)=6  (0,7)=6  (0,8)=7# (0,9)=7# (0,10)=8  (0,11)=8  (0,12)=9# (0,13)=9# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=0  (1,11)=0  (1,12)=6  (1,13)=7# (1,14)=7# (1,15)=7# (1,16)=8  (1,17)=8  (1,18)=8  (1,19)=9# (1,20)=9# (2,10)=0  (2,11)=0  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,18)=7# (2,19)=7# (2,20)=7# (3,10)=0  (3,11)=0  (3,18)=6  (3,19)=6  (3,20)=6  (4,0)=5# (4,10)=0  (4,11)=0  (5,0)=5# (5,10)=0  (5,11)=0  (6,0)=6  (7,0)=6  (7,1)=5# (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (10,0)=8  (10,1)=6  (10,2)=5# (11,0)=8  (11,1)=6  (11,2)=5# (12,0)=9# (12,1)=6  (12,2)=5# (13,0)=9# (13,1)=7# (13,2)=5# (13,3)=5# (14,0)=1  (14,1)=7# (14,2)=6  (14,3)=5# (15,0)=1  (15,1)=7# (15,2)=6  (15,3)=5# (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=0  (15,8)=0  (15,15)=0  (15,16)=0  (15,17)=0  (15,18)=0  (15,19)=0  (16,0)=2  (16,1)=8  (16,2)=6  (16,3)=5# (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,15)=0  (16,16)=0  (16,17)=0  (16,18)=0  (16,19)=0  (17,0)=2  (17,1)=8  (17,2)=6  (17,3)=5# (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=0  (17,8)=0  (18,1)=8  (18,2)=7# (18,3)=6  (18,4)=5# (18,12)=0  (18,13)=0  (18,14)=0  (18,15)=0  (18,16)=0  (19,1)=9# (19,2)=7# (19,3)=6  (19,4)=5# (19,5)=5# (19,12)=0  (19,13)=0  (19,14)=0  (19,15)=0  (19,16)=0  (20,1)=9# (20,2)=7# (20,3)=6  (20,4)=5# (20,5)=5#
! size mismatch, 10x10 instead of 21x21

TEST 73251a56.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 65449.8 bits (65449.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-225] Checking task 7447852a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7830.9 = 7839.8
DL output with Mo: L = 9.0 + 12791.9 = 12800.9
DL input+output M: L = 17.9 + 20622.8 = 20640.7

# learning a model for train pairs
20640.7	
15654.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10831.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8536.0	OUT DEF: layer[0]={layer[0]}
7376.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6327.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5825.2	OUT DEF: size={size}
5687.2	OUT DEF: layer[01].color=yellow
5392.2	OUT SHAPE at layer[010]: a rectangle at ? with size ? and color ? and mask ?
5254.2	OUT DEF: layer[010].color=yellow
5116.2	OUT DEF: layer[011].color=yellow
4978.2	IN  DEF: layer[0].color=red
4907.5	OUT DEF: layer[010].mask=full
4836.9	OUT DEF: layer[01].mask=full
4766.2	OUT DEF: layer[011].mask=full
4720.6	OUT DEF: color=black
4675.0	IN  DEF: color=black
4640.0	OUT DEF: layer[010].pos=(?,?)
4555.7	OUT DEF: layer[010].pos.i=1
4402.3	OUT DEF: layer[010].pos.j={layer[0].pos.j}
4367.2	OUT DEF: layer[010].size=(?,?)
4238.6	OUT DEF: layer[010].size.i=2
4109.9	OUT DEF: layer[010].size.j=2
4074.9	OUT DEF: layer[01].pos=(?,?)
3931.2	OUT DEF: layer[01].pos.j={layer[0].size.i + 2}
3844.2	OUT DEF: layer[01].pos.i={layer[0].pos.i}
3809.2	OUT DEF: layer[01].size=(?,?)
3646.1	OUT DEF: layer[01].size.j={layer[0].size.i}
3611.1	OUT DEF: layer[011].pos=(?,?)
3576.1	OUT DEF: layer[011].size=(?,?)
3444.7	OUT DEF: layer[011].size.j={layer[0].size.i}
3316.0	OUT DEF: layer[011].size.i=2
3281.0	IN  DEF: size=(?,?)
3118.4	IN  DEF: size.i=3
3083.4	IN  DEF: layer[0].pos=(?,?)
2932.7	IN  DEF: layer[0].pos.j=0
2845.1	IN  DEF: layer[0].pos.i=0
2810.0	IN  DEF: layer[0].size=(?,?)
2647.5	IN  DEF: layer[0].size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [010]: a rectangle at (1,{layer[0].pos.j}) with size (2,2) and color yellow and mask full
  [01]: a rectangle at ({layer[0].pos.i},{layer[0].size.i + 2}) with size (?,{layer[0].size.i}) and color yellow and mask full
  [011]: a rectangle at (?,?) with size (2,{layer[0].size.i}) and color yellow and mask full
WHERE (Mi)
a background with size (3,?) and color black and layers
  [0]: a rectangle at (0,0) with size (3,?) and color red and mask ?

DL input  with Mi: L = 46.8 + 1954.9 = 2001.7
DL output with Mo: L = 108.4 + 537.4 = 645.7
DL input+output M: L = 155.2 + 2492.3 = 2647.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,10) and color red and mask 100010010101010100100010001
diff: 
delta:
   (50.3 bits)
data: a background with size (3,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,10) and color red and mask 100010010101010100100010001
  [010]: a rectangle at (1,0) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (0,5) with size (1,3) and color yellow and mask full
  [011]: a rectangle at (0,5) with size (2,3) and color yellow and mask full
diff: 
delta:
   (9.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,10) and color red and mask 100010010101010100100010001
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,10) and color red and layers
  [0]: a rectangle at (0,0) with size (3,10) and color black and mask 111011101101010101011011101110
diff:   color  layer[0].color
delta:
! 17 wrong pixels (generated / expected)

TRAIN 7447852a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 100010001000100010101010101010001000100010001
diff: 
delta:
   (67.6 bits)
data: a background with size (3,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 100010001000100010101010101010001000100010001
  [010]: a rectangle at (1,0) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (0,5) with size (2,3) and color yellow and mask full
  [011]: a rectangle at (1,11) with size (2,3) and color yellow and mask full
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,15) and color red and mask 100010001000100010101010101010001000100010001
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 7447852a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,18) and color black and layers
  [0]: a rectangle at (0,0) with size (3,18) and color red and mask 100010001000100101010101010101010010001000100010001
diff: 
delta:
   (77.6 bits)
data: a background with size (3,18) and color black and layers
  [0]: a rectangle at (0,0) with size (3,18) and color red and mask 100010001000100101010101010101010010001000100010001
  [010]: a rectangle at (1,0) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (0,5) with size (2,3) and color yellow and mask full
  [011]: a rectangle at (1,11) with size (2,3) and color yellow and mask full
diff: 
delta: (0,17)=4 
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,18) and color black and layers
  [0]: a rectangle at (0,0) with size (3,18) and color red and mask 100010001000100101010101010101010010001000100010001
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 7447852a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,25) and color black and layers
  [0]: a rectangle at (0,0) with size (3,25) and color red and mask 1000100010001000100010001010101010101010101010101000100010001000100010001
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 7447852a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 537.4 bits (537.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-224] Checking task 7468f01a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15949.3 = 15958.3
DL output with Mo: L = 9.0 + 3368.4 = 3377.4
DL input+output M: L = 17.9 + 19317.7 = 19335.7

# learning a model for train pairs
19335.7	
8231.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6560.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5246.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4783.9	OUT DEF: size={layer[01].size}
4410.1	OUT DEF: layer[0].size={layer[0].size}
4172.0	OUT DEF: color={layer[01].color}
4032.6	OUT DEF: layer[0].color={layer[0].color}
3961.9	IN  DEF: layer[01].mask=full
3916.3	IN  DEF: color=black
3881.3	OUT DEF: layer[0].pos=(?,?)
3786.9	OUT DEF: layer[0].pos.i={layer[0].pos.i - layer[01].pos.i}
3751.9	IN  DEF: size=(?,?)
3716.9	IN  DEF: layer[0].pos=(?,?)
3681.9	IN  DEF: layer[0].size=(?,?)
3646.9	IN  DEF: layer[01].pos=(?,?)
3611.9	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[01].size} and color {layer[01].color} and layers
  [0]: a rectangle at ({layer[0].pos.i - layer[01].pos.i},?) with size {layer[0].size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 63.7 + 2828.5 = 2892.2
DL output with Mo: L = 42.0 + 677.7 = 719.7
DL input+output M: L = 105.7 + 3506.2 = 3611.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (6,3) with size (2,3) and color red and mask 110011
  [01]: a rectangle at (5,2) with size (4,8) and color cyan and mask full
diff: 
delta: (5,8)=2 
   (101.1 bits)
data: a background with size (4,8) and color cyan and layers
  [0]: a rectangle at (1,4) with size (2,3) and color red and mask 11110
diff: 
delta: (0,1)=2 
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (6,3) with size (2,3) and color red and mask 110011
  [01]: a rectangle at (5,2) with size (4,8) and color cyan and mask full
diff: 
delta: (5,8)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (5,2) with size (4,8) and color cyan and mask 11111111111100111111100110111111
  [01]: a rectangle at (6,3) with size (2,3) and color red and mask full
diff: 
delta: (5,8)=2 
! size mismatch, 2x3 instead of 4x8
>> Trial 3
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (6,3) with size (1,2) and color red and mask full
  [01]: a rectangle at (5,2) with size (4,8) and color cyan and mask full
diff: 
delta: (5,8)=2  (7,4)=2  (7,5)=2 
! 7 wrong pixels (generated / expected)

TRAIN 7468f01a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,16) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color blue and mask 10110011
  [01]: a rectangle at (1,3) with size (5,5) and color yellow and mask full
diff: 
delta:
   (85.8 bits)
data: a background with size (5,5) and color yellow and layers
  [0]: a rectangle at (2,1) with size (3,3) and color blue and mask 10011110
diff: 
delta:
   (15.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color blue and mask 10110011
  [01]: a rectangle at (1,3) with size (5,5) and color yellow and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,16) and color black and layers
  [0]: a rectangle at (1,3) with size (5,5) and color yellow and mask 1101110011110011111111111
  [01]: a rectangle at (3,4) with size (3,3) and color blue and mask full
diff: 
delta:
! size mismatch, 3x3 instead of 5x5
>> Trial 3
data: a background with size (12,16) and color black and layers
  [0]: a rectangle at (3,5) with size (3,1) and color blue and mask full
  [01]: a rectangle at (1,3) with size (5,5) and color yellow and mask full
diff: 
delta: (3,4)=1  (4,6)=1 
! 8 wrong pixels (generated / expected)

TRAIN 7468f01a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (7,3) with size (4,4) and color green and mask 1000100001110100
  [01]: a rectangle at (7,2) with size (4,6) and color pink and mask full
diff: 
delta:
   (96.0 bits)
data: a background with size (4,6) and color pink and layers
  [0]: a rectangle at (0,1) with size (4,4) and color green and mask 1000111100010
diff: 
delta:
   (22.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (7,3) with size (4,4) and color green and mask 1000100001110100
  [01]: a rectangle at (7,2) with size (4,6) and color pink and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (7,2) with size (4,6) and color pink and mask 101111101111110001110111
  [01]: a rectangle at (7,3) with size (4,4) and color green and mask full
diff: 
delta:
! size mismatch, 4x4 instead of 4x6
>> Trial 3
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (8,3) with size (1,3) and color green and mask full
  [01]: a rectangle at (7,2) with size (4,6) and color pink and mask full
diff: 
delta: (7,5)=3  (9,6)=3  (10,6)=3 
! 7 wrong pixels (generated / expected)

TRAIN 7468f01a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (6,3) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (3,3) with size (7,8) and color blue and mask full
diff: 
delta: (3,7)=8  (4,8)=8  (4,9)=8  (8,5)=8  (8,6)=8  (8,7)=8 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (3,3) with size (7,8) and color blue and mask 11111111111000111111111111111000111111111001111111101111
  [01]: a rectangle at (6,3) with size (1,3) and color cyan and mask full
diff: 
delta: (3,7)=8  (4,8)=8  (4,9)=8  (8,5)=8  (8,6)=8  (8,7)=8 
! size mismatch, 1x3 instead of 7x8

TEST 7468f01a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 677.7 bits (677.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-223] Checking task 746b3537.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6988.5 = 6997.5
DL output with Mo: L = 9.0 + 2436.8 = 2445.8
DL input+output M: L = 17.9 + 9425.3 = 9443.2

# learning a model for train pairs
9443.2	
7748.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7071.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6906.0	OUT SHAPE at layer[0]: a point at ? with color ?
6507.2	OUT DEF: color={color}
6275.5	OUT DEF: layer[0].color={layer[01].color}
6158.4	IN  DEF: layer[0].mask=full
6041.3	IN  DEF: layer[01].mask=full
5979.8	OUT DEF: size=(?,?)
5800.6	OUT DEF: size.j={layer[01].pos.j + 1}
5739.1	OUT DEF: layer[0].pos=(?,?)
5630.1	OUT DEF: layer[0].pos.i={layer[01].pos.i - layer[0].pos.i}
5537.1	OUT DEF: layer[0].pos.j={layer[01].size.i - 1}
5475.7	IN  DEF: size=(?,?)
5414.2	IN  DEF: layer[0].pos=(?,?)
5266.1	IN  DEF: layer[0].pos.j=0
5204.7	IN  DEF: layer[0].size=(?,?)
5143.2	IN  DEF: layer[01].pos=(?,?)
5081.8	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,{layer[01].pos.j + 1}) and color {color} and layers
  [0]: a point at ({layer[01].pos.i - layer[0].pos.i},{layer[01].size.i - 1}) with color {layer[01].color}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,0) with size (?,?) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 67.5 + 3868.3 = 3935.8
DL output with Mo: L = 55.5 + 1090.5 = 1145.9
DL input+output M: L = 122.9 + 4958.8 = 5081.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color red and mask full
diff: 
delta:
   (52.6 bits)
data: a background with size (3,1) and color blue and layers
  [0]: a point at (1,0) with color red
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color red and mask full
diff: 
delta:
! size mismatch, 10x1 instead of 3x1
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color blue and mask full
diff: 
delta:
! size mismatch, 10x1 instead of 3x1
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (1,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta:
! size mismatch, 10x1 instead of 3x1

TRAIN 746b3537.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color pink and mask full
diff: 
delta:
   (52.6 bits)
data: a background with size (1,3) and color yellow and layers
  [0]: a point at (0,2) with color pink
diff: 
delta: (0,0)=3 
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color yellow and mask full
diff: 
delta:
! size mismatch, 10x2 instead of 1x3
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,1) and color green and mask full
  [01]: a rectangle at (0,2) with size (3,1) and color pink and mask full
diff: 
delta:
! size mismatch, 10x3 instead of 1x3
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,1) with size (3,1) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (3,1) and color green and mask full
diff:   layer[0].pos.j
delta:
! size mismatch, 10x1 instead of 1x3

TRAIN 746b3537.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color green and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color cyan and mask full
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
   (103.3 bits)
data: a background with size (1,4) and color green and layers
  [0]: a point at (0,2) with color cyan
diff: 
delta: (0,0)=2  (0,3)=1 
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color green and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color cyan and mask full
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
! size mismatch, 10x4 instead of 1x4
>> Trial 2
data: a background with size (3,5) and color green and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,4) with size (3,1) and color blue and mask full
diff: 
delta: (0,3)=8  (1,3)=8  (2,3)=8 
! size mismatch, 10x5 instead of 1x4
>> Trial 3
data: a background with size (3,5) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,1) with size (3,2) and color green and mask full
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
! size mismatch, 10x2 instead of 1x4

TRAIN 746b3537.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,2) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (1,0) with size (1,2) and color pink and mask full
diff: 
delta:
   (50.2 bits)
data: a background with size (3,1) and color cyan and layers
  [0]: a point at (1,0) with color pink
diff: 
delta: (0,0)=2 
   (20.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,2) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (1,0) with size (1,2) and color pink and mask full
diff: 
delta:
! size mismatch, 10x1 instead of 3x1
>> Trial 2
data: a background with size (4,2) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,2) and color pink and mask full
  [01]: a rectangle at (0,0) with size (1,2) and color red and mask full
diff: 
delta:
! size mismatch, 10x1 instead of 3x1
>> Trial 3
data: a background with size (4,2) and color pink and layers
  [0]: a rectangle at (2,0) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (1,2) and color red and mask full
diff: 
delta:
! size mismatch, 10x1 instead of 3x1

TRAIN 746b3537.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (6,4) and color yellow and layers
  [0]: a rectangle at (2,0) with size (2,4) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,4) and color cyan and mask full
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (128.2 bits)
data: a background with size (4,1) and color yellow and layers
  [0]: a point at (2,0) with color cyan
diff: 
delta: (1,0)=2  (3,0)=3 
   (35.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color red and layers
  [0]: a rectangle at (0,0) with size (2,4) and color yellow and mask full
  [01]: a rectangle at (4,0) with size (1,4) and color cyan and mask full
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! size mismatch, 10x1 instead of 4x1
>> Trial 2
data: a background with size (6,4) and color red and layers
  [0]: a rectangle at (0,0) with size (2,4) and color yellow and mask full
  [01]: a rectangle at (5,0) with size (1,4) and color green and mask full
diff: 
delta: (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8 
! size mismatch, 10x1 instead of 4x1
>> Trial 3
data: a background with size (6,4) and color yellow and layers
  [0]: a rectangle at (2,0) with size (2,4) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,4) and color cyan and mask full
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! size mismatch, 10x1 instead of 4x1

TRAIN 746b3537.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,9) and color green and layers
  [0]: a rectangle at (0,0) with size (4,2) and color blue and mask full
  [01]: a rectangle at (0,6) with size (4,2) and color cyan and mask full
diff: 
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 10x7 instead of 1x5
>> Trial 2
data: a background with size (4,9) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,2) and color blue and mask full
  [01]: a rectangle at (0,3) with size (4,3) and color green and mask full
diff: 
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 10x4 instead of 1x5
>> Trial 3
data: a background with size (4,9) and color green and layers
  [0]: a rectangle at (0,6) with size (4,2) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (4,2) and color blue and mask full
diff:   layer[0].pos.j
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 10x1 instead of 1x5

TEST 746b3537.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1090.5 bits (1090.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-222] Checking task 74dd1130.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3838.0 = 3846.9
DL output with Mo: L = 9.0 + 3838.0 = 3846.9
DL input+output M: L = 17.9 + 7675.9 = 7693.8

# learning a model for train pairs
7693.8	
7193.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6692.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6199.2	OUT DEF: size={size}
5879.7	OUT DEF: color={color}
5693.3	OUT DEF: layer[0].color={layer[0].color}
5563.3	IN  SHAPE at layer[01]: a point at ? with color ?
5515.1	OUT DEF: layer[0].pos=(?,?)
5400.7	OUT DEF: layer[0].pos.i={layer[0].pos.j}
5286.3	OUT DEF: layer[0].pos.j={layer[0].pos.i}
5238.1	OUT DEF: layer[0].size=(?,?)
5063.7	OUT DEF: layer[0].size.i={layer[0].size.j}
4901.0	OUT DEF: layer[0].size.j={layer[0].size.i}
4852.7	IN  DEF: size=(?,?)
4635.2	IN  DEF: size.i=3
4417.7	IN  DEF: size.j=3
4369.5	IN  DEF: layer[0].pos=(?,?)
4252.8	IN  DEF: layer[0].pos.i=0
4204.6	IN  DEF: layer[0].size=(?,?)
4156.3	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at ({layer[0].pos.j},{layer[0].pos.i}) with size ({layer[0].size.j},{layer[0].size.i}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (0,?) with size (?,?) and color ? and mask ?
  [01]: a point at (?,?) with color ?

DL input  with Mi: L = 59.2 + 2411.2 = 2470.4
DL output with Mo: L = 42.3 + 1643.7 = 1686.0
DL input+output M: L = 101.5 + 4054.9 = 4156.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (2,1) and color blue and mask full
  [01]: a point at (1,0) with color blue
diff: 
delta: (1,1)=5# (2,0)=5#
   (66.3 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (2,0) with size (1,2) and color blue and mask full
diff: 
delta: (0,1)=1  (0,2)=5# (1,1)=5#
   (48.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (2,1) and color blue and mask full
  [01]: a point at (1,0) with color blue
diff: 
delta: (1,1)=5# (2,0)=5#
! 3 wrong pixels (generated / expected)

TRAIN 74dd1130.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 110011
  [01]: a point at (1,0) with color pink
diff: 
delta:
   (44.1 bits)
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask 101101
diff: 
delta: (0,1)=6 
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 110011
  [01]: a point at (1,0) with color pink
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 74dd1130.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 1011100
  [01]: a point at (1,2) with color cyan
diff: 
delta: (2,1)=8 
   (64.4 bits)
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 1010110
diff: 
delta: (1,2)=8  (2,1)=8 
   (42.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 1011100
  [01]: a point at (1,2) with color cyan
diff: 
delta: (2,1)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,2) and color brown and mask full
  [01]: a point at (1,2) with color cyan
diff: 
delta: (2,1)=8  (2,2)=9#
! 3 wrong pixels (generated / expected)

TRAIN 74dd1130.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,2) and color pink and mask full
  [01]: a point at (2,1) with color pink
diff: 
delta: (1,1)=1  (1,2)=1 
   (66.3 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (2,1) and color pink and mask full
diff: 
delta: (1,1)=1  (1,2)=6  (2,1)=1 
   (48.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (1,2) and color pink and mask full
  [01]: a point at (2,1) with color pink
diff: 
delta: (1,1)=1  (1,2)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,1) and color red and mask full
  [01]: a point at (2,2) with color red
diff: 
delta: (1,1)=1  (1,2)=1 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (1,2) and color blue and mask full
  [01]: a point at (2,1) with color pink
diff:   layer[0].pos.i
delta: (0,1)=6  (0,2)=6 
! 3 wrong pixels (generated / expected)

TRAIN 74dd1130.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,1) and color brown and mask full
  [01]: a point at (0,1) with color green
diff: 
delta: (2,1)=3 
! 2 wrong pixels (generated / expected)

TEST 74dd1130.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1643.7 bits (1643.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-221] Checking task 75b8110e.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 25329.3 = 25338.2
DL output with Mo: L = 9.0 + 8298.5 = 8307.5
DL input+output M: L = 17.9 + 33627.7 = 33645.7

# learning a model for train pairs
33645.7	
28287.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24314.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
22456.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
21230.9	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
20121.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19586.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19209.8	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 12454.3 = 12546.5
DL output with Mo: L = 43.4 + 6620.0 = 6663.3
DL input+output M: L = 135.5 + 19074.3 = 19209.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color pink and mask 110110101110100
  [01]: a rectangle at (0,0) with size (4,3) and color yellow and mask 10100011011
  [011]: a rectangle at (6,4) with size (2,2) and color brown and mask 111
  [0111]: a rectangle at (2,4) with size (2,3) and color grey and mask 11100
  [01111]: a rectangle at (4,6) with size (2,2) and color brown and mask 1001
diff: 
delta: (0,6)=5#
   (223.2 bits)
data: a background with size (4,4) and color grey and layers
  [0]: a rectangle at (1,0) with size (3,4) and color pink and mask 10010010111
  [01]: a rectangle at (0,0) with size (1,2) and color yellow and mask full
diff: 
delta: (0,3)=0  (1,3)=9# (2,1)=9# (3,3)=0 
   (149.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color pink and mask 110110101110100
  [01]: a rectangle at (0,0) with size (4,3) and color yellow and mask 10100011011
  [011]: a rectangle at (6,4) with size (2,2) and color brown and mask 111
  [0111]: a rectangle at (2,4) with size (2,3) and color grey and mask 11100
  [01111]: a rectangle at (4,6) with size (2,2) and color brown and mask 1001
diff: 
delta: (0,6)=5#
! size mismatch, 10x10 instead of 4x4

TRAIN 75b8110e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,4) with size (4,4) and color grey and mask 1110001011000011
  [01]: a rectangle at (2,0) with size (2,4) and color yellow and mask 11011011
  [011]: a rectangle at (4,2) with size (4,2) and color pink and mask 11100110
  [0111]: a rectangle at (4,5) with size (3,1) and color brown and mask full
  [01111]: a rectangle at (6,7) with size (2,1) and color brown and mask full
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6 
   (263.5 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1110001011000011
  [01]: a rectangle at (0,3) with size (3,1) and color pink and mask full
diff: 
delta: (1,1)=9# (2,0)=6  (3,0)=4 
   (133.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,4) with size (4,4) and color grey and mask 1110001011000011
  [01]: a rectangle at (2,0) with size (2,4) and color yellow and mask 11011011
  [011]: a rectangle at (4,2) with size (4,2) and color pink and mask 11100110
  [0111]: a rectangle at (4,5) with size (3,1) and color brown and mask full
  [01111]: a rectangle at (6,7) with size (2,1) and color brown and mask full
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6 
! size mismatch, 10x10 instead of 4x4

TRAIN 75b8110e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,4) with size (3,4) and color brown and mask 11110100110
  [01]: a rectangle at (4,0) with size (4,1) and color pink and mask full
  [011]: a rectangle at (0,4) with size (4,3) and color grey and mask 100100010001
  [0111]: a rectangle at (2,3) with size (2,1) and color yellow and mask full
  [01111]: a rectangle at (6,2) with size (2,1) and color pink and mask full
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4 
   (235.0 bits)
data: a background with size (4,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (4,3) and color grey and mask 100100010001
  [01]: a rectangle at (1,0) with size (3,1) and color pink and mask full
diff: 
delta: (0,3)=4  (1,2)=0  (2,3)=4  (3,1)=4  (3,3)=4 
   (165.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,4) with size (3,4) and color brown and mask 11110100110
  [01]: a rectangle at (4,0) with size (4,1) and color pink and mask full
  [011]: a rectangle at (0,4) with size (4,3) and color grey and mask 100100010001
  [0111]: a rectangle at (2,3) with size (2,1) and color yellow and mask full
  [01111]: a rectangle at (6,2) with size (2,1) and color pink and mask full
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4 
! size mismatch, 10x10 instead of 4x4

TRAIN 75b8110e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,4) with size (4,4) and color brown and mask 1101101111101101
  [01]: a rectangle at (4,0) with size (4,4) and color pink and mask 1011100101110111
  [011]: a rectangle at (0,6) with size (4,2) and color grey and mask 10111010
  [0111]: a rectangle at (0,2) with size (3,2) and color yellow and mask 110110
  [01111]: a rectangle at (0,4) with size (2,2) and color grey and mask 110
diff: 
delta: (0,0)=4  (3,0)=4  (3,4)=5#
   (269.9 bits)
data: a background with size (4,4) and color grey and layers
  [0]: a rectangle at (0,0) with size (4,3) and color pink and mask 10001110101
  [01]: a rectangle at (2,1) with size (2,2) and color brown and mask 1101
diff: 
delta:
   (90.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,4) with size (4,4) and color brown and mask 1101101111101101
  [01]: a rectangle at (4,0) with size (4,4) and color pink and mask 1011100101110111
  [011]: a rectangle at (0,6) with size (4,2) and color grey and mask 10111010
  [0111]: a rectangle at (0,2) with size (3,2) and color yellow and mask 110110
  [01111]: a rectangle at (0,4) with size (2,2) and color grey and mask 110
diff: 
delta: (0,0)=4  (3,0)=4  (3,4)=5#
! size mismatch, 10x10 instead of 4x4

TRAIN 75b8110e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,4) with size (4,4) and color brown and mask 1010110101011100
  [01]: a rectangle at (0,4) with size (4,4) and color grey and mask 1000110111110
  [011]: a rectangle at (4,3) with size (4,1) and color pink and mask full
  [0111]: a rectangle at (0,1) with size (2,3) and color yellow and mask 10111
  [01111]: a rectangle at (4,0) with size (1,2) and color pink and mask full
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
   (253.9 bits)
data: a background with size (4,4) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1000110111110
  [01]: a rectangle at (1,2) with size (2,1) and color brown and mask full
diff: 
delta: (2,1)=0  (3,2)=0 
   (122.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (4,4) with size (4,4) and color brown and mask 1010110101011100
  [01]: a rectangle at (0,4) with size (4,4) and color grey and mask 1000110111110
  [011]: a rectangle at (4,3) with size (4,1) and color pink and mask full
  [0111]: a rectangle at (0,1) with size (2,3) and color yellow and mask 10111
  [01111]: a rectangle at (4,0) with size (1,2) and color pink and mask full
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
! size mismatch, 10x10 instead of 4x4

TRAIN 75b8110e.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 11111101010
  [01]: a rectangle at (0,4) with size (4,4) and color grey and mask 1111011010001
  [011]: a rectangle at (4,4) with size (4,4) and color brown and mask 10110000100111
  [0111]: a rectangle at (4,2) with size (2,2) and color pink and mask 1011
  [01111]: a rectangle at (6,0) with size (2,2) and color pink and mask 110
diff: 
delta: (4,0)=6 
! size mismatch, 10x10 instead of 4x4

TEST 75b8110e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6620.0 bits (6620.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-220] Checking task 760b3cac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5950.4 = 5959.4
DL output with Mo: L = 9.0 + 8653.2 = 8662.2
DL input+output M: L = 17.9 + 14603.7 = 14621.6

# learning a model for train pairs
14621.6	
10681.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8942.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7441.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6111.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4959.1	OUT DEF: layer[01]={layer[01]}
4434.7	OUT DEF: size={size}
4295.2	OUT DEF: layer[0].color={layer[0].color}
4157.2	IN  DEF: layer[0].color=cyan
4019.2	IN  DEF: layer[01].color=yellow
3973.6	OUT DEF: color=black
3928.0	IN  DEF: color=black
3893.0	OUT DEF: layer[0].pos=(?,?)
3776.5	OUT DEF: layer[0].pos.i={layer[0].pos.i}
3741.4	OUT DEF: layer[0].size=(?,?)
3577.5	OUT DEF: layer[0].size.i={layer[0].size.i}
3355.3	OUT DEF: layer[0].size.j={size.i}
3320.3	IN  DEF: size=(?,?)
3065.8	IN  DEF: size.j=9
2845.2	IN  DEF: size.i=6
2810.2	IN  DEF: layer[0].pos=(?,?)
2676.6	IN  DEF: layer[0].pos.j=3
2560.0	IN  DEF: layer[0].pos.i=0
2525.0	IN  DEF: layer[0].size=(?,?)
2362.4	IN  DEF: layer[0].size.i=3
2199.8	IN  DEF: layer[0].size.j=3
2164.8	IN  DEF: layer[01].pos=(?,?)
2031.2	IN  DEF: layer[01].pos.j=3
1914.6	IN  DEF: layer[01].pos.i=3
1879.6	IN  DEF: layer[01].size=(?,?)
1717.0	IN  DEF: layer[01].size.i=3
1554.4	IN  DEF: layer[01].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},?) with size ({layer[0].size.i},{size.i}) and color {layer[0].color} and mask ?
  [01]: {layer[01]}
WHERE (Mi)
a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask ?
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask ?

DL input  with Mi: L = 89.1 + 679.3 = 768.4
DL output with Mo: L = 41.6 + 744.4 = 786.0
DL input+output M: L = 130.7 + 1423.7 = 1554.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 100110101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111001
diff: 
delta:
   (22.6 bits)
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color cyan and mask 100001110011101101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111001
diff: 
delta:
   (24.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 100110101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111001
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 760b3cac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 11111101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111100
diff: 
delta:
   (22.6 bits)
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,6) and color cyan and mask 110011111111101101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111100
diff: 
delta:
   (24.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 11111101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111100
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 760b3cac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 1110001
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111001
diff: 
delta:
   (22.6 bits)
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color cyan and mask 1100110011001100
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111001
diff: 
delta:
   (24.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 1110001
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111001
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 760b3cac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 1110101
  [01]: a rectangle at (3,3) with size (3,3) and color yellow and mask 10111100
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST 760b3cac.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 744.4 bits (744.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-219] Checking task 776ffc46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 51974.5 = 51983.5
DL output with Mo: L = 9.0 + 51974.5 = 51983.5
DL input+output M: L = 17.9 + 103949.0 = 103966.9

# learning a model for train pairs
103966.9	
88568.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
73169.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
66807.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
60904.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
54515.6	OUT DEF: layer[0]={layer[0]}
50168.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 30179.2 = 30222.5
DL output with Mo: L = 46.9 + 19898.6 = 19945.6
DL input+output M: L = 90.3 + 50077.8 = 50168.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (1,13) with size (3,3) and color blue and mask full
diff: 
delta: (2,3)=2  (3,2)=2  (3,3)=2  (3,4)=2  (4,3)=2  (7,11)=1  (8,10)=1  (8,11)=1  (8,12)=1  (9,11)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (15,14)=1  (16,13)=1  (16,14)=1  (16,15)=1  (17,14)=1 
   (522.9 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (1,13) with size (3,3) and color blue and mask full
  [011]: a rectangle at (2,2) with size (3,3) and color red and mask 10111010
diff: 
delta: (7,11)=2  (8,10)=2  (8,11)=2  (8,12)=2  (9,11)=2  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (15,14)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,14)=2 
   (379.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (1,13) with size (3,3) and color blue and mask full
diff: 
delta: (2,3)=2  (3,2)=2  (3,3)=2  (3,4)=2  (4,3)=2  (7,11)=1  (8,10)=1  (8,11)=1  (8,12)=1  (9,11)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (15,14)=1  (16,13)=1  (16,14)=1  (16,15)=1  (17,14)=1 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,13) with size (3,3) and color blue and mask full
  [01]: a rectangle at (0,0) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
diff: 
delta: (2,3)=2  (3,2)=2  (3,3)=2  (3,4)=2  (4,3)=2  (7,11)=1  (8,10)=1  (8,11)=1  (8,12)=1  (9,11)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (15,14)=1  (16,13)=1  (16,14)=1  (16,15)=1  (17,14)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color blue and layers
  [0]: a rectangle at (0,0) with size (20,20) and color black and mask 1111111111111111111111111000001111111111111111000111111111111111111011111111111111111111111111111111111111111111110001111111111101111100011111111111011111000111110001110111111111111100011111111111111111000111111111111111111111111111111111111111111100000001111111111111011111011111111111110100010111111111111101000101111111111111010001011111111111110111110111111111111100000001111111111111111111111111
  [01]: a rectangle at (1,5) with size (7,7) and color grey and mask full
diff: 
delta: (3,7)=3  (3,8)=3  (3,9)=3  (4,7)=3  (4,8)=3  (4,9)=3  (5,7)=3  (5,8)=3  (5,9)=3 
   (693.6 bits)
data: a background with size (20,20) and color green and layers
  [0]: a rectangle at (0,0) with size (20,20) and color black and mask 1111111111111111111111111000001111111111111111000111111111111111111011111111111111111111111111111111111111111111110001111111111101111100011111111111011111000111110001110111111111111100011111111111111111000111111111111111111111111111111111111111111100000001111111111111011111011111111111110100010111111111111101000101111111111111010001011111111111110111110111111111111100000001111111111111111111111111
  [01]: a rectangle at (1,5) with size (7,7) and color grey and mask 1111111111111111000111100011110001111111111111111
  [011]: a rectangle at (16,10) with size (3,5) and color blue and mask full
diff: 
delta: (11,11)=1  (12,11)=1  (13,11)=1 
   (213.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  [0]: a rectangle at (0,0) with size (20,20) and color black and mask 1111111111111111111111111000001111111111111111000111111111111111111011111111111111111111111111111111111111111111110001111111111101111100011111111111011111000111110001110111111111111100011111111111111111000111111111111111111111111111111111111111111100000001111111111111011111011111111111110100010111111111111101000101111111111111010001011111111111110111110111111111111100000001111111111111111111111111
  [01]: a rectangle at (1,5) with size (7,7) and color grey and mask full
diff: 
delta: (3,7)=3  (3,8)=3  (3,9)=3  (4,7)=3  (4,8)=3  (4,9)=3  (5,7)=3  (5,8)=3  (5,9)=3 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,5) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (3,7) with size (3,3) and color green and mask full
diff: 
delta: (9,15)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,11)=1  (11,15)=1  (11,16)=1  (11,17)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,11)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,11)=1  (14,3)=1  (14,4)=1  (14,5)=1  (16,12)=1  (17,11)=1  (17,12)=1  (17,13)=1  (18,10)=1  (18,11)=1  (18,12)=1  (18,13)=1  (18,14)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,13) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (0,0) with size (6,6) and color grey and mask 111111100000100000100000100000100000
diff: 
delta: (1,2)=2  (2,2)=2  (2,15)=2  (2,16)=2  (2,17)=2  (3,2)=2  (3,15)=2  (3,16)=2  (3,17)=2  (10,4)=1  (11,4)=1  (11,10)=1  (11,11)=1  (11,12)=1  (12,4)=1  (12,10)=1  (12,11)=1  (12,12)=1  (15,8)=1  (16,2)=1  (16,3)=1  (16,4)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,8)=1 
   (759.9 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,13) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (0,0) with size (6,6) and color grey and mask 111111100000100000100000100000100000
  [011]: a rectangle at (2,15) with size (2,3) and color red and mask full
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (11,10)=2  (11,11)=2  (11,12)=2  (12,4)=1  (12,10)=2  (12,11)=2  (12,12)=2  (15,8)=1  (16,2)=2  (16,3)=2  (16,4)=2  (16,7)=1  (16,8)=1  (16,9)=1  (17,2)=2  (17,3)=2  (17,4)=2  (17,8)=1 
   (586.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,13) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (0,0) with size (6,6) and color grey and mask 111111100000100000100000100000100000
diff: 
delta: (1,2)=2  (2,2)=2  (2,15)=2  (2,16)=2  (2,17)=2  (3,2)=2  (3,15)=2  (3,16)=2  (3,17)=2  (10,4)=1  (11,4)=1  (11,10)=1  (11,11)=1  (11,12)=1  (12,4)=1  (12,10)=1  (12,11)=1  (12,12)=1  (15,8)=1  (16,2)=1  (16,3)=1  (16,4)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,8)=1 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 111111100000100000100000100000100000
  [01]: a rectangle at (0,13) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
diff: 
delta: (1,2)=2  (2,2)=2  (2,15)=2  (2,16)=2  (2,17)=2  (3,2)=2  (3,15)=2  (3,16)=2  (3,17)=2  (10,4)=1  (11,4)=1  (11,10)=1  (11,11)=1  (11,12)=1  (12,4)=1  (12,10)=1  (12,11)=1  (12,12)=1  (15,8)=1  (16,2)=1  (16,3)=1  (16,4)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,8)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,1) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (0,13) with size (6,7) and color grey and mask 111111100000010000001000000100000010000001
diff: 
delta: (1,16)=3  (1,17)=3  (2,16)=3  (2,17)=3  (3,15)=3  (3,16)=3  (3,17)=3  (3,18)=3  (5,3)=3  (5,4)=3  (5,5)=3  (6,3)=3  (6,4)=3  (6,5)=3  (7,3)=3  (7,4)=3  (7,5)=3  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (11,10)=1  (11,11)=1  (11,12)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (1041.5 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,1) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (0,13) with size (6,7) and color grey and mask 111111100000010000001000000100000010000001
  [011]: a rectangle at (5,3) with size (3,3) and color green and mask full
diff: 
delta: (1,16)=3  (1,17)=3  (2,16)=3  (2,17)=3  (3,15)=3  (3,16)=3  (3,17)=3  (3,18)=3  (8,16)=1  (8,17)=1  (9,10)=3  (9,11)=3  (9,12)=3  (9,16)=1  (9,17)=1  (10,10)=3  (10,11)=3  (10,12)=3  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (11,10)=3  (11,11)=3  (11,12)=3  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (810.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,1) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (0,13) with size (6,7) and color grey and mask 111111100000010000001000000100000010000001
diff: 
delta: (1,16)=3  (1,17)=3  (2,16)=3  (2,17)=3  (3,15)=3  (3,16)=3  (3,17)=3  (3,18)=3  (5,3)=3  (5,4)=3  (5,5)=3  (6,3)=3  (6,4)=3  (6,5)=3  (7,3)=3  (7,4)=3  (7,5)=3  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (11,10)=1  (11,11)=1  (11,12)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,13) with size (6,7) and color grey and mask 111111100000010000001000000100000010000001
  [01]: a rectangle at (3,1) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
diff: 
delta: (1,16)=3  (1,17)=3  (2,16)=3  (2,17)=3  (3,15)=3  (3,16)=3  (3,17)=3  (3,18)=3  (5,3)=3  (5,4)=3  (5,5)=3  (6,3)=3  (6,4)=3  (6,5)=3  (7,3)=3  (7,4)=3  (7,5)=3  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (11,10)=1  (11,11)=1  (11,12)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (13,12) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (8,6) with size (4,4) and color blue and mask 110111111110110
diff: 
delta: (0,12)=5# (1,12)=5# (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,12)=5# (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (3,12)=5# (4,3)=1  (4,12)=5# (5,3)=1  (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (5,16)=5# (5,17)=5# (5,18)=5# (5,19)=5# (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (7,3)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (13,0)=5# (13,1)=5# (13,2)=5# (13,3)=5# (13,4)=5# (13,5)=5# (13,6)=5# (14,6)=5# (15,2)=2  (15,3)=2  (15,6)=5# (15,15)=2  (16,1)=2  (16,2)=2  (16,3)=2  (16,4)=2  (16,6)=5# (16,14)=2  (16,15)=2  (16,16)=2  (17,1)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,6)=5# (17,15)=2  (18,2)=2  (18,3)=2  (18,6)=5# (19,6)=5#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (8,6) with size (4,4) and color blue and mask 110111111110110
  [01]: a rectangle at (13,12) with size (7,7) and color grey and mask 1111111100000110000011000001100000110000011111111
diff: 
delta: (0,12)=5# (1,12)=5# (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,12)=5# (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (3,12)=5# (4,3)=1  (4,12)=5# (5,3)=1  (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=5# (5,16)=5# (5,17)=5# (5,18)=5# (5,19)=5# (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (7,3)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (13,0)=5# (13,1)=5# (13,2)=5# (13,3)=5# (13,4)=5# (13,5)=5# (13,6)=5# (14,6)=5# (15,2)=2  (15,3)=2  (15,6)=5# (15,15)=2  (16,1)=2  (16,2)=2  (16,3)=2  (16,4)=2  (16,6)=5# (16,14)=2  (16,15)=2  (16,16)=2  (17,1)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,6)=5# (17,15)=2  (18,2)=2  (18,3)=2  (18,6)=5# (19,6)=5#
! size mismatch, 10x10 instead of 20x20

TEST 776ffc46.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 19898.6 bits (19898.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-218] Checking task 77fdfe62.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15818.4 = 15827.4
DL output with Mo: L = 9.0 + 3887.8 = 3896.8
DL input+output M: L = 17.9 + 19706.3 = 19724.2

# learning a model for train pairs
19724.2	
13064.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10544.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10167.1	OUT DEF: size={layer[01].size}
9898.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9613.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9394.3	OUT DEF: layer[0].pos={layer[0].pos}
9232.4	OUT SHAPE at layer[011]: a point at ? with color ?
9094.4	IN  DEF: layer[0].color=blue
8956.4	IN  DEF: layer[01].color=cyan
8877.7	IN  SHAPE at layer[011]: a point at ? with color ?
8738.6	OUT DEF: layer[011].color={layer[011].color}
8654.4	IN  SHAPE at layer[0110]: a point at ? with color ?
8516.1	OUT DEF: layer[0].color={layer[0110].color}
8421.7	IN  SHAPE at layer[0111]: a point at ? with color ?
8283.7	IN  DEF: layer[0111].color=yellow
8164.2	IN  SHAPE at layer[01111]: a point at ? with color ?
8118.6	OUT DEF: color=black
8073.0	IN  DEF: color=black
8038.0	OUT DEF: layer[0].size=(?,?)
8003.0	OUT DEF: layer[01].pos=(?,?)
7924.4	OUT DEF: layer[01].pos.i={layer[01].size.i - 2}
7889.4	OUT DEF: layer[01].size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[01].size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0110].color} and mask ?
  [01]: a rectangle at ({layer[01].size.i - 2},?) with size (?,?) and color ? and mask ?
  [011]: a point at ? with color {layer[011].color}
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color blue and mask ?
  [01]: a rectangle at ? with size ? and color cyan and mask ?
  [0110]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color yellow
  [01111]: a point at ? with color ?

DL input  with Mi: L = 83.8 + 5725.0 = 5808.8
DL output with Mo: L = 81.7 + 1998.9 = 2080.6
DL input+output M: L = 165.4 + 7723.9 = 7889.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color blue and mask 100001011111111010000100100001001000010010000101111111101000010
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask 1101010010110010
  [0110]: a point at (0,0) with color red
  [011]: a point at (0,7) with color green
  [0111]: a point at (7,0) with color yellow
  [01111]: a point at (7,7) with color pink
diff: 
delta:
   (208.3 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [01]: a rectangle at (2,2) with size (2,2) and color pink and mask 1101
  [011]: a point at (1,3) with color green
diff: 
delta: (3,0)=4 
   (62.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color blue and mask 100001011111111010000100100001001000010010000101111111101000010
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask 1101010010110010
  [0110]: a point at (0,0) with color red
  [011]: a point at (0,7) with color green
  [0111]: a point at (7,0) with color yellow
  [01111]: a point at (7,7) with color pink
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color blue and mask 100001011111111010000100100001001000010010000101111111101000010
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask 1101010010110010
  [0110]: a point at (0,7) with color green
  [011]: a point at (0,0) with color red
  [0111]: a point at (7,0) with color yellow
  [01111]: a point at (7,7) with color pink
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color blue and mask 10010111111010010010010111111010010
  [01]: a rectangle at (2,2) with size (2,2) and color cyan and mask 111
  [0110]: a point at (0,0) with color brown
  [011]: a point at (5,0) with color red
  [0111]: a point at (0,5) with color yellow
  [01111]: a point at (5,5) with color green
diff: 
delta:
   (156.0 bits)
data: a background with size (2,2) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color brown and mask full
  [01]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
  [011]: a point at (1,0) with color red
diff: 
delta:
   (26.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color blue and mask 10010111111010010010010111111010010
  [01]: a rectangle at (2,2) with size (2,2) and color cyan and mask 111
  [0110]: a point at (0,0) with color brown
  [011]: a point at (5,0) with color red
  [0111]: a point at (0,5) with color yellow
  [01111]: a point at (5,5) with color green
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color blue and mask 10010111111010010010010111111010010
  [01]: a rectangle at (2,2) with size (2,2) and color cyan and mask 111
  [0110]: a point at (5,0) with color red
  [011]: a point at (0,0) with color brown
  [0111]: a point at (0,5) with color yellow
  [01111]: a point at (5,5) with color green
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color blue and mask 100001011111111010000100100001001000010010000101111111101000010
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask 111110101111010
  [0110]: a point at (0,0) with color pink
  [011]: a point at (0,7) with color red
  [0111]: a point at (7,7) with color yellow
  [01111]: a point at (7,0) with color orange
diff: 
delta:
   (208.3 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color pink and mask 1110
  [01]: a rectangle at (2,0) with size (2,2) and color orange and mask 1101
  [011]: a point at (0,3) with color red
diff: 
delta: (1,2)=2  (2,2)=4  (2,3)=4  (3,2)=4 
   (110.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color blue and mask 100001011111111010000100100001001000010010000101111111101000010
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask 111110101111010
  [0110]: a point at (0,0) with color pink
  [011]: a point at (0,7) with color red
  [0111]: a point at (7,7) with color yellow
  [01111]: a point at (7,0) with color orange
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,8) and color blue and mask 100001011111111010000100100001001000010010000101111111101000010
  [01]: a rectangle at (2,2) with size (4,4) and color cyan and mask 111110101111010
  [0110]: a point at (0,7) with color red
  [011]: a point at (0,0) with color pink
  [0111]: a point at (7,7) with color yellow
  [01111]: a point at (7,0) with color orange
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color blue and mask 100000010111111111101000000100100000010010000001001000000100100000010010000001011111111110100000010
  [01]: a rectangle at (2,2) with size (6,6) and color cyan and mask 10010101011011010010100010111000110
  [0110]: a point at (0,0) with color green
  [011]: a point at (9,0) with color orange
  [0111]: a point at (0,9) with color yellow
  [01111]: a point at (9,9) with color grey
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color blue and mask 100000010111111111101000000100100000010010000001001000000100100000010010000001011111111110100000010
  [01]: a rectangle at (2,2) with size (6,6) and color cyan and mask 10010101011011010010100010111000110
  [0110]: a point at (9,0) with color orange
  [011]: a point at (0,0) with color green
  [0111]: a point at (0,9) with color yellow
  [01111]: a point at (9,9) with color grey
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST 77fdfe62.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1998.9 bits (1998.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-217] Checking task 780d0b14.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 146745.2 = 146754.1
DL output with Mo: L = 9.0 + 2166.3 = 2175.3
DL input+output M: L = 17.9 + 148911.5 = 148929.4

# learning a model for train pairs
148929.4	
113970.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
86589.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
61243.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
40181.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
29908.3	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
29671.0	OUT DEF: color={layer[0].color}
29625.4	IN  DEF: color=black
29590.4	OUT DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color {layer[0].color} and layers
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 90.3 + 27597.1 = 27687.5
DL output with Mo: L = 15.2 + 1887.7 = 1902.9
DL input+output M: L = 105.6 + 29484.8 = 29590.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (9,9) with size (11,11) and color blue and mask 111101010111111011111011111011001100111111111111110101111111101011010110111111011101011101101000110111001101000011101101
  [01]: a rectangle at (0,9) with size (8,11) and color cyan and mask 1000111011000101110111101111111111101110110111111111010111111111101111111110011101111100
  [011]: a rectangle at (9,0) with size (11,8) and color pink and mask 1110101101010001010011101011011101011111110111111010110111110111101110100111111111011111
  [0111]: a rectangle at (0,0) with size (2,3) and color blue and mask full
  [01111]: a rectangle at (0,0) with size (8,8) and color blue and mask 1101101111111011001111011111011011101011101110111101011111001111
diff: 
delta:
   (568.8 bits)
data: a background with size (2,2) and color blue and layers
diff: 
delta: (0,1)=8  (1,0)=6 
   (37.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (9,9) with size (11,11) and color blue and mask 111101010111111011111011111011001100111111111111110101111111101011010110111111011101011101101000110111001101000011101101
  [01]: a rectangle at (0,9) with size (8,11) and color cyan and mask 1000111011000101110111101111111111101110110111111111010111111111101111111110011101111100
  [011]: a rectangle at (9,0) with size (11,8) and color pink and mask 1110101101010001010011101011011101011111110111111010110111110111101110100111111111011111
  [0111]: a rectangle at (0,0) with size (2,3) and color blue and mask full
  [01111]: a rectangle at (0,0) with size (8,8) and color blue and mask 1101101111111011001111011111011011101011101110111101011111001111
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 780d0b14.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,22) and color black and layers
  [0]: a rectangle at (8,14) with size (10,8) and color cyan and mask 11001101010001101000110111100011110100110111101011011100111111111110011111100101
  [01]: a rectangle at (8,0) with size (10,6) and color blue and mask 111011101111101001000111111111010111101011010111101101111110
  [011]: a rectangle at (8,7) with size (10,6) and color red and mask 10111101110011011111101101110011011101111011101011101111101
  [0111]: a rectangle at (0,14) with size (7,8) and color green and mask 1111001111111010101010111101111110101110110111111100111
  [01111]: a rectangle at (0,0) with size (7,6) and color yellow and mask 11011111100111111110011001111100111011111
diff: 
delta: (0,7)=8  (0,9)=8  (0,10)=8  (0,11)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (2,7)=8  (2,8)=8  (2,11)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (4,8)=8  (4,9)=8  (4,10)=8  (4,11)=8  (4,12)=8  (5,7)=8  (5,9)=8  (5,11)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,12)=8 
   (1123.9 bits)
data: a background with size (2,3) and color cyan and layers
diff: 
delta: (0,0)=4  (0,2)=3  (1,0)=1  (1,1)=2 
   (68.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,22) and color black and layers
  [0]: a rectangle at (8,14) with size (10,8) and color cyan and mask 11001101010001101000110111100011110100110111101011011100111111111110011111100101
  [01]: a rectangle at (8,0) with size (10,6) and color blue and mask 111011101111101001000111111111010111101011010111101101111110
  [011]: a rectangle at (8,7) with size (10,6) and color red and mask 10111101110011011111101101110011011101111011101011101111101
  [0111]: a rectangle at (0,14) with size (7,8) and color green and mask 1111001111111010101010111101111110101110110111111100111
  [01111]: a rectangle at (0,0) with size (7,6) and color yellow and mask 11011111100111111110011001111100111011111
diff: 
delta: (0,7)=8  (0,9)=8  (0,10)=8  (0,11)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (2,7)=8  (2,8)=8  (2,11)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (4,8)=8  (4,9)=8  (4,10)=8  (4,11)=8  (4,12)=8  (5,7)=8  (5,9)=8  (5,11)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,12)=8 
! size mismatch, 10x10 instead of 2x3

TRAIN 780d0b14.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,17) and color black and layers
  [0]: a rectangle at (7,8) with size (9,9) and color cyan and mask 111010010101111011011100111111111111011111111111111011101011010111111101111111010
  [01]: a rectangle at (17,8) with size (6,9) and color pink and mask 111111111110011111111110111111101111011110111111011011
  [011]: a rectangle at (7,0) with size (9,7) and color yellow and mask 111000011011100111111110111100011111000011110100101011010111110
  [0111]: a rectangle at (17,0) with size (6,7) and color blue and mask 111111100111011110001101111101111101111110
  [01111]: a rectangle at (0,0) with size (6,7) and color red and mask 111010111101111101101110111110100110011111
diff: 
delta: (0,11)=7# (0,14)=7# (1,8)=7# (1,10)=7# (1,12)=7# (1,13)=7# (1,14)=7# (1,15)=7# (2,9)=7# (2,10)=7# (2,13)=7# (2,14)=7# (2,16)=7# (3,10)=7# (3,11)=7# (3,12)=7# (3,13)=7# (3,14)=7# (3,15)=7# (4,9)=7# (4,11)=7# (4,12)=7# (4,13)=7# (5,8)=7# (5,9)=7# (5,11)=7# (5,12)=7# (5,15)=7# (5,16)=7#
   (1067.0 bits)
data: a background with size (3,2) and color cyan and layers
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=4  (2,0)=1  (2,1)=6 
   (82.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,17) and color black and layers
  [0]: a rectangle at (7,8) with size (9,9) and color cyan and mask 111010010101111011011100111111111111011111111111111011101011010111111101111111010
  [01]: a rectangle at (17,8) with size (6,9) and color pink and mask 111111111110011111111110111111101111011110111111011011
  [011]: a rectangle at (7,0) with size (9,7) and color yellow and mask 111000011011100111111110111100011111000011110100101011010111110
  [0111]: a rectangle at (17,0) with size (6,7) and color blue and mask 111111100111011110001101111101111101111110
  [01111]: a rectangle at (0,0) with size (6,7) and color red and mask 111010111101111101101110111110100110011111
diff: 
delta: (0,11)=7# (0,14)=7# (1,8)=7# (1,10)=7# (1,12)=7# (1,13)=7# (1,14)=7# (1,15)=7# (2,9)=7# (2,10)=7# (2,13)=7# (2,14)=7# (2,16)=7# (3,10)=7# (3,11)=7# (3,12)=7# (3,13)=7# (3,14)=7# (3,15)=7# (4,9)=7# (4,11)=7# (4,12)=7# (4,13)=7# (5,8)=7# (5,9)=7# (5,11)=7# (5,12)=7# (5,15)=7# (5,16)=7#
! size mismatch, 10x10 instead of 3x2

TRAIN 780d0b14.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,28) and color black and layers
  [0]: a rectangle at (5,0) with size (14,15) and color blue and mask full
  [01]: a rectangle at (5,16) with size (14,12) and color cyan and mask 111101111101101111111101111010111111111111110101010111111111111111111110101111101111111100011111011010111111111011011100101111110111111101111111011010111111010111110111
  [011]: a rectangle at (0,16) with size (4,12) and color yellow and mask 111111111001111111111111111111111101111110111100
  [0111]: a rectangle at (20,16) with size (3,12) and color red and mask 111111111111011111011111110110111101
  [01111]: a rectangle at (0,8) with size (4,7) and color red and mask 1111101111001111110111111111
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,4)=3  (0,5)=3  (0,6)=3  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (2,1)=3  (2,4)=3  (2,5)=3  (3,0)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (5,5)=0  (5,7)=0  (5,10)=0  (5,11)=0  (6,3)=0  (6,5)=0  (6,7)=0  (6,12)=0  (7,1)=0  (7,7)=0  (8,2)=0  (8,6)=0  (8,7)=0  (8,13)=0  (9,0)=0  (9,1)=0  (9,2)=0  (9,5)=0  (9,7)=0  (9,9)=0  (9,10)=0  (10,3)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,12)=0  (11,3)=0  (11,4)=0  (11,5)=0  (11,7)=0  (11,13)=0  (12,7)=0  (12,13)=0  (12,14)=0  (13,3)=0  (13,4)=0  (13,7)=0  (13,8)=0  (13,13)=0  (14,1)=0  (14,4)=0  (14,7)=0  (15,3)=0  (15,5)=0  (15,7)=0  (15,10)=0  (16,7)=0  (16,8)=0  (16,10)=0  (17,1)=0  (17,7)=0  (17,13)=0  (18,0)=0  (18,2)=0  (18,7)=0  (18,11)=0  (18,14)=0  (20,0)=7# (20,1)=7# (20,3)=7# (20,4)=7# (20,6)=7# (20,8)=3  (20,9)=3  (20,12)=3  (20,13)=3  (20,14)=3  (21,0)=7# (21,1)=7# (21,2)=7# (21,4)=7# (21,5)=7# (21,6)=7# (21,9)=3  (21,10)=3  (21,12)=3  (22,0)=7# (22,1)=7# (22,2)=7# (22,3)=7# (22,4)=7# (22,5)=7# (22,6)=7# (22,8)=3  (22,9)=3  (22,10)=3  (22,11)=3  (22,12)=3  (22,13)=3  (22,14)=3 
! size mismatch, 10x10 instead of 3x3

TEST 780d0b14.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1887.7 bits (1887.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-216] Checking task 7837ac64.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 290161.6 = 290170.6
DL output with Mo: L = 9.0 + 3056.4 = 3065.4
DL input+output M: L = 17.9 + 293218.1 = 293236.0

# learning a model for train pairs
293236.0	
48580.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
46809.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
45213.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
44573.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
43941.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 41440.1 = 41516.1
DL output with Mo: L = 26.6 + 2398.5 = 2425.1
DL input+output M: L = 102.6 + 43838.6 = 43941.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color yellow and mask 10010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111110110111110010010010010010010010010010000100100100100100100100100100111111111111111111110110111110010010010010010010010010010000100100100100100100100100100111111111111110110110110111110010010010010010010010010010000100100100100100100100100100111111111111110110110110111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100
  [01]: a rectangle at (5,5) with size (10,1) and color blue and mask full
  [011]: a rectangle at (5,8) with size (10,1) and color blue and mask full
  [0111]: a rectangle at (5,11) with size (1,4) and color green and mask full
diff: 
delta: (8,11)=3  (8,14)=3 
   (1055.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,1) and color blue and mask full
diff: 
delta: (0,2)=3 
   (53.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color yellow and mask
  [01]: a rectangle at (5,5) with size (10,1) and color blue and mask full
  [011]: a rectangle at (5,8) with size (10,1) and color blue and mask full
  [0111]: a rectangle at (5,11) with size (1,4) and color green and mask full
diff: 
delta: (8,11)=3  (8,14)=3 
! size mismatch, 10x10 instead of 3x3

TRAIN 7837ac64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color green and mask
  [01]: a rectangle at (11,3) with size (1,9) and color red and mask full
  [011]: a rectangle at (7,7) with size (1,5) and color red and mask full
  [0111]: a rectangle at (15,3) with size (1,5) and color red and mask full
diff: 
delta: (15,11)=8  (15,15)=8  (19,11)=8  (19,15)=8 
   (982.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 110
diff: 
delta: (2,2)=8 
   (57.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color green and mask
  [01]: a rectangle at (11,3) with size (1,9) and color red and mask full
  [011]: a rectangle at (7,7) with size (1,5) and color red and mask full
  [0111]: a rectangle at (15,3) with size (1,5) and color red and mask full
diff: 
delta: (15,11)=8  (15,15)=8  (19,11)=8  (19,15)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN 7837ac64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask 10010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111110110110110111111111111110010010010010010010010010010000100100100100100100100100100111110110110110111111111111110010010010010010010010010010000100100100100100100100100100111111110110110111111111111110010010010010010010010010010000100100100100100100100100100111111110110110111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100111111111111111111111111111110010010010010010010010010010000100100100100100100100100100
  [01]: a rectangle at (17,14) with size (1,10) and color green and mask full
  [011]: a rectangle at (20,14) with size (1,10) and color green and mask full
  [0111]: a rectangle at (11,14) with size (1,7) and color pink and mask full
diff: 
delta: (14,14)=6  (14,17)=6  (14,20)=6 
   (1078.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color green and mask full
diff: 
delta: (0,0)=6  (0,1)=6 
   (68.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
  [01]: a rectangle at (17,14) with size (1,10) and color green and mask full
  [011]: a rectangle at (20,14) with size (1,10) and color green and mask full
  [0111]: a rectangle at (11,14) with size (1,7) and color pink and mask full
diff: 
delta: (14,14)=6  (14,17)=6  (14,20)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 7837ac64.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color cyan and mask
  [01]: a rectangle at (15,7) with size (1,13) and color red and mask full
  [011]: a rectangle at (19,7) with size (1,13) and color red and mask full
  [0111]: a rectangle at (7,7) with size (1,5) and color blue and mask full
diff: 
delta: (7,15)=2  (7,19)=2  (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2 
   (1027.8 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,2) and color black and mask full
diff: 
delta: (0,0)=1 
   (60.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (27,27) and color cyan and mask 100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111101110111011101111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111101110111011101111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111101110111011101111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111101110111011101111111000100010001000100010001000000100010001000100010001000000100010001000100010001000111111111111111111111111111000100010001000100010001000000100010001000100010001000000100010001000100010001000
  [01]: a rectangle at (15,7) with size (1,13) and color red and mask full
  [011]: a rectangle at (19,7) with size (1,13) and color red and mask full
  [0111]: a rectangle at (7,7) with size (1,5) and color blue and mask full
diff: 
delta: (7,15)=2  (7,19)=2  (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2 
! size mismatch, 10x10 instead of 3x3

TRAIN 7837ac64.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color red and mask 100001000010000100001000000001000010000100001000010000000010000100001000010000100000000100001000010000100001000011111111111111111111111111111000010000100001000010000100000000100001000010000100001000000001000010000100001000010000000010000100001000010000100001111111110111101111011110111100001000010000100001000010000000010000100001000010000100000000100001000010000100001000000001000010000100001000010000111111111011110111101111011110000100001000010000100001000000001000010000100001000010000000010000100001000010000100000000100001000010000100001000011111111101111011110111101111000010000100001000010000100000000100001000010000100001000000001000010000100001000010000000010000100001000010000100001111111110111101111011110111100001000010000100001000010000000010000100001000010000100000000100001000010000100001000000001000010000100001000010000
  [01]: a rectangle at (14,4) with size (1,16) and color cyan and mask full
  [011]: a rectangle at (19,4) with size (1,16) and color cyan and mask full
  [0111]: a rectangle at (4,4) with size (1,6) and color blue and mask full
diff: 
delta: (4,14)=4  (4,19)=4  (9,4)=1  (9,9)=1  (9,14)=4  (9,19)=4 
! size mismatch, 10x10 instead of 3x3

TEST 7837ac64.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2398.5 bits (2398.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-215] Checking task 794b24be.json: 10 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5397.2 = 5406.1
DL output with Mo: L = 9.0 + 5397.2 = 5406.1
DL input+output M: L = 17.9 + 10794.3 = 10812.3

# learning a model for train pairs
10812.3	
9274.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8042.4	OUT DEF: size={size}
7177.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
Stack overflow
Called from unknown location
Error: no learned model
=====================================
[-214] Checking task 7b6016b9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 65281.9 = 65290.8
DL output with Mo: L = 9.0 + 105449.7 = 105458.7
DL input+output M: L = 17.9 + 170731.6 = 170749.5

# learning a model for train pairs
170749.5	
121550.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
72673.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
50194.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
34881.0	OUT DEF: layer[0]={layer[0]}
28339.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
27617.3	OUT DEF: size={size}
27382.9	OUT DEF: color=green
27249.7	OUT DEF: layer[01].color=green
27111.7	OUT DEF: layer[011].color=red
27041.0	OUT DEF: layer[01].mask=full
26970.4	OUT DEF: layer[011].mask=full
26924.8	IN  DEF: color=black
26889.7	OUT DEF: layer[01].pos=(?,?)
26724.6	OUT DEF: layer[01].pos.j=0
26594.2	OUT DEF: layer[01].pos.i=0
26559.2	OUT DEF: layer[01].size=(?,?)
26255.8	OUT DEF: layer[01].size.i={size.i}
26220.8	OUT DEF: layer[011].pos=(?,?)
26185.7	OUT DEF: layer[011].size=(?,?)
26150.7	IN  DEF: size=(?,?)
26115.7	IN  DEF: layer[0].pos=(?,?)
26080.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color green and layers
  [0]: {layer[0]}
  [01]: a rectangle at (0,0) with size ({size.i},?) and color green and mask full
  [011]: a rectangle at (?,?) with size (?,?) and color red and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 38.6 + 15902.6 = 15941.2
DL output with Mo: L = 75.9 + 10063.6 = 10139.5
DL input+output M: L = 114.5 + 25966.2 = 26080.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (22,22) and color cyan and mask 10010000000000000000001001000000000000001111111110000010000000000010010000001000000000001001000000100000000000100100000010000000000111111111111111111000001000000000100000000000100000000010000000000010000000001000000010001000000000100000001000100000100010000000100010000010001000000111111111111111111100001000100000100010000000100010000010001000000010001000001000100000000000100011111111110000000010000010001000000000001000001000000000000000100000100000000000000000000010000000000
diff: 
delta:
   (547.9 bits)
data: a background with size (23,23) and color green and layers
  [0]: a rectangle at (0,0) with size (22,22) and color cyan and mask 10010000000000000000001001000000000000001111111110000010000000000010010000001000000000001001000000100000000000100100000010000000000111111111111111111000001000000000100000000000100000000010000000000010000000001000000010001000000000100000001000100000100010000000100010000010001000000111111111111111111100001000100000100010000000100010000010001000000010001000001000100000000000100011111111110000000010000010001000000000001000001000000000000000100000100000000000000000000010000000000
  [01]: a rectangle at (0,0) with size (23,6) and color green and mask full
  [011]: a rectangle at (9,7) with size (6,9) and color red and mask full
diff: 
delta: (5,7)=2  (5,8)=2  (5,9)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,7)=2  (7,8)=2  (7,9)=2  (16,14)=2  (16,15)=2  (17,14)=2  (17,15)=2  (18,14)=2  (18,15)=2 
   (343.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (22,22) and color cyan and mask 10010000000000000000001001000000000000001111111110000010000000000010010000001000000000001001000000100000000000100100000010000000000111111111111111111000001000000000100000000000100000000010000000000010000000001000000010001000000000100000001000100000100010000000100010000010001000000111111111111111111100001000100000100010000000100010000010001000000010001000001000100000000000100011111111110000000010000010001000000000001000001000000000000000100000100000000000000000000010000000000
diff: 
delta:
! 67 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color cyan and layers
  [0]: a rectangle at (0,0) with size (23,23) and color black and mask
diff:   color
delta:
! 529 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,25) and color black and layers
  [0]: a rectangle at (1,0) with size (19,25) and color blue and mask 10000010000000000000000001000001000001000000000000100000100000100000000111111100010000010000000000001000001000001000000000000100000100000100000000000010000010000010000000000001000111111111111000000000100000100000100000000000010000010000010000000000001000001000001000000000000100000100000100000000011111111111100010000000000001000001000001000000000000100000100000100000000000010000010000010000111111111111111111111111100000000100000000000100000000000010000000000010000
diff: 
delta:
   (539.0 bits)
data: a background with size (22,25) and color green and layers
  [0]: a rectangle at (1,0) with size (19,25) and color blue and mask 10000010000000000000000001000001000001000000000000100000100000100000000111111100010000010000000000001000001000001000000000000100000100000100000000000010000010000010000000000001000111111111111000000000100000100000100000000000010000010000010000000000001000001000001000000000000100000100000100000000011111111111100010000000000001000001000001000000000000100000100000100000000000010000010000010000111111111111111111111111100000000100000000000100000000000010000000000010000
  [01]: a rectangle at (0,0) with size (22,4) and color green and mask full
  [011]: a rectangle at (4,5) with size (8,5) and color red and mask full
diff: 
delta: (4,11)=2  (4,12)=2  (4,13)=2  (4,14)=2  (4,15)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (5,15)=2  (6,11)=2  (6,12)=2  (6,13)=2  (6,14)=2  (6,15)=2 
   (341.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  [0]: a rectangle at (1,0) with size (19,25) and color blue and mask 10000010000000000000000001000001000001000000000000100000100000100000000111111100010000010000000000001000001000001000000000000100000100000100000000000010000010000010000000000001000111111111111000000000100000100000100000000000010000010000010000000000001000001000001000000000000100000100000100000000011111111111100010000000000001000001000001000000000000100000100000100000000000010000010000010000111111111111111111111111100000000100000000000100000000000010000000000010000
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,25) and color black and layers
  [0]: a rectangle at (3,0) with size (1,25) and color blue and mask full
diff: 
delta: (1,4)=1  (1,16)=1  (2,4)=1  (2,16)=1  (4,4)=1  (4,10)=1  (4,16)=1  (5,4)=1  (5,10)=1  (5,16)=1  (6,4)=1  (6,10)=1  (6,16)=1  (7,4)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (8,4)=1  (8,10)=1  (8,16)=1  (9,4)=1  (9,10)=1  (9,16)=1  (10,4)=1  (10,10)=1  (10,16)=1  (11,4)=1  (11,10)=1  (11,16)=1  (12,1)=1  (12,2)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,11)=1  (12,12)=1  (12,16)=1  (13,4)=1  (13,10)=1  (13,16)=1  (14,4)=1  (14,10)=1  (14,16)=1  (15,4)=1  (15,10)=1  (15,16)=1  (16,4)=1  (16,10)=1  (16,14)=1  (16,15)=1  (16,16)=1  (16,17)=1  (16,18)=1  (16,19)=1  (16,20)=1  (17,4)=1  (17,10)=1  (17,16)=1  (18,4)=1  (18,10)=1  (18,16)=1  (19,10)=1  (19,16)=1 
! 130 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,21) and color black and layers
  [0]: a rectangle at (1,1) with size (22,20) and color yellow and mask 1000001001000001000010000010010000010000100000100100000100001000111111111111111111000010010000010000100000100100000100001000001001000001111111111111111100010000100000100100000100001000001001000000000010000000010000000000100000000100000000001000000001000000000010000000010000001111111110000100000000001000000001000000000010000000010000000111111111111111100000001000000001000000000010000000010000000000100000000100000000000000000001000
diff: 
delta:
   (503.4 bits)
data: a background with size (24,21) and color green and layers
  [0]: a rectangle at (1,1) with size (22,20) and color yellow and mask 1000001001000001000010000010010000010000100000100100000100001000111111111111111111000010010000010000100000100100000100001000001001000001111111111111111100010000100000100100000100001000001001000000000010000000010000000000100000000100000000001000000001000000000010000000010000001111111110000100000000001000000001000000000010000000010000000111111111111111100000001000000001000000000010000000010000000000100000000100000000000000000001000
  [01]: a rectangle at (0,0) with size (24,4) and color green and mask full
  [011]: a rectangle at (6,5) with size (9,8) and color red and mask full
diff: 
delta: (16,5)=2  (16,6)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (17,5)=2  (17,6)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (18,5)=2  (18,6)=2 
   (321.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,21) and color black and layers
  [0]: a rectangle at (1,1) with size (22,20) and color yellow and mask 1000001001000001000010000010010000010000100000100100000100001000111111111111111111000010010000010000100000100100000100001000001001000001111111111111111100010000100000100100000100001000001001000000000010000000010000000000100000000100000000001000000001000000000010000000010000001111111110000100000000001000000001000000000010000000010000000111111111111111100000001000000001000000000010000000010000000000100000000100000000000000000001000
diff: 
delta:
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,21) and color yellow and layers
  [0]: a rectangle at (0,0) with size (24,21) and color black and mask
diff:   color
delta:
! 504 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  [0]: a rectangle at (1,2) with size (21,22) and color orange and mask 100000000000000000000010000000000100000000001000000000010000000011111000011111111100000010000000000100000000001000000000010000000000100000001111111111111111100000000100000000001000010000010000000000100001000001000010000010000100000100001000001000111111111111110000100001000001000010000010000100000100001000001000010000010000100000100001000001000010000010001111111111111111111111010000010000100000100001000001000010000010000000000100000000001000
diff: 
delta:
! 98 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,25) and color orange and layers
  [0]: a rectangle at (0,0) with size (22,25) and color black and mask 1111111111111111111011111111111111111111111101111111111111011111111110111111111111101111111100000111111100000000011111101111111111111011111111110111111111111101111111111011111111110000000000000000011111111111011111111110111111101111101111111111011111110111110111101111101111111011111011110111110111111000000000000001111011111110111110111101111101111111011111011110111110111111101111101111011111011111110111110111101111101111110000000000000000000000111101111101111011111011111110111110111101111101111111111111011111111110111111111111111111111111111111
diff:   color
delta:
! 550 wrong pixels (generated / expected)

TEST 7b6016b9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10063.6 bits (10063.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-213] Checking task 7b7f7511.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6107.9 = 6116.9
DL output with Mo: L = 9.0 + 3214.8 = 3223.8
DL input+output M: L = 17.9 + 9322.7 = 9340.7

# learning a model for train pairs
9340.7	
7450.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6757.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6549.2	OUT DEF: color={color}
6332.0	OUT DEF: layer[0].pos={layer[0].pos}
6192.1	OUT DEF: layer[0].color={layer[0].color}
6102.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6031.6	IN  DEF: layer[01].mask=full
5977.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5942.2	OUT DEF: size=(?,?)
5791.4	OUT DEF: size.j={layer[01].pos.j + layer[01].size.j}
5756.4	OUT DEF: layer[0].size=(?,?)
5605.1	OUT DEF: layer[0].size.j={layer[01].pos.j + layer[01].size.j}
5476.6	OUT DEF: layer[0].size.i={layer[0].size.i}
5441.6	IN  DEF: size=(?,?)
5406.6	IN  DEF: layer[0].pos=(?,?)
5304.0	IN  DEF: layer[0].pos.j=0
5269.0	IN  DEF: layer[0].size=(?,?)
5234.0	IN  DEF: layer[01].pos=(?,?)
5198.9	IN  DEF: layer[01].size=(?,?)
5163.9	IN  DEF: layer[011].pos=(?,?)
5128.9	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,{layer[01].pos.j + layer[01].size.j}) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i},{layer[01].pos.j + layer[01].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,0) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 94.2 + 3567.7 = 3662.0
DL output with Mo: L = 58.2 + 1408.8 = 1467.0
DL input+output M: L = 152.4 + 4976.5 = 5128.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,8) and color blue and layers
  [0]: a rectangle at (0,0) with size (4,8) and color green and mask 100010001100111100110001000100
  [01]: a rectangle at (0,3) with size (1,1) and color red and mask full
  [011]: a rectangle at (0,7) with size (1,1) and color red and mask full
diff: 
delta: (3,0)=2  (3,4)=2 
   (150.8 bits)
data: a background with size (4,4) and color blue and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 10001111000100
diff: 
delta: (0,3)=2  (3,0)=2 
   (57.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color blue and layers
  [0]: a rectangle at (0,0) with size (4,8) and color green and mask 100010001100111100110001000100
  [01]: a rectangle at (0,3) with size (1,1) and color red and mask full
  [011]: a rectangle at (0,7) with size (1,1) and color red and mask full
diff: 
delta: (3,0)=2  (3,4)=2 
! size mismatch, 10x4 instead of 4x4

TRAIN 7b7f7511.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,6) and color yellow and mask 10010111111
  [01]: a rectangle at (1,2) with size (2,1) and color cyan and mask full
  [011]: a rectangle at (1,5) with size (2,1) and color cyan and mask full
diff: 
delta:
   (93.2 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,3) and color yellow and mask 10111
diff: 
delta: (1,2)=8  (2,2)=8 
   (45.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,6) and color yellow and mask 10010111111
  [01]: a rectangle at (1,2) with size (2,1) and color cyan and mask full
  [011]: a rectangle at (1,5) with size (2,1) and color cyan and mask full
diff: 
delta:
! size mismatch, 10x3 instead of 3x3
>> Trial 2
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,6) and color yellow and mask 10010111111
  [01]: a rectangle at (1,5) with size (2,1) and color cyan and mask full
  [011]: a rectangle at (1,2) with size (2,1) and color cyan and mask full
diff: 
delta:
! size mismatch, 10x6 instead of 3x3
>> Trial 3
data: a background with size (3,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,6) and color yellow and mask 10010111111
  [01]: a rectangle at (1,0) with size (2,2) and color pink and mask full
  [011]: a rectangle at (1,3) with size (2,2) and color pink and mask full
diff: 
delta:
! size mismatch, 10x2 instead of 3x3

TRAIN 7b7f7511.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,2) and color green and layers
  [0]: a rectangle at (2,0) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (5,0) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (2,2) and color red and mask 1001
diff: 
delta: (3,0)=2  (4,1)=2 
   (112.9 bits)
data: a background with size (3,2) and color green and layers
  [0]: a rectangle at (2,0) with size (1,2) and color yellow and mask full
diff: 
delta: (0,0)=2  (1,1)=2 
   (38.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color green and layers
  [0]: a rectangle at (2,0) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (5,0) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (2,2) and color red and mask 1001
diff: 
delta: (3,0)=2  (4,1)=2 
! size mismatch, 10x2 instead of 3x2
>> Trial 2
data: a background with size (6,2) and color red and layers
  [0]: a rectangle at (2,0) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (5,0) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (2,2) and color green and mask 110
diff: 
delta: (3,1)=3  (4,0)=3 
! size mismatch, 10x2 instead of 3x2

TRAIN 7b7f7511.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color grey and layers
  [0]: a rectangle at (4,0) with size (3,3) and color yellow and mask 100101010
  [01]: a rectangle at (2,0) with size (6,2) and color pink and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color yellow and mask 111101010
diff: 
delta: (3,0)=2  (3,2)=2  (4,0)=5# (5,1)=5# (7,0)=2  (7,2)=2 
! size mismatch, 10x2 instead of 4x3
>> Trial 2
data: a background with size (8,3) and color yellow and layers
  [0]: a rectangle at (4,0) with size (3,3) and color yellow and mask 100101010
  [01]: a rectangle at (4,0) with size (2,3) and color grey and mask full
  [011]: a rectangle at (2,0) with size (6,2) and color pink and mask full
diff: 
delta: (0,0)=5# (0,2)=5# (1,1)=5# (3,0)=2  (3,2)=2  (7,0)=2  (7,2)=2 
! size mismatch, 10x3 instead of 4x3
>> Trial 3
data: a background with size (8,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 100101010
  [01]: a rectangle at (4,0) with size (3,3) and color yellow and mask 100101010
  [011]: a rectangle at (2,0) with size (6,2) and color pink and mask full
diff:   layer[01].mask
delta: (3,0)=2  (3,2)=2  (4,0)=5# (5,1)=5# (7,0)=2  (7,2)=2 
! size mismatch, 10x3 instead of 4x3

TEST 7b7f7511.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1408.8 bits (1408.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-212] Checking task 7c008303.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20435.9 = 20444.9
DL output with Mo: L = 9.0 + 8831.0 = 8840.0
DL input+output M: L = 17.9 + 29267.0 = 29284.9

# learning a model for train pairs
29284.9	
22955.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18334.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16618.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15477.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14322.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13553.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
13098.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 7718.7 = 7778.5
DL output with Mo: L = 76.0 + 5243.9 = 5320.0
DL input+output M: L = 135.8 + 12962.6 = 13098.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,3) with size (6,6) and color green and mask 10010111111010010010010111111010010
  [01]: a rectangle at (2,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,2) with size (9,1) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,1)=4  (1,0)=1  (1,1)=6 
   (222.6 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 10111010
  [01]: a rectangle at (0,3) with size (3,3) and color yellow and mask 10111010
  [011]: a rectangle at (3,0) with size (3,3) and color blue and mask 10111010
  [0111]: a rectangle at (3,3) with size (3,3) and color pink and mask 10111010
diff: 
delta:
   (167.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,3) with size (6,6) and color green and mask 10010111111010010010010111111010010
  [01]: a rectangle at (2,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,2) with size (9,1) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,1)=4  (1,0)=1  (1,1)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 7c008303.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,0) with size (4,6) and color green and mask 10000111111010000101011
  [01]: a rectangle at (2,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,6) with size (9,1) and color cyan and mask full
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,2)=3  (3,3)=3  (3,5)=3  (4,0)=3  (4,1)=3 
   (297.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 11011100
  [01]: a rectangle at (3,3) with size (3,3) and color blue and mask 10111010
  [011]: a rectangle at (4,0) with size (1,3) and color yellow and mask full
  [0111]: a rectangle at (0,3) with size (1,1) and color red and mask full
diff: 
delta: (0,5)=2  (2,3)=2  (2,5)=2 
   (192.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,0) with size (4,6) and color green and mask 10000111111010000101011
  [01]: a rectangle at (2,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,6) with size (9,1) and color cyan and mask full
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,2)=3  (3,3)=3  (3,5)=3  (4,0)=3  (4,1)=3 
! size mismatch, 10x10 instead of 6x6

TRAIN 7c008303.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (5,6) and color green and mask 1010010000011011100100100100
  [01]: a rectangle at (6,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,2) with size (9,1) and color cyan and mask full
diff: 
delta: (5,4)=3  (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
   (251.6 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 11100100
  [01]: a rectangle at (0,3) with size (3,3) and color yellow and mask 11100100
  [011]: a rectangle at (4,1) with size (2,1) and color pink and mask full
  [0111]: a rectangle at (3,3) with size (2,2) and color grey and mask 110
diff: 
delta: (5,5)=5#
   (164.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (5,6) and color green and mask 1010010000011011100100100100
  [01]: a rectangle at (6,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,2) with size (9,1) and color cyan and mask full
diff: 
delta: (5,4)=3  (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 7c008303.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (6,4) and color green and mask 10000101110101010111000
  [01]: a rectangle at (6,0) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (0,6) with size (9,1) and color cyan and mask full
diff: 
delta: (1,5)=3  (2,5)=3  (4,5)=3  (7,7)=2  (7,8)=1  (8,7)=4  (8,8)=7#
! size mismatch, 10x10 instead of 6x6

TEST 7c008303.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5243.9 bits (5243.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-211] Checking task 7ddcd7ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3773.2 = 3782.1
DL output with Mo: L = 9.0 + 6279.8 = 6288.8
DL input+output M: L = 17.9 + 10053.0 = 10070.9

# learning a model for train pairs
10070.9	
7424.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5581.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5003.6	OUT DEF: size={size}
4863.7	OUT DEF: layer[0].color={layer[0].color}
4818.1	OUT DEF: color=black
4772.5	IN  DEF: color=black
4737.5	OUT DEF: layer[0].pos=(?,?)
4702.5	OUT DEF: layer[0].size=(?,?)
4667.4	IN  DEF: size=(?,?)
4404.1	IN  DEF: size.i=10
4140.8	IN  DEF: size.j=10
4105.8	IN  DEF: layer[0].pos=(?,?)
4070.8	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 49.9 + 1212.0 = 1261.9
DL output with Mo: L = 32.7 + 2776.1 = 2808.8
DL input+output M: L = 82.6 + 3988.1 = 4070.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color green and mask 100011011
diff: 
delta:
   (36.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (8,8) and color green and mask 1000000001000000001000000001000000001000000001000000001100000011
diff: 
delta:
   (92.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color green and mask 100011011
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (4,3) and color yellow and mask 100011011100
diff: 
delta:
   (40.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,4) with size (8,6) and color yellow and mask 100000010000001000000100000011000011000100001000
diff: 
delta:
   (75.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (4,3) and color yellow and mask 100011011100
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (4,4) and color orange and mask 1011001101000
diff: 
delta:
   (44.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color orange and mask 1000000010000000100000001000000110000000110000001000000010000000100000000
diff: 
delta:
   (109.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (4,4) and color orange and mask 1011001101000
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (4,4) and color cyan and mask 1001011001101000
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST 7ddcd7ec.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2776.1 bits (2776.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-210] Checking task 7df24a62.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 40027.5 = 40036.5
DL output with Mo: L = 9.0 + 63053.8 = 63062.7
DL input+output M: L = 17.9 + 103081.3 = 103099.2

# learning a model for train pairs
103099.2	
90172.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
77227.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
65976.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
60535.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 28759.2 = 28785.7
DL output with Mo: L = 59.8 + 31689.5 = 31749.3
DL input+output M: L = 86.4 + 60448.7 = 60535.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (1,3) with size (5,5) and color blue and mask full
diff: 
delta: (1,13)=4  (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (408.7 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (1,3) with size (5,5) and color blue and mask full
  [01]: a rectangle at (12,10) with size (5,5) and color blue and mask full
  [011]: a rectangle at (1,13) with size (1,1) and color yellow and mask full
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (449.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (1,3) with size (5,5) and color blue and mask full
diff: 
delta: (1,13)=4  (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! size mismatch, 10x10 instead of 23x23

TRAIN 7df24a62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (6,15) with size (4,4) and color blue and mask full
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (21,11)=4  (22,0)=4  (22,3)=4  (22,9)=4  (22,11)=4 
   (588.4 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (6,15) with size (4,4) and color blue and mask full
  [01]: a rectangle at (13,13) with size (4,4) and color blue and mask full
  [011]: a rectangle at (21,11) with size (2,1) and color yellow and mask full
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (610.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (6,15) with size (4,4) and color blue and mask full
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (21,11)=4  (22,0)=4  (22,3)=4  (22,9)=4  (22,11)=4 
! size mismatch, 10x10 instead of 23x23

TRAIN 7df24a62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (14,5) with size (3,4) and color blue and mask full
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1008.8 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (11,13) with size (4,7) and color blue and mask 1110000101111110110011111111
  [01]: a rectangle at (13,5) with size (4,7) and color blue and mask 1111111101100110111111110000
  [011]: a rectangle at (2,13) with size (8,4) and color blue and mask 11101010101011100111010101010111
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1170.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (14,5) with size (3,4) and color blue and mask full
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! size mismatch, 10x10 instead of 23x23

TRAIN 7df24a62.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (8,6) with size (5,4) and color blue and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (7,16)=4  (7,17)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (870.0 bits)
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (4,15) with size (5,4) and color blue and mask full
  [01]: a rectangle at (8,6) with size (5,4) and color blue and mask full
  [011]: a rectangle at (0,1) with size (3,5) and color blue and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (7,16)=4  (7,17)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (938.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (8,6) with size (5,4) and color blue and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (7,16)=4  (7,17)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
! size mismatch, 10x10 instead of 23x23

TRAIN 7df24a62.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,9) with size (5,5) and color blue and mask full
diff: 
delta: (1,5)=4  (1,10)=4  (3,6)=4  (3,10)=4  (3,12)=4  (4,3)=4  (5,14)=4  (8,10)=4  (9,5)=4  (9,19)=4  (10,8)=4  (10,13)=4  (11,3)=4  (11,5)=4  (11,18)=4  (12,12)=4  (16,0)=4  (16,7)=4  (16,18)=4  (18,19)=4  (20,6)=4  (20,8)=4  (21,21)=4  (22,1)=4  (22,6)=4 
! size mismatch, 10x10 instead of 23x23

TEST 7df24a62.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 31689.5 bits (31689.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-209] Checking task 7e0986d6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 35943.4 = 35952.4
DL output with Mo: L = 9.0 + 33717.3 = 33726.2
DL input+output M: L = 17.9 + 69660.7 = 69678.6

# learning a model for train pairs
69678.6	
41255.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
31122.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21587.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15180.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14318.4	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
13895.3	OUT DEF: size={size}
13473.5	OUT DEF: layer[0].size={size}
13315.7	OUT DEF: color={layer[0].color}
13224.0	OUT DEF: layer[0].color={color}
13176.6	IN  DEF: layer[01].mask=full
13019.3	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
12971.9	IN  DEF: layer[011].mask=full
12924.4	IN  DEF: layer[0111].mask=full
12877.0	IN  DEF: layer[01111].mask=full
12835.1	IN  SHAPE at layer[011111]: a point at ? with color ?
12792.5	IN  SHAPE at layer[01110]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at ? with size {size} and color {color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full
  [01110]: a point at ? with color ?
  [0111]: a rectangle at ? with size ? and color ? and mask full
  [01111]: a rectangle at ? with size ? and color ? and mask full
  [011111]: a point at ? with color ?

DL input  with Mi: L = 106.9 + 8474.4 = 8581.3
DL output with Mo: L = 33.3 + 4177.8 = 4211.2
DL input+output M: L = 140.3 + 12652.2 = 12792.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,14) and color black and layers
  [0]: a rectangle at (7,0) with size (6,8) and color green and mask 1010000011111101111111110001110100010111000
  [01]: a rectangle at (0,6) with size (5,5) and color green and mask full
  [011]: a rectangle at (6,9) with size (4,5) and color green and mask full
  [01110]: a point at (0,0) with color cyan
  [0111]: a rectangle at (3,2) with size (3,3) and color green and mask full
  [01111]: a rectangle at (10,4) with size (1,5) and color cyan and mask full
  [011111]: a point at (0,4) with color cyan
diff: 
delta: (0,11)=8  (2,8)=8  (2,10)=8  (4,7)=8  (5,4)=8  (7,1)=8  (7,6)=8  (7,12)=8  (8,4)=8  (12,1)=8  (12,4)=8  (12,13)=8 
   (484.2 bits)
data: a background with size (13,14) and color green and layers
  [0]: a rectangle at (0,0) with size (13,14) and color black and mask 11111111111000111111111110001111110000000000000100000111000001000001110000010000011100000111111111111111111000111110000010001111100000100011111000001111111110000011111111100000111111
diff: 
delta:
   (195.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  [0]: a rectangle at (7,0) with size (6,8) and color green and mask 1010000011111101111111110001110100010111000
  [01]: a rectangle at (0,6) with size (5,5) and color green and mask 1110111111010111111111111
  [011]: a rectangle at (6,9) with size (4,5) and color green and mask 11111111111011111111
  [01110]: a point at (0,0) with color cyan
  [0111]: a rectangle at (3,2) with size (3,3) and color green and mask full
  [01111]: a rectangle at (2,8) with size (1,3) and color cyan and mask full
  [011111]: a point at (0,4) with color cyan
diff:   layer[011].mask  layer[01].mask
delta: (0,11)=8  (4,7)=8  (5,4)=8  (7,1)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
! 83 wrong pixels (generated / expected)

TRAIN 7e0986d6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (9,3) with size (4,10) and color red and mask 1111111111011011111111111111101110111111
  [01]: a rectangle at (2,9) with size (5,7) and color red and mask full
  [011]: a rectangle at (1,1) with size (5,4) and color red and mask full
  [01110]: a point at (1,6) with color blue
  [0111]: a rectangle at (9,9) with size (3,1) and color blue and mask full
  [01111]: a rectangle at (8,12) with size (4,1) and color blue and mask full
  [011111]: a point at (5,5) with color blue
diff: 
delta: (2,10)=1  (3,3)=1  (5,14)=1  (9,1)=1  (10,3)=1  (10,15)=1 
   (363.3 bits)
data: a background with size (13,16) and color red and layers
  [0]: a rectangle at (0,0) with size (13,16) and color black and mask 1110000000000111111000000000011111100000000001111110000000000111111111111111111111111111111111110000000111111111000000011110000100000001111000010000000111100001000000011110000111111111111000011111111111111111
diff: 
delta:
   (222.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (9,3) with size (4,10) and color red and mask 1111111111011011111111111111101110111111
  [01]: a rectangle at (2,9) with size (5,7) and color red and mask 11111111011111111111111111111111101
  [011]: a rectangle at (1,1) with size (5,4) and color red and mask 11111111101111111111
  [01110]: a point at (1,6) with color blue
  [0111]: a rectangle at (9,9) with size (3,1) and color blue and mask full
  [01111]: a rectangle at (8,12) with size (4,1) and color blue and mask full
  [011111]: a point at (2,10) with color blue
diff:   layer[011].mask  layer[01].mask
delta: (3,3)=1  (5,5)=1  (5,14)=1  (9,1)=1  (10,3)=1  (10,15)=1 
! 95 wrong pixels (generated / expected)

TRAIN 7e0986d6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  [0]: a rectangle at (2,1) with size (6,8) and color grey and mask 111011111111111110111111111111111111111111111101
  [01]: a rectangle at (0,12) with size (7,4) and color grey and mask 1011111111111111111111111011
  [011]: a rectangle at (10,6) with size (2,6) and color grey and mask 110111011111
  [01110]: a point at (0,14) with color yellow
  [0111]: a rectangle at (1,1) with size (2,2) and color yellow and mask 1101
  [01111]: a rectangle at (1,6) with size (1,1) and color yellow and mask full
  [011111]: a point at (3,16) with color yellow
diff:   layer[0111].mask  layer[011].mask  layer[01].mask
delta: (5,7)=4  (6,14)=4  (7,5)=4  (7,12)=4  (9,15)=4  (10,11)=4  (11,3)=4  (11,9)=4 
! 88 wrong pixels (generated / expected)

TEST 7e0986d6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4177.8 bits (4177.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-208] Checking task 7f4411dc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20465.6 = 20474.5
DL output with Mo: L = 9.0 + 16415.5 = 16424.5
DL input+output M: L = 17.9 + 36881.1 = 36899.0

# learning a model for train pairs
36899.0	
26959.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17316.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15795.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15192.4	OUT DEF: size={size}
15121.7	IN  DEF: layer[0].mask=full
15086.7	OUT DEF: layer[0].pos=(?,?)
14975.4	OUT DEF: layer[0].pos.j={layer[0].size.i - layer[0].pos.j}
14940.4	OUT DEF: layer[0].size=(?,?)
14905.4	IN  DEF: size=(?,?)
14870.4	IN  DEF: layer[0].pos=(?,?)
14835.4	IN  DEF: layer[0].size=(?,?)
14800.4	IN  DEF: layer[01].pos=(?,?)
14765.3	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at (?,{layer[0].size.i - layer[0].pos.j}) with size (?,?) and color ? and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 65.6 + 9022.7 = 9088.3
DL output with Mo: L = 46.0 + 5631.0 = 5677.0
DL input+output M: L = 111.6 + 14653.7 = 14765.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color orange and layers
  [0]: a rectangle at (0,1) with size (1,1) and color orange and mask full
  [01]: a rectangle at (0,0) with size (13,13) and color black and mask 1111111101111111111111111110111111111111100011111111110001111110111111111111111111111111111110111100001111111110000111111111000011000001110111100000111111110000011111111
diff: 
delta:
   (252.2 bits)
data: a background with size (13,13) and color orange and layers
  [0]: a rectangle at (0,0) with size (13,13) and color black and mask 1111111111111111111111111111111111111111100011111111110001111111111111111111111111111111111111111100001111111110000111111111000011000001111111100000111111110000011111111
diff: 
delta:
   (208.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color orange and layers
  [0]: a rectangle at (0,1) with size (1,1) and color orange and mask full
  [01]: a rectangle at (0,0) with size (13,13) and color black and mask 1111111101111111111111111110111111111111100011111111110001111110111111111111111111111111111110111100001111111110000111111111000011000001110111100000111111110000011111111
diff: 
delta:
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color orange and layers
  [0]: a rectangle at (5,10) with size (1,1) and color orange and mask full
  [01]: a rectangle at (0,0) with size (13,13) and color black and mask 1111111101111111111111111110111111111111100011111111110001111110111111111111111111111111111111111100001111111110000111111111000011000001110111100000111111110000011111101
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (5,3) with size (3,4) and color pink and mask full
  [01]: a rectangle at (10,9) with size (3,5) and color pink and mask full
diff: 
delta: (1,12)=6  (2,1)=6  (2,6)=6  (2,11)=6  (2,12)=6  (2,13)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,16)=6  (4,4)=6  (6,12)=6  (9,13)=6  (10,3)=6  (12,2)=6  (12,3)=6  (12,7)=6  (13,2)=6  (13,3)=6  (14,2)=6  (14,3)=6  (15,13)=6  (16,10)=6 
   (528.6 bits)
data: a background with size (17,17) and color pink and layers
  [0]: a rectangle at (0,0) with size (17,17) and color black and mask 1111111111111111111111111111111111111111111111100111111111111111001111100000111110011111000001111111111110000011111111111111111111111111111111111111111111111111111000011111111111110000111111111111100001111111111111111111111100011111111111111000111111111111111111111111111111111111111111111
diff: 
delta:
   (330.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (10,9) with size (3,5) and color pink and mask full
  [01]: a rectangle at (4,3) with size (4,4) and color pink and mask 1111111111110010
diff: 
delta: (1,12)=6  (2,1)=6  (2,6)=6  (2,11)=6  (2,12)=6  (2,13)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,16)=6  (6,12)=6  (9,13)=6  (10,3)=6  (12,2)=6  (12,3)=6  (12,7)=6  (13,2)=6  (13,3)=6  (14,2)=6  (14,3)=6  (15,13)=6  (16,10)=6 
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (5,3) with size (3,4) and color pink and mask full
  [01]: a rectangle at (10,9) with size (3,5) and color pink and mask full
diff: 
delta: (1,12)=6  (2,1)=6  (2,6)=6  (2,11)=6  (2,12)=6  (2,13)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,16)=6  (4,4)=6  (6,12)=6  (9,13)=6  (10,3)=6  (12,2)=6  (12,3)=6  (12,7)=6  (13,2)=6  (13,3)=6  (14,2)=6  (14,3)=6  (15,13)=6  (16,10)=6 
! 43 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color grey and layers
  [0]: a rectangle at (5,0) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (7,7) and color black and mask 1011111111111110000011100001110000101111111111101
diff: 
delta:
   (121.5 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (2,1) with size (3,4) and color grey and mask full
diff: 
delta:
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color grey and layers
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (7,7) and color black and mask 1011111111111010000011100001110000101111111111111
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color grey and layers
  [0]: a rectangle at (1,6) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (7,7) and color black and mask 1011111111111010000011100001110000111111111111101
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color grey and layers
  [0]: a rectangle at (5,0) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (7,7) and color black and mask 1011111111111110000011100001110000101111111111101
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (0,9) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 111101111111111101110000011101000001111000000111111111111101101110001111111000111011111011111111111
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST 7f4411dc.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5631.0 bits (5631.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-207] Checking task 7fe24cdd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3103.7 = 3112.7
DL output with Mo: L = 9.0 + 11884.9 = 11893.9
DL input+output M: L = 17.9 + 14988.6 = 15006.6

# learning a model for train pairs
15006.6	
13334.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12479.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11812.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11298.7	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
10963.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10722.5	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 2750.3 = 2776.9
DL output with Mo: L = 92.2 + 7853.4 = 7945.6
DL input+output M: L = 118.8 + 10603.8 = 10722.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (2,1) and color cyan and mask full
diff: 
delta: (0,2)=0  (1,2)=3  (2,0)=0  (2,1)=3  (2,2)=2 
   (118.0 bits)
data: a background with size (6,6) and color grey and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 110100110010110
  [01]: a rectangle at (2,2) with size (2,2) and color red and mask full
  [011]: a rectangle at (0,4) with size (1,2) and color cyan and mask full
  [0111]: a rectangle at (2,0) with size (2,6) and color black and mask full
  [01111]: a rectangle at (0,2) with size (6,2) and color black and mask full
diff: 
delta: (0,0)=8  (1,0)=8  (4,5)=8  (5,0)=8  (5,1)=8  (5,5)=8 
   (281.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (2,1) and color cyan and mask full
diff: 
delta: (0,2)=0  (1,2)=3  (2,0)=0  (2,1)=3  (2,2)=2 
! size mismatch, 10x10 instead of 6x6

TRAIN 7fe24cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,1) and color green and mask full
diff: 
delta: (0,1)=8  (2,0)=8  (2,1)=5#
   (88.6 bits)
data: a background with size (6,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (6,6) and color red and mask 1000011010001111111100010110000100
  [01]: a rectangle at (0,4) with size (1,2) and color green and mask full
  [011]: a rectangle at (5,0) with size (1,2) and color green and mask full
  [0111]: a rectangle at (0,0) with size (2,1) and color green and mask full
  [01111]: a rectangle at (4,5) with size (2,1) and color green and mask full
diff: 
delta: (1,3)=5# (2,1)=5# (3,4)=5# (4,2)=5#
   (258.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,1) and color green and mask full
diff: 
delta: (0,1)=8  (2,0)=8  (2,1)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 7fe24cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
diff: 
delta: (0,1)=3  (2,1)=3 
   (68.4 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
  [01]: a rectangle at (4,3) with size (1,3) and color pink and mask full
  [011]: a rectangle at (0,4) with size (3,1) and color pink and mask full
  [0111]: a rectangle at (3,1) with size (3,1) and color pink and mask full
  [01111]: a rectangle at (1,3) with size (1,3) and color green and mask full
diff: 
delta: (0,1)=3  (2,1)=3  (3,4)=3  (4,0)=3  (4,2)=3  (5,4)=3 
   (246.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,3) and color pink and mask full
diff: 
delta: (0,1)=3  (2,1)=3 
! size mismatch, 10x10 instead of 6x6

TRAIN 7fe24cdd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,1) and color red and mask full
diff: 
delta: (0,1)=5# (0,2)=0  (1,1)=5# (2,0)=3 
! size mismatch, 10x10 instead of 6x6

TEST 7fe24cdd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7853.4 bits (7853.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-206] Checking task 80af3007.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 30279.1 = 30288.1
DL output with Mo: L = 9.0 + 15119.7 = 15128.6
DL input+output M: L = 17.9 + 45398.8 = 45416.7

# learning a model for train pairs
45416.7	
19430.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10436.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9877.8	OUT DEF: size={layer[0].size}
9737.9	OUT DEF: layer[0].color={layer[0].color}
9599.9	IN  DEF: layer[0].color=grey
9554.3	OUT DEF: color=black
9508.7	IN  DEF: color=black
9473.7	OUT DEF: layer[0].pos=(?,?)
9341.8	OUT DEF: layer[0].pos.i=0
9210.0	OUT DEF: layer[0].pos.j=0
9174.9	OUT DEF: layer[0].size=(?,?)
9139.9	IN  DEF: size=(?,?)
8827.4	IN  DEF: size.j=18
8524.8	IN  DEF: size.i=16
8489.7	IN  DEF: layer[0].pos=(?,?)
8454.7	IN  DEF: layer[0].size=(?,?)
8200.2	IN  DEF: layer[0].size.i=9
7945.7	IN  DEF: layer[0].size.j=9

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at (0,0) with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (16,18) and color black and layers
  [0]: a rectangle at (?,?) with size (9,9) and color grey and mask ?

DL input  with Mi: L = 65.0 + 2824.1 = 2889.1
DL output with Mo: L = 40.0 + 5016.7 = 5056.6
DL input+output M: L = 105.0 + 7840.8 = 7945.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,1) with size (9,9) and color grey and mask 111000111111000111111000111000111000000111000000111000111000111111000111111000111
diff: 
delta:
   (94.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color grey and mask 101000101010000010101000101000101000000010000000101000101000101010000010101000101
diff: 
delta:
   (100.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,1) with size (9,9) and color grey and mask 111000111111000111111000111000111000000111000000111000111000111111000111111000111
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 80af3007.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,7) with size (9,9) and color grey and mask 111111000111111000111111111000000111000000111000000000111111000111111000111111
diff: 
delta:
   (94.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color grey and mask 11011100100011011
diff: 
delta: (3,6)=5# (3,7)=5# (4,8)=5# (5,6)=5# (5,7)=5# (6,0)=5# (6,1)=5# (6,3)=5# (6,4)=5# (7,2)=5# (7,5)=5# (8,0)=5# (8,1)=5# (8,3)=5# (8,4)=5#
   (300.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (1,7) with size (9,9) and color grey and mask 111111000111111000111111111000000111000000111000000000111111000111111000111111
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 80af3007.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (4,3) with size (9,9) and color grey and mask 111000111111000111111000111111111000111111000111111000111111111111111111111111111
diff: 
delta:
   (94.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color grey and mask 101000101110000110111000111101101000110110000111111000101101101110110110111111111
diff: 
delta:
   (100.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (4,3) with size (9,9) and color grey and mask 111000111111000111111000111111111000111111000111111000111111111111111111111111111
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 80af3007.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  [0]: a rectangle at (3,7) with size (9,9) and color grey and mask 111000111111000111111000111000111000000111000000111000111111111111111111111111111
diff:   size.j  size.i
delta:
! 34 wrong pixels (generated / expected)

TEST 80af3007.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5016.7 bits (5016.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-205] Checking task 810b9b61.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18118.9 = 18127.8
DL output with Mo: L = 9.0 + 18118.9 = 18127.8
DL input+output M: L = 17.9 + 36237.8 = 36255.7

# learning a model for train pairs
36255.7	
31280.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
26623.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23694.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21084.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19403.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17721.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16498.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 8800.8 = 8860.6
DL output with Mo: L = 76.0 + 7561.5 = 7637.6
DL input+output M: L = 135.8 + 16362.3 = 16498.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,6) with size (4,4) and color blue and mask 1111100110011111
  [01]: a rectangle at (2,2) with size (3,4) and color blue and mask 111110011111
  [011]: a rectangle at (12,10) with size (3,4) and color blue and mask 111110011111
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (10,0)=1  (10,1)=1  (10,2)=1  (11,0)=1  (11,2)=1  (12,0)=1  (12,2)=1  (13,0)=1  (13,1)=1  (13,2)=1  (13,5)=1  (13,6)=1 
   (599.8 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,6) with size (4,4) and color green and mask 1111100110011111
  [01]: a rectangle at (2,2) with size (3,4) and color green and mask 111110011111
  [011]: a rectangle at (12,10) with size (3,4) and color green and mask 111110011111
  [0111]: a rectangle at (10,0) with size (4,3) and color green and mask 111101101111
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
   (454.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,6) with size (4,4) and color blue and mask 1111100110011111
  [01]: a rectangle at (2,2) with size (3,4) and color blue and mask 111110011111
  [011]: a rectangle at (12,10) with size (3,4) and color blue and mask 111110011111
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (10,0)=1  (10,1)=1  (10,2)=1  (11,0)=1  (11,2)=1  (12,0)=1  (12,2)=1  (13,0)=1  (13,1)=1  (13,2)=1  (13,5)=1  (13,6)=1 
! size mismatch, 10x10 instead of 15x15

TRAIN 810b9b61.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (8,9) with size (3,4) and color blue and mask 111110011101
  [01]: a rectangle at (3,4) with size (3,3) and color blue and mask 111101111
  [011]: a rectangle at (3,10) with size (2,1) and color blue and mask full
diff: 
delta: (8,4)=1 
   (154.4 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (8,9) with size (3,4) and color blue and mask 111110011101
  [01]: a rectangle at (3,4) with size (3,3) and color green and mask 111101111
  [011]: a rectangle at (3,10) with size (2,1) and color blue and mask full
  [0111]: a rectangle at (8,4) with size (1,1) and color blue and mask full
diff: 
delta:
   (158.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (8,9) with size (3,4) and color blue and mask 111110011101
  [01]: a rectangle at (3,4) with size (3,3) and color blue and mask 111101111
  [011]: a rectangle at (3,10) with size (2,1) and color blue and mask full
diff: 
delta: (8,4)=1 
! size mismatch, 10x10 instead of 15x15

TRAIN 810b9b61.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,1) with size (3,5) and color blue and mask 111111000111111
  [01]: a rectangle at (6,0) with size (3,2) and color blue and mask 101011
  [011]: a rectangle at (7,4) with size (1,2) and color blue and mask full
diff: 
delta:
   (125.8 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,1) with size (3,5) and color green and mask 111111000111111
  [01]: a rectangle at (6,1) with size (3,1) and color blue and mask full
  [011]: a rectangle at (7,4) with size (1,2) and color blue and mask full
  [0111]: a rectangle at (6,0) with size (1,2) and color blue and mask full
diff: 
delta:
   (143.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,1) with size (3,5) and color blue and mask 111111000111111
  [01]: a rectangle at (6,0) with size (3,2) and color blue and mask 101011
  [011]: a rectangle at (7,4) with size (1,2) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN 810b9b61.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,7) with size (5,5) and color blue and mask 1101110001100011000111111
  [01]: a rectangle at (7,4) with size (4,5) and color blue and mask 11111100011000111111
  [011]: a rectangle at (1,1) with size (3,4) and color blue and mask 111110011111
diff: 
delta: (6,1)=1  (6,2)=1  (8,1)=1  (8,11)=1 
! size mismatch, 10x10 instead of 12x12

TEST 810b9b61.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7561.5 bits (7561.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-204] Checking task 82819916.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10199.5 = 10208.4
DL output with Mo: L = 9.0 + 17691.2 = 17700.2
DL input+output M: L = 17.9 + 27890.7 = 27908.6

# learning a model for train pairs
27908.6	
25929.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23969.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22001.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20186.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
19039.3	OUT DEF: layer[0]={layer[0]}
18303.8	OUT DEF: size={size}
17626.6	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 8202.3 = 8228.9
DL output with Mo: L = 61.8 + 9335.9 = 9397.7
DL input+output M: L = 88.4 + 17538.3 = 17626.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,8) and color green and mask full
diff: 
delta: (1,2)=2  (1,5)=2  (4,0)=8  (4,1)=8  (4,2)=4  (6,0)=1  (6,1)=1  (6,2)=6 
   (193.7 bits)
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,8) and color green and mask full
  [01]: a rectangle at (4,0) with size (1,8) and color cyan and mask full
  [011]: a rectangle at (6,2) with size (1,1) and color pink and mask full
  [0111]: a rectangle at (6,0) with size (1,8) and color blue and mask full
diff: 
delta: (1,2)=2  (1,5)=2  (4,2)=4  (4,5)=4  (6,5)=6 
   (174.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,8) and color green and mask full
diff: 
delta: (1,2)=2  (1,5)=2  (4,0)=8  (4,1)=8  (4,2)=4  (6,0)=1  (6,1)=1  (6,2)=6 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color green and mask full
diff: 
delta: (1,2)=2  (1,3)=3  (1,4)=3  (1,5)=2  (1,6)=3  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=4  (6,0)=1  (6,1)=1  (6,2)=6 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,3) with size (1,2) and color green and mask full
diff: 
delta: (1,0)=3  (1,1)=3  (1,2)=2  (1,5)=2  (1,6)=3  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=4  (6,0)=1  (6,1)=1  (6,2)=6 
! 24 wrong pixels (generated / expected)

TRAIN 82819916.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,6) and color red and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,6)=1  (1,7)=1  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
   (227.9 bits)
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,6) and color red and mask full
  [01]: a rectangle at (3,0) with size (1,6) and color green and mask full
  [011]: a rectangle at (7,0) with size (1,6) and color cyan and mask full
  [0111]: a rectangle at (1,6) with size (1,2) and color blue and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (3,2)=1  (3,4)=1  (3,6)=1  (3,7)=1  (7,2)=2  (7,4)=2  (7,6)=2  (7,7)=2 
   (262.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,6) and color red and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,6)=1  (1,7)=1  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,2) with size (1,6) and color blue and mask full
diff: 
delta: (1,0)=2  (1,1)=2  (1,3)=2  (1,5)=2  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
diff: 
delta: (1,2)=1  (1,3)=2  (1,4)=1  (1,5)=2  (1,6)=1  (1,7)=1  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
! 24 wrong pixels (generated / expected)

TRAIN 82819916.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,8) and color black and layers
  [0]: a rectangle at (1,1) with size (1,6) and color yellow and mask full
diff: 
delta: (1,0)=1  (1,2)=1  (1,5)=1  (1,7)=1  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
   (231.3 bits)
data: a background with size (12,8) and color black and layers
  [0]: a rectangle at (1,1) with size (1,6) and color yellow and mask full
  [01]: a rectangle at (4,1) with size (1,6) and color green and mask full
  [011]: a rectangle at (6,1) with size (1,6) and color red and mask full
  [0111]: a rectangle at (8,1) with size (1,6) and color grey and mask full
diff: 
delta: (1,0)=1  (1,2)=1  (1,5)=1  (1,7)=1  (4,0)=2  (4,2)=2  (4,5)=2  (4,7)=2  (6,0)=8  (6,2)=8  (6,5)=8  (6,7)=8  (8,0)=6  (8,2)=6  (8,5)=6  (8,7)=6 
   (375.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,8) and color black and layers
  [0]: a rectangle at (1,1) with size (1,6) and color yellow and mask full
diff: 
delta: (1,0)=1  (1,2)=1  (1,5)=1  (1,7)=1  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,8) and color black and layers
  [0]: a rectangle at (1,3) with size (1,2) and color yellow and mask full
diff: 
delta: (1,0)=1  (1,1)=4  (1,2)=1  (1,5)=1  (1,6)=4  (1,7)=1  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color blue and mask full
diff: 
delta: (1,1)=4  (1,2)=1  (1,3)=4  (1,4)=4  (1,5)=1  (1,6)=4  (1,7)=1  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 33 wrong pixels (generated / expected)

TRAIN 82819916.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (1,2) with size (1,5) and color yellow and mask full
diff: 
delta: (1,0)=3  (1,1)=3  (1,5)=3  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=2 
   (167.3 bits)
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (1,2) with size (1,5) and color yellow and mask full
  [01]: a rectangle at (4,2) with size (1,3) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,8) and color cyan and mask full
  [0111]: a rectangle at (1,0) with size (1,8) and color green and mask full
diff: 
delta: (1,5)=3  (4,6)=2 
   (120.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (1,2) with size (1,5) and color yellow and mask full
diff: 
delta: (1,0)=3  (1,1)=3  (1,5)=3  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (1,2) with size (1,3) and color yellow and mask full
diff: 
delta: (1,0)=3  (1,1)=3  (1,5)=3  (1,6)=4  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=2 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color green and mask full
diff: 
delta: (1,2)=4  (1,3)=4  (1,4)=4  (1,5)=3  (1,6)=4  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=2 
! 16 wrong pixels (generated / expected)

TRAIN 82819916.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (1,2) with size (1,8) and color blue and mask full
diff: 
delta: (1,0)=2  (1,1)=2  (1,3)=2  (1,5)=2  (1,8)=2  (3,0)=8  (3,1)=8  (3,2)=3  (6,0)=1  (6,1)=1  (6,2)=4  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (1,0) with size (1,9) and color red and mask full
diff: 
delta: (1,2)=1  (1,4)=1  (1,6)=1  (1,7)=1  (1,9)=1  (3,0)=8  (3,1)=8  (3,2)=3  (6,0)=1  (6,1)=1  (6,2)=4  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 47 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
diff: 
delta: (1,2)=1  (1,3)=2  (1,4)=1  (1,5)=2  (1,6)=1  (1,7)=1  (1,8)=2  (1,9)=1  (3,0)=8  (3,1)=8  (3,2)=3  (6,0)=1  (6,1)=1  (6,2)=4  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 50 wrong pixels (generated / expected)

TEST 82819916.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9335.9 bits (9335.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-203] Checking task 83302e8f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 94935.6 = 94944.5
DL output with Mo: L = 9.0 + 194620.4 = 194629.3
DL input+output M: L = 17.9 + 289555.9 = 289573.9

# learning a model for train pairs
289573.9	
207306.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
132267.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
77608.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
58486.7	OUT DEF: layer[0]={layer[0]}
38246.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
37518.9	OUT DEF: size={size}
37284.6	OUT DEF: color=yellow
37146.6	OUT DEF: layer[01].color=green
37008.6	OUT DEF: layer[011].color=green
36937.9	OUT DEF: layer[01].mask=full
36867.3	OUT DEF: layer[011].mask=full
36821.6	IN  DEF: color=black
36786.6	OUT DEF: layer[01].pos=(?,?)
36610.3	OUT DEF: layer[01].pos.j={layer[0].pos.j}
36575.3	OUT DEF: layer[01].size=(?,?)
36540.3	OUT DEF: layer[011].pos=(?,?)
36505.3	OUT DEF: layer[011].size=(?,?)
36470.2	IN  DEF: size=(?,?)
36435.2	IN  DEF: layer[0].pos=(?,?)
36261.6	IN  DEF: layer[0].pos.i=0
36087.9	IN  DEF: layer[0].pos.j=0
36052.9	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color yellow and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,{layer[0].pos.j}) with size (?,?) and color green and mask full
  [011]: a rectangle at (?,?) with size (?,?) and color green and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (0,0) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 44.5 + 19362.9 = 19407.3
DL output with Mo: L = 69.6 + 16575.9 = 16645.6
DL input+output M: L = 114.1 + 35938.8 = 36052.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color cyan and mask
diff: 
delta:
   (628.9 bits)
data: a background with size (24,24) and color yellow and layers
  [0]: a rectangle at (0,0) with size (24,24) and color cyan and mask
  [01]: a rectangle at (20,0) with size (4,24) and color green and mask full
  [011]: a rectangle at (0,0) with size (4,24) and color green and mask full
diff: 
delta: (0,15)=4  (0,16)=4  (0,17)=4  (0,18)=4  (1,15)=4  (1,16)=4  (1,17)=4  (1,18)=4  (2,15)=4  (2,16)=4  (2,17)=4  (2,18)=4  (3,15)=4  (3,16)=4  (3,17)=4  (3,18)=4  (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=3  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,0)=3  (16,1)=3  (16,2)=3  (16,3)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,0)=3  (17,1)=3  (17,2)=3  (17,3)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,0)=3  (18,1)=3  (18,2)=3  (18,3)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
   (1029.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color cyan and mask
diff: 
delta:
! 172 wrong pixels (generated / expected)

TRAIN 83302e8f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
diff: 
delta:
   (896.1 bits)
data: a background with size (29,29) and color yellow and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
  [01]: a rectangle at (0,0) with size (5,29) and color green and mask full
  [011]: a rectangle at (24,6) with size (5,23) and color green and mask full
diff: 
delta: (18,6)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (20,6)=3  (20,7)=3  (20,8)=3  (20,9)=3  (20,10)=3  (21,6)=3  (21,7)=3  (21,8)=3  (21,9)=3  (21,10)=3  (22,6)=3  (22,7)=3  (22,8)=3  (22,9)=3  (22,10)=3 
   (581.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  [0]: a rectangle at (0,0) with size (29,29) and color blue and mask
diff: 
delta:
! 246 wrong pixels (generated / expected)

TRAIN 83302e8f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (0,0) with size (19,19) and color brown and mask 100001000010000000010000100000000000001000010000100000000000001000010000011111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111101111111111000010000100001000000001000010000100000000100001000000000000010000100001000011111111111011111110000100001000000000000010000000000000000001000010000100000000100001000010000
diff: 
delta:
   (411.2 bits)
data: a background with size (19,19) and color yellow and layers
  [0]: a rectangle at (0,0) with size (19,19) and color brown and mask 100001000010000000010000100000000000001000010000100000000000001000010000011111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111101111111111000010000100001000000001000010000100000000100001000000000000010000100001000011111111111011111110000100001000000000000010000000000000000001000010000100000000100001000010000
  [01]: a rectangle at (10,0) with size (4,9) and color green and mask full
  [011]: a rectangle at (0,15) with size (9,4) and color green and mask full
diff: 
delta:
   (46.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (0,0) with size (19,19) and color brown and mask 100001000010000000010000100000000000001000010000100000000000001000010000011111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111101111111111000010000100001000000001000010000100000000100001000000000000010000100001000011111111111011111110000100001000000000000010000000000000000001000010000100000000100001000010000
diff: 
delta:
! 68 wrong pixels (generated / expected)

TRAIN 83302e8f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  [0]: a rectangle at (0,0) with size (26,27) and color grey and mask
diff: 
delta: (26,3)=5# (26,11)=5# (26,19)=5# (26,23)=5#
! 144 wrong pixels (generated / expected)

TEST 83302e8f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 16575.9 bits (16575.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-202] Checking task 834ec97d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1035.3 = 1044.2
DL output with Mo: L = 9.0 + 7031.9 = 7040.9
DL input+output M: L = 17.9 + 8067.2 = 8085.1

# learning a model for train pairs
8085.1	
4164.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3701.0	OUT DEF: size={size}
3581.5	OUT SHAPE at layer[01]: a point at ? with color ?
3463.1	IN  SHAPE at layer[0]: a point at ? with color ?
3323.4	OUT DEF: layer[01].color={layer[0].color}
3277.8	IN  DEF: color=black
3242.7	OUT DEF: layer[0].pos=(?,?)
3135.2	OUT DEF: layer[0].pos.i=0
3100.2	OUT DEF: layer[0].size=(?,?)
3065.2	OUT DEF: layer[01].pos=(?,?)
2954.6	OUT DEF: layer[01].pos.j={layer[0].pos.j}
2849.9	OUT DEF: layer[01].pos.i={layer[0].pos.i + 1}
2814.9	IN  DEF: size=(?,?)
2779.9	IN  DEF: layer[0].pos=(?,?)
2761.4	OUT DEF: layer[0].size.i={size.i}
2552.8	OUT DEF: color=yellow
2336.4	OUT DEF: layer[0].size={size}
2197.2	OUT DEF: layer[0].color={color}
2089.6	OUT DEF: layer[0].pos.j=0

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color yellow and layers
  [0]: a rectangle at (0,0) with size {size} and color {color} and mask ?
  [01]: a point at ({layer[0].pos.i + 1},{layer[0].pos.j}) with color {layer[0].color}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color ?

DL input  with Mi: L = 27.4 + 782.6 = 809.9
DL output with Mo: L = 60.1 + 1219.7 = 1279.7
DL input+output M: L = 87.4 + 2002.2 = 2089.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color red
diff: 
delta:
   (21.4 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 111101101
  [01]: a point at (1,1) with color red
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color red
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 834ec97d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a point at (2,2) with color pink
diff: 
delta:
   (25.9 bits)
data: a background with size (5,5) and color yellow and layers
  [0]: a rectangle at (0,0) with size (5,5) and color black and mask 1111111011010100101001010
  [01]: a point at (3,2) with color pink
diff: 
delta:
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a point at (2,2) with color pink
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 834ec97d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (4,2) with color brown
diff: 
delta:
   (31.0 bits)
data: a background with size (9,9) and color yellow and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 111111111111111111111111111111111011010101010010101010010101010010101010010101010
  [01]: a point at (5,2) with color brown
diff: 
delta:
   (83.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (4,2) with color brown
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 834ec97d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a point at (3,5) with color green
diff: 
delta:
! 25 wrong pixels (generated / expected)

TEST 834ec97d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1219.7 bits (1219.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-201] Checking task 8403a5d5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1208.6 = 1217.6
DL output with Mo: L = 9.0 + 21214.2 = 21223.2
DL input+output M: L = 17.9 + 22422.9 = 22440.8

# learning a model for train pairs
22440.8	
17447.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13577.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9806.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8522.0	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7138.3	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
6559.4	OUT DEF: size={size}
6441.0	IN  SHAPE at layer[0]: a point at ? with color ?
6301.0	OUT DEF: layer[0].color={layer[0].color}
6161.3	OUT DEF: layer[01].color={layer[0].color}
6021.6	OUT DEF: layer[011].color={layer[0].color}
5951.0	OUT DEF: layer[0].mask=full
5880.3	OUT DEF: layer[01].mask=full
5809.6	OUT DEF: layer[011].mask=full
5739.0	OUT DEF: layer[0111].mask=full
5668.3	OUT DEF: layer[01111].mask=full
5622.7	OUT DEF: color=black
5577.1	IN  DEF: color=black
5542.1	OUT DEF: layer[0].pos=(?,?)
5402.4	OUT DEF: layer[0].pos.j={layer[0].pos.j}
5266.0	OUT DEF: layer[0].pos.i=0
5230.9	OUT DEF: layer[0].size=(?,?)
4961.9	OUT DEF: layer[0].size.i={size.i}
4891.3	OUT DEF: layer[0].size.j=1
4856.3	OUT DEF: layer[01].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,{layer[0].pos.j}) with size ({size.i},1) and color {layer[0].color} and mask full
  [01]: a rectangle at (?,?) with size ? and color {layer[0].color} and mask full
  [011]: a rectangle at ? with size ? and color {layer[0].color} and mask full
  [0111]: a rectangle at ? with size ? and color ? and mask full
  [01111]: a rectangle at ? with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 18.1 + 1035.2 = 1053.3
DL output with Mo: L = 98.2 + 3704.7 = 3803.0
DL input+output M: L = 116.3 + 4740.0 = 4856.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,1) with color red
diff: 
delta:
   (34.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (10,1) and color red and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color red and mask full
  [011]: a rectangle at (0,5) with size (10,1) and color red and mask full
  [0111]: a rectangle at (0,7) with size (10,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (10,1) and color red and mask full
diff: 
delta: (0,2)=5# (0,6)=5# (9,4)=5# (9,8)=5#
   (175.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,1) with color red
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,5) with color green
diff: 
delta:
   (34.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,5) with size (10,1) and color green and mask full
  [01]: a rectangle at (0,7) with size (10,1) and color green and mask full
  [011]: a rectangle at (0,9) with size (10,1) and color green and mask full
  [0111]: a rectangle at (0,6) with size (1,1) and color grey and mask full
  [01111]: a rectangle at (9,8) with size (1,1) and color grey and mask full
diff: 
delta:
   (87.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,5) with color green
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,4) with color yellow
diff: 
delta:
   (34.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color yellow and mask full
  [01]: a rectangle at (0,6) with size (10,1) and color yellow and mask full
  [011]: a rectangle at (0,8) with size (10,1) and color yellow and mask full
  [0111]: a rectangle at (0,5) with size (1,1) and color grey and mask full
  [01111]: a rectangle at (0,9) with size (1,1) and color grey and mask full
diff: 
delta: (9,7)=5#
   (107.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,4) with color yellow
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (9,2) with color blue
diff: 
delta:
! 38 wrong pixels (generated / expected)

TEST 8403a5d5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3704.7 bits (3704.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-200] Checking task 846bdb03.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17562.9 = 17571.9
DL output with Mo: L = 9.0 + 15576.9 = 15585.9
DL input+output M: L = 17.9 + 33139.9 = 33157.8

# learning a model for train pairs
33157.8	
28249.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24452.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21251.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19256.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17777.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16277.0	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
15046.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 9320.3 = 9396.3
DL output with Mo: L = 59.8 + 5589.9 = 5649.7
DL input+output M: L = 135.8 + 14910.2 = 15046.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,2) with size (4,3) and color red and mask 100110010011
  [01]: a rectangle at (8,5) with size (4,1) and color red and mask full
  [011]: a rectangle at (3,5) with size (3,3) and color blue and mask 1111001
  [0111]: a rectangle at (8,12) with size (4,1) and color blue and mask full
diff: 
delta: (7,5)=4  (7,12)=4  (12,5)=4  (12,12)=4 
   (239.9 bits)
data: a background with size (6,8) and color yellow and layers
  [0]: a rectangle at (1,0) with size (4,4) and color red and mask 1001110101010111
  [01]: a rectangle at (1,4) with size (4,4) and color blue and mask 1000100111111001
  [011]: a rectangle at (0,1) with size (6,6) and color black and mask full
diff: 
delta:
   (150.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,2) with size (4,3) and color red and mask 100110010011
  [01]: a rectangle at (8,5) with size (4,1) and color red and mask full
  [011]: a rectangle at (3,5) with size (3,3) and color blue and mask 1111001
  [0111]: a rectangle at (8,12) with size (4,1) and color blue and mask full
diff: 
delta: (7,5)=4  (7,12)=4  (12,5)=4  (12,12)=4 
! size mismatch, 10x10 instead of 6x8

TRAIN 846bdb03.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,7) with size (5,3) and color cyan and mask 101111101111101
  [01]: a rectangle at (1,4) with size (4,3) and color green and mask 110010111010
  [011]: a rectangle at (7,1) with size (5,1) and color cyan and mask full
  [0111]: a rectangle at (7,8) with size (5,1) and color green and mask full
diff: 
delta: (6,1)=4  (6,8)=4  (12,1)=4  (12,8)=4 
   (248.7 bits)
data: a background with size (7,8) and color yellow and layers
  [0]: a rectangle at (1,0) with size (5,4) and color cyan and mask 10111111101111111011
  [01]: a rectangle at (1,4) with size (5,4) and color green and mask 10001011101011111010
  [011]: a rectangle at (0,1) with size (7,6) and color black and mask full
diff: 
delta:
   (161.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,7) with size (5,3) and color cyan and mask 101111101111101
  [01]: a rectangle at (1,4) with size (4,3) and color green and mask 110010111010
  [011]: a rectangle at (7,1) with size (5,1) and color cyan and mask full
  [0111]: a rectangle at (7,8) with size (5,1) and color green and mask full
diff: 
delta: (6,1)=4  (6,8)=4  (12,1)=4  (12,8)=4 
! size mismatch, 10x10 instead of 7x8

TRAIN 846bdb03.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,3) with size (2,2) and color blue and mask 1011
  [01]: a rectangle at (9,5) with size (2,2) and color red and mask 1101
  [011]: a rectangle at (2,2) with size (2,1) and color red and mask full
  [0111]: a rectangle at (2,7) with size (2,1) and color blue and mask full
diff: 
delta: (1,2)=4  (1,7)=4  (4,2)=4  (4,7)=4 
   (217.4 bits)
data: a background with size (4,6) and color yellow and layers
  [0]: a rectangle at (1,0) with size (2,3) and color red and mask 111101
  [01]: a rectangle at (1,3) with size (2,3) and color blue and mask 101111
  [011]: a rectangle at (0,1) with size (4,4) and color black and mask full
diff: 
delta:
   (117.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,3) with size (2,2) and color blue and mask 1011
  [01]: a rectangle at (9,5) with size (2,2) and color red and mask 1101
  [011]: a rectangle at (2,2) with size (2,1) and color red and mask full
  [0111]: a rectangle at (2,7) with size (2,1) and color blue and mask full
diff: 
delta: (1,2)=4  (1,7)=4  (4,2)=4  (4,7)=4 
! size mismatch, 10x10 instead of 4x6

TRAIN 846bdb03.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,5) with size (3,2) and color orange and mask 101111
  [01]: a rectangle at (9,7) with size (3,2) and color green and mask 101110
  [011]: a rectangle at (2,5) with size (3,1) and color orange and mask full
  [0111]: a rectangle at (2,10) with size (3,1) and color green and mask full
diff: 
delta: (1,5)=4  (1,10)=4  (5,5)=4  (5,10)=4 
   (226.1 bits)
data: a background with size (5,6) and color yellow and layers
  [0]: a rectangle at (1,0) with size (3,3) and color orange and mask 101111111
  [01]: a rectangle at (1,3) with size (3,3) and color green and mask 110111110
  [011]: a rectangle at (0,1) with size (5,4) and color black and mask full
diff: 
delta:
   (128.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,5) with size (3,2) and color orange and mask 101111
  [01]: a rectangle at (9,7) with size (3,2) and color green and mask 101110
  [011]: a rectangle at (2,5) with size (3,1) and color orange and mask full
  [0111]: a rectangle at (2,10) with size (3,1) and color green and mask full
diff: 
delta: (1,5)=4  (1,10)=4  (5,5)=4  (5,10)=4 
! size mismatch, 10x10 instead of 5x6

TRAIN 846bdb03.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,1) with size (4,3) and color cyan and mask 1001111101
  [01]: a rectangle at (9,4) with size (4,3) and color red and mask 110010111001
  [011]: a rectangle at (2,1) with size (4,1) and color red and mask full
  [0111]: a rectangle at (2,8) with size (4,1) and color cyan and mask full
diff: 
delta: (1,1)=4  (1,8)=4  (6,1)=4  (6,8)=4 
! size mismatch, 10x10 instead of 6x8

TEST 846bdb03.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5589.9 bits (5589.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-199] Checking task 855e0971.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 90508.4 = 90517.4
DL output with Mo: L = 9.0 + 96703.6 = 96712.5
DL input+output M: L = 17.9 + 187212.0 = 187229.9

# learning a model for train pairs
187229.9	
127872.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
72493.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
46802.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21876.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18691.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17833.3	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 6190.1 = 6233.5
DL output with Mo: L = 59.6 + 11540.2 = 11599.8
DL input+output M: L = 103.0 + 17730.4 = 17833.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,19) and color yellow and layers
  [0]: a rectangle at (9,0) with size (6,19) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,19) and color grey and mask full
diff: 
delta: (3,13)=0  (5,4)=0  (12,9)=0 
   (165.8 bits)
data: a background with size (15,19) and color yellow and layers
  [0]: a rectangle at (9,0) with size (6,19) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,19) and color grey and mask full
  [011]: a rectangle at (2,4) with size (7,1) and color black and mask full
diff: 
delta: (2,13)=0  (3,13)=0  (4,13)=0  (5,13)=0  (6,13)=0  (7,13)=0  (8,13)=0  (9,9)=0  (10,9)=0  (11,9)=0  (12,9)=0  (13,9)=0  (14,9)=0 
   (368.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color yellow and layers
  [0]: a rectangle at (9,0) with size (6,19) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,19) and color grey and mask full
diff: 
delta: (3,13)=0  (5,4)=0  (12,9)=0 
! 265 wrong pixels (generated / expected)

TRAIN 855e0971.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,13) and color blue and layers
  [0]: a rectangle at (0,0) with size (14,5) and color red and mask full
  [01]: a rectangle at (11,8) with size (1,1) and color black and mask full
diff: 
delta: (3,2)=0 
   (110.5 bits)
data: a background with size (14,13) and color blue and layers
  [0]: a rectangle at (11,5) with size (1,8) and color black and mask full
  [01]: a rectangle at (3,0) with size (1,5) and color black and mask full
  [011]: a rectangle at (0,0) with size (14,5) and color red and mask full
diff: 
delta:
   (104.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color blue and layers
  [0]: a rectangle at (0,0) with size (14,5) and color red and mask full
  [01]: a rectangle at (11,8) with size (1,1) and color black and mask full
diff: 
delta: (3,2)=0 
! 169 wrong pixels (generated / expected)

TRAIN 855e0971.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,15) and color cyan and layers
  [0]: a rectangle at (5,0) with size (5,15) and color red and mask full
  [01]: a rectangle at (10,0) with size (3,15) and color green and mask full
diff: 
delta: (2,3)=0  (3,11)=0  (7,5)=0  (11,7)=0 
   (180.4 bits)
data: a background with size (13,15) and color cyan and layers
  [0]: a rectangle at (5,0) with size (5,15) and color red and mask full
  [01]: a rectangle at (10,0) with size (3,15) and color green and mask full
  [011]: a rectangle at (0,3) with size (5,1) and color black and mask full
diff: 
delta: (0,11)=0  (1,11)=0  (2,11)=0  (3,11)=0  (4,11)=0  (5,5)=0  (6,5)=0  (7,5)=0  (8,5)=0  (9,5)=0  (10,7)=0  (11,7)=0  (12,7)=0 
   (358.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color cyan and layers
  [0]: a rectangle at (5,0) with size (5,15) and color red and mask full
  [01]: a rectangle at (10,0) with size (3,15) and color green and mask full
diff: 
delta: (2,3)=0  (3,11)=0  (7,5)=0  (11,7)=0 
! 177 wrong pixels (generated / expected)

TRAIN 855e0971.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,15) and color yellow and layers
  [0]: a rectangle at (0,4) with size (14,5) and color grey and mask full
  [01]: a rectangle at (0,0) with size (14,4) and color red and mask full
diff: 
delta: (2,12)=0  (6,6)=0  (12,10)=0 
   (162.4 bits)
data: a background with size (14,15) and color yellow and layers
  [0]: a rectangle at (0,4) with size (14,5) and color grey and mask full
  [01]: a rectangle at (0,0) with size (14,4) and color red and mask full
  [011]: a rectangle at (2,9) with size (1,6) and color black and mask full
diff: 
delta: (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (12,9)=0  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0 
   (323.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color yellow and layers
  [0]: a rectangle at (0,4) with size (14,5) and color grey and mask full
  [01]: a rectangle at (0,0) with size (14,4) and color red and mask full
diff: 
delta: (2,12)=0  (6,6)=0  (12,10)=0 
! 193 wrong pixels (generated / expected)

TRAIN 855e0971.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color yellow and layers
  [0]: a rectangle at (4,0) with size (4,15) and color blue and mask full
  [01]: a rectangle at (13,0) with size (4,15) and color red and mask full
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=0  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 234 wrong pixels (generated / expected)

TEST 855e0971.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 11540.2 bits (11540.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-198] Checking task 85c4e7cd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 39517.9 = 39526.8
DL output with Mo: L = 9.0 + 39517.9 = 39526.8
DL input+output M: L = 17.9 + 79035.7 = 79053.6

# learning a model for train pairs
79053.6	
65230.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
51407.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
40313.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
29219.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
28480.8	OUT DEF: size={size}
27747.4	OUT DEF: layer[0].mask={layer[0].mask}
22613.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
21767.9	OUT DEF: layer[011].size={layer[01].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask {layer[0].mask}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size {layer[01].size} and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 14566.3 = 14609.7
DL output with Mo: L = 59.6 + 7098.6 = 7158.2
DL input+output M: L = 103.0 + 21664.9 = 21767.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color yellow and layers
  [0]: a rectangle at (2,2) with size (8,8) and color blue and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (1,1) with size (10,10) and color red and mask full
diff: 
delta: (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (4,3)=3  (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=3  (5,3)=3  (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (5,8)=3  (6,3)=3  (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (6,8)=3  (7,3)=3  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3 
   (827.8 bits)
data: a background with size (12,12) and color cyan and layers
  [0]: a rectangle at (2,2) with size (8,8) and color green and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (3,3) with size (6,6) and color blue and mask full
  [011]: a rectangle at (1,1) with size (10,10) and color grey and mask full
diff: 
delta: (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=2  (5,4)=2  (5,5)=4  (5,6)=4  (5,7)=2  (6,4)=2  (6,5)=4  (6,6)=4  (6,7)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2 
   (392.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color yellow and layers
  [0]: a rectangle at (2,2) with size (8,8) and color blue and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (1,1) with size (10,10) and color red and mask full
diff: 
delta: (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (4,3)=3  (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=3  (5,3)=3  (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (5,8)=3  (6,3)=3  (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (6,8)=3  (7,3)=3  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3 
! 144 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color yellow and layers
  [0]: a rectangle at (1,1) with size (10,10) and color red and mask 1111111111100000000110000000011000000001100000000110000000011000000001100000000110000000011111111111
  [01]: a rectangle at (2,2) with size (8,8) and color blue and mask 1111111110000001100000011000000110000001100000011000000111111111
diff: 
delta: (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (4,3)=3  (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=3  (5,3)=3  (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (5,8)=3  (6,3)=3  (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (6,8)=3  (7,3)=3  (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3 
! 144 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color blue and mask full
diff: 
delta:
   (80.4 bits)
data: a background with size (6,6) and color pink and layers
  [0]: a rectangle at (1,1) with size (1,4) and color blue and mask full
  [01]: a rectangle at (2,2) with size (2,2) and color red and mask full
  [011]: a rectangle at (1,1) with size (4,4) and color blue and mask full
diff: 
delta:
   (73.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color blue and mask full
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color red and layers
  [0]: a rectangle at (1,1) with size (4,4) and color blue and mask 1111100110011111
  [01]: a rectangle at (2,2) with size (2,2) and color pink and mask full
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color cyan and layers
  [0]: a rectangle at (2,2) with size (4,4) and color red and mask full
  [01]: a rectangle at (1,1) with size (6,6) and color blue and mask full
diff: 
delta: (3,3)=4  (3,4)=4  (4,3)=4  (4,4)=4 
   (162.4 bits)
data: a background with size (8,8) and color yellow and layers
  [0]: a rectangle at (3,3) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (2,2) with size (4,4) and color blue and mask full
  [011]: a rectangle at (1,1) with size (6,6) and color red and mask full
diff: 
delta:
   (80.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
  [0]: a rectangle at (2,2) with size (4,4) and color red and mask full
  [01]: a rectangle at (1,1) with size (6,6) and color blue and mask full
diff: 
delta: (3,3)=4  (3,4)=4  (4,3)=4  (4,4)=4 
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color cyan and layers
  [0]: a rectangle at (1,1) with size (6,6) and color blue and mask 111111100001100001100001100001111111
  [01]: a rectangle at (2,2) with size (4,4) and color red and mask full
diff: 
delta: (3,3)=4  (3,4)=4  (4,3)=4  (4,4)=4 
! 64 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color orange and layers
  [0]: a rectangle at (2,2) with size (6,6) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (8,8) and color red and mask full
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=1  (5,3)=1  (5,4)=3  (5,5)=3  (5,6)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
   (386.0 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (3,3) with size (4,4) and color red and mask full
  [01]: a rectangle at (2,2) with size (6,6) and color yellow and mask full
  [011]: a rectangle at (1,1) with size (8,8) and color blue and mask full
diff: 
delta: (4,4)=7# (4,5)=7# (5,4)=7# (5,5)=7#
   (163.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color orange and layers
  [0]: a rectangle at (2,2) with size (6,6) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (8,8) and color red and mask full
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=1  (5,3)=1  (5,4)=3  (5,5)=3  (5,6)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
! 100 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color orange and layers
  [0]: a rectangle at (1,1) with size (8,8) and color red and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (2,2) with size (6,6) and color yellow and mask full
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=1  (4,3)=1  (4,4)=3  (4,5)=3  (4,6)=1  (5,3)=1  (5,4)=3  (5,5)=3  (5,6)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
! 100 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color cyan and layers
  [0]: a rectangle at (2,2) with size (10,10) and color yellow and mask 1111111111100000000110000000011000000001100000000110000000011000000001100000000110000000011111111111
  [01]: a rectangle at (1,1) with size (12,12) and color red and mask full
diff: 
delta: (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (4,3)=3  (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7# (4,8)=7# (4,9)=7# (4,10)=3  (5,3)=3  (5,4)=7# (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=3  (6,3)=3  (6,4)=7# (6,5)=6  (6,6)=5# (6,7)=5# (6,8)=6  (6,9)=7# (6,10)=3  (7,3)=3  (7,4)=7# (7,5)=6  (7,6)=5# (7,7)=5# (7,8)=6  (7,9)=7# (7,10)=3  (8,3)=3  (8,4)=7# (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=7# (8,10)=3  (9,3)=3  (9,4)=7# (9,5)=7# (9,6)=7# (9,7)=7# (9,8)=7# (9,9)=7# (9,10)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3 
! 196 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color cyan and layers
  [0]: a rectangle at (1,1) with size (12,12) and color red and mask 111111111111100000000001100000000001100000000001100000000001100000000001100000000001100000000001100000000001100000000001100000000001111111111111
  [01]: a rectangle at (2,2) with size (10,10) and color yellow and mask 1111111111100000000110000000011000000001100000000110000000011000000001100000000110000000011111111111
diff: 
delta: (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (4,3)=3  (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7# (4,8)=7# (4,9)=7# (4,10)=3  (5,3)=3  (5,4)=7# (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=3  (6,3)=3  (6,4)=7# (6,5)=6  (6,6)=5# (6,7)=5# (6,8)=6  (6,9)=7# (6,10)=3  (7,3)=3  (7,4)=7# (7,5)=6  (7,6)=5# (7,7)=5# (7,8)=6  (7,9)=7# (7,10)=3  (8,3)=3  (8,4)=7# (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=7# (8,10)=3  (9,3)=3  (9,4)=7# (9,5)=7# (9,6)=7# (9,7)=7# (9,8)=7# (9,9)=7# (9,10)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3 
! 196 wrong pixels (generated / expected)

TEST 85c4e7cd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7098.6 bits (7098.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-197] Checking task 868de0fa.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 47150.8 = 47159.8
DL output with Mo: L = 9.0 + 80470.6 = 80479.6
DL input+output M: L = 17.9 + 127621.5 = 127639.4

# learning a model for train pairs
127639.4	
104657.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
83945.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
68457.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
58889.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 26421.5 = 26448.1
DL output with Mo: L = 59.8 + 32382.0 = 32441.8
DL input+output M: L = 86.4 + 58803.6 = 58889.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (1,0)=1  (1,3)=1  (2,0)=1  (2,3)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,6)=1  (3,8)=1  (4,6)=1  (4,7)=1  (4,8)=1 
   (438.8 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (5,0) with size (5,5) and color blue and mask 1111110001100011000111111
  [01]: a rectangle at (6,1) with size (3,3) and color orange and mask full
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111111111111111111111111110001111111000110000100011000011111100001111110000
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,7)=7#
   (344.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (5,5) and color blue and mask 1111110001100011000111111
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (1,0)=1  (1,3)=1  (2,0)=1  (2,3)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,6)=1  (3,8)=1  (4,6)=1  (4,7)=1  (4,8)=1 
! 50 wrong pixels (generated / expected)

TRAIN 868de0fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111111111111111000000111101111011110111101111011110100001111010100000001000
diff: 
delta:
   (164.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,5) with size (4,4) and color red and mask full
  [01]: a rectangle at (0,4) with size (6,6) and color blue and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask full
diff: 
delta: (1,1)=7#
   (135.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111111111111111000000111101111011110111101111011110100001111010100000001000
diff: 
delta:
! 45 wrong pixels (generated / expected)

TRAIN 868de0fa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (12,12) with size (8,8) and color blue and mask 1111111110000001100000011000000110000001100000011000000111111111
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,4)=1  (2,6)=1  (2,9)=1  (3,0)=1  (3,4)=1  (3,6)=1  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,17)=1  (5,12)=1  (5,17)=1  (6,12)=1  (6,17)=1  (7,12)=1  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (10,2)=1  (10,8)=1  (11,2)=1  (11,8)=1  (12,2)=1  (12,8)=1  (13,2)=1  (13,8)=1  (14,2)=1  (14,8)=1  (15,2)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1 
   (1548.1 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (13,13) with size (6,6) and color red and mask full
  [01]: a rectangle at (12,12) with size (8,8) and color blue and mask full
  [011]: a rectangle at (10,3) with size (5,5) and color orange and mask full
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,1)=7# (1,2)=7# (1,3)=7# (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,1)=7# (2,2)=7# (2,3)=7# (2,4)=1  (2,6)=1  (2,7)=2  (2,8)=2  (2,9)=1  (3,0)=1  (3,1)=7# (3,2)=7# (3,3)=7# (3,4)=1  (3,6)=1  (3,7)=2  (3,8)=2  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,13)=2  (4,14)=2  (4,15)=2  (4,16)=2  (4,17)=1  (5,12)=1  (5,13)=2  (5,14)=2  (5,15)=2  (5,16)=2  (5,17)=1  (6,12)=1  (6,13)=2  (6,14)=2  (6,15)=2  (6,16)=2  (6,17)=1  (7,12)=1  (7,13)=2  (7,14)=2  (7,15)=2  (7,16)=2  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (10,2)=1  (10,8)=1  (11,2)=1  (11,8)=1  (12,2)=1  (12,8)=1  (13,2)=1  (13,8)=1  (14,2)=1  (14,8)=1  (15,2)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1 
   (2123.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (12,12) with size (8,8) and color blue and mask 1111111110000001100000011000000110000001100000011000000111111111
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (1,0)=1  (1,4)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,4)=1  (2,6)=1  (2,9)=1  (3,0)=1  (3,4)=1  (3,6)=1  (3,9)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,0)=1  (4,1)=1  (4,2)=1  (4,3)=1  (4,4)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (4,12)=1  (4,17)=1  (5,12)=1  (5,17)=1  (6,12)=1  (6,17)=1  (7,12)=1  (7,17)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (10,2)=1  (10,8)=1  (11,2)=1  (11,8)=1  (12,2)=1  (12,8)=1  (13,2)=1  (13,8)=1  (14,2)=1  (14,8)=1  (15,2)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 868de0fa.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,0) with size (9,9) and color blue and mask 11111000010001000010001000010001000011111111100000100100000100101110111101010
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1 
   (196.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,0) with size (9,9) and color blue and mask 11111000010001000010001000010001000011111111100000100100000100101110111101010
  [01]: a rectangle at (7,1) with size (3,3) and color orange and mask full
  [011]: a rectangle at (3,6) with size (2,2) and color red and mask full
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1  (2,2)=7#
   (272.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,0) with size (9,9) and color blue and mask 11111000010001000010001000010001000011111111100000100100000100101110111101010
diff: 
delta: (1,1)=1  (1,2)=1  (1,3)=1 
! size mismatch, 10x10 instead of 11x11

TRAIN 868de0fa.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (0,0) with size (15,15) and color black and mask 111000000111111111011110111111111011110111111111011110111111111011110111111111000000111111111111111111111111111100000001111111101111101111111101111101111111101111101111111101111101111111101111101111111100000001111111111111111
diff: 
delta:
   (294.9 bits)
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (2,2) with size (5,5) and color orange and mask full
  [01]: a rectangle at (10,7) with size (4,4) and color red and mask full
  [011]: a rectangle at (0,0) with size (15,15) and color black and mask 111000000111111111011110111111111011110111111111011110111111111011110111111111000000111111111111111111111111111100000001111111101111101111111101111101111111101111101111111101111101111111101111101111111100000001111111111111111
diff: 
delta:
   (361.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (0,0) with size (15,15) and color black and mask 111000000111111111011110111111111011110111111111011110111111111011110111111111000000111111111111111111111111111100000001111111101111101111111101111101111111101111101111111101111101111111101111101111111100000001111111111111111
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 868de0fa.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (7,10) with size (10,10) and color blue and mask 1111111111100000000110000000011000000001100000000110000000011000000001100000000110000000011111111111
diff: 
delta: (0,12)=1  (0,13)=1  (0,14)=1  (0,15)=1  (0,16)=1  (1,12)=1  (1,16)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,12)=1  (2,16)=1  (3,1)=1  (3,8)=1  (3,12)=1  (3,16)=1  (4,1)=1  (4,8)=1  (4,12)=1  (4,13)=1  (4,14)=1  (4,15)=1  (4,16)=1  (5,1)=1  (5,8)=1  (6,1)=1  (6,8)=1  (7,1)=1  (7,8)=1  (8,1)=1  (8,8)=1  (9,1)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,8)=1  (11,1)=1  (11,2)=1  (11,3)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,7)=1  (12,1)=1  (12,7)=1  (13,1)=1  (13,7)=1  (14,1)=1  (14,7)=1  (15,1)=1  (15,7)=1  (16,1)=1  (16,7)=1  (17,1)=1  (17,2)=1  (17,3)=1  (17,4)=1  (17,5)=1  (17,6)=1  (17,7)=1 
! size mismatch, 10x10 instead of 20x20

TEST 868de0fa.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 32382.0 bits (32382.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-196] Checking task 8731374e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 194690.5 = 194699.5
DL output with Mo: L = 9.0 + 13769.6 = 13778.6
DL input+output M: L = 17.9 + 208460.1 = 208478.1

# learning a model for train pairs
208478.1	
198324.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
196623.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
194698.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
192876.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
191512.3	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 187811.4 = 187887.4
DL output with Mo: L = 26.6 + 3598.3 = 3624.9
DL input+output M: L = 102.6 + 191409.7 = 191512.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,23) and color red and layers
  [0]: a rectangle at (4,7) with size (9,7) and color blue and mask 111111101111110111101011111101011110111111011111100000100
  [01]: a rectangle at (1,17) with size (3,4) and color orange and mask 101111001
  [011]: a rectangle at (12,12) with size (2,4) and color yellow and mask 1101001
  [0111]: a rectangle at (12,3) with size (1,16) and color cyan and mask full
diff: 
delta: (0,0)=6  (0,1)=1  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,2)=1  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,7)=1  (1,8)=1  (1,10)=1  (1,12)=6  (1,13)=6  (1,14)=6  (1,15)=5# (1,16)=8  (1,18)=4  (1,19)=1  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,3)=1  (2,4)=9# (2,5)=8  (2,6)=7# (2,7)=1  (2,9)=3  (2,10)=9# (2,12)=6  (2,14)=1  (2,15)=0  (2,16)=5# (2,20)=8  (2,21)=1  (2,22)=3  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,12)=4  (3,13)=1  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,21)=1  (3,22)=6  (4,0)=1  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,6)=1  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,15)=8  (4,16)=4  (4,17)=6  (4,18)=8  (4,19)=8  (4,20)=9# (4,21)=8  (4,22)=0  (5,1)=9# (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,17)=4  (5,18)=0  (5,19)=1  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,16)=1  (6,17)=3  (6,18)=1  (6,19)=6  (6,20)=3  (6,21)=5# (6,22)=1  (7,0)=0  (7,1)=7# (7,3)=6  (7,4)=5# (7,6)=0  (7,7)=7# (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,20)=1  (7,21)=8  (7,22)=8  (8,1)=4  (8,2)=7# (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,1)=1  (9,2)=3  (9,4)=7# (9,5)=5# (9,7)=8  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,16)=1  (10,17)=7# (10,18)=9# (10,19)=1  (10,21)=9# (10,22)=1  (11,0)=1  (11,1)=1  (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,14)=3  (11,15)=9# (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,4)=5# (12,8)=5# (12,9)=3  (12,13)=7# (12,14)=6  (12,16)=1  (12,17)=1  (12,19)=5# (12,20)=6  (13,0)=1  (13,1)=1  (13,2)=4  (13,3)=7# (13,4)=9# (13,5)=1  (13,6)=5# (13,7)=6  (13,8)=8  (13,10)=3  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,3)=5# (14,4)=1  (14,5)=7# (14,6)=4  (14,7)=8  (14,8)=1  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,14)=1  (14,15)=8  (14,16)=5# (14,17)=3  (14,18)=1  (14,19)=8  (14,20)=0  (14,22)=0  (15,1)=9# (15,3)=7# (15,4)=1  (15,5)=5# (15,8)=8  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,19)=6  (15,20)=1  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,6)=1  (16,7)=3  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,13)=1  (16,14)=0  (16,15)=5# (16,17)=7# (16,18)=1  (16,19)=4  (16,20)=8  (16,21)=4  (16,22)=1 
   (5854.8 bits)
data: a background with size (7,6) and color blue and layers
  [0]: a rectangle at (0,0) with size (7,6) and color red and mask 10010010010111111010010111111010010010010
diff: 
delta:
   (99.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,23) and color red and layers
  [0]: a rectangle at (4,7) with size (9,7) and color blue and mask 111111101111110111101011111101011110111111011111100000100
  [01]: a rectangle at (1,17) with size (3,4) and color orange and mask 101111001
  [011]: a rectangle at (12,12) with size (2,4) and color yellow and mask 1101001
  [0111]: a rectangle at (12,3) with size (1,16) and color cyan and mask full
diff: 
delta: (0,0)=6  (0,1)=1  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,2)=1  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,7)=1  (1,8)=1  (1,10)=1  (1,12)=6  (1,13)=6  (1,14)=6  (1,15)=5# (1,16)=8  (1,18)=4  (1,19)=1  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,3)=1  (2,4)=9# (2,5)=8  (2,6)=7# (2,7)=1  (2,9)=3  (2,10)=9# (2,12)=6  (2,14)=1  (2,15)=0  (2,16)=5# (2,20)=8  (2,21)=1  (2,22)=3  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,12)=4  (3,13)=1  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,21)=1  (3,22)=6  (4,0)=1  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,6)=1  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,15)=8  (4,16)=4  (4,17)=6  (4,18)=8  (4,19)=8  (4,20)=9# (4,21)=8  (4,22)=0  (5,1)=9# (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,17)=4  (5,18)=0  (5,19)=1  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,16)=1  (6,17)=3  (6,18)=1  (6,19)=6  (6,20)=3  (6,21)=5# (6,22)=1  (7,0)=0  (7,1)=7# (7,3)=6  (7,4)=5# (7,6)=0  (7,7)=7# (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,20)=1  (7,21)=8  (7,22)=8  (8,1)=4  (8,2)=7# (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,1)=1  (9,2)=3  (9,4)=7# (9,5)=5# (9,7)=8  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,16)=1  (10,17)=7# (10,18)=9# (10,19)=1  (10,21)=9# (10,22)=1  (11,0)=1  (11,1)=1  (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,14)=3  (11,15)=9# (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,4)=5# (12,8)=5# (12,9)=3  (12,13)=7# (12,14)=6  (12,16)=1  (12,17)=1  (12,19)=5# (12,20)=6  (13,0)=1  (13,1)=1  (13,2)=4  (13,3)=7# (13,4)=9# (13,5)=1  (13,6)=5# (13,7)=6  (13,8)=8  (13,10)=3  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,3)=5# (14,4)=1  (14,5)=7# (14,6)=4  (14,7)=8  (14,8)=1  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,14)=1  (14,15)=8  (14,16)=5# (14,17)=3  (14,18)=1  (14,19)=8  (14,20)=0  (14,22)=0  (15,1)=9# (15,3)=7# (15,4)=1  (15,5)=5# (15,8)=8  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,19)=6  (15,20)=1  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,6)=1  (16,7)=3  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,13)=1  (16,14)=0  (16,15)=5# (16,17)=7# (16,18)=1  (16,19)=4  (16,20)=8  (16,21)=4  (16,22)=1 
! size mismatch, 10x10 instead of 7x6

TRAIN 8731374e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,23) and color pink and layers
  [0]: a rectangle at (4,2) with size (14,13) and color yellow and mask 1000000010000000000010001111111110000111111111001011110111110001111111110000110111111011011111111100001111111110000111111011000011111111100001111111110001000000000001000100001000
  [01]: a rectangle at (1,15) with size (6,3) and color cyan and mask 100010010001001010
  [011]: a rectangle at (4,7) with size (1,12) and color grey and mask full
  [0111]: a rectangle at (7,17) with size (1,6) and color yellow and mask full
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,12)=4  (0,13)=2  (0,14)=9# (0,15)=7# (0,16)=4  (0,17)=4  (0,18)=5# (0,19)=8  (0,21)=7# (1,0)=5# (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,6)=4  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,13)=4  (1,15)=1  (1,17)=7# (1,20)=9# (1,21)=9# (1,22)=0  (2,1)=8  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,19)=4  (2,20)=7# (2,21)=4  (2,22)=4  (3,0)=8  (3,1)=5# (3,2)=7# (3,3)=4  (3,4)=4  (3,5)=4  (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,6)=9# (4,8)=3  (4,11)=9# (4,15)=0  (4,17)=1  (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,1)=4  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (6,0)=5# (6,2)=0  (6,3)=8  (6,13)=0  (6,15)=4  (6,16)=9# (6,18)=2  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,13)=2  (9,15)=1  (9,16)=4  (9,17)=0  (9,18)=4  (9,20)=4  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,18)=4  (10,19)=3  (10,20)=4  (10,21)=3  (10,22)=5# (11,0)=4  (11,3)=3  (11,10)=1  (11,13)=2  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,1)=4  (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,1)=4  (14,2)=5# (14,13)=5# (14,14)=5# (14,15)=9# (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,3)=1  (15,13)=2  (15,14)=3  (15,15)=4  (15,16)=3  (15,17)=7# (15,18)=4  (15,20)=3  (15,21)=7# (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,11)=5# (16,13)=1  (16,15)=4  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,0)=4  (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,20)=4  (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,20)=4  (18,21)=3  (18,22)=9# (19,0)=9# (19,1)=4  (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,7)=4  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,15)=3  (20,16)=4  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,2)=4  (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,15)=4  (21,16)=7# (21,17)=9# (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,13)=4  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,20)=4  (22,21)=4  (22,22)=0  (23,0)=7# (23,3)=4  (23,4)=1  (23,5)=9# (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,16)=4  (23,17)=2  (23,19)=3  (23,20)=4  (23,21)=7# (23,22)=9# (24,0)=4  (24,1)=1  (24,2)=7# (24,5)=7# (24,6)=4  (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,2)=4  (25,3)=4  (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,19)=4  (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,5)=4  (26,6)=2  (26,7)=4  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,13)=1  (26,14)=1  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,21)=4  (26,22)=2 
   (9404.2 bits)
data: a background with size (10,9) and color yellow and layers
  [0]: a rectangle at (0,0) with size (10,9) and color blue and mask 1010100001010100111111111001010100111111111001010100001010100111111111001010100001010100
diff: 
delta:
   (153.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,23) and color pink and layers
  [0]: a rectangle at (4,2) with size (14,13) and color yellow and mask 1000000010000000000010001111111110000111111111001011110111110001111111110000110111111011011111111100001111111110000111111011000011111111100001111111110001000000000001000100001000
  [01]: a rectangle at (1,15) with size (6,3) and color cyan and mask 100010010001001010
  [011]: a rectangle at (4,7) with size (1,12) and color grey and mask full
  [0111]: a rectangle at (7,17) with size (1,6) and color yellow and mask full
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,12)=4  (0,13)=2  (0,14)=9# (0,15)=7# (0,16)=4  (0,17)=4  (0,18)=5# (0,19)=8  (0,21)=7# (1,0)=5# (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,6)=4  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,13)=4  (1,15)=1  (1,17)=7# (1,20)=9# (1,21)=9# (1,22)=0  (2,1)=8  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,19)=4  (2,20)=7# (2,21)=4  (2,22)=4  (3,0)=8  (3,1)=5# (3,2)=7# (3,3)=4  (3,4)=4  (3,5)=4  (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,6)=9# (4,8)=3  (4,11)=9# (4,15)=0  (4,17)=1  (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,1)=4  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (6,0)=5# (6,2)=0  (6,3)=8  (6,13)=0  (6,15)=4  (6,16)=9# (6,18)=2  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,13)=2  (9,15)=1  (9,16)=4  (9,17)=0  (9,18)=4  (9,20)=4  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,18)=4  (10,19)=3  (10,20)=4  (10,21)=3  (10,22)=5# (11,0)=4  (11,3)=3  (11,10)=1  (11,13)=2  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,1)=4  (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,1)=4  (14,2)=5# (14,13)=5# (14,14)=5# (14,15)=9# (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,3)=1  (15,13)=2  (15,14)=3  (15,15)=4  (15,16)=3  (15,17)=7# (15,18)=4  (15,20)=3  (15,21)=7# (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,11)=5# (16,13)=1  (16,15)=4  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,0)=4  (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,20)=4  (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,20)=4  (18,21)=3  (18,22)=9# (19,0)=9# (19,1)=4  (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,7)=4  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,15)=3  (20,16)=4  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,2)=4  (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,15)=4  (21,16)=7# (21,17)=9# (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,13)=4  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,20)=4  (22,21)=4  (22,22)=0  (23,0)=7# (23,3)=4  (23,4)=1  (23,5)=9# (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,16)=4  (23,17)=2  (23,19)=3  (23,20)=4  (23,21)=7# (23,22)=9# (24,0)=4  (24,1)=1  (24,2)=7# (24,5)=7# (24,6)=4  (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,2)=4  (25,3)=4  (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,19)=4  (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,5)=4  (26,6)=2  (26,7)=4  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,13)=1  (26,14)=1  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,21)=4  (26,22)=2 
! size mismatch, 10x10 instead of 10x9

TRAIN 8731374e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color red and layers
  [0]: a rectangle at (0,4) with size (11,10) and color cyan and mask 1000001000101000010100000000001111111100111111110011110111001111111100111111110011111111000000001000000001011
  [01]: a rectangle at (9,7) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (4,2) with size (4,2) and color green and mask 10011101
  [0111]: a rectangle at (9,1) with size (4,3) and color cyan and mask 11010100010
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,4)=7# (1,7)=4  (1,8)=3  (1,9)=3  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,3)=8  (3,4)=3  (3,14)=0  (3,16)=7# (4,0)=8  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,3)=5# (6,4)=6  (6,13)=5# (6,14)=8  (6,15)=5# (6,16)=6  (7,0)=5# (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,7)=0  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,0)=8  (9,1)=7# (9,3)=3  (9,4)=3  (9,6)=0  (9,7)=9# (9,8)=0  (9,11)=9# (9,13)=5# (9,15)=7# (9,16)=3  (10,1)=0  (10,5)=0  (10,9)=3  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,8)=8  (11,11)=3  (11,12)=9# (11,13)=9# (11,15)=0  (11,16)=8  (12,0)=4  (12,3)=5# (12,4)=3  (12,6)=0  (12,7)=1  (12,8)=8  (12,9)=9# (12,10)=3  (12,11)=9# (12,12)=8  (12,13)=1  (12,14)=8  (12,15)=8  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,1)=8  (14,3)=5# (14,4)=4  (14,7)=4  (14,8)=0  (14,9)=9# (14,11)=8  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,0)=8  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,5)=8  (15,6)=4  (15,7)=5# (15,8)=0  (15,10)=5# (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
   (3522.2 bits)
data: a background with size (6,8) and color cyan and layers
  [0]: a rectangle at (0,0) with size (6,8) and color red and mask 10000000100011111111000010000000100000001000
diff: 
delta:
   (106.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color red and layers
  [0]: a rectangle at (0,4) with size (11,10) and color cyan and mask 1000001000101000010100000000001111111100111111110011110111001111111100111111110011111111000000001000000001011
  [01]: a rectangle at (9,7) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (4,2) with size (4,2) and color green and mask 10011101
  [0111]: a rectangle at (9,1) with size (4,3) and color cyan and mask 11010100010
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,4)=7# (1,7)=4  (1,8)=3  (1,9)=3  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,3)=8  (3,4)=3  (3,14)=0  (3,16)=7# (4,0)=8  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,3)=5# (6,4)=6  (6,13)=5# (6,14)=8  (6,15)=5# (6,16)=6  (7,0)=5# (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,7)=0  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,0)=8  (9,1)=7# (9,3)=3  (9,4)=3  (9,6)=0  (9,7)=9# (9,8)=0  (9,11)=9# (9,13)=5# (9,15)=7# (9,16)=3  (10,1)=0  (10,5)=0  (10,9)=3  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,8)=8  (11,11)=3  (11,12)=9# (11,13)=9# (11,15)=0  (11,16)=8  (12,0)=4  (12,3)=5# (12,4)=3  (12,6)=0  (12,7)=1  (12,8)=8  (12,9)=9# (12,10)=3  (12,11)=9# (12,12)=8  (12,13)=1  (12,14)=8  (12,15)=8  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,1)=8  (14,3)=5# (14,4)=4  (14,7)=4  (14,8)=0  (14,9)=9# (14,11)=8  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,0)=8  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,5)=8  (15,6)=4  (15,7)=5# (15,8)=0  (15,10)=5# (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! size mismatch, 10x10 instead of 6x8

TRAIN 8731374e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color orange and layers
  [0]: a rectangle at (1,2) with size (12,10) and color cyan and mask 10100001111111100111111110011111111001111111100111110110111111111011111111100101111110011111111001111111100000000001
  [01]: a rectangle at (12,7) with size (3,3) and color brown and mask 111010101
  [011]: a rectangle at (15,0) with size (4,2) and color blue and mask 1101010
  [0111]: a rectangle at (15,0) with size (1,10) and color pink and mask full
diff: 
delta: (0,0)=2  (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,4)=0  (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,13)=8  (1,14)=5# (1,15)=3  (1,16)=2  (2,0)=8  (2,2)=9# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,13)=8  (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,15)=9# (5,16)=5# (6,0)=8  (6,1)=4  (6,2)=4  (6,13)=1  (6,15)=3  (7,0)=8  (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,12)=4  (8,13)=0  (8,14)=6  (8,16)=6  (9,0)=6  (9,11)=4  (9,13)=1  (9,14)=5# (9,15)=8  (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,11)=4  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,11)=4  (11,12)=8  (11,15)=1  (11,16)=8  (12,0)=6  (12,1)=6  (12,2)=4  (12,4)=6  (12,6)=1  (12,8)=1  (12,10)=2  (12,11)=6  (12,12)=8  (12,14)=2  (12,15)=8  (12,16)=8  (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,9)=6  (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=8  (14,6)=3  (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,2)=9# (15,4)=3  (15,5)=1  (15,8)=8  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,14)=8  (16,0)=2  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,10)=0  (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=2  (16,16)=1  (17,2)=9# (17,3)=4  (17,4)=2  (17,5)=8  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,10)=8  (17,11)=0  (17,12)=8  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,1)=2  (18,2)=5# (18,4)=8  (18,6)=1  (18,7)=6  (18,8)=5# (18,9)=8  (18,10)=0  (18,11)=9# (18,12)=2  (18,13)=8  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 10x10 instead of 10x8

TEST 8731374e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3598.3 bits (3598.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-195] Checking task 88a10436.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4536.5 = 4545.5
DL output with Mo: L = 9.0 + 7315.0 = 7323.9
DL input+output M: L = 17.9 + 11851.5 = 11869.4

# learning a model for train pairs
11869.4	
11193.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10535.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9638.1	OUT DEF: layer[0]={layer[0]}
8971.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8422.4	OUT DEF: size={size}
8131.6	OUT DEF: layer[01].size={layer[0].size}
7855.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7591.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6807.5	OUT DEF: layer[011]={layer[01]}
6530.9	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6272.6	OUT DEF: layer[0111].size={layer[01].size}
6122.9	OUT DEF: layer[01].mask={layer[0].mask}
5983.8	OUT DEF: layer[0111].color={layer[01].color}
5844.9	OUT DEF: layer[01].color={layer[0].color}
5706.9	IN  DEF: layer[01].color=blue
5617.7	IN  SHAPE at layer[010]: a point at ? with color ?
5479.7	IN  DEF: layer[010].color=grey
5409.0	OUT DEF: layer[0111].mask=full
5338.4	IN  DEF: layer[01].mask=full
5292.8	OUT DEF: color=black
5247.2	IN  DEF: color=black
5212.2	OUT DEF: layer[01].pos=(?,?)
5090.3	OUT DEF: layer[01].pos.j={layer[010].pos.j - 1}
5055.3	OUT DEF: layer[0111].pos=(?,?)
4922.1	OUT DEF: layer[0111].pos.i={layer[010].pos.i}
4887.1	IN  DEF: size=(?,?)
4852.1	IN  DEF: layer[0].pos=(?,?)
4817.0	IN  DEF: layer[0].size=(?,?)
4782.0	IN  DEF: layer[010].pos=(?,?)
4747.0	IN  DEF: layer[01].pos=(?,?)
4712.0	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,{layer[010].pos.j - 1}) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [011]: {layer[01]}
  [0111]: a rectangle at ({layer[010].pos.i},?) with size {layer[01].size} and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [010]: a point at (?,?) with color grey
  [01]: a rectangle at (?,?) with size (?,?) and color blue and mask full

DL input  with Mi: L = 80.8 + 2816.9 = 2897.7
DL output with Mo: L = 70.1 + 1744.2 = 1814.3
DL input+output M: L = 150.9 + 4561.1 = 4712.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [010]: a point at (5,5) with color grey
  [01]: a rectangle at (1,1) with size (2,2) and color blue and mask full
diff: 
delta: (2,2)=3 
   (91.8 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [01]: a rectangle at (4,4) with size (2,2) and color red and mask 1110
  [011]: a rectangle at (1,1) with size (2,2) and color blue and mask full
  [0111]: a rectangle at (5,5) with size (2,2) and color blue and mask full
diff: 
delta: (2,2)=3  (6,6)=3 
   (46.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [010]: a point at (5,5) with color grey
  [01]: a rectangle at (1,1) with size (2,2) and color blue and mask full
diff: 
delta: (2,2)=3 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 1110
  [010]: a point at (2,2) with color green
  [01]: a rectangle at (1,1) with size (2,2) and color blue and mask full
diff:   layer[010].color
delta: (5,5)=5#
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [010]: a point at (5,5) with color grey
  [01]: a rectangle at (1,1) with size (2,2) and color blue and mask full
diff: 
delta: (0,1)=2  (2,2)=3 
! 14 wrong pixels (generated / expected)

TRAIN 88a10436.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (2,4) with size (1,3) and color red and mask full
  [010]: a point at (5,1) with color grey
  [01]: a rectangle at (1,4) with size (1,2) and color blue and mask full
diff: 
delta: (0,4)=6 
   (81.8 bits)
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (2,4) with size (1,3) and color red and mask full
  [01]: a rectangle at (6,0) with size (1,3) and color red and mask full
  [011]: a rectangle at (1,4) with size (1,2) and color blue and mask full
  [0111]: a rectangle at (5,0) with size (1,2) and color blue and mask full
diff: 
delta: (0,4)=6  (4,0)=6 
   (45.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (2,4) with size (1,3) and color red and mask full
  [010]: a point at (5,1) with color grey
  [01]: a rectangle at (1,4) with size (1,2) and color blue and mask full
diff: 
delta: (0,4)=6 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (2,4) with size (1,3) and color red and mask full
  [010]: a point at (0,4) with color pink
  [01]: a rectangle at (1,4) with size (1,2) and color blue and mask full
diff:   layer[010].color
delta: (5,1)=5#
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (1,4) with size (1,2) and color blue and mask full
  [010]: a point at (5,1) with color grey
  [01]: a rectangle at (2,4) with size (1,3) and color red and mask full
diff:   layer[01].color
delta: (0,4)=6 
! 10 wrong pixels (generated / expected)

TRAIN 88a10436.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (7,1) with size (2,2) and color green and mask 1110
  [010]: a point at (2,4) with color grey
  [01]: a rectangle at (7,3) with size (2,1) and color blue and mask full
diff: 
delta: (6,1)=2  (6,2)=2 
   (108.1 bits)
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (7,1) with size (2,2) and color green and mask 1110
  [01]: a rectangle at (2,3) with size (2,2) and color green and mask 1110
  [011]: a rectangle at (7,3) with size (2,1) and color blue and mask full
  [0111]: a rectangle at (2,5) with size (2,1) and color blue and mask full
diff: 
delta: (1,3)=2  (1,4)=2  (6,1)=2  (6,2)=2 
   (82.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (7,1) with size (2,2) and color green and mask 1110
  [010]: a point at (2,4) with color grey
  [01]: a rectangle at (7,3) with size (2,1) and color blue and mask full
diff: 
delta: (6,1)=2  (6,2)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (7,1) with size (2,2) and color green and mask 1110
  [010]: a point at (2,4) with color grey
  [01]: a rectangle at (6,1) with size (1,2) and color red and mask full
diff:   layer[01].color
delta: (7,3)=1  (8,3)=1 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (6,1) with size (1,2) and color red and mask full
  [010]: a point at (2,4) with color grey
  [01]: a rectangle at (7,3) with size (2,1) and color blue and mask full
diff: 
delta: (7,2)=3  (8,1)=3  (8,2)=3 
! 14 wrong pixels (generated / expected)

TRAIN 88a10436.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (2,3) with size (1,2) and color red and mask full
  [010]: a point at (8,6) with color grey
  [01]: a rectangle at (3,2) with size (1,2) and color blue and mask full
diff: 
delta: (4,3)=3  (4,4)=3 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (4,3) with size (1,2) and color green and mask full
  [010]: a point at (8,6) with color grey
  [01]: a rectangle at (3,2) with size (1,2) and color blue and mask full
diff: 
delta: (2,3)=2  (2,4)=2 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (2,3) with size (1,2) and color red and mask full
  [010]: a point at (8,6) with color grey
  [01]: a rectangle at (4,3) with size (1,2) and color green and mask full
diff:   layer[01].color
delta: (3,2)=1  (3,3)=1 
! 12 wrong pixels (generated / expected)

TEST 88a10436.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1744.2 bits (1744.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-194] Checking task 88a62173.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5697.6 = 5706.6
DL output with Mo: L = 9.0 + 1126.9 = 1135.9
DL input+output M: L = 17.9 + 6824.5 = 6842.5

# learning a model for train pairs
6842.5	
5588.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5413.1	OUT SHAPE at layer[0]: a point at ? with color ?
5279.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5106.6	OUT DEF: color={layer[0].color}
4968.6	OUT DEF: layer[0].color=black
4897.9	IN  DEF: layer[0].mask=full
4862.9	OUT DEF: size=(?,?)
4734.3	OUT DEF: size.i=2
4605.6	OUT DEF: size.j=2
4570.6	OUT DEF: layer[0].pos=(?,?)
4499.9	OUT DEF: layer[0].pos.j=1
4440.6	OUT DEF: layer[0].pos.i={layer[0].size.i - layer[0].pos.j}
4405.6	IN  DEF: size=(?,?)
4200.3	IN  DEF: size.i=5
3995.0	IN  DEF: size.j=5
3959.9	IN  DEF: layer[0].pos=(?,?)
3924.9	IN  DEF: layer[0].size=(?,?)
3854.3	IN  DEF: layer[0].size.i=1
3819.3	IN  DEF: layer[01].pos=(?,?)
3710.3	IN  DEF: layer[01].pos.j=0
3675.2	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (2,2) and color {layer[0].color} and layers
  [0]: a point at ({layer[0].size.i - layer[0].pos.j},1) with color black
WHERE (Mi)
a background with size (5,5) and color ? and layers
  [0]: a rectangle at (?,?) with size (1,?) and color ? and mask full
  [01]: a rectangle at (?,0) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 72.2 + 3410.9 = 3483.1
DL output with Mo: L = 42.8 + 149.3 = 192.1
DL input+output M: L = 115.0 + 3560.2 = 3675.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,0) with size (1,5) and color red and mask full
  [01]: a rectangle at (3,0) with size (2,2) and color red and mask 1110
diff: 
delta: (0,1)=2  (0,4)=2  (1,2)=0  (3,3)=2  (3,4)=2  (4,3)=2 
   (142.7 bits)
data: a background with size (2,2) and color red and layers
  [0]: a point at (1,1) with color black
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,0) with size (1,5) and color red and mask full
  [01]: a rectangle at (3,0) with size (2,2) and color red and mask 1110
diff: 
delta: (0,1)=2  (0,4)=2  (1,2)=0  (3,3)=2  (3,4)=2  (4,3)=2 
correct output grid

TRAIN 88a62173.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color black and mask 110010110111110111110110
diff: 
delta:
   (71.8 bits)
data: a background with size (2,2) and color blue and layers
  [0]: a point at (0,1) with color black
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (0,0) with size (1,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color black and mask 110010110111110110110111
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (0,3) with size (1,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color black and mask 110010110111110110111110
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color black and mask 110010110111110111110110
diff: 
delta:
correct output grid

TRAIN 88a62173.json/2: 1 3rd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (1,5) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color cyan and mask 111
diff: 
delta: (0,4)=8  (1,3)=8  (3,2)=0  (4,0)=8  (4,3)=8 
   (126.7 bits)
data: a background with size (2,2) and color cyan and layers
  [0]: a point at (1,1) with color black
diff: 
delta: (0,0)=0 
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (1,5) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color cyan and mask 111
diff: 
delta: (0,4)=8  (1,3)=8  (3,2)=0  (4,0)=8  (4,3)=8 
! 1 wrong pixels (generated / expected)

TRAIN 88a62173.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (1,5) and color grey and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color grey and mask 1011
diff: 
delta: (0,3)=5# (1,4)=5# (3,2)=0  (4,1)=5# (4,4)=5#
! 3 wrong pixels (generated / expected)

TEST 88a62173.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 149.3 bits (149.3 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.44
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-193] Checking task 890034e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 138378.2 = 138387.2
DL output with Mo: L = 9.0 + 142521.4 = 142530.4
DL input+output M: L = 17.9 + 280899.7 = 280917.6

# learning a model for train pairs
280917.6	
250068.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
220769.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
202413.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
184883.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 89139.2 = 89182.5
DL output with Mo: L = 43.4 + 95658.0 = 95701.4
DL input+output M: L = 86.7 + 184797.2 = 184883.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color blue and mask 1001101111001001001000000111000010100011110010111111011010011011001110111111111001010101111001100001011101111011001101111000101011011001000111111011010100110010111011111001011111110011001101111011101011010111101101101111001111100101001111011001111010100101111100011100111001101111011001100010000011001010000101100111011111010000100001011010110010000011111101011111110000111110011110111110000001001111101111000101110011111111101010111101100
  [01]: a rectangle at (2,6) with size (5,4) and color red and mask 11111001100110011111
diff: 
delta: (0,1)=8  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,4)=8  (16,7)=8  (17,1)=8  (17,2)=8  (18,2)=8  (19,4)=8  (19,16)=8  (20,17)=8  (20,19)=8 
   (1402.5 bits)
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color blue and mask 1001101111001001001000000111000010100011110010111111011010011011001110000111111001010101110000100001011101111010000101111000101011010000000111111011010100000010111011111001011111110011001101111011101011010111101101101111001111100101001111011001111010100101111100011100111001101111011001100010000011001010000101100111011111010000100001011010110010000011111101011111110000111110011110111110000001001111101111000101110011111111101010111101100
  [01]: a rectangle at (2,6) with size (5,4) and color red and mask 11111001100110011111
diff: 
delta: (0,1)=8  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=8  (13,20)=8  (14,8)=8  (14,9)=2  (14,12)=2  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,9)=2  (15,12)=2  (16,4)=8  (16,7)=8  (16,9)=2  (16,12)=2  (17,1)=8  (17,2)=8  (17,9)=2  (17,10)=2  (17,11)=2  (17,12)=2  (18,2)=8  (19,4)=8  (19,16)=8  (20,17)=8  (20,19)=8 
   (1679.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color blue and mask 1001101111001001001000000111000010100011110010111111011010011011001110111111111001010101111001100001011101111011001101111000101011011001000111111011010100110010111011111001011111110011001101111011101011010111101101101111001111100101001111011001111010100101111100011100111001101111011001100010000011001010000101100111011111010000100001011010110010000011111101011111110000111110011110111110000001001111101111000101110011111111101010111101100
  [01]: a rectangle at (2,6) with size (5,4) and color red and mask 11111001100110011111
diff: 
delta: (0,1)=8  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,4)=8  (16,7)=8  (17,1)=8  (17,2)=8  (18,2)=8  (19,4)=8  (19,16)=8  (20,17)=8  (20,19)=8 
! size mismatch, 10x10 instead of 21x21

TRAIN 890034e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (9,7) with size (12,9) and color green and mask 10001010110010001001110011100001010000010100000001001111001000110010100010110110100000010000110100000001001
  [01]: a rectangle at (0,11) with size (10,10) and color green and mask 1100000000001101000011101001111100001000101011110000010100001101000010010010110110011001000000100100
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,9)=3  (0,10)=3  (0,11)=4  (0,15)=4  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,18)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=4  (2,5)=3  (2,7)=3  (2,10)=4  (2,15)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,18)=4  (4,0)=3  (4,1)=3  (4,3)=4  (4,4)=3  (4,5)=3  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (5,1)=3  (5,4)=3  (5,7)=3  (5,9)=3  (5,17)=4  (6,1)=3  (6,4)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,1)=3  (7,2)=3  (7,3)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,14)=4  (8,0)=4  (8,2)=4  (8,3)=3  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (9,2)=4  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
   (3973.7 bits)
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (9,7) with size (12,9) and color green and mask 10001010110010001001110011100001010000010100000001001111001000110010100010110110100000010000000100000001001
  [01]: a rectangle at (0,0) with size (9,9) and color green and mask 101000010001110010010010010010010000110011111010000010101000001110011011110101
diff: 
delta: (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,5)=4  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,5)=4  (7,6)=4  (7,8)=4  (7,9)=3  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,4)=4  (8,6)=4  (8,7)=4  (8,10)=4  (8,11)=8  (8,15)=8  (8,17)=3  (8,18)=3  (9,2)=4  (9,8)=4  (9,9)=4  (9,11)=8  (9,15)=8  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
   (4131.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (9,7) with size (12,9) and color green and mask 10001010110010001001110011100001010000010100000001001111001000110010100010110110100000010000110100000001001
  [01]: a rectangle at (0,11) with size (10,10) and color green and mask 1100000000001101000011101001111100001000101011110000010100001101000010010010110110011001000000100100
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,9)=3  (0,10)=3  (0,11)=4  (0,15)=4  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,18)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=4  (2,5)=3  (2,7)=3  (2,10)=4  (2,15)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,18)=4  (4,0)=3  (4,1)=3  (4,3)=4  (4,4)=3  (4,5)=3  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (5,1)=3  (5,4)=3  (5,7)=3  (5,9)=3  (5,17)=4  (6,1)=3  (6,4)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,1)=3  (7,2)=3  (7,3)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,14)=4  (8,0)=4  (8,2)=4  (8,3)=3  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (9,2)=4  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
! size mismatch, 10x10 instead of 21x21

TRAIN 890034e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (6,0) with size (13,14) and color red and mask 11010000000011000000101110010000100000111100010001011111001010010111000111001010100011110011010110100001111100010100011001010001011101000010001001010111011011000000101000010000000101
  [01]: a rectangle at (0,7) with size (10,14) and color red and mask 1011000101110110001000100101110010101100011101110001000010011011000000110010110100000011101000000100001111011111001101111111100111111110001
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,4)=4  (6,9)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,10)=3  (8,12)=3  (8,13)=3  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,15)=2  (11,17)=3  (11,20)=2  (12,0)=3  (12,9)=3  (12,14)=3  (12,16)=2  (12,17)=2  (12,18)=2  (12,19)=2  (12,20)=2  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,16)=2  (13,17)=2  (13,18)=3  (13,19)=2  (13,20)=2  (14,5)=3  (14,10)=3  (14,13)=3  (14,15)=2  (14,16)=2  (14,17)=3  (14,18)=2  (14,19)=2  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,15)=2  (15,18)=2  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,16)=2  (16,17)=2  (16,18)=3  (16,19)=2  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,16)=2  (17,19)=2  (17,20)=3  (18,9)=3  (18,11)=3  (18,14)=3  (18,17)=2  (18,18)=2  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
   (3537.7 bits)
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (6,0) with size (13,14) and color red and mask 11000000101110010000100000111100000001011111000010010111000111001010100011110011010110100001111100010100011001010001011101000010001001010111011011000000101000010000000101
  [01]: a rectangle at (0,7) with size (10,14) and color red and mask 1011000101110110001000100101110010101100011101110001000010011011000000110010110100000011101000000100001111011111001101111111100111111110001
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,4)=4  (6,9)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,10)=3  (8,12)=3  (8,13)=3  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,15)=2  (11,17)=3  (11,20)=2  (12,0)=3  (12,9)=3  (12,14)=3  (12,16)=2  (12,17)=2  (12,18)=2  (12,19)=2  (12,20)=2  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,16)=2  (13,17)=2  (13,18)=3  (13,19)=2  (13,20)=2  (14,5)=3  (14,10)=4  (14,11)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (14,16)=2  (14,17)=3  (14,18)=2  (14,19)=2  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=4  (15,15)=4  (15,18)=2  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,10)=4  (16,15)=4  (16,16)=2  (16,17)=2  (16,18)=3  (16,19)=2  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=4  (17,15)=4  (17,16)=2  (17,19)=2  (17,20)=3  (18,9)=3  (18,10)=4  (18,11)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,15)=4  (18,17)=2  (18,18)=2  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
   (3754.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (6,0) with size (13,14) and color red and mask 11010000000011000000101110010000100000111100010001011111001010010111000111001010100011110011010110100001111100010100011001010001011101000010001001010111011011000000101000010000000101
  [01]: a rectangle at (0,7) with size (10,14) and color red and mask 1011000101110110001000100101110010101100011101110001000010011011000000110010110100000011101000000100001111011111001101111111100111111110001
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,4)=4  (6,9)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,10)=3  (8,12)=3  (8,13)=3  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,15)=2  (11,17)=3  (11,20)=2  (12,0)=3  (12,9)=3  (12,14)=3  (12,16)=2  (12,17)=2  (12,18)=2  (12,19)=2  (12,20)=2  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,16)=2  (13,17)=2  (13,18)=3  (13,19)=2  (13,20)=2  (14,5)=3  (14,10)=3  (14,13)=3  (14,15)=2  (14,16)=2  (14,17)=3  (14,18)=2  (14,19)=2  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,15)=2  (15,18)=2  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,16)=2  (16,17)=2  (16,18)=3  (16,19)=2  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,16)=2  (17,19)=2  (17,20)=3  (18,9)=3  (18,11)=3  (18,14)=3  (18,17)=2  (18,18)=2  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
! size mismatch, 10x10 instead of 21x21

TRAIN 890034e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (0,0) with size (21,21) and color blue and mask 111101111110101010111011001111111111100001111001101111000100000111111101010101100001101010111010000100001111011100111001100001011111111101010100000111001001011000100001111110001111111110010011100111110101001110111101111011110101110101101111111110110010010111000011100010101011101000110010100111111011001011011000110000011001011111011001011101001101100110100111100111011111111100110110111011111000111110011101111010100111010111001010011110100
  [01]: a rectangle at (13,1) with size (7,4) and color green and mask 1111100110011001100110011111
diff: 
delta: (0,1)=2  (0,13)=2  (0,20)=2  (1,4)=2  (1,6)=2  (1,18)=2  (2,4)=2  (2,5)=2  (2,18)=2  (3,0)=2  (3,1)=2  (3,15)=2  (4,1)=2  (4,6)=2  (4,7)=2  (4,20)=2  (5,19)=2  (7,3)=2  (7,4)=2  (7,8)=2  (7,9)=2  (7,12)=2  (7,20)=2  (8,7)=2  (12,15)=2  (13,6)=2  (13,8)=2  (14,0)=2  (15,7)=2  (15,13)=2  (16,6)=2  (16,11)=2  (16,15)=2  (18,7)=2  (18,17)=2  (20,3)=2 
! size mismatch, 10x10 instead of 21x21

TEST 890034e9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 95658.0 bits (95658.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-192] Checking task 8a004b2b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15718.1 = 15727.1
DL output with Mo: L = 9.0 + 20140.3 = 20149.3
DL input+output M: L = 17.9 + 35858.4 = 35876.3

# learning a model for train pairs
35876.3	
26218.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23410.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21043.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18725.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16776.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14949.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14202.1	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 7779.1 = 7855.1
DL output with Mo: L = 59.8 + 6287.2 = 6347.0
DL input+output M: L = 135.8 + 14066.3 = 14202.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (13,2) with size (2,5) and color blue and mask 111011011
  [01]: a rectangle at (2,3) with size (2,2) and color green and mask full
  [011]: a rectangle at (2,11) with size (2,2) and color red and mask full
  [0111]: a rectangle at (6,7) with size (2,2) and color blue and mask full
diff: 
delta: (0,2)=4  (0,15)=4  (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
   (273.0 bits)
data: a background with size (9,14) and color black and layers
  [0]: a rectangle at (4,1) with size (4,10) and color blue and mask 11111100001111110011110011111111001111
  [01]: a rectangle at (2,1) with size (2,2) and color green and mask full
  [011]: a rectangle at (2,9) with size (2,2) and color red and mask full
diff: 
delta: (0,0)=4  (0,13)=4  (8,0)=4  (8,13)=4 
   (227.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (13,2) with size (2,5) and color blue and mask 111011011
  [01]: a rectangle at (2,3) with size (2,2) and color green and mask full
  [011]: a rectangle at (2,11) with size (2,2) and color red and mask full
  [0111]: a rectangle at (6,7) with size (2,2) and color blue and mask full
diff: 
delta: (0,2)=4  (0,15)=4  (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 10x10 instead of 9x14

TRAIN 8a004b2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (2,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (13,10) with size (1,1) and color red and mask full
  [0111]: a rectangle at (13,10) with size (2,2) and color green and mask full
diff: 
delta: (1,2)=4  (1,8)=4  (7,2)=4  (7,8)=4  (14,11)=8 
   (237.7 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,3) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (4,4) and color green and mask full
diff: 
delta: (0,0)=4  (0,6)=4  (6,0)=4  (6,6)=4 
   (173.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  [0]: a rectangle at (2,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (4,5) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (13,10) with size (1,1) and color red and mask full
  [0111]: a rectangle at (13,10) with size (2,2) and color green and mask full
diff: 
delta: (1,2)=4  (1,8)=4  (7,2)=4  (7,8)=4  (14,11)=8 
! size mismatch, 10x10 instead of 7x7

TRAIN 8a004b2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color red and mask full
  [01]: a rectangle at (3,10) with size (3,3) and color blue and mask full
  [011]: a rectangle at (6,7) with size (3,3) and color green and mask full
  [0111]: a rectangle at (13,7) with size (2,2) and color blue and mask full
diff: 
delta: (0,3)=4  (0,13)=4  (10,3)=4  (10,13)=4  (13,6)=2  (14,7)=3 
   (267.3 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (3,4) with size (6,6) and color blue and mask 111000111000111000111111111111111111
  [01]: a rectangle at (3,1) with size (3,3) and color red and mask full
  [011]: a rectangle at (6,4) with size (3,3) and color green and mask full
diff: 
delta: (0,0)=4  (0,10)=4  (10,0)=4  (10,10)=4 
   (227.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color red and mask full
  [01]: a rectangle at (3,10) with size (3,3) and color blue and mask full
  [011]: a rectangle at (6,7) with size (3,3) and color green and mask full
  [0111]: a rectangle at (13,7) with size (2,2) and color blue and mask full
diff: 
delta: (0,3)=4  (0,13)=4  (10,3)=4  (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x10 instead of 11x11

TRAIN 8a004b2b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  [0]: a rectangle at (2,4) with size (4,4) and color cyan and mask full
  [01]: a rectangle at (2,12) with size (4,4) and color green and mask full
  [011]: a rectangle at (16,8) with size (2,3) and color blue and mask 10111
  [0111]: a rectangle at (0,0) with size (1,1) and color yellow and mask full
diff: 
delta: (0,17)=4  (13,0)=4  (13,17)=4  (15,8)=8  (15,10)=3 
! size mismatch, 10x10 instead of 14x18

TEST 8a004b2b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6287.2 bits (6287.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-191] Checking task 8be77c9e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2012.7 = 2021.7
DL output with Mo: L = 9.0 + 3731.5 = 3740.5
DL input+output M: L = 17.9 + 5744.2 = 5762.2

# learning a model for train pairs
5762.2	
3835.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3098.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2960.6	IN  DEF: layer[0].color=blue
2915.0	IN  DEF: color=black
2880.0	OUT DEF: size=(?,?)
2659.4	OUT DEF: size.i=6
2494.6	OUT DEF: size.j={size.j}
2459.6	OUT DEF: layer[0].pos=(?,?)
2350.7	OUT DEF: layer[0].pos.i={layer[0].size.i - layer[0].pos.i}
2263.5	OUT DEF: layer[0].pos.j={layer[0].pos.j}
2228.5	OUT DEF: layer[0].size=(?,?)
2095.6	OUT DEF: layer[0].size.j={layer[0].size.j}
2060.6	IN  DEF: size=(?,?)
1898.0	IN  DEF: size.i=3
1735.4	IN  DEF: size.j=3
1700.4	IN  DEF: layer[0].pos=(?,?)
1665.4	IN  DEF: layer[0].size=(?,?)
1536.7	IN  DEF: layer[0].size.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size (6,{size.j}) and color ? and layers
  [0]: a rectangle at ({layer[0].size.i - layer[0].pos.i},{layer[0].pos.j}) with size (?,{layer[0].size.j}) and color ? and mask ?
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (?,?) with size (2,?) and color blue and mask ?

DL input  with Mi: L = 45.3 + 497.1 = 542.4
DL output with Mo: L = 53.1 + 941.2 = 994.3
DL input+output M: L = 98.4 + 1438.3 = 1536.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 111011
diff: 
delta:
   (19.6 bits)
data: a background with size (6,3) and color blue and layers
  [0]: a rectangle at (2,0) with size (2,3) and color black and mask full
diff: 
delta: (0,2)=0  (5,2)=0 
   (52.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 111011
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask full
diff: 
delta: (1,2)=1 
! 14 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color blue and mask 11101
diff: 
delta:
   (19.6 bits)
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (1,0) with size (4,3) and color blue and mask 101011011101
diff: 
delta:
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color blue and mask 11101
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,1) and color blue and mask full
diff: 
delta: (1,2)=1  (2,1)=1 
! 8 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,2) with size (2,1) and color blue and mask full
diff: 
delta:
   (10.5 bits)
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (1,2) with size (4,1) and color blue and mask full
diff: 
delta:
   (14.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,2) with size (2,1) and color blue and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,2) with size (1,1) and color blue and mask full
diff:   layer[0].size.i
delta: (2,0)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,1) and color blue and mask full
diff:   layer[0].size.i
delta: (1,2)=1 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color black and mask full
diff:   layer[0].color
delta: (1,2)=1  (2,0)=1 
! 6 wrong pixels (generated / expected)

TEST 8be77c9e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 941.2 bits (941.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-190] Checking task 8d5021e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1349.0 = 1357.9
DL output with Mo: L = 9.0 + 6616.6 = 6625.5
DL input+output M: L = 17.9 + 7965.5 = 7983.5

# learning a model for train pairs
7983.5	
4099.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3959.2	OUT DEF: layer[0].color={color}
3866.8	IN  SHAPE at layer[0]: a point at ? with color ?
3693.5	OUT DEF: color={layer[0].color}
3574.8	IN  SHAPE at layer[01]: a point at ? with color ?
3539.8	OUT DEF: size=(?,?)
3285.3	OUT DEF: size.i=9
3098.6	OUT DEF: size.j=4
3063.6	OUT DEF: layer[0].pos=(?,?)
2930.0	OUT DEF: layer[0].pos.i=0
2830.3	OUT DEF: layer[0].pos.j=0
2795.3	OUT DEF: layer[0].size=(?,?)
2540.8	OUT DEF: layer[0].size.i=9
2354.1	OUT DEF: layer[0].size.j=4
2319.1	IN  DEF: size=(?,?)
2156.5	IN  DEF: size.i=3
2027.9	IN  DEF: size.j=2
1992.9	IN  DEF: layer[0].pos=(?,?)
1905.3	IN  DEF: layer[0].pos.i=2
1870.2	IN  DEF: layer[01].pos=(?,?)
1799.6	IN  DEF: layer[01].pos.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size (9,4) and color {layer[0].color} and layers
  [0]: a rectangle at (0,0) with size (9,4) and color {color} and mask ?
WHERE (Mi)
a background with size (3,2) and color ? and layers
  [0]: a point at (2,?) with color ?
  [01]: a point at (?,1) with color ?

DL input  with Mi: L = 45.8 + 544.3 = 590.1
DL output with Mo: L = 59.9 + 1149.7 = 1209.5
DL input+output M: L = 105.6 + 1694.0 = 1799.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,2) and color black and layers
  [0]: a point at (2,1) with color cyan
  [01]: a point at (0,1) with color cyan
diff: 
delta:
   (16.0 bits)
data: a background with size (9,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (9,4) and color black and mask 11011110110011011110110011011110110
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  [0]: a point at (2,1) with color cyan
  [01]: a point at (0,1) with color cyan
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,2) and color red and layers
  [0]: a point at (2,1) with color black
  [01]: a point at (0,1) with color black
diff: 
delta:
   (22.5 bits)
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (9,4) and color red and mask 11011110110011011110110011011110110
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color red and layers
  [0]: a point at (2,1) with color black
  [01]: a point at (0,1) with color black
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,2) and color black and layers
  [0]: a point at (2,0) with color grey
  [01]: a point at (1,1) with color grey
diff: 
delta:
   (16.0 bits)
data: a background with size (9,4) and color grey and layers
  [0]: a rectangle at (0,0) with size (9,4) and color black and mask 111101101001100101101111111101101001
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  [0]: a point at (2,0) with color grey
  [01]: a point at (1,1) with color grey
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):

TEST 8d5021e8.json/1: 0 - (ERROR)

# Performance measures on task
bits-train-error = 1149.7 bits (1149.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-189] Checking task 8d510a79.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7088.4 = 7097.3
DL output with Mo: L = 9.0 + 11333.7 = 11342.7
DL input+output M: L = 17.9 + 18422.1 = 18440.0

# learning a model for train pairs
18440.0	
15504.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12587.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11735.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10885.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10196.5	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
9579.2	OUT DEF: layer[0]={layer[0]}
9193.4	OUT DEF: size={size}
9003.8	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
8809.6	OUT SHAPE at layer[011111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
  [011111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 4134.9 = 4161.5
DL output with Mo: L = 94.0 + 4554.1 = 4648.0
DL input+output M: L = 120.6 + 8689.0 = 8809.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (1,10) and color grey and mask full
diff: 
delta: (0,2)=1  (1,6)=1  (2,1)=2  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
   (179.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (1,10) and color grey and mask full
  [01]: a rectangle at (2,1) with size (3,1) and color red and mask full
  [011]: a rectangle at (2,9) with size (3,1) and color red and mask full
  [0111]: a rectangle at (6,5) with size (3,1) and color red and mask full
  [01111]: a rectangle at (0,6) with size (2,1) and color blue and mask full
  [011111]: a rectangle at (8,1) with size (2,1) and color blue and mask full
diff: 
delta: (0,2)=1  (8,8)=1  (9,8)=1 
   (189.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,0) with size (1,10) and color grey and mask full
diff: 
delta: (0,2)=1  (1,6)=1  (2,1)=2  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,2) with size (1,1) and color blue and mask full
diff: 
delta: (1,6)=1  (2,1)=2  (2,9)=2  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (8,1)=1  (8,5)=2  (8,8)=1 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,6) with size (1,1) and color blue and mask full
diff: 
delta: (0,2)=1  (2,1)=2  (2,9)=2  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (8,1)=1  (8,5)=2  (8,8)=1 
! 29 wrong pixels (generated / expected)

TRAIN 8d510a79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color grey and mask full
diff: 
delta: (0,1)=2  (0,3)=1  (1,5)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
   (233.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color grey and mask full
  [01]: a rectangle at (4,6) with size (5,1) and color red and mask full
  [011]: a rectangle at (0,1) with size (6,1) and color red and mask full
  [0111]: a rectangle at (6,4) with size (4,1) and color blue and mask full
  [01111]: a rectangle at (0,7) with size (2,1) and color blue and mask full
  [011111]: a rectangle at (1,5) with size (2,1) and color red and mask full
diff: 
delta: (0,3)=1  (4,9)=2  (5,9)=2  (8,2)=1  (8,8)=1  (9,2)=1  (9,8)=1 
   (266.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color grey and mask full
diff: 
delta: (0,1)=2  (0,3)=1  (1,5)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color red and mask full
diff: 
delta: (0,3)=1  (1,5)=2  (1,7)=1  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,3) with size (1,1) and color blue and mask full
diff: 
delta: (0,1)=2  (1,5)=2  (1,7)=1  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 36 wrong pixels (generated / expected)

TRAIN 8d510a79.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (1,10) and color grey and mask full
diff: 
delta: (1,1)=2  (1,3)=1  (1,8)=2  (2,6)=1  (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (1,1) and color red and mask full
diff: 
delta: (1,3)=1  (1,8)=2  (2,6)=1  (4,0)=5# (4,1)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,3) with size (1,1) and color blue and mask full
diff: 
delta: (1,1)=2  (1,8)=2  (2,6)=1  (4,0)=5# (4,1)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 34 wrong pixels (generated / expected)

TEST 8d510a79.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4554.1 bits (4554.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-188] Checking task 8e1813be.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 38480.8 = 38489.7
DL output with Mo: L = 9.0 + 8362.3 = 8371.3
DL input+output M: L = 17.9 + 46843.1 = 46861.0

# learning a model for train pairs
46861.0	
35950.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
29720.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24000.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
19835.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
18587.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17306.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17168.2	OUT DEF: layer[01].color={layer[0111].color}
17030.0	OUT DEF: layer[0].color={layer[01].color}
16959.3	OUT DEF: layer[0].mask=full
16888.7	OUT DEF: layer[01].mask=full
16750.7	IN  DEF: layer[0111].color=blue
16612.7	IN  DEF: layer[01].color=red
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[01].color} and mask full
  [01]: a rectangle at ? with size ? and color {layer[0111].color} and mask full
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color red and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color blue and mask ?

DL input  with Mi: L = 78.7 + 11109.2 = 11187.9
DL output with Mo: L = 43.6 + 5381.2 = 5424.7
DL input+output M: L = 122.3 + 16490.4 = 16612.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,15) and color black and layers
  [0]: a rectangle at (10,1) with size (6,6) and color grey and mask full
  [01]: a rectangle at (2,0) with size (1,15) and color red and mask full
  [011]: a rectangle at (8,0) with size (1,15) and color green and mask full
  [0111]: a rectangle at (5,0) with size (1,15) and color blue and mask full
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
   (709.0 bits)
data: a background with size (6,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,6) and color red and mask full
  [01]: a rectangle at (1,0) with size (1,6) and color blue and mask full
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
   (363.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  [0]: a rectangle at (10,1) with size (6,6) and color grey and mask full
  [01]: a rectangle at (2,0) with size (1,15) and color red and mask full
  [011]: a rectangle at (8,0) with size (1,15) and color green and mask full
  [0111]: a rectangle at (5,0) with size (1,15) and color blue and mask full
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 8e1813be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,10) and color black and layers
  [0]: a rectangle at (0,8) with size (12,1) and color yellow and mask full
  [01]: a rectangle at (0,5) with size (12,1) and color red and mask full
  [011]: a rectangle at (1,1) with size (3,3) and color grey and mask full
  [0111]: a rectangle at (5,2) with size (7,1) and color blue and mask full
diff: 
delta:
   (133.5 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (3,1) and color red and mask full
  [01]: a rectangle at (0,0) with size (3,1) and color blue and mask full
diff: 
delta:
   (52.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,10) and color black and layers
  [0]: a rectangle at (0,5) with size (12,1) and color red and mask full
  [01]: a rectangle at (0,8) with size (12,1) and color yellow and mask full
  [011]: a rectangle at (1,1) with size (3,3) and color grey and mask full
  [0111]: a rectangle at (5,2) with size (7,1) and color blue and mask full
diff:   layer[01].color
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (12,10) and color black and layers
  [0]: a rectangle at (0,5) with size (12,1) and color red and mask full
  [01]: a rectangle at (1,1) with size (3,3) and color grey and mask full
  [011]: a rectangle at (0,8) with size (12,1) and color yellow and mask full
  [0111]: a rectangle at (5,2) with size (7,1) and color blue and mask full
diff:   layer[01].color
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 8e1813be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,6) with size (4,4) and color grey and mask full
  [01]: a rectangle at (1,0) with size (1,5) and color red and mask full
  [011]: a rectangle at (7,0) with size (1,12) and color yellow and mask full
  [0111]: a rectangle at (10,0) with size (1,12) and color blue and mask full
diff: 
delta: (1,11)=2  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,11)=8 
   (268.4 bits)
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,4) and color red and mask full
  [01]: a rectangle at (3,0) with size (1,4) and color blue and mask full
diff: 
delta: (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=4 
   (122.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,6) with size (4,4) and color grey and mask full
  [01]: a rectangle at (7,0) with size (1,12) and color yellow and mask full
  [011]: a rectangle at (1,0) with size (1,5) and color red and mask full
  [0111]: a rectangle at (10,0) with size (1,12) and color blue and mask full
diff:   layer[01].color
delta: (1,11)=2  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,11)=8 
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,6) with size (4,4) and color grey and mask full
  [01]: a rectangle at (1,0) with size (1,12) and color red and mask full
  [011]: a rectangle at (7,0) with size (1,12) and color yellow and mask full
  [0111]: a rectangle at (10,0) with size (1,12) and color blue and mask full
diff: 
delta: (1,5)=0  (1,10)=0  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,11)=8 
! size mismatch, 10x10 instead of 4x4

TRAIN 8e1813be.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (1,8) with size (7,7) and color grey and mask full
  [01]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [011]: a rectangle at (12,0) with size (1,19) and color pink and mask full
  [0111]: a rectangle at (15,0) with size (1,19) and color blue and mask full
diff:   layer[01].color
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,16)=2  (0,17)=2  (0,18)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,16)=3  (3,17)=3  (3,18)=3  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,16)=8  (6,17)=8  (6,18)=8  (18,0)=7# (18,1)=7# (18,2)=7# (18,3)=7# (18,4)=7# (18,5)=7# (18,6)=7# (18,7)=7# (18,8)=7# (18,9)=7# (18,10)=7# (18,11)=7# (18,12)=7# (18,13)=7# (18,14)=7# (18,15)=7# (18,16)=7# (18,17)=7# (18,18)=7#
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (1,8) with size (7,7) and color grey and mask full
  [01]: a rectangle at (12,0) with size (1,19) and color pink and mask full
  [011]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [0111]: a rectangle at (15,0) with size (1,19) and color blue and mask full
diff:   layer[01].color
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,16)=2  (0,17)=2  (0,18)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,16)=3  (3,17)=3  (3,18)=3  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,16)=8  (6,17)=8  (6,18)=8  (18,0)=7# (18,1)=7# (18,2)=7# (18,3)=7# (18,4)=7# (18,5)=7# (18,6)=7# (18,7)=7# (18,8)=7# (18,9)=7# (18,10)=7# (18,11)=7# (18,12)=7# (18,13)=7# (18,14)=7# (18,15)=7# (18,16)=7# (18,17)=7# (18,18)=7#
! size mismatch, 10x10 instead of 7x7

TEST 8e1813be.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5381.2 bits (5381.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-187] Checking task 8e5a5113.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7954.6 = 7963.5
DL output with Mo: L = 9.0 + 9602.5 = 9611.5
DL input+output M: L = 17.9 + 17557.1 = 17575.0

# learning a model for train pairs
17575.0	
16000.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14953.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14258.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13549.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12870.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12319.6	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
11838.4	OUT DEF: size={size}
11549.3	OUT DEF: layer[0].size={layer[01].size}
11064.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10765.9	OUT DEF: layer[0].color={layer[01].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[01].size} and color {layer[01].color} and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 4358.1 = 4434.1
DL output with Mo: L = 62.9 + 6268.9 = 6331.8
DL input+output M: L = 138.9 + 10626.9 = 10765.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 100110011
  [01]: a rectangle at (1,0) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (0,2)=2 
   (148.9 bits)
data: a background with size (3,11) and color blue and layers
  [0]: a rectangle at (0,4) with size (2,2) and color yellow and mask 111
  [01]: a rectangle at (0,9) with size (2,2) and color yellow and mask 1011
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
diff: 
delta: (0,2)=2  (0,7)=5# (1,0)=4  (1,7)=5# (2,0)=4  (2,1)=4  (2,6)=2  (2,7)=5# (2,8)=2 
   (228.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 100110011
  [01]: a rectangle at (1,0) with size (2,2) and color yellow and mask full
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (0,2)=2 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 100110011
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (1,0) with size (2,2) and color yellow and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (0,2)=2 
! 33 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color green and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (3,1) and color pink and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (2,2)=2 
   (137.9 bits)
data: a background with size (3,11) and color pink and layers
  [0]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,4) with size (1,3) and color pink and mask full
  [011]: a rectangle at (0,1) with size (3,9) and color green and mask full
diff: 
delta: (0,7)=5# (0,8)=2  (1,7)=5# (2,2)=2  (2,4)=2  (2,7)=5#
   (177.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color green and mask full
  [01]: a rectangle at (0,0) with size (3,1) and color pink and mask full
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (2,2)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color green and mask full
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (3,1) and color pink and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (2,2)=2 
! 33 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111100100
  [01]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (0,0)=2 
   (148.9 bits)
data: a background with size (3,11) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [01]: a rectangle at (0,5) with size (2,2) and color orange and mask full
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
diff: 
delta: (0,0)=2  (0,6)=2  (0,7)=5# (1,7)=5# (1,9)=7# (1,10)=7# (2,7)=5# (2,9)=7# (2,10)=2 
   (220.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111100100
  [01]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [011]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (0,0)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111100100
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,0) with size (2,2) and color orange and mask full
  [0111]: a rectangle at (0,7) with size (3,1) and color grey and mask full
diff: 
delta: (0,0)=2 
! 33 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 110111100
  [01]: a rectangle at (0,3) with size (3,1) and color grey and mask full
  [011]: a rectangle at (0,7) with size (3,1) and color grey and mask full
  [0111]: a rectangle at (0,0) with size (1,2) and color green and mask full
diff: 
delta: (2,0)=2 
! 33 wrong pixels (generated / expected)

TEST 8e5a5113.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6268.9 bits (6268.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-186] Checking task 8eb1be9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9689.4 = 9698.4
DL output with Mo: L = 9.0 + 32113.0 = 32122.0
DL input+output M: L = 17.9 + 41802.4 = 41820.3

# learning a model for train pairs
41820.3	
31907.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24324.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23902.9	OUT DEF: size={size}
23809.4	OUT DEF: layer[0].color={layer[0].color}
23778.4	OUT DEF: color=black
23747.3	IN  DEF: color=black
23725.5	OUT DEF: layer[0].pos=(?,?)
23620.7	OUT DEF: layer[0].pos.j={layer[0].pos.j}
23527.5	OUT DEF: layer[0].pos.i={layer[0].pos.i - layer[0].size.i}
23505.7	OUT DEF: layer[0].size=(?,?)
23302.8	OUT DEF: layer[0].size.j={layer[0].size.j}
23281.0	IN  DEF: size=(?,?)
23259.2	IN  DEF: layer[0].pos=(?,?)
23157.3	IN  DEF: layer[0].pos.j=0
23135.5	IN  DEF: layer[0].size=(?,?)
23027.9	IN  DEF: layer[0].size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i - layer[0].size.i},{layer[0].pos.j}) with size (?,{layer[0].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,0) with size (3,?) and color ? and mask ?

DL input  with Mi: L = 43.7 + 1765.3 = 1809.0
DL output with Mo: L = 38.3 + 21180.6 = 21218.9
DL input+output M: L = 82.1 + 22945.8 = 23027.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (4,0) with size (3,19) and color cyan and mask 10000010000010000011111111111111111110000100000100000100
diff: 
delta:
   (101.0 bits)
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (1,0) with size (3,19) and color cyan and mask 10000010000010000011111111111111111110000100000100000100
diff: 
delta: (0,5)=8  (0,11)=8  (0,17)=8  (4,2)=8  (4,8)=8  (4,14)=8  (5,0)=8  (5,1)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,11)=8  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,16)=8  (5,17)=8  (5,18)=8  (6,5)=8  (6,11)=8  (6,17)=8  (7,2)=8  (7,8)=8  (7,14)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,8)=8  (8,9)=8  (8,10)=8  (8,11)=8  (8,12)=8  (8,13)=8  (8,14)=8  (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (9,5)=8  (9,11)=8  (9,17)=8  (10,2)=8  (10,8)=8  (10,14)=8  (11,0)=8  (11,1)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,5)=8  (11,6)=8  (11,7)=8  (11,8)=8  (11,9)=8  (11,10)=8  (11,11)=8  (11,12)=8  (11,13)=8  (11,14)=8  (11,15)=8  (11,16)=8  (11,17)=8  (11,18)=8  (12,5)=8  (12,11)=8  (12,17)=8  (13,2)=8  (13,8)=8  (13,14)=8  (14,0)=8  (14,1)=8  (14,2)=8  (14,3)=8  (14,4)=8  (14,5)=8  (14,6)=8  (14,7)=8  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8  (14,16)=8  (14,17)=8  (14,18)=8 
   (1986.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (4,0) with size (3,19) and color cyan and mask 10000010000010000011111111111111111110000100000100000100
diff: 
delta:
! 119 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (5,0) with size (1,19) and color cyan and mask full
diff:   layer[0].size.i
delta: (4,2)=8  (4,8)=8  (4,14)=8  (6,5)=8  (6,11)=8  (6,17)=8 
! 119 wrong pixels (generated / expected)

TRAIN 8eb1be9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (3,0) with size (3,12) and color red and mask 10101010101111111111111010101010101
diff: 
delta:
   (75.6 bits)
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (0,0) with size (10,12) and color red and mask 10101010101010101010101111111111111010101010101010101010101111111111111010101010101010101010101111111111111010101010101
diff: 
delta:
   (131.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (3,0) with size (3,12) and color red and mask 10101010101111111111111010101010101
diff: 
delta:
! 66 wrong pixels (generated / expected)

TRAIN 8eb1be9a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  [0]: a rectangle at (3,0) with size (3,13) and color blue and mask 110110110110111011011011010010010010010
diff: 
delta:
! 101 wrong pixels (generated / expected)

TEST 8eb1be9a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 21180.6 bits (21180.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-185] Checking task 8efcae92.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 100169.8 = 100178.8
DL output with Mo: L = 9.0 + 5199.8 = 5208.7
DL input+output M: L = 17.9 + 105369.6 = 105387.5

# learning a model for train pairs
105387.5	
77809.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
47371.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
28880.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
27185.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
25742.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
25536.4	OUT DEF: color=red
25397.6	OUT DEF: layer[0].color={layer[0].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color red and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 21900.4 = 21976.5
DL output with Mo: L = 31.8 + 3389.4 = 3421.1
DL input+output M: L = 107.8 + 25289.8 = 25397.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,2) with size (6,14) and color blue and mask full
  [01]: a rectangle at (1,10) with size (8,8) and color blue and mask full
  [011]: a rectangle at (14,7) with size (3,4) and color red and mask 110100101
  [0111]: a rectangle at (13,6) with size (5,6) and color blue and mask full
diff: 
delta: (2,14)=2  (3,7)=0  (3,8)=0  (3,9)=0  (4,5)=2  (4,7)=0  (4,8)=0  (4,9)=0  (4,11)=2  (4,16)=2  (5,4)=2  (5,7)=0  (5,8)=0  (5,9)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,13)=2  (7,3)=2  (7,7)=0  (7,8)=0  (7,9)=0  (8,7)=0  (8,8)=0  (8,9)=0  (17,9)=2 
   (699.1 bits)
data: a background with size (5,6) and color red and layers
  [0]: a rectangle at (0,0) with size (5,6) and color blue and mask 110111111101101011110101111111
diff: 
delta:
   (72.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (3,2) with size (6,14) and color blue and mask full
  [01]: a rectangle at (1,10) with size (8,8) and color blue and mask full
  [011]: a rectangle at (14,7) with size (3,4) and color red and mask 110100101
  [0111]: a rectangle at (13,6) with size (5,6) and color blue and mask full
diff: 
delta: (2,14)=2  (3,7)=0  (3,8)=0  (3,9)=0  (4,5)=2  (4,7)=0  (4,8)=0  (4,9)=0  (4,11)=2  (4,16)=2  (5,4)=2  (5,7)=0  (5,8)=0  (5,9)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,13)=2  (7,3)=2  (7,7)=0  (7,8)=0  (7,9)=0  (8,7)=0  (8,8)=0  (8,9)=0  (17,9)=2 
! size mismatch, 10x10 instead of 5x6

TRAIN 8efcae92.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (2,2) with size (9,9) and color blue and mask 11110111111111101111011111111111111111111110101110111111011111011111101111101111
  [01]: a rectangle at (13,0) with size (7,9) and color blue and mask full
  [011]: a rectangle at (3,14) with size (9,6) and color blue and mask full
  [0111]: a rectangle at (15,11) with size (4,6) and color blue and mask full
diff: 
delta: (2,6)=2  (3,3)=2  (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (8,15)=2  (9,3)=2  (9,18)=2  (10,5)=2  (10,10)=2  (10,15)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
   (752.0 bits)
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (0,0) with size (9,9) and color blue and mask 11110111111111101111011111111111111111111110101110111111011111011111101111101111
diff: 
delta:
   (130.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (2,2) with size (9,9) and color blue and mask 11110111111111101111011111111111111111111110101110111111011111011111101111101111
  [01]: a rectangle at (13,0) with size (7,9) and color blue and mask full
  [011]: a rectangle at (3,14) with size (9,6) and color blue and mask full
  [0111]: a rectangle at (15,11) with size (4,6) and color blue and mask full
diff: 
delta: (2,6)=2  (3,3)=2  (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (8,15)=2  (9,3)=2  (9,18)=2  (10,5)=2  (10,10)=2  (10,15)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN 8efcae92.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (2,9) with size (12,9) and color blue and mask 111111111111111111111111111101110111111111111111111111111110111111111111111011111111111011011111111111111111
  [01]: a rectangle at (15,2) with size (5,17) and color blue and mask full
  [011]: a rectangle at (0,1) with size (6,6) and color blue and mask full
  [0111]: a rectangle at (10,3) with size (4,4) and color blue and mask full
diff: 
delta: (0,1)=2  (1,4)=2  (2,3)=2  (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
   (738.9 bits)
data: a background with size (5,17) and color red and layers
  [0]: a rectangle at (0,0) with size (5,17) and color blue and mask 1110110111111111111111111110111101111111101111101111110111110111111111111111111111111
diff: 
delta:
   (135.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (2,9) with size (12,9) and color blue and mask 111111111111111111111111111101110111111111111111111111111110111111111111111011111111111011011111111111111111
  [01]: a rectangle at (15,2) with size (5,17) and color blue and mask full
  [011]: a rectangle at (0,1) with size (6,6) and color blue and mask full
  [0111]: a rectangle at (10,3) with size (4,4) and color blue and mask full
diff: 
delta: (0,1)=2  (1,4)=2  (2,3)=2  (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17

TRAIN 8efcae92.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (1,1) with size (18,5) and color blue and mask 111111110111111111111111110111111111110111111111111101111111111111111110111111011111111111
  [01]: a rectangle at (6,8) with size (9,10) and color blue and mask full
  [011]: a rectangle at (17,11) with size (3,9) and color blue and mask full
  [0111]: a rectangle at (1,9) with size (3,8) and color blue and mask full
diff: 
delta: (2,14)=2  (3,2)=2  (3,10)=2  (4,4)=2  (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (18,17)=2  (19,15)=2  (19,18)=2 
! size mismatch, 10x10 instead of 9x10

TEST 8efcae92.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3389.4 bits (3389.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-184] Checking task 8f2ea7aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2993.0 = 3001.9
DL output with Mo: L = 9.0 + 10705.3 = 10714.3
DL input+output M: L = 17.9 + 13698.3 = 13716.2

# learning a model for train pairs
13716.2	
9233.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8169.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7449.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6889.4	OUT DEF: size={size}
6749.5	OUT DEF: layer[0].color={layer[0].color}
6703.9	IN  DEF: color=black
6668.8	OUT DEF: layer[0].pos=(?,?)
6534.1	OUT DEF: layer[0].pos.j={layer[0].pos.j}
6316.1	OUT DEF: layer[0]={layer[0]}
6267.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6106.8	OUT DEF: layer[01].mask={layer[0].mask}
5967.1	OUT DEF: layer[01].color={layer[0].color}
5932.1	OUT DEF: layer[01].pos=(?,?)
5798.7	OUT DEF: layer[01].pos.i={layer[0].size.i}
5670.0	OUT DEF: layer[01].pos.j={layer[0].pos.j + layer[0].size.j}
5635.0	OUT DEF: layer[01].size=(?,?)
5600.0	OUT DEF: layer[011].pos=(?,?)
5468.2	OUT DEF: layer[011].pos.j=0
5433.1	OUT DEF: layer[011].size=(?,?)
5398.1	IN  DEF: size=(?,?)
5143.6	IN  DEF: size.i=9
4889.1	IN  DEF: size.j=9
4854.1	IN  DEF: layer[0].pos=(?,?)
4819.1	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].size.i},{layer[0].pos.j + layer[0].size.j}) with size (?,?) and color {layer[0].color} and mask {layer[0].mask}
  [011]: a rectangle at (?,0) with size (?,?) and color ? and mask ?
WHERE (Mi)
a background with size (9,9) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 49.3 + 1565.5 = 1614.8
DL output with Mo: L = 72.7 + 3131.6 = 3204.3
DL input+output M: L = 122.0 + 4697.0 = 4819.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color cyan and mask full
diff: 
delta: (1,2)=8  (2,0)=8 
   (60.3 bits)
data: a background with size (9,9) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,2) and color cyan and mask full
  [01]: a rectangle at (1,2) with size (1,1) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (9,9) and color black and mask 111111110111111011111111100110111111011111111100111111111110110111011111111100111
diff: 
delta:
   (122.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color cyan and mask 100011
diff: 
delta: (2,0)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color cyan and mask full
diff: 
delta: (1,2)=8  (2,0)=8 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,2) with size (1,1) and color cyan and mask full
diff: 
delta: (0,0)=8  (0,1)=8  (2,0)=8 
! 19 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,5) with size (2,1) and color orange and mask full
diff: 
delta: (4,4)=7# (5,3)=7#
   (60.3 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,5) with size (2,1) and color orange and mask full
  [01]: a rectangle at (2,6) with size (1,1) and color orange and mask full
  [011]: a rectangle at (0,0) with size (9,9) and color orange and mask 1000000110000000100001001000110110000100100000001000000110000000100000000
diff: 
delta:
   (115.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color orange and mask 1110100
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,4) with size (1,2) and color orange and mask full
diff: 
delta: (3,5)=7# (5,3)=7#
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,5) with size (2,1) and color orange and mask full
diff: 
delta: (4,4)=7# (5,3)=7#
! 20 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color pink and mask 11101010
diff: 
delta:
   (35.9 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color pink and mask 11101010
  [01]: a rectangle at (3,6) with size (3,3) and color pink and mask 11101010
  [011]: a rectangle at (3,0) with size (6,6) and color pink and mask 11011101101010010000011000101000010
diff: 
delta:
   (74.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color pink and mask 11101010
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,3) with size (1,2) and color pink and mask full
diff: 
delta: (0,4)=6  (1,3)=6  (1,5)=6 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,3) with size (2,1) and color pink and mask full
diff: 
delta: (0,4)=6  (1,5)=6  (2,4)=6 
! 29 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,0) with size (3,3) and color red and mask 110011001
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (1,2) and color red and mask full
diff: 
delta: (3,0)=2  (5,1)=2  (5,2)=2 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,1) with size (1,2) and color red and mask full
diff: 
delta: (3,0)=2  (4,0)=2  (4,1)=2 
! 28 wrong pixels (generated / expected)

TEST 8f2ea7aa.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3131.6 bits (3131.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-183] Checking task 90c28cc7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 144955.6 = 144964.5
DL output with Mo: L = 9.0 + 2635.2 = 2644.2
DL input+output M: L = 17.9 + 147590.8 = 147608.7

# learning a model for train pairs
147608.7	
107723.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
78850.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
52320.8	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
29818.1	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
29580.6	OUT DEF: color={layer[0].color}
29442.6	IN  DEF: layer[0111].color=red
29371.9	IN  DEF: layer[0].mask=full
29301.3	IN  DEF: layer[01].mask=full
29230.6	IN  DEF: layer[011].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color {layer[0].color} and layers
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full
  [0111]: a rectangle at ? with size ? and color red and mask ?

DL input  with Mi: L = 74.4 + 26749.6 = 26824.0
DL output with Mo: L = 10.4 + 2396.2 = 2406.6
DL input+output M: L = 84.8 + 29145.9 = 29230.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (1,9) with size (6,12) and color orange and mask full
  [01]: a rectangle at (11,9) with size (5,12) and color grey and mask full
  [011]: a rectangle at (1,1) with size (6,8) and color cyan and mask full
  [0111]: a rectangle at (11,1) with size (5,8) and color red and mask full
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
   (1752.1 bits)
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=8  (1,0)=3  (1,1)=4  (1,2)=1  (2,0)=2  (2,1)=5# (2,2)=5#
   (117.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (1,9) with size (6,12) and color orange and mask full
  [01]: a rectangle at (11,9) with size (5,12) and color grey and mask full
  [011]: a rectangle at (1,1) with size (6,8) and color cyan and mask full
  [0111]: a rectangle at (11,1) with size (5,8) and color red and mask full
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 90c28cc7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (1,8) with size (8,8) and color cyan and mask full
  [01]: a rectangle at (9,8) with size (7,8) and color yellow and mask full
  [011]: a rectangle at (9,1) with size (7,7) and color blue and mask full
  [0111]: a rectangle at (1,1) with size (8,7) and color red and mask full
diff: 
delta:
   (162.6 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta: (0,0)=2  (1,0)=1  (1,1)=4 
   (52.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (1,8) with size (8,8) and color cyan and mask full
  [01]: a rectangle at (9,8) with size (7,8) and color yellow and mask full
  [011]: a rectangle at (9,1) with size (7,7) and color blue and mask full
  [0111]: a rectangle at (1,1) with size (8,7) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (9,8) with size (7,8) and color yellow and mask full
  [01]: a rectangle at (1,8) with size (8,8) and color cyan and mask full
  [011]: a rectangle at (9,1) with size (7,7) and color blue and mask full
  [0111]: a rectangle at (1,1) with size (8,7) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 90c28cc7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,2) with size (6,12) and color green and mask full
  [01]: a rectangle at (13,2) with size (6,6) and color yellow and mask full
  [011]: a rectangle at (13,8) with size (6,6) and color blue and mask full
  [0111]: a rectangle at (2,8) with size (5,6) and color red and mask full
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
   (760.3 bits)
data: a background with size (3,2) and color green and layers
diff: 
delta: (0,0)=8  (0,1)=2  (2,0)=4  (2,1)=1 
   (69.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,2) with size (6,12) and color green and mask full
  [01]: a rectangle at (13,2) with size (6,6) and color yellow and mask full
  [011]: a rectangle at (13,8) with size (6,6) and color blue and mask full
  [0111]: a rectangle at (2,8) with size (5,6) and color red and mask full
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (13,2) with size (6,6) and color yellow and mask full
  [01]: a rectangle at (7,2) with size (6,12) and color green and mask full
  [011]: a rectangle at (13,8) with size (6,6) and color blue and mask full
  [0111]: a rectangle at (2,8) with size (5,6) and color red and mask full
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
! size mismatch, 10x10 instead of 3x2

TRAIN 90c28cc7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  [0]: a rectangle at (7,1) with size (8,18) and color cyan and mask full
  [01]: a rectangle at (1,6) with size (18,8) and color yellow and mask full
  [011]: a rectangle at (1,14) with size (6,5) and color blue and mask full
  [0111]: a rectangle at (1,1) with size (18,5) and color red and mask full
diff: 
delta: (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,11)=3  (14,12)=3  (14,13)=3  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3

TEST 90c28cc7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2396.2 bits (2396.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-182] Checking task 90f3ed37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10717.8 = 10726.8
DL output with Mo: L = 9.0 + 19122.1 = 19131.1
DL input+output M: L = 17.9 + 29840.0 = 29857.9

# learning a model for train pairs
29857.9	
25817.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21831.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18876.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16583.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14900.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
13588.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12100.4	OUT DEF: layer[0]={layer[0]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 5330.8 = 5374.2
DL output with Mo: L = 63.2 + 6663.0 = 6726.2
DL input+output M: L = 106.5 + 11993.8 = 12100.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,10) and color cyan and mask 111111100000000001000000000011
  [01]: a rectangle at (6,0) with size (2,4) and color cyan and mask 10000111
diff: 
delta: (10,0)=8  (10,1)=8  (11,2)=8 
   (182.4 bits)
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,10) and color cyan and mask 111111100000000001000000000011
  [01]: a rectangle at (12,3) with size (1,7) and color blue and mask full
  [011]: a rectangle at (8,4) with size (1,6) and color blue and mask full
  [0111]: a rectangle at (6,0) with size (2,4) and color cyan and mask 10000111
diff: 
delta: (10,0)=8  (10,1)=8  (11,2)=8 
   (177.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,10) and color cyan and mask 111111100000000001000000000011
  [01]: a rectangle at (6,0) with size (2,4) and color cyan and mask 10000111
diff: 
delta: (10,0)=8  (10,1)=8  (11,2)=8 
! size mismatch, 10x10 instead of 15x10
>> Trial 2
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (6,0) with size (2,4) and color cyan and mask 10000111
  [01]: a rectangle at (1,0) with size (3,10) and color cyan and mask 111111100000000001000000000011
diff: 
delta: (10,0)=8  (10,1)=8  (11,2)=8 
! size mismatch, 10x10 instead of 15x10

TRAIN 90f3ed37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,10) and color cyan and mask full
  [01]: a rectangle at (11,0) with size (1,4) and color cyan and mask full
diff: 
delta: (6,0)=8  (6,1)=8  (6,2)=8  (13,0)=8  (13,1)=8 
   (176.7 bits)
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,10) and color cyan and mask full
  [01]: a rectangle at (13,2) with size (1,8) and color blue and mask full
  [011]: a rectangle at (6,3) with size (1,7) and color blue and mask full
  [0111]: a rectangle at (11,4) with size (1,6) and color blue and mask full
diff: 
delta: (6,0)=8  (6,1)=8  (6,2)=8  (11,0)=8  (11,1)=8  (11,2)=8  (11,3)=8  (13,0)=8  (13,1)=8 
   (281.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,10) and color cyan and mask full
  [01]: a rectangle at (11,0) with size (1,4) and color cyan and mask full
diff: 
delta: (6,0)=8  (6,1)=8  (6,2)=8  (13,0)=8  (13,1)=8 
! size mismatch, 10x10 instead of 15x10
>> Trial 2
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (11,0) with size (1,4) and color cyan and mask full
  [01]: a rectangle at (2,0) with size (1,10) and color cyan and mask full
diff: 
delta: (6,0)=8  (6,1)=8  (6,2)=8  (13,0)=8  (13,1)=8 
! size mismatch, 10x10 instead of 15x10

TRAIN 90f3ed37.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (2,10) and color cyan and mask 10101010100101010101
  [01]: a rectangle at (10,0) with size (2,5) and color cyan and mask 101010101
diff: 
delta: (6,0)=8  (6,2)=8  (7,1)=8 
   (173.9 bits)
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (2,10) and color cyan and mask 10101010100101010101
  [01]: a rectangle at (6,3) with size (2,7) and color blue and mask 10101010101010
  [011]: a rectangle at (10,0) with size (2,5) and color cyan and mask 101010101
  [0111]: a rectangle at (10,5) with size (2,5) and color blue and mask 1010101010
diff: 
delta: (6,0)=8  (6,2)=8  (7,1)=8 
   (207.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (2,10) and color cyan and mask 10101010100101010101
  [01]: a rectangle at (10,0) with size (2,5) and color cyan and mask 101010101
diff: 
delta: (6,0)=8  (6,2)=8  (7,1)=8 
! size mismatch, 10x10 instead of 15x10
>> Trial 2
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (10,0) with size (2,5) and color cyan and mask 101010101
  [01]: a rectangle at (1,0) with size (2,10) and color cyan and mask 10101010100101010101
diff: 
delta: (6,0)=8  (6,2)=8  (7,1)=8 
! size mismatch, 10x10 instead of 15x10

TRAIN 90f3ed37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (1,0) with size (3,10) and color cyan and mask 111111110000000000111111111100
  [01]: a rectangle at (8,0) with size (3,5) and color cyan and mask 110000011111000
diff: 
delta:
! size mismatch, 10x10 instead of 15x10
>> Trial 2
data: a background with size (15,10) and color black and layers
  [0]: a rectangle at (8,0) with size (3,5) and color cyan and mask 110000011111000
  [01]: a rectangle at (1,0) with size (3,10) and color cyan and mask 111111110000000000111111111100
diff: 
delta:
! size mismatch, 10x10 instead of 15x10

TEST 90f3ed37.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6663.0 bits (6663.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-181] Checking task 913fb3ed.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2162.6 = 2171.5
DL output with Mo: L = 9.0 + 12314.5 = 12323.4
DL input+output M: L = 17.9 + 14477.0 = 14495.0

# learning a model for train pairs
14495.0	
10039.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7737.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6987.4	OUT DEF: size={size}
6380.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6239.2	IN  SHAPE at layer[0]: a point at ? with color ?
6145.3	OUT DEF: layer[0].mask=full
6051.5	OUT DEF: layer[01].mask=full
5957.6	OUT DEF: layer[011].mask=full
5897.4	OUT DEF: color=black
5837.2	IN  DEF: color=black
5789.0	OUT DEF: layer[0].pos=(?,?)
5614.1	OUT DEF: layer[0].pos.i={layer[0].pos.i - 1}
5439.3	OUT DEF: layer[0].pos.j={layer[0].pos.j - 1}
5391.0	OUT DEF: layer[0].size=(?,?)
5173.5	OUT DEF: layer[0].size.j=3
5125.3	OUT DEF: layer[01].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i - 1},{layer[0].pos.j - 1}) with size (?,3) and color ? and mask full
  [01]: a rectangle at (?,?) with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 18.1 + 1951.4 = 1969.4
DL output with Mo: L = 81.1 + 3074.7 = 3155.9
DL input+output M: L = 99.2 + 5026.1 = 5125.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a point at (4,5) with color cyan
diff: 
delta: (5,1)=3  (6,8)=2 
   (75.5 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,4) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (4,0) with size (3,3) and color pink and mask full
  [011]: a rectangle at (5,7) with size (3,3) and color blue and mask full
diff: 
delta: (4,5)=8  (5,1)=3  (6,8)=2 
   (123.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a point at (4,5) with color cyan
diff: 
delta: (5,1)=3  (6,8)=2 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a point at (5,1) with color green
diff: 
delta: (4,5)=8  (6,8)=2 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a point at (6,8) with color red
diff: 
delta: (4,5)=8  (5,1)=3 
! 31 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,3) with color green
diff: 
delta:
   (30.1 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,2) with size (1,3) and color pink and mask full
  [01]: a rectangle at (1,3) with size (1,1) and color green and mask full
  [011]: a rectangle at (0,2) with size (3,3) and color pink and mask full
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,3) with color green
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [0]: a point at (3,12) with color green
diff: 
delta: (10,3)=2 
   (59.5 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,11) with size (3,3) and color pink and mask full
  [01]: a rectangle at (10,3) with size (1,1) and color red and mask full
  [011]: a rectangle at (9,2) with size (3,3) and color blue and mask full
diff: 
delta: (3,12)=3 
   (81.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a point at (3,12) with color green
diff: 
delta: (10,3)=2 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  [0]: a point at (10,3) with color red
diff: 
delta: (3,12)=3 
! 22 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,2) with color cyan
diff: 
delta:
   (30.1 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (1,3) and color yellow and mask full
  [01]: a rectangle at (2,2) with size (1,1) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (3,3) and color yellow and mask full
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,2) with color cyan
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a point at (1,1) with color green
diff: 
delta: (10,13)=2  (14,2)=8 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  [0]: a point at (10,13) with color red
diff: 
delta: (1,1)=3  (14,2)=8 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  [0]: a point at (14,2) with color cyan
diff: 
delta: (1,1)=3  (10,13)=2 
! 27 wrong pixels (generated / expected)

TEST 913fb3ed.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3074.7 bits (3074.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-180] Checking task 91413438.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2827.8 = 2836.8
DL output with Mo: L = 9.0 + 16713.4 = 16722.3
DL input+output M: L = 17.9 + 19541.2 = 19559.1

# learning a model for train pairs
19559.1	
6951.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6066.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5610.5	OUT DEF: layer[0].pos={layer[0].pos}
5424.1	OUT DEF: layer[0].color={layer[0].color}
5363.9	OUT DEF: color=black
5303.7	IN  DEF: color=black
5255.5	OUT DEF: size=(?,?)
5207.2	OUT DEF: layer[0].size=(?,?)
5159.0	IN  DEF: size=(?,?)
4941.5	IN  DEF: size.i=3
4724.0	IN  DEF: size.j=3
4675.8	IN  DEF: layer[0].pos=(?,?)
4559.1	IN  DEF: layer[0].pos.i=0
4442.4	IN  DEF: layer[0].pos.j=0
4394.1	IN  DEF: layer[0].size=(?,?)
4176.6	IN  DEF: layer[0].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (?,3) and color ? and mask ?

DL input  with Mi: L = 44.3 + 816.6 = 860.9
DL output with Mo: L = 32.8 + 3282.9 = 3315.7
DL input+output M: L = 77.1 + 4099.6 = 4176.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color pink and mask 100110011
diff: 
delta:
   (21.5 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,0) with size (6,12) and color pink and mask 100000000000110000000000011100100100100110110110110011011011011
diff: 
delta:
   (110.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color pink and mask 100110011
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,0) with size (2,2) and color black and mask 1101
diff:   color  layer[0].size.j  layer[0].pos.i
delta: (0,2)=0 
! size mismatch, 10x10 instead of 12x12

TRAIN 91413438.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 1110010
diff: 
delta:
   (21.5 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,0) with size (3,12) and color yellow and mask 1001001001110110110110010010010010
diff: 
delta:
   (73.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 1110010
diff: 
delta:
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 110001101
diff:   color
delta:
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,1) and color yellow and mask full
diff:   layer[0].size.j  layer[0].pos.j
delta: (1,2)=4  (2,0)=4 
! size mismatch, 10x10 instead of 15x15

TRAIN 91413438.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 110101101
diff: 
delta:
   (21.5 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (6,9) and color green and mask 110110110101101101101101101110110110101101101101101101
diff: 
delta:
   (89.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 110101101
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (3,2) and color black and mask 11010
diff:   color  layer[0].size.j
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN 91413438.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 10101
diff: 
delta:
   (17.3 bits)
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (2,9) and color red and mask 10010010101101101
diff: 
delta:
   (54.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 10101
diff: 
delta:
! size mismatch, 10x10 instead of 18x18
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 111101010
diff:   color
delta:
! size mismatch, 10x10 instead of 18x18

TRAIN 91413438.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color cyan and mask 110
diff:   layer[0].size.j  layer[0].pos.j
delta:
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 111101011
diff:   color
delta:
! size mismatch, 10x10 instead of 21x21
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,2) with size (1,1) and color cyan and mask full
diff:   layer[0].size.j  layer[0].pos.j
delta: (1,1)=8 
! size mismatch, 10x10 instead of 21x21

TEST 91413438.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3282.9 bits (3282.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-179] Checking task 91714a58.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 52586.7 = 52595.7
DL output with Mo: L = 9.0 + 7547.3 = 7556.3
DL input+output M: L = 17.9 + 60134.0 = 60152.0

# learning a model for train pairs
60152.0	
54283.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
48526.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
47435.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
46558.9	OUT DEF: layer[0]={layer[0]}
45899.7	OUT DEF: size={size}
45829.1	IN  DEF: layer[0].mask=full
45515.0	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
45444.3	IN  DEF: layer[011].mask=full
45383.6	IN  SHAPE at layer[00]: a point at ? with color ?
45322.6	IN  SHAPE at layer[001]: a point at ? with color ?
45261.4	IN  SHAPE at layer[0011]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a point at ? with color ?
  [0011]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 86.3 + 45115.8 = 45202.1
DL output with Mo: L = 15.5 + 43.7 = 59.3
DL input+output M: L = 101.9 + 45159.6 = 45261.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,6) with color yellow
  [001]: a point at (0,8) with color red
  [0011]: a point at (0,13) with color red
  [0]: a rectangle at (3,3) with size (4,3) and color red and mask full
  [01]: a rectangle at (7,7) with size (2,3) and color orange and mask full
  [011]: a rectangle at (0,4) with size (1,2) and color blue and mask full
diff: 
delta: (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
   (1703.8 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (3,3) with size (4,3) and color red and mask full
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,6) with color yellow
  [001]: a point at (0,8) with color red
  [0011]: a point at (0,13) with color red
  [0]: a rectangle at (2,3) with size (5,3) and color red and mask full
  [01]: a rectangle at (7,7) with size (2,3) and color orange and mask full
  [011]: a rectangle at (0,4) with size (1,2) and color blue and mask full
diff: 
delta: (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,4)=8  (2,5)=0  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
! 3 wrong pixels (generated / expected)

TRAIN 91714a58.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,2) with color orange
  [001]: a point at (0,5) with color pink
  [0011]: a point at (0,7) with color pink
  [0]: a rectangle at (11,2) with size (2,7) and color pink and mask full
  [01]: a rectangle at (3,0) with size (2,4) and color red and mask 1001011
  [011]: a rectangle at (5,0) with size (1,2) and color yellow and mask full
diff: 
delta: (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
   (1599.3 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (11,2) with size (2,7) and color pink and mask full
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,2) with color orange
  [001]: a point at (0,5) with color pink
  [0011]: a point at (0,7) with color pink
  [0]: a rectangle at (10,2) with size (3,8) and color pink and mask 11111110111111110000000
  [01]: a rectangle at (3,0) with size (2,4) and color red and mask 1001011
  [011]: a rectangle at (5,0) with size (1,2) and color yellow and mask full
diff:   layer[0].mask
delta: (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
! 1 wrong pixels (generated / expected)

TRAIN 91714a58.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,0) with color green
  [001]: a point at (0,6) with color pink
  [0011]: a point at (0,7) with color red
  [0]: a rectangle at (2,8) with size (3,3) and color orange and mask full
  [01]: a rectangle at (12,10) with size (4,1) and color grey and mask full
  [011]: a rectangle at (2,5) with size (1,2) and color cyan and mask full
diff: 
delta: (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
   (1208.5 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,8) with size (3,3) and color orange and mask full
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,0) with color green
  [001]: a point at (0,6) with color pink
  [0011]: a point at (0,7) with color red
  [0]: a rectangle at (2,7) with size (3,4) and color orange and mask 111111101110
  [01]: a rectangle at (12,10) with size (4,1) and color grey and mask full
  [011]: a rectangle at (2,5) with size (1,2) and color cyan and mask full
diff:   layer[0].mask
delta: (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
! 1 wrong pixels (generated / expected)

TRAIN 91714a58.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [00]: a point at (0,2) with color blue
  [001]: a point at (0,3) with color orange
  [0011]: a point at (0,4) with color green
  [0]: a rectangle at (10,5) with size (3,6) and color grey and mask 1111111111111
  [01]: a rectangle at (6,1) with size (1,2) and color blue and mask full
  [011]: a rectangle at (14,6) with size (1,2) and color orange and mask full
diff:   layer[0].mask
delta: (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 1 wrong pixels (generated / expected)

TEST 91714a58.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 43.7 bits (43.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-178] Checking task 9172f3a0.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1788.8 = 1797.8
DL output with Mo: L = 9.0 + 16167.3 = 16176.3
DL input+output M: L = 17.9 + 17956.1 = 17974.0

# learning a model for train pairs
17974.0	
11191.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6163.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4854.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4606.8	OUT DEF: layer[011].size={size}
4390.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4296.9	OUT DEF: layer[0].color={layer[0].color}
4241.3	IN  SHAPE at layer[01]: a point at ? with color ?
4148.3	OUT DEF: layer[01].color={layer[01].color}
3996.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
3750.4	OUT DEF: layer[01].size={size}
3545.7	OUT DEF: layer[0111].pos={size}
3478.9	IN  SHAPE at layer[010]: a point at ? with color ?
3386.7	OUT DEF: layer[011].color={layer[010].color}
3339.3	OUT DEF: layer[0].mask=full
3291.8	OUT DEF: layer[01].mask=full
3244.4	OUT DEF: layer[011].mask=full
3196.9	OUT DEF: layer[0111].mask=full
3165.9	OUT DEF: color=black
3134.9	IN  DEF: color=black
3113.1	OUT DEF: size=(?,?)
2945.2	OUT DEF: size.i=9
2777.3	OUT DEF: size.j=9
2755.5	OUT DEF: layer[0].pos=(?,?)
2666.5	OUT DEF: layer[0].pos.i={layer[0].pos.i}
2644.7	OUT DEF: layer[0].size=(?,?)
2622.9	OUT DEF: layer[01].pos=(?,?)
2534.2	OUT DEF: layer[01].pos.i=6
2445.6	OUT DEF: layer[01].pos.j=6
2423.8	OUT DEF: layer[011].pos=(?,?)
2335.1	OUT DEF: layer[011].pos.j=0
2313.3	OUT DEF: layer[0111].size=(?,?)
2204.6	OUT DEF: layer[0111].size.i={size.i}
2182.8	IN  DEF: size=(?,?)
2075.2	IN  DEF: size.i=3
1967.5	IN  DEF: size.j=3
1945.7	IN  DEF: layer[0].pos=(?,?)
1887.2	IN  DEF: layer[0].pos.i=0
1865.4	IN  DEF: layer[0].size=(?,?)
1779.9	IN  DEF: layer[0].size.j=2
1758.1	IN  DEF: layer[010].pos=(?,?)
1699.6	IN  DEF: layer[010].pos.j=0
1677.8	IN  DEF: layer[01].pos=(?,?)
1619.2	IN  DEF: layer[01].pos.i=2
1560.7	IN  DEF: layer[01].pos.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},?) with size (?,?) and color {layer[0].color} and mask full
  [01]: a rectangle at (6,6) with size {size} and color {layer[01].color} and mask full
  [011]: a rectangle at (?,0) with size {size} and color {layer[010].color} and mask full
  [0111]: a rectangle at {size} with size ({size.i},?) and color ? and mask full
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,?) with size (?,2) and color ? and mask ?
  [010]: a point at (?,0) with color ?
  [01]: a point at (2,2) with color ?

DL input  with Mi: L = 71.5 + 708.8 = 780.3
DL output with Mo: L = 118.3 + 662.1 = 780.3
DL input+output M: L = 189.8 + 1370.9 = 1560.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color green and mask full
  [010]: a point at (1,0) with color orange
  [01]: a point at (2,2) with color yellow
diff: 
delta: (1,1)=4 
   (40.5 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color green and mask full
  [01]: a rectangle at (6,6) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (3,0) with size (3,3) and color orange and mask full
  [0111]: a rectangle at (3,3) with size (3,3) and color yellow and mask full
diff: 
delta:
   (32.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color green and mask full
  [010]: a point at (1,0) with color orange
  [01]: a point at (2,2) with color yellow
diff: 
delta: (1,1)=4 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color green and mask full
  [010]: a point at (1,1) with color yellow
  [01]: a point at (2,2) with color yellow
diff:   layer[010].pos.j
delta: (1,0)=7#
! 32 wrong pixels (generated / expected)

TRAIN 9172f3a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask 1110
  [010]: a point at (0,0) with color green
  [01]: a point at (2,2) with color green
diff: 
delta:
   (30.4 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,6) with size (6,3) and color red and mask full
  [01]: a rectangle at (6,6) with size (3,3) and color green and mask full
  [011]: a rectangle at (0,0) with size (3,3) and color green and mask full
  [0111]: a rectangle at (3,3) with size (3,6) and color red and mask full
diff: 
delta:
   (34.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color red and mask 1110
  [010]: a point at (0,0) with color green
  [01]: a point at (2,2) with color green
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,2) and color black and mask 110110
  [010]: a point at (0,0) with color green
  [01]: a point at (2,2) with color green
diff:   color
delta:
! 31 wrong pixels (generated / expected)

TRAIN 9172f3a0.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color blue and mask full
  [010]: a point at (2,0) with color pink
  [01]: a point at (1,2) with color pink
diff:   layer[01].pos.i  layer[0].size.j
delta: (2,1)=1 
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color blue and mask full
  [010]: a point at (2,0) with color pink
  [01]: a point at (2,1) with color blue
diff:   layer[01].pos.j  layer[0].size.j
delta: (1,2)=6 
! 60 wrong pixels (generated / expected)

TEST 9172f3a0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 662.1 bits (662.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-177] Checking task 928ad970.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8667.1 = 8676.1
DL output with Mo: L = 9.0 + 27243.1 = 27252.1
DL input+output M: L = 17.9 + 35910.2 = 35928.1

# learning a model for train pairs
35928.1	
15462.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11160.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10529.0	OUT DEF: size={size}
10389.1	OUT DEF: layer[0].color={layer[0].color}
10310.3	OUT SHAPE at layer[01]: a point at ? with color ?
10172.3	OUT DEF: layer[01].color=grey
10087.5	OUT SHAPE at layer[011]: a point at ? with color ?
9949.5	OUT DEF: layer[011].color=grey
9854.4	OUT SHAPE at layer[0111]: a point at ? with color ?
9716.4	OUT DEF: layer[0111].color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a point at ? with color grey
  [011]: a point at ? with color grey
  [0111]: a point at ? with color grey
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 4348.3 = 4374.9
DL output with Mo: L = 58.8 + 5282.7 = 5341.5
DL input+output M: L = 85.4 + 9631.0 = 9716.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  [0]: a rectangle at (4,5) with size (4,3) and color blue and mask 111101101111
diff: 
delta: (1,4)=5# (6,1)=5# (6,11)=5# (11,4)=5#
   (142.9 bits)
data: a background with size (12,13) and color black and layers
  [0]: a rectangle at (2,2) with size (9,9) and color blue and mask 111111111100000001100000001100111001100101001100101001100111001100000001111111111
  [01]: a point at (1,4) with color grey
  [011]: a point at (6,1) with color grey
  [0111]: a point at (6,11) with color grey
diff: 
delta: (11,4)=5#
   (168.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  [0]: a rectangle at (4,5) with size (4,3) and color blue and mask 111101101111
diff: 
delta: (1,4)=5# (6,1)=5# (6,11)=5# (11,4)=5#
! 50 wrong pixels (generated / expected)

TRAIN 928ad970.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,13) and color black and layers
  [0]: a rectangle at (5,4) with size (3,3) and color green and mask 111101111
diff: 
delta: (1,5)=5# (5,1)=5# (8,10)=5# (12,5)=5#
   (141.3 bits)
data: a background with size (15,13) and color black and layers
  [0]: a rectangle at (2,2) with size (10,8) and color green and mask 11111111100000011000000110000001100111011001010110011101100000011000000111111111
  [01]: a point at (1,5) with color grey
  [011]: a point at (5,1) with color grey
  [0111]: a point at (8,10) with color grey
diff: 
delta: (12,5)=5#
   (169.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  [0]: a rectangle at (5,4) with size (3,3) and color green and mask 111101111
diff: 
delta: (1,5)=5# (5,1)=5# (8,10)=5# (12,5)=5#
! 48 wrong pixels (generated / expected)

TRAIN 928ad970.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (5,4) with size (4,4) and color yellow and mask 1111100110011111
diff: 
delta: (2,6)=5# (6,12)=5# (8,1)=5# (13,7)=5#
   (150.7 bits)
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (3,2) with size (10,10) and color yellow and mask 1111111111100000000110000000011000000001100011110110001001011000100101100011110110000000011111111111
  [01]: a point at (2,6) with color grey
  [011]: a point at (6,12) with color grey
  [0111]: a point at (8,1) with color grey
diff: 
delta: (13,7)=5#
   (190.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (5,4) with size (4,4) and color yellow and mask 1111100110011111
diff: 
delta: (2,6)=5# (6,12)=5# (8,1)=5# (13,7)=5#
! 56 wrong pixels (generated / expected)

TRAIN 928ad970.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (5,5) with size (3,4) and color cyan and mask 111110011111
diff: 
delta: (1,7)=5# (6,2)=5# (9,12)=5# (13,5)=5#
! 54 wrong pixels (generated / expected)

TEST 928ad970.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5282.7 bits (5282.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-176] Checking task 93b581b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2604.4 = 2613.4
DL output with Mo: L = 9.0 + 9318.5 = 9327.5
DL input+output M: L = 17.9 + 11922.9 = 11940.9

# learning a model for train pairs
11940.9	
10786.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9933.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9071.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8341.9	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7851.4	OUT DEF: size={size}
7771.9	OUT SHAPE at layer[01111]: a point at ? with color ?
7686.8	OUT SHAPE at layer[011111]: a point at ? with color ?
7591.4	OUT SHAPE at layer[0111111]: a point at ? with color ?
7471.0	OUT SHAPE at layer[01111111]: a point at ? with color ?
7393.3	IN  SHAPE at layer[0]: a point at ? with color ?
6972.9	OUT DEF: layer[01111]={layer[0]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: {layer[0]}
  [011111]: a point at ? with color ?
  [0111111]: a point at ? with color ?
  [01111111]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 19.9 + 2515.4 = 2535.4
DL output with Mo: L = 105.6 + 4332.0 = 4437.6
DL input+output M: L = 125.5 + 6847.4 = 6972.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,2) with color brown
diff: 
delta: (2,3)=3  (3,2)=7# (3,3)=8 
   (83.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (0,4) with size (2,2) and color orange and mask full
  [011]: a rectangle at (4,0) with size (2,2) and color green and mask full
  [0111]: a rectangle at (4,4) with size (2,2) and color brown and mask full
  [01111]: a point at (2,2) with color brown
  [011111]: a point at (2,3) with color green
  [0111111]: a point at (3,2) with color orange
  [01111111]: a point at (3,3) with color cyan
diff: 
delta:
   (147.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,2) with color brown
diff: 
delta: (2,3)=3  (3,2)=7# (3,3)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,3) with color green
diff: 
delta: (2,2)=9# (3,2)=7# (3,3)=8 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a point at (3,2) with color orange
diff: 
delta: (2,2)=9# (2,3)=3  (3,3)=8 
! 19 wrong pixels (generated / expected)

TRAIN 93b581b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,1) with color yellow
diff: 
delta: (1,2)=6  (2,1)=2  (2,2)=1 
   (83.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (1,2) and color red and mask full
  [011]: a rectangle at (3,0) with size (2,1) and color pink and mask full
  [0111]: a rectangle at (0,0) with size (1,1) and color blue and mask full
  [01111]: a point at (1,1) with color yellow
  [011111]: a point at (1,2) with color pink
  [0111111]: a point at (2,1) with color red
  [01111111]: a point at (2,2) with color blue
diff: 
delta:
   (139.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,1) with color yellow
diff: 
delta: (1,2)=6  (2,1)=2  (2,2)=1 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,2) with color pink
diff: 
delta: (1,1)=4  (2,1)=2  (2,2)=1 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,1) with color red
diff: 
delta: (1,1)=4  (1,2)=6  (2,2)=1 
! 14 wrong pixels (generated / expected)

TRAIN 93b581b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,2) with color green
diff: 
delta: (2,3)=6  (3,2)=5# (3,3)=2 
   (83.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask full
  [01]: a rectangle at (0,4) with size (2,2) and color grey and mask full
  [011]: a rectangle at (4,0) with size (2,2) and color pink and mask full
  [0111]: a rectangle at (4,4) with size (2,2) and color green and mask full
  [01111]: a point at (2,2) with color green
  [011111]: a point at (2,3) with color pink
  [0111111]: a point at (3,2) with color grey
  [01111111]: a point at (3,3) with color red
diff: 
delta:
   (147.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,2) with color green
diff: 
delta: (2,3)=6  (3,2)=5# (3,3)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (2,3) with color pink
diff: 
delta: (2,2)=3  (3,2)=5# (3,3)=2 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a point at (3,2) with color grey
diff: 
delta: (2,2)=3  (2,3)=6  (3,3)=2 
! 19 wrong pixels (generated / expected)

TRAIN 93b581b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (3,2) with color green
diff: 
delta: (3,3)=1  (4,2)=2  (4,3)=5#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (3,3) with color blue
diff: 
delta: (3,2)=3  (4,2)=2  (4,3)=5#
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a point at (4,2) with color red
diff: 
delta: (3,2)=3  (3,3)=1  (4,3)=5#
! 17 wrong pixels (generated / expected)

TEST 93b581b8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4332.0 bits (4332.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-175] Checking task 941d9a10.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24279.8 = 24288.8
DL output with Mo: L = 9.0 + 28159.9 = 28168.9
DL input+output M: L = 17.9 + 52439.7 = 52457.7

# learning a model for train pairs
52457.7	
32921.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17115.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12996.7	OUT DEF: layer[0]={layer[0]}
9780.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8439.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7861.4	OUT DEF: size={size}
7315.5	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6996.8	OUT DEF: layer[011].pos={layer[0].pos}
6858.8	OUT DEF: layer[011].color=blue
6720.8	OUT DEF: layer[01].color=red
6582.8	OUT DEF: layer[0111].color=green
6444.8	IN  DEF: layer[0].color=grey
6374.2	OUT DEF: layer[01].mask=full
6303.5	OUT DEF: layer[011].mask=full
6232.9	OUT DEF: layer[0111].mask=full
6187.3	OUT DEF: color=black
6141.7	IN  DEF: color=black
6106.6	OUT DEF: layer[01].pos=(?,?)
5970.2	OUT DEF: layer[01].pos.i=4
5935.2	OUT DEF: layer[01].size=(?,?)
5900.2	OUT DEF: layer[011].size=(?,?)
5865.2	OUT DEF: layer[0111].pos=(?,?)
5830.2	OUT DEF: layer[0111].size=(?,?)
5795.2	IN  DEF: size=(?,?)
5531.8	IN  DEF: size.i=10
5268.5	IN  DEF: size.j=10
5233.5	IN  DEF: layer[0].pos=(?,?)
5095.5	IN  DEF: layer[0].pos.i=0
4957.5	IN  DEF: layer[0].pos.j=0
4922.5	IN  DEF: layer[0].size=(?,?)
4659.2	IN  DEF: layer[0].size.i=10
4395.8	IN  DEF: layer[0].size.j=10

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (4,?) with size (?,?) and color red and mask full
  [011]: a rectangle at {layer[0].pos} with size (?,?) and color blue and mask full
  [0111]: a rectangle at (?,?) with size (?,?) and color green and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask ?

DL input  with Mi: L = 65.2 + 3069.7 = 3134.8
DL output with Mo: L = 86.6 + 1174.4 = 1261.0
DL input+output M: L = 151.8 + 4244.0 = 4395.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 10000100001000010011111111110010000100001000010000100001001111111111001000010000100001000010000100
diff: 
delta:
   (102.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 10000100001000010011111111110010000100001000010000100001001111111111001000010000100001000010000100
  [01]: a rectangle at (4,3) with size (3,4) and color red and mask full
  [011]: a rectangle at (0,0) with size (3,2) and color blue and mask full
  [0111]: a rectangle at (8,8) with size (2,2) and color green and mask full
diff: 
delta:
   (44.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 10000100001000010011111111110010000100001000010000100001001111111111001000010000100001000010000100
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 941d9a10.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 100001000111111111101000010001111111111010000100001000010001111111111010000100011111111110100001000
diff: 
delta:
   (102.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 100001000111111111101000010001111111111010000100001000010001111111111010000100011111111110100001000
  [01]: a rectangle at (4,4) with size (2,4) and color red and mask full
  [011]: a rectangle at (0,0) with size (1,3) and color blue and mask full
  [0111]: a rectangle at (9,9) with size (1,1) and color green and mask full
diff: 
delta:
   (37.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 100001000111111111101000010001111111111010000100001000010001111111111010000100011111111110100001000
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 941d9a10.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101010010010101001001010100101111111111010101001001010100101111111111010101001001010100100101010010
diff: 
delta:
   (102.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101010010010101001001010100101111111111010101001001010100101111111111010101001001010100100101010010
  [01]: a rectangle at (4,5) with size (2,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (3,1) and color blue and mask full
  [0111]: a rectangle at (7,9) with size (3,1) and color green and mask full
diff: 
delta:
   (36.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101010010010101001001010100101111111111010101001001010100101111111111010101001001010100100101010010
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 941d9a10.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101001010111111111101010010101111111111010100101011111111110101001010010100101011111111110101001010
diff: 
delta:
! 4 wrong pixels (generated / expected)

TEST 941d9a10.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1174.4 bits (1174.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-174] Checking task 94f9d214.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11766.7 = 11775.7
DL output with Mo: L = 9.0 + 2404.0 = 2413.0
DL input+output M: L = 17.9 + 14170.7 = 14188.7

# learning a model for train pairs
14188.7	
9525.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7167.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6668.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6484.1	OUT DEF: layer[0].color=red
6299.6	IN  DEF: layer[01].color=green
6239.5	OUT DEF: color=black
6191.2	OUT DEF: size=(?,?)
5938.8	OUT DEF: size.j={size.j}
5687.7	OUT DEF: size.i={size.j}
5639.5	OUT DEF: layer[0].pos=(?,?)
5591.3	OUT DEF: layer[0].size=(?,?)
5543.0	IN  DEF: size=(?,?)
5215.2	IN  DEF: size.i=8
4965.3	IN  DEF: size.j=4
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.j},{size.j}) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color red and mask ?
WHERE (Mi)
a background with size (8,4) and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color green and mask ?

DL input  with Mi: L = 57.3 + 3886.9 = 3944.2
DL output with Mo: L = 42.2 + 978.8 = 1021.0
DL input+output M: L = 99.6 + 4865.7 = 4965.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 1010111111011000
  [01]: a rectangle at (1,1) with size (1,2) and color green and mask full
diff: 
delta: (3,0)=3  (3,3)=3 
   (101.6 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color red and mask full
diff: 
delta: (3,2)=2 
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 1010111111011000
  [01]: a rectangle at (1,1) with size (1,2) and color green and mask full
diff: 
delta: (3,0)=3  (3,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 94f9d214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,4) and color blue and layers
  [0]: a rectangle at (1,0) with size (7,4) and color black and mask 110110101110111111000111001
  [01]: a rectangle at (0,0) with size (3,4) and color green and mask full
diff: 
delta: (3,0)=3 
   (109.8 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (1,0) with size (3,3) and color red and mask 110001001
diff: 
delta:
   (28.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color blue and layers
  [0]: a rectangle at (1,0) with size (7,4) and color black and mask 110110101110111111000111001
  [01]: a rectangle at (0,0) with size (3,4) and color green and mask full
diff: 
delta: (3,0)=3 
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 110001100111111
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask 1111010010100110
diff: 
delta:
   (88.6 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (1,2) with size (2,2) and color red and mask 1001
diff: 
delta:
   (21.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 110001100111111
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask 1111010010100110
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 1110110111100111
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask 1011110100011111
diff: 
delta:
   (88.6 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (2,1) with size (1,1) and color red and mask full
diff: 
delta:
   (13.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 1110110111100111
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask 1011110100011111
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 94f9d214.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color blue and mask 11001011001100
  [01]: a rectangle at (0,0) with size (4,4) and color green and mask 111100001111010
diff: 
delta:
! 6 wrong pixels (generated / expected)

TEST 94f9d214.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 978.8 bits (978.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-173] Checking task 952a094c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12137.9 = 12146.9
DL output with Mo: L = 9.0 + 12137.9 = 12146.9
DL input+output M: L = 17.9 + 24275.8 = 24293.8

# learning a model for train pairs
24293.8	
16897.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9501.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7633.2	OUT DEF: layer[0]={layer[0]}
7054.9	OUT DEF: size={size}
6976.1	OUT SHAPE at layer[01]: a point at ? with color ?
6838.1	OUT DEF: layer[01].color=green
6753.3	OUT SHAPE at layer[011]: a point at ? with color ?
6615.3	OUT DEF: layer[011].color=red
6520.2	OUT SHAPE at layer[0111]: a point at ? with color ?
6400.0	OUT SHAPE at layer[01111]: a point at ? with color ?
6322.1	IN  SHAPE at layer[01]: a point at ? with color ?
6183.0	OUT DEF: layer[01111].color={layer[01].color}
6099.3	IN  SHAPE at layer[010]: a point at ? with color ?
6005.0	IN  SHAPE at layer[0101]: a point at ? with color ?
5885.5	IN  SHAPE at layer[011]: a point at ? with color ?
5839.9	OUT DEF: color=black
5794.3	IN  DEF: color=black
5759.3	OUT DEF: layer[01].pos=(?,?)
5627.9	OUT DEF: layer[01].pos.j={layer[0].pos.j - 1}
5592.9	OUT DEF: layer[011].pos=(?,?)
5462.2	OUT DEF: layer[011].pos.j={layer[0].pos.j + layer[0].size.j}
5427.2	OUT DEF: layer[0111].pos=(?,?)
5296.4	OUT DEF: layer[0111].pos.i={layer[0].pos.i + layer[0].size.i}
5261.4	OUT DEF: layer[01111].pos=(?,?)
5129.9	OUT DEF: layer[01111].pos.i={layer[0].pos.i - 1}
5094.9	IN  DEF: size=(?,?)
4831.5	IN  DEF: size.i=10
4568.2	IN  DEF: size.j=10
4533.2	IN  DEF: layer[0].pos=(?,?)
4498.2	IN  DEF: layer[0].size=(?,?)
4463.2	IN  DEF: layer[010].pos=(?,?)
4428.1	IN  DEF: layer[0101].pos=(?,?)
4393.1	IN  DEF: layer[01].pos=(?,?)
4358.1	IN  DEF: layer[011].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a point at (?,{layer[0].pos.j - 1}) with color green
  [011]: a point at (?,{layer[0].pos.j + layer[0].size.j}) with color red
  [0111]: a point at ({layer[0].pos.i + layer[0].size.i},?) with color ?
  [01111]: a point at ({layer[0].pos.i - 1},?) with color {layer[01].color}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [010]: a point at (?,?) with color ?
  [0101]: a point at (?,?) with color ?
  [01]: a point at (?,?) with color ?
  [011]: a point at (?,?) with color ?

DL input  with Mi: L = 107.5 + 3446.7 = 3554.2
DL output with Mo: L = 107.3 + 696.6 = 803.9
DL input+output M: L = 214.8 + 4143.3 = 4358.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (5,4) and color cyan and mask 11111001100110011111
  [010]: a point at (3,4) with color yellow
  [0101]: a point at (3,5) with color green
  [01]: a point at (5,5) with color pink
  [011]: a point at (5,4) with color red
diff: 
delta:
   (105.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (5,4) and color cyan and mask 11111001100110011111
  [01]: a point at (7,2) with color green
  [011]: a point at (1,7) with color red
  [0111]: a point at (7,7) with color yellow
  [01111]: a point at (1,2) with color pink
diff: 
delta:
   (23.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (5,4) and color cyan and mask 11111001100110011111
  [010]: a point at (3,4) with color yellow
  [0101]: a point at (3,5) with color green
  [01]: a point at (5,4) with color red
  [011]: a point at (5,5) with color pink
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (5,4) and color cyan and mask 11111001100110011111
  [010]: a point at (3,4) with color yellow
  [0101]: a point at (3,5) with color green
  [01]: a point at (5,5) with color pink
  [011]: a point at (5,4) with color red
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (5,4) and color cyan and mask 11111001100110011111
  [010]: a point at (3,4) with color yellow
  [0101]: a point at (5,4) with color red
  [01]: a point at (3,5) with color green
  [011]: a point at (5,5) with color pink
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 952a094c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color orange and mask 111111100001100001100001100001111111
  [010]: a point at (3,3) with color red
  [0101]: a point at (3,6) with color cyan
  [01]: a point at (6,3) with color brown
  [011]: a point at (6,6) with color green
diff: 
delta:
   (123.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color orange and mask 111111100001100001100001100001111111
  [01]: a point at (1,1) with color green
  [011]: a point at (8,8) with color red
  [0111]: a point at (8,1) with color cyan
  [01111]: a point at (1,8) with color brown
diff: 
delta:
   (23.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color orange and mask 111111100001100001100001100001111111
  [010]: a point at (3,3) with color red
  [0101]: a point at (3,6) with color cyan
  [01]: a point at (6,3) with color brown
  [011]: a point at (6,6) with color green
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color orange and mask 111111100001100001100001100001111111
  [010]: a point at (3,3) with color red
  [0101]: a point at (3,6) with color cyan
  [01]: a point at (6,6) with color green
  [011]: a point at (6,3) with color brown
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color orange and mask 111111100001100001100001100001111111
  [010]: a point at (3,3) with color red
  [0101]: a point at (6,3) with color brown
  [01]: a point at (3,6) with color cyan
  [011]: a point at (6,6) with color green
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 952a094c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,6) and color blue and mask 111111100001100001100001111111
  [010]: a point at (2,2) with color red
  [0101]: a point at (2,5) with color grey
  [01]: a point at (4,2) with color pink
  [011]: a point at (4,5) with color green
diff: 
delta:
   (116.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,6) and color blue and mask 111111100001100001100001111111
  [01]: a point at (0,0) with color green
  [011]: a point at (6,7) with color red
  [0111]: a point at (6,0) with color grey
  [01111]: a point at (0,7) with color pink
diff: 
delta:
   (23.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (5,6) and color blue and mask 111111100001100001100001111111
  [010]: a point at (2,2) with color red
  [0101]: a point at (2,5) with color grey
  [01]: a point at (4,2) with color pink
  [011]: a point at (4,5) with color green
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 952a094c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (5,6) and color green and mask 111111100001100001100001111111
  [010]: a point at (4,3) with color pink
  [0101]: a point at (4,6) with color yellow
  [01]: a point at (6,3) with color cyan
  [011]: a point at (6,6) with color red
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (5,6) and color green and mask 111111100001100001100001111111
  [010]: a point at (4,3) with color pink
  [0101]: a point at (4,6) with color yellow
  [01]: a point at (6,6) with color red
  [011]: a point at (6,3) with color cyan
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (5,6) and color green and mask 111111100001100001100001111111
  [010]: a point at (4,3) with color pink
  [0101]: a point at (6,3) with color cyan
  [01]: a point at (4,6) with color yellow
  [011]: a point at (6,6) with color red
diff: 
delta:
! 8 wrong pixels (generated / expected)

TEST 952a094c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 696.6 bits (696.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-172] Checking task 9565186b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3394.1 = 3403.1
DL output with Mo: L = 9.0 + 2808.6 = 2817.6
DL input+output M: L = 17.9 + 6202.7 = 6220.7

# learning a model for train pairs
6220.7	
5246.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4753.0	OUT DEF: size={size}
4325.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3986.4	OUT DEF: layer[0].size={layer[0].size}
3700.3	OUT DEF: layer[0].pos={layer[0].pos}
3606.5	IN  DEF: layer[0].mask=full
3558.2	IN  DEF: size=(?,?)
3340.7	IN  DEF: size.i=3
3123.2	IN  DEF: size.j=3
3075.0	IN  DEF: layer[0].pos=(?,?)
3026.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 43.8 + 2300.6 = 2344.5
DL output with Mo: L = 25.0 + 657.3 = 682.3
DL input+output M: L = 68.8 + 2957.9 = 3026.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (2,2) and color cyan and mask full
diff: 
delta: (1,1)=1 
   (43.2 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (2,2) and color grey and mask full
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (2,2) and color cyan and mask full
diff: 
delta: (1,1)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (2,1) with size (1,2) and color cyan and mask full
diff: 
delta: (1,1)=1  (1,2)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask full
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
   (74.5 bits)
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask 10111
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (2,1) with size (1,2) and color red and mask full
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (1,0) with size (2,1) and color cyan and mask full
diff: 
delta: (1,2)=3  (2,1)=2  (2,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,3) and color blue and mask full
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (1,2) and color cyan and mask full
diff: 
delta:
   (25.1 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (1,2) and color cyan and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 111100111
diff:   layer[0].mask
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (1,3) and color red and mask full
diff: 
delta: (1,0)=8  (1,1)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
diff: 
delta: (0,0)=3  (0,1)=3  (2,1)=1  (2,2)=1 
   (87.3 bits)
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (1,2) and color green and mask full
diff: 
delta: (0,2)=8  (2,0)=8  (2,1)=1  (2,2)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (2,1) with size (1,2) and color blue and mask full
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (2,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,3) and color yellow and mask full
diff: 
delta: (0,0)=3  (0,1)=3  (2,1)=1  (2,2)=1 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,2) with size (3,1) and color red and mask full
diff: 
delta: (0,0)=1  (2,0)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,2) and color green and mask full
diff: 
delta: (0,0)=1  (2,0)=1 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,1) with size (3,1) and color green and mask full
diff: 
delta: (0,0)=1  (1,0)=3  (2,0)=1 
! 9 wrong pixels (generated / expected)

TEST 9565186b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 657.3 bits (657.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-171] Checking task 95990924.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5944.6 = 5953.6
DL output with Mo: L = 9.0 + 11107.4 = 11116.4
DL input+output M: L = 17.9 + 17052.0 = 17070.0

# learning a model for train pairs
17070.0	
15698.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14369.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13518.2	OUT DEF: layer[0]={layer[0]}
12683.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12081.4	OUT DEF: size={size}
11737.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11388.9	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
11302.6	OUT SHAPE at layer[01111]: a point at ? with color ?
11164.6	IN  DEF: layer[0].color=grey
11093.6	OUT DEF: layer[01].mask={layer[0].mask}
11022.6	OUT DEF: layer[011].mask={layer[0].mask}
10951.6	OUT DEF: layer[0111].mask={layer[0].mask}
10881.0	IN  DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color ? and mask {layer[0].mask}
  [011]: a rectangle at ? with size ? and color ? and mask {layer[0].mask}
  [0111]: a rectangle at ? with size ? and color ? and mask {layer[0].mask}
  [01111]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color grey and mask full

DL input  with Mi: L = 26.9 + 4346.6 = 4373.5
DL output with Mo: L = 67.3 + 6440.1 = 6507.5
DL input+output M: L = 94.2 + 10786.8 = 10881.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (2,2) and color grey and mask full
diff: 
delta:
   (41.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (2,2) and color grey and mask full
  [01]: a rectangle at (2,3) with size (1,1) and color blue and mask full
  [011]: a rectangle at (2,6) with size (1,1) and color red and mask full
  [0111]: a rectangle at (5,3) with size (1,1) and color green and mask full
  [01111]: a point at (5,6) with color yellow
diff: 
delta:
   (80.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (2,2) and color grey and mask full
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 95990924.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color grey and mask full
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
   (116.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color grey and mask full
  [01]: a rectangle at (6,6) with size (2,2) and color grey and mask full
  [011]: a rectangle at (1,1) with size (1,1) and color blue and mask full
  [0111]: a rectangle at (1,4) with size (1,1) and color red and mask full
  [01111]: a point at (4,1) with color green
diff: 
delta: (4,4)=4  (5,5)=1  (5,8)=2  (8,5)=3  (8,8)=4 
   (177.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color grey and mask full
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,6) with size (2,2) and color grey and mask full
diff: 
delta: (2,2)=5# (2,3)=5# (3,2)=5# (3,3)=5#
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111001111111100111111111111111111111111111111110011111111001111111111111111111111
diff:   layer[0].mask  layer[0].color
delta:
! 16 wrong pixels (generated / expected)

TRAIN 95990924.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,3) with size (2,2) and color grey and mask full
diff: 
delta: (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
   (277.1 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,3) with size (2,2) and color grey and mask full
  [01]: a rectangle at (4,8) with size (2,2) and color grey and mask full
  [011]: a rectangle at (8,4) with size (2,2) and color grey and mask full
  [0111]: a rectangle at (11,9) with size (2,2) and color grey and mask full
  [01111]: a point at (1,2) with color blue
diff: 
delta: (1,5)=2  (3,7)=1  (3,10)=2  (4,2)=3  (4,5)=4  (6,7)=3  (6,10)=4  (7,3)=1  (7,6)=2  (10,3)=3  (10,6)=4  (10,8)=1  (10,11)=2  (13,8)=3  (13,11)=4 
   (386.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,3) with size (2,2) and color grey and mask full
diff: 
delta: (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,8) with size (2,2) and color grey and mask full
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (8,4) with size (2,2) and color grey and mask full
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 32 wrong pixels (generated / expected)

TRAIN 95990924.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color grey and layers
  [0]: a rectangle at (0,0) with size (15,15) and color black and mask 111111111111111111111111111111111100111111111111100111110011111111111110011111111111111111111111111111111100111111111111100111111111111111111110011111111111110011111111111111111111110011111111001110011111111001111111111111111
diff:   layer[0].mask  layer[0].color
delta:
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (1,1) with size (2,2) and color grey and mask full
diff: 
delta: (1,11)=5# (1,12)=5# (2,11)=5# (2,12)=5# (4,5)=5# (4,6)=5# (5,5)=5# (5,6)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (1,11) with size (2,2) and color grey and mask full
diff: 
delta: (1,1)=5# (1,2)=5# (2,1)=5# (2,2)=5# (4,5)=5# (4,6)=5# (5,5)=5# (5,6)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 46 wrong pixels (generated / expected)

TEST 95990924.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6440.1 bits (6440.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-170] Checking task 963e52fc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6371.1 = 6380.0
DL output with Mo: L = 9.0 + 12812.6 = 12821.6
DL input+output M: L = 17.9 + 19183.7 = 19201.6

# learning a model for train pairs
19201.6	
12919.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10508.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9357.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8651.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8349.4	OUT DEF: layer[0].pos={layer[0].pos}
8046.9	OUT DEF: layer[01].pos={layer[01].pos}
7907.4	OUT DEF: layer[0].color={layer[0].color}
7768.0	OUT DEF: layer[01].color={layer[01].color}
7697.3	OUT DEF: layer[01].mask=full
7626.7	IN  DEF: layer[01].mask=full
7581.1	OUT DEF: color=black
7535.5	IN  DEF: color=black
7500.5	OUT DEF: size=(?,?)
7209.1	OUT DEF: size.j={size.j + size.j}
7000.6	OUT DEF: size.i={size.i}
6965.5	OUT DEF: layer[0].size=(?,?)
6856.7	OUT DEF: layer[0].size.i={layer[0].size.i}
6821.7	OUT DEF: layer[01].size=(?,?)
6712.8	OUT DEF: layer[01].size.i={layer[01].size.i}
6677.8	IN  DEF: size=(?,?)
6472.5	IN  DEF: size.i=5
6437.4	IN  DEF: layer[0].pos=(?,?)
6402.4	IN  DEF: layer[0].size=(?,?)
6367.4	IN  DEF: layer[01].pos=(?,?)
6246.7	IN  DEF: layer[01].pos.j=0
6211.7	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i},{size.j + size.j}) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i},?) and color {layer[0].color} and mask ?
  [01]: a rectangle at {layer[01].pos} with size ({layer[01].size.i},?) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (5,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,0) with size (?,?) and color ? and mask full

DL input  with Mi: L = 70.3 + 2576.2 = 2646.5
DL output with Mo: L = 62.5 + 3502.8 = 3565.2
DL input+output M: L = 132.7 + 6079.0 = 6211.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  [0]: a rectangle at (1,1) with size (2,5) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
   (116.2 bits)
data: a background with size (5,12) and color black and layers
  [0]: a rectangle at (1,1) with size (2,11) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta: (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (2,2)=2  (2,4)=2  (2,6)=2  (2,8)=2  (2,10)=2 
   (189.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  [0]: a rectangle at (1,1) with size (2,5) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  [0]: a rectangle at (1,3) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (2,5) and color red and mask full
diff: 
delta: (1,1)=8  (1,5)=8  (2,1)=8  (2,5)=8 
! 20 wrong pixels (generated / expected)

TRAIN 963e52fc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (2,1) with size (1,5) and color green and mask full
  [01]: a rectangle at (2,0) with size (1,7) and color red and mask full
diff: 
delta: (2,3)=2 
   (68.6 bits)
data: a background with size (5,14) and color black and layers
  [0]: a rectangle at (2,1) with size (1,13) and color green and mask full
  [01]: a rectangle at (2,0) with size (1,1) and color red and mask full
diff: 
delta: (2,3)=2  (2,6)=2  (2,9)=2  (2,12)=2 
   (87.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (2,1) with size (1,5) and color green and mask full
  [01]: a rectangle at (2,0) with size (1,7) and color red and mask full
diff: 
delta: (2,3)=2 
! 11 wrong pixels (generated / expected)

TRAIN 963e52fc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,8) and color black and layers
  [0]: a rectangle at (2,0) with size (2,8) and color red and mask 110110110110110
  [01]: a rectangle at (2,0) with size (2,8) and color blue and mask full
diff: 
delta:
   (72.8 bits)
data: a background with size (5,16) and color black and layers
  [0]: a rectangle at (2,0) with size (2,16) and color red and mask 11011011011011010110110110110110
  [01]: a rectangle at (2,0) with size (2,14) and color blue and mask full
diff: 
delta: (2,15)=1 
   (73.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,8) and color black and layers
  [0]: a rectangle at (2,0) with size (2,8) and color red and mask 110110110110110
  [01]: a rectangle at (2,0) with size (2,8) and color blue and mask full
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,8) and color black and layers
  [0]: a rectangle at (2,0) with size (2,2) and color blue and mask 1001
  [01]: a rectangle at (2,0) with size (2,8) and color red and mask full
diff: 
delta: (2,3)=1  (2,6)=1  (3,4)=1  (3,7)=1 
! 30 wrong pixels (generated / expected)

TRAIN 963e52fc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
  [0]: a rectangle at (1,1) with size (2,8) and color blue and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color green and mask full
diff: 
delta: (1,3)=3  (1,6)=3  (2,3)=3  (2,6)=3 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,9) and color black and layers
  [0]: a rectangle at (1,0) with size (2,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (2,8) and color blue and mask full
diff:   layer[01].pos.j
delta: (1,3)=3  (1,6)=3  (2,3)=3  (2,6)=3 
! 32 wrong pixels (generated / expected)

TEST 963e52fc.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3502.8 bits (3502.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-169] Checking task 97999447.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1742.7 = 1751.7
DL output with Mo: L = 9.0 + 8374.2 = 8383.2
DL input+output M: L = 17.9 + 10116.9 = 10134.9

# learning a model for train pairs
10134.9	
8886.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8050.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7489.8	OUT DEF: size={size}
6999.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6900.6	IN  SHAPE at layer[0]: a point at ? with color ?
6590.4	OUT DEF: layer[011].pos={layer[0].pos}
6450.7	OUT DEF: layer[011].color={layer[0].color}
6312.7	OUT DEF: layer[0].color=grey
6174.7	OUT DEF: layer[01].color=grey
6104.1	OUT DEF: layer[01].mask=full
6033.4	OUT DEF: layer[011].mask=full
5987.8	OUT DEF: color=black
5942.2	IN  DEF: color=black
5907.2	OUT DEF: layer[0].pos=(?,?)
5772.6	OUT DEF: layer[0].pos.i={layer[0].pos.i}
5640.0	OUT DEF: layer[0].pos.j=6
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},6) with size ? and color grey and mask ?
  [01]: a rectangle at ? with size ? and color grey and mask full
  [011]: a rectangle at {layer[0].pos} with size ? and color {layer[0].color} and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 18.1 + 1589.4 = 1607.4
DL output with Mo: L = 63.5 + 3969.1 = 4032.6
DL input+output M: L = 81.5 + 5558.5 = 5640.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  [0]: a point at (5,3) with color pink
diff: 
delta: (2,2)=2 
   (52.8 bits)
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (5,6) with size (1,1) and color grey and mask full
  [01]: a rectangle at (2,3) with size (1,5) and color grey and mask full
  [011]: a rectangle at (5,3) with size (1,5) and color pink and mask full
diff: 
delta: (2,2)=2  (2,4)=2  (2,6)=2  (5,4)=5#
   (113.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  [0]: a point at (2,2) with color red
diff: 
delta: (5,3)=6 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  [0]: a point at (5,3) with color pink
diff: 
delta: (2,2)=2 
! 17 wrong pixels (generated / expected)

TRAIN 97999447.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  [0]: a point at (4,1) with color green
diff: 
delta: (1,2)=2  (5,6)=6 
   (74.1 bits)
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (4,6) with size (2,6) and color grey and mask 101010010101
  [01]: a rectangle at (1,3) with size (1,9) and color grey and mask full
  [011]: a rectangle at (4,1) with size (1,11) and color green and mask full
diff: 
delta: (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (4,2)=5# (4,4)=5# (5,6)=6  (5,8)=6  (5,10)=6 
   (248.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  [0]: a point at (1,2) with color red
diff: 
delta: (4,1)=3  (5,6)=6 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  [0]: a point at (4,1) with color green
diff: 
delta: (1,2)=2  (5,6)=6 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,12) and color black and layers
  [0]: a point at (5,6) with color pink
diff: 
delta: (1,2)=2  (4,1)=3 
! 32 wrong pixels (generated / expected)

TRAIN 97999447.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  [0]: a point at (3,3) with color cyan
diff: 
delta:
   (32.0 bits)
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (3,6) with size (1,1) and color grey and mask full
  [01]: a rectangle at (3,4) with size (1,1) and color grey and mask full
  [011]: a rectangle at (3,3) with size (1,5) and color cyan and mask full
diff: 
delta:
   (34.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  [0]: a point at (3,3) with color cyan
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 97999447.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  [0]: a point at (1,3) with color green
diff: 
delta: (2,2)=4  (4,4)=8  (6,3)=2 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  [0]: a point at (2,2) with color yellow
diff: 
delta: (1,3)=3  (4,4)=8  (6,3)=2 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,8) and color black and layers
  [0]: a point at (4,4) with color cyan
diff: 
delta: (1,3)=3  (2,2)=4  (6,3)=2 
! 26 wrong pixels (generated / expected)

TEST 97999447.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3969.1 bits (3969.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-168] Checking task 97a05b5b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 65202.2 = 65211.2
DL output with Mo: L = 9.0 + 7423.3 = 7432.3
DL input+output M: L = 17.9 + 72625.6 = 72643.5

# learning a model for train pairs
72643.5	
26448.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24141.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
22813.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
21728.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
21159.1	OUT DEF: size={layer[0].size}
20921.6	OUT DEF: color={layer[0].color}
20783.6	IN  DEF: layer[0].color=red
20712.9	IN  DEF: layer[011].mask=full
20642.3	IN  DEF: layer[0111].mask=full
20596.7	IN  DEF: color=black
20561.6	IN  DEF: size=(?,?)
20526.6	IN  DEF: layer[0].pos=(?,?)
20491.6	IN  DEF: layer[0].size=(?,?)
20456.6	IN  DEF: layer[01].pos=(?,?)
20421.6	IN  DEF: layer[01].size=(?,?)
20259.0	IN  DEF: layer[01].size.i=3
20096.4	IN  DEF: layer[01].size.j=3
20061.4	IN  DEF: layer[011].pos=(?,?)
20026.4	IN  DEF: layer[011].size=(?,?)
19863.8	IN  DEF: layer[011].size.i=3
19287.7	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
19217.0	IN  DEF: layer[01111].mask=full
19171.4	IN  DEF: color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color {layer[0].color} and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color red and mask ?
  [01]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (3,?) and color ? and mask full
  [0111]: a rectangle at ? with size ? and color ? and mask full
  [01111]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 127.7 + 12417.6 = 12545.3
DL output with Mo: L = 12.7 + 6613.4 = 6626.1
DL input+output M: L = 140.4 + 19031.0 = 19171.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,19) and color black and layers
  [0]: a rectangle at (1,2) with size (17,9) and color red and mask 111111111100011001110111011110111001111111111111111111111111111111111111111101111111000111111101111111111111111111111101111111101111001101111101111111111
  [01]: a rectangle at (7,14) with size (3,3) and color green and mask full
  [011]: a rectangle at (20,3) with size (3,3) and color yellow and mask full
  [0111]: a rectangle at (18,14) with size (2,3) and color red and mask full
  [01111]: a rectangle at (2,13) with size (3,3) and color red and mask full
diff: 
delta: (2,13)=1  (2,15)=1  (4,13)=1  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
   (770.4 bits)
data: a background with size (17,9) and color red and layers
diff: 
delta: (1,2)=4  (1,3)=4  (1,6)=3  (1,8)=3  (2,3)=4  (2,6)=3  (2,8)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,6)=3  (3,8)=3  (6,3)=1  (6,5)=1  (8,3)=1  (8,5)=1  (13,0)=8  (13,5)=5# (13,7)=5# (14,0)=8  (14,1)=8  (14,5)=5# (14,7)=5# (15,0)=8 
   (445.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  [0]: a rectangle at (1,2) with size (17,9) and color red and mask 111111111100011001110111011110111001111111111111111111111111111111111111111101111111000111111101111111111111111111111101111111101111001101111101111111111
  [01]: a rectangle at (7,14) with size (3,3) and color green and mask full
  [011]: a rectangle at (20,3) with size (3,3) and color yellow and mask full
  [0111]: a rectangle at (18,14) with size (2,3) and color red and mask full
  [01111]: a rectangle at (2,13) with size (3,3) and color red and mask full
diff: 
delta: (2,13)=1  (2,15)=1  (4,13)=1  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
! 24 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (1,1) with size (8,8) and color red and mask 1111111110011111101011111100111111111111111100011111101111111111
  [01]: a rectangle at (13,5) with size (3,3) and color red and mask 110101011
  [011]: a rectangle at (11,1) with size (3,2) and color red and mask full
  [0111]: a rectangle at (11,3) with size (3,1) and color yellow and mask full
  [01111]: a rectangle at (13,5) with size (3,3) and color green and mask full
diff: 
delta: (11,1)=4  (13,1)=4 
   (253.0 bits)
data: a background with size (8,8) and color red and layers
diff: 
delta: (1,1)=4  (1,3)=4  (3,1)=4  (3,2)=4  (3,3)=4  (4,6)=3  (5,5)=3  (6,4)=3 
   (141.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  [0]: a rectangle at (1,1) with size (8,8) and color red and mask 1111111110011111101011111100111111111111111100011111101111111111
  [01]: a rectangle at (13,5) with size (3,3) and color red and mask 110101011
  [011]: a rectangle at (11,1) with size (3,2) and color red and mask full
  [0111]: a rectangle at (11,3) with size (3,1) and color yellow and mask full
  [01111]: a rectangle at (13,5) with size (3,3) and color green and mask full
diff: 
delta: (11,1)=4  (13,1)=4 
! 8 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,12) and color black and layers
  [0]: a rectangle at (6,1) with size (9,9) and color red and mask 111111111111111111111111111111111111111110111111100011111110111111111111111111111
  [01]: a rectangle at (1,5) with size (3,3) and color red and mask 10111010
  [011]: a rectangle at (1,5) with size (3,1) and color cyan and mask full
  [0111]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01111]: a rectangle at (3,7) with size (1,1) and color cyan and mask full
diff: 
delta:
   (218.4 bits)
data: a background with size (9,9) and color red and layers
diff: 
delta: (2,2)=8  (2,4)=8  (4,2)=8  (4,4)=8 
   (73.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  [0]: a rectangle at (6,1) with size (9,9) and color red and mask 111111111111111111111111111111111111111110111111100011111110111111111111111111111
  [01]: a rectangle at (1,5) with size (3,3) and color red and mask 10111010
  [011]: a rectangle at (1,5) with size (3,1) and color cyan and mask full
  [0111]: a rectangle at (1,7) with size (1,1) and color cyan and mask full
  [01111]: a rectangle at (3,7) with size (1,1) and color cyan and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,15) and color black and layers
  [0]: a rectangle at (1,2) with size (8,12) and color red and mask 111111111111110001111111111111111111111111111111111110110011111110011001101110111101111111111111
  [01]: a rectangle at (11,1) with size (3,3) and color blue and mask 111101111
  [011]: a rectangle at (16,3) with size (3,3) and color yellow and mask full
  [0111]: a rectangle at (11,9) with size (3,2) and color green and mask full
  [01111]: a rectangle at (15,11) with size (3,3) and color red and mask full
diff: 
delta: (11,8)=2  (12,2)=2  (12,8)=2  (12,9)=2  (13,8)=2  (15,11)=8  (15,12)=8  (16,4)=2  (16,11)=8  (17,4)=2  (17,13)=8  (18,4)=2 
! 23 wrong pixels (generated / expected)

TEST 97a05b5b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6613.4 bits (6613.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-167] Checking task 98cf29f8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 31313.2 = 31322.2
DL output with Mo: L = 9.0 + 29226.1 = 29235.1
DL input+output M: L = 17.9 + 60539.3 = 60557.2

# learning a model for train pairs
60557.2	
39177.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17815.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11919.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6814.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5788.9	OUT DEF: layer[0]={layer[0]}
5131.4	OUT DEF: size={size}
4754.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4329.6	OUT DEF: layer[01].size={layer[01].size}
4190.5	OUT DEF: layer[01].color={layer[01].color}
4119.9	OUT DEF: layer[01].mask=full
4049.2	IN  DEF: layer[0].mask=full
3978.5	IN  DEF: layer[01].mask=full
3907.9	IN  DEF: layer[011].mask=full
3862.3	OUT DEF: color=black
3816.7	IN  DEF: color=black
3781.7	OUT DEF: layer[01].pos=(?,?)
3746.6	IN  DEF: size=(?,?)
3711.6	IN  DEF: layer[0].pos=(?,?)
3676.6	IN  DEF: layer[0].size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size {layer[01].size} and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 68.9 + 3255.4 = 3324.3
DL output with Mo: L = 33.8 + 318.5 = 352.3
DL input+output M: L = 102.6 + 3574.0 = 3676.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,14) and color black and layers
  [0]: a rectangle at (1,1) with size (3,7) and color yellow and mask full
  [01]: a rectangle at (8,2) with size (3,4) and color grey and mask full
  [011]: a rectangle at (4,3) with size (7,1) and color grey and mask full
diff: 
delta:
   (106.8 bits)
data: a background with size (17,14) and color black and layers
  [0]: a rectangle at (1,1) with size (3,7) and color yellow and mask full
  [01]: a rectangle at (4,2) with size (3,4) and color grey and mask full
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  [0]: a rectangle at (1,1) with size (3,7) and color yellow and mask full
  [01]: a rectangle at (8,2) with size (3,4) and color grey and mask full
  [011]: a rectangle at (4,3) with size (7,1) and color grey and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  [0]: a rectangle at (1,1) with size (3,7) and color yellow and mask full
  [01]: a rectangle at (4,3) with size (7,1) and color grey and mask full
  [011]: a rectangle at (8,2) with size (3,4) and color grey and mask full
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,14) and color black and layers
  [0]: a rectangle at (8,2) with size (3,4) and color grey and mask full
  [01]: a rectangle at (1,1) with size (3,7) and color yellow and mask full
  [011]: a rectangle at (4,3) with size (7,1) and color grey and mask full
diff: 
delta:
! 42 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (3,7) with size (7,7) and color red and mask full
  [01]: a rectangle at (5,1) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (6,1) with size (1,6) and color yellow and mask full
diff: 
delta:
   (107.8 bits)
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (3,7) with size (7,7) and color red and mask full
  [01]: a rectangle at (5,4) with size (3,3) and color yellow and mask full
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (3,7) with size (7,7) and color red and mask full
  [01]: a rectangle at (5,1) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (6,1) with size (1,6) and color yellow and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (3,7) with size (7,7) and color red and mask full
  [01]: a rectangle at (6,1) with size (1,6) and color yellow and mask full
  [011]: a rectangle at (5,1) with size (3,3) and color yellow and mask full
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (5,1) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (3,7) with size (7,7) and color red and mask full
  [011]: a rectangle at (6,1) with size (1,6) and color yellow and mask full
diff: 
delta:
! 104 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (1,6) with size (2,5) and color red and mask full
  [01]: a rectangle at (7,3) with size (6,8) and color green and mask full
  [011]: a rectangle at (3,7) with size (10,1) and color green and mask full
diff: 
delta:
   (111.0 bits)
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (1,6) with size (2,5) and color red and mask full
  [01]: a rectangle at (3,3) with size (6,8) and color green and mask full
diff: 
delta:
   (10.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (7,3) with size (6,8) and color green and mask full
  [01]: a rectangle at (1,6) with size (2,5) and color red and mask full
  [011]: a rectangle at (3,7) with size (10,1) and color green and mask full
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (7,3) with size (6,8) and color green and mask full
  [01]: a rectangle at (3,7) with size (10,1) and color green and mask full
  [011]: a rectangle at (1,6) with size (2,5) and color red and mask full
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,19) and color black and layers
  [0]: a rectangle at (1,6) with size (2,5) and color red and mask full
  [01]: a rectangle at (7,3) with size (6,8) and color green and mask full
  [011]: a rectangle at (3,7) with size (10,1) and color green and mask full
diff: 
delta:
! 62 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  [0]: a rectangle at (3,1) with size (8,5) and color green and mask full
  [01]: a rectangle at (4,11) with size (3,4) and color orange and mask full
  [011]: a rectangle at (4,6) with size (1,9) and color orange and mask full
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,17) and color black and layers
  [0]: a rectangle at (3,1) with size (8,5) and color green and mask full
  [01]: a rectangle at (4,6) with size (1,9) and color orange and mask full
  [011]: a rectangle at (4,11) with size (3,4) and color orange and mask full
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,17) and color black and layers
  [0]: a rectangle at (4,11) with size (3,4) and color orange and mask full
  [01]: a rectangle at (3,1) with size (8,5) and color green and mask full
  [011]: a rectangle at (4,6) with size (1,9) and color orange and mask full
diff: 
delta:
! 64 wrong pixels (generated / expected)

TEST 98cf29f8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 318.5 bits (318.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-166] Checking task 995c5fa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11384.5 = 11393.4
DL output with Mo: L = 9.0 + 3980.6 = 3989.6
DL input+output M: L = 17.9 + 15365.1 = 15383.0

# learning a model for train pairs
15383.0	
13557.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10789.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9492.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8658.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8215.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8030.3	IN  DEF: layer[0].mask=full
7845.9	OUT DEF: layer[01].color=red
7752.0	OUT DEF: layer[0].mask=full
7658.1	OUT DEF: layer[01].mask=full
7565.4	IN  DEF: layer[01].color=grey
7504.2	IN  DEF: layer[0].color=grey
7319.7	IN  DEF: layer[011].color=grey
7259.5	IN  DEF: color=black
7211.3	OUT DEF: size=(?,?)
6993.8	OUT DEF: size.i=3
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,?) and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color red and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color grey and mask full
  [01]: a rectangle at ? with size ? and color grey and mask ?
  [011]: a rectangle at ? with size ? and color grey and mask ?

DL input  with Mi: L = 60.9 + 4857.6 = 4918.5
DL output with Mo: L = 49.5 + 2025.8 = 2075.3
DL input+output M: L = 110.4 + 6883.4 = 6993.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,5) with size (4,4) and color grey and mask 1111100110011111
  [011]: a rectangle at (0,10) with size (4,4) and color grey and mask 1111011001101111
diff: 
delta:
   (125.4 bits)
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (1,3) and color red and mask full
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,5) with size (4,4) and color grey and mask 1111100110011111
  [011]: a rectangle at (0,10) with size (4,4) and color grey and mask 1111011001101111
diff: 
delta:
! size mismatch, 3x10 instead of 3x3

TRAIN 995c5fa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,10) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111011001101111
  [011]: a rectangle at (0,5) with size (4,4) and color grey and mask 1001100111111111
diff: 
delta:
   (125.4 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (1,3) and color green and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color red and mask full
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,10) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111011001101111
  [011]: a rectangle at (0,5) with size (4,4) and color grey and mask 1001100111111111
diff: 
delta:
! size mismatch, 3x10 instead of 3x3

TRAIN 995c5fa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,5) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100110011111
  [011]: a rectangle at (0,10) with size (4,4) and color grey and mask 1001100111111111
diff: 
delta:
   (125.4 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color red and mask full
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,5) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color grey and mask 1111100110011111
  [011]: a rectangle at (0,10) with size (4,4) and color grey and mask 1001100111111111
diff: 
delta:
! size mismatch, 3x10 instead of 3x3

TRAIN 995c5fa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,10) with size (4,4) and color grey and mask full
  [011]: a rectangle at (0,5) with size (4,4) and color grey and mask 1001100111111111
diff: 
delta:
   (109.4 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color red and mask full
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask full
  [01]: a rectangle at (0,10) with size (4,4) and color grey and mask full
  [011]: a rectangle at (0,5) with size (4,4) and color grey and mask 1001100111111111
diff: 
delta:
! size mismatch, 3x10 instead of 3x3

TRAIN 995c5fa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1001100111111111
  [01]: a rectangle at (0,5) with size (4,4) and color grey and mask 1111011001101111
  [011]: a rectangle at (0,10) with size (4,4) and color grey and mask 1111100110011111
diff:   layer[0].mask
delta:
! size mismatch, 3x10 instead of 3x3

TEST 995c5fa3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2025.8 bits (2025.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-165] Checking task 99b1bc43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14722.2 = 14731.1
DL output with Mo: L = 9.0 + 5014.3 = 5023.3
DL input+output M: L = 17.9 + 19736.5 = 19754.4

# learning a model for train pairs
19754.4	
15137.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12518.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10270.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8810.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8253.2	OUT DEF: size={layer[0].size}
8068.7	IN  DEF: layer[01].color=yellow
7974.8	IN  DEF: layer[01].mask=full
7926.6	OUT DEF: layer[0].pos=(?,?)
7794.8	OUT DEF: layer[0].pos.j={layer[0].pos.j}
7664.8	OUT DEF: layer[0].pos.i={layer[011].pos.j}
7616.6	OUT DEF: layer[0].size=(?,?)
7364.9	OUT DEF: layer[0].size.j={layer[0].size.j}
7142.1	OUT DEF: layer[0].size.i={layer[0].size.i - layer[011].pos.j}
7093.9	IN  DEF: size=(?,?)
6752.7	IN  DEF: size.i=9
6502.8	IN  DEF: size.j=4
6454.6	IN  DEF: layer[0].pos=(?,?)
6321.7	IN  DEF: layer[0].pos.j=0
6273.5	IN  DEF: layer[0].size=(?,?)
6023.6	IN  DEF: layer[0].size.i=4
5773.8	IN  DEF: layer[0].size.j=4
5725.5	IN  DEF: layer[01].pos=(?,?)
5547.0	IN  DEF: layer[01].pos.i=4
5414.1	IN  DEF: layer[01].pos.j=0
5365.9	IN  DEF: layer[01].size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color ? and layers
  [0]: a rectangle at ({layer[011].pos.j},{layer[0].pos.j}) with size ({layer[0].size.i - layer[011].pos.j},{layer[0].size.j}) and color ? and mask ?
WHERE (Mi)
a background with size (9,4) and color ? and layers
  [0]: a rectangle at (?,0) with size (4,4) and color ? and mask ?
  [01]: a rectangle at (4,0) with size (?,?) and color yellow and mask full
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 98.8 + 4252.4 = 4351.2
DL output with Mo: L = 52.7 + 962.0 = 1014.7
DL input+output M: L = 151.5 + 5214.4 = 5365.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 111100110001010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,2) with size (4,2) and color blue and mask 10011010
diff: 
delta: (0,1)=1  (2,0)=1 
   (109.0 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (2,0) with size (2,4) and color green and mask 11111100
diff: 
delta:
   (16.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 111100110001010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,2) with size (4,2) and color blue and mask 10011010
diff: 
delta: (0,1)=1  (2,0)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 111100110001010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,3) with size (2,1) and color blue and mask full
diff: 
delta: (0,1)=1  (2,0)=1  (2,2)=1  (3,3)=1 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,2) with size (4,2) and color blue and mask 10011010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (5,0) with size (4,4) and color red and mask 111100110001010
diff:   layer[0].size.j  layer[0].pos.j
delta: (0,1)=1  (2,0)=1 
! size mismatch, 4x2 instead of 4x4

TRAIN 99b1bc43.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 1111111101011110
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color blue and mask 110101101010011
diff: 
delta:
   (83.6 bits)
data: a background with size (4,4) and color green and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 110101111110010
diff: 
delta:
   (30.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 1111111101011110
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color blue and mask 110101101010011
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 111011111010010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (6,0) with size (3,2) and color red and mask 101110
diff: 
delta: (6,3)=2  (7,3)=2 
   (106.2 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 101110001110010
diff: 
delta:
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 111011111010010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (6,0) with size (3,2) and color red and mask 101110
diff: 
delta: (6,3)=2  (7,3)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 111011111010010
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (6,1) with size (3,1) and color red and mask full
diff: 
delta: (6,3)=2  (7,0)=2  (7,3)=2 
! 13 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color blue and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color black and mask 11110001110010
diff: 
delta: (5,0)=0  (6,0)=0  (7,1)=0 
   (126.4 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 11111001100011
diff: 
delta:
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color blue and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color black and mask 11110001110010
diff: 
delta: (5,0)=0  (6,0)=0  (7,1)=0 
! 16 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1101010011101101
  [01]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (5,0) with size (4,4) and color red and mask 1010100101001011
diff: 
delta:
! 16 wrong pixels (generated / expected)

TEST 99b1bc43.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 962.0 bits (962.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-164] Checking task 99fa7670.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2060.0 = 2069.0
DL output with Mo: L = 9.0 + 7145.9 = 7154.9
DL input+output M: L = 17.9 + 9205.9 = 9223.8

# learning a model for train pairs
9223.8	
7199.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6195.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5582.5	OUT DEF: size={size}
5449.1	IN  SHAPE at layer[0]: a point at ? with color ?
5103.2	OUT DEF: layer[0].pos={layer[0].pos}
4916.8	OUT DEF: layer[0].color={layer[0].color}
4856.6	OUT DEF: color=black
4796.4	IN  DEF: color=black
4748.2	OUT DEF: layer[0].size=(?,?)
4508.4	OUT DEF: layer[0].size.j={size.j - 1}
4460.2	OUT DEF: layer[01].pos=(?,?)
4411.9	OUT DEF: layer[01].size=(?,?)
4240.0	OUT DEF: layer[01].size.i=2
4191.8	IN  DEF: size=(?,?)
4143.6	IN  DEF: layer[0].pos=(?,?)
4002.8	IN  DEF: layer[0].pos.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,{size.j - 1}) and color {layer[0].color} and mask ?
  [01]: a rectangle at (?,?) with size (2,?) and color ? and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,1) with color ?

DL input  with Mi: L = 30.3 + 1607.7 = 1638.0
DL output with Mo: L = 59.8 + 2305.1 = 2364.8
DL input+output M: L = 90.0 + 3912.8 = 4002.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (3,1) with color green
diff: 
delta: (1,2)=2 
   (41.6 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,1) with size (3,5) and color green and mask 100001000011111
  [01]: a rectangle at (1,2) with size (2,4) and color red and mask 10001111
diff: 
delta:
   (51.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (3,1) with color green
diff: 
delta: (1,2)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,2) with color red
diff:   layer[0].pos.j
delta: (3,1)=3 
! 14 wrong pixels (generated / expected)

TRAIN 99fa7670.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color pink
diff: 
delta:
   (18.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,2) and color pink and mask full
  [01]: a rectangle at (1,2) with size (2,1) and color pink and mask full
diff: 
delta:
   (19.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color pink
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 99fa7670.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,1) with color cyan
diff: 
delta: (4,3)=5#
   (41.6 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (3,5) and color cyan and mask 100001000011111
  [01]: a rectangle at (4,3) with size (2,3) and color grey and mask 100111
diff: 
delta:
   (49.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,1) with color cyan
diff: 
delta: (4,3)=5#
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (4,3) with color grey
diff:   layer[0].pos.j
delta: (1,1)=8 
! 12 wrong pixels (generated / expected)

TRAIN 99fa7670.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,5) and color black and layers
  [0]: a point at (3,1) with color orange
diff: 
delta: (1,2)=8  (5,2)=6 
   (59.0 bits)
data: a background with size (7,5) and color black and layers
  [0]: a rectangle at (3,1) with size (2,4) and color orange and mask 10001111
  [01]: a rectangle at (1,2) with size (2,3) and color cyan and mask 100111
diff: 
delta: (5,2)=6  (5,3)=6  (5,4)=6  (6,4)=6 
   (109.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,5) and color black and layers
  [0]: a point at (3,1) with color orange
diff: 
delta: (1,2)=8  (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,5) and color black and layers
  [0]: a point at (1,2) with color cyan
diff:   layer[0].pos.j
delta: (3,1)=7# (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,5) and color black and layers
  [0]: a point at (5,2) with color pink
diff:   layer[0].pos.j
delta: (1,2)=8  (3,1)=7#
! 15 wrong pixels (generated / expected)

TRAIN 99fa7670.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  [0]: a point at (0,3) with color cyan
diff:   layer[0].pos.j
delta: (2,2)=7# (4,5)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  [0]: a point at (2,2) with color orange
diff:   layer[0].pos.j
delta: (0,3)=8  (4,5)=2 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  [0]: a point at (4,5) with color red
diff:   layer[0].pos.j
delta: (0,3)=8  (2,2)=7#
! 20 wrong pixels (generated / expected)

TEST 99fa7670.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2305.1 bits (2305.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-163] Checking task 9aec4887.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14113.2 = 14122.2
DL output with Mo: L = 9.0 + 11973.9 = 11982.9
DL input+output M: L = 17.9 + 26087.1 = 26105.1

# learning a model for train pairs
26105.1	
22577.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20925.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19669.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18451.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17224.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15979.1	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
14650.7	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
13509.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 5484.5 = 5576.7
DL output with Mo: L = 59.8 + 7873.3 = 7933.1
DL input+output M: L = 152.0 + 13357.8 = 13509.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color cyan and mask 1010111110101001
  [01]: a rectangle at (7,7) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (12,7) with size (1,4) and color green and mask full
  [0111]: a rectangle at (8,6) with size (4,1) and color red and mask full
  [01111]: a rectangle at (8,11) with size (4,1) and color blue and mask full
diff: 
delta:
   (187.3 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,4) with size (4,2) and color blue and mask full
  [01]: a rectangle at (4,1) with size (2,4) and color green and mask 11111010
  [011]: a rectangle at (1,0) with size (4,2) and color red and mask 1110101
diff: 
delta: (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (1,1)=8  (1,4)=8  (2,2)=8  (3,2)=8  (3,3)=8  (4,4)=8 
   (285.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color cyan and mask 1010111110101001
  [01]: a rectangle at (7,7) with size (1,4) and color yellow and mask full
  [011]: a rectangle at (12,7) with size (1,4) and color green and mask full
  [0111]: a rectangle at (8,6) with size (4,1) and color red and mask full
  [01111]: a rectangle at (8,11) with size (4,1) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 9aec4887.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,16) and color black and layers
  [0]: a rectangle at (2,8) with size (3,3) and color cyan and mask 110111010
  [01]: a rectangle at (6,2) with size (1,3) and color green and mask full
  [011]: a rectangle at (10,2) with size (1,3) and color red and mask full
  [0111]: a rectangle at (7,1) with size (3,1) and color pink and mask full
  [01111]: a rectangle at (7,5) with size (3,1) and color yellow and mask full
diff: 
delta:
   (174.6 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,1) with size (2,3) and color green and mask 10111
  [01]: a rectangle at (3,1) with size (2,3) and color red and mask 111010
  [011]: a rectangle at (1,0) with size (3,2) and color pink and mask 11101
diff: 
delta: (1,4)=4  (2,2)=8  (2,3)=4  (2,4)=4  (3,3)=8  (3,4)=4 
   (213.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  [0]: a rectangle at (2,8) with size (3,3) and color cyan and mask 110111010
  [01]: a rectangle at (6,2) with size (1,3) and color green and mask full
  [011]: a rectangle at (10,2) with size (1,3) and color red and mask full
  [0111]: a rectangle at (7,1) with size (3,1) and color pink and mask full
  [01111]: a rectangle at (7,5) with size (3,1) and color yellow and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN 9aec4887.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (9,6) with size (4,4) and color cyan and mask 1011101001101011
  [01]: a rectangle at (1,3) with size (1,4) and color orange and mask full
  [011]: a rectangle at (6,3) with size (1,4) and color blue and mask full
  [0111]: a rectangle at (2,2) with size (4,1) and color yellow and mask full
  [01111]: a rectangle at (2,7) with size (4,1) and color pink and mask full
diff: 
delta:
   (186.6 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color cyan and mask 1001001001101001
  [01]: a rectangle at (0,1) with size (2,4) and color orange and mask 10111111
  [011]: a rectangle at (4,1) with size (2,4) and color blue and mask 11111011
diff: 
delta: (1,0)=4  (1,5)=6  (2,0)=4  (2,5)=6  (3,0)=4  (3,4)=6  (3,5)=6  (4,0)=4  (4,5)=6 
   (287.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (9,6) with size (4,4) and color cyan and mask 1011101001101011
  [01]: a rectangle at (1,3) with size (1,4) and color orange and mask full
  [011]: a rectangle at (6,3) with size (1,4) and color blue and mask full
  [0111]: a rectangle at (2,2) with size (4,1) and color yellow and mask full
  [01111]: a rectangle at (2,7) with size (4,1) and color pink and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 9aec4887.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (9,2) with size (5,5) and color cyan and mask 1101100100111100110111011
  [01]: a rectangle at (0,6) with size (1,5) and color blue and mask full
  [011]: a rectangle at (6,6) with size (1,5) and color green and mask full
  [0111]: a rectangle at (1,5) with size (5,1) and color red and mask full
  [01111]: a rectangle at (1,11) with size (5,1) and color yellow and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TEST 9aec4887.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7873.3 bits (7873.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-162] Checking task 9af7a82c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4376.7 = 4385.7
DL output with Mo: L = 9.0 + 7830.2 = 7839.2
DL input+output M: L = 17.9 + 12206.9 = 12224.8

# learning a model for train pairs
12224.8	
9808.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8602.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7562.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7327.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7115.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6929.9	OUT DEF: layer[01].color={layer[01].color}
6744.0	OUT DEF: layer[0].color={layer[0].color}
6558.6	OUT DEF: layer[011].color={color}
6464.8	OUT DEF: layer[0].mask=full
6370.9	OUT DEF: layer[01].mask=full
6277.0	OUT DEF: layer[011].mask=full
6183.1	IN  DEF: layer[01].mask=full
6123.0	OUT DEF: color=black
6074.7	OUT DEF: size=(?,?)
5793.9	OUT DEF: size.i={size.i + layer[01].size.j}
5567.5	OUT DEF: size.j={layer[0].size.j + 2}
5519.2	OUT DEF: layer[0].pos=(?,?)
5371.1	OUT DEF: layer[0].pos.i=0
5254.8	OUT DEF: layer[0].pos.j={layer[0].pos.j + layer[0].pos.j}
5206.5	OUT DEF: layer[0].size=(?,?)
5112.7	OUT DEF: layer[0].size.j=1
5064.4	OUT DEF: layer[01].pos=(?,?)
4916.3	OUT DEF: layer[01].pos.i=0
4800.2	OUT DEF: layer[01].pos.j={layer[01].pos.j + layer[0].pos.j}
4752.0	OUT DEF: layer[01].size=(?,?)
4545.5	OUT DEF: layer[01].size.i={size.i - layer[01].pos.j}
4451.6	OUT DEF: layer[01].size.j=1
4403.4	OUT DEF: layer[011].pos=(?,?)
4255.3	OUT DEF: layer[011].pos.i=0
4207.1	OUT DEF: layer[011].size=(?,?)
4113.2	OUT DEF: layer[011].size.j=1
4064.9	IN  DEF: size=(?,?)
4016.7	IN  DEF: layer[0].pos=(?,?)
3968.5	IN  DEF: layer[0].size=(?,?)
3920.2	IN  DEF: layer[01].pos=(?,?)
3872.0	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i + layer[01].size.j},{layer[0].size.j + 2}) and color black and layers
  [0]: a rectangle at (0,{layer[0].pos.j + layer[0].pos.j}) with size (?,1) and color {layer[0].color} and mask full
  [01]: a rectangle at (0,{layer[01].pos.j + layer[0].pos.j}) with size ({size.i - layer[01].pos.j},1) and color {layer[01].color} and mask full
  [011]: a rectangle at (0,?) with size (?,1) and color {color} and mask full
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 65.6 + 2734.2 = 2799.8
DL output with Mo: L = 137.9 + 934.3 = 1072.2
DL input+output M: L = 203.5 + 3668.5 = 3872.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color red and mask full
diff: 
delta:
   (55.5 bits)
data: a background with size (5,3) and color black and layers
  [0]: a rectangle at (0,2) with size (1,1) and color green and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (5,1) and color blue and mask full
diff: 
delta:
   (12.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color red and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask 111
  [01]: a rectangle at (1,1) with size (1,1) and color green and mask full
diff: 
delta:
! size mismatch, 4x4 instead of 5x3
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 111100100
  [01]: a rectangle at (1,1) with size (1,1) and color green and mask full
diff: 
delta:
! size mismatch, 4x5 instead of 5x3

TRAIN 9af7a82c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,1) with size (1,2) and color blue and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color red and mask full
diff: 
delta: (0,0)=3 
   (74.8 bits)
data: a background with size (6,4) and color black and layers
  [0]: a rectangle at (0,2) with size (2,1) and color blue and mask full
  [01]: a rectangle at (0,1) with size (3,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,1) and color yellow and mask full
diff: 
delta: (0,3)=3 
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (1,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (0,1) with size (1,2) and color blue and mask full
diff: 
delta: (0,0)=3 
! size mismatch, 5x5 instead of 6x4
>> Trial 2
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (0,1) with size (1,2) and color blue and mask full
  [01]: a rectangle at (1,0) with size (1,3) and color red and mask full
diff: 
delta: (0,0)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  [0]: a rectangle at (1,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (0,0) with size (1,1) and color green and mask full
diff: 
delta: (0,1)=1  (0,2)=1 
! size mismatch, 4x5 instead of 6x4

TRAIN 9af7a82c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (3,2) and color green and mask 111101
  [01]: a rectangle at (2,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,2)=2 
   (82.8 bits)
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (0,0) with size (5,1) and color green and mask full
  [01]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
  [011]: a rectangle at (0,1) with size (4,1) and color cyan and mask full
diff: 
delta: (0,3)=2 
   (33.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (3,2) and color green and mask 111101
  [01]: a rectangle at (2,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,2)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color green and layers
  [0]: a rectangle at (0,0) with size (2,3) and color cyan and mask 110011
  [01]: a rectangle at (2,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,2)=2 
! size mismatch, 5x5 instead of 5x4
>> Trial 3
data: a background with size (4,3) and color yellow and layers
  [0]: a rectangle at (1,0) with size (3,2) and color green and mask 111101
  [01]: a rectangle at (0,0) with size (2,3) and color cyan and mask full
diff: 
delta: (0,2)=2 
! size mismatch, 7x4 instead of 5x4

TRAIN 9af7a82c.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,3) and color blue and layers
  [0]: a rectangle at (2,1) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (3,2) and color red and mask full
diff: 
delta:
   (60.3 bits)
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,2) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (0,1) with size (4,1) and color red and mask full
  [011]: a rectangle at (0,0) with size (6,1) and color blue and mask full
diff: 
delta:
   (14.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color blue and layers
  [0]: a rectangle at (2,1) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (1,0) with size (3,2) and color red and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color blue and layers
  [0]: a rectangle at (1,0) with size (3,2) and color red and mask 10111
  [01]: a rectangle at (2,1) with size (2,1) and color cyan and mask full
diff: 
delta:
! size mismatch, 5x4 instead of 6x3
>> Trial 3
data: a background with size (4,3) and color red and layers
  [0]: a rectangle at (0,0) with size (4,3) and color blue and mask 100100100111
  [01]: a rectangle at (2,1) with size (2,1) and color cyan and mask full
diff: 
delta:
! size mismatch, 5x5 instead of 6x3

TRAIN 9af7a82c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,3) and color cyan and mask 110011
  [01]: a rectangle at (0,2) with size (2,2) and color red and mask full
diff: 
delta: (2,1)=3  (2,2)=3  (2,3)=4 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color blue and layers
  [0]: a rectangle at (0,2) with size (2,2) and color red and mask 1011
  [01]: a rectangle at (0,0) with size (2,3) and color cyan and mask 110111
diff:   layer[01].mask
delta: (2,1)=3  (2,2)=3  (2,3)=4 
! size mismatch, 7x4 instead of 6x5

TEST 9af7a82c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 934.3 bits (934.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-161] Checking task 9d9215db.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3402.6 = 3411.6
DL output with Mo: L = 9.0 + 21245.5 = 21254.5
DL input+output M: L = 17.9 + 24648.1 = 24666.0

# learning a model for train pairs
24666.0	
23976.0	OUT DEF: size={size}
23899.4	IN  SHAPE at layer[0]: a point at ? with color ?
23817.1	IN  SHAPE at layer[01]: a point at ? with color ?
23679.1	IN  DEF: layer[01].color=blue
23587.8	IN  SHAPE at layer[011]: a point at ? with color ?
23476.2	IN  SHAPE at layer[0111]: a point at ? with color ?
23415.0	OUT SHAPE at layer[0]: a point at ? with color ?
22896.5	OUT DEF: layer[0]={layer[0]}
22834.3	OUT SHAPE at layer[01]: a point at ? with color ?
22696.1	OUT DEF: layer[01].color={layer[011].color}
22316.4	OUT DEF: layer[01]={layer[011]}
22253.8	OUT SHAPE at layer[011]: a point at ? with color ?
22115.1	OUT DEF: layer[011].color={layer[011].color}
22052.2	OUT SHAPE at layer[0111]: a point at ? with color ?
21913.5	OUT DEF: layer[0111].color={layer[0111].color}
21533.7	OUT DEF: layer[0111]={layer[0111]}
21470.7	OUT SHAPE at layer[01111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[011]}
  [011]: a point at ? with color {layer[011].color}
  [0111]: {layer[0111]}
  [01111]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?
  [01]: a point at ? with color blue
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?

DL input  with Mi: L = 50.8 + 2860.1 = 2910.9
DL output with Mo: L = 43.5 + 18516.3 = 18559.8
DL input+output M: L = 94.3 + 21376.3 = 21470.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (1,3) with color blue
  [011]: a point at (3,1) with color blue
  [0111]: a point at (3,3) with color red
diff: 
delta:
   (88.2 bits)
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (3,1) with color blue
  [011]: a point at (1,3) with color blue
  [0111]: a point at (3,3) with color red
  [01111]: a point at (1,5) with color blue
diff: 
delta: (1,7)=1  (1,9)=1  (1,11)=1  (1,13)=1  (1,15)=1  (1,17)=8  (3,15)=2  (3,17)=1  (5,1)=1  (5,17)=1  (7,1)=1  (7,17)=1  (9,1)=1  (9,17)=1  (11,1)=1  (11,17)=1  (13,1)=1  (13,17)=1  (15,1)=1  (15,3)=2  (15,15)=2  (15,17)=1  (17,1)=8  (17,3)=1  (17,5)=1  (17,7)=1  (17,9)=1  (17,11)=1  (17,13)=1  (17,15)=1  (17,17)=8 
   (643.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (1,3) with color blue
  [011]: a point at (3,1) with color blue
  [0111]: a point at (3,3) with color red
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (1,3) with color blue
  [011]: a point at (3,3) with color red
  [0111]: a point at (3,1) with color blue
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (3,1) with color blue
  [011]: a point at (1,3) with color blue
  [0111]: a point at (3,3) with color red
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 9d9215db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,17) with color green
  [01]: a point at (3,13) with color blue
  [011]: a point at (3,15) with color yellow
  [0111]: a point at (5,15) with color blue
diff: 
delta:
   (88.2 bits)
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,17) with color green
  [01]: a point at (3,15) with color yellow
  [011]: a point at (3,3) with color yellow
  [0111]: a point at (5,15) with color blue
  [01111]: a point at (1,1) with color green
diff: 
delta: (3,5)=1  (3,7)=1  (3,9)=1  (3,11)=1  (3,13)=1  (5,3)=1  (7,3)=1  (7,15)=1  (9,3)=1  (9,15)=1  (11,3)=1  (11,15)=1  (13,3)=1  (13,15)=1  (15,3)=4  (15,5)=1  (15,7)=1  (15,9)=1  (15,11)=1  (15,13)=1  (15,15)=4  (17,1)=3  (17,17)=3 
   (487.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,17) with color green
  [01]: a point at (3,13) with color blue
  [011]: a point at (3,15) with color yellow
  [0111]: a point at (5,15) with color blue
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,17) with color green
  [01]: a point at (3,13) with color blue
  [011]: a point at (5,15) with color blue
  [0111]: a point at (3,15) with color yellow
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,17) with color green
  [01]: a point at (5,15) with color blue
  [011]: a point at (3,13) with color blue
  [0111]: a point at (3,15) with color yellow
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 9d9215db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color yellow
  [01]: a point at (3,3) with color blue
  [011]: a point at (1,3) with color green
  [0111]: a point at (3,1) with color green
diff: 
delta: (5,5)=8 
   (109.6 bits)
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color yellow
  [01]: a point at (1,3) with color green
  [011]: a point at (1,5) with color green
  [0111]: a point at (3,1) with color green
  [01111]: a point at (1,7) with color green
diff: 
delta: (1,9)=3  (1,11)=3  (1,13)=3  (1,15)=3  (1,17)=4  (3,3)=1  (3,15)=1  (3,17)=3  (5,1)=3  (5,5)=8  (5,13)=8  (5,17)=3  (7,1)=3  (7,17)=3  (9,1)=3  (9,17)=3  (11,1)=3  (11,17)=3  (13,1)=3  (13,5)=8  (13,13)=8  (13,17)=3  (15,1)=3  (15,3)=1  (15,15)=1  (15,17)=3  (17,1)=4  (17,3)=3  (17,5)=3  (17,7)=3  (17,9)=3  (17,11)=3  (17,13)=3  (17,15)=3  (17,17)=4 
   (721.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color yellow
  [01]: a point at (3,3) with color blue
  [011]: a point at (1,3) with color green
  [0111]: a point at (3,1) with color green
diff: 
delta: (5,5)=8 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a point at (1,1) with color yellow
  [01]: a point at (3,3) with color blue
  [011]: a point at (1,3) with color green
  [0111]: a point at (5,5) with color cyan
diff: 
delta: (3,1)=3 
! 38 wrong pixels (generated / expected)

TRAIN 9d9215db.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a point at (11,5) with color cyan
  [01]: a point at (17,1) with color blue
  [011]: a point at (13,5) with color yellow
  [0111]: a point at (13,7) with color cyan
diff: 
delta: (15,1)=3  (15,3)=2  (17,3)=3 
! 50 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a point at (11,5) with color cyan
  [01]: a point at (17,1) with color blue
  [011]: a point at (13,5) with color yellow
  [0111]: a point at (15,1) with color green
diff: 
delta: (13,7)=8  (15,3)=2  (17,3)=3 
! 50 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  [0]: a point at (11,5) with color cyan
  [01]: a point at (17,1) with color blue
  [011]: a point at (13,5) with color yellow
  [0111]: a point at (15,3) with color red
diff: 
delta: (13,7)=8  (15,1)=3  (17,3)=3 
! 50 wrong pixels (generated / expected)

TEST 9d9215db.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 18516.3 bits (18516.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-160] Checking task 9dfd6313.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3801.4 = 3810.4
DL output with Mo: L = 9.0 + 3801.4 = 3810.4
DL input+output M: L = 17.9 + 7602.9 = 7620.8

# learning a model for train pairs
7620.8	
7136.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6652.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5277.7	OUT DEF: layer[0]={layer[0]}
4861.8	OUT DEF: size={size}
4723.8	IN  DEF: layer[0].color=grey
4602.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4483.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4343.5	OUT DEF: layer[01].color={layer[01].color}
4272.9	OUT DEF: layer[01].mask=full
4202.2	IN  DEF: layer[01].mask=full
4156.6	OUT DEF: color=black
4111.0	IN  DEF: color=black
4076.0	OUT DEF: layer[01].pos=(?,?)
3978.5	OUT DEF: layer[01].pos.i={layer[0].pos.i}
3881.9	OUT DEF: layer[01].pos.j={layer[01].pos.i}
3846.8	OUT DEF: layer[01].size=(?,?)
3759.4	OUT DEF: layer[01].size.i={layer[01].size.j}
3672.0	OUT DEF: layer[01].size.j={layer[01].size.i}
3637.0	IN  DEF: size=(?,?)
3602.0	IN  DEF: layer[0].pos=(?,?)
3506.2	IN  DEF: layer[0].pos.i=0
3410.3	IN  DEF: layer[0].pos.j=0
3375.3	IN  DEF: layer[0].size=(?,?)
3340.3	IN  DEF: layer[01].pos=(?,?)
3244.5	IN  DEF: layer[01].pos.j=0
3209.5	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].pos.i},{layer[01].pos.i}) with size ({layer[01].size.j},{layer[01].size.i}) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (0,0) with size (?,?) and color grey and mask ?
  [01]: a rectangle at (?,0) with size (?,?) and color ? and mask full

DL input  with Mi: L = 73.8 + 2414.8 = 2488.5
DL output with Mo: L = 44.4 + 676.6 = 720.9
DL input+output M: L = 118.1 + 3091.4 = 3209.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 100010001
  [01]: a rectangle at (1,0) with size (1,1) and color green and mask full
diff: 
delta:
   (45.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 100010001
  [01]: a rectangle at (0,1) with size (1,1) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 100010001
  [01]: a rectangle at (1,0) with size (1,1) and color green and mask full
diff: 
delta:
correct output grid

TRAIN 9dfd6313.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1000010000100001
  [01]: a rectangle at (2,0) with size (2,1) and color pink and mask full
diff: 
delta: (3,2)=4 
   (75.2 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1000010000100001
  [01]: a rectangle at (0,2) with size (1,2) and color pink and mask full
diff: 
delta: (2,3)=4 
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1000010000100001
  [01]: a rectangle at (2,0) with size (2,1) and color pink and mask full
diff: 
delta: (3,2)=4 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [01]: a rectangle at (2,0) with size (2,1) and color pink and mask full
diff: 
delta: (1,1)=5# (2,2)=5# (3,2)=4  (3,3)=5#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color grey and mask 1000010000100001
  [01]: a rectangle at (3,2) with size (1,1) and color yellow and mask full
diff:   layer[01].pos.j
delta: (2,0)=6  (3,0)=6 
! 3 wrong pixels (generated / expected)

TRAIN 9dfd6313.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000001000001000001000001
  [01]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
diff: 
delta: (3,1)=2  (4,1)=2  (4,3)=1 
   (120.8 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000001000001000001000001
  [01]: a rectangle at (0,2) with size (2,1) and color cyan and mask full
diff: 
delta: (1,3)=2  (1,4)=2  (3,4)=1 
   (50.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000001000001000001000001
  [01]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
diff: 
delta: (3,1)=2  (4,1)=2  (4,3)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000001000001000001000001
  [01]: a rectangle at (3,1) with size (2,1) and color red and mask full
diff:   layer[01].pos.j
delta: (2,0)=8  (2,1)=8  (4,3)=1 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000001000001000001000001
  [01]: a rectangle at (4,3) with size (1,1) and color blue and mask full
diff:   layer[01].pos.j
delta: (2,0)=8  (2,1)=8  (3,1)=2  (4,1)=2 
! 6 wrong pixels (generated / expected)

TRAIN 9dfd6313.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 100000010000001000000100000010000001
  [01]: a rectangle at (2,0) with size (1,2) and color green and mask full
diff: 
delta: (4,0)=2  (4,2)=8  (4,3)=8  (5,0)=2  (5,2)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 100000010000001000000100000010000001
  [01]: a rectangle at (4,0) with size (2,1) and color red and mask full
diff: 
delta: (2,0)=3  (2,1)=3  (4,2)=8  (4,3)=8  (5,2)=6 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 100000010000001000000100000010000001
  [01]: a rectangle at (4,2) with size (1,2) and color cyan and mask full
diff:   layer[01].pos.j
delta: (2,0)=3  (2,1)=3  (4,0)=2  (5,0)=2  (5,2)=6 
! 8 wrong pixels (generated / expected)

TEST 9dfd6313.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 676.6 bits (676.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-159] Checking task 9ecd008a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 106988.8 = 106997.8
DL output with Mo: L = 9.0 + 2439.6 = 2448.6
DL input+output M: L = 17.9 + 109428.5 = 109446.4

# learning a model for train pairs
109446.4	
89757.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
85373.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
81940.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
79758.9	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
77049.1	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
76906.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 74508.4 = 74600.5
DL output with Mo: L = 26.6 + 2279.6 = 2306.2
DL input+output M: L = 118.8 + 76788.0 = 76906.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  [0]: a rectangle at (0,0) with size (16,16) and color cyan and mask 110000000000000111100000000000100001000000000110000110000000100000000100000110000000011000100000000000010110000000000001111000000000000110100000000000010001100000000110000010000000010000000110000110000000001000010000000000011110000000000000110000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 11110000100100111001111001100110011000111000000010000000111100
  [011]: a rectangle at (2,10) with size (12,4) and color yellow and mask full
  [0111]: a rectangle at (2,2) with size (12,4) and color yellow and mask full
  [01111]: a rectangle at (2,6) with size (12,4) and color brown and mask full
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,4)=1  (2,6)=2  (2,9)=2  (2,11)=1  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,7)=2  (3,8)=2  (3,14)=7# (3,15)=5# (4,2)=1  (4,13)=1  (5,1)=7# (5,4)=0  (5,5)=0  (5,6)=0  (5,10)=7# (5,14)=7# (6,2)=2  (6,3)=9# (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=3  (6,8)=3  (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,4)=0  (7,5)=0  (7,6)=0  (7,9)=3  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,6)=3  (8,9)=3  (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,7)=3  (9,8)=3  (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,10)=7# (10,14)=7# (11,2)=1  (11,13)=1  (12,0)=5# (12,1)=7# (12,7)=2  (12,8)=2  (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,9)=2  (13,11)=1  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
   (2480.3 bits)
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (1,1) and color yellow and mask full
diff: 
delta: (0,1)=7# (2,1)=9# (2,2)=3 
   (86.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  [0]: a rectangle at (0,0) with size (16,16) and color cyan and mask 110000000000000111100000000000100001000000000110000110000000100000000100000110000000011000100000000000010110000000000001111000000000000110100000000000010001100000000110000010000000010000000110000110000000001000010000000000011110000000000000110000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 11110000100100111001111001100110011000111000000010000000111100
  [011]: a rectangle at (2,10) with size (12,4) and color yellow and mask full
  [0111]: a rectangle at (2,2) with size (12,4) and color yellow and mask full
  [01111]: a rectangle at (2,6) with size (12,4) and color brown and mask full
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,4)=1  (2,6)=2  (2,9)=2  (2,11)=1  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,7)=2  (3,8)=2  (3,14)=7# (3,15)=5# (4,2)=1  (4,13)=1  (5,1)=7# (5,4)=0  (5,5)=0  (5,6)=0  (5,10)=7# (5,14)=7# (6,2)=2  (6,3)=9# (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=3  (6,8)=3  (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,4)=0  (7,5)=0  (7,6)=0  (7,9)=3  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,6)=3  (8,9)=3  (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,7)=3  (9,8)=3  (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,10)=7# (10,14)=7# (11,2)=1  (11,13)=1  (12,0)=5# (12,1)=7# (12,7)=2  (12,8)=2  (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,9)=2  (13,11)=1  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
! size mismatch, 10x10 instead of 3x3

TRAIN 9ecd008a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color orange and layers
  [0]: a rectangle at (0,0) with size (16,16) and color pink and mask 1111000000000000100100000000001100001100000000100000010000001100000000110000100000000001001100001000000011100000000000000110000000000000011100001001000011001000000000010000110000000011000000100000010000000011000011000000000010010000000000001111000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 1100000111000011110001110000011100111011111100011110000011000
  [011]: a rectangle at (0,0) with size (2,16) and color green and mask full
  [0111]: a rectangle at (4,4) with size (2,8) and color green and mask full
  [01111]: a rectangle at (12,0) with size (4,4) and color green and mask 111101100010010
diff: 
delta: (0,3)=1  (0,4)=7# (0,5)=7# (0,10)=7# (0,11)=7# (0,12)=1  (1,2)=1  (1,4)=7# (1,5)=7# (1,7)=1  (1,8)=1  (1,10)=7# (1,11)=7# (1,13)=1  (2,0)=3  (2,1)=1  (2,2)=8  (2,3)=8  (2,6)=9# (2,9)=9# (2,12)=8  (2,13)=8  (2,14)=1  (2,15)=3  (3,0)=1  (3,1)=3  (3,2)=8  (3,3)=5# (3,5)=1  (3,7)=9# (3,8)=9# (3,10)=1  (3,12)=5# (3,13)=8  (3,14)=3  (3,15)=1  (4,6)=5# (4,9)=5# (5,3)=1  (5,12)=1  (6,2)=9# (6,4)=5# (6,11)=5# (6,13)=9# (7,1)=1  (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,14)=1  (8,1)=1  (8,3)=9# (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=4  (8,8)=4  (8,12)=9# (8,14)=1  (9,2)=9# (9,4)=0  (9,5)=0  (9,6)=0  (9,11)=5# (9,13)=9# (10,3)=1  (10,4)=0  (10,5)=0  (10,6)=0  (10,10)=3  (10,11)=3  (10,12)=1  (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (12,0)=1  (12,2)=8  (12,3)=5# (12,5)=1  (12,7)=9# (12,8)=9# (12,10)=1  (12,12)=5# (12,13)=8  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=8  (13,3)=8  (13,6)=9# (13,9)=9# (13,12)=8  (13,13)=8  (13,14)=1  (13,15)=3  (14,2)=1  (14,7)=1  (14,8)=1  (14,12)=3  (14,13)=1  (14,14)=3  (14,15)=3  (15,3)=1  (15,12)=1  (15,13)=3  (15,14)=3  (15,15)=3 
   (2640.5 bits)
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (2,0) with size (1,2) and color green and mask full
diff: 
delta: (1,0)=5# (1,2)=6 
   (73.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color orange and layers
  [0]: a rectangle at (0,0) with size (16,16) and color pink and mask 1111000000000000100100000000001100001100000000100000010000001100000000110000100000000001001100001000000011100000000000000110000000000000011100001001000011001000000000010000110000000011000000100000010000000011000011000000000010010000000000001111000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 1100000111000011110001110000011100111011111100011110000011000
  [011]: a rectangle at (0,0) with size (2,16) and color green and mask full
  [0111]: a rectangle at (4,4) with size (2,8) and color green and mask full
  [01111]: a rectangle at (12,0) with size (4,4) and color green and mask 111101100010010
diff: 
delta: (0,3)=1  (0,4)=7# (0,5)=7# (0,10)=7# (0,11)=7# (0,12)=1  (1,2)=1  (1,4)=7# (1,5)=7# (1,7)=1  (1,8)=1  (1,10)=7# (1,11)=7# (1,13)=1  (2,0)=3  (2,1)=1  (2,2)=8  (2,3)=8  (2,6)=9# (2,9)=9# (2,12)=8  (2,13)=8  (2,14)=1  (2,15)=3  (3,0)=1  (3,1)=3  (3,2)=8  (3,3)=5# (3,5)=1  (3,7)=9# (3,8)=9# (3,10)=1  (3,12)=5# (3,13)=8  (3,14)=3  (3,15)=1  (4,6)=5# (4,9)=5# (5,3)=1  (5,12)=1  (6,2)=9# (6,4)=5# (6,11)=5# (6,13)=9# (7,1)=1  (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,14)=1  (8,1)=1  (8,3)=9# (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=4  (8,8)=4  (8,12)=9# (8,14)=1  (9,2)=9# (9,4)=0  (9,5)=0  (9,6)=0  (9,11)=5# (9,13)=9# (10,3)=1  (10,4)=0  (10,5)=0  (10,6)=0  (10,10)=3  (10,11)=3  (10,12)=1  (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (12,0)=1  (12,2)=8  (12,3)=5# (12,5)=1  (12,7)=9# (12,8)=9# (12,10)=1  (12,12)=5# (12,13)=8  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=8  (13,3)=8  (13,6)=9# (13,9)=9# (13,12)=8  (13,13)=8  (13,14)=1  (13,15)=3  (14,2)=1  (14,7)=1  (14,8)=1  (14,12)=3  (14,13)=1  (14,14)=3  (14,15)=3  (15,3)=1  (15,12)=1  (15,13)=3  (15,14)=3  (15,15)=3 
! size mismatch, 10x10 instead of 3x3

TRAIN 9ecd008a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color grey and mask 10001111000100000001100110000010001100001100010000100000010000001111000011110001101000000101101100000000000011100000000000000110000000000000011100000000000011011010000001011000111100001111000000100000010000100011000011000100000110011000000010001111000100
  [01]: a rectangle at (0,0) with size (5,16) and color green and mask full
  [011]: a rectangle at (11,0) with size (5,5) and color green and mask 1111000101111111010111101
  [0111]: a rectangle at (11,11) with size (5,5) and color green and mask 111110100111111010110111
  [01111]: a rectangle at (4,4) with size (8,7) and color blue and mask 10110110100101000001000000010000001100001001001011111111
diff: 
delta: (0,0)=9# (0,5)=9# (0,10)=9# (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,14)=9# (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (3,1)=6  (3,3)=6  (3,5)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=8  (3,12)=6  (3,14)=6  (4,1)=9# (4,6)=2  (4,7)=1  (4,8)=1  (4,9)=2  (4,14)=9# (5,0)=9# (5,3)=8  (5,5)=8  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (7,1)=8  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,14)=8  (8,1)=8  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,14)=8  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (10,0)=9# (10,3)=8  (10,5)=8  (10,10)=8  (10,12)=8  (10,15)=9# (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (12,5)=8  (12,10)=8  (14,1)=9# (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,14)=9# (15,0)=9# (15,5)=9# (15,10)=9# (15,15)=9#
   (2330.0 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,2) and color blue and mask 11010
diff: 
delta: (2,1)=2 
   (67.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color grey and mask 10001111000100000001100110000010001100001100010000100000010000001111000011110001101000000101101100000000000011100000000000000110000000000000011100000000000011011010000001011000111100001111000000100000010000100011000011000100000110011000000010001111000100
  [01]: a rectangle at (0,0) with size (5,16) and color green and mask full
  [011]: a rectangle at (11,0) with size (5,5) and color green and mask 1111000101111111010111101
  [0111]: a rectangle at (11,11) with size (5,5) and color green and mask 111110100111111010110111
  [01111]: a rectangle at (4,4) with size (8,7) and color blue and mask 10110110100101000001000000010000001100001001001011111111
diff: 
delta: (0,0)=9# (0,5)=9# (0,10)=9# (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,14)=9# (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (3,1)=6  (3,3)=6  (3,5)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=8  (3,12)=6  (3,14)=6  (4,1)=9# (4,6)=2  (4,7)=1  (4,8)=1  (4,9)=2  (4,14)=9# (5,0)=9# (5,3)=8  (5,5)=8  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (7,1)=8  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,14)=8  (8,1)=8  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,14)=8  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (10,0)=9# (10,3)=8  (10,5)=8  (10,10)=8  (10,12)=8  (10,15)=9# (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (12,5)=8  (12,10)=8  (14,1)=9# (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,14)=9# (15,0)=9# (15,5)=9# (15,10)=9# (15,15)=9#
! size mismatch, 10x10 instead of 3x3

TRAIN 9ecd008a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 110000000000000100100000000000100001000000000100000010000000110000001100000100000000001000100000000000010100000000000000110000000000000010100000000000000001000000000000000011000000110000000100000010000000001000010000000000010010000000000000110000000
  [01]: a rectangle at (0,4) with size (5,8) and color grey and mask 1010010111100111111111110011110000111100
  [011]: a rectangle at (0,0) with size (4,16) and color brown and mask full
  [0111]: a rectangle at (6,6) with size (4,4) and color brown and mask 1001011001101001
  [01111]: a rectangle at (4,4) with size (8,8) and color red and mask 1001100100100100011001101001100110011001011001100010010010111101
diff: 
delta: (0,0)=4  (0,1)=8  (0,4)=6  (0,5)=6  (0,10)=6  (0,11)=6  (0,14)=8  (0,15)=4  (1,0)=8  (1,1)=6  (1,4)=6  (1,5)=7# (1,10)=7# (1,11)=6  (1,14)=6  (1,15)=8  (2,2)=5# (2,3)=2  (2,12)=2  (2,13)=5# (3,2)=2  (3,3)=2  (3,12)=2  (3,13)=2  (4,0)=6  (4,1)=6  (4,5)=4  (4,10)=4  (4,14)=6  (4,15)=6  (5,0)=6  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=4  (5,5)=4  (5,7)=7# (5,8)=7# (5,10)=4  (5,11)=4  (5,14)=7# (5,15)=6  (6,1)=0  (6,2)=0  (6,3)=0  (7,1)=0  (7,2)=0  (7,3)=0  (7,5)=7# (7,10)=7# (7,12)=9# (8,3)=9# (8,5)=7# (8,10)=7# (8,12)=9# (10,0)=6  (10,1)=7# (10,4)=4  (10,5)=4  (10,7)=7# (10,8)=7# (10,10)=4  (10,11)=4  (10,14)=7# (10,15)=6  (11,0)=6  (11,1)=6  (11,5)=4  (11,10)=4  (11,14)=6  (11,15)=6  (12,0)=9# (12,1)=9# (12,2)=2  (12,3)=2  (12,7)=9# (12,8)=9# (12,12)=2  (12,13)=2  (12,14)=9# (12,15)=9# (13,0)=9# (13,1)=9# (13,3)=2  (13,12)=2  (13,14)=9# (13,15)=9# (14,0)=8  (14,1)=6  (14,2)=9# (14,3)=9# (14,4)=6  (14,5)=7# (14,10)=7# (14,11)=6  (14,12)=9# (14,13)=9# (14,14)=6  (14,15)=8  (15,0)=4  (15,1)=8  (15,2)=9# (15,3)=9# (15,4)=6  (15,5)=6  (15,10)=6  (15,11)=6  (15,12)=9# (15,13)=9# (15,14)=8  (15,15)=4 
! size mismatch, 10x10 instead of 3x3

TEST 9ecd008a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2279.6 bits (2279.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-158] Checking task 9edfc990.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 65375.6 = 65384.6
DL output with Mo: L = 9.0 + 68976.3 = 68985.3
DL input+output M: L = 17.9 + 134352.0 = 134369.9

# learning a model for train pairs
134369.9	
133301.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
132415.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
131700.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
130253.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
128497.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 63386.9 = 63430.3
DL output with Mo: L = 59.8 + 65007.0 = 65066.7
DL input+output M: L = 103.1 + 128393.9 = 128497.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (5,7) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (7,5) with size (3,2) and color grey and mask 101001
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,0)=9# (8,1)=9# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (1337.8 bits)
data: a background with size (13,13) and color brown and layers
  [0]: a rectangle at (0,0) with size (13,13) and color blue and mask 111110100111011100111111100010000101101011110010110111011011110010110110001110010001110110000101111110000001100111001011111010011000100110001000111111101110001010011110
  [01]: a rectangle at (5,7) with size (3,3) and color orange and mask full
  [011]: a rectangle at (7,5) with size (3,2) and color grey and mask full
diff: 
delta: (0,5)=2  (0,6)=8  (0,10)=2  (0,11)=0  (1,3)=6  (1,12)=5# (2,2)=4  (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,11)=0  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,11)=4  (4,0)=3  (4,1)=6  (4,5)=3  (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,0)=0  (5,1)=8  (5,10)=8  (5,11)=0  (5,12)=0  (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (1298.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (5,7) with size (3,3) and color orange and mask 10101010
  [01]: a rectangle at (7,5) with size (3,2) and color grey and mask 101001
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,0)=9# (8,1)=9# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! size mismatch, 10x10 instead of 13x13

TRAIN 9edfc990.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,0) with size (2,3) and color orange and mask 1111
  [01]: a rectangle at (4,7) with size (3,3) and color yellow and mask 1010101
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,6)=5# (0,7)=5# (0,8)=5# (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
   (2080.7 bits)
data: a background with size (15,15) and color yellow and layers
  [0]: a rectangle at (0,0) with size (15,15) and color blue and mask 111101110000001100111100000101011100010001111110011011001100011011101001011001010111011111111100101101100111101111101100000101101000000001101011010000000110000110000001001011101000101011100111000101110011100000111100000000000
  [01]: a rectangle at (14,2) with size (1,9) and color cyan and mask full
  [011]: a rectangle at (4,0) with size (2,3) and color orange and mask full
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,3)=0  (0,4)=9# (0,5)=6  (0,6)=5# (0,7)=5# (0,8)=5# (0,9)=0  (0,10)=2  (1,0)=3  (1,1)=0  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,1)=0  (3,8)=6  (3,10)=6  (3,11)=9# (3,14)=2  (4,3)=3  (4,6)=6  (4,8)=0  (4,12)=3  (4,13)=0  (4,14)=0  (5,1)=6  (5,2)=0  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,0)=0  (6,1)=0  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,13)=0  (6,14)=3  (7,0)=0  (7,1)=8  (7,4)=2  (7,10)=2  (8,0)=3  (8,1)=3  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,13)=2  (9,14)=8  (10,5)=9# (10,7)=7# (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,5)=5# (11,8)=9# (11,11)=6  (12,4)=9# (12,5)=6  (12,6)=3  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,4)=0  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (14,1)=9# (14,4)=0  (14,5)=6 
   (2055.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,0) with size (2,3) and color orange and mask 1111
  [01]: a rectangle at (4,7) with size (3,3) and color yellow and mask 1010101
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,6)=5# (0,7)=5# (0,8)=5# (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 9edfc990.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (8,5) with size (3,3) and color pink and mask 10100011
  [01]: a rectangle at (10,11) with size (3,3) and color red and mask 101010010
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,9)=9# (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,8)=9# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,8)=9# (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,7)=9# (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (2920.2 bits)
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,0) with size (6,13) and color blue and mask full
  [01]: a rectangle at (12,1) with size (4,10) and color blue and mask full
  [011]: a rectangle at (7,12) with size (3,4) and color blue and mask 111111011001
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,11)=1  (0,12)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=1  (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,0)=0  (3,1)=2  (3,2)=6  (3,7)=3  (3,11)=8  (3,12)=0  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,1)=0  (7,2)=7# (7,3)=8  (7,9)=9# (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,5)=6  (8,6)=6  (8,7)=5# (8,8)=9# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,7)=6  (9,8)=9# (9,9)=1  (9,10)=1  (9,11)=7# (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,6)=6  (10,7)=9# (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,12)=2  (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,12)=2  (11,13)=1  (11,14)=1  (11,15)=1  (12,0)=9# (12,4)=6  (12,6)=8  (12,8)=3  (12,9)=3  (12,10)=0  (12,11)=2  (12,13)=2  (12,14)=1  (12,15)=4  (13,1)=4  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,8)=5# (14,9)=9# (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (3146.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (8,5) with size (3,3) and color pink and mask 10100011
  [01]: a rectangle at (10,11) with size (3,3) and color red and mask 101010010
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,9)=9# (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,8)=9# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,8)=9# (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,7)=9# (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN 9edfc990.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (4,12) with size (2,3) and color brown and mask 10111
  [01]: a rectangle at (3,7) with size (3,2) and color red and mask 101011
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,10)=6  (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,11)=6  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (2,12)=6  (3,1)=5# (3,2)=8  (3,4)=9# (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (7,13)=4  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (8,14)=4  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (9,14)=4  (9,15)=4  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,4)=7# (14,5)=7# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,6)=7# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! size mismatch, 10x10 instead of 16x16

TEST 9edfc990.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 65007.0 bits (65007.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-157] Checking task 9f236235.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 89686.4 = 89695.4
DL output with Mo: L = 9.0 + 2806.9 = 2815.9
DL input+output M: L = 17.9 + 92493.3 = 92511.3

# learning a model for train pairs
92511.3	
54179.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
39533.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
32658.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
25723.8	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
24999.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24599.3	OUT DEF: size={layer[011].size}
24461.1	OUT DEF: layer[0].color={layer[01].color}
24390.5	IN  DEF: layer[01].mask=full
24319.8	IN  DEF: layer[011].mask=full
24249.2	IN  DEF: layer[0111].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[011].size} and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full
  [0111]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 73.0 + 22622.9 = 22695.9
DL output with Mo: L = 29.6 + 1523.7 = 1553.3
DL input+output M: L = 102.6 + 24146.6 = 24249.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (0,0) with size (19,19) and color red and mask 100001000010000000010000100001000000001000010000100000000100001000010000111111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111111111111111000010000100001000000001000010000100000000100001000010000000010000100001000011111111111111111110000100001000010000000010000100001000000001000010000100000000100001000010000
  [01]: a rectangle at (15,0) with size (4,14) and color green and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color green and mask full
  [0111]: a rectangle at (5,5) with size (4,4) and color green and mask full
diff: 
delta: (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3 
   (843.6 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,1) with size (4,3) and color green and mask 111001010100
diff: 
delta:
   (36.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (0,0) with size (19,19) and color red and mask 100001000010000000010000100001000000001000010000100000000100001000010000111111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111111111111111000010000100001000000001000010000100000000100001000010000000010000100001000011111111111111111110000100001000010000000010000100001000000001000010000100000000100001000010000
  [01]: a rectangle at (15,0) with size (4,14) and color green and mask full
  [011]: a rectangle at (0,0) with size (4,4) and color green and mask full
  [0111]: a rectangle at (5,5) with size (4,4) and color green and mask full
diff: 
delta: (10,10)=3  (10,11)=3  (10,12)=3  (10,13)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (12,10)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3 
! 10 wrong pixels (generated / expected)

TRAIN 9f236235.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (0,0) with size (19,19) and color cyan and mask 100001000010000000010000100001000000001000010000100000000100001000010000111111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111111111111111000010000100001000000001000010000100000000100001000010000000010000100001000011111111111111111110000100001000010000000010000100001000000001000010000100000000100001000010000
  [01]: a rectangle at (0,5) with size (4,4) and color red and mask full
  [011]: a rectangle at (5,0) with size (4,4) and color red and mask full
  [0111]: a rectangle at (5,5) with size (4,4) and color blue and mask full
diff: 
delta: (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (12,10)=1  (12,11)=1  (12,12)=1  (12,13)=1  (13,10)=1  (13,11)=1  (13,12)=1  (13,13)=1  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
   (1152.8 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,2) with size (2,2) and color red and mask 1001
diff: 
delta: (1,2)=1  (2,1)=1  (3,0)=3 
   (74.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (0,0) with size (19,19) and color cyan and mask 100001000010000000010000100001000000001000010000100000000100001000010000111111111111111111100001000010000100000000100001000010000000010000100001000000001000010000100001111111111111111111000010000100001000000001000010000100000000100001000010000000010000100001000011111111111111111110000100001000010000000010000100001000000001000010000100000000100001000010000
  [01]: a rectangle at (0,5) with size (4,4) and color red and mask full
  [011]: a rectangle at (5,0) with size (4,4) and color red and mask full
  [0111]: a rectangle at (5,5) with size (4,4) and color blue and mask full
diff: 
delta: (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (12,10)=1  (12,11)=1  (12,12)=1  (12,13)=1  (13,10)=1  (13,11)=1  (13,12)=1  (13,13)=1  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
! 9 wrong pixels (generated / expected)

TRAIN 9f236235.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color red and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (4,0) with size (3,7) and color cyan and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (8,8) with size (3,3) and color yellow and mask full
diff: 
delta:
   (265.9 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color cyan and mask 1101
diff: 
delta: (2,0)=4 
   (41.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (0,0) with size (11,11) and color red and mask 1000100000010001000000100010001111111111100010001000000100010000001000100011111111111000100010000001000100000010001000
  [01]: a rectangle at (4,0) with size (3,7) and color cyan and mask full
  [011]: a rectangle at (0,4) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (8,8) with size (3,3) and color yellow and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 9f236235.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color cyan and mask
  [01]: a rectangle at (0,6) with size (23,5) and color green and mask full
  [011]: a rectangle at (0,0) with size (5,23) and color blue and mask full
  [0111]: a rectangle at (12,0) with size (5,5) and color red and mask full
diff: 
delta: (12,18)=2  (12,19)=2  (12,20)=2  (12,21)=2  (12,22)=2  (13,18)=2  (13,19)=2  (13,20)=2  (13,21)=2  (13,22)=2  (14,18)=2  (14,19)=2  (14,20)=2  (14,21)=2  (14,22)=2  (15,18)=2  (15,19)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,18)=2  (16,19)=2  (16,20)=2  (16,21)=2  (16,22)=2 
! size mismatch, 5x23 instead of 4x4
>> Trial 2
data: a background with size (23,23) and color black and layers
  [0]: a rectangle at (0,0) with size (23,23) and color cyan and mask
  [01]: a rectangle at (0,6) with size (23,5) and color green and mask full
  [011]: a rectangle at (12,0) with size (5,5) and color red and mask full
  [0111]: a rectangle at (0,0) with size (5,23) and color blue and mask full
diff: 
delta: (12,18)=2  (12,19)=2  (12,20)=2  (12,21)=2  (12,22)=2  (13,18)=2  (13,19)=2  (13,20)=2  (13,21)=2  (13,22)=2  (14,18)=2  (14,19)=2  (14,20)=2  (14,21)=2  (14,22)=2  (15,18)=2  (15,19)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,18)=2  (16,19)=2  (16,20)=2  (16,21)=2  (16,22)=2 
! size mismatch, 5x5 instead of 4x4

TEST 9f236235.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1523.7 bits (1523.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-156] Checking task a1570a43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11885.5 = 11894.4
DL output with Mo: L = 9.0 + 11885.5 = 11894.4
DL input+output M: L = 17.9 + 23771.0 = 23788.9

# learning a model for train pairs
23788.9	
17923.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12057.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10963.6	OUT DEF: layer[0].mask={layer[0].mask}
10231.9	OUT DEF: size={size}
9621.5	OUT DEF: layer[0].size={layer[0].size}
9435.1	OUT DEF: layer[0].color={layer[0].color}
9250.6	IN  DEF: layer[0].color=red
9142.1	OUT SHAPE at layer[01]: a point at ? with color ?
8957.7	OUT DEF: layer[01].color=green
8841.4	OUT SHAPE at layer[011]: a point at ? with color ?
8657.0	OUT DEF: layer[011].color=green
8526.9	OUT SHAPE at layer[0111]: a point at ? with color ?
8342.5	OUT DEF: layer[0111].color=green
8179.1	OUT SHAPE at layer[01111]: a point at ? with color ?
7994.7	OUT DEF: layer[01111].color=green
7887.1	IN  SHAPE at layer[01]: a point at ? with color ?
7474.7	OUT DEF: layer[01]={layer[01]}
7290.3	IN  DEF: layer[01].color=green
7175.2	IN  SHAPE at layer[011]: a point at ? with color ?
6763.4	OUT DEF: layer[011]={layer[011]}
6578.9	IN  DEF: layer[011].color=green
6450.2	IN  SHAPE at layer[0111]: a point at ? with color ?
6038.7	OUT DEF: layer[0111]={layer[0111]}
5854.3	IN  DEF: layer[0111].color=green
5692.3	IN  SHAPE at layer[01111]: a point at ? with color ?
5281.1	OUT DEF: layer[01111]={layer[01111]}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [01]: {layer[01]}
  [011]: {layer[011]}
  [0111]: {layer[0111]}
  [01111]: {layer[01111]}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color red and mask ?
  [01]: a point at ? with color green
  [011]: a point at ? with color green
  [0111]: a point at ? with color green
  [01111]: a point at ? with color ?

DL input  with Mi: L = 70.9 + 4702.0 = 4772.9
DL output with Mo: L = 45.1 + 463.1 = 508.2
DL input+output M: L = 116.0 + 5165.1 = 5281.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color red and mask 11000010111110011000100
  [01]: a point at (0,0) with color green
  [011]: a point at (0,6) with color green
  [0111]: a point at (6,0) with color green
  [01111]: a point at (6,6) with color green
diff: 
delta:
   (113.8 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask 11000010111110011000100
  [01]: a point at (0,0) with color green
  [011]: a point at (0,6) with color green
  [0111]: a point at (6,0) with color green
  [01111]: a point at (6,6) with color green
diff: 
delta:
   (11.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color red and mask 11000010111110011000100
  [01]: a point at (0,0) with color green
  [011]: a point at (0,6) with color green
  [0111]: a point at (6,0) with color green
  [01111]: a point at (6,6) with color green
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN a1570a43.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,0) with size (5,5) and color red and mask 100001111001010011111100
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (7,1) with color green
  [01111]: a point at (7,7) with color green
diff: 
delta:
   (118.9 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color red and mask 100001111001010011111100
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (7,1) with color green
  [01111]: a point at (7,7) with color green
diff: 
delta:
   (11.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,0) with size (5,5) and color red and mask 100001111001010011111100
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (7,1) with color green
  [01111]: a point at (7,7) with color green
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN a1570a43.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,5) and color red and mask 11000100111000111100110
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (7,1) with color green
  [01111]: a point at (7,7) with color green
diff: 
delta:
   (119.9 bits)
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (2,2) with size (5,5) and color red and mask 11000100111000111100110
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (7,1) with color green
  [01111]: a point at (7,7) with color green
diff: 
delta:
   (11.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  [0]: a rectangle at (0,2) with size (5,5) and color red and mask 11000100111000111100110
  [01]: a point at (1,1) with color green
  [011]: a point at (1,7) with color green
  [0111]: a point at (7,1) with color green
  [01111]: a point at (7,7) with color green
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN a1570a43.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,8) and color black and layers
  [0]: a rectangle at (1,0) with size (5,5) and color red and mask 1011111000100111001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,6) with color green
  [0111]: a point at (6,0) with color green
  [01111]: a point at (6,6) with color green
diff: 
delta:
   (117.7 bits)
data: a background with size (9,8) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask 1011111000100111001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,6) with color green
  [0111]: a point at (6,0) with color green
  [01111]: a point at (6,6) with color green
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  [0]: a rectangle at (1,0) with size (5,5) and color red and mask 1011111000100111001000
  [01]: a point at (0,0) with color green
  [011]: a point at (0,6) with color green
  [0111]: a point at (6,0) with color green
  [01111]: a point at (6,6) with color green
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN a1570a43.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  [0]: a rectangle at (2,0) with size (5,5) and color red and mask 111111001110001100001
  [01]: a point at (1,0) with color green
  [011]: a point at (1,6) with color green
  [0111]: a point at (7,0) with color green
  [01111]: a point at (7,6) with color green
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST a1570a43.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 463.1 bits (463.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-155] Checking task a2fd1cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1874.8 = 1883.8
DL output with Mo: L = 9.0 + 10706.3 = 10715.2
DL input+output M: L = 17.9 + 12581.1 = 12599.0

# learning a model for train pairs
12599.0	
6828.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5627.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4996.6	OUT DEF: size={size}
4858.6	OUT DEF: layer[0].color=cyan
4720.6	OUT DEF: layer[01].color=cyan
4625.7	OUT SHAPE at layer[011]: a point at ? with color ?
4487.7	OUT DEF: layer[011].color=red
4367.6	OUT SHAPE at layer[0111]: a point at ? with color ?
4229.6	OUT DEF: layer[0111].color=green
4136.1	IN  SHAPE at layer[0]: a point at ? with color ?
3783.6	OUT DEF: layer[011]={layer[0]}
3645.6	IN  DEF: layer[0].color=red
3527.3	IN  SHAPE at layer[01]: a point at ? with color ?
3175.8	OUT DEF: layer[0111]={layer[01]}
3037.8	IN  DEF: layer[01].color=green
2967.1	OUT DEF: layer[0].mask=full
2896.5	OUT DEF: layer[01].mask=full
2850.8	OUT DEF: color=black
2805.2	IN  DEF: color=black
2770.2	OUT DEF: layer[0].pos=(?,?)
2614.2	OUT DEF: layer[0].pos.j={layer[01].pos.j}
2579.2	OUT DEF: layer[0].size=(?,?)
2508.5	OUT DEF: layer[0].size.j=1
2473.5	OUT DEF: layer[01].pos=(?,?)
2326.5	OUT DEF: layer[01].pos.i={layer[0].pos.i}
2291.4	OUT DEF: layer[01].size=(?,?)
2220.8	OUT DEF: layer[01].size.i=1
2185.8	IN  DEF: size=(?,?)
2150.8	IN  DEF: layer[0].pos=(?,?)
2115.7	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,{layer[01].pos.j}) with size (?,1) and color cyan and mask full
  [01]: a rectangle at ({layer[0].pos.i},?) with size (1,?) and color cyan and mask full
  [011]: {layer[0]}
  [0111]: {layer[01]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color red
  [01]: a point at (?,?) with color green

DL input  with Mi: L = 44.8 + 1199.1 = 1243.8
DL output with Mo: L = 66.9 + 805.0 = 871.9
DL input+output M: L = 111.7 + 2004.1 = 2115.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a point at (1,4) with color red
  [01]: a point at (13,10) with color green
diff: 
delta:
   (41.2 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (1,10) with size (12,1) and color cyan and mask full
  [01]: a rectangle at (1,5) with size (1,6) and color cyan and mask full
  [011]: a point at (1,4) with color red
  [0111]: a point at (13,10) with color green
diff: 
delta:
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (1,4) with color red
  [01]: a point at (13,10) with color green
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a point at (13,10) with color green
  [01]: a point at (1,4) with color red
diff:   layer[01].color  layer[0].color
delta:
! 21 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,16) and color black and layers
  [0]: a point at (7,1) with color red
  [01]: a point at (1,11) with color green
diff: 
delta:
   (39.2 bits)
data: a background with size (10,16) and color black and layers
  [0]: a rectangle at (2,11) with size (6,1) and color cyan and mask full
  [01]: a rectangle at (7,2) with size (1,10) and color cyan and mask full
  [011]: a point at (7,1) with color red
  [0111]: a point at (1,11) with color green
diff: 
delta:
   (26.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color black and layers
  [0]: a point at (7,1) with color red
  [01]: a point at (1,11) with color green
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color black and layers
  [0]: a point at (1,11) with color green
  [01]: a point at (7,1) with color red
diff:   layer[01].color  layer[0].color
delta:
! 18 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  [0]: a point at (1,11) with color red
  [01]: a point at (10,4) with color green
diff: 
delta:
   (39.5 bits)
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (1,4) with size (9,1) and color cyan and mask full
  [01]: a rectangle at (1,4) with size (1,7) and color cyan and mask full
  [011]: a point at (1,11) with color red
  [0111]: a point at (10,4) with color green
diff: 
delta:
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  [0]: a point at (1,11) with color red
  [01]: a point at (10,4) with color green
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  [0]: a point at (10,4) with color green
  [01]: a point at (1,11) with color red
diff:   layer[01].color  layer[0].color
delta:
! 19 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  [0]: a point at (2,1) with color red
  [01]: a point at (10,10) with color green
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  [0]: a point at (10,10) with color green
  [01]: a point at (2,1) with color red
diff:   layer[01].color  layer[0].color
delta:
! 20 wrong pixels (generated / expected)

TEST a2fd1cf0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 805.0 bits (805.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-154] Checking task a3325580.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15922.4 = 15931.4
DL output with Mo: L = 9.0 + 5517.0 = 5526.0
DL input+output M: L = 17.9 + 21439.4 = 21457.4

# learning a model for train pairs
21457.4	
18531.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15848.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14111.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
13634.4	OUT DEF: color={layer[0].color}
13545.0	IN  DEF: color=black
13470.4	OUT DEF: size=(?,?)
13395.7	IN  DEF: size=(?,?)
12863.4	IN  DEF: size.i=10
12331.1	IN  DEF: size.j=10
12256.4	IN  DEF: layer[0].pos=(?,?)
12181.7	IN  DEF: layer[0].size=(?,?)
12107.1	IN  DEF: layer[01].pos=(?,?)
12032.4	IN  DEF: layer[01].size=(?,?)
11957.7	IN  DEF: layer[011].pos=(?,?)
11883.0	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color {layer[0].color} and layers
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 101.7 + 6806.8 = 6908.5
DL output with Mo: L = 14.8 + 4959.7 = 4974.5
DL input+output M: L = 116.5 + 11766.5 = 11883.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,7) with size (3,3) and color cyan and mask 100100111
  [01]: a rectangle at (2,2) with size (4,2) and color yellow and mask 1110101
  [011]: a rectangle at (3,5) with size (3,2) and color pink and mask 111011
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
   (178.1 bits)
data: a background with size (5,3) and color cyan and layers
diff: 
delta: (0,0)=4  (0,1)=6  (1,0)=4  (1,1)=6  (2,0)=4  (2,1)=6  (3,0)=4  (3,1)=6  (4,0)=4  (4,1)=6 
   (167.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,7) with size (3,3) and color cyan and mask 100100111
  [01]: a rectangle at (2,2) with size (4,2) and color yellow and mask 1110101
  [011]: a rectangle at (3,5) with size (3,2) and color pink and mask 111011
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 10x10 instead of 5x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,5) with size (3,2) and color pink and mask 111011
  [01]: a rectangle at (1,7) with size (3,3) and color cyan and mask 100100111
  [011]: a rectangle at (2,2) with size (4,2) and color yellow and mask 1110101
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 10x10 instead of 5x3

TRAIN a3325580.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (6,3) and color brown and mask 10110010011110010
  [01]: a rectangle at (0,7) with size (5,3) and color yellow and mask 100110100101111
  [011]: a rectangle at (3,4) with size (4,3) and color pink and mask 100111010010
diff: 
delta:
   (131.0 bits)
data: a background with size (9,2) and color brown and layers
diff: 
delta: (0,1)=4  (1,1)=4  (2,1)=4  (3,1)=4  (4,1)=4  (5,1)=4  (6,1)=4  (7,1)=4  (8,1)=4 
   (155.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,7) with size (5,3) and color yellow and mask 100110100101111
  [01]: a rectangle at (3,0) with size (6,3) and color brown and mask 10110010011110010
  [011]: a rectangle at (3,4) with size (4,3) and color pink and mask 100111010010
diff: 
delta:
! size mismatch, 10x10 instead of 9x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (6,3) and color brown and mask 10110010011110010
  [01]: a rectangle at (0,7) with size (5,3) and color yellow and mask 100110100101111
  [011]: a rectangle at (3,4) with size (4,3) and color pink and mask 100111010010
diff: 
delta:
! size mismatch, 10x10 instead of 9x2

TRAIN a3325580.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,5) with size (3,3) and color red and mask 10110011
  [01]: a rectangle at (1,0) with size (2,3) and color orange and mask 100111
  [011]: a rectangle at (0,9) with size (4,1) and color blue and mask full
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
   (149.9 bits)
data: a background with size (5,1) and color red and layers
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,5) with size (3,3) and color red and mask 10110011
  [01]: a rectangle at (1,0) with size (2,3) and color orange and mask 100111
  [011]: a rectangle at (0,9) with size (4,1) and color blue and mask full
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 10x10 instead of 5x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color orange and mask 100111
  [01]: a rectangle at (1,5) with size (3,3) and color red and mask 10110011
  [011]: a rectangle at (0,9) with size (4,1) and color blue and mask full
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 10x10 instead of 5x1

TRAIN a3325580.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (8,4) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (4,6) with size (2,1) and color pink and mask full
diff: 
delta:
   (69.9 bits)
data: a background with size (3,1) and color cyan and layers
diff: 
delta:
   (7.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (8,4) with size (1,2) and color yellow and mask full
  [011]: a rectangle at (4,6) with size (2,1) and color pink and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,4) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (3,2) with size (3,1) and color cyan and mask full
  [011]: a rectangle at (4,6) with size (2,1) and color pink and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x1

TRAIN a3325580.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color green and mask 1011
  [01]: a rectangle at (5,1) with size (1,2) and color red and mask full
  [011]: a rectangle at (4,1) with size (2,1) and color red and mask full
diff: 
delta:
   (74.7 bits)
data: a background with size (3,2) and color green and layers
diff: 
delta: (0,0)=2  (1,0)=2  (2,0)=2 
   (54.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color green and mask 1011
  [01]: a rectangle at (5,1) with size (1,2) and color red and mask full
  [011]: a rectangle at (4,1) with size (2,1) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,1) with size (2,2) and color red and mask 1101
  [01]: a rectangle at (2,5) with size (1,2) and color green and mask full
  [011]: a rectangle at (2,6) with size (2,1) and color green and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x2

TRAIN a3325580.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,7) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (5,3) with size (2,2) and color yellow and mask 111
  [011]: a rectangle at (2,1) with size (3,1) and color blue and mask full
diff: 
delta:
   (77.0 bits)
data: a background with size (3,3) and color cyan and layers
diff: 
delta: (0,0)=1  (0,1)=4  (1,0)=1  (1,1)=4  (2,0)=1  (2,1)=4 
   (101.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,7) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (5,3) with size (2,2) and color yellow and mask 111
  [011]: a rectangle at (2,1) with size (3,1) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (2,2) and color yellow and mask 111
  [01]: a rectangle at (3,7) with size (1,3) and color cyan and mask full
  [011]: a rectangle at (2,1) with size (3,1) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN a3325580.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,7) with size (2,3) and color blue and mask 111010
  [01]: a rectangle at (1,1) with size (3,2) and color grey and mask 101110
  [011]: a rectangle at (7,3) with size (3,2) and color red and mask 10111
diff: 
delta: (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (8,0)=8 
! size mismatch, 10x10 instead of 4x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,2) and color grey and mask 101110
  [01]: a rectangle at (0,7) with size (2,3) and color blue and mask 111010
  [011]: a rectangle at (7,3) with size (3,2) and color red and mask 10111
diff: 
delta: (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (8,0)=8 
! size mismatch, 10x10 instead of 4x3

TEST a3325580.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4959.7 bits (4959.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-153] Checking task a3df8b1e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1047.2 = 1056.1
DL output with Mo: L = 9.0 + 5520.9 = 5529.9
DL input+output M: L = 17.9 + 6568.1 = 6586.0

# learning a model for train pairs
6586.0	
3439.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2968.6	OUT DEF: size={size}
2497.3	OUT DEF: layer[0].size={size}
2359.3	OUT DEF: layer[0].color=blue
2241.6	IN  SHAPE at layer[0]: a point at ? with color ?
2103.6	IN  DEF: layer[0].color=blue
2058.0	OUT DEF: color=black
2012.4	IN  DEF: color=black
1977.3	OUT DEF: layer[0].pos=(?,?)
1839.0	OUT DEF: layer[0].pos.i={layer[0].pos.j}
1753.1	OUT DEF: layer[0].pos.j={layer[0].pos.j}
1718.1	IN  DEF: size=(?,?)
1454.8	IN  DEF: size.i=10
1419.7	IN  DEF: layer[0].pos=(?,?)
1281.7	IN  DEF: layer[0].pos.i=9
1199.1	IN  DEF: layer[0].pos.j=0
1197.2	OUT DEF: layer[0].color={layer[0].color}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.j},{layer[0].pos.j}) with size {size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (10,?) and color black and layers
  [0]: a point at (9,0) with color blue

DL input  with Mi: L = 38.5 + 161.4 = 199.9
DL output with Mo: L = 27.6 + 969.7 = 997.3
DL input+output M: L = 66.2 + 1131.0 = 1197.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,2) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
   (4.3 bits)
data: a background with size (10,2) and color black and layers
  [0]: a rectangle at (0,0) with size (10,2) and color blue and mask 1100110011001100110
diff: 
delta:
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
   (5.5 bits)
data: a background with size (10,3) and color black and layers
  [0]: a rectangle at (0,0) with size (10,3) and color blue and mask 1010100010001010100010001010
diff: 
delta:
   (32.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
   (6.3 bits)
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (0,0) with size (10,4) and color blue and mask 1001001001000010000100001001001001000
diff: 
delta:
   (42.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST a3df8b1e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 969.7 bits (969.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-152] Checking task a416b8f3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3838.6 = 3847.6
DL output with Mo: L = 9.0 + 7615.2 = 7624.2
DL input+output M: L = 17.9 + 11453.8 = 11471.8

# learning a model for train pairs
11471.8	
10673.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10313.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9854.0	OUT DEF: layer[0]={layer[0]}
9117.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8755.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8464.5	OUT DEF: layer[01].size={layer[0].size}
8246.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8082.0	OUT DEF: layer[011].pos={layer[01].pos}
7912.4	OUT DEF: layer[01].mask={layer[0].mask}
7773.3	OUT DEF: layer[011].color={layer[01].color}
7634.4	OUT DEF: layer[01].color={layer[0].color}
7496.4	IN  DEF: layer[01].color=red
7413.0	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7139.0	OUT DEF: layer[011]={layer[01]}
7051.0	OUT DEF: layer[0111].size={layer[01].size}
6833.0	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
6693.9	OUT DEF: layer[0111].color={layer[01].color}
6623.2	OUT DEF: layer[0111].mask=full
6552.6	OUT DEF: layer[01111].mask=full
6481.9	IN  DEF: layer[01].mask=full
6436.3	OUT DEF: color=black
6390.7	IN  DEF: color=black
6355.7	OUT DEF: size=(?,?)
6128.8	OUT DEF: size.j={size.j + size.j}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,{size.j + size.j}) and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
  [011]: {layer[01]}
  [0111]: a rectangle at ? with size {layer[01].size} and color {layer[01].color} and mask full
  [01111]: a rectangle at ? with size ? and color ? and mask full
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color red and mask full

DL input  with Mi: L = 41.8 + 2971.2 = 3013.0
DL output with Mo: L = 75.7 + 3040.1 = 3115.8
DL input+output M: L = 117.5 + 6011.3 = 6128.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color grey and mask 1110
  [01]: a rectangle at (1,2) with size (1,1) and color red and mask full
diff: 
delta:
   (53.5 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color grey and mask 1110
  [01]: a rectangle at (0,3) with size (2,2) and color grey and mask 1110
  [011]: a rectangle at (1,2) with size (1,1) and color red and mask full
  [0111]: a rectangle at (1,5) with size (1,1) and color red and mask full
  [01111]: a rectangle at (0,0) with size (1,1) and color black and mask full
diff: 
delta:
   (40.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color grey and mask 1110
  [01]: a rectangle at (1,2) with size (1,1) and color red and mask full
diff: 
delta:
! size mismatch, 10x6 instead of 3x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
  [01]: a rectangle at (1,2) with size (1,1) and color red and mask full
diff: 
delta: (0,1)=5#
! size mismatch, 10x6 instead of 3x6

TRAIN a416b8f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (2,1) with size (2,1) and color blue and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta: (0,0)=3  (1,1)=3  (2,2)=8 
   (98.7 bits)
data: a background with size (4,6) and color black and layers
  [0]: a rectangle at (2,1) with size (2,1) and color blue and mask full
  [01]: a rectangle at (2,4) with size (2,1) and color blue and mask full
  [011]: a rectangle at (1,0) with size (2,1) and color red and mask full
  [0111]: a rectangle at (1,3) with size (2,1) and color red and mask full
  [01111]: a rectangle at (2,2) with size (1,4) and color cyan and mask full
diff: 
delta: (0,0)=3  (0,3)=3  (1,1)=3  (1,4)=3 
   (113.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (2,1) with size (2,1) and color blue and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta: (0,0)=3  (1,1)=3  (2,2)=8 
! size mismatch, 10x6 instead of 4x6
>> Trial 2
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask 1001
  [01]: a rectangle at (1,0) with size (2,1) and color red and mask full
diff: 
delta: (2,1)=1  (2,2)=8  (3,1)=1 
! size mismatch, 10x6 instead of 4x6
>> Trial 3
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,1) and color red and mask full
  [01]: a rectangle at (2,1) with size (2,1) and color blue and mask full
diff:   layer[01].color
delta: (0,0)=3  (1,1)=3  (2,2)=8 
! size mismatch, 10x6 instead of 4x6

TRAIN a416b8f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color grey and mask 11001
  [01]: a rectangle at (0,0) with size (3,2) and color red and mask full
diff: 
delta: (0,2)=3  (1,2)=3  (2,2)=8  (2,3)=8  (3,2)=6 
   (145.0 bits)
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color grey and mask 11001
  [01]: a rectangle at (0,4) with size (3,2) and color grey and mask 11001
  [011]: a rectangle at (0,0) with size (3,2) and color red and mask full
  [0111]: a rectangle at (0,4) with size (3,2) and color red and mask full
  [01111]: a rectangle at (2,2) with size (1,6) and color cyan and mask full
diff: 
delta: (0,2)=3  (0,6)=3  (1,2)=3  (1,6)=3  (3,2)=6  (3,6)=6 
   (150.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color grey and mask 11001
  [01]: a rectangle at (0,0) with size (3,2) and color red and mask full
diff: 
delta: (0,2)=3  (1,2)=3  (2,2)=8  (2,3)=8  (3,2)=6 
! size mismatch, 10x8 instead of 4x8

TRAIN a416b8f3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (2,0) with size (2,3) and color pink and mask 11100
  [01]: a rectangle at (0,0) with size (2,1) and color yellow and mask full
diff:   layer[01].color
delta: (1,1)=5# (2,1)=5# (3,2)=1  (4,3)=1 
! size mismatch, 10x8 instead of 5x8
>> Trial 2
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (2,0) with size (2,3) and color pink and mask 11100
  [01]: a rectangle at (1,1) with size (2,1) and color grey and mask full
diff:   layer[01].color
delta: (0,0)=4  (1,0)=4  (3,2)=1  (4,3)=1 
! size mismatch, 10x8 instead of 5x8
>> Trial 3
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (3,0) with size (1,2) and color pink and mask full
  [01]: a rectangle at (0,0) with size (2,1) and color yellow and mask full
diff:   layer[01].color
delta: (1,1)=5# (2,1)=5# (2,2)=6  (3,2)=1  (4,3)=1 
! size mismatch, 10x8 instead of 5x8

TEST a416b8f3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3040.1 bits (3040.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-151] Checking task a48eeaf7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3173.9 = 3182.9
DL output with Mo: L = 9.0 + 3173.9 = 3182.9
DL input+output M: L = 17.9 + 6347.9 = 6365.8

# learning a model for train pairs
6365.8	
5491.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4616.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4052.3	OUT DEF: layer[0]={layer[0]}
3666.5	OUT DEF: size={size}
3575.0	IN  DEF: layer[0].color=red
3523.9	OUT SHAPE at layer[01]: a point at ? with color ?
3432.4	OUT DEF: layer[01].color=grey
3375.7	OUT SHAPE at layer[011]: a point at ? with color ?
3284.2	OUT DEF: layer[011].color=grey
3215.7	OUT SHAPE at layer[0111]: a point at ? with color ?
3124.1	OUT DEF: layer[0111].color=grey
3074.0	IN  SHAPE at layer[01]: a point at ? with color ?
2982.4	IN  DEF: layer[01].color=grey
2926.4	IN  SHAPE at layer[011]: a point at ? with color ?
2858.4	IN  SHAPE at layer[0111]: a point at ? with color ?
2811.0	IN  DEF: layer[0].mask=full
2780.0	OUT DEF: color=black
2688.4	IN  DEF: layer[011].color=grey
2596.9	IN  DEF: layer[0111].color=grey
2565.8	IN  DEF: color=black
2544.0	OUT DEF: layer[01].pos=(?,?)
2458.8	OUT DEF: layer[01].pos.i={layer[0].pos.i - 1}
2377.1	OUT DEF: layer[01].pos.j={size.j - layer[011].pos.i}
2355.3	OUT DEF: layer[011].pos=(?,?)
2265.4	OUT DEF: layer[011].pos.i=3
2181.8	OUT DEF: layer[011].pos.j={layer[0].pos.i + layer[0].size.j}
2160.1	OUT DEF: layer[0111].pos=(?,?)
2070.1	OUT DEF: layer[0111].pos.j=5
1985.4	OUT DEF: layer[0111].pos.i={layer[0].pos.i + layer[0].size.i}
1963.6	IN  DEF: size=(?,?)
1790.0	IN  DEF: size.i=10
1616.3	IN  DEF: size.j=10
1594.5	IN  DEF: layer[0].pos=(?,?)
1572.7	IN  DEF: layer[0].size=(?,?)
1487.3	IN  DEF: layer[0].size.i=2
1401.8	IN  DEF: layer[0].size.j=2
1380.0	IN  DEF: layer[01].pos=(?,?)
1288.5	IN  DEF: layer[01].pos.i=0
1266.7	IN  DEF: layer[011].pos=(?,?)
1244.9	IN  DEF: layer[0111].pos=(?,?)
1244.1	OUT DEF: layer[01].color={layer[01].color}
1243.3	OUT DEF: layer[011].color={layer[011].color}
1242.5	OUT DEF: layer[0111].color={layer[0111].color}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a point at ({layer[0].pos.i - 1},{size.j - layer[011].pos.i}) with color {layer[01].color}
  [011]: a point at (3,{layer[0].pos.i + layer[0].size.j}) with color {layer[011].color}
  [0111]: a point at ({layer[0].pos.i + layer[0].size.i},5) with color {layer[0111].color}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (2,2) and color red and mask full
  [01]: a point at (0,?) with color grey
  [011]: a point at (?,?) with color grey
  [0111]: a point at (?,?) with color grey

DL input  with Mi: L = 101.0 + 845.9 = 946.9
DL output with Mo: L = 99.8 + 195.8 = 295.6
DL input+output M: L = 200.9 + 1041.6 = 1242.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [01]: a point at (0,3) with color grey
  [011]: a point at (7,7) with color grey
  [0111]: a point at (3,8) with color grey
diff: 
delta:
   (32.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [01]: a point at (2,3) with color grey
  [011]: a point at (3,5) with color grey
  [0111]: a point at (5,5) with color grey
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [01]: a point at (0,3) with color grey
  [011]: a point at (3,8) with color grey
  [0111]: a point at (7,7) with color grey
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color red and mask full
  [01]: a point at (0,3) with color grey
  [011]: a point at (7,7) with color grey
  [0111]: a point at (3,8) with color grey
diff: 
delta:
correct output grid

TRAIN a48eeaf7.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
  [01]: a point at (0,8) with color grey
  [011]: a point at (3,1) with color grey
  [0111]: a point at (6,9) with color grey
diff: 
delta: (8,5)=5#
   (52.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
  [01]: a point at (1,7) with color grey
  [011]: a point at (3,4) with color grey
  [0111]: a point at (4,5) with color grey
diff: 
delta: (4,7)=5#
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
  [01]: a point at (0,8) with color grey
  [011]: a point at (3,1) with color grey
  [0111]: a point at (6,9) with color grey
diff: 
delta: (8,5)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color red and mask full
  [01]: a point at (0,8) with color grey
  [011]: a point at (6,9) with color grey
  [0111]: a point at (3,1) with color grey
diff: 
delta: (8,5)=5#
! 3 wrong pixels (generated / expected)

TRAIN a48eeaf7.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,2) with size (2,2) and color red and mask full
  [01]: a point at (0,2) with color grey
  [011]: a point at (1,8) with color grey
  [0111]: a point at (6,7) with color grey
diff: 
delta: (9,2)=5#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,2) with size (2,2) and color red and mask full
  [01]: a point at (0,2) with color grey
  [011]: a point at (6,7) with color grey
  [0111]: a point at (1,8) with color grey
diff: 
delta: (9,2)=5#
! 5 wrong pixels (generated / expected)

TEST a48eeaf7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 195.8 bits (195.8 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-150] Checking task a5313dff.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16354.8 = 16363.8
DL output with Mo: L = 9.0 + 23075.8 = 23084.8
DL input+output M: L = 17.9 + 39430.7 = 39448.6

# learning a model for train pairs
39448.6	
26587.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13789.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9043.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6256.8	OUT DEF: layer[0]={layer[0]}
5693.8	OUT DEF: size={size}
5555.8	OUT DEF: layer[01].color=blue
5417.8	IN  DEF: layer[0].color=red
5347.1	OUT DEF: layer[01].mask=full
5301.5	OUT DEF: color=black
5255.9	IN  DEF: color=black
5220.9	OUT DEF: layer[01].pos=(?,?)
5185.9	OUT DEF: layer[01].size=(?,?)
5023.3	OUT DEF: layer[01].size.j=3
4988.3	IN  DEF: size=(?,?)
4953.3	IN  DEF: layer[0].pos=(?,?)
4918.3	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,3) and color blue and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color red and mask ?

DL input  with Mi: L = 40.0 + 3236.8 = 3276.8
DL output with Mo: L = 39.0 + 1602.5 = 1641.5
DL input+output M: L = 79.0 + 4839.3 = 4918.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask 1111110001101011000111111
diff: 
delta:
   (66.5 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask 1111110001101011000111111
  [01]: a rectangle at (2,2) with size (3,3) and color blue and mask full
diff: 
delta:
   (14.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask 1111110001101011000111111
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color red and layers
  [0]: a rectangle at (0,0) with size (8,8) and color black and mask 1111111111111111110000011101110111010101110111011100000111111111
diff:   color  layer[0].color
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask full
diff: 
delta: (2,2)=0  (2,3)=0  (2,4)=0  (3,2)=0  (3,4)=0  (4,2)=0  (4,3)=0  (4,4)=0 
! 12 wrong pixels (generated / expected)

TRAIN a5313dff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,7) and color red and mask 11111001000100101010010001001111111000100000010100001000
diff: 
delta:
   (99.9 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,7) and color red and mask 11111001000100101010010001001111111000100000010100001000
  [01]: a rectangle at (4,3) with size (3,3) and color blue and mask full
diff: 
delta:
   (14.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (8,7) and color red and mask 11111001000100101010010001001111111000100000010100001000
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (3,2) with size (5,5) and color red and mask full
diff: 
delta: (0,3)=2  (1,1)=2  (1,3)=2  (2,3)=2  (3,0)=2  (3,1)=2  (4,3)=0  (4,4)=0  (4,5)=0  (5,3)=0  (5,5)=0  (6,3)=0  (6,4)=0  (6,5)=0 
! 19 wrong pixels (generated / expected)

TRAIN a5313dff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,3) with size (12,9) and color red and mask 101010000100010000111110000000011111000010001011110101010010001010011111010010001011110101000010001000011111
diff: 
delta:
   (157.3 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,3) with size (12,9) and color red and mask 101010000100010000111110000000011111000010001011110101010010001010011111010010001011110101000010001000011111
  [01]: a rectangle at (1,4) with size (7,3) and color blue and mask full
diff: 
delta: (3,8)=1  (3,9)=1  (4,8)=1  (4,9)=1  (5,8)=1  (5,9)=1 
   (132.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,3) with size (12,9) and color red and mask 101010000100010000111110000000011111000010001011110101010010001010011111010010001011110101000010001000011111
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN a5313dff.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color red and mask 10000000011111111110001000010101000010001001111111001000100001000100001111100
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST a5313dff.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1602.5 bits (1602.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-149] Checking task a5f85a15.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3922.0 = 3931.0
DL output with Mo: L = 9.0 + 3922.0 = 3931.0
DL input+output M: L = 17.9 + 7844.0 = 7861.9

# learning a model for train pairs
7861.9	
6624.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6157.9	OUT DEF: size={size}
6084.3	OUT SHAPE at layer[0]: a point at ? with color ?
5946.3	OUT DEF: layer[0].color=yellow
5867.6	OUT SHAPE at layer[01]: a point at ? with color ?
5779.1	OUT SHAPE at layer[011]: a point at ? with color ?
5704.6	OUT DEF: layer[01].color={color}
5565.0	OUT DEF: layer[011].color={color}
5427.0	IN  DEF: layer[0].color=black
5381.4	OUT DEF: color=black
5346.4	OUT DEF: layer[0].pos=(?,?)
5238.0	OUT DEF: layer[0].pos.i=1
5203.0	OUT DEF: layer[01].pos=(?,?)
5091.8	OUT DEF: layer[01].pos.i={layer[0].pos.i}
5056.8	OUT DEF: layer[011].pos=(?,?)
4948.4	OUT DEF: layer[011].pos.i=2
4913.4	IN  DEF: size=(?,?)
4878.3	IN  DEF: layer[0].pos=(?,?)
4769.9	IN  DEF: layer[0].pos.i=0
4661.4	IN  DEF: layer[0].pos.j=0
4626.4	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a point at (1,?) with color yellow
  [01]: a point at ({layer[0].pos.i},?) with color {color}
  [011]: a point at (2,?) with color {color}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,0) with size (?,?) and color black and mask ?

DL input  with Mi: L = 47.6 + 2250.9 = 2298.5
DL output with Mo: L = 58.1 + 2269.8 = 2327.9
DL input+output M: L = 105.8 + 4520.6 = 4626.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 11101110
diff: 
delta:
   (41.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color yellow
  [01]: a point at (0,0) with color red
  [011]: a point at (2,2) with color red
diff: 
delta:
   (8.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 11101110
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 100010001
diff:   layer[0].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN a5f85a15.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color brown and layers
  [0]: a rectangle at (0,0) with size (8,8) and color black and mask 1111011111111011011111011011111011011111111011111111011111111011
diff: 
delta:
   (107.6 bits)
data: a background with size (8,8) and color black and layers
  [0]: a point at (1,3) with color yellow
  [01]: a point at (0,2) with color brown
  [011]: a point at (2,4) with color brown
diff: 
delta: (3,5)=4  (4,0)=9# (4,6)=9# (5,1)=4  (5,7)=4  (6,2)=9# (7,3)=4 
   (137.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color brown and layers
  [0]: a rectangle at (0,0) with size (8,8) and color black and mask 1111011111111011011111011011111011011111111011111111011111111011
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,2) with size (6,6) and color brown and mask 100000010000001000000100000010000001
diff:   layer[0].color  layer[0].pos.j
delta: (4,0)=9# (5,1)=9# (6,2)=9# (7,3)=9#
! 11 wrong pixels (generated / expected)

TRAIN a5f85a15.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color green and layers
  [0]: a rectangle at (0,0) with size (6,6) and color black and mask 111011111101011110101111110111111011
diff: 
delta:
   (76.3 bits)
data: a background with size (6,6) and color black and layers
  [0]: a point at (1,3) with color yellow
  [01]: a point at (0,2) with color green
  [011]: a point at (2,4) with color green
diff: 
delta: (3,0)=3  (3,5)=4  (4,1)=4  (5,2)=3 
   (80.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color green and layers
  [0]: a rectangle at (0,0) with size (6,6) and color black and mask 111011111101011110101111110111111011
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,2) with size (4,4) and color green and mask 1000010000100001
diff:   layer[0].color  layer[0].pos.j
delta: (3,0)=3  (4,1)=3  (5,2)=3 
! 8 wrong pixels (generated / expected)

TRAIN a5f85a15.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,0) with size (11,11) and color pink and mask 1000000100001000000100001000000100001000000100001000000100001000000100001000000100001000000100001000000100001000000100001
diff:   layer[0].color  layer[0].pos.i
delta: (0,4)=6  (7,11)=6 
! 23 wrong pixels (generated / expected)

TEST a5f85a15.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2269.8 bits (2269.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-148] Checking task a61ba2ce.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4992.3 = 5001.3
DL output with Mo: L = 9.0 + 4040.1 = 4049.0
DL input+output M: L = 17.9 + 9032.4 = 9050.3

# learning a model for train pairs
9050.3	
8598.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8141.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7671.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7153.5	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
6838.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6516.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6152.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5770.9	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
5533.0	OUT DEF: color={layer[011].color}
5334.6	OUT DEF: layer[0].size={layer[0].size}
5136.3	OUT DEF: layer[01].size={layer[01].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color {layer[011].color} and layers
  [0]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01]: a rectangle at ? with size {layer[01].size} and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 3028.4 = 3104.4
DL output with Mo: L = 79.4 + 1952.5 = 2031.9
DL input+output M: L = 155.5 + 4980.8 = 5136.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,6) with size (2,2) and color cyan and mask 111
  [01]: a rectangle at (3,1) with size (2,2) and color red and mask 1011
  [011]: a rectangle at (7,7) with size (2,2) and color blue and mask 1110
  [0111]: a rectangle at (9,3) with size (2,2) and color green and mask 1101
diff: 
delta:
   (151.4 bits)
data: a background with size (4,4) and color blue and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 111
  [01]: a rectangle at (1,1) with size (2,2) and color black and mask full
  [011]: a rectangle at (0,2) with size (2,2) and color red and mask full
  [0111]: a rectangle at (2,0) with size (2,2) and color green and mask full
diff: 
delta:
   (97.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,6) with size (2,2) and color cyan and mask 111
  [01]: a rectangle at (3,1) with size (2,2) and color red and mask 1011
  [011]: a rectangle at (7,7) with size (2,2) and color blue and mask 1110
  [0111]: a rectangle at (9,3) with size (2,2) and color green and mask 1101
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,6) with size (2,2) and color cyan and mask 111
  [01]: a rectangle at (3,1) with size (2,2) and color red and mask 1011
  [011]: a rectangle at (9,3) with size (2,2) and color green and mask 1101
  [0111]: a rectangle at (7,7) with size (2,2) and color blue and mask 1110
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 3
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,6) with size (2,2) and color cyan and mask 111
  [01]: a rectangle at (7,7) with size (2,2) and color blue and mask 1110
  [011]: a rectangle at (3,1) with size (2,2) and color red and mask 1011
  [0111]: a rectangle at (9,3) with size (2,2) and color green and mask 1101
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TRAIN a61ba2ce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,8) with size (2,2) and color cyan and mask 1011
  [01]: a rectangle at (3,2) with size (2,2) and color blue and mask 111
  [011]: a rectangle at (5,7) with size (2,2) and color red and mask 1110
  [0111]: a rectangle at (9,4) with size (2,2) and color yellow and mask 1101
diff: 
delta:
   (151.4 bits)
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 111
  [01]: a rectangle at (1,1) with size (2,2) and color black and mask full
  [011]: a rectangle at (0,2) with size (2,2) and color cyan and mask full
  [0111]: a rectangle at (2,0) with size (2,2) and color yellow and mask full
diff: 
delta:
   (97.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,8) with size (2,2) and color cyan and mask 1011
  [01]: a rectangle at (3,2) with size (2,2) and color blue and mask 111
  [011]: a rectangle at (5,7) with size (2,2) and color red and mask 1110
  [0111]: a rectangle at (9,4) with size (2,2) and color yellow and mask 1101
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,8) with size (2,2) and color cyan and mask 1011
  [01]: a rectangle at (3,2) with size (2,2) and color blue and mask 111
  [011]: a rectangle at (9,4) with size (2,2) and color yellow and mask 1101
  [0111]: a rectangle at (5,7) with size (2,2) and color red and mask 1110
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 3
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (1,8) with size (2,2) and color cyan and mask 1011
  [01]: a rectangle at (5,7) with size (2,2) and color red and mask 1110
  [011]: a rectangle at (3,2) with size (2,2) and color blue and mask 111
  [0111]: a rectangle at (9,4) with size (2,2) and color yellow and mask 1101
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TRAIN a61ba2ce.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask 1110
  [01]: a rectangle at (2,10) with size (2,2) and color cyan and mask 1011
  [011]: a rectangle at (6,6) with size (2,2) and color blue and mask 1101
  [0111]: a rectangle at (9,2) with size (2,2) and color green and mask 111
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask 1110
  [01]: a rectangle at (2,10) with size (2,2) and color cyan and mask 1011
  [011]: a rectangle at (9,2) with size (2,2) and color green and mask 111
  [0111]: a rectangle at (6,6) with size (2,2) and color blue and mask 1101
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 3
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask 1110
  [01]: a rectangle at (6,6) with size (2,2) and color blue and mask 1101
  [011]: a rectangle at (2,10) with size (2,2) and color cyan and mask 1011
  [0111]: a rectangle at (9,2) with size (2,2) and color green and mask 111
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TEST a61ba2ce.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1952.5 bits (1952.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-147] Checking task a61f2674.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9573.2 = 9582.2
DL output with Mo: L = 9.0 + 4345.2 = 4354.1
DL input+output M: L = 17.9 + 13918.4 = 13936.4

# learning a model for train pairs
13936.4	
8983.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6581.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5352.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4950.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4577.3	OUT DEF: size={size}
4422.6	IN  DEF: color=grey
4331.0	OUT DEF: layer[0].color=blue
4239.5	OUT DEF: layer[01].color=red
4147.9	IN  DEF: layer[01].color=black
4100.5	OUT DEF: layer[0].mask=full
4053.1	OUT DEF: layer[01].mask=full
4022.0	OUT DEF: color=black
4000.2	OUT DEF: layer[0].pos=(?,?)
3927.6	OUT DEF: layer[0].pos.i={layer[0].pos.i - layer[0].pos.j}
3905.8	OUT DEF: layer[0].size=(?,?)
3745.1	OUT DEF: layer[0].size.i={layer[0].pos.j + layer[0].size.i}
3697.6	OUT DEF: layer[0].size.j=1
3675.8	OUT DEF: layer[01].pos=(?,?)
3654.0	OUT DEF: layer[01].size=(?,?)
3606.6	OUT DEF: layer[01].size.j=1
3584.8	IN  DEF: size=(?,?)
3416.9	IN  DEF: size.i=9
3249.0	IN  DEF: size.j=9
3227.2	IN  DEF: layer[0].pos=(?,?)
3205.4	IN  DEF: layer[0].size=(?,?)
3183.6	IN  DEF: layer[01].pos=(?,?)
3095.0	IN  DEF: layer[01].pos.i=0
3073.2	IN  DEF: layer[01].size=(?,?)
2905.3	IN  DEF: layer[01].size.i=9

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i - layer[0].pos.j},?) with size ({layer[0].pos.j + layer[0].size.i},1) and color blue and mask full
  [01]: a rectangle at (?,?) with size (?,1) and color red and mask full
WHERE (Mi)
a background with size (9,9) and color grey and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (0,?) with size (9,?) and color black and mask ?

DL input  with Mi: L = 89.7 + 2371.4 = 2461.1
DL output with Mo: L = 76.5 + 367.6 = 444.2
DL input+output M: L = 166.2 + 2739.0 = 2905.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (5,4) with size (4,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 10111010010111010010111010110111010110111010110111010110111011111111011111111111
diff: 
delta:
   (121.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,2) with size (8,1) and color blue and mask full
  [01]: a rectangle at (6,8) with size (3,1) and color red and mask full
diff: 
delta:
   (19.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (6,8) with size (3,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 110101010110101010110101010110101010110111010110111010110111011111111011111111111
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (5,4) with size (4,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 10111010010111010010111010110111010110111010110111010110111011111111011111111111
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (3,0) with size (6,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 10101011010101011010101011110101011110111011110111011110111011111111011111111111
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN a61f2674.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (0,0) with size (9,4) and color black and mask 101010101110111011101110111011111111
  [01]: a rectangle at (0,5) with size (9,4) and color black and mask 110111011101110111011101111111111111
diff: 
delta:
   (116.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,4) with size (9,1) and color blue and mask full
  [01]: a rectangle at (7,2) with size (2,1) and color red and mask full
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (0,5) with size (9,4) and color black and mask 110111011101110111011101111111111111
  [01]: a rectangle at (0,0) with size (9,4) and color black and mask 101010101110111011101110111011111111
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (0,1) with size (7,3) and color black and mask full
  [01]: a rectangle at (0,5) with size (9,4) and color black and mask 110111011101110111011101111111111111
diff: 
delta: (0,0)=0  (1,0)=0  (7,1)=0  (7,3)=0  (8,1)=0  (8,3)=0 
! 18 wrong pixels (generated / expected)

TRAIN a61f2674.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (8,1) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101010111101010111101010111101010111101010111101110111101110111101111111111111111
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color grey and layers
  [0]: a rectangle at (4,5) with size (5,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (9,9) and color black and mask 101110101101110111101110111101110111101110111101110111101110111101111111111111111
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST a61f2674.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 367.6 bits (367.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-146] Checking task a64e4611.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 159369.6 = 159378.5
DL output with Mo: L = 9.0 + 325810.5 = 325819.5
DL input+output M: L = 17.9 + 485180.1 = 485198.0

# learning a model for train pairs
485198.0	
339635.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
300839.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
262044.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 120557.0 = 120583.6
DL output with Mo: L = 43.4 + 141417.3 = 141460.7
DL input+output M: L = 69.9 + 261974.3 = 262044.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (13,17) with size (15,13) and color cyan and mask 10010110110110001101011101010101000000110001101010111110000101111110101000010010011010000101010001000001110111000010000101010111001100011011111001101100011110100011010011000100010111011011010000
diff: 
delta: (0,0)=8  (0,1)=8  (0,3)=8  (0,5)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,17)=8  (0,20)=8  (0,22)=8  (0,26)=8  (0,27)=8  (0,29)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,9)=8  (1,11)=8  (1,14)=8  (1,15)=8  (1,18)=8  (1,24)=8  (1,25)=8  (1,26)=8  (1,27)=8  (1,29)=8  (2,0)=8  (2,4)=8  (2,5)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,14)=8  (2,16)=8  (2,18)=8  (2,20)=8  (2,21)=8  (2,22)=8  (2,23)=8  (2,26)=8  (3,1)=8  (3,2)=8  (3,7)=8  (3,8)=8  (3,13)=8  (3,14)=8  (3,16)=8  (3,17)=8  (3,21)=8  (3,22)=8  (3,24)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,4)=8  (4,7)=8  (4,17)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,23)=8  (4,25)=8  (4,26)=8  (4,29)=8  (5,1)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,18)=8  (5,19)=8  (5,20)=8  (5,21)=8  (5,23)=8  (5,25)=8  (5,29)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,7)=8  (6,17)=8  (6,18)=8  (6,19)=8  (6,25)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,1)=8  (7,2)=8  (7,3)=8  (7,4)=8  (7,7)=8  (7,19)=8  (7,21)=8  (7,23)=8  (7,24)=8  (7,25)=8  (7,28)=8  (7,29)=8  (8,0)=8  (8,2)=8  (8,3)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,17)=8  (8,21)=8  (8,24)=8  (8,27)=8  (8,29)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=8  (10,0)=8  (10,2)=8  (10,3)=8  (10,6)=8  (10,7)=8  (11,1)=8  (11,2)=8  (12,1)=8  (12,4)=8  (12,7)=8  (13,0)=8  (13,1)=8  (13,2)=8  (13,3)=8  (13,4)=8  (14,0)=8  (14,2)=8  (14,3)=8  (14,6)=8  (14,7)=8  (15,0)=8  (15,2)=8  (15,5)=8  (15,6)=8  (16,2)=8  (16,3)=8  (16,4)=8  (16,5)=8  (17,0)=8  (17,2)=8  (17,5)=8  (17,6)=8  (17,7)=8  (18,0)=8  (18,2)=8  (18,3)=8  (18,5)=8  (18,7)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
   (4573.7 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (5,0) with size (25,30) and color green and mask
  [01]: a rectangle at (13,17) with size (15,13) and color cyan and mask 10010110110110001101011101010101000000110001101010111110000101111110101000010010011010000101010001000001110111000010000101010111001100011011111001101100011110100011010011000100010111011011010000
diff: 
delta: (0,0)=8  (0,1)=8  (0,3)=8  (0,5)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,17)=8  (0,20)=8  (0,22)=8  (0,26)=8  (0,27)=8  (0,29)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,9)=8  (1,11)=8  (1,14)=8  (1,15)=8  (1,18)=8  (1,24)=8  (1,25)=8  (1,26)=8  (1,27)=8  (1,29)=8  (2,0)=8  (2,4)=8  (2,5)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,14)=8  (2,16)=8  (2,18)=8  (2,20)=8  (2,21)=8  (2,22)=8  (2,23)=8  (2,26)=8  (3,1)=8  (3,2)=8  (3,7)=8  (3,8)=8  (3,13)=8  (3,14)=8  (3,16)=8  (3,17)=8  (3,21)=8  (3,22)=8  (3,24)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,4)=8  (4,7)=8  (4,17)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,23)=8  (4,25)=8  (4,26)=8  (4,29)=8  (5,1)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,18)=8  (5,19)=8  (5,20)=8  (5,21)=8  (5,23)=8  (5,25)=8  (5,29)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,7)=8  (6,17)=8  (6,18)=8  (6,19)=8  (6,25)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,1)=8  (7,2)=8  (7,3)=8  (7,4)=8  (7,7)=8  (7,19)=8  (7,21)=8  (7,23)=8  (7,24)=8  (7,25)=8  (7,28)=8  (7,29)=8  (8,0)=8  (8,2)=8  (8,3)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,17)=8  (8,21)=8  (8,24)=8  (8,27)=8  (8,29)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=8  (10,0)=8  (10,2)=8  (10,3)=8  (10,6)=8  (10,7)=8  (11,1)=8  (11,2)=8  (12,1)=8  (12,4)=8  (12,7)=8  (13,0)=8  (13,1)=8  (13,2)=8  (13,3)=8  (13,4)=8  (14,0)=8  (14,2)=8  (14,3)=8  (14,6)=8  (14,7)=8  (15,0)=8  (15,2)=8  (15,5)=8  (15,6)=8  (16,2)=8  (16,3)=8  (16,4)=8  (16,5)=8  (17,0)=8  (17,2)=8  (17,5)=8  (17,6)=8  (17,7)=8  (18,0)=8  (18,2)=8  (18,3)=8  (18,5)=8  (18,7)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
   (5369.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (13,17) with size (15,13) and color cyan and mask 10010110110110001101011101010101000000110001101010111110000101111110101000010010011010000101010001000001110111000010000101010111001100011011111001101100011110100011010011000100010111011011010000
diff: 
delta: (0,0)=8  (0,1)=8  (0,3)=8  (0,5)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,17)=8  (0,20)=8  (0,22)=8  (0,26)=8  (0,27)=8  (0,29)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,9)=8  (1,11)=8  (1,14)=8  (1,15)=8  (1,18)=8  (1,24)=8  (1,25)=8  (1,26)=8  (1,27)=8  (1,29)=8  (2,0)=8  (2,4)=8  (2,5)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,14)=8  (2,16)=8  (2,18)=8  (2,20)=8  (2,21)=8  (2,22)=8  (2,23)=8  (2,26)=8  (3,1)=8  (3,2)=8  (3,7)=8  (3,8)=8  (3,13)=8  (3,14)=8  (3,16)=8  (3,17)=8  (3,21)=8  (3,22)=8  (3,24)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,4)=8  (4,7)=8  (4,17)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,23)=8  (4,25)=8  (4,26)=8  (4,29)=8  (5,1)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,18)=8  (5,19)=8  (5,20)=8  (5,21)=8  (5,23)=8  (5,25)=8  (5,29)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,7)=8  (6,17)=8  (6,18)=8  (6,19)=8  (6,25)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,1)=8  (7,2)=8  (7,3)=8  (7,4)=8  (7,7)=8  (7,19)=8  (7,21)=8  (7,23)=8  (7,24)=8  (7,25)=8  (7,28)=8  (7,29)=8  (8,0)=8  (8,2)=8  (8,3)=8  (8,5)=8  (8,6)=8  (8,7)=8  (8,17)=8  (8,21)=8  (8,24)=8  (8,27)=8  (8,29)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,4)=8  (9,5)=8  (9,7)=8  (10,0)=8  (10,2)=8  (10,3)=8  (10,6)=8  (10,7)=8  (11,1)=8  (11,2)=8  (12,1)=8  (12,4)=8  (12,7)=8  (13,0)=8  (13,1)=8  (13,2)=8  (13,3)=8  (13,4)=8  (14,0)=8  (14,2)=8  (14,3)=8  (14,6)=8  (14,7)=8  (15,0)=8  (15,2)=8  (15,5)=8  (15,6)=8  (16,2)=8  (16,3)=8  (16,4)=8  (16,5)=8  (17,0)=8  (17,2)=8  (17,5)=8  (17,6)=8  (17,7)=8  (18,0)=8  (18,2)=8  (18,3)=8  (18,5)=8  (18,7)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (20,14) with size (10,16) and color blue and mask 111011010011100100110011000000111100010011110000111001001000011001100101111110101111001100011000000100011001100111100010111000000110010100000111010010010001010
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,2)=1  (1,4)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,2)=1  (2,3)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,1)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (6,1)=1  (6,3)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (8,2)=1  (8,4)=1  (9,0)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,15)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,21)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,21)=1  (10,25)=1  (10,26)=1  (11,1)=1  (11,2)=1  (11,15)=1  (11,17)=1  (11,19)=1  (11,21)=1  (11,23)=1  (11,25)=1  (11,29)=1  (12,0)=1  (12,1)=1  (12,2)=1  (12,4)=1  (12,14)=1  (12,16)=1  (12,20)=1  (12,24)=1  (12,25)=1  (12,28)=1  (12,29)=1  (13,0)=1  (13,14)=1  (13,16)=1  (13,17)=1  (13,19)=1  (13,20)=1  (13,21)=1  (13,22)=1  (13,27)=1  (13,29)=1  (14,1)=1  (14,2)=1  (14,4)=1  (14,14)=1  (14,15)=1  (14,18)=1  (14,20)=1  (14,21)=1  (14,22)=1  (14,23)=1  (14,26)=1  (14,27)=1  (14,28)=1  (14,29)=1  (15,0)=1  (15,1)=1  (15,4)=1  (15,14)=1  (15,16)=1  (15,17)=1  (15,18)=1  (15,22)=1  (15,24)=1  (15,25)=1  (15,27)=1  (15,29)=1  (16,1)=1  (16,2)=1  (17,0)=1  (17,3)=1  (17,4)=1  (18,0)=1  (18,2)=1  (19,0)=1  (19,1)=1  (19,3)=1  (19,4)=1  (20,0)=1  (20,2)=1  (20,3)=1  (20,4)=1  (21,2)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (29,0)=1  (29,2)=1  (29,3)=1 
   (4164.4 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (0,6) with size (30,24) and color green and mask
  [01]: a rectangle at (20,14) with size (10,16) and color blue and mask 111011010011100100110011000000111100010011110000111001001000011001100101111110101111001100011000000100011001100111100010111000000110010100000111010010010001010
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,2)=1  (1,4)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,2)=1  (2,3)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,1)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (6,1)=1  (6,3)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (8,2)=1  (8,4)=1  (9,0)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,15)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,21)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,21)=1  (10,25)=1  (10,26)=1  (11,1)=1  (11,2)=1  (11,15)=1  (11,17)=1  (11,19)=1  (11,21)=1  (11,23)=1  (11,25)=1  (11,29)=1  (12,0)=1  (12,1)=1  (12,2)=1  (12,4)=1  (12,14)=1  (12,16)=1  (12,20)=1  (12,24)=1  (12,25)=1  (12,28)=1  (12,29)=1  (13,0)=1  (13,14)=1  (13,16)=1  (13,17)=1  (13,19)=1  (13,20)=1  (13,21)=1  (13,22)=1  (13,27)=1  (13,29)=1  (14,1)=1  (14,2)=1  (14,4)=1  (14,14)=1  (14,15)=1  (14,18)=1  (14,20)=1  (14,21)=1  (14,22)=1  (14,23)=1  (14,26)=1  (14,27)=1  (14,28)=1  (14,29)=1  (15,0)=1  (15,1)=1  (15,4)=1  (15,14)=1  (15,16)=1  (15,17)=1  (15,18)=1  (15,22)=1  (15,24)=1  (15,25)=1  (15,27)=1  (15,29)=1  (16,1)=1  (16,2)=1  (17,0)=1  (17,3)=1  (17,4)=1  (18,0)=1  (18,2)=1  (19,0)=1  (19,1)=1  (19,3)=1  (19,4)=1  (20,0)=1  (20,2)=1  (20,3)=1  (20,4)=1  (21,2)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (29,0)=1  (29,2)=1  (29,3)=1 
   (4930.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (20,14) with size (10,16) and color blue and mask 111011010011100100110011000000111100010011110000111001001000011001100101111110101111001100011000000100011001100111100010111000000110010100000111010010010001010
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,2)=1  (1,4)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,2)=1  (2,3)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,1)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (6,1)=1  (6,3)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (8,2)=1  (8,4)=1  (9,0)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,15)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,21)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,21)=1  (10,25)=1  (10,26)=1  (11,1)=1  (11,2)=1  (11,15)=1  (11,17)=1  (11,19)=1  (11,21)=1  (11,23)=1  (11,25)=1  (11,29)=1  (12,0)=1  (12,1)=1  (12,2)=1  (12,4)=1  (12,14)=1  (12,16)=1  (12,20)=1  (12,24)=1  (12,25)=1  (12,28)=1  (12,29)=1  (13,0)=1  (13,14)=1  (13,16)=1  (13,17)=1  (13,19)=1  (13,20)=1  (13,21)=1  (13,22)=1  (13,27)=1  (13,29)=1  (14,1)=1  (14,2)=1  (14,4)=1  (14,14)=1  (14,15)=1  (14,18)=1  (14,20)=1  (14,21)=1  (14,22)=1  (14,23)=1  (14,26)=1  (14,27)=1  (14,28)=1  (14,29)=1  (15,0)=1  (15,1)=1  (15,4)=1  (15,14)=1  (15,16)=1  (15,17)=1  (15,18)=1  (15,22)=1  (15,24)=1  (15,25)=1  (15,27)=1  (15,29)=1  (16,1)=1  (16,2)=1  (17,0)=1  (17,3)=1  (17,4)=1  (18,0)=1  (18,2)=1  (19,0)=1  (19,1)=1  (19,3)=1  (19,4)=1  (20,0)=1  (20,2)=1  (20,3)=1  (20,4)=1  (21,2)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (29,0)=1  (29,2)=1  (29,3)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (13,18) with size (12,12) and color red and mask 100000000010101000001001011100000010101100011000000010100110001010001000000101010000101011101111100011001101010101001000010010010000100101100000
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (0,25)=2  (0,26)=2  (1,2)=2  (1,21)=2  (1,22)=2  (1,23)=2  (1,27)=2  (1,28)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (2,24)=2  (2,26)=2  (2,28)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (3,21)=2  (3,22)=2  (3,24)=2  (3,25)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,23)=2  (4,24)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,22)=2  (5,24)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (6,23)=2  (6,24)=2  (6,25)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (7,22)=2  (7,26)=2  (7,28)=2  (8,19)=2  (8,22)=2  (8,26)=2  (8,27)=2  (8,29)=2  (9,17)=2  (9,26)=2  (9,27)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (14,17)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (23,1)=2  (23,5)=2  (24,0)=2  (24,2)=2  (24,17)=2  (25,0)=2  (25,1)=2  (25,4)=2  (25,18)=2  (25,19)=2  (25,22)=2  (25,25)=2  (25,26)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (26,17)=2  (26,20)=2  (26,22)=2  (26,26)=2  (26,27)=2  (26,28)=2  (26,29)=2  (27,1)=2  (27,3)=2  (27,6)=2  (27,17)=2  (27,20)=2  (27,22)=2  (27,26)=2  (27,28)=2  (27,29)=2  (28,0)=2  (28,2)=2  (28,3)=2  (28,17)=2  (28,21)=2  (28,22)=2  (28,26)=2  (28,28)=2  (29,0)=2  (29,3)=2  (29,4)=2  (29,17)=2  (29,18)=2  (29,19)=2  (29,21)=2  (29,22)=2  (29,23)=2  (29,24)=2  (29,25)=2  (29,26)=2  (29,28)=2  (29,29)=2 
   (3317.6 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (0,0) with size (30,16) and color green and mask 111111110000000011111111000000001111111100000000111111110000000011111111000000001111111100000000111111110000000011111111000000001111111100000000111111110000000011111111000000001111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000011111111000000001111111100000000111111110000000011111111000000001111111100000000111111110000000011111111000000001111111100000000
  [01]: a rectangle at (13,18) with size (12,12) and color red and mask 100000000010101000001001011100000010101100011000000010100110001010001000000101010000101011101111100011001101010101001000010010010000100101100000
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (0,25)=2  (0,26)=2  (1,2)=2  (1,21)=2  (1,22)=2  (1,23)=2  (1,27)=2  (1,28)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (2,24)=2  (2,26)=2  (2,28)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (3,21)=2  (3,22)=2  (3,24)=2  (3,25)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,23)=2  (4,24)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,22)=2  (5,24)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (6,23)=2  (6,24)=2  (6,25)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (7,22)=2  (7,26)=2  (7,28)=2  (8,19)=2  (8,22)=2  (8,26)=2  (8,27)=2  (8,29)=2  (9,17)=2  (9,26)=2  (9,27)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (14,17)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (23,1)=2  (23,5)=2  (24,0)=2  (24,2)=2  (24,17)=2  (25,0)=2  (25,1)=2  (25,4)=2  (25,18)=2  (25,19)=2  (25,22)=2  (25,25)=2  (25,26)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (26,17)=2  (26,20)=2  (26,22)=2  (26,26)=2  (26,27)=2  (26,28)=2  (26,29)=2  (27,1)=2  (27,3)=2  (27,6)=2  (27,17)=2  (27,20)=2  (27,22)=2  (27,26)=2  (27,28)=2  (27,29)=2  (28,0)=2  (28,2)=2  (28,3)=2  (28,17)=2  (28,21)=2  (28,22)=2  (28,26)=2  (28,28)=2  (29,0)=2  (29,3)=2  (29,4)=2  (29,17)=2  (29,18)=2  (29,19)=2  (29,21)=2  (29,22)=2  (29,23)=2  (29,24)=2  (29,25)=2  (29,26)=2  (29,28)=2  (29,29)=2 
   (3842.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (13,18) with size (12,12) and color red and mask 100000000010101000001001011100000010101100011000000010100110001010001000000101010000101011101111100011001101010101001000010010010000100101100000
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (0,25)=2  (0,26)=2  (1,2)=2  (1,21)=2  (1,22)=2  (1,23)=2  (1,27)=2  (1,28)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (2,24)=2  (2,26)=2  (2,28)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (3,21)=2  (3,22)=2  (3,24)=2  (3,25)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,23)=2  (4,24)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,22)=2  (5,24)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (6,23)=2  (6,24)=2  (6,25)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (7,22)=2  (7,26)=2  (7,28)=2  (8,19)=2  (8,22)=2  (8,26)=2  (8,27)=2  (8,29)=2  (9,17)=2  (9,26)=2  (9,27)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (14,17)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (23,1)=2  (23,5)=2  (24,0)=2  (24,2)=2  (24,17)=2  (25,0)=2  (25,1)=2  (25,4)=2  (25,18)=2  (25,19)=2  (25,22)=2  (25,25)=2  (25,26)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (26,17)=2  (26,20)=2  (26,22)=2  (26,26)=2  (26,27)=2  (26,28)=2  (26,29)=2  (27,1)=2  (27,3)=2  (27,6)=2  (27,17)=2  (27,20)=2  (27,22)=2  (27,26)=2  (27,28)=2  (27,29)=2  (28,0)=2  (28,2)=2  (28,3)=2  (28,17)=2  (28,21)=2  (28,22)=2  (28,26)=2  (28,28)=2  (29,0)=2  (29,3)=2  (29,4)=2  (29,17)=2  (29,18)=2  (29,19)=2  (29,21)=2  (29,22)=2  (29,23)=2  (29,24)=2  (29,25)=2  (29,26)=2  (29,28)=2  (29,29)=2 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (16,22) with size (14,8) and color yellow and mask 1101011011101110010000100011010101101011101011111001011001010101101000010010001000100111111110010111011001101
diff: 
delta: (0,1)=4  (0,2)=4  (0,4)=4  (0,6)=4  (0,7)=4  (0,14)=4  (0,15)=4  (0,16)=4  (0,17)=4  (0,18)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,5)=4  (1,6)=4  (1,15)=4  (1,16)=4  (1,18)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,3)=4  (2,8)=4  (2,9)=4  (2,15)=4  (2,17)=4  (2,18)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,4)=4  (3,5)=4  (3,6)=4  (3,8)=4  (3,14)=4  (3,18)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,2)=4  (4,3)=4  (4,4)=4  (4,6)=4  (4,9)=4  (4,17)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,2)=4  (5,4)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,17)=4  (5,23)=4  (6,0)=4  (6,2)=4  (6,3)=4  (6,6)=4  (6,9)=4  (6,14)=4  (6,16)=4  (6,17)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,1)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,7)=4  (7,17)=4  (7,27)=4  (8,2)=4  (8,6)=4  (8,7)=4  (8,8)=4  (8,14)=4  (8,15)=4  (8,18)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,0)=4  (21,2)=4  (21,6)=4  (21,16)=4  (21,17)=4  (22,0)=4  (22,2)=4  (22,3)=4  (22,6)=4  (22,7)=4  (22,16)=4  (22,17)=4  (22,18)=4  (22,21)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,6)=4  (23,14)=4  (23,16)=4  (23,17)=4  (23,19)=4  (24,0)=4  (24,1)=4  (24,6)=4  (24,7)=4  (24,9)=4  (24,14)=4  (24,15)=4  (24,17)=4  (24,20)=4  (25,0)=4  (25,2)=4  (25,6)=4  (25,9)=4  (25,14)=4  (25,16)=4  (25,17)=4  (26,1)=4  (26,3)=4  (26,9)=4  (26,14)=4  (26,16)=4  (26,18)=4  (26,19)=4  (26,20)=4  (27,2)=4  (27,4)=4  (27,6)=4  (27,7)=4  (27,16)=4  (27,18)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30

TEST a64e4611.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 141417.3 bits (141417.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-145] Checking task a65b410d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2216.4 = 2225.4
DL output with Mo: L = 9.0 + 10460.4 = 10469.4
DL input+output M: L = 17.9 + 12676.9 = 12694.8

# learning a model for train pairs
12694.8	
7576.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6565.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5720.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5080.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4290.6	OUT DEF: layer[011]={layer[0]}
3755.8	OUT DEF: size={size}
3617.8	OUT DEF: layer[0].color=green
3479.8	OUT DEF: layer[01].color=blue
3341.8	IN  DEF: layer[0].color=red
3271.1	IN  DEF: layer[0].mask=full
3225.5	OUT DEF: color=black
3179.9	IN  DEF: color=black
3144.9	OUT DEF: layer[0].pos=(?,?)
3013.7	OUT DEF: layer[0].pos.j={layer[0].pos.j}
2889.3	OUT DEF: layer[0].pos.i={layer[0].pos.j}
2854.3	OUT DEF: layer[0].size=(?,?)
2642.7	OUT DEF: layer[0].size.j={layer[0].pos.i + layer[0].size.j}
2491.3	OUT DEF: layer[0].size.i={layer[0].pos.i}
2456.3	OUT DEF: layer[01].pos=(?,?)
2325.3	OUT DEF: layer[01].pos.j={layer[0].pos.j}
2205.6	OUT DEF: layer[01].pos.i={layer[0].pos.i + layer[0].size.i}
2170.6	OUT DEF: layer[01].size=(?,?)
2055.7	OUT DEF: layer[01].size.j={layer[0].size.j - 1}
1941.8	OUT DEF: layer[01].size.i={layer[0].size.j - layer[0].size.i}
1906.8	IN  DEF: size=(?,?)
1871.8	IN  DEF: layer[0].pos=(?,?)
1743.6	IN  DEF: layer[0].pos.j=0
1708.6	IN  DEF: layer[0].size=(?,?)
1637.9	IN  DEF: layer[0].size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.j},{layer[0].pos.j}) with size ({layer[0].pos.i},{layer[0].pos.i + layer[0].size.j}) and color green and mask ?
  [01]: a rectangle at ({layer[0].pos.i + layer[0].size.i},{layer[0].pos.j}) with size ({layer[0].size.j - layer[0].size.i},{layer[0].size.j - 1}) and color blue and mask ?
  [011]: {layer[0]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,0) with size (1,?) and color red and mask full

DL input  with Mi: L = 40.9 + 781.7 = 822.6
DL output with Mo: L = 96.0 + 719.3 = 815.3
DL input+output M: L = 136.9 + 1501.0 = 1637.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,2) and color red and mask full
diff: 
delta:
   (24.3 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,5) and color green and mask 1110111111111
  [01]: a rectangle at (4,0) with size (1,1) and color blue and mask full
  [011]: a rectangle at (3,0) with size (1,2) and color red and mask full
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,2) and color red and mask full
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a65b410d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (3,0) with size (1,3) and color red and mask full
diff: 
delta:
   (26.8 bits)
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color green and mask 1111011111111111
  [01]: a rectangle at (4,0) with size (2,2) and color blue and mask 111
  [011]: a rectangle at (3,0) with size (1,3) and color red and mask full
diff: 
delta:
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  [0]: a rectangle at (3,0) with size (1,3) and color red and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a65b410d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (2,0) with size (1,4) and color red and mask full
diff: 
delta:
   (27.0 bits)
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (0,0) with size (2,6) and color green and mask 11111111111
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 1011111
  [011]: a rectangle at (2,0) with size (1,4) and color red and mask full
diff: 
delta:
   (25.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (2,0) with size (1,4) and color red and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a65b410d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,0) with size (1,5) and color red and mask full
diff: 
delta:
! 7 wrong pixels (generated / expected)

TEST a65b410d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 719.3 bits (719.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-144] Checking task a68b268e.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 50407.5 = 50416.4
DL output with Mo: L = 9.0 + 8555.8 = 8564.8
DL input+output M: L = 17.9 + 58963.3 = 58981.2

# learning a model for train pairs
58981.2	
48319.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
41858.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
35989.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
31293.1	IN  DEF: layer[0].mask=10000000010000000010000000010000111111111000010000000010000000010000000010000
26540.4	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
24228.9	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
23004.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
Stack overflow
Called from unknown location
Error: no learned model
=====================================
[-143] Checking task a699fb00.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5082.5 = 5091.5
DL output with Mo: L = 9.0 + 7537.1 = 7546.0
DL input+output M: L = 17.9 + 12619.6 = 12637.5

# learning a model for train pairs
12637.5	
11911.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11372.2	OUT DEF: size={size}
11008.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10762.6	IN  SHAPE at layer[00]: a point at ? with color ?
10522.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10383.4	OUT DEF: layer[01].color={layer[00].color}
10244.5	OUT DEF: layer[0].color={layer[00].color}
10106.5	IN  DEF: layer[00].color=blue
9991.5	OUT SHAPE at layer[010]: a rectangle at ? with size ? and color ? and mask ?
9865.6	OUT SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
9794.9	OUT DEF: layer[00].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a rectangle at ? with size ? and color ? and mask full
  [0]: a rectangle at ? with size ? and color {layer[00].color} and mask ?
  [010]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color {layer[00].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color blue
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 38.0 + 4305.0 = 4343.0
DL output with Mo: L = 75.2 + 5376.7 = 5451.9
DL input+output M: L = 113.3 + 9681.7 = 9794.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [00]: a point at (0,0) with color blue
  [0]: a rectangle at (0,2) with size (1,1) and color blue and mask full
diff: 
delta: (3,1)=1  (3,3)=1 
   (81.2 bits)
data: a background with size (5,5) and color black and layers
  [00]: a rectangle at (0,1) with size (1,1) and color red and mask full
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
  [010]: a rectangle at (3,2) with size (1,1) and color red and mask full
  [01]: a rectangle at (3,1) with size (1,3) and color blue and mask full
diff: 
delta:
   (82.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [00]: a point at (0,0) with color blue
  [0]: a rectangle at (0,2) with size (1,1) and color blue and mask full
diff: 
delta: (3,1)=1  (3,3)=1 
! 8 wrong pixels (generated / expected)

TRAIN a699fb00.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color blue and layers
  [00]: a point at (1,1) with color blue
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111101011111111111111010111111111111111111111010111111111111111111111111010101111111111111
diff: 
delta:
   (174.7 bits)
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (1,1) with size (1,7) and color blue and mask full
  [0]: a rectangle at (4,2) with size (1,3) and color blue and mask full
  [010]: a rectangle at (6,6) with size (1,3) and color blue and mask full
  [01]: a rectangle at (8,3) with size (1,3) and color blue and mask full
diff: 
delta: (1,2)=2  (1,4)=2  (1,6)=2  (4,3)=2  (6,7)=2  (8,4)=2 
   (210.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color blue and layers
  [00]: a point at (1,1) with color blue
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111101011111111111111010111111111111111111111010111111111111111111111111010101111111111111
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN a699fb00.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color blue and layers
  [00]: a point at (1,6) with color blue
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111110101111111111111101011111111111111110101011111111111111111111111111111010110111111111111111111
diff: 
delta:
   (174.7 bits)
data: a background with size (10,10) and color black and layers
  [00]: a rectangle at (5,3) with size (1,5) and color blue and mask full
  [0]: a rectangle at (1,6) with size (1,3) and color blue and mask full
  [010]: a rectangle at (2,1) with size (1,3) and color blue and mask full
  [01]: a rectangle at (7,4) with size (1,3) and color blue and mask full
diff: 
delta: (1,7)=2  (2,2)=2  (5,4)=2  (5,6)=2  (7,5)=2  (9,1)=1  (9,2)=2  (9,3)=1 
   (245.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color blue and layers
  [00]: a point at (1,6) with color blue
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111110101111111111111101011111111111111110101011111111111111111111111111111010110111111111111111111
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN a699fb00.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,1) with color blue
  [0]: a rectangle at (0,3) with size (1,1) and color blue and mask full
diff: 
delta: (2,2)=1  (2,4)=1  (2,6)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 22 wrong pixels (generated / expected)

TEST a699fb00.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5376.7 bits (5376.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-142] Checking task a740d043.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3504.3 = 3513.3
DL output with Mo: L = 9.0 + 2084.4 = 2093.3
DL input+output M: L = 17.9 + 5588.7 = 5606.6

# learning a model for train pairs
5606.6	
4643.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4343.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4060.6	OUT DEF: layer[0].size={layer[0].size}
3826.3	IN  DEF: color=blue
3665.3	OUT DEF: layer[0].mask={layer[0].mask}
3525.4	OUT DEF: layer[0].color={layer[0].color}
3490.4	OUT DEF: size=(?,?)
3455.3	OUT DEF: layer[0].pos=(?,?)
3376.9	OUT DEF: layer[0].pos.i=0
3298.4	OUT DEF: layer[0].pos.j=0
3263.4	IN  DEF: size=(?,?)
3228.4	IN  DEF: layer[0].pos=(?,?)
3193.4	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,0) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color blue and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 45.2 + 2165.8 = 2211.0
DL output with Mo: L = 39.4 + 943.1 = 982.4
DL input+output M: L = 84.5 + 3108.9 = 3193.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color blue and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 100011011
diff: 
delta: (2,3)=3 
   (67.7 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 100011011
diff: 
delta: (1,2)=3 
   (28.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color blue and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 100011011
diff: 
delta: (2,3)=3 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (5,7) and color blue and layers
  [0]: a rectangle at (1,1) with size (2,2) and color red and mask full
diff: 
delta: (2,3)=3  (3,3)=2 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (5,7) and color blue and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask full
diff: 
delta: (1,3)=1  (2,3)=3  (3,1)=1  (3,2)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN a740d043.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color blue and layers
  [0]: a rectangle at (1,2) with size (2,1) and color green and mask full
diff: 
delta: (1,4)=2  (2,4)=2 
   (74.0 bits)
data: a background with size (2,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,1) and color green and mask full
diff: 
delta: (0,1)=0  (1,1)=0 
   (48.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  [0]: a rectangle at (1,2) with size (2,1) and color green and mask full
diff: 
delta: (1,4)=2  (2,4)=2 
! size mismatch, 10x10 instead of 2x3
>> Trial 2
data: a background with size (7,7) and color blue and layers
  [0]: a rectangle at (1,4) with size (2,1) and color red and mask full
diff: 
delta: (1,2)=3  (2,2)=3 
! size mismatch, 10x10 instead of 2x3
>> Trial 3
data: a background with size (7,7) and color blue and layers
  [0]: a rectangle at (0,0) with size (1,7) and color blue and mask full
diff: 
delta: (1,2)=3  (1,4)=2  (2,2)=3  (2,4)=2 
! size mismatch, 10x10 instead of 2x3

TRAIN a740d043.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,6) and color blue and layers
  [0]: a rectangle at (2,1) with size (2,2) and color grey and mask full
diff: 
delta: (4,1)=6  (4,2)=6 
   (74.9 bits)
data: a background with size (3,2) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,2) and color grey and mask full
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color blue and layers
  [0]: a rectangle at (2,1) with size (2,2) and color grey and mask full
diff: 
delta: (4,1)=6  (4,2)=6 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (7,6) and color blue and layers
  [0]: a rectangle at (4,1) with size (1,2) and color pink and mask full
diff: 
delta: (2,1)=5# (2,2)=5# (3,1)=5# (3,2)=5#
! size mismatch, 10x10 instead of 3x2
>> Trial 3
data: a background with size (7,6) and color grey and layers
  [0]: a rectangle at (0,0) with size (7,6) and color blue and mask 111111111111111001111001111001111111111111
diff:   color
delta: (4,1)=6  (4,2)=6 
! size mismatch, 10x10 instead of 3x2

TRAIN a740d043.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
  [0]: a rectangle at (2,2) with size (2,2) and color red and mask 110
diff: 
delta: (3,3)=3 
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (6,6) and color blue and layers
  [0]: a rectangle at (2,3) with size (1,1) and color red and mask full
diff: 
delta: (3,2)=2  (3,3)=3 
! size mismatch, 10x10 instead of 2x2

TEST a740d043.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 943.1 bits (943.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-141] Checking task a78176bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8947.1 = 8956.1
DL output with Mo: L = 9.0 + 9656.8 = 9665.8
DL input+output M: L = 17.9 + 18603.9 = 18621.9

# learning a model for train pairs
18621.9	
14083.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11228.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10124.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9547.1	OUT DEF: size={size}
9407.7	OUT DEF: layer[0].color={layer[0].color}
9269.7	IN  DEF: layer[01].color=grey
9224.1	OUT DEF: color=black
9178.5	IN  DEF: color=black
9143.4	OUT DEF: layer[0].pos=(?,?)
9007.0	OUT DEF: layer[0].pos.j=0
8972.0	OUT DEF: layer[0].size=(?,?)
8937.0	IN  DEF: size=(?,?)
8673.7	IN  DEF: size.i=10
8410.3	IN  DEF: size.j=10
8375.3	IN  DEF: layer[0].pos=(?,?)
8340.3	IN  DEF: layer[0].size=(?,?)
8305.3	IN  DEF: layer[01].pos=(?,?)
8270.3	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,0) with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color grey and mask ?

DL input  with Mi: L = 77.3 + 4035.2 = 4112.5
DL output with Mo: L = 36.6 + 4121.2 = 4157.8
DL input+output M: L = 113.9 + 8156.4 = 8270.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color orange and mask 1000000000010000000000100000000001000000000010000000000100000000001000000000010000000000100000000001
  [01]: a rectangle at (3,4) with size (2,2) and color grey and mask full
diff: 
delta:
   (154.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color orange and mask 1000000000010000000000100000000001000000100010000001000100000010001000000100010000001000100000010001
diff: 
delta:
   (124.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color orange and mask 1000000000010000000000100000000001000000000010000000000100000000001000000000010000000000100000000001
  [01]: a rectangle at (3,4) with size (2,2) and color grey and mask full
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (2,2) and color grey and mask 1011
  [01]: a rectangle at (0,0) with size (10,10) and color orange and mask 1000000000010000000000100000000001000000000010000000001100000000111000000000010000000000100000000001
diff:   layer[01].color
delta:
! 18 wrong pixels (generated / expected)

TRAIN a78176bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,5) with size (5,5) and color brown and mask 1000001000001000001000001
  [01]: a rectangle at (1,5) with size (4,4) and color grey and mask 1111111101110011
diff: 
delta:
   (95.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (9,9) and color brown and mask 100000000010000000001000000000100000000010000000001000100000100010000010001000001
diff: 
delta: (0,5)=9# (4,9)=9#
   (143.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,5) with size (5,5) and color brown and mask 1000001000001000001000001
  [01]: a rectangle at (1,5) with size (4,4) and color grey and mask 1111111101110011
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,5) with size (4,4) and color grey and mask 1111011100110001
  [01]: a rectangle at (0,5) with size (5,5) and color brown and mask 1111101111001110001100001
diff:   layer[01].color
delta:
! 17 wrong pixels (generated / expected)

TRAIN a78176bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (9,9) and color red and mask 100000000010000000001000000000100000000010000000001000000000100000000010000000001
  [01]: a rectangle at (3,3) with size (5,3) and color grey and mask 111111011011011
diff: 
delta:
   (153.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (9,9) and color red and mask 100001000010000100001000010000100001100010000010001000001000100000100010000010001
diff: 
delta: (0,3)=2  (6,9)=2 
   (143.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (9,9) and color red and mask 100000000010000000001000000000100000000010000000001000000000100000000010000000001
  [01]: a rectangle at (3,3) with size (5,3) and color grey and mask 111111011011011
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (5,3) and color grey and mask 111011001010011
  [01]: a rectangle at (1,0) with size (9,9) and color red and mask 100000000010000000001111000000111000000011000000011000000011100000000010000000001
diff:   layer[01].color
delta:
! 23 wrong pixels (generated / expected)

TRAIN a78176bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (9,9) and color blue and mask 100000000010000000001000000000100000000010000000001000000000100000000010000000001
  [01]: a rectangle at (4,4) with size (5,5) and color grey and mask 1111111111011110011100011
diff: 
delta: (1,3)=5# (1,4)=5# (2,4)=5#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (5,5) and color grey and mask 1111101111001110001100001
  [01]: a rectangle at (0,1) with size (9,9) and color blue and mask 111111000011111000001111000000111000000011000000001000000000100000000010000000001
diff:   layer[01].color
delta: (1,3)=5# (1,4)=5# (2,4)=5#
! 21 wrong pixels (generated / expected)

TEST a78176bb.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4121.2 bits (4121.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-140] Checking task a79310a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1809.6 = 1818.6
DL output with Mo: L = 9.0 + 1809.6 = 1818.6
DL input+output M: L = 17.9 + 3619.2 = 3637.1

# learning a model for train pairs
3637.1	
3020.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2403.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
1974.5	OUT DEF: size={size}
1723.5	OUT DEF: layer[0].size={layer[0].size}
1585.5	OUT DEF: layer[0].color=red
1447.5	IN  DEF: layer[0].color=cyan
1376.5	OUT DEF: layer[0].mask={layer[0].mask}
1305.9	IN  DEF: layer[0].mask=full
1260.3	OUT DEF: color=black
1214.7	IN  DEF: color=black
1179.6	OUT DEF: layer[0].pos=(?,?)
1077.7	OUT DEF: layer[0].pos.j={layer[0].pos.j}
981.7	OUT DEF: layer[0].pos.i={layer[0].pos.i + 1}
946.7	IN  DEF: size=(?,?)
911.6	IN  DEF: layer[0].pos=(?,?)
876.6	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i + 1},{layer[0].pos.j}) with size {layer[0].size} and color red and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color cyan and mask full

DL input  with Mi: L = 39.0 + 803.4 = 842.3
DL output with Mo: L = 34.3 + 0.0 = 34.3
DL input+output M: L = 73.3 + 803.4 = 876.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask full
diff: 
delta:
   (29.9 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask full
diff: 
delta:
correct output grid

TRAIN a79310a0.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color cyan and mask full
diff: 
delta:
   (21.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,1) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color cyan and mask full
diff: 
delta:
correct output grid

TRAIN a79310a0.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (1,3) and color cyan and mask full
diff: 
delta:
   (29.0 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (2,1) with size (1,3) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (1,3) and color cyan and mask full
diff: 
delta:
correct output grid

TRAIN a79310a0.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color cyan and mask 101110
diff:   layer[0].mask
delta:
correct output grid

TEST a79310a0.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-139] Checking task a85d4709.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2402.7 = 2411.7
DL output with Mo: L = 9.0 + 2639.2 = 2648.1
DL input+output M: L = 17.9 + 5041.9 = 5059.8

# learning a model for train pairs
5059.8	
4436.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3943.6	OUT DEF: size={size}
3759.1	IN  DEF: layer[0].color=grey
3699.0	IN  DEF: color=black
3650.7	IN  DEF: size=(?,?)
3433.2	IN  DEF: size.i=3
3215.7	IN  DEF: size.j=3
3167.5	IN  DEF: layer[0].pos=(?,?)
3050.8	IN  DEF: layer[0].pos.i=0
3002.6	IN  DEF: layer[0].size=(?,?)
2785.1	IN  DEF: layer[0].size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,?) with size (3,?) and color grey and mask ?

DL input  with Mi: L = 46.1 + 583.7 = 629.8
DL output with Mo: L = 8.3 + 2147.0 = 2155.3
DL input+output M: L = 54.4 + 2730.7 = 2785.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 1010100
diff: 
delta:
   (19.7 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (2,0)=2  (2,1)=2  (2,2)=2 
   (98.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 1010100
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,2) with size (3,1) and color grey and mask full
diff: 
delta:
   (7.6 bits)
data: a background with size (3,3) and color green and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,2) with size (3,1) and color grey and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color grey and mask 11001
diff: 
delta:
   (15.6 bits)
data: a background with size (3,3) and color red and layers
diff: 
delta: (1,0)=4  (1,1)=4  (1,2)=4 
   (54.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color grey and mask 11001
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color grey and mask 11001
diff: 
delta:
   (15.6 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta: (1,0)=3  (1,1)=3  (1,2)=3 
   (54.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color grey and mask 11001
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101110011
diff:   color  layer[0].color
delta:
! 9 wrong pixels (generated / expected)

TEST a85d4709.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2147.0 bits (2147.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-138] Checking task a87f7484.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13513.6 = 13522.6
DL output with Mo: L = 9.0 + 2359.1 = 2368.1
DL input+output M: L = 17.9 + 15872.7 = 15890.7

# learning a model for train pairs
15890.7	
13277.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11856.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10380.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9890.3	OUT DEF: size={layer[0].size}
9427.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9024.0	OUT DEF: layer[0].size={layer[0].size}
8571.0	OUT DEF: layer[0].mask={layer[0].mask}
8385.5	OUT DEF: layer[0].color={layer[0].color}
8325.3	OUT DEF: color=black
8265.1	IN  DEF: color=black
8216.9	OUT DEF: layer[0].pos=(?,?)
8103.5	OUT DEF: layer[0].pos.i={layer[01].pos.j}
7988.9	OUT DEF: layer[0].pos.j={layer[01].pos.j}
7940.7	IN  DEF: size=(?,?)
7892.4	IN  DEF: layer[0].pos=(?,?)
7844.2	IN  DEF: layer[0].size=(?,?)
7626.7	IN  DEF: layer[0].size.i=3
7409.2	IN  DEF: layer[0].size.j=3
7360.9	IN  DEF: layer[01].pos=(?,?)
7204.4	IN  DEF: layer[01].pos.j=0
7156.1	IN  DEF: layer[01].size=(?,?)
6938.6	IN  DEF: layer[01].size.i=3
6721.1	IN  DEF: layer[01].size.j=3
6672.9	IN  DEF: layer[011].pos=(?,?)
6624.7	IN  DEF: layer[011].size=(?,?)
6407.1	IN  DEF: layer[011].size.i=3
6189.6	IN  DEF: layer[011].size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.j},{layer[01].pos.j}) with size {layer[0].size} and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (3,3) and color ? and mask ?
  [01]: a rectangle at (?,0) with size (3,3) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (3,3) and color ? and mask ?

DL input  with Mi: L = 106.4 + 6047.0 = 6153.4
DL output with Mo: L = 36.3 + 0.0 = 36.3
DL input+output M: L = 142.6 + 6047.0 = 6189.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,3) and color black and layers
  [0]: a rectangle at (6,0) with size (3,3) and color cyan and mask 111101111
  [01]: a rectangle at (0,0) with size (3,3) and color pink and mask 101110101
  [011]: a rectangle at (3,0) with size (3,3) and color yellow and mask 101110101
diff: 
delta:
   (81.3 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111101111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color black and layers
  [0]: a rectangle at (6,0) with size (3,3) and color cyan and mask 111101111
  [01]: a rectangle at (0,0) with size (3,3) and color pink and mask 101110101
  [011]: a rectangle at (3,0) with size (3,3) and color yellow and mask 101110101
diff: 
delta:
correct output grid

TRAIN a87f7484.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,12) and color black and layers
  [0]: a rectangle at (0,6) with size (3,3) and color orange and mask 101010101
  [01]: a rectangle at (0,0) with size (3,3) and color red and mask 110001001
  [011]: a rectangle at (0,3) with size (3,3) and color green and mask 110001001
diff: 
delta: (0,9)=1  (1,9)=1  (2,10)=1  (2,11)=1 
   (150.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 101010101
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
  [0]: a rectangle at (0,6) with size (3,3) and color orange and mask 101010101
  [01]: a rectangle at (0,0) with size (3,3) and color red and mask 110001001
  [011]: a rectangle at (0,3) with size (3,3) and color green and mask 110001001
diff: 
delta: (0,9)=1  (1,9)=1  (2,10)=1  (2,11)=1 
correct output grid

TRAIN a87f7484.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,15) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color yellow and mask 101111101
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask 10110001
  [011]: a rectangle at (0,6) with size (3,3) and color red and mask 10110001
diff: 
delta: (0,9)=8  (0,12)=1  (1,10)=8  (1,11)=8  (1,13)=1  (1,14)=1  (2,10)=8  (2,13)=1 
   (220.4 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 101111101
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color yellow and mask 101111101
  [01]: a rectangle at (0,0) with size (3,3) and color green and mask 10110001
  [011]: a rectangle at (0,6) with size (3,3) and color red and mask 10110001
diff: 
delta: (0,9)=8  (0,12)=1  (1,10)=8  (1,11)=8  (1,13)=1  (1,14)=1  (2,10)=8  (2,13)=1 
correct output grid

TRAIN a87f7484.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (12,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 101011110
  [01]: a rectangle at (3,0) with size (3,3) and color green and mask 1110001
  [011]: a rectangle at (6,0) with size (3,3) and color red and mask 1110001
diff: 
delta: (9,0)=8  (10,1)=8  (10,2)=8  (11,0)=8 
   (152.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 101011110
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 101011110
  [01]: a rectangle at (3,0) with size (3,3) and color green and mask 1110001
  [011]: a rectangle at (6,0) with size (3,3) and color red and mask 1110001
diff: 
delta: (9,0)=8  (10,1)=8  (10,2)=8  (11,0)=8 
correct output grid

TRAIN a87f7484.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,3) and color black and layers
  [0]: a rectangle at (6,0) with size (3,3) and color pink and mask 101011101
  [01]: a rectangle at (0,0) with size (3,3) and color grey and mask 10101010
  [011]: a rectangle at (3,0) with size (3,3) and color green and mask 10101010
diff: 
delta: (9,1)=4  (10,0)=4  (10,2)=4  (11,1)=4  (12,1)=8  (13,0)=8  (13,2)=8  (14,1)=8 
correct output grid

TEST a87f7484.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-137] Checking task a8c38be5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 30912.2 = 30921.2
DL output with Mo: L = 9.0 + 10398.5 = 10407.5
DL input+output M: L = 17.9 + 41310.8 = 41328.7

# learning a model for train pairs
41328.7	
38565.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
36242.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
34634.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
33026.6	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
31618.3	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 21118.6 = 21210.8
DL output with Mo: L = 9.0 + 10398.5 = 10407.5
DL input+output M: L = 101.1 + 31517.1 = 31618.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color grey and mask 110001000011000001000011000111
  [01]: a rectangle at (5,6) with size (3,3) and color grey and mask full
  [011]: a rectangle at (7,1) with size (3,3) and color grey and mask full
  [0111]: a rectangle at (11,0) with size (3,3) and color grey and mask full
  [01111]: a rectangle at (11,10) with size (3,3) and color grey and mask full
diff: 
delta: (1,0)=8  (1,8)=2  (1,9)=2  (1,10)=2  (2,0)=8  (2,1)=8  (2,8)=5# (2,9)=2  (2,10)=5# (3,2)=2  (3,8)=5# (3,9)=5# (3,10)=5# (4,2)=2  (4,3)=2  (5,2)=2  (6,10)=5# (6,11)=5# (6,12)=5# (7,2)=1  (7,3)=1  (7,10)=5# (7,11)=4  (7,12)=5# (8,3)=1  (8,10)=4  (8,11)=4  (8,12)=4  (9,6)=5# (9,7)=5# (9,8)=3  (10,6)=5# (10,7)=3  (10,8)=3  (11,6)=5# (11,7)=5# (11,8)=3  (11,10)=6  (11,11)=6  (12,2)=9# (12,10)=6  (13,1)=9# (13,2)=9#
   (1018.8 bits)
data: a background with size (9,9) and color grey and layers
diff: 
delta: (0,0)=6  (0,1)=6  (0,3)=2  (0,4)=2  (0,5)=2  (0,7)=1  (0,8)=1  (1,0)=6  (1,4)=2  (1,8)=1  (3,0)=2  (3,8)=3  (4,0)=2  (4,1)=2  (4,7)=3  (4,8)=3  (5,0)=2  (5,8)=3  (7,0)=8  (7,4)=4  (7,8)=9# (8,0)=8  (8,1)=8  (8,3)=4  (8,4)=4  (8,5)=4  (8,7)=9# (8,8)=9#
   (519.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (0,0) with size (6,5) and color grey and mask 110001000011000001000011000111
  [01]: a rectangle at (5,6) with size (3,3) and color grey and mask full
  [011]: a rectangle at (7,1) with size (3,3) and color grey and mask full
  [0111]: a rectangle at (11,0) with size (3,3) and color grey and mask full
  [01111]: a rectangle at (11,10) with size (3,3) and color grey and mask full
diff: 
delta: (1,0)=8  (1,8)=2  (1,9)=2  (1,10)=2  (2,0)=8  (2,1)=8  (2,8)=5# (2,9)=2  (2,10)=5# (3,2)=2  (3,8)=5# (3,9)=5# (3,10)=5# (4,2)=2  (4,3)=2  (5,2)=2  (6,10)=5# (6,11)=5# (6,12)=5# (7,2)=1  (7,3)=1  (7,10)=5# (7,11)=4  (7,12)=5# (8,3)=1  (8,10)=4  (8,11)=4  (8,12)=4  (9,6)=5# (9,7)=5# (9,8)=3  (10,6)=5# (10,7)=3  (10,8)=3  (11,6)=5# (11,7)=5# (11,8)=3  (11,10)=6  (11,11)=6  (12,2)=9# (12,10)=6  (13,1)=9# (13,2)=9#
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,14) and color black and layers
  [0]: a rectangle at (0,11) with size (12,2) and color grey and mask full
  [01]: a rectangle at (13,5) with size (2,7) and color grey and mask full
  [011]: a rectangle at (8,6) with size (3,3) and color grey and mask full
  [0111]: a rectangle at (1,1) with size (3,3) and color grey and mask full
  [01111]: a rectangle at (2,5) with size (3,3) and color grey and mask full
diff: 
delta: (0,13)=4  (1,12)=4  (1,13)=4  (2,1)=3  (2,6)=8  (2,7)=8  (2,13)=4  (3,1)=3  (3,2)=3  (3,7)=8  (3,11)=0  (3,12)=0  (4,11)=0  (4,12)=0  (5,10)=5# (6,10)=5# (6,12)=9# (7,10)=5# (7,11)=9# (7,12)=9# (8,1)=1  (8,2)=1  (8,3)=1  (8,11)=0  (8,12)=0  (9,1)=5# (9,2)=1  (9,3)=5# (9,10)=6  (10,1)=5# (10,2)=5# (10,3)=5# (10,10)=6  (10,11)=6  (11,10)=6  (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,7)=0  (13,8)=0  (14,4)=5# (14,7)=0  (14,8)=0  (14,10)=2  (15,9)=2  (15,10)=2  (15,11)=2 
   (1093.1 bits)
data: a background with size (9,9) and color grey and layers
diff: 
delta: (0,0)=7# (0,1)=7# (0,3)=1  (0,4)=1  (0,5)=1  (0,7)=8  (0,8)=8  (1,0)=7# (1,4)=1  (1,8)=8  (3,0)=6  (3,8)=4  (4,0)=6  (4,1)=6  (4,7)=4  (4,8)=4  (5,0)=6  (5,8)=4  (7,0)=3  (7,4)=2  (7,8)=9# (8,0)=3  (8,1)=3  (8,3)=2  (8,4)=2  (8,5)=2  (8,7)=9# (8,8)=9#
   (519.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  [0]: a rectangle at (0,11) with size (12,2) and color grey and mask full
  [01]: a rectangle at (13,5) with size (2,7) and color grey and mask full
  [011]: a rectangle at (8,6) with size (3,3) and color grey and mask full
  [0111]: a rectangle at (1,1) with size (3,3) and color grey and mask full
  [01111]: a rectangle at (2,5) with size (3,3) and color grey and mask full
diff: 
delta: (0,13)=4  (1,12)=4  (1,13)=4  (2,1)=3  (2,6)=8  (2,7)=8  (2,13)=4  (3,1)=3  (3,2)=3  (3,7)=8  (3,11)=0  (3,12)=0  (4,11)=0  (4,12)=0  (5,10)=5# (6,10)=5# (6,12)=9# (7,10)=5# (7,11)=9# (7,12)=9# (8,1)=1  (8,2)=1  (8,3)=1  (8,11)=0  (8,12)=0  (9,1)=5# (9,2)=1  (9,3)=5# (9,10)=6  (10,1)=5# (10,2)=5# (10,3)=5# (10,10)=6  (10,11)=6  (11,10)=6  (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,7)=0  (13,8)=0  (14,4)=5# (14,7)=0  (14,8)=0  (14,10)=2  (15,9)=2  (15,10)=2  (15,11)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  [0]: a rectangle at (0,10) with size (8,3) and color grey and mask full
  [01]: a rectangle at (12,1) with size (1,13) and color grey and mask full
  [011]: a rectangle at (3,5) with size (2,3) and color grey and mask 111101
  [0111]: a rectangle at (6,2) with size (2,3) and color grey and mask full
  [01111]: a rectangle at (1,2) with size (3,2) and color grey and mask full
diff: 
delta: (1,1)=1  (1,10)=6  (2,1)=1  (2,2)=1  (2,5)=2  (2,6)=2  (2,7)=2  (2,10)=6  (2,11)=6  (3,1)=1  (3,6)=2  (3,10)=0  (3,11)=0  (3,12)=0  (4,10)=0  (4,11)=0  (4,12)=0  (7,3)=8  (7,6)=5# (7,7)=5# (7,8)=1  (8,2)=8  (8,3)=8  (8,4)=8  (8,6)=5# (8,7)=1  (8,8)=1  (9,6)=5# (9,7)=5# (9,8)=1  (10,1)=5# (10,2)=4  (10,3)=4  (10,11)=3  (10,12)=3  (10,13)=5# (11,1)=5# (11,2)=5# (11,3)=4  (11,11)=3  (11,12)=5# (11,13)=5# (12,4)=0  (12,5)=0  (12,9)=0  (12,10)=0  (13,6)=5# (13,7)=5# (13,8)=7# (14,6)=5# (14,7)=7# (14,8)=7#
! size mismatch, 10x10 instead of 9x9

TEST a8c38be5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10398.5 bits (10398.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-136] Checking task a8d7556c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 74569.1 = 74578.0
DL output with Mo: L = 9.0 + 74569.1 = 74578.0
DL input+output M: L = 17.9 + 149138.1 = 149156.1

# learning a model for train pairs
149156.1	
86305.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35667.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24676.6	OUT DEF: layer[0]={layer[0]}
21724.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19896.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
18409.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
17729.4	OUT DEF: size={size}
17591.4	OUT DEF: layer[01].color=red
17453.4	OUT DEF: layer[011].color=red
17315.4	OUT DEF: layer[0111].color=red
17177.4	IN  DEF: layer[0].color=grey
17106.8	OUT DEF: layer[01].mask=full
17036.1	OUT DEF: layer[011].mask=full
16965.4	OUT DEF: layer[0111].mask=full
16919.8	OUT DEF: color=black
16874.2	IN  DEF: color=black
16839.2	OUT DEF: layer[01].pos=(?,?)
16804.2	OUT DEF: layer[01].size=(?,?)
16769.2	OUT DEF: layer[011].pos=(?,?)
16734.2	OUT DEF: layer[011].size=(?,?)
16605.5	OUT DEF: layer[011].size.j=2
16570.5	OUT DEF: layer[0111].pos=(?,?)
16535.5	OUT DEF: layer[0111].size=(?,?)
16406.8	OUT DEF: layer[0111].size.j=2
16278.2	OUT DEF: layer[0111].size.i=2
16243.2	IN  DEF: size=(?,?)
15930.6	IN  DEF: size.i=18
15618.1	IN  DEF: size.j=18
15583.1	IN  DEF: layer[0].pos=(?,?)
15420.5	IN  DEF: layer[0].pos.i=0
15257.9	IN  DEF: layer[0].pos.j=0
15222.9	IN  DEF: layer[0].size=(?,?)
14910.4	IN  DEF: layer[0].size.i=18
14597.9	IN  DEF: layer[0].size.j=18

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,?) and color red and mask full
  [011]: a rectangle at (?,?) with size (?,2) and color red and mask full
  [0111]: a rectangle at (?,?) with size (2,2) and color red and mask full
WHERE (Mi)
a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask ?

DL input  with Mi: L = 73.7 + 9789.7 = 9863.3
DL output with Mo: L = 91.8 + 4642.8 = 4734.6
DL input+output M: L = 165.4 + 14432.5 = 14597.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 110101011001001011001000001110001101101001111111000101001101010101111100100011100110100010001001101111001111111110111111111111101110010100111011101111111111001100100111111100010101100111111111001100111110001010011100011111010010011110101011101111111101110111110111111011101111101100110110101010011010100011111011111110010111
diff: 
delta:
   (326.3 bits)
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 110101011001001011001000001110001101101001111111000101001101010101111100100011100110100010001001101111001111111110111111111111101110010100111011101111111111001100100111111100010101100111111111001100111110001010011100011111010010011110101011101111111101110111110111111011101111101100110110101010011010100011111011111110010111
  [01]: a rectangle at (15,4) with size (3,2) and color red and mask full
  [011]: a rectangle at (5,5) with size (2,2) and color red and mask full
  [0111]: a rectangle at (6,0) with size (2,2) and color red and mask full
diff: 
delta: (7,15)=2  (7,16)=2  (8,15)=2  (8,16)=2  (15,13)=2  (15,14)=2  (16,13)=2  (16,14)=2 
   (207.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 110101011001001011001000001110001101101001111111000101001101010101111100100011100110100010001001101111001111111110111111111111101110010100111011101111111111001100100111111100010101100111111111001100111110001010011100011111010010011110101011101111111101110111110111111011101111101100110110101010011010100011111011111110010111
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN a8d7556c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 111110111010110011001000011100000000010110101100111101100000111101111100011011101110010111111000100110100101000111010001010000111100100101011101011011101010111101010101011011101111010101001011011001111010011000111010000010001111010001011100011000110100001111110000111101011000011110111111011001001011001111110100111010101111
diff: 
delta:
   (326.3 bits)
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 111110111010110011001000011100000000010110101100111101100000111101111100011011101110010111111000100110100101000111010001010000111100100101011101011011101010111101010101011011101111010101001011011001111010011000111010000010001111010001011100011000110100001111110000111101011000011110111111011001001011001111110100111010101111
  [01]: a rectangle at (3,6) with size (2,3) and color red and mask full
  [011]: a rectangle at (4,11) with size (3,2) and color red and mask full
  [0111]: a rectangle at (1,13) with size (2,2) and color red and mask full
diff: 
delta: (15,6)=2  (15,7)=2  (16,2)=2  (16,3)=2  (16,6)=2  (16,7)=2  (17,2)=2  (17,3)=2 
   (208.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 111110111010110011001000011100000000010110101100111101100000111101111100011011101110010111111000100110100101000111010001010000111100100101011101011011101010111101010101011011101111010101001011011001111010011000111010000010001111010001011100011000110100001111110000111101011000011110111111011001001011001111110100111010101111
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN a8d7556c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 10011011111011001111101100011100110100110101110111110010100010110111100001011010000111011111101011011011100110111110111101111111101001110110100111110001111010101101010001011011111011101001011110110011111110001110111100101110111111001000010111101111011111111001111110111111000111100111100111011010000110001011011100111111100
diff: 
delta:
   (326.3 bits)
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 10011011111011001111101100011100110100110101110111110010100010110111100001011010000111011111101011011011100110111110111101111111101001110110100111110001111010101101010001011011111011101001011110110011111110001110111100101110111111001000010111101111011111111001111110111111000111100111100111011010000110001011011100111111100
  [01]: a rectangle at (7,10) with size (4,2) and color red and mask full
  [011]: a rectangle at (1,6) with size (2,2) and color red and mask full
  [0111]: a rectangle at (4,15) with size (2,2) and color red and mask full
diff: 
delta:
   (47.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 10011011111011001111101100011100110100110101110111110010100010110111100001011010000111011111101011011011100110111110111101111111101001110110100111110001111010101101010001011011111011101001011110110011111110001110111100101110111111001000010111101111011111111001111110111111000111100111100111011010000110001011011100111111100
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN a8d7556c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  [0]: a rectangle at (0,0) with size (18,18) and color grey and mask 1101101010000001111111111111110010101111000110111101100101111010111011100111111101111111101111100010011110111111011001011000011111010011101101110100111100010000000111100011100101011011111011001111110100100111111011010110010111011110111000011001111111110110001101101110101101010010110001110111100010101100001111101100101000
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST a8d7556c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4642.8 bits (4642.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-135] Checking task a9f96cdd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1283.0 = 1292.0
DL output with Mo: L = 9.0 + 2386.3 = 2395.3
DL input+output M: L = 17.9 + 3669.3 = 3687.3

# learning a model for train pairs
3687.3	
3134.8	OUT DEF: size={size}
2973.2	IN  SHAPE at layer[0]: a point at ? with color ?
2788.7	IN  DEF: layer[0].color=red
2662.2	OUT SHAPE at layer[0]: a point at ? with color ?
2602.1	OUT DEF: color=black
2541.9	IN  DEF: color=black
2493.6	OUT DEF: layer[0].pos=(?,?)
2353.4	OUT DEF: layer[0].pos.j={layer[0].pos.j - 1}
2305.2	IN  DEF: size=(?,?)
2030.2	IN  DEF: size.j=5
1812.7	IN  DEF: size.i=3
1764.5	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a point at (?,{layer[0].pos.j - 1}) with color ?
WHERE (Mi)
a background with size (3,5) and color black and layers
  [0]: a point at (?,?) with color red

DL input  with Mi: L = 34.5 + 262.0 = 296.5
DL output with Mo: L = 27.2 + 1440.7 = 1468.0
DL input+output M: L = 61.7 + 1702.8 = 1764.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  [0]: a point at (0,0) with color green
diff: 
delta: (0,2)=6  (2,0)=8  (2,2)=7#
   (56.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  [0]: a point at (2,4) with color red
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,3) with color green
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  [0]: a point at (2,4) with color red
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  [0]: a point at (0,2) with color red
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,1) with color cyan
diff: 
delta: (1,3)=7#
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  [0]: a point at (0,2) with color red
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,3) with color red
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  [0]: a point at (0,2) with color green
diff: 
delta: (0,4)=6  (2,2)=8  (2,4)=7#
   (56.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,3) with color red
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  [0]: a point at (1,4) with color red
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST a9f96cdd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1440.7 bits (1440.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-134] Checking task aabf363d.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4827.4 = 4836.4
DL output with Mo: L = 9.0 + 4492.2 = 4501.2
DL input+output M: L = 17.9 + 9319.6 = 9337.5

# learning a model for train pairs
9337.5	
6259.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3216.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2768.7	OUT DEF: layer[0].mask={layer[0].mask}
2424.1	OUT DEF: size={size}
2131.6	OUT DEF: layer[0].size={layer[0].size}
1939.4	OUT DEF: layer[0].pos={layer[0].pos}
1864.0	IN  SHAPE at layer[01]: a point at ? with color ?
1771.5	OUT DEF: layer[0].color={layer[01].color}
1740.5	OUT DEF: color=black
1709.5	IN  DEF: color=black
1687.7	IN  DEF: size=(?,?)
1533.6	IN  DEF: size.i=7
1379.5	IN  DEF: size.j=7
1357.7	IN  DEF: layer[0].pos=(?,?)
1275.9	IN  DEF: layer[0].pos.i=1
1194.1	IN  DEF: layer[0].pos.j=1
1172.3	IN  DEF: layer[0].size=(?,?)
1036.6	IN  DEF: layer[0].size.i=5
913.2	IN  DEF: layer[0].size.j=4
891.4	IN  DEF: layer[01].pos=(?,?)
809.6	IN  DEF: layer[01].pos.i=6
727.8	IN  DEF: layer[01].pos.j=0

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[01].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color ? and mask ?
  [01]: a point at (6,0) with color ?

DL input  with Mi: L = 72.5 + 632.2 = 704.7
DL output with Mo: L = 23.1 + 0.0 = 23.1
DL input+output M: L = 95.7 + 632.2 = 727.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color red and mask 1001110111100100111
  [01]: a point at (6,0) with color yellow
diff: 
delta:
   (31.6 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color yellow and mask 1001110111100100111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color red and mask 1001110111100100111
  [01]: a point at (6,0) with color yellow
diff: 
delta:
correct output grid

TRAIN aabf363d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color green and mask 1100011111111100100
  [01]: a point at (6,0) with color pink
diff: 
delta:
   (31.6 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color pink and mask 1100011111111100100
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,4) and color green and mask 1100011111111100100
  [01]: a point at (6,0) with color pink
diff: 
delta:
correct output grid

TRAIN aabf363d.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color cyan and mask 111000110011001111100111
  [01]: a point at (6,0) with color red
diff:   layer[0].size.j
delta:
correct output grid

TEST aabf363d.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-133] Checking task aba27056.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7808.9 = 7817.8
DL output with Mo: L = 9.0 + 15791.8 = 15800.7
DL input+output M: L = 17.9 + 23600.7 = 23618.6

# learning a model for train pairs
23618.6	
16457.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10922.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6289.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5324.9	OUT DEF: layer[0]={layer[0]}
4802.7	OUT DEF: size={size}
4664.8	OUT DEF: layer[01].color=yellow
4619.2	OUT DEF: color=black
4573.5	IN  DEF: color=black
4538.5	OUT DEF: layer[01].pos=(?,?)
4416.2	OUT DEF: layer[01].pos.j=0
4381.1	OUT DEF: layer[01].size=(?,?)
4346.1	IN  DEF: size=(?,?)
4311.1	IN  DEF: layer[0].pos=(?,?)
4276.1	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,0) with size (?,?) and color yellow and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 38.6 + 2093.1 = 2131.7
DL output with Mo: L = 40.7 + 2103.6 = 2144.4
DL input+output M: L = 79.4 + 4196.7 = 4276.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (4,1) with size (3,5) and color pink and mask 111111000111011
diff: 
delta:
   (58.6 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (4,1) with size (3,5) and color pink and mask 111111000111011
  [01]: a rectangle at (0,0) with size (6,7) and color yellow and mask 11111001111100011100010101010010010001000
diff: 
delta:
   (63.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (4,1) with size (3,5) and color pink and mask 111111000111011
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color pink and layers
  [0]: a rectangle at (0,0) with size (7,7) and color black and mask 1000001101110110010011111111111111111111111111111
diff:   color
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (4,1) with size (3,5) and color pink and mask full
diff: 
delta: (4,3)=0  (5,2)=0  (5,3)=0  (5,4)=0 
! 16 wrong pixels (generated / expected)

TRAIN aba27056.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,4) with size (7,5) and color orange and mask 11111100011000010000100001000111111
diff: 
delta:
   (83.2 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,4) with size (7,5) and color orange and mask 11111100011000010000100001000111111
  [01]: a rectangle at (0,0) with size (9,8) and color yellow and mask 111101001111100011111111111111111111111111111000111101000000001000000001
diff: 
delta:
   (95.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,4) with size (7,5) and color orange and mask 11111100011000010000100001000111111
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color orange and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 1111011101111011111111011111111011111111011101111000001111111111111111111111
diff:   color
delta:
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,8) with size (7,1) and color orange and mask full
diff: 
delta: (2,4)=7# (2,5)=7# (2,6)=7# (2,7)=7# (3,4)=7# (7,4)=7# (8,4)=7# (8,5)=7# (8,6)=7# (8,7)=7#
! 46 wrong pixels (generated / expected)

TRAIN aba27056.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (4,6) and color green and mask 110011100001100001111111
diff: 
delta:
   (67.6 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (4,6) and color green and mask 110011100001100001111111
  [01]: a rectangle at (1,0) with size (5,6) and color yellow and mask 101101011110111111111111111111
diff: 
delta:
   (50.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (4,6) and color green and mask 110011100001100001111111
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color green and layers
  [0]: a rectangle at (1,0) with size (5,6) and color black and mask 111111111111001100011110011110
diff:   color
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,6) and color green and mask full
diff: 
delta: (1,0)=3  (1,5)=3  (2,0)=3  (2,5)=3  (3,0)=3  (3,1)=3  (3,4)=3  (3,5)=3 
! 25 wrong pixels (generated / expected)

TRAIN aba27056.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (9,4) and color red and mask 111110010001000100010001000110011111
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111110000111111011011111111101111111110111111111011111111101111111110111111011011111100001
diff:   color
delta:
! 66 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (9,1) and color red and mask full
diff: 
delta: (0,2)=2  (0,3)=2  (0,4)=2  (1,4)=2  (7,4)=2  (8,2)=2  (8,3)=2  (8,4)=2 
! 59 wrong pixels (generated / expected)

TEST aba27056.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2103.6 bits (2103.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-132] Checking task ac0a08a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1946.5 = 1955.4
DL output with Mo: L = 9.0 + 30291.4 = 30300.3
DL input+output M: L = 17.9 + 32237.8 = 32255.8

# learning a model for train pairs
32255.8	
26250.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20205.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20121.7	IN  SHAPE at layer[0]: a point at ? with color ?
19981.8	OUT DEF: layer[0].color={layer[0].color}
14595.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14498.8	IN  SHAPE at layer[01]: a point at ? with color ?
14359.3	OUT DEF: layer[01].color={layer[01].color}
14288.6	OUT DEF: layer[0].mask=full
14218.0	OUT DEF: layer[01].mask=full
14147.3	OUT DEF: layer[011].mask=full
14101.7	OUT DEF: color=black
14056.1	IN  DEF: color=black
14021.1	OUT DEF: size=(?,?)
13986.1	OUT DEF: layer[0].pos=(?,?)
13850.0	OUT DEF: layer[0].pos.i={layer[0].pos.i}
13815.0	OUT DEF: layer[0].size=(?,?)
13780.0	OUT DEF: layer[01].pos=(?,?)
13650.3	OUT DEF: layer[01].pos.j={layer[01].pos.j + layer[01].pos.j}
13615.3	OUT DEF: layer[01].size=(?,?)
13580.3	OUT DEF: layer[011].pos=(?,?)
13545.3	OUT DEF: layer[011].size=(?,?)
13510.2	IN  DEF: size=(?,?)
13347.7	IN  DEF: size.i=3
13185.1	IN  DEF: size.j=3
13150.1	IN  DEF: layer[0].pos=(?,?)
13062.4	IN  DEF: layer[0].pos.i=0
13027.4	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},?) with size (?,?) and color {layer[0].color} and mask full
  [01]: a rectangle at (?,{layer[01].pos.j + layer[01].pos.j}) with size (?,?) and color {layer[01].color} and mask full
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask full
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a point at (0,?) with color ?
  [01]: a point at (?,?) with color ?

DL input  with Mi: L = 46.1 + 1164.3 = 1210.4
DL output with Mo: L = 94.0 + 11723.1 = 11817.1
DL input+output M: L = 140.0 + 12887.4 = 13027.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color red
  [01]: a point at (1,2) with color orange
diff: 
delta:
   (18.0 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color red and mask full
  [01]: a rectangle at (2,4) with size (2,2) and color orange and mask full
  [011]: a rectangle at (0,2) with size (2,4) and color black and mask full
diff: 
delta:
   (63.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color red
  [01]: a point at (1,2) with color orange
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,2) with color orange
  [01]: a point at (0,0) with color red
diff:   layer[0].pos.i
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN ac0a08a4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color yellow
  [01]: a point at (2,0) with color pink
diff: 
delta: (1,2)=8 
   (34.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (6,0) with size (3,3) and color pink and mask full
  [011]: a rectangle at (3,6) with size (3,3) and color cyan and mask full
diff: 
delta:
   (72.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color yellow
  [01]: a point at (1,2) with color cyan
diff: 
delta: (2,0)=6 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color yellow
  [01]: a point at (2,0) with color pink
diff: 
delta: (1,2)=8 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,2) with color cyan
  [01]: a point at (0,1) with color yellow
diff:   layer[0].pos.i
delta: (2,0)=6 
! size mismatch, 10x10 instead of 9x9

TRAIN ac0a08a4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color pink
  [01]: a point at (1,0) with color green
diff: 
delta: (0,2)=9# (1,2)=2  (2,1)=7#
   (64.3 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,5) with size (5,5) and color pink and mask full
  [01]: a rectangle at (5,0) with size (5,5) and color green and mask full
  [011]: a rectangle at (0,10) with size (5,5) and color brown and mask full
diff: 
delta: (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2  (6,14)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,14)=2  (8,10)=2  (8,11)=2  (8,12)=2  (8,13)=2  (8,14)=2  (9,10)=2  (9,11)=2  (9,12)=2  (9,13)=2  (9,14)=2  (10,5)=7# (10,6)=7# (10,7)=7# (10,8)=7# (10,9)=7# (11,5)=7# (11,6)=7# (11,7)=7# (11,8)=7# (11,9)=7# (12,5)=7# (12,6)=7# (12,7)=7# (12,8)=7# (12,9)=7# (13,5)=7# (13,6)=7# (13,7)=7# (13,8)=7# (13,9)=7# (14,5)=7# (14,6)=7# (14,7)=7# (14,8)=7# (14,9)=7#
   (1036.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color pink
  [01]: a point at (0,2) with color brown
diff: 
delta: (1,0)=3  (1,2)=2  (2,1)=7#
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color pink
  [01]: a point at (1,0) with color green
diff: 
delta: (0,2)=9# (1,2)=2  (2,1)=7#
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color pink
  [01]: a point at (1,2) with color red
diff: 
delta: (0,2)=9# (1,0)=3  (2,1)=7#
! size mismatch, 10x10 instead of 15x15

TRAIN ac0a08a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color blue
  [01]: a point at (1,1) with color brown
diff: 
delta: (1,2)=6  (2,0)=8 
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color blue
  [01]: a point at (1,2) with color pink
diff: 
delta: (1,1)=9# (2,0)=8 
! size mismatch, 10x10 instead of 12x12
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color blue
  [01]: a point at (2,0) with color cyan
diff: 
delta: (1,1)=9# (1,2)=6 
! size mismatch, 10x10 instead of 12x12

TEST ac0a08a4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 11723.1 bits (11723.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-131] Checking task ae3edfdc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5570.5 = 5579.4
DL output with Mo: L = 9.0 + 5570.5 = 5579.4
DL input+output M: L = 17.9 + 11140.9 = 11158.9

# learning a model for train pairs
11158.9	
10230.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9581.6	OUT DEF: size={size}
9099.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8961.6	OUT DEF: layer[0].color=green
8823.6	OUT DEF: layer[01].color=orange
8728.6	OUT SHAPE at layer[011]: a point at ? with color ?
8590.6	OUT DEF: layer[011].color=blue
8470.6	OUT SHAPE at layer[0111]: a point at ? with color ?
8332.6	OUT DEF: layer[0111].color=red
8264.2	IN  SHAPE at layer[0]: a point at ? with color ?
8193.6	IN  SHAPE at layer[01]: a point at ? with color ?
8120.8	IN  SHAPE at layer[011]: a point at ? with color ?
8045.4	IN  SHAPE at layer[0111]: a point at ? with color ?
7966.2	IN  SHAPE at layer[01111]: a point at ? with color ?
7880.8	IN  SHAPE at layer[011111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color green and mask ?
  [01]: a rectangle at ? with size ? and color orange and mask ?
  [011]: a point at ? with color blue
  [0111]: a point at ? with color red
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?

DL input  with Mi: L = 68.4 + 5058.1 = 5126.4
DL output with Mo: L = 68.0 + 2686.4 = 2754.4
DL input+output M: L = 136.3 + 7744.5 = 7880.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,3) with color green
  [01]: a point at (4,0) with color green
  [011]: a point at (4,3) with color red
  [0111]: a point at (4,8) with color green
  [01111]: a point at (6,11) with color orange
  [011111]: a point at (9,3) with color green
diff: 
delta: (10,5)=7# (10,11)=1  (10,14)=7# (14,11)=7#
   (201.2 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,2) with size (3,3) and color green and mask 10101010
  [01]: a rectangle at (9,10) with size (3,3) and color orange and mask 10101010
  [011]: a point at (10,11) with color blue
  [0111]: a point at (4,3) with color red
diff: 
delta:
   (95.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,3) with color green
  [01]: a point at (4,0) with color green
  [011]: a point at (4,3) with color red
  [0111]: a point at (4,8) with color green
  [01111]: a point at (6,11) with color orange
  [011111]: a point at (9,3) with color green
diff: 
delta: (10,5)=7# (10,11)=1  (10,14)=7# (14,11)=7#
! 14 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,3) with color orange
  [01]: a point at (2,0) with color orange
  [011]: a point at (2,3) with color blue
  [0111]: a point at (2,9) with color orange
  [01111]: a point at (8,3) with color orange
  [011111]: a point at (10,5) with color green
diff: 
delta: (10,11)=2  (14,11)=3 
   (162.3 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (10,10) with size (2,2) and color green and mask 1001
  [01]: a rectangle at (1,2) with size (3,3) and color orange and mask 10101010
  [011]: a point at (2,3) with color blue
  [0111]: a point at (10,11) with color red
diff: 
delta:
   (88.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,3) with color orange
  [01]: a point at (2,0) with color orange
  [011]: a point at (2,3) with color blue
  [0111]: a point at (2,9) with color orange
  [01111]: a point at (8,3) with color orange
  [011111]: a point at (10,5) with color green
diff: 
delta: (10,11)=2  (14,11)=3 
! 12 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,6) with color green
  [01]: a point at (6,1) with color orange
  [011]: a point at (6,10) with color blue
  [0111]: a point at (11,6) with color red
  [01111]: a point at (11,14) with color green
  [011111]: a point at (14,6) with color green
diff: 
delta: (14,10)=7#
   (142.3 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (10,6) with size (3,2) and color green and mask 11001
  [01]: a rectangle at (6,9) with size (2,2) and color orange and mask 1001
  [011]: a point at (6,10) with color blue
  [0111]: a point at (11,6) with color red
diff: 
delta:
   (84.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,6) with color green
  [01]: a point at (6,1) with color orange
  [011]: a point at (6,10) with color blue
  [0111]: a point at (11,6) with color red
  [01111]: a point at (11,14) with color green
  [011111]: a point at (14,6) with color green
diff: 
delta: (14,10)=7#
! 11 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a point at (0,11) with color green
  [01]: a point at (3,0) with color green
  [011]: a point at (3,11) with color red
  [0111]: a point at (6,0) with color orange
  [01111]: a point at (6,5) with color blue
  [011111]: a point at (6,14) with color orange
diff: 
delta: (12,11)=3 
! 11 wrong pixels (generated / expected)

TEST ae3edfdc.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2686.4 bits (2686.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-130] Checking task ae4f1146.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 26091.7 = 26100.7
DL output with Mo: L = 9.0 + 3105.4 = 3114.4
DL input+output M: L = 17.9 + 29197.1 = 29215.1

# learning a model for train pairs
29215.1	
23372.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19874.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17500.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16393.5	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
15532.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15042.2	OUT DEF: layer[0].size={layer[01].size}
14551.8	OUT DEF: size={layer[01].size}
14234.6	OUT DEF: color={layer[0].color}
14050.0	OUT DEF: layer[0].color={layer[0111].color}
13865.5	IN  DEF: layer[0].color=cyan
13681.1	IN  DEF: layer[011].color=cyan
13463.2	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[01].size} and color {layer[0].color} and layers
  [0]: a rectangle at ? with size {layer[01].size} and color {layer[0111].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color cyan and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color cyan and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 94.8 + 12596.6 = 12691.5
DL output with Mo: L = 33.5 + 738.3 = 771.8
DL input+output M: L = 128.3 + 13334.9 = 13463.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (6,2) and color cyan and mask full
  [01]: a rectangle at (1,4) with size (3,3) and color cyan and mask 111100101
  [011]: a rectangle at (5,6) with size (3,3) and color cyan and mask 10010101
  [0111]: a rectangle at (5,6) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (1,4) with size (2,2) and color blue and mask full
diff: 
delta: (0,0)=8  (1,0)=1  (2,0)=8  (3,1)=0  (3,2)=0  (4,3)=1  (5,3)=8  (6,1)=8  (6,2)=1  (6,3)=8 
   (354.8 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 101101010
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (6,2) and color cyan and mask full
  [01]: a rectangle at (1,4) with size (3,3) and color cyan and mask 111100101
  [011]: a rectangle at (5,6) with size (3,3) and color blue and mask 101101010
  [0111]: a rectangle at (5,6) with size (3,3) and color cyan and mask full
  [01111]: a rectangle at (1,4) with size (2,2) and color blue and mask full
diff:   layer[011].color
delta: (0,0)=8  (1,0)=1  (2,0)=8  (3,1)=0  (3,2)=0  (4,3)=1  (5,3)=8  (6,1)=8  (6,2)=1  (6,3)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,1) with size (6,2) and color cyan and mask full
  [01]: a rectangle at (1,4) with size (3,3) and color cyan and mask 111100101
  [011]: a rectangle at (5,6) with size (3,3) and color blue and mask 101101010
  [0111]: a rectangle at (1,4) with size (2,2) and color blue and mask full
  [01111]: a rectangle at (5,6) with size (3,3) and color cyan and mask full
diff:   layer[011].color
delta: (0,0)=8  (1,0)=1  (2,0)=8  (3,1)=0  (3,2)=0  (4,3)=1  (5,3)=8  (6,1)=8  (6,2)=1  (6,3)=8 
! 4 wrong pixels (generated / expected)

TRAIN ae4f1146.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,2) with size (6,6) and color cyan and mask 110011000100000101011000110011101010
  [01]: a rectangle at (6,6) with size (3,3) and color cyan and mask 110111111
  [011]: a rectangle at (0,1) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (4,2) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (1,5) with size (2,2) and color blue and mask full
diff: 
delta: (0,3)=1  (1,2)=1  (3,7)=1  (8,6)=1 
   (279.1 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 100011010
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,2) with size (6,6) and color cyan and mask 110011000100000101011000110011101010
  [01]: a rectangle at (6,6) with size (3,3) and color cyan and mask 110111111
  [011]: a rectangle at (0,1) with size (3,3) and color cyan and mask 111101011
  [0111]: a rectangle at (4,2) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (0,2) with size (2,2) and color blue and mask full
diff: 
delta: (1,6)=1  (2,5)=1  (3,7)=1  (8,6)=1 
! 5 wrong pixels (generated / expected)

TRAIN ae4f1146.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (7,3) and color cyan and mask full
  [01]: a rectangle at (0,4) with size (3,3) and color cyan and mask 110111111
  [011]: a rectangle at (4,7) with size (3,2) and color cyan and mask 11010
  [0111]: a rectangle at (4,6) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (2,4) with size (1,1) and color blue and mask full
diff: 
delta: (4,0)=0  (4,1)=0  (4,2)=0  (4,6)=8  (5,1)=1  (6,2)=1  (7,0)=1 
   (295.5 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 101011010
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,0) with size (7,3) and color cyan and mask full
  [01]: a rectangle at (0,4) with size (3,3) and color cyan and mask 110111111
  [011]: a rectangle at (4,7) with size (3,2) and color cyan and mask 11010
  [0111]: a rectangle at (4,6) with size (3,3) and color blue and mask full
  [01111]: a rectangle at (2,4) with size (1,1) and color blue and mask full
diff: 
delta: (4,0)=0  (4,1)=0  (4,2)=0  (4,6)=8  (5,1)=1  (6,2)=1  (7,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN ae4f1146.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (3,3) and color cyan and mask 110011111
  [01]: a rectangle at (1,6) with size (3,3) and color blue and mask 10111110
  [011]: a rectangle at (5,4) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (0,2) with size (3,3) and color blue and mask 11100011
  [01111]: a rectangle at (0,2) with size (3,3) and color cyan and mask full
diff: 
delta: (1,6)=8  (3,6)=8  (3,8)=8  (5,2)=1  (5,5)=1  (6,0)=1  (6,4)=1  (7,6)=1 
   (330.2 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 10111110
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (3,3) and color cyan and mask 110011111
  [01]: a rectangle at (1,6) with size (3,3) and color blue and mask 10111110
  [011]: a rectangle at (5,4) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (0,2) with size (3,3) and color blue and mask 11100011
  [01111]: a rectangle at (0,2) with size (3,3) and color cyan and mask full
diff: 
delta: (1,6)=8  (3,6)=8  (3,8)=8  (5,2)=1  (5,5)=1  (6,0)=1  (6,4)=1  (7,6)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (3,3) and color cyan and mask 110011111
  [01]: a rectangle at (1,6) with size (3,3) and color blue and mask 10111110
  [011]: a rectangle at (5,4) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (0,2) with size (3,3) and color cyan and mask 100011100
  [01111]: a rectangle at (0,2) with size (3,3) and color blue and mask full
diff: 
delta: (1,6)=8  (3,6)=8  (3,8)=8  (5,2)=1  (5,5)=1  (6,0)=1  (6,4)=1  (7,6)=1 
! 6 wrong pixels (generated / expected)

TRAIN ae4f1146.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (6,9) and color cyan and mask 110000000011000000101000101000110010000111101000111
  [01]: a rectangle at (0,6) with size (9,3) and color blue and mask full
  [011]: a rectangle at (3,4) with size (2,2) and color blue and mask full
  [0111]: a rectangle at (2,0) with size (1,1) and color blue and mask full
  [01111]: a rectangle at (5,3) with size (1,1) and color blue and mask full
diff:   layer[011].color
delta: (3,6)=0  (3,7)=0  (3,8)=0  (4,6)=0  (4,7)=0  (4,8)=0  (5,6)=0  (5,7)=0  (5,8)=0  (6,8)=8  (7,6)=8  (8,8)=8 
! size mismatch, 9x3 instead of 3x3

TEST ae4f1146.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 738.3 bits (738.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-129] Checking task aedd82e4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4332.6 = 4341.6
DL output with Mo: L = 9.0 + 4560.1 = 4569.1
DL input+output M: L = 17.9 + 8892.7 = 8910.7

# learning a model for train pairs
8910.7	
6971.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5402.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4291.4	OUT DEF: layer[0]={layer[0]}
3758.8	OUT DEF: size={size}
3504.4	OUT DEF: color={color}
3207.9	IN  DEF: color=red
3023.5	IN  DEF: layer[0].color=black
2975.2	IN  DEF: size=(?,?)
2927.0	IN  DEF: layer[0].pos=(?,?)
2802.1	IN  DEF: layer[0].pos.i=0
2680.4	IN  DEF: layer[0].pos.j=0
2632.2	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: {layer[0]}
WHERE (Mi)
a background with size (?,?) and color red and layers
  [0]: a rectangle at (0,0) with size (?,?) and color black and mask ?

DL input  with Mi: L = 52.3 + 1590.9 = 1643.1
DL output with Mo: L = 11.4 + 977.6 = 989.1
DL input+output M: L = 63.7 + 2568.5 = 2632.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 110001001
diff: 
delta:
   (33.3 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 110001001
diff: 
delta: (2,0)=1 
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 110001001
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,1) and color black and mask full
diff: 
delta: (2,1)=0  (2,2)=0 
! 3 wrong pixels (generated / expected)

TRAIN aedd82e4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 1101011111011000
diff: 
delta:
   (43.6 bits)
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 1101011111011000
diff: 
delta: (2,3)=1  (3,1)=1 
   (33.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color red and layers
  [0]: a rectangle at (0,0) with size (4,4) and color black and mask 1101011111011000
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color red and mask 10111
diff:   color  layer[0].color
delta: (2,3)=2  (3,1)=2 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color red and mask full
diff:   color  layer[0].color
delta: (1,1)=2  (2,3)=2  (3,1)=2 
! 3 wrong pixels (generated / expected)

TRAIN aedd82e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,4) and color red and layers
  [0]: a rectangle at (0,0) with size (5,4) and color black and mask 11111010011011100
diff: 
delta:
   (48.9 bits)
data: a background with size (5,4) and color red and layers
  [0]: a rectangle at (0,0) with size (5,4) and color black and mask 11111010011011100
diff: 
delta: (2,3)=1 
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color red and layers
  [0]: a rectangle at (0,0) with size (5,4) and color black and mask 11111010011011100
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask 111011
diff:   color  layer[0].color
delta: (2,3)=2  (4,1)=2  (4,2)=2  (4,3)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask full
diff:   color  layer[0].color
delta: (1,0)=0  (2,3)=2  (4,1)=2  (4,2)=2  (4,3)=2 
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101010100
diff: 
delta:
   (33.3 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101010100
diff: 
delta: (1,2)=1  (2,1)=1 
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101010100
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,2) with size (1,1) and color black and mask full
diff:   layer[0].pos.j
delta: (1,1)=0  (2,0)=0  (2,2)=0 
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color red and layers
  [0]: a rectangle at (0,0) with size (5,4) and color black and mask 111110101111010100
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 100010011
diff:   color  layer[0].color
delta: (0,3)=2  (3,0)=2  (4,2)=2  (4,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color red and mask full
diff:   color  layer[0].color
delta: (0,3)=2  (1,1)=2  (2,2)=2  (3,0)=2  (4,2)=2  (4,3)=2 
! 6 wrong pixels (generated / expected)

TEST aedd82e4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 977.6 bits (977.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-128] Checking task af902bf9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3589.7 = 3598.7
DL output with Mo: L = 9.0 + 8226.0 = 8234.9
DL input+output M: L = 17.9 + 11815.7 = 11833.6

# learning a model for train pairs
11833.6	
8239.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7661.0	OUT DEF: size={size}
7523.0	OUT DEF: layer[0].color=red
7447.6	OUT SHAPE at layer[01]: a point at ? with color ?
7309.6	OUT DEF: layer[01].color=yellow
7229.7	OUT SHAPE at layer[011]: a point at ? with color ?
7091.7	OUT DEF: layer[011].color=yellow
7004.4	OUT SHAPE at layer[0111]: a point at ? with color ?
6866.4	OUT DEF: layer[0111].color=yellow
6761.8	OUT SHAPE at layer[01111]: a point at ? with color ?
6623.8	OUT DEF: layer[01111].color=yellow
6549.2	IN  SHAPE at layer[0]: a point at ? with color ?
6222.6	OUT DEF: layer[01]={layer[0]}
6084.6	IN  DEF: layer[0].color=yellow
6005.9	IN  SHAPE at layer[00]: a point at ? with color ?
5680.3	OUT DEF: layer[011]={layer[00]}
5542.3	IN  DEF: layer[00].color=yellow
5456.0	IN  SHAPE at layer[001]: a point at ? with color ?
5131.0	OUT DEF: layer[0111]={layer[001]}
4993.0	IN  DEF: layer[001].color=yellow
4889.1	IN  SHAPE at layer[0011]: a point at ? with color ?
4564.5	OUT DEF: layer[01111]={layer[0011]}
4426.5	IN  DEF: layer[0011].color=yellow
4355.9	OUT DEF: layer[0].mask=full
4310.3	OUT DEF: color=black
4264.6	IN  DEF: color=black
4229.6	OUT DEF: layer[0].pos=(?,?)
4097.2	OUT DEF: layer[0].pos.j={layer[0].pos.j + 1}
4062.2	OUT DEF: layer[0].size=(?,?)
4027.2	IN  DEF: size=(?,?)
3763.9	IN  DEF: size.i=10
3500.6	IN  DEF: size.j=10
3465.5	IN  DEF: layer[00].pos=(?,?)
3430.5	IN  DEF: layer[001].pos=(?,?)
3395.5	IN  DEF: layer[0011].pos=(?,?)
3360.5	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,{layer[0].pos.j + 1}) with size (?,?) and color red and mask full
  [01]: {layer[0]}
  [011]: {layer[00]}
  [0111]: {layer[001]}
  [01111]: {layer[0011]}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [00]: a point at (?,?) with color yellow
  [001]: a point at (?,?) with color yellow
  [0011]: a point at (?,?) with color yellow
  [0]: a point at (?,?) with color yellow

DL input  with Mi: L = 87.4 + 1864.0 = 1951.4
DL output with Mo: L = 60.0 + 1349.1 = 1409.1
DL input+output M: L = 147.4 + 3213.1 = 3360.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (3,3) with color yellow
  [001]: a point at (3,5) with color yellow
  [0011]: a point at (5,5) with color yellow
  [0]: a point at (5,3) with color yellow
diff: 
delta:
   (37.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (1,1) and color red and mask full
  [01]: a point at (5,3) with color yellow
  [011]: a point at (3,3) with color yellow
  [0111]: a point at (3,5) with color yellow
  [01111]: a point at (5,5) with color yellow
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (3,3) with color yellow
  [001]: a point at (3,5) with color yellow
  [0011]: a point at (5,3) with color yellow
  [0]: a point at (5,5) with color yellow
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (3,3) with color yellow
  [001]: a point at (3,5) with color yellow
  [0011]: a point at (5,5) with color yellow
  [0]: a point at (5,3) with color yellow
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN af902bf9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,6) with color yellow
  [0011]: a point at (6,6) with color yellow
  [0]: a point at (6,1) with color yellow
diff: 
delta:
   (37.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (4,4) and color red and mask full
  [01]: a point at (6,1) with color yellow
  [011]: a point at (1,1) with color yellow
  [0111]: a point at (1,6) with color yellow
  [01111]: a point at (6,6) with color yellow
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,6) with color yellow
  [0011]: a point at (6,1) with color yellow
  [0]: a point at (6,6) with color yellow
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,6) with color yellow
  [0011]: a point at (6,6) with color yellow
  [0]: a point at (6,1) with color yellow
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN af902bf9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,3) with color yellow
  [0011]: a point at (3,1) with color yellow
  [0]: a point at (6,4) with color yellow
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (112.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,5) with size (2,4) and color red and mask full
  [01]: a point at (6,4) with color yellow
  [011]: a point at (1,1) with color yellow
  [0111]: a point at (1,3) with color yellow
  [01111]: a point at (3,1) with color yellow
diff: 
delta: (2,2)=2  (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (108.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,3) with color yellow
  [0011]: a point at (3,1) with color yellow
  [0]: a point at (3,3) with color yellow
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,3) with color yellow
  [0011]: a point at (3,1) with color yellow
  [0]: a point at (6,4) with color yellow
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,1) with color yellow
  [001]: a point at (1,3) with color yellow
  [0011]: a point at (3,1) with color yellow
  [0]: a point at (6,9) with color yellow
diff: 
delta: (3,3)=4  (6,4)=4  (9,4)=4  (9,9)=4 
! 13 wrong pixels (generated / expected)

TRAIN af902bf9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,5) with color yellow
  [001]: a point at (0,9) with color yellow
  [0011]: a point at (4,5) with color yellow
  [0]: a point at (4,9) with color yellow
diff: 
delta: (5,0)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,5) with color yellow
  [001]: a point at (0,9) with color yellow
  [0011]: a point at (4,5) with color yellow
  [0]: a point at (5,0) with color yellow
diff: 
delta: (4,9)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,5) with color yellow
  [001]: a point at (0,9) with color yellow
  [0011]: a point at (4,5) with color yellow
  [0]: a point at (5,3) with color yellow
diff: 
delta: (4,9)=4  (5,0)=4  (8,0)=4  (8,3)=4 
! 21 wrong pixels (generated / expected)

TEST af902bf9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1349.1 bits (1349.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-127] Checking task b0c4d837.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 25012.6 = 25021.6
DL output with Mo: L = 9.0 + 3150.9 = 3159.8
DL input+output M: L = 17.9 + 28163.5 = 28181.4

# learning a model for train pairs
28181.4	
16638.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9820.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8932.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
Stack overflow
Called from unknown location
Error: no learned model
=====================================
[-126] Checking task b190f7f5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5656.3 = 5665.3
DL output with Mo: L = 9.0 + 17567.5 = 17576.5
DL input+output M: L = 17.9 + 23223.8 = 23241.8

# learning a model for train pairs
23241.8	
21720.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20190.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18623.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17381.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17018.7	OUT DEF: layer[0].size={layer[0].size}
14653.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
14290.7	OUT DEF: layer[01].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 4396.4 = 4423.0
DL output with Mo: L = 75.6 + 9792.0 = 9867.6
DL input+output M: L = 102.2 + 14188.5 = 14290.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 10111010
diff: 
delta: (0,0)=2  (0,2)=4  (1,1)=3 
   (101.5 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 10111010
  [01]: a rectangle at (0,6) with size (3,3) and color yellow and mask 10111010
  [011]: a rectangle at (4,3) with size (1,3) and color green and mask full
  [0111]: a rectangle at (3,4) with size (3,1) and color green and mask full
diff: 
delta:
   (125.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,3) with size (3,3) and color cyan and mask 10111010
diff: 
delta: (0,0)=2  (0,2)=4  (1,1)=3 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,3) with size (1,3) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,2)=4  (0,4)=8  (1,1)=3  (2,4)=8 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,4) with size (3,1) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,2)=4  (1,1)=3  (1,3)=8  (1,5)=8 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color cyan and mask 1101
diff: 
delta: (0,2)=8  (0,4)=4  (1,3)=1  (1,4)=2  (1,5)=4  (2,4)=1 
   (141.1 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,3) with size (2,2) and color yellow and mask 1101
  [01]: a rectangle at (4,0) with size (2,2) and color blue and mask 1101
  [011]: a rectangle at (4,3) with size (2,2) and color red and mask 1101
  [0111]: a rectangle at (4,6) with size (2,2) and color yellow and mask 1101
diff: 
delta: (0,5)=4  (3,2)=1  (3,5)=2  (3,8)=4  (6,5)=1  (7,3)=1  (8,3)=1  (8,4)=1 
   (269.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color cyan and mask 1101
diff: 
delta: (0,2)=8  (0,4)=4  (1,3)=1  (1,4)=2  (1,5)=4  (2,4)=1 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (0,4) with size (4,4) and color cyan and mask 100010011110100
diff: 
delta: (0,0)=2  (0,3)=4  (1,1)=2  (1,2)=4  (2,1)=4  (2,2)=2  (3,0)=4  (3,3)=2 
   (197.1 bits)
data: a background with size (16,16) and color yellow and layers
  [0]: a rectangle at (0,0) with size (4,4) and color red and mask 100010011110100
  [01]: a rectangle at (4,4) with size (4,4) and color red and mask 100010011110100
  [011]: a rectangle at (8,8) with size (4,4) and color red and mask 100010011110100
  [0111]: a rectangle at (0,0) with size (16,16) and color black and mask 1011111111111011101111111111101100001111111100001011111111111011111111111011111111111111101111111111111100001111111111111011111111111011111111111111101111111111111100001111111111111011111111111011111111111111101111111111111100001111111111111011111111111111
diff: 
delta: (12,14)=2  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (14,14)=2  (15,14)=2 
   (584.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (0,4) with size (4,4) and color cyan and mask 100010011110100
diff: 
delta: (0,0)=2  (0,3)=4  (1,1)=2  (1,2)=4  (2,1)=4  (2,2)=2  (3,0)=4  (3,3)=2 
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (1,4) with size (1,4) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,3)=4  (0,6)=8  (1,1)=2  (1,2)=4  (2,1)=4  (2,2)=2  (2,6)=8  (3,0)=4  (3,3)=2  (3,6)=8 
! size mismatch, 10x10 instead of 16x16
>> Trial 3
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (0,6) with size (4,1) and color cyan and mask full
diff: 
delta: (0,0)=2  (0,3)=4  (1,1)=2  (1,2)=4  (1,4)=8  (1,5)=8  (1,7)=8  (2,1)=4  (2,2)=2  (3,0)=4  (3,3)=2 
! size mismatch, 10x10 instead of 16x16

TRAIN b190f7f5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (4,0) with size (4,4) and color cyan and mask 1111100111110110
diff: 
delta: (0,0)=3  (0,3)=1  (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,0)=3  (3,3)=3 
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (8,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (5,4) and color black and mask 10010110100110010110
diff: 
delta: (0,0)=3  (0,3)=1  (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,0)=3  (3,3)=3  (6,1)=0  (6,2)=0 
! size mismatch, 10x10 instead of 16x16
>> Trial 3
data: a background with size (8,4) and color black and layers
  [0]: a rectangle at (5,0) with size (3,4) and color cyan and mask full
diff: 
delta: (0,0)=3  (0,3)=1  (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,0)=3  (3,3)=3  (4,1)=8  (4,2)=8  (6,1)=0  (6,2)=0 
! size mismatch, 10x10 instead of 16x16

TEST b190f7f5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9792.0 bits (9792.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-125] Checking task b1948b0a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4641.9 = 4650.9
DL output with Mo: L = 9.0 + 4641.9 = 4650.9
DL input+output M: L = 17.9 + 9283.8 = 9301.8

# learning a model for train pairs
9301.8	
6759.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4216.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2786.1	OUT DEF: layer[0]={layer[0]}
2359.7	OUT DEF: size={size}
2125.4	OUT DEF: color=red
1891.1	IN  DEF: color=pink
1753.1	IN  DEF: layer[0].color=orange
1718.1	IN  DEF: size=(?,?)
1683.0	IN  DEF: layer[0].pos=(?,?)
1580.4	IN  DEF: layer[0].pos.j=0
1486.1	IN  DEF: layer[0].pos.i=0
1451.1	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color red and layers
  [0]: {layer[0]}
WHERE (Mi)
a background with size (?,?) and color pink and layers
  [0]: a rectangle at (0,0) with size (?,?) and color orange and mask ?

DL input  with Mi: L = 52.3 + 1381.9 = 1434.2
DL output with Mo: L = 17.0 + 0.0 = 17.0
DL input+output M: L = 69.2 + 1381.9 = 1451.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,4) and color orange and mask 101111000100
diff: 
delta:
   (37.9 bits)
data: a background with size (3,4) and color red and layers
  [0]: a rectangle at (0,0) with size (3,4) and color orange and mask 101111000100
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,4) and color orange and mask 101111000100
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,4) and color pink and layers
  [0]: a rectangle at (0,0) with size (6,4) and color orange and mask 100001011101101101000111
diff: 
delta:
   (53.9 bits)
data: a background with size (6,4) and color red and layers
  [0]: a rectangle at (0,0) with size (6,4) and color orange and mask 100001011101101101000111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color pink and layers
  [0]: a rectangle at (0,0) with size (6,4) and color orange and mask 100001011101101101000111
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,6) and color orange and mask 101101111010000011
diff: 
delta:
   (46.3 bits)
data: a background with size (3,6) and color red and layers
  [0]: a rectangle at (0,0) with size (3,6) and color orange and mask 101101111010000011
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,6) and color orange and mask 101101111010000011
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,4) and color orange and mask 101011110100110
diff: 
delta:
correct output grid

TEST b1948b0a.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-124] Checking task b230c067.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10097.2 = 10106.2
DL output with Mo: L = 9.0 + 10097.2 = 10106.2
DL input+output M: L = 17.9 + 20194.4 = 20212.4

# learning a model for train pairs
20212.4	
15656.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12569.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9570.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8000.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6863.5	OUT DEF: layer[0].mask={layer[0].mask}
5816.4	OUT DEF: layer[01].mask={layer[01].mask}
5431.2	OUT DEF: size={size}
5115.8	OUT DEF: layer[0].size={layer[0].size}
4903.7	OUT DEF: layer[0].pos={layer[0].pos}
4749.0	OUT DEF: color=blue
4594.4	IN  DEF: color=cyan
4572.6	OUT DEF: layer[01].pos=(?,?)
4487.9	OUT DEF: layer[01].pos.j={layer[01].pos.j + layer[01].pos.j}
4403.9	OUT DEF: layer[01].pos.i={layer[01].pos.i - layer[01].pos.j}
4382.1	OUT DEF: layer[01].size=(?,?)
4239.1	OUT DEF: layer[01].size.j={layer[01].pos.j + layer[01].size.i}
4096.7	OUT DEF: layer[01].size.i={layer[01].size.j}
4074.9	IN  DEF: size=(?,?)
3901.2	IN  DEF: size.i=10
3727.6	IN  DEF: size.j=10
3705.8	IN  DEF: layer[0].pos=(?,?)
3684.0	IN  DEF: layer[0].size=(?,?)
3662.2	IN  DEF: layer[01].pos=(?,?)
3640.4	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color blue and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask {layer[0].mask}
  [01]: a rectangle at ({layer[01].pos.i - layer[01].pos.j},{layer[01].pos.j + layer[01].pos.j}) with size ({layer[01].size.j},{layer[01].pos.j + layer[01].size.i}) and color ? and mask {layer[01].mask}
WHERE (Mi)
a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 82.5 + 3286.7 = 3369.3
DL output with Mo: L = 85.4 + 185.8 = 271.1
DL input+output M: L = 167.9 + 3472.5 = 3640.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,7) with size (3,3) and color cyan and mask 111101111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1000011111101101111110000111111111111111111111111111111000011111101101111110000111111111111111111111
diff: 
delta:
   (170.4 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (1,7) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1000011111101101111110000111111111111111111111111111111000011111101101111110000111111111111111111111
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,7) with size (3,3) and color cyan and mask 111101111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1000011111101101111110000111111111111111111111111111111000011111101101111110000111111111111111111111
diff: 
delta:
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (2,1) with size (3,4) and color cyan and mask 111110011111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1000011111101101111110000111111111111111111111111111111111110001111111010111111100011111111111111111
diff: 
delta:
! 90 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (7,5) with size (3,4) and color cyan and mask 111110011111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111111111111111111111111111111000010001101101010110000100011111111111111111
diff: 
delta:
! 90 wrong pixels (generated / expected)

TRAIN b230c067.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111110001111111100111111110000111111111111111110001110011100111001110000100001111111111111111
  [01]: a rectangle at (4,3) with size (1,3) and color cyan and mask full
diff: 
delta:
   (158.3 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111110001111111100111111110000111111111111111110001110011100111001110000100001111111111111111
  [01]: a rectangle at (1,6) with size (3,4) and color red and mask full
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (4,3) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111110001111111100111111110000111111111111111111111110011100111001110000100001111111111111111
diff: 
delta:
! 85 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (8,5) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111100111111110000111111111111111110001110011100111001110000100001111111111111111
diff: 
delta:
! 85 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111110001111111100111111110000111111111111111110001110011100111001110000100001111111111111111
  [01]: a rectangle at (4,3) with size (1,3) and color cyan and mask full
diff: 
delta:
! 82 wrong pixels (generated / expected)

TRAIN b230c067.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,1) with size (4,3) and color cyan and mask 111001010011
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1110000111111110111111110111111111000111111111111100001111111101111111101111111110001111111111111111
diff: 
delta:
! 82 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,6) with size (4,4) and color cyan and mask 1111001001000111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1110000111111110111111110111111111000111111111111111111100011111111101111111101111111110011111111111
diff: 
delta:
! 91 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (6,3) with size (4,4) and color cyan and mask 1111001001000111
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111111111111111111111111100001100011101111101101111101110001110011111111111
diff: 
delta:
! 91 wrong pixels (generated / expected)

TEST b230c067.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 185.8 bits (185.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-123] Checking task b27ca6d3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5724.1 = 5733.1
DL output with Mo: L = 9.0 + 11243.7 = 11252.7
DL input+output M: L = 17.9 + 16967.8 = 16985.8

# learning a model for train pairs
16985.8	
13568.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12638.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12124.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11685.1	OUT DEF: size={size}
11593.5	OUT DEF: layer[01].color=green
11546.1	OUT DEF: layer[01].mask=full
11504.4	OUT SHAPE at layer[011]: a point at ? with color ?
11412.8	OUT DEF: layer[011].color=red
11370.4	OUT SHAPE at layer[00]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color green and mask full
  [011]: a point at ? with color red
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 5193.2 = 5219.8
DL output with Mo: L = 63.8 + 6086.9 = 6150.6
DL input+output M: L = 90.3 + 11280.1 = 11370.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,18) and color black and layers
  [0]: a rectangle at (2,7) with size (2,1) and color red and mask full
diff: 
delta: (2,2)=2  (4,13)=2  (8,17)=2  (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
   (209.0 bits)
data: a background with size (15,18) and color black and layers
  [00]: a point at (2,2) with color red
  [0]: a rectangle at (2,7) with size (2,1) and color red and mask full
  [01]: a rectangle at (1,6) with size (4,3) and color green and mask full
  [011]: a point at (4,13) with color red
diff: 
delta: (8,17)=2  (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
   (202.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  [0]: a rectangle at (2,7) with size (2,1) and color red and mask full
diff: 
delta: (2,2)=2  (4,13)=2  (8,17)=2  (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
! 24 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,16) and color red and layers
  [0]: a rectangle at (0,0) with size (15,16) and color black and mask 111110111111101110111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111011111101111111111011111111111111101011011111110111111111011111111111111111111111111011111111111101101110011111111
diff: 
delta:
   (310.4 bits)
data: a background with size (15,16) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a rectangle at (0,12) with size (7,4) and color green and mask 1100010001001100011101010101
  [01]: a rectangle at (0,7) with size (2,4) and color green and mask full
  [011]: a point at (3,8) with color red
diff: 
delta: (0,8)=2  (0,9)=2  (0,13)=2  (1,13)=2  (4,2)=2  (4,10)=2  (4,13)=2  (4,15)=2  (5,15)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (406.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color red and layers
  [0]: a rectangle at (0,0) with size (15,16) and color black and mask 111110111111101110111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111011111101111111111011111111111111101011011111110111111111011111111111111111111111111011111111111101101110011111111
diff: 
delta:
! 39 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  [0]: a rectangle at (4,8) with size (1,2) and color red and mask full
diff: 
delta: (0,15)=2  (1,4)=2  (3,13)=2  (3,15)=2  (5,12)=2  (7,2)=2  (7,3)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,6)=2  (13,7)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 80 wrong pixels (generated / expected)

TEST b27ca6d3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6086.9 bits (6086.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-122] Checking task b2862040.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 30376.6 = 30385.6
DL output with Mo: L = 9.0 + 30376.6 = 30385.6
DL input+output M: L = 17.9 + 60753.3 = 60771.2

# learning a model for train pairs
60771.2	
39049.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
26377.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19789.1	OUT DEF: layer[0]={layer[0]}
13991.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13178.3	OUT DEF: size={size}
12864.3	IN  DEF: color=blue
12679.9	IN  DEF: layer[0].color=brown
12586.0	OUT DEF: layer[01].mask=full
12537.8	OUT DEF: layer[01].pos=(?,?)
12489.5	OUT DEF: layer[01].size=(?,?)
12441.3	IN  DEF: size=(?,?)
12393.1	IN  DEF: layer[0].pos=(?,?)
12197.8	IN  DEF: layer[0].pos.j=0
12006.4	IN  DEF: layer[0].pos.i=0
11958.2	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full
WHERE (Mi)
a background with size (?,?) and color blue and layers
  [0]: a rectangle at (0,0) with size (?,?) and color brown and mask ?

DL input  with Mi: L = 52.3 + 7581.3 = 7633.6
DL output with Mo: L = 37.4 + 4287.2 = 4324.6
DL input+output M: L = 89.7 + 11868.5 = 11958.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (9,11) and color brown and mask 111111111111111111111111101111111111011100011000011010111101110101111011100011111111111111111111111
diff: 
delta:
   (137.1 bits)
data: a background with size (9,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (9,11) and color brown and mask 111111111111111111111111101111111111011100011000011010111101110101111011100011111111111111111111111
  [01]: a rectangle at (2,1) with size (4,3) and color cyan and mask full
diff: 
delta:
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (9,11) and color brown and mask 111111111111111111111111101111111111011100011000011010111101110101111011100011111111111111111111111
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,11) and color brown and layers
  [0]: a rectangle at (0,0) with size (2,11) and color brown and mask full
diff:   color
delta: (2,1)=1  (2,2)=1  (2,3)=1  (2,7)=1  (3,1)=1  (3,3)=1  (3,7)=1  (4,1)=1  (4,3)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,7)=1  (6,7)=1 
! 77 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,11) and color brown and layers
  [0]: a rectangle at (0,0) with size (9,11) and color brown and mask full
diff:   color
delta: (2,1)=1  (2,2)=1  (2,3)=1  (2,7)=1  (3,1)=1  (3,3)=1  (3,7)=1  (4,1)=1  (4,3)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,7)=1  (6,7)=1 
! 18 wrong pixels (generated / expected)

TRAIN b2862040.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (12,11) and color brown and mask 111111000101111111100011000111111110101111111000001111111110111111111111111111111111100011000001010110111011101100000111111111111
diff: 
delta:
   (171.8 bits)
data: a background with size (12,11) and color cyan and layers
  [0]: a rectangle at (0,0) with size (12,11) and color brown and mask 111111000101111111100011000111111110101111111000001111111110111111111111111111111111100011000001010110111011101100000111111111111
  [01]: a rectangle at (1,8) with size (3,3) and color blue and mask full
diff: 
delta: (11,0)=1  (11,1)=1 
   (72.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color blue and layers
  [0]: a rectangle at (0,0) with size (12,11) and color brown and mask 111111000101111111100011000111111110101111111000001111111110111111111111111111111111100011000001010110111011101100000111111111111
diff: 
delta:
! 39 wrong pixels (generated / expected)

TRAIN b2862040.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color blue and layers
  [0]: a rectangle at (0,0) with size (12,13) and color brown and mask 111100011110011100101111011110111111000111000111110111111111011111111111101111110001110000111110111011011111011100001110000111101111110111111111111111011111
diff: 
delta:
   (196.8 bits)
data: a background with size (12,13) and color blue and layers
  [0]: a rectangle at (0,0) with size (12,13) and color brown and mask 111100011110011100101111011110111111000111000111110111111111011111111111101111110001110000111110111011011111011100001110000111101111110111111111111111011111
  [01]: a rectangle at (2,1) with size (6,4) and color cyan and mask full
diff: 
delta:
   (36.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color blue and layers
  [0]: a rectangle at (0,0) with size (12,13) and color brown and mask 111100011110011100101111011110111111000111000111110111111111011111111111101111110001110000111110111011011111011100001110000111101111110111111111111111011111
diff: 
delta:
! 41 wrong pixels (generated / expected)

TRAIN b2862040.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,15) and color blue and layers
  [0]: a rectangle at (0,0) with size (14,15) and color brown and mask 100111111001111111111111011111111110111111110111000001110000111110101110110111111111110000111100011111111111001011111111111100011101111011111110001111010001110100011011011110111011000011110000001111111111111111
diff: 
delta:
   (252.5 bits)
data: a background with size (14,15) and color cyan and layers
  [0]: a rectangle at (0,0) with size (14,15) and color brown and mask 100111111001111111111111011111111110111111110111000001110000111110101110110111111111110000111100011111111111001011111111111100011101111011111110001111010001110100011011011110111011000011110000001111111111111111
  [01]: a rectangle at (1,10) with size (4,5) and color blue and mask full
diff: 
delta: (9,7)=1  (9,9)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (11,9)=1  (12,5)=1  (13,4)=1  (13,5)=1  (13,12)=1  (13,13)=1 
   (286.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color blue and layers
  [0]: a rectangle at (0,0) with size (14,15) and color brown and mask 100111111001111111111111011111111110111111110111000001110000111110101110110111111111110000111100011111111111001011111111111100011101111011111110001111010001110100011011011110111011000011110000001111111111111111
diff: 
delta:
! 60 wrong pixels (generated / expected)

TRAIN b2862040.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color blue and layers
  [0]: a rectangle at (0,0) with size (16,15) and color brown and mask 101110000000111101111011110111101111011110111100111000000111111111111111111111111111111100001111111110110011111111110110011011101110000000011101111111011011100001111111011101101111111011101101111111011100000111111011111111111111111111111100
diff: 
delta:
! 64 wrong pixels (generated / expected)

TEST b2862040.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4287.2 bits (4287.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-121] Checking task b527c5c6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 60145.8 = 60154.8
DL output with Mo: L = 9.0 + 100572.2 = 100581.1
DL input+output M: L = 17.9 + 160718.0 = 160735.9

# learning a model for train pairs
160735.9	
109226.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
66613.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
37712.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
25609.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 5395.1 = 5438.4
DL output with Mo: L = 43.4 + 20127.6 = 20171.0
DL input+output M: L = 86.7 + 25522.7 = 25609.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (6,2) and color green and mask full
  [01]: a rectangle at (4,6) with size (2,4) and color green and mask full
diff: 
delta: (4,3)=2  (5,8)=2 
   (119.3 bits)
data: a background with size (10,10) and color green and layers
  [0]: a rectangle at (5,8) with size (5,1) and color red and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 101111111010111111101011001110101100111010010000000001000001111100000111110011111111111111111111111
diff: 
delta: (4,0)=2  (4,1)=2  (4,2)=2  (4,3)=2 
   (267.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (6,2) and color green and mask full
  [01]: a rectangle at (4,6) with size (2,4) and color green and mask full
diff: 
delta: (4,3)=2  (5,8)=2 
! 45 wrong pixels (generated / expected)

TRAIN b527c5c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,1) with size (2,18) and color green and mask full
  [01]: a rectangle at (10,7) with size (10,3) and color green and mask full
diff: 
delta: (4,14)=2  (15,9)=2 
   (138.3 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (10,7) with size (10,13) and color green and mask 111000000000011111111111111111111111111111000000000001111111111111111111111111111000000000011100000000001110000000000111
  [01]: a rectangle at (0,1) with size (6,18) and color green and mask 111111111111111111111101111111111111000101000000000000000101000000000000000101000000000000000101000000000000
diff: 
delta: (0,14)=2  (1,14)=2  (2,14)=2  (3,14)=2  (4,14)=2  (15,9)=2  (15,10)=2  (15,11)=2  (15,12)=2  (15,13)=2  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (15,19)=2 
   (662.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,1) with size (2,18) and color green and mask full
  [01]: a rectangle at (10,7) with size (10,3) and color green and mask full
diff: 
delta: (4,14)=2  (15,9)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN b527c5c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (9,10) with size (11,5) and color green and mask full
  [01]: a rectangle at (3,0) with size (3,14) and color green and mask full
diff: 
delta: (3,5)=2  (14,10)=2 
   (140.5 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (9,0) with size (11,15) and color green and mask 111110000000000111111111111111111111111111111111111111111111111111111111111111100000000000111111111111111111111111111111111111111111111111111111111111111110000000000
  [01]: a rectangle at (0,0) with size (6,14) and color green and mask 111111111111111111111111111111111111011111000000110110000000001101100000000011011000
diff: 
delta: (0,5)=2  (1,5)=2  (2,5)=2  (3,5)=2  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,10)=2 
   (653.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (9,10) with size (11,5) and color green and mask full
  [01]: a rectangle at (3,0) with size (3,14) and color green and mask full
diff: 
delta: (3,5)=2  (14,10)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN b527c5c6.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (5,15) and color green and mask full
  [01]: a rectangle at (6,12) with size (11,4) and color green and mask full
diff: 
delta: (4,4)=2  (12,15)=2 
   (141.5 bits)
data: a background with size (20,20) and color green and layers
  [0]: a rectangle at (4,4) with size (16,1) and color red and mask full
  [01]: a rectangle at (0,9) with size (20,11) and color black and mask 1111111111111111111111111111111111111000011100000000111000000001110000000011100000000111000000001110000000011100000000111111100001111111000011111110000111111111111111111100000011111000000111110000001111100000011111000000
diff: 
delta: (12,15)=2  (12,16)=2  (12,17)=2  (12,18)=2  (12,19)=2 
   (428.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (0,0) with size (5,15) and color green and mask full
  [01]: a rectangle at (6,12) with size (11,4) and color green and mask full
diff: 
delta: (4,4)=2  (12,15)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN b527c5c6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (14,7) with size (6,13) and color green and mask full
  [01]: a rectangle at (0,4) with size (11,3) and color green and mask full
diff: 
delta: (5,4)=2  (14,13)=2 
! size mismatch, 10x10 instead of 20x20

TEST b527c5c6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 20127.6 bits (20127.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-120] Checking task b548a754.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10597.4 = 10606.4
DL output with Mo: L = 9.0 + 22013.6 = 22022.6
DL input+output M: L = 17.9 + 32611.0 = 32629.0

# learning a model for train pairs
32629.0	
21381.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13287.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7344.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5772.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5171.0	OUT DEF: size={size}
4840.9	OUT DEF: layer[0].pos={layer[0].pos}
4510.7	OUT DEF: layer[01].pos={layer[01].pos}
4371.3	OUT DEF: layer[0].color={layer[0].color}
4231.8	OUT DEF: layer[01].color={layer[01].color}
4113.5	IN  SHAPE at layer[011]: a point at ? with color ?
3975.5	IN  DEF: layer[011].color=cyan
3904.9	OUT DEF: layer[0].mask=full
3834.2	OUT DEF: layer[01].mask=full
3763.6	IN  DEF: layer[0].mask=full
3692.9	IN  DEF: layer[01].mask=full
3647.3	OUT DEF: color=black
3601.7	IN  DEF: color=black
3566.7	OUT DEF: layer[0].size=(?,?)
3531.7	OUT DEF: layer[01].size=(?,?)
3496.6	IN  DEF: size=(?,?)
3461.6	IN  DEF: layer[0].pos=(?,?)
3318.7	IN  DEF: layer[0].pos.i=2
3283.7	IN  DEF: layer[0].size=(?,?)
3248.7	IN  DEF: layer[01].pos=(?,?)
3105.7	IN  DEF: layer[01].pos.i=1
3070.7	IN  DEF: layer[01].size=(?,?)
3035.7	IN  DEF: layer[011].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask full
  [01]: a rectangle at {layer[01].pos} with size (?,?) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (2,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (1,?) with size (?,?) and color ? and mask full
  [011]: a point at (?,?) with color cyan

DL input  with Mi: L = 84.3 + 2067.0 = 2151.2
DL output with Mo: L = 50.0 + 834.5 = 884.4
DL input+output M: L = 134.3 + 2901.4 = 3035.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color blue and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
  [011]: a point at (8,3) with color cyan
diff: 
delta:
   (68.2 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,2) with size (6,2) and color blue and mask full
  [01]: a rectangle at (1,1) with size (8,4) and color red and mask full
diff: 
delta:
   (26.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color blue and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
  [011]: a point at (8,3) with color cyan
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color red and mask 1111100110011111
  [01]: a rectangle at (2,2) with size (2,2) and color blue and mask full
  [011]: a point at (8,3) with color cyan
diff:   layer[01].pos.i  layer[0].mask  layer[0].pos.i
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,1) with size (1,4) and color red and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
  [011]: a point at (8,3) with color cyan
diff:   layer[0].pos.i
delta: (2,2)=1  (2,3)=1  (3,2)=1  (3,3)=1 
! 29 wrong pixels (generated / expected)

TRAIN b548a754.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,2) with size (2,3) and color red and mask full
  [01]: a rectangle at (1,1) with size (4,5) and color green and mask full
  [011]: a point at (2,10) with color cyan
diff: 
delta:
   (70.0 bits)
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,2) with size (2,8) and color red and mask full
  [01]: a rectangle at (1,1) with size (4,10) and color green and mask full
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (2,2) with size (2,3) and color red and mask full
  [01]: a rectangle at (1,1) with size (4,5) and color green and mask full
  [011]: a point at (2,10) with color cyan
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color green and mask 11111100011000111111
  [01]: a rectangle at (2,2) with size (2,3) and color red and mask full
  [011]: a point at (2,10) with color cyan
diff:   layer[01].pos.i  layer[0].mask  layer[0].pos.i
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (1,1) with size (4,1) and color green and mask full
  [01]: a rectangle at (1,1) with size (4,5) and color green and mask full
  [011]: a point at (2,10) with color cyan
diff:   layer[0].pos.i
delta: (2,2)=2  (2,3)=2  (2,4)=2  (3,2)=2  (3,3)=2  (3,4)=2 
! 37 wrong pixels (generated / expected)

TRAIN b548a754.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (2,3) with size (3,1) and color pink and mask full
  [01]: a rectangle at (1,2) with size (5,3) and color blue and mask full
  [011]: a point at (5,10) with color cyan
diff: 
delta:
   (68.5 bits)
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (2,3) with size (3,7) and color pink and mask full
  [01]: a rectangle at (1,2) with size (5,9) and color blue and mask full
diff: 
delta:
   (29.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (2,3) with size (3,1) and color pink and mask full
  [01]: a rectangle at (1,2) with size (5,3) and color blue and mask full
  [011]: a point at (5,10) with color cyan
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (1,2) with size (5,3) and color blue and mask 111101101101111
  [01]: a rectangle at (2,3) with size (3,1) and color pink and mask full
  [011]: a point at (5,10) with color cyan
diff:   layer[01].pos.i  layer[0].mask  layer[0].pos.i
delta:
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,12) and color black and layers
  [0]: a rectangle at (1,2) with size (1,3) and color blue and mask full
  [01]: a rectangle at (1,2) with size (5,3) and color blue and mask full
  [011]: a point at (5,10) with color cyan
diff:   layer[0].pos.i
delta: (2,3)=6  (3,3)=6  (4,3)=6 
! 42 wrong pixels (generated / expected)

TRAIN b548a754.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (10,4) with size (2,3) and color yellow and mask full
  [01]: a rectangle at (9,3) with size (4,5) and color pink and mask full
  [011]: a point at (1,4) with color cyan
diff:   layer[01].pos.i  layer[0].pos.i
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (9,3) with size (4,5) and color pink and mask 11111100011000111111
  [01]: a rectangle at (10,4) with size (2,3) and color yellow and mask full
  [011]: a point at (1,4) with color cyan
diff:   layer[01].pos.i  layer[0].mask  layer[0].pos.i
delta:
! 55 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,0) with size (7,13) and color black and mask full
  [01]: a rectangle at (9,3) with size (4,5) and color pink and mask full
  [011]: a point at (1,4) with color cyan
diff:   layer[01].pos.i
delta: (10,4)=4  (10,5)=4  (10,6)=4  (11,4)=4  (11,5)=4  (11,6)=4 
! 58 wrong pixels (generated / expected)

TEST b548a754.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 834.5 bits (834.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-119] Checking task b60334d2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1697.5 = 1706.5
DL output with Mo: L = 9.0 + 10267.8 = 10276.8
DL input+output M: L = 17.9 + 11965.3 = 11983.3

# learning a model for train pairs
11983.3	
11381.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10778.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10171.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9797.4	OUT DEF: size={size}
9579.0	OUT DEF: layer[0].mask=10101010
9298.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
8828.4	OUT DEF: layer[011].mask=10101010
8521.6	OUT SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
8303.1	OUT DEF: layer[00].mask=10101010
8172.0	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
8036.6	OUT SHAPE at layer[011111]: a rectangle at ? with size ? and color ? and mask ?
7863.4	OUT SHAPE at layer[0110]: a rectangle at ? with size ? and color ? and mask ?
7771.9	OUT DEF: layer[00].color=blue
7680.3	OUT DEF: layer[0].color=blue
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a rectangle at ? with size ? and color blue and mask 10101010
  [0]: a rectangle at ? with size ? and color blue and mask 10101010
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [0110]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask 10101010
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
  [011111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers

DL input  with Mi: L = 9.0 + 1697.5 = 1706.5
DL output with Mo: L = 165.5 + 5808.3 = 5973.8
DL input+output M: L = 174.5 + 7505.8 = 7680.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
diff: 
delta: (2,3)=5# (5,6)=5# (7,2)=5#
   (75.9 bits)
data: a background with size (9,9) and color black and layers
  [00]: a rectangle at (1,2) with size (3,3) and color blue and mask 10101010
  [0]: a rectangle at (4,5) with size (3,3) and color blue and mask 10101010
  [01]: a rectangle at (1,2) with size (1,3) and color grey and mask full
  [0110]: a rectangle at (3,2) with size (1,3) and color grey and mask full
  [011]: a rectangle at (6,1) with size (3,3) and color blue and mask 10101010
  [0111]: a rectangle at (4,5) with size (1,3) and color grey and mask full
  [01111]: a rectangle at (8,1) with size (1,3) and color grey and mask full
  [011111]: a rectangle at (6,1) with size (1,7) and color grey and mask full
diff: 
delta: (6,4)=0 
   (227.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (2,3)=5# (5,6)=5# (7,2)=5#
! 28 wrong pixels (generated / expected)

TRAIN b60334d2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=5# (1,7)=5# (5,2)=5# (7,6)=5#
   (93.8 bits)
data: a background with size (9,9) and color black and layers
  [00]: a rectangle at (0,1) with size (3,3) and color blue and mask 10101010
  [0]: a rectangle at (0,6) with size (3,3) and color blue and mask 10101010
  [01]: a rectangle at (0,1) with size (1,8) and color grey and mask full
  [0110]: a rectangle at (2,1) with size (1,8) and color grey and mask full
  [011]: a rectangle at (4,1) with size (3,3) and color blue and mask 10101010
  [0111]: a rectangle at (6,5) with size (3,3) and color blue and mask 10101010
  [01111]: a rectangle at (6,1) with size (1,7) and color grey and mask full
  [011111]: a rectangle at (4,1) with size (1,3) and color grey and mask full
diff: 
delta: (0,4)=0  (0,5)=0  (2,4)=0  (2,5)=0  (6,4)=0  (8,5)=5# (8,7)=5#
   (353.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,2)=5# (1,7)=5# (5,2)=5# (7,6)=5#
! 34 wrong pixels (generated / expected)

TRAIN b60334d2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
diff: 
delta: (1,1)=5# (3,4)=5# (5,7)=5# (7,2)=5#
! 31 wrong pixels (generated / expected)

TEST b60334d2.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5808.3 bits (5808.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-118] Checking task b6afb2da.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15106.4 = 15115.4
DL output with Mo: L = 9.0 + 16451.9 = 16460.9
DL input+output M: L = 17.9 + 31558.4 = 31576.3

# learning a model for train pairs
31576.3	
19768.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16705.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13636.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11150.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9598.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8147.6	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7756.8	OUT DEF: layer[0].size={layer[0].size}
7371.6	OUT DEF: size={size}
7159.5	OUT DEF: layer[0].pos={layer[0].pos}
6856.2	OUT DEF: layer[011].size={layer[01].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size {layer[01].size} and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 1712.2 = 1755.5
DL output with Mo: L = 76.8 + 5023.9 = 5100.7
DL input+output M: L = 120.1 + 6736.0 = 6856.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (4,4) and color grey and mask full
  [01]: a rectangle at (5,6) with size (5,4) and color grey and mask full
diff: 
delta:
   (84.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (4,4) and color yellow and mask 110100110010110
  [01]: a rectangle at (6,7) with size (3,2) and color red and mask full
  [011]: a rectangle at (5,6) with size (5,4) and color yellow and mask full
  [0111]: a rectangle at (3,2) with size (2,2) and color red and mask full
diff: 
delta: (2,1)=1  (2,4)=1  (5,1)=1  (5,4)=1  (5,6)=1  (5,9)=1  (9,6)=1  (9,9)=1 
   (245.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,6) with size (5,4) and color grey and mask full
  [01]: a rectangle at (2,1) with size (4,4) and color grey and mask full
diff: 
delta:
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (4,4) and color grey and mask full
  [01]: a rectangle at (5,6) with size (5,4) and color grey and mask full
diff: 
delta:
! 47 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,1) and color black and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 111111000011111100001111110000111111000010000111111000011111100001111110000111111111111111111111
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN b6afb2da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (4,6) and color grey and mask full
  [01]: a rectangle at (0,0) with size (5,6) and color grey and mask full
diff: 
delta:
   (86.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (4,6) and color yellow and mask 11110100001100001011110
  [01]: a rectangle at (1,1) with size (3,4) and color red and mask full
  [011]: a rectangle at (0,0) with size (5,6) and color yellow and mask full
  [0111]: a rectangle at (7,5) with size (2,4) and color red and mask full
diff: 
delta: (0,0)=1  (0,5)=1  (4,0)=1  (4,5)=1  (6,4)=1  (6,9)=1  (9,4)=1  (9,9)=1 
   (257.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (5,6) and color grey and mask full
  [01]: a rectangle at (6,4) with size (4,6) and color grey and mask full
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (4,6) and color grey and mask full
  [01]: a rectangle at (0,0) with size (5,6) and color grey and mask full
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,6) with size (6,4) and color black and mask full
  [01]: a rectangle at (5,0) with size (5,4) and color black and mask full
diff: 
delta: (5,4)=0  (5,5)=0 
! 78 wrong pixels (generated / expected)

TRAIN b6afb2da.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (6,4) and color grey and mask full
  [01]: a rectangle at (7,4) with size (3,6) and color grey and mask full
diff: 
delta:
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (3,6) and color grey and mask full
  [01]: a rectangle at (0,1) with size (6,4) and color grey and mask full
diff: 
delta:
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (6,0) with size (1,10) and color black and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111000000111100000011111111111111111110000111111000011111100001111110000111111000011111100001
diff: 
delta:
! 100 wrong pixels (generated / expected)

TEST b6afb2da.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5023.9 bits (5023.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-117] Checking task b7249182.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1839.4 = 1848.4
DL output with Mo: L = 9.0 + 12910.4 = 12919.4
DL input+output M: L = 17.9 + 14749.9 = 14767.8

# learning a model for train pairs
14767.8	
10654.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6381.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5768.1	OUT DEF: size={size}
5674.6	IN  SHAPE at layer[0]: a point at ? with color ?
5534.6	OUT DEF: layer[0].color={layer[0].color}
5415.9	IN  SHAPE at layer[01]: a point at ? with color ?
5276.4	OUT DEF: layer[01].color={layer[01].color}
5230.8	OUT DEF: color=black
5185.2	IN  DEF: color=black
5150.2	OUT DEF: layer[0].pos=(?,?)
5115.2	OUT DEF: layer[0].size=(?,?)
4909.9	OUT DEF: layer[0].size.i=5
4874.8	OUT DEF: layer[01].pos=(?,?)
4839.8	OUT DEF: layer[01].size=(?,?)
4634.5	OUT DEF: layer[01].size.i=5
4599.5	IN  DEF: size=(?,?)
4564.5	IN  DEF: layer[0].pos=(?,?)
4529.5	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,?) with size (5,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at (?,?) with size (5,?) and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color ?
  [01]: a point at (?,?) with color ?

DL input  with Mi: L = 42.1 + 1442.3 = 1484.5
DL output with Mo: L = 66.3 + 2978.7 = 3045.0
DL input+output M: L = 108.4 + 4421.0 = 4529.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  [0]: a point at (1,4) with color red
  [01]: a point at (10,4) with color cyan
diff: 
delta:
   (47.7 bits)
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (1,2) with size (5,5) and color red and mask 1000111111001000010000100
  [01]: a rectangle at (6,2) with size (5,5) and color cyan and mask 10000100001001111110001
diff: 
delta:
   (88.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  [0]: a point at (1,4) with color red
  [01]: a point at (10,4) with color cyan
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  [0]: a point at (10,4) with color cyan
  [01]: a point at (1,4) with color red
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN b7249182.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,13) and color black and layers
  [0]: a point at (6,1) with color green
  [01]: a point at (6,12) with color blue
diff: 
delta:
   (47.3 bits)
data: a background with size (10,13) and color black and layers
  [0]: a rectangle at (4,1) with size (5,6) and color green and mask 110000010000011111010000110000
  [01]: a rectangle at (4,7) with size (5,6) and color blue and mask 11000010111110000010000011
diff: 
delta:
   (99.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,13) and color black and layers
  [0]: a point at (6,1) with color green
  [01]: a point at (6,12) with color blue
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,13) and color black and layers
  [0]: a point at (6,12) with color blue
  [01]: a point at (6,1) with color green
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN b7249182.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,18) and color black and layers
  [0]: a point at (5,3) with color grey
  [01]: a point at (5,16) with color cyan
diff: 
delta:
   (49.2 bits)
data: a background with size (10,18) and color black and layers
  [0]: a rectangle at (3,3) with size (5,7) and color grey and mask 11000000100000011111101000001100000
  [01]: a rectangle at (3,10) with size (5,7) and color cyan and mask 110000010111111000000100000011
diff: 
delta:
   (110.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,18) and color black and layers
  [0]: a point at (5,3) with color grey
  [01]: a point at (5,16) with color cyan
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,18) and color black and layers
  [0]: a point at (5,16) with color cyan
  [01]: a point at (5,3) with color grey
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN b7249182.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  [0]: a point at (1,3) with color orange
  [01]: a point at (16,3) with color pink
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  [0]: a point at (16,3) with color pink
  [01]: a point at (1,3) with color orange
diff: 
delta:
! 36 wrong pixels (generated / expected)

TEST b7249182.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2978.7 bits (2978.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-116] Checking task b775ac94.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11309.5 = 11318.5
DL output with Mo: L = 9.0 + 27515.0 = 27524.0
DL input+output M: L = 17.9 + 38824.5 = 38842.4

# learning a model for train pairs
38842.4	
35695.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
32588.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
29476.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
26353.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
23326.2	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 8144.6 = 8171.2
DL output with Mo: L = 76.0 + 15079.0 = 15155.0
DL input+output M: L = 102.6 + 23223.6 = 23326.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (12,3) with size (4,4) and color blue and mask 100100010111110
diff: 
delta: (9,16)=2  (9,17)=1  (10,15)=7# (10,16)=7# (10,17)=4  (11,6)=3  (11,7)=4  (11,15)=7# (12,7)=2  (12,14)=7# (12,16)=7# (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
   (438.8 bits)
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (8,3) with size (4,4) and color green and mask 1110101110000100
  [01]: a rectangle at (8,7) with size (4,4) and color yellow and mask 111110100010010
  [011]: a rectangle at (12,3) with size (4,4) and color blue and mask 100100010111110
  [0111]: a rectangle at (12,7) with size (4,4) and color red and mask 10000111010111
diff: 
delta: (7,14)=2  (7,16)=2  (7,17)=1  (7,19)=1  (8,15)=2  (8,18)=1  (9,15)=2  (9,16)=2  (9,17)=1  (9,18)=1  (10,15)=7# (10,16)=7# (10,17)=4  (10,18)=4  (11,15)=7# (11,18)=4  (12,14)=7# (12,16)=7# (12,17)=4  (12,19)=4  (19,12)=8  (20,11)=8  (20,12)=8  (21,13)=8  (22,13)=2  (22,14)=3  (23,11)=2  (23,12)=2  (23,15)=3  (23,16)=3  (24,12)=2  (24,15)=3 
   (903.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (12,3) with size (4,4) and color blue and mask 100100010111110
diff: 
delta: (9,16)=2  (9,17)=1  (10,15)=7# (10,16)=7# (10,17)=4  (11,6)=3  (11,7)=4  (11,15)=7# (12,7)=2  (12,14)=7# (12,16)=7# (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
! size mismatch, 10x10 instead of 30x30

TRAIN b775ac94.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,3) with size (3,5) and color red and mask 110001111101010
diff: 
delta: (8,8)=8  (9,7)=4  (9,8)=3 
   (135.8 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,3) with size (3,5) and color red and mask 110001111101010
  [01]: a rectangle at (6,8) with size (3,5) and color cyan and mask 111111101010
  [011]: a rectangle at (9,3) with size (3,5) and color yellow and mask 10101111111000
  [0111]: a rectangle at (9,8) with size (3,5) and color green and mask 10101111100011
diff: 
delta:
   (218.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,3) with size (3,5) and color red and mask 110001111101010
diff: 
delta: (8,8)=8  (9,7)=4  (9,8)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN b775ac94.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (8,1) with size (3,4) and color red and mask 10011111000
diff: 
delta: (1,7)=8  (1,8)=8  (2,7)=8  (2,8)=8  (3,9)=8  (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
   (239.9 bits)
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (5,5) with size (3,4) and color blue and mask 111110010
  [01]: a rectangle at (8,1) with size (3,4) and color red and mask 10011111000
  [011]: a rectangle at (8,5) with size (3,4) and color yellow and mask 1011110001
  [0111]: a rectangle at (1,7) with size (3,3) and color cyan and mask 100011011
diff: 
delta: (1,11)=4  (1,12)=4  (2,11)=4  (2,12)=4  (3,10)=4  (4,10)=6  (5,11)=6  (5,12)=6  (6,11)=6  (6,12)=6 
   (385.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a rectangle at (8,1) with size (3,4) and color red and mask 10011111000
diff: 
delta: (1,7)=8  (1,8)=8  (2,7)=8  (2,8)=8  (3,9)=8  (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
! size mismatch, 10x10 instead of 14x14

TRAIN b775ac94.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (3,4) with size (4,4) and color cyan and mask 1100101001110010
diff: 
delta: (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=8  (8,16)=1  (16,13)=1  (17,13)=2  (17,14)=4  (18,11)=2  (18,12)=2  (18,13)=2  (19,11)=2 
! size mismatch, 10x10 instead of 24x24

TEST b775ac94.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 15079.0 bits (15079.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-115] Checking task b782dc8a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 42108.8 = 42117.8
DL output with Mo: L = 9.0 + 42108.8 = 42117.8
DL input+output M: L = 17.9 + 84217.7 = 84235.6

# learning a model for train pairs
84235.6	
63020.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
51629.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
47724.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
36408.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
32878.9	OUT DEF: layer[0]={layer[0]}
29932.2	OUT DEF: layer[01]={layer[01]}
28344.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
27281.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
26233.4	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 9468.5 = 9511.9
DL output with Mo: L = 66.4 + 16655.1 = 16721.5
DL input+output M: L = 109.8 + 26123.6 = 26233.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,24) and color black and layers
  [0]: a rectangle at (0,9) with size (11,14) and color cyan and mask 1110111011011110101010000100101110111111011000000000000111111011111101000010100001011111101101110110000001010001101111010111011010010100010011101101110111
  [01]: a rectangle at (1,0) with size (10,10) and color cyan and mask 1011101110001010101011101110111000000001101111110110100001011011011101100101000111110101110000011100
diff: 
delta: (0,0)=8  (0,6)=8  (0,7)=8  (0,8)=8  (6,17)=3  (7,16)=3  (7,17)=2  (7,18)=3  (8,17)=3 
   (532.6 bits)
data: a background with size (11,24) and color black and layers
  [0]: a rectangle at (0,9) with size (11,14) and color cyan and mask 1110111011011110101010000100101110111111011000000000000111111011111101000010100001011111101101110110000001010001101111010111011010010100010011101101110111
  [01]: a rectangle at (1,0) with size (10,10) and color cyan and mask 1011101110001010101011101110111000000001101111110110100001011011011101100101000111110101110000011100
  [011]: a rectangle at (3,16) with size (6,3) and color green and mask full
  [0111]: a rectangle at (7,11) with size (1,11) and color red and mask full
  [01111]: a rectangle at (1,10) with size (9,1) and color green and mask full
diff: 
delta: (0,0)=8  (0,1)=3  (0,2)=2  (0,3)=3  (0,4)=2  (0,5)=3  (0,6)=8  (0,7)=8  (0,8)=8  (0,16)=2  (1,0)=3  (1,1)=2  (1,5)=2  (1,6)=3  (1,7)=2  (1,8)=3  (1,9)=2  (1,16)=3  (1,21)=2  (2,5)=3  (2,10)=2  (2,16)=2  (2,21)=3  (3,5)=2  (3,11)=2  (3,12)=3  (3,17)=2  (3,19)=2  (3,20)=3  (3,21)=2  (4,5)=3  (4,10)=2  (5,3)=2  (5,4)=3  (5,5)=2  (5,6)=3  (5,17)=2  (6,10)=2  (7,12)=3  (7,14)=3  (7,17)=2  (7,20)=3  (8,10)=2  (8,21)=3  (9,8)=3  (9,9)=2  (9,17)=2  (9,21)=2  (10,8)=2 
   (1061.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,24) and color black and layers
  [0]: a rectangle at (0,9) with size (11,14) and color cyan and mask 1110111011011110101010000100101110111111011000000000000111111011111101000010100001011111101101110110000001010001101111010111011010010100010011101101110111
  [01]: a rectangle at (1,0) with size (10,10) and color cyan and mask 1011101110001010101011101110111000000001101111110110100001011011011101100101000111110101110000011100
diff: 
delta: (0,0)=8  (0,6)=8  (0,7)=8  (0,8)=8  (6,17)=3  (7,16)=3  (7,17)=2  (7,18)=3  (8,17)=3 
! size mismatch, 10x10 instead of 11x24
>> Trial 2
data: a background with size (11,24) and color black and layers
  [0]: a rectangle at (0,9) with size (11,14) and color cyan and mask 1110111011011110101010000100101110111111011000000000000111111011111101000010100001011111101101110110000001010001101111010111011010010100010011101101110111
  [01]: a rectangle at (0,6) with size (7,11) and color cyan and mask 11111101011100001010101101110101101010001001010111011110100010000001110111111
diff: 
delta: (0,0)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,4)=8  (3,0)=8  (3,4)=8  (4,0)=8  (4,2)=8  (4,3)=8  (4,4)=8  (5,0)=8  (5,2)=8  (6,0)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,17)=3  (7,0)=8  (7,16)=3  (7,17)=2  (7,18)=3  (8,0)=8  (8,1)=8  (8,3)=8  (8,4)=8  (8,5)=8  (8,7)=8  (8,8)=8  (8,17)=3  (9,1)=8  (9,3)=8  (9,5)=8  (9,7)=8  (10,1)=8  (10,2)=8  (10,3)=8  (10,5)=8  (10,6)=8  (10,7)=8 
! size mismatch, 10x10 instead of 11x24

TRAIN b782dc8a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,14) and color black and layers
  [0]: a rectangle at (0,0) with size (12,10) and color cyan and mask 10111011111010100000001011111110100010001011111110100001001011111110100000001010111110101010001010101110110010001000
  [01]: a rectangle at (0,5) with size (13,9) and color cyan and mask 111111101000000001011111111010000000011011111001010001101011101101000101101110100000010101111010101101110101100000100
diff: 
delta: (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
   (414.2 bits)
data: a background with size (13,14) and color black and layers
  [0]: a rectangle at (0,0) with size (12,10) and color cyan and mask 10111011111010100000001011111110100010001011111110100001001011111110100000001010111110101010001010101110110010001000
  [01]: a rectangle at (0,5) with size (13,9) and color cyan and mask 111111101000000001011111111010000000011011111001010001101011101101000101101110100000010101111010101101110101100000100
  [011]: a rectangle at (6,3) with size (7,2) and color yellow and mask full
  [0111]: a rectangle at (9,5) with size (1,7) and color blue and mask full
  [01111]: a rectangle at (0,8) with size (2,5) and color yellow and mask full
diff: 
delta: (0,8)=1  (0,10)=1  (0,12)=1  (2,8)=1  (3,8)=4  (4,8)=1  (5,8)=4  (5,9)=1  (5,10)=4  (6,1)=4  (6,2)=1  (6,4)=1  (6,10)=1  (7,10)=4  (8,4)=1  (8,10)=1  (9,6)=4  (9,8)=4  (9,10)=4  (10,0)=1  (10,4)=1  (11,0)=4  (12,0)=1  (12,1)=4  (12,2)=1  (12,4)=1 
   (604.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  [0]: a rectangle at (0,0) with size (12,10) and color cyan and mask 10111011111010100000001011111110100010001011111110100001001011111110100000001010111110101010001010101110110010001000
  [01]: a rectangle at (0,5) with size (13,9) and color cyan and mask 111111101000000001011111111010000000011011111001010001101011101101000101101110100000010101111010101101110101100000100
diff: 
delta: (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
! size mismatch, 10x10 instead of 13x14
>> Trial 2
data: a background with size (13,14) and color black and layers
  [0]: a rectangle at (0,5) with size (13,9) and color cyan and mask 111111101000000001011111111010000000011011111001010001101011101101000101101110100000010101111010101101110101100000100
  [01]: a rectangle at (0,0) with size (4,6) and color cyan and mask 111110100010111011001000
diff: 
delta: (5,0)=8  (5,1)=8  (5,2)=8  (5,3)=8  (5,4)=8  (6,0)=8  (7,0)=8  (7,1)=8  (7,2)=8  (7,3)=8  (8,3)=8  (8,4)=1  (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=4  (9,5)=1  (10,1)=8  (10,3)=8  (10,4)=1  (11,1)=8  (11,2)=8  (11,3)=8 
! size mismatch, 10x10 instead of 13x14

TRAIN b782dc8a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (1,6) with size (14,9) and color cyan and mask 101111111101100000001101111111101000000101110111000010101111010101101010100101010111001010001111011101100000100111111101
  [01]: a rectangle at (0,0) with size (10,9) and color cyan and mask 111011101101000100101110111100010000111011111001000000101111110100000010101111010001001011
diff: 
delta: (1,7)=4  (2,6)=4  (2,7)=3  (3,7)=4  (10,0)=8  (10,4)=8  (11,0)=8  (11,1)=8  (11,2)=8  (11,4)=8  (12,2)=8  (12,4)=8  (13,0)=8  (13,2)=8  (13,3)=8  (13,4)=8  (14,0)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (1,6) with size (14,9) and color cyan and mask 101111111101100000001101111111101000000101110111000010101111010101101010100101010111001010001111011101100000100111111101
  [01]: a rectangle at (7,0) with size (7,5) and color cyan and mask 11101101001011110001111010010010111
diff: 
delta: (0,0)=8  (0,1)=8  (0,3)=8  (0,6)=8  (1,1)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,7)=4  (2,1)=8  (2,6)=4  (2,7)=3  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,7)=4  (5,0)=8  (5,1)=8  (5,2)=8  (5,3)=8  (5,4)=8  (6,4)=8  (7,5)=8  (14,0)=8 
! size mismatch, 10x10 instead of 15x15

TEST b782dc8a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 16655.1 bits (16655.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-114] Checking task b8825c91.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 148714.7 = 148723.6
DL output with Mo: L = 9.0 + 144925.4 = 144934.3
DL input+output M: L = 17.9 + 293640.0 = 293658.0

# learning a model for train pairs
293658.0	
269601.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
248443.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
233969.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
219574.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 113127.7 = 113171.1
DL output with Mo: L = 43.4 + 106360.4 = 106403.8
DL input+output M: L = 86.7 + 219488.2 = 219574.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color brown and layers
  [0]: a rectangle at (0,0) with size (16,14) and color orange and mask 1111000000000010010000000000000011000000000000010000100000000011001000000000010000000000000011000000000000010000000000000100000000000011000000000001001100000000110000100000010000001100001100000000100100000000001111000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 1100000111100010000101101101100011011000000100011110000011000
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=7# (6,15)=7# (7,2)=3  (7,3)=3  (7,6)=6  (7,9)=6  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,15)=7# (8,2)=3  (8,3)=3  (8,6)=6  (8,9)=6  (8,12)=3  (8,13)=3  (8,15)=7# (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=4  (10,11)=4  (10,12)=4  (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=4  (11,11)=4  (11,12)=4  (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
   (3192.7 bits)
data: a background with size (16,16) and color brown and layers
  [0]: a rectangle at (0,0) with size (16,16) and color orange and mask 1111000000000000100100000000001100001100000000100000010000001100000000110000100000000001001100000000000011100000000000000110000000000000011100000000000011001000000000010000110000000011000000100000010000000011000011000000000010010000000000001111000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 1100000111100010000101101101111011011010000100011110000011000
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=3  (5,11)=8  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,12)=3  (6,13)=3  (7,2)=3  (7,3)=3  (7,6)=6  (7,9)=6  (7,12)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,6)=6  (8,9)=6  (8,12)=3  (8,13)=3  (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=3  (10,11)=8  (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=8  (11,11)=3  (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,12)=3  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
   (2865.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  [0]: a rectangle at (0,0) with size (16,14) and color orange and mask 1111000000000010010000000000000011000000000000010000100000000011001000000000010000000000000011000000000000010000000000000100000000000011000000000001001100000000110000100000010000001100001100000000100100000000001111000000
  [01]: a rectangle at (4,4) with size (8,8) and color blue and mask 1100000111100010000101101101100011011000000100011110000011000
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=7# (6,15)=7# (7,2)=3  (7,3)=3  (7,6)=6  (7,9)=6  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,15)=7# (8,2)=3  (8,3)=3  (8,6)=6  (8,9)=6  (8,12)=3  (8,13)=3  (8,15)=7# (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=4  (10,11)=4  (10,12)=4  (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=4  (11,11)=4  (11,12)=4  (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  [0]: a rectangle at (0,0) with size (16,16) and color pink and mask 10001111000100010001100110001010001100001100010000100000010000001100000000110001100000000001101100000000000011100000000000000110000000000000011100000000000011011000000000011000110000000010000000100000010000100011000011000101000110011000100010001111000100
  [01]: a rectangle at (4,4) with size (8,8) and color grey and mask 11110000111100010110110110011111100111110110110011110000111100
diff: 
delta: (0,0)=9# (0,1)=9# (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,14)=9# (0,15)=9# (1,0)=9# (1,3)=3  (1,4)=9# (1,11)=9# (1,12)=3  (1,15)=9# (2,1)=4  (2,2)=4  (2,3)=2  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,12)=2  (2,13)=5# (3,1)=4  (3,2)=4  (3,3)=8  (3,6)=8  (3,7)=2  (3,8)=2  (3,9)=8  (3,12)=8  (3,13)=2  (3,14)=3  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,11)=4  (8,12)=4  (8,13)=4  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,11)=7# (11,14)=9# (11,15)=8  (12,1)=3  (12,2)=2  (12,3)=8  (12,6)=8  (12,7)=2  (12,8)=2  (12,9)=8  (12,12)=8  (12,13)=2  (12,14)=3  (13,2)=5# (13,3)=2  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,12)=2  (13,13)=5# (14,0)=9# (14,3)=3  (14,4)=9# (14,11)=9# (14,12)=3  (14,15)=9# (15,0)=9# (15,1)=9# (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,14)=9# (15,15)=9#
   (2485.9 bits)
data: a background with size (16,16) and color blue and layers
  [0]: a rectangle at (0,0) with size (16,16) and color pink and mask 10001111000100010001100110001010001100001100010000100000010000001100000000110001100000000001101100000000000011100000000000000110000000000000011100000000000011011000000000011000110000000011000000100000010000100011000011000101000110011000100010001111000100
  [01]: a rectangle at (4,4) with size (8,8) and color grey and mask 11110000111100110110111110011111100111110110110011110000111100
diff: 
delta: (0,0)=9# (0,1)=9# (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,14)=9# (0,15)=9# (1,0)=9# (1,3)=3  (1,4)=9# (1,11)=9# (1,12)=3  (1,15)=9# (2,2)=5# (2,3)=2  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,12)=2  (2,13)=5# (3,1)=3  (3,2)=2  (3,3)=8  (3,6)=8  (3,7)=2  (3,8)=2  (3,9)=8  (3,12)=8  (3,13)=2  (3,14)=3  (4,0)=8  (4,1)=9# (4,4)=7# (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,12)=2  (8,13)=8  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,12)=8  (9,13)=8  (10,0)=9# (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,11)=7# (11,14)=9# (11,15)=8  (12,1)=3  (12,2)=2  (12,3)=8  (12,6)=8  (12,7)=2  (12,8)=2  (12,9)=8  (12,12)=8  (12,13)=2  (12,14)=3  (13,2)=5# (13,3)=2  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,12)=2  (13,13)=5# (14,0)=9# (14,3)=3  (14,4)=9# (14,11)=9# (14,12)=3  (14,15)=9# (15,0)=9# (15,1)=9# (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,14)=9# (15,15)=9#
   (2410.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  [0]: a rectangle at (0,0) with size (16,16) and color pink and mask 10001111000100010001100110001010001100001100010000100000010000001100000000110001100000000001101100000000000011100000000000000110000000000000011100000000000011011000000000011000110000000010000000100000010000100011000011000101000110011000100010001111000100
  [01]: a rectangle at (4,4) with size (8,8) and color grey and mask 11110000111100010110110110011111100111110110110011110000111100
diff: 
delta: (0,0)=9# (0,1)=9# (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,14)=9# (0,15)=9# (1,0)=9# (1,3)=3  (1,4)=9# (1,11)=9# (1,12)=3  (1,15)=9# (2,1)=4  (2,2)=4  (2,3)=2  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,12)=2  (2,13)=5# (3,1)=4  (3,2)=4  (3,3)=8  (3,6)=8  (3,7)=2  (3,8)=2  (3,9)=8  (3,12)=8  (3,13)=2  (3,14)=3  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,11)=4  (8,12)=4  (8,13)=4  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,11)=7# (11,14)=9# (11,15)=8  (12,1)=3  (12,2)=2  (12,3)=8  (12,6)=8  (12,7)=2  (12,8)=2  (12,9)=8  (12,12)=8  (12,13)=2  (12,14)=3  (13,2)=5# (13,3)=2  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,12)=2  (13,13)=5# (14,0)=9# (14,3)=3  (14,4)=9# (14,11)=9# (14,12)=3  (14,15)=9# (15,0)=9# (15,1)=9# (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,14)=9# (15,15)=9#
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color brown and layers
  [0]: a rectangle at (0,0) with size (16,16) and color cyan and mask 10110100000000011100100000000010100000000000011100000000000010100000000001011100000000001110100000000000010100000000000000110000000000000010100000000000010111000000000011101010000000010100011100000011100000101000010100000001110011100000000010110100000
  [01]: a rectangle at (11,2) with size (4,4) and color yellow and mask full
diff: 
delta: (0,1)=3  (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,14)=3  (1,0)=3  (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,15)=3  (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,7)=7# (4,8)=7# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=7# (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,5)=7# (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=7# (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,4)=7# (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,11)=7# (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,4)=7# (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,11)=7# (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,5)=7# (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=7# (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,6)=7# (10,7)=6  (10,8)=6  (10,9)=7# (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,7)=7# (11,8)=7# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,1)=3  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (14,0)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,15)=3  (15,1)=3  (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,14)=3 
   (3043.4 bits)
data: a background with size (16,16) and color brown and layers
  [0]: a rectangle at (0,0) with size (16,16) and color cyan and mask 10110100000000011100111000000010100001010000011100000011100010100000000101011100000000001110100000000000010100000000000000110000000000000010100000000000010111000000000011101010000000010100011100000011100000101000010100000001110011100000000010110100000
  [01]: a rectangle at (4,4) with size (8,8) and color orange and mask 1100000100100010000101000000110000001010000100010010000011000
diff: 
delta: (0,1)=3  (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,14)=3  (1,0)=3  (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,15)=3  (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,12)=2  (6,13)=2  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,12)=1  (7,13)=2  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,12)=1  (8,13)=2  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,12)=2  (9,13)=2  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,2)=7# (11,4)=2  (11,5)=5# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,1)=3  (12,5)=5# (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (13,2)=2  (13,4)=7# (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (14,0)=3  (14,3)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,15)=3  (15,1)=3  (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,14)=3 
   (2940.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  [0]: a rectangle at (0,0) with size (16,16) and color cyan and mask 10110100000000011100100000000010100000000000011100000000000010100000000001011100000000001110100000000000010100000000000000110000000000000010100000000000010111000000000011101010000000010100011100000011100000101000010100000001110011100000000010110100000
  [01]: a rectangle at (11,2) with size (4,4) and color yellow and mask full
diff: 
delta: (0,1)=3  (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,14)=3  (1,0)=3  (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,15)=3  (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,7)=7# (4,8)=7# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=7# (5,7)=6  (5,8)=6  (5,9)=7# (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,5)=7# (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=7# (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,4)=7# (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,11)=7# (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,4)=7# (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,11)=7# (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,5)=7# (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=7# (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,6)=7# (10,7)=6  (10,8)=6  (10,9)=7# (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,7)=7# (11,8)=7# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,1)=3  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (14,0)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,15)=3  (15,1)=3  (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,14)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 110000000010000111100001000000100001000000000110000110000000110111101100000110010010001000100110000100010110010000000001111001000000100110100110000110010001100100100110000011011110110000000000000110000000000000010000001000011110000100000000110000000
  [01]: a rectangle at (5,5) with size (6,6) and color green and mask full
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,3)=2  (1,4)=9# (1,5)=5# (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=2  (2,0)=7# (2,2)=3  (2,3)=3  (2,4)=9# (2,10)=4  (2,11)=4  (2,12)=4  (2,13)=4  (2,15)=7# (3,1)=2  (3,2)=3  (3,3)=8  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=2  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,15)=9# (7,7)=2  (7,8)=2  (8,3)=4  (8,4)=4  (8,7)=2  (8,8)=2  (9,0)=9# (9,3)=4  (9,4)=4  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (13,0)=7# (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,15)=7# (14,0)=2  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,13)=7# (15,14)=2  (15,15)=2 
   (2590.8 bits)
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 110000000010000111100001000000100001000000000110000110000000110111101100000110010010011000100110000110010110010000001001111001000000100110100110000110010001100100100110000011011110110000000110000110000000001000010000001000011110000100000000110000000
  [01]: a rectangle at (5,5) with size (6,6) and color green and mask full
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,3)=2  (1,4)=9# (1,5)=5# (1,10)=5# (1,11)=9# (1,12)=2  (1,15)=2  (2,0)=7# (2,2)=3  (2,3)=3  (2,4)=9# (2,11)=9# (2,12)=3  (2,13)=3  (2,15)=7# (3,1)=2  (3,2)=3  (3,3)=8  (3,12)=8  (3,13)=3  (3,14)=2  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,15)=9# (7,7)=2  (7,8)=2  (8,7)=2  (8,8)=2  (9,0)=9# (9,15)=9# (10,0)=9# (10,1)=5# (10,4)=7# (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (13,0)=7# (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,15)=7# (14,0)=2  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,13)=7# (15,14)=2  (15,15)=2 
   (2420.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 110000000010000111100001000000100001000000000110000110000000110111101100000110010010001000100110000100010110010000000001111001000000100110100110000110010001100100100110000011011110110000000000000110000000000000010000001000011110000100000000110000000
  [01]: a rectangle at (5,5) with size (6,6) and color green and mask full
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,3)=2  (1,4)=9# (1,5)=5# (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=2  (2,0)=7# (2,2)=3  (2,3)=3  (2,4)=9# (2,10)=4  (2,11)=4  (2,12)=4  (2,13)=4  (2,15)=7# (3,1)=2  (3,2)=3  (3,3)=8  (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=2  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,15)=9# (7,7)=2  (7,8)=2  (8,3)=4  (8,4)=4  (8,7)=2  (8,8)=2  (9,0)=9# (9,3)=4  (9,4)=4  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (13,0)=7# (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,15)=7# (14,0)=2  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,13)=7# (15,14)=2  (15,15)=2 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color cyan and layers
  [0]: a rectangle at (0,0) with size (16,16) and color pink and mask 110000000000000111100000000100110011001000000110000110000000100111100100000110010010011000110110000110110110010000001001111000000000100110100000000110110000000100100110000000010000010000000110000110000001001100010010000000011110000000000000110000000
  [01]: a rectangle at (5,5) with size (6,6) and color grey and mask full
diff: 
delta: (0,0)=7# (0,1)=7# (0,3)=1  (0,4)=9# (0,6)=2  (0,9)=2  (0,11)=9# (0,12)=1  (0,14)=7# (0,15)=7# (1,0)=7# (1,1)=1  (1,2)=1  (1,13)=1  (1,14)=1  (1,15)=7# (2,1)=1  (2,3)=9# (2,4)=2  (2,6)=4  (2,7)=4  (2,8)=4  (2,11)=2  (2,12)=9# (2,14)=1  (3,0)=1  (3,2)=9# (3,3)=1  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=1  (3,12)=1  (3,13)=9# (3,15)=1  (4,0)=9# (4,2)=2  (4,5)=7# (4,6)=4  (4,7)=4  (4,8)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,15)=9# (5,4)=7# (5,5)=7# (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (6,0)=2  (6,3)=1  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,15)=2  (7,2)=1  (7,3)=1  (7,7)=7# (7,8)=7# (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (8,2)=1  (8,3)=1  (8,7)=7# (8,8)=7# (8,12)=1  (8,13)=1  (9,0)=2  (9,3)=1  (9,12)=1  (9,15)=2  (10,4)=7# (10,5)=7# (10,10)=7# (10,11)=7# (11,0)=9# (11,2)=2  (11,5)=7# (11,10)=7# (11,13)=2  (11,15)=9# (12,0)=1  (12,2)=9# (12,3)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,12)=1  (12,13)=9# (12,15)=1  (13,1)=1  (13,3)=9# (13,4)=2  (13,7)=1  (13,8)=1  (13,11)=2  (13,12)=9# (13,14)=1  (14,0)=7# (14,1)=1  (14,2)=1  (14,13)=1  (14,14)=1  (14,15)=7# (15,0)=7# (15,1)=7# (15,3)=1  (15,4)=9# (15,6)=2  (15,9)=2  (15,11)=9# (15,12)=1  (15,14)=7# (15,15)=7#
! size mismatch, 10x10 instead of 16x16

TEST b8825c91.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 106360.4 bits (106360.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-113] Checking task b8cdaf2b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5292.8 = 5301.8
DL output with Mo: L = 9.0 + 7273.8 = 7282.8
DL input+output M: L = 17.9 + 12566.6 = 12584.5

# learning a model for train pairs
12584.5	
10865.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9192.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7661.4	OUT DEF: layer[0]={layer[0]}
6600.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5999.5	OUT DEF: size={size}
5557.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5239.4	OUT DEF: color={layer[01].color}
5054.2	OUT DEF: layer[01].color={color}
4960.3	IN  DEF: layer[01].mask=full
4900.1	IN  DEF: color=black
4851.9	OUT DEF: layer[01].pos=(?,?)
4709.9	OUT DEF: layer[01].pos.j={layer[0].pos.j}
4569.0	OUT DEF: layer[01].pos.i={layer[0].pos.j}
4520.8	OUT DEF: layer[01].size=(?,?)
4248.6	OUT DEF: layer[01].size.j={layer[0].size.j}
4006.2	OUT DEF: layer[01].size.i={layer[01].pos.i}
3958.0	IN  DEF: size=(?,?)
3909.7	IN  DEF: layer[0].pos=(?,?)
3769.4	IN  DEF: layer[0].pos.j=0
3721.2	IN  DEF: layer[0].size=(?,?)
3549.3	IN  DEF: layer[0].size.i=2
3501.1	IN  DEF: layer[01].pos=(?,?)
3452.8	IN  DEF: layer[01].size=(?,?)
3359.0	IN  DEF: layer[01].size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[01].color} and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].pos.j},{layer[0].pos.j}) with size ({layer[01].pos.i},{layer[0].size.j}) and color {color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,0) with size (2,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (1,?) and color ? and mask full

DL input  with Mi: L = 66.6 + 2271.2 = 2337.8
DL output with Mo: L = 48.3 + 972.9 = 1021.2
DL input+output M: L = 114.9 + 3244.1 = 3359.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color red and mask 101010
  [01]: a rectangle at (2,1) with size (1,1) and color yellow and mask full
diff: 
delta:
   (45.1 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (1,0) with size (2,3) and color red and mask 101010
  [01]: a rectangle at (0,0) with size (2,3) and color black and mask 111010
diff: 
delta:
   (8.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color red and mask 101010
  [01]: a rectangle at (2,1) with size (1,1) and color yellow and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (2,3) and color black and mask 101111
  [01]: a rectangle at (2,1) with size (1,1) and color yellow and mask full
diff:   color
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color red and mask full
diff:   layer[0].size.i
delta: (2,1)=4 
! 5 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color cyan and mask 1101100100
  [01]: a rectangle at (4,2) with size (1,1) and color green and mask full
diff: 
delta:
   (55.8 bits)
data: a background with size (5,5) and color green and layers
  [0]: a rectangle at (3,0) with size (2,5) and color cyan and mask 1101100100
  [01]: a rectangle at (0,0) with size (4,5) and color black and mask 11111101010111011111
diff: 
delta:
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color cyan and mask 1101100100
  [01]: a rectangle at (4,2) with size (1,1) and color green and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (4,0) with size (1,5) and color cyan and mask full
  [01]: a rectangle at (3,2) with size (1,1) and color cyan and mask full
diff:   layer[0].size.i
delta: (4,2)=3 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color cyan and mask 1101100100
  [01]: a rectangle at (4,0) with size (1,5) and color cyan and mask full
diff: 
delta: (4,2)=3 
! 5 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color pink and mask 1000101110
  [01]: a rectangle at (4,1) with size (1,3) and color blue and mask full
diff: 
delta:
   (58.9 bits)
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (3,0) with size (2,5) and color pink and mask 1000101110
  [01]: a rectangle at (0,0) with size (4,5) and color black and mask 11111011101111111111
diff: 
delta:
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (3,0) with size (2,5) and color pink and mask 1000101110
  [01]: a rectangle at (4,1) with size (1,3) and color blue and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (3,0) with size (2,5) and color pink and mask 1000101110
  [01]: a rectangle at (0,0) with size (4,5) and color black and mask full
diff:   color  layer[01].size.i
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (4,5) and color black and mask 10001111111111111111
  [01]: a rectangle at (4,1) with size (1,3) and color blue and mask full
diff:   color  layer[0].size.i
delta:
! 4 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (5,0) with size (2,7) and color red and mask 11000110011100
  [01]: a rectangle at (6,2) with size (1,3) and color yellow and mask full
diff: 
delta:
   (67.3 bits)
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (5,0) with size (2,7) and color red and mask 11000110011100
  [01]: a rectangle at (0,0) with size (6,7) and color black and mask 111111110111010111110111111111111111111111
diff: 
delta:
   (44.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (5,0) with size (2,7) and color red and mask 11000110011100
  [01]: a rectangle at (6,2) with size (1,3) and color yellow and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (5,0) with size (2,7) and color red and mask 11000110011100
  [01]: a rectangle at (0,0) with size (6,7) and color black and mask full
diff:   color  layer[01].size.i
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (6,0) with size (1,7) and color red and mask full
  [01]: a rectangle at (5,2) with size (1,3) and color red and mask full
diff:   layer[0].size.i
delta: (6,2)=4  (6,3)=4  (6,4)=4 
! 11 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (7,0) with size (2,9) and color cyan and mask 111000111000111000
  [01]: a rectangle at (8,3) with size (1,3) and color red and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (7,0) with size (2,9) and color cyan and mask 111000111000111000
  [01]: a rectangle at (0,0) with size (8,9) and color black and mask full
diff:   color  layer[01].size.i
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (8,0) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (7,3) with size (1,3) and color cyan and mask full
diff:   layer[0].size.i
delta: (8,3)=2  (8,4)=2  (8,5)=2 
! 15 wrong pixels (generated / expected)

TEST b8cdaf2b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 972.9 bits (972.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-112] Checking task b91ae062.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4033.2 = 4042.2
DL output with Mo: L = 9.0 + 35103.5 = 35112.4
DL input+output M: L = 17.9 + 39136.7 = 39154.6

# learning a model for train pairs
39154.6	
27370.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19527.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14268.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14039.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13806.9	OUT DEF: layer[0].color={layer[0].color}
13644.8	IN  SHAPE at layer[01]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a point at ? with color ?

DL input  with Mi: L = 36.7 + 3614.4 = 3651.1
DL output with Mo: L = 59.7 + 9934.0 = 9993.7
DL input+output M: L = 96.4 + 13548.4 = 13644.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color pink and mask 110001
  [01]: a point at (0,1) with color orange
diff: 
delta:
   (56.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,2) with size (2,4) and color pink and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color pink and mask full
  [011]: a rectangle at (0,2) with size (2,2) and color orange and mask full
diff: 
delta:
   (93.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,3) and color pink and mask 110001
  [01]: a point at (0,1) with color orange
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN b91ae062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 110
  [01]: a point at (0,0) with color blue
diff: 
delta: (2,1)=1 
   (69.7 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,2) with size (4,4) and color yellow and mask 11001111001100
  [01]: a rectangle at (0,0) with size (2,2) and color blue and mask full
  [011]: a rectangle at (4,2) with size (2,2) and color blue and mask full
diff: 
delta:
   (111.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color yellow and mask 110
  [01]: a point at (0,0) with color blue
diff: 
delta: (2,1)=1 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color blue and mask full
  [01]: a point at (0,2) with color yellow
diff: 
delta: (1,1)=4  (2,1)=1 
! size mismatch, 10x10 instead of 6x6

TRAIN b91ae062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color green and mask full
  [01]: a point at (0,1) with color red
diff: 
delta: (1,1)=7# (1,2)=3 
   (77.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask full
  [01]: a rectangle at (0,3) with size (3,3) and color red and mask full
  [011]: a rectangle at (3,3) with size (3,3) and color orange and mask full
diff: 
delta: (3,6)=3  (3,7)=3  (3,8)=3  (4,6)=3  (4,7)=3  (4,8)=3  (5,6)=3  (5,7)=3  (5,8)=3 
   (266.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color green and mask full
  [01]: a point at (0,1) with color red
diff: 
delta: (1,1)=7# (1,2)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN b91ae062.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,2) and color pink and mask full
  [01]: a point at (0,1) with color cyan
diff: 
delta: (2,0)=9# (2,1)=8 
   (79.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,3) with size (3,6) and color pink and mask full
  [01]: a rectangle at (0,3) with size (9,3) and color cyan and mask full
  [011]: a rectangle at (6,0) with size (3,3) and color brown and mask full
diff: 
delta:
   (109.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,2) and color pink and mask full
  [01]: a point at (0,1) with color cyan
diff: 
delta: (2,0)=9# (2,1)=8 
! size mismatch, 10x10 instead of 9x9

TRAIN b91ae062.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [01]: a point at (0,0) with color yellow
diff: 
delta: (0,2)=3  (2,2)=8 
   (79.0 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (4,0) with size (4,8) and color red and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color yellow and mask full
  [011]: a rectangle at (0,8) with size (4,4) and color green and mask full
diff: 
delta: (8,8)=8  (8,9)=8  (8,10)=8  (8,11)=8  (9,8)=8  (9,9)=8  (9,10)=8  (9,11)=8  (10,8)=8  (10,9)=8  (10,10)=8  (10,11)=8  (11,8)=8  (11,9)=8  (11,10)=8  (11,11)=8 
   (413.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color red and mask full
  [01]: a point at (0,0) with color yellow
diff: 
delta: (0,2)=3  (2,2)=8 
! size mismatch, 10x10 instead of 12x12

TRAIN b91ae062.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,2) and color brown and mask full
  [01]: a point at (0,1) with color blue
diff: 
delta: (1,1)=8  (1,2)=7#
! size mismatch, 10x10 instead of 12x12

TEST b91ae062.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9934.0 bits (9934.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-111] Checking task b94a9452.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9984.0 = 9993.0
DL output with Mo: L = 9.0 + 1634.7 = 1643.7
DL input+output M: L = 17.9 + 11618.7 = 11636.6

# learning a model for train pairs
11636.6	
4461.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4047.2	OUT DEF: size={layer[0].size}
3650.4	IN  SHAPE at layer[00]: a rectangle at ? with size ? and color ? and mask ?
3352.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3114.6	OUT DEF: color={layer[00].color}
2896.4	OUT DEF: layer[0].size={layer[00].size}
2757.0	OUT DEF: layer[0].color={layer[0].color}
2686.3	OUT DEF: layer[0].mask=full
2615.7	IN  DEF: layer[00].mask=full
2545.0	IN  DEF: layer[0].mask=full
2499.4	IN  DEF: color=black
2464.4	OUT DEF: layer[0].pos=(?,?)
2374.4	OUT DEF: layer[0].pos.i={layer[00].pos.i - layer[0].pos.i}
2284.5	OUT DEF: layer[0].pos.j={layer[00].pos.j - layer[0].pos.j}
2249.5	IN  DEF: size=(?,?)
1970.9	IN  DEF: size.i=12
1935.9	IN  DEF: layer[00].pos=(?,?)
1900.9	IN  DEF: layer[00].size=(?,?)
1865.9	IN  DEF: layer[0].pos=(?,?)
1830.8	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color {layer[00].color} and layers
  [0]: a rectangle at ({layer[00].pos.i - layer[0].pos.i},{layer[00].pos.j - layer[0].pos.j}) with size {layer[00].size} and color {layer[0].color} and mask full
WHERE (Mi)
a background with size (12,?) and color black and layers
  [00]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 68.9 + 1711.3 = 1780.2
DL output with Mo: L = 50.6 + 0.0 = 50.6
DL input+output M: L = 119.5 + 1711.3 = 1830.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  [00]: a rectangle at (2,4) with size (2,2) and color yellow and mask full
  [0]: a rectangle at (1,3) with size (4,4) and color red and mask full
diff: 
delta:
   (60.2 bits)
data: a background with size (4,4) and color yellow and layers
  [0]: a rectangle at (1,1) with size (2,2) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  [00]: a rectangle at (2,4) with size (2,2) and color yellow and mask full
  [0]: a rectangle at (1,3) with size (4,4) and color red and mask full
diff: 
delta:
correct output grid

TRAIN b94a9452.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  [00]: a rectangle at (3,5) with size (1,1) and color green and mask full
  [0]: a rectangle at (2,4) with size (3,3) and color blue and mask full
diff: 
delta:
   (53.5 bits)
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (1,1) with size (1,1) and color blue and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  [00]: a rectangle at (3,5) with size (1,1) and color green and mask full
  [0]: a rectangle at (2,4) with size (3,3) and color blue and mask full
diff: 
delta:
correct output grid

TRAIN b94a9452.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  [00]: a rectangle at (8,4) with size (1,1) and color pink and mask full
  [0]: a rectangle at (6,2) with size (5,5) and color yellow and mask full
diff: 
delta:
   (57.4 bits)
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (2,2) with size (1,1) and color yellow and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  [00]: a rectangle at (8,4) with size (1,1) and color pink and mask full
  [0]: a rectangle at (6,2) with size (5,5) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN b94a9452.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  [00]: a rectangle at (3,4) with size (2,2) and color cyan and mask full
  [0]: a rectangle at (1,2) with size (6,6) and color green and mask full
diff:   size.i
delta:
correct output grid

TEST b94a9452.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-110] Checking task b9b7f026.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 52982.7 = 52991.6
DL output with Mo: L = 9.0 + 417.9 = 426.9
DL input+output M: L = 17.9 + 53400.6 = 53418.5

# learning a model for train pairs
53418.5	
41394.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30196.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20486.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12480.3	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
12242.8	OUT DEF: color={layer[011].color}
12172.1	IN  DEF: layer[0].mask=full
12101.5	IN  DEF: layer[01].mask=full
12030.8	IN  DEF: layer[0111].mask=full
11985.2	IN  DEF: color=black
11950.2	OUT DEF: size=(?,?)
11879.5	OUT DEF: size.i=1
11808.9	OUT DEF: size.j=1
11773.9	IN  DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color {layer[011].color} and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 75.8 + 11685.0 = 11760.8
DL output with Mo: L = 13.0 + 0.0 = 13.0
DL input+output M: L = 88.9 + 11685.0 = 11773.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,13) and color black and layers
  [0]: a rectangle at (7,3) with size (3,5) and color red and mask full
  [01]: a rectangle at (11,8) with size (3,4) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (4,3) and color pink and mask 111101101111
  [0111]: a rectangle at (1,8) with size (3,3) and color green and mask full
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1  (5,9)=7# (5,10)=7# (5,11)=7# (6,9)=7# (6,10)=7# (6,11)=7# (7,9)=7# (7,10)=7# (7,11)=7# (11,0)=4  (11,1)=4  (11,2)=4  (12,0)=4  (12,1)=4  (12,2)=4 
   (512.3 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  [0]: a rectangle at (7,3) with size (3,5) and color red and mask full
  [01]: a rectangle at (11,8) with size (3,4) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (4,3) and color pink and mask 111101101111
  [0111]: a rectangle at (1,8) with size (3,3) and color green and mask full
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1  (5,9)=7# (5,10)=7# (5,11)=7# (6,9)=7# (6,10)=7# (6,11)=7# (7,9)=7# (7,10)=7# (7,11)=7# (11,0)=4  (11,1)=4  (11,2)=4  (12,0)=4  (12,1)=4  (12,2)=4 
correct output grid

TRAIN b9b7f026.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (0,13) with size (6,4) and color orange and mask full
  [01]: a rectangle at (11,10) with size (4,5) and color yellow and mask full
  [011]: a rectangle at (3,7) with size (7,4) and color grey and mask 1111111110011001111111111111
  [0111]: a rectangle at (6,3) with size (6,3) and color red and mask full
diff: 
delta: (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8 
   (468.9 bits)
data: a background with size (1,1) and color grey and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (0,13) with size (6,4) and color orange and mask full
  [01]: a rectangle at (11,10) with size (4,5) and color yellow and mask full
  [011]: a rectangle at (3,7) with size (7,4) and color grey and mask 1111111110011001111111111111
  [0111]: a rectangle at (6,3) with size (6,3) and color red and mask full
diff: 
delta: (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8 
correct output grid

TRAIN b9b7f026.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color black and layers
  [0]: a rectangle at (1,2) with size (5,6) and color blue and mask full
  [01]: a rectangle at (2,10) with size (6,5) and color green and mask full
  [011]: a rectangle at (9,2) with size (5,7) and color red and mask 11111111110001111000111111111111111
  [0111]: a rectangle at (9,11) with size (4,5) and color orange and mask full
diff: 
delta:
   (187.3 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color black and layers
  [0]: a rectangle at (1,2) with size (5,6) and color blue and mask full
  [01]: a rectangle at (2,10) with size (6,5) and color green and mask full
  [011]: a rectangle at (9,2) with size (5,7) and color red and mask 11111111110001111000111111111111111
  [0111]: a rectangle at (9,11) with size (4,5) and color orange and mask full
diff: 
delta:
correct output grid

TRAIN b9b7f026.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (1,0) with size (6,8) and color red and mask full
  [01]: a rectangle at (0,10) with size (5,4) and color green and mask full
  [011]: a rectangle at (6,9) with size (4,4) and color yellow and mask full
  [0111]: a rectangle at (9,4) with size (4,4) and color cyan and mask full
diff: 
delta: (8,1)=5# (8,2)=5# (8,3)=5# (9,1)=5# (9,2)=5# (9,3)=5# (10,1)=5# (10,2)=5# (10,3)=5# (11,10)=7# (11,11)=7# (11,12)=7# (11,13)=7# (12,10)=7# (12,13)=7# (13,10)=7# (13,11)=7# (13,12)=7# (13,13)=7#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (1,0) with size (6,8) and color red and mask full
  [01]: a rectangle at (0,10) with size (5,4) and color green and mask full
  [011]: a rectangle at (9,4) with size (4,4) and color cyan and mask full
  [0111]: a rectangle at (6,9) with size (4,4) and color yellow and mask full
diff: 
delta: (8,1)=5# (8,2)=5# (8,3)=5# (9,1)=5# (9,2)=5# (9,3)=5# (10,1)=5# (10,2)=5# (10,3)=5# (11,10)=7# (11,11)=7# (11,12)=7# (11,13)=7# (12,10)=7# (12,13)=7# (13,10)=7# (13,11)=7# (13,12)=7# (13,13)=7#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,15) and color black and layers
  [0]: a rectangle at (1,0) with size (6,8) and color red and mask full
  [01]: a rectangle at (6,9) with size (4,4) and color yellow and mask full
  [011]: a rectangle at (0,10) with size (5,4) and color green and mask full
  [0111]: a rectangle at (9,4) with size (4,4) and color cyan and mask full
diff: 
delta: (8,1)=5# (8,2)=5# (8,3)=5# (9,1)=5# (9,2)=5# (9,3)=5# (10,1)=5# (10,2)=5# (10,3)=5# (11,10)=7# (11,11)=7# (11,12)=7# (11,13)=7# (12,10)=7# (12,13)=7# (13,10)=7# (13,11)=7# (13,12)=7# (13,13)=7#
! 1 wrong pixels (generated / expected)

TEST b9b7f026.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-109] Checking task ba26e723.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11069.0 = 11078.0
DL output with Mo: L = 9.0 + 18221.9 = 18230.8
DL input+output M: L = 17.9 + 29290.9 = 29308.8

# learning a model for train pairs
29308.8	
22527.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20555.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19743.1	OUT DEF: size={size}
19337.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19104.5	OUT DEF: layer[0].color={layer[0].color}
18873.7	OUT DEF: layer[01].color=pink
18465.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
18234.3	OUT DEF: layer[011].color=pink
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color pink and mask ?
  [011]: a rectangle at ? with size ? and color pink and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 4269.7 = 4296.3
DL output with Mo: L = 61.1 + 13876.9 = 13938.0
DL input+output M: L = 87.7 + 18146.6 = 18234.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,10) and color yellow and mask 101010101011111111110101010101
diff: 
delta:
   (78.9 bits)
data: a background with size (3,10) and color black and layers
  [0]: a rectangle at (1,1) with size (1,8) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (2,1) and color pink and mask full
  [011]: a rectangle at (1,9) with size (2,1) and color pink and mask full
diff: 
delta: (0,2)=4  (0,4)=4  (0,6)=6  (0,8)=4  (1,3)=6  (1,6)=6  (2,1)=4  (2,3)=6  (2,5)=4  (2,7)=4 
   (228.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,10) and color yellow and mask 101010101011111111110101010101
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,10) and color yellow and layers
  [0]: a rectangle at (0,1) with size (1,9) and color black and mask full
diff: 
delta: (0,2)=4  (0,4)=4  (0,6)=4  (0,8)=4  (2,0)=0  (2,2)=0  (2,4)=0  (2,6)=0  (2,8)=0 
! 20 wrong pixels (generated / expected)

TRAIN ba26e723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,11) and color yellow and mask 101010101011111111111101010101010
diff: 
delta:
   (82.5 bits)
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,1) with size (1,8) and color yellow and mask full
  [01]: a rectangle at (0,9) with size (2,1) and color pink and mask full
  [011]: a rectangle at (1,0) with size (2,1) and color pink and mask full
diff: 
delta: (0,1)=4  (0,3)=6  (0,5)=4  (0,7)=4  (1,3)=6  (1,6)=6  (1,10)=4  (2,2)=4  (2,4)=4  (2,6)=6  (2,8)=4  (2,10)=4 
   (262.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,11) and color yellow and mask 101010101011111111111101010101010
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN ba26e723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,11) and color yellow and mask 10101010101111111111110101010101
diff: 
delta:
   (82.5 bits)
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (1,1) with size (1,8) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (2,1) and color pink and mask full
  [011]: a rectangle at (1,9) with size (2,1) and color pink and mask full
diff: 
delta: (0,2)=4  (0,4)=4  (0,6)=6  (0,8)=4  (0,10)=4  (1,3)=6  (1,6)=6  (1,10)=4  (2,1)=4  (2,3)=6  (2,5)=4  (2,7)=4 
   (262.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  [0]: a rectangle at (0,0) with size (3,11) and color yellow and mask 10101010101111111111110101010101
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN ba26e723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,13) and color black and layers
  [0]: a rectangle at (0,0) with size (3,13) and color yellow and mask 10101010101011111111111111010101010101
diff: 
delta:
   (89.7 bits)
data: a background with size (3,13) and color black and layers
  [0]: a rectangle at (1,1) with size (1,11) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (2,1) and color pink and mask full
  [011]: a rectangle at (0,12) with size (2,1) and color pink and mask full
diff: 
delta: (0,2)=4  (0,4)=4  (0,6)=6  (0,8)=4  (0,10)=4  (1,3)=6  (1,6)=6  (1,9)=6  (2,1)=4  (2,3)=6  (2,5)=4  (2,7)=4  (2,9)=6  (2,11)=4 
   (299.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
  [0]: a rectangle at (0,0) with size (3,13) and color yellow and mask 10101010101011111111111111010101010101
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN ba26e723.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,14) and color black and layers
  [0]: a rectangle at (0,0) with size (3,14) and color yellow and mask 10101010101011111111111111110101010101010
diff: 
delta:
   (93.3 bits)
data: a background with size (3,14) and color black and layers
  [0]: a rectangle at (1,1) with size (1,11) and color yellow and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color pink and mask full
  [011]: a rectangle at (1,12) with size (2,1) and color pink and mask full
diff: 
delta: (0,1)=4  (0,3)=6  (0,5)=4  (0,7)=4  (0,9)=6  (0,11)=4  (0,13)=4  (1,3)=6  (1,6)=6  (1,9)=6  (1,13)=4  (2,2)=4  (2,4)=4  (2,6)=6  (2,8)=4  (2,10)=4 
   (334.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
  [0]: a rectangle at (0,0) with size (3,14) and color yellow and mask 10101010101011111111111111110101010101010
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN ba26e723.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  [0]: a rectangle at (0,0) with size (3,17) and color yellow and mask 101010101010101011111111111111111101010101010101010
diff: 
delta:
! 33 wrong pixels (generated / expected)

TEST ba26e723.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 13876.9 bits (13876.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-108] Checking task ba97ae07.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20011.6 = 20020.5
DL output with Mo: L = 9.0 + 20011.6 = 20020.5
DL input+output M: L = 17.9 + 40023.1 = 40041.1

# learning a model for train pairs
40041.1	
29170.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19749.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12400.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6500.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5270.6	OUT DEF: layer[0]={layer[01]}
4061.2	OUT DEF: layer[01]={layer[0]}
3326.9	OUT DEF: size={size}
3233.0	IN  DEF: layer[0].mask=full
3139.2	IN  DEF: layer[01].mask=full
3079.0	OUT DEF: color=black
3018.8	IN  DEF: color=black
2970.6	IN  DEF: size=(?,?)
2922.3	IN  DEF: layer[0].pos=(?,?)
2874.1	IN  DEF: layer[0].size=(?,?)
2825.9	IN  DEF: layer[01].pos=(?,?)
2777.6	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[01]}
  [01]: {layer[0]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 62.7 + 2698.2 = 2760.9
DL output with Mo: L = 16.7 + 0.0 = 16.7
DL input+output M: L = 79.4 + 2698.2 = 2777.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (0,3) with size (13,2) and color cyan and mask full
  [01]: a rectangle at (3,0) with size (3,13) and color green and mask full
diff: 
delta:
   (78.1 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (3,0) with size (3,13) and color green and mask full
  [01]: a rectangle at (0,3) with size (13,2) and color cyan and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (0,3) with size (13,2) and color cyan and mask full
  [01]: a rectangle at (3,0) with size (3,13) and color green and mask full
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (3,0) with size (1,9) and color blue and mask full
  [01]: a rectangle at (0,2) with size (7,2) and color pink and mask full
diff: 
delta:
   (66.4 bits)
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (0,2) with size (7,2) and color pink and mask full
  [01]: a rectangle at (3,0) with size (1,9) and color blue and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (3,0) with size (1,9) and color blue and mask full
  [01]: a rectangle at (0,2) with size (7,2) and color pink and mask full
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,7) and color orange and mask full
  [01]: a rectangle at (0,2) with size (8,1) and color blue and mask full
diff: 
delta:
   (63.4 bits)
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (0,2) with size (8,1) and color blue and mask full
  [01]: a rectangle at (3,0) with size (1,7) and color orange and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  [0]: a rectangle at (3,0) with size (1,7) and color orange and mask full
  [01]: a rectangle at (0,2) with size (8,1) and color blue and mask full
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (8,6) and color black and layers
  [0]: a rectangle at (0,1) with size (8,1) and color green and mask full
  [01]: a rectangle at (4,0) with size (1,6) and color red and mask full
diff: 
delta:
   (62.0 bits)
data: a background with size (8,6) and color black and layers
  [0]: a rectangle at (4,0) with size (1,6) and color red and mask full
  [01]: a rectangle at (0,1) with size (8,1) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  [0]: a rectangle at (0,1) with size (8,1) and color green and mask full
  [01]: a rectangle at (4,0) with size (1,6) and color red and mask full
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,6) and color black and layers
  [0]: a rectangle at (0,2) with size (11,2) and color yellow and mask full
  [01]: a rectangle at (2,0) with size (2,6) and color grey and mask full
diff: 
delta:
correct output grid

TEST ba97ae07.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-107] Checking task bb43febb.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15041.5 = 15050.5
DL output with Mo: L = 9.0 + 15041.5 = 15050.5
DL input+output M: L = 17.9 + 30083.0 = 30100.9

# learning a model for train pairs
30100.9	
18358.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11336.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8188.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6620.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5173.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
4378.6	OUT DEF: layer[011]={layer[0]}
3745.0	OUT DEF: layer[01]={layer[01]}
3333.3	OUT SHAPE at layer[0110]: a rectangle at ? with size ? and color ? and mask ?
2948.1	OUT DEF: size={size}
2856.5	OUT DEF: layer[0].color=red
2765.0	OUT DEF: layer[0110].color=red
2673.4	IN  DEF: layer[0].color=grey
2581.8	IN  DEF: layer[01].color=grey
2534.4	OUT DEF: layer[0].mask=full
2487.0	OUT DEF: layer[0110].mask=full
2439.5	IN  DEF: layer[0].mask=full
2392.1	IN  DEF: layer[01].mask=full
2361.1	OUT DEF: color=black
2330.0	IN  DEF: color=black
2308.2	OUT DEF: layer[0].pos=(?,?)
2222.6	OUT DEF: layer[0].pos.i={layer[01].pos.i + 1}
2136.9	OUT DEF: layer[0].pos.j={layer[01].pos.j + 1}
2115.1	OUT DEF: layer[0].size=(?,?)
2005.6	OUT DEF: layer[0].size.j={layer[0].size.j - layer[01].pos.j}
1898.0	OUT DEF: layer[0].size.i=3
1876.2	OUT DEF: layer[0110].pos=(?,?)
1790.3	OUT DEF: layer[0110].pos.i={layer[0].pos.i + 1}
1704.5	OUT DEF: layer[0110].pos.j={layer[0].pos.j + 1}
1682.7	OUT DEF: layer[0110].size=(?,?)
1613.4	OUT DEF: layer[0110].size.j={layer[01].size.j - layer[0].size.i}
1549.3	OUT DEF: layer[0110].size.i={layer[01].pos.i}
1527.6	IN  DEF: size=(?,?)
1353.9	IN  DEF: size.i=10
1180.2	IN  DEF: size.j=10
1158.4	IN  DEF: layer[0].pos=(?,?)
1136.6	IN  DEF: layer[0].size=(?,?)
1114.8	IN  DEF: layer[01].pos=(?,?)
1093.0	IN  DEF: layer[01].size=(?,?)
957.4	IN  DEF: layer[01].size.i=5

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.i + 1},{layer[01].pos.j + 1}) with size (3,{layer[0].size.j - layer[01].pos.j}) and color red and mask full
  [01]: {layer[01]}
  [0110]: a rectangle at ({layer[0].pos.i + 1},{layer[0].pos.j + 1}) with size ({layer[01].pos.i},{layer[01].size.j - layer[0].size.i}) and color red and mask full
  [011]: {layer[0]}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color grey and mask full
  [01]: a rectangle at (?,?) with size (5,?) and color grey and mask full

DL input  with Mi: L = 80.3 + 758.8 = 839.1
DL output with Mo: L = 118.3 + 0.0 = 118.3
DL input+output M: L = 198.6 + 758.8 = 957.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,6) with size (4,3) and color grey and mask full
  [01]: a rectangle at (2,0) with size (5,5) and color grey and mask full
diff: 
delta:
   (37.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (3,3) and color red and mask full
  [01]: a rectangle at (2,0) with size (5,5) and color grey and mask full
  [0110]: a rectangle at (4,7) with size (2,1) and color red and mask full
  [011]: a rectangle at (3,6) with size (4,3) and color grey and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,6) with size (4,3) and color grey and mask full
  [01]: a rectangle at (2,0) with size (5,5) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN bb43febb.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (3,5) and color grey and mask full
  [01]: a rectangle at (1,1) with size (5,6) and color grey and mask full
diff: 
delta:
   (38.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (3,4) and color red and mask full
  [01]: a rectangle at (1,1) with size (5,6) and color grey and mask full
  [0110]: a rectangle at (8,5) with size (1,3) and color red and mask full
  [011]: a rectangle at (7,4) with size (3,5) and color grey and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,4) with size (3,5) and color grey and mask full
  [01]: a rectangle at (1,1) with size (5,6) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN bb43febb.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color grey and mask full
  [01]: a rectangle at (4,3) with size (6,7) and color grey and mask full
diff:   layer[01].size.i
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (6,7) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,6) and color grey and mask full
diff:   layer[01].size.i
delta:
! 37 wrong pixels (generated / expected)

TEST bb43febb.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-106] Checking task bbc9ae5d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2103.9 = 2112.9
DL output with Mo: L = 9.0 + 9810.6 = 9819.5
DL input+output M: L = 17.9 + 11914.5 = 11932.4

# learning a model for train pairs
11932.4	
5232.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4876.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4491.3	OUT DEF: layer[0].pos={layer[0].pos}
4258.5	OUT DEF: layer[0].color={layer[0].color}
4119.6	OUT DEF: color={color}
4002.5	IN  DEF: layer[0].mask=full
3941.1	OUT DEF: size=(?,?)
3543.3	OUT DEF: size.j={size.j}
3481.9	OUT DEF: layer[0].size=(?,?)
3420.4	IN  DEF: size=(?,?)
3303.3	IN  DEF: size.i=1
3241.9	IN  DEF: layer[0].pos=(?,?)
3173.8	IN  DEF: layer[0].pos.i=0
3108.2	IN  DEF: layer[0].pos.j=0
3033.4	IN  DEF: color=black
2971.9	IN  DEF: layer[0].size=(?,?)
2854.8	IN  DEF: layer[0].size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size (?,{size.j}) and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (1,?) and color black and layers
  [0]: a rectangle at (0,0) with size (1,?) and color ? and mask full

DL input  with Mi: L = 36.5 + 837.6 = 874.2
DL output with Mo: L = 33.7 + 1947.0 = 1980.7
DL input+output M: L = 70.2 + 2784.6 = 2854.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color blue and mask full
diff: 
delta:
   (16.5 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color blue and mask 111101110011
diff: 
delta:
   (31.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color blue and mask full
diff: 
delta:
! size mismatch, 10x6 instead of 3x6
>> Trial 2
data: a background with size (1,6) and color blue and layers
  [0]: a rectangle at (0,2) with size (1,4) and color black and mask full
diff:   color  layer[0].pos.j
delta:
! size mismatch, 10x6 instead of 3x6

TRAIN bbc9ae5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (1,8) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta:
   (15.3 bits)
data: a background with size (4,8) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color red and mask 1111011100110001
diff: 
delta:
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,8) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta:
! size mismatch, 10x8 instead of 4x8
>> Trial 2
data: a background with size (1,8) and color red and layers
  [0]: a rectangle at (0,1) with size (1,7) and color black and mask full
diff:   color  layer[0].pos.j
delta:
! size mismatch, 10x8 instead of 4x8

TRAIN bbc9ae5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (1,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color grey and mask full
diff: 
delta:
   (19.1 bits)
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (0,0) with size (5,7) and color grey and mask 11111110111111001111100011110000111
diff: 
delta:
   (59.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color grey and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 5x10
>> Trial 2
data: a background with size (1,10) and color grey and layers
  [0]: a rectangle at (0,3) with size (1,7) and color black and mask full
diff:   color  layer[0].pos.j
delta:
! size mismatch, 10x10 instead of 5x10

TRAIN bbc9ae5d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,4) and color cyan and mask full
diff: 
delta:
   (18.5 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,6) and color cyan and mask 111111011111001111
diff: 
delta:
   (38.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,4) and color cyan and mask full
diff: 
delta:
! size mismatch, 10x6 instead of 3x6
>> Trial 2
data: a background with size (1,6) and color cyan and layers
  [0]: a rectangle at (0,4) with size (1,2) and color black and mask full
diff:   color  layer[0].pos.j
delta:
! size mismatch, 10x6 instead of 3x6

TRAIN bbc9ae5d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color orange and mask full
diff: 
delta:
   (14.5 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 111011001
diff: 
delta:
   (27.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color orange and mask full
diff: 
delta:
! size mismatch, 10x6 instead of 3x6
>> Trial 2
data: a background with size (1,6) and color orange and layers
  [0]: a rectangle at (0,1) with size (1,5) and color black and mask full
diff:   color  layer[0].pos.j
delta:
! size mismatch, 10x6 instead of 3x6

TRAIN bbc9ae5d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,12) and color black and layers
  [0]: a rectangle at (0,0) with size (1,3) and color blue and mask full
diff: 
delta:
! size mismatch, 10x12 instead of 6x12
>> Trial 2
data: a background with size (1,12) and color blue and layers
  [0]: a rectangle at (0,3) with size (1,9) and color black and mask full
diff:   color  layer[0].pos.j
delta:
! size mismatch, 10x12 instead of 6x12

TEST bbc9ae5d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1947.0 bits (1947.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-105] Checking task bc1d5164.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7291.1 = 7300.1
DL output with Mo: L = 9.0 + 3556.8 = 3565.7
DL input+output M: L = 17.9 + 10847.8 = 10865.8

# learning a model for train pairs
10865.8	
9206.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8141.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7825.7	OUT DEF: layer[0].pos={layer[0].pos}
7764.3	OUT DEF: size=(?,?)
7491.8	OUT DEF: size.i=3
7219.4	OUT DEF: size.j=3
7158.0	OUT DEF: layer[0].size=(?,?)
6885.5	OUT DEF: layer[0].size.j=3
6824.1	IN  DEF: size=(?,?)
6431.9	IN  DEF: size.j=7
6087.2	IN  DEF: size.i=5
6025.8	IN  DEF: layer[0].pos=(?,?)
5820.1	IN  DEF: layer[0].pos.j=0
5638.2	IN  DEF: layer[0].pos.i=0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size (?,3) and color ? and mask ?
WHERE (Mi)
a background with size (5,7) and color ? and layers
  [0]: a rectangle at (0,0) with size ? and color ? and mask ?

DL input  with Mi: L = 45.3 + 4382.0 = 4427.3
DL output with Mo: L = 41.8 + 1169.2 = 1210.9
DL input+output M: L = 87.0 + 5551.2 = 5638.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1110
diff: 
delta: (0,5)=8  (1,5)=8  (1,6)=8  (3,0)=8  (3,1)=8  (3,5)=8  (3,6)=8  (4,1)=8  (4,5)=8 
   (173.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 10111010
diff: 
delta:
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1110
diff: 
delta: (0,5)=8  (1,5)=8  (1,6)=8  (3,0)=8  (3,1)=8  (3,5)=8  (3,6)=8  (4,1)=8  (4,5)=8 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,1) with size (5,1) and color cyan and mask full
diff:   layer[0].pos.j
delta: (0,5)=8  (1,0)=8  (1,5)=8  (1,6)=8  (2,1)=0  (3,0)=8  (3,5)=8  (3,6)=8  (4,5)=8 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,5) with size (5,1) and color cyan and mask full
diff:   layer[0].pos.j
delta: (0,1)=8  (1,0)=8  (1,1)=8  (1,6)=8  (2,5)=0  (3,0)=8  (3,1)=8  (3,6)=8  (4,1)=8 
! 5 wrong pixels (generated / expected)

TRAIN bc1d5164.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color red and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111101011101111111101111110011100
diff: 
delta:
   (66.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 101110111
diff: 
delta:
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color red and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111101011101111111101111110011100
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,5) with size (2,2) and color red and mask 1011
diff:   layer[0].pos.j
delta: (0,0)=2  (0,1)=2  (3,1)=2  (3,5)=2  (4,0)=2  (4,6)=2 
! 7 wrong pixels (generated / expected)

TRAIN bc1d5164.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111101111111111111100111111011100
diff: 
delta:
   (66.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 101110011
diff: 
delta:
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111101111111111111100111111011100
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,5) with size (2,2) and color yellow and mask 1101
diff:   layer[0].pos.j
delta: (0,0)=4  (0,1)=4  (4,0)=4  (4,6)=4 
! 6 wrong pixels (generated / expected)

TRAIN bc1d5164.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 111101111111111111111111110111110
diff: 
delta:
   (66.2 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (2,3) and color black and mask 111010
diff: 
delta:
   (25.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color yellow and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 111101111111111111111111110111110
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (4,5) with size (1,2) and color yellow and mask full
diff:   layer[0].pos.j  layer[0].pos.i
delta: (0,0)=4  (0,6)=4  (4,0)=4 
! 5 wrong pixels (generated / expected)

TRAIN bc1d5164.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,7) and color green and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111111111111111111101111101011101
diff: 
delta:
   (66.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 100101010
diff: 
delta:
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color green and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111111111111111111101111101011101
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,5) with size (2,2) and color green and mask 1001
diff:   layer[0].pos.j
delta: (0,1)=3  (1,0)=3  (4,6)=3 
! 4 wrong pixels (generated / expected)

TRAIN bc1d5164.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color blue and layers
  [0]: a rectangle at (0,0) with size (5,7) and color black and mask 1111011111111111111111111100011111
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,5) with size (1,2) and color blue and mask full
diff:   layer[0].pos.j
delta: (1,0)=1  (4,1)=1  (4,6)=1 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color blue and mask full
diff:   layer[0].pos.i
delta: (0,5)=1  (0,6)=1  (4,1)=1  (4,6)=1 
! 8 wrong pixels (generated / expected)

TEST bc1d5164.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1169.2 bits (1169.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-104] Checking task bd4472b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3470.5 = 3479.4
DL output with Mo: L = 9.0 + 9623.7 = 9632.7
DL input+output M: L = 17.9 + 13094.2 = 13112.1

# learning a model for train pairs
13112.1	
12409.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11737.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10990.1	OUT DEF: layer[0]={layer[0]}
10311.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9622.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9053.2	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
8603.7	OUT DEF: size={size}
8332.9	OUT DEF: layer[01].size={layer[0].size}
7918.7	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
7647.9	OUT DEF: layer[011].size={layer[0].size}
7563.4	IN  SHAPE at layer[00]: a point at ? with color ?
7424.3	OUT DEF: layer[01].color={layer[00].color}
7285.2	OUT DEF: layer[01111].color={layer[00].color}
7034.7	OUT DEF: layer[0111].size={layer[0].size}
6937.0	IN  SHAPE at layer[001]: a point at ? with color ?
6699.2	OUT DEF: color={layer[001].color}
6561.2	IN  DEF: layer[0].color=grey
6490.2	OUT DEF: layer[01].mask={layer[0].mask}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[001].color} and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size {layer[0].size} and color {layer[00].color} and mask {layer[0].mask}
  [011]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [0111]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color {layer[00].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [001]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color grey and mask ?

DL input  with Mi: L = 47.8 + 2405.1 = 2453.0
DL output with Mo: L = 81.8 + 3955.5 = 4037.3
DL input+output M: L = 129.6 + 6360.6 = 6490.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a point at (0,1) with color blue
  [0]: a rectangle at (1,0) with size (1,3) and color grey and mask full
diff: 
delta: (0,2)=4 
   (80.5 bits)
data: a background with size (8,3) and color blue and layers
  [0]: a rectangle at (1,0) with size (1,3) and color grey and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,3) and color yellow and mask full
  [0111]: a rectangle at (7,0) with size (1,3) and color yellow and mask full
  [01111]: a rectangle at (5,0) with size (1,3) and color red and mask full
diff: 
delta: (0,0)=2  (0,2)=4 
   (93.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a point at (0,1) with color blue
  [0]: a rectangle at (1,0) with size (1,3) and color grey and mask full
diff: 
delta: (0,2)=4 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,3) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a point at (0,2) with color yellow
  [0]: a rectangle at (1,0) with size (1,3) and color grey and mask full
diff: 
delta: (0,1)=1 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,3) and color black and layers
  [00]: a point at (0,1) with color blue
  [001]: a point at (0,0) with color red
  [0]: a rectangle at (1,0) with size (1,3) and color grey and mask full
diff: 
delta: (0,2)=4 
! 14 wrong pixels (generated / expected)

TRAIN bd4472b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  [00]: a point at (0,0) with color green
  [001]: a point at (0,1) with color red
  [0]: a rectangle at (1,0) with size (1,4) and color grey and mask full
diff: 
delta: (0,2)=1  (0,3)=4 
   (103.2 bits)
data: a background with size (10,4) and color red and layers
  [0]: a rectangle at (1,0) with size (1,4) and color grey and mask full
  [01]: a rectangle at (2,0) with size (1,4) and color green and mask full
  [011]: a rectangle at (4,0) with size (1,4) and color blue and mask full
  [0111]: a rectangle at (5,0) with size (1,4) and color yellow and mask full
  [01111]: a rectangle at (6,0) with size (1,4) and color green and mask full
diff: 
delta: (0,0)=3  (0,2)=1  (0,3)=4  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=1  (9,0)=4  (9,1)=4  (9,2)=4  (9,3)=4 
   (249.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  [00]: a point at (0,0) with color green
  [001]: a point at (0,1) with color red
  [0]: a rectangle at (1,0) with size (1,4) and color grey and mask full
diff: 
delta: (0,2)=1  (0,3)=4 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  [00]: a point at (0,0) with color green
  [001]: a point at (0,2) with color blue
  [0]: a rectangle at (1,0) with size (1,4) and color grey and mask full
diff: 
delta: (0,1)=2  (0,3)=4 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  [00]: a point at (0,0) with color green
  [001]: a point at (0,3) with color yellow
  [0]: a rectangle at (1,0) with size (1,4) and color grey and mask full
diff: 
delta: (0,1)=2  (0,2)=1 
! 27 wrong pixels (generated / expected)

TRAIN bd4472b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,2) and color black and layers
  [00]: a point at (0,0) with color cyan
  [001]: a point at (0,1) with color green
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
diff: 
delta:
   (56.8 bits)
data: a background with size (6,2) and color green and layers
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
  [01]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [011]: a rectangle at (3,0) with size (1,2) and color green and mask full
  [0111]: a rectangle at (4,0) with size (1,2) and color cyan and mask full
  [01111]: a rectangle at (0,0) with size (1,1) and color cyan and mask full
diff: 
delta:
   (52.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color black and layers
  [00]: a point at (0,0) with color cyan
  [001]: a point at (0,1) with color green
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,2) and color black and layers
  [00]: a point at (0,1) with color green
  [001]: a point at (0,0) with color cyan
  [0]: a rectangle at (1,0) with size (1,2) and color grey and mask full
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,2) and color grey and layers
  [00]: a point at (0,0) with color cyan
  [001]: a point at (0,1) with color green
  [0]: a rectangle at (2,0) with size (4,2) and color black and mask full
diff:   layer[0].color
delta:
! 11 wrong pixels (generated / expected)

TRAIN bd4472b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,5) and color black and layers
  [00]: a point at (0,0) with color blue
  [001]: a point at (0,1) with color red
  [0]: a rectangle at (1,0) with size (1,5) and color grey and mask full
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=8 
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,5) and color black and layers
  [00]: a point at (0,0) with color blue
  [001]: a point at (0,2) with color green
  [0]: a rectangle at (1,0) with size (1,5) and color grey and mask full
diff: 
delta: (0,1)=2  (0,3)=4  (0,4)=8 
! 44 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,5) and color black and layers
  [00]: a point at (0,0) with color blue
  [001]: a point at (0,3) with color yellow
  [0]: a rectangle at (1,0) with size (1,5) and color grey and mask full
diff: 
delta: (0,1)=2  (0,2)=3  (0,4)=8 
! 44 wrong pixels (generated / expected)

TEST bd4472b8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3955.5 bits (3955.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-103] Checking task bda2d7a6.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11514.6 = 11523.6
DL output with Mo: L = 9.0 + 11514.6 = 11523.6
DL input+output M: L = 17.9 + 23029.3 = 23047.2

# learning a model for train pairs
23047.2	
17010.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10973.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8493.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6014.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5508.1	OUT DEF: size={size}
5006.0	OUT DEF: layer[0].mask={layer[0].mask}
4587.3	OUT DEF: layer[01].size={layer[01].size}
4208.6	OUT DEF: layer[0].size={layer[0].size}
3926.3	OUT DEF: layer[0].pos={layer[0].pos}
3644.0	OUT DEF: layer[01].pos={layer[01].pos}
3471.0	OUT DEF: color={layer[0].color}
3329.2	OUT DEF: layer[01].mask={layer[01].mask}
3190.3	OUT DEF: layer[0].color={layer[01].color}
3051.6	OUT DEF: layer[01].color={color}
3016.6	IN  DEF: size=(?,?)
2981.6	IN  DEF: layer[0].pos=(?,?)
2863.1	IN  DEF: layer[0].pos.i=2
2744.7	IN  DEF: layer[0].pos.j=2
2709.7	IN  DEF: layer[0].size=(?,?)
2674.7	IN  DEF: layer[01].pos=(?,?)
2556.2	IN  DEF: layer[01].pos.i=1
2437.8	IN  DEF: layer[01].pos.j=1
2402.7	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {layer[01].color} and mask {layer[0].mask}
  [01]: a rectangle at {layer[01].pos} with size {layer[01].size} and color {color} and mask {layer[01].mask}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (2,2) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (1,1) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 78.2 + 2280.0 = 2358.2
DL output with Mo: L = 44.6 + 0.0 = 44.6
DL input+output M: L = 122.8 + 2280.0 = 2402.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color green and layers
  [0]: a rectangle at (2,2) with size (2,2) and color black and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
diff: 
delta:
   (58.2 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color green and layers
  [0]: a rectangle at (2,2) with size (2,2) and color black and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color red and mask full
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color orange and mask full
diff: 
delta:
   (51.7 bits)
data: a background with size (6,6) and color pink and layers
  [0]: a rectangle at (2,2) with size (2,2) and color orange and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color black and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color pink and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color orange and mask full
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color cyan and layers
  [0]: a rectangle at (2,2) with size (4,4) and color grey and mask 1111100110011111
  [01]: a rectangle at (1,1) with size (6,6) and color black and mask 111111111111110011110011111111111111
diff: 
delta:
   (118.2 bits)
data: a background with size (8,8) and color grey and layers
  [0]: a rectangle at (2,2) with size (4,4) and color black and mask 1111100110011111
  [01]: a rectangle at (1,1) with size (6,6) and color cyan and mask 111111111111110011110011111111111111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
  [0]: a rectangle at (2,2) with size (4,4) and color grey and mask 1111100110011111
  [01]: a rectangle at (1,1) with size (6,6) and color black and mask 111111111111110011110011111111111111
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color brown and layers
  [0]: a rectangle at (2,2) with size (2,2) and color blue and mask full
  [01]: a rectangle at (1,1) with size (4,4) and color black and mask full
diff: 
delta:
correct output grid

TEST bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color green and layers
  [0]: a rectangle at (2,2) with size (4,4) and color pink and mask 1111100110011111
  [01]: a rectangle at (1,1) with size (6,6) and color orange and mask 111111111111110011110011111111111111
diff: 
delta:
correct output grid

TEST bda2d7a6.json/2: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-102] Checking task bdad9b1f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1736.3 = 1745.2
DL output with Mo: L = 9.0 + 4041.0 = 4050.0
DL input+output M: L = 17.9 + 5777.3 = 5795.2

# learning a model for train pairs
5795.2	
4716.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3595.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3267.9	OUT DEF: size={size}
3094.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2885.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
2702.5	OUT DEF: layer[01].pos={layer[01].pos}
2609.5	OUT DEF: layer[0].color={layer[0].color}
2516.5	OUT DEF: layer[01].color={layer[01].color}
2424.9	IN  DEF: layer[0].color=red
2333.4	IN  DEF: layer[01].color=cyan
2256.7	OUT SHAPE at layer[00]: a point at ? with color ?
2165.2	OUT DEF: layer[00].color=yellow
2117.7	OUT DEF: layer[0].mask=full
2070.3	OUT DEF: layer[01].mask=full
2022.9	IN  DEF: layer[0].mask=full
1975.4	IN  DEF: layer[01].mask=full
1944.4	OUT DEF: color=black
1913.4	IN  DEF: color=black
1891.6	OUT DEF: layer[00].pos=(?,?)
1814.5	OUT DEF: layer[00].pos.i={layer[0].pos.i}
1737.4	OUT DEF: layer[00].pos.j={layer[01].pos.j}
1715.6	OUT DEF: layer[0].pos=(?,?)
1638.1	OUT DEF: layer[0].pos.i={layer[0].pos.i}
1562.3	OUT DEF: layer[0].pos.j={layer[01].pos.i}
1540.5	OUT DEF: layer[0].size=(?,?)
1392.2	OUT DEF: layer[0].size.j={size.j}
1344.8	OUT DEF: layer[0].size.i=1
1323.0	OUT DEF: layer[01].size=(?,?)
1174.7	OUT DEF: layer[01].size.i={size.i}
1127.2	OUT DEF: layer[01].size.j=1
1105.4	IN  DEF: size=(?,?)
959.8	IN  DEF: size.i=6
814.1	IN  DEF: size.j=6
792.3	IN  DEF: layer[0].pos=(?,?)
770.5	IN  DEF: layer[0].size=(?,?)
685.1	IN  DEF: layer[0].size.j=2
637.6	IN  DEF: layer[0].size.i=1
615.8	IN  DEF: layer[01].pos=(?,?)
538.3	IN  DEF: layer[01].pos.i=0
516.5	IN  DEF: layer[01].size=(?,?)
431.0	IN  DEF: layer[01].size.i=2
383.6	IN  DEF: layer[01].size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [00]: a point at ({layer[0].pos.i},{layer[01].pos.j}) with color yellow
  [0]: a rectangle at ({layer[0].pos.i},{layer[01].pos.i}) with size (1,{size.j}) and color {layer[0].color} and mask full
  [01]: a rectangle at {layer[01].pos} with size ({size.i},1) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (6,6) and color black and layers
  [0]: a rectangle at (?,?) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,?) with size (2,1) and color cyan and mask full

DL input  with Mi: L = 74.3 + 234.4 = 308.7
DL output with Mo: L = 74.9 + 0.0 = 74.9
DL input+output M: L = 149.2 + 234.4 = 383.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,4) with size (2,1) and color cyan and mask full
diff: 
delta:
   (11.7 bits)
data: a background with size (6,6) and color black and layers
  [00]: a point at (2,4) with color yellow
  [0]: a rectangle at (2,0) with size (1,6) and color red and mask full
  [01]: a rectangle at (0,4) with size (6,1) and color cyan and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (2,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,4) with size (2,1) and color cyan and mask full
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,4) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,1) with size (2,1) and color cyan and mask full
diff: 
delta:
   (11.7 bits)
data: a background with size (6,6) and color black and layers
  [00]: a point at (3,1) with color yellow
  [0]: a rectangle at (3,0) with size (1,6) and color red and mask full
  [01]: a rectangle at (0,1) with size (6,1) and color cyan and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,4) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,1) with size (2,1) and color cyan and mask full
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (4,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,3) with size (2,1) and color cyan and mask full
diff: 
delta:
correct output grid

TEST bdad9b1f.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-101] Checking task be94b721.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11812.8 = 11821.8
DL output with Mo: L = 9.0 + 2383.7 = 2392.7
DL input+output M: L = 17.9 + 14196.5 = 14214.5

# learning a model for train pairs
14214.5	
10741.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8747.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7516.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7020.6	OUT DEF: size={layer[0].size}
6703.2	OUT DEF: color={layer[0].color}
6643.0	IN  DEF: color=black
6594.7	IN  DEF: size=(?,?)
6546.5	IN  DEF: layer[0].pos=(?,?)
6391.3	IN  DEF: layer[0].pos.i=1
6343.1	IN  DEF: layer[0].size=(?,?)
6294.9	IN  DEF: layer[01].pos=(?,?)
6139.7	IN  DEF: layer[01].pos.i=1
6091.4	IN  DEF: layer[01].size=(?,?)
6043.2	IN  DEF: layer[011].pos=(?,?)
5995.0	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color {layer[0].color} and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (1,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (1,?) with size (?,?) and color ? and mask ?
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 96.3 + 4319.0 = 4415.3
DL output with Mo: L = 11.8 + 1567.9 = 1579.7
DL input+output M: L = 108.0 + 5887.0 = 5995.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color red and mask 111110010011
  [01]: a rectangle at (1,5) with size (2,2) and color green and mask 1011
  [011]: a rectangle at (2,8) with size (3,3) and color blue and mask 111011010
diff: 
delta:
   (114.2 bits)
data: a background with size (4,3) and color red and layers
diff: 
delta: (0,2)=0  (1,0)=0  (1,2)=0  (2,0)=0 
   (62.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color red and mask 111110010011
  [01]: a rectangle at (1,5) with size (2,2) and color green and mask 1011
  [011]: a rectangle at (2,8) with size (3,3) and color blue and mask 111011010
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,13) and color black and layers
  [0]: a rectangle at (2,8) with size (3,3) and color blue and mask 111011010
  [01]: a rectangle at (1,1) with size (4,3) and color red and mask 111110010011
  [011]: a rectangle at (1,5) with size (2,2) and color green and mask 1011
diff:   layer[0].pos.i
delta:
! size mismatch, 3x3 instead of 4x3

TRAIN be94b721.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (1,4) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (1,0) with size (3,3) and color green and mask 10111010
  [011]: a rectangle at (0,7) with size (2,2) and color pink and mask 1011
diff: 
delta:
   (96.8 bits)
data: a background with size (3,2) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  [0]: a rectangle at (1,4) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (1,0) with size (3,3) and color green and mask 10111010
  [011]: a rectangle at (0,7) with size (2,2) and color pink and mask 1011
diff: 
delta:
correct output grid

TRAIN be94b721.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (6,11) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color cyan and mask 11011010111
  [01]: a rectangle at (1,8) with size (4,2) and color orange and mask 10101011
  [011]: a rectangle at (2,5) with size (3,2) and color red and mask 101110
diff: 
delta:
   (114.2 bits)
data: a background with size (4,3) and color cyan and layers
diff: 
delta: (1,0)=0  (1,2)=0  (2,2)=0  (3,2)=0 
   (62.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color cyan and mask 11011010111
  [01]: a rectangle at (1,8) with size (4,2) and color orange and mask 10101011
  [011]: a rectangle at (2,5) with size (3,2) and color red and mask 101110
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,11) and color black and layers
  [0]: a rectangle at (1,8) with size (4,2) and color orange and mask 10101011
  [01]: a rectangle at (1,1) with size (4,3) and color cyan and mask 11011010111
  [011]: a rectangle at (2,5) with size (3,2) and color red and mask 101110
diff: 
delta:
! size mismatch, 4x2 instead of 4x3

TRAIN be94b721.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (1,6) with size (3,3) and color red and mask 111010111
  [01]: a rectangle at (1,3) with size (3,2) and color orange and mask 101101
  [011]: a rectangle at (4,0) with size (2,3) and color cyan and mask 10111
diff: 
delta:
   (106.7 bits)
data: a background with size (3,3) and color red and layers
diff: 
delta: (1,0)=0  (1,2)=0 
   (31.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  [0]: a rectangle at (1,6) with size (3,3) and color red and mask 111010111
  [01]: a rectangle at (1,3) with size (3,2) and color orange and mask 101101
  [011]: a rectangle at (4,0) with size (2,3) and color cyan and mask 10111
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN be94b721.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,3) with size (4,3) and color green and mask 101101111111
  [01]: a rectangle at (6,6) with size (3,3) and color pink and mask 11111110
  [011]: a rectangle at (7,1) with size (2,3) and color grey and mask 11111
diff:   layer[01].pos.i  layer[0].pos.i
delta: (1,0)=4  (2,0)=4  (2,1)=4  (3,1)=4 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (6,6) with size (3,3) and color pink and mask 11111110
  [01]: a rectangle at (2,3) with size (4,3) and color green and mask 101101111111
  [011]: a rectangle at (7,1) with size (2,3) and color grey and mask 11111
diff:   layer[01].pos.i  layer[0].pos.i
delta: (1,0)=4  (2,0)=4  (2,1)=4  (3,1)=4 
! size mismatch, 3x3 instead of 4x3

TEST be94b721.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1567.9 bits (1567.9 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-100] Checking task beb8660c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7989.4 = 7998.4
DL output with Mo: L = 9.0 + 7989.4 = 7998.4
DL input+output M: L = 17.9 + 15978.9 = 15996.8

# learning a model for train pairs
15996.8	
14441.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12885.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11830.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10775.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9986.8	OUT DEF: layer[0]={layer[0]}
9358.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8729.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8268.7	OUT DEF: size={size}
7987.0	OUT DEF: layer[01].size={layer[01].size}
7742.2	OUT DEF: layer[011].size={layer[011].size}
7593.6	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
7454.5	OUT DEF: layer[01].color={layer[01].color}
7315.4	OUT DEF: layer[011].color={layer[011].color}
7244.8	OUT DEF: layer[01].mask=full
7106.8	IN  DEF: layer[0].color=cyan
7036.1	OUT DEF: layer[011].mask=full
6965.5	OUT DEF: layer[0111].mask=full
6894.8	IN  DEF: layer[0].mask=full
6824.2	IN  DEF: layer[01].mask=full
6753.5	IN  DEF: layer[011].mask=full
6707.9	OUT DEF: color=black
6662.3	IN  DEF: color=black
6627.3	OUT DEF: layer[01].pos=(?,?)
6518.2	OUT DEF: layer[01].pos.i={layer[0].pos.i - 1}
6417.5	OUT DEF: layer[01].pos.j=1
6382.5	OUT DEF: layer[011].pos=(?,?)
6275.4	OUT DEF: layer[011].pos.i={layer[0].pos.i - 2}
6174.7	OUT DEF: layer[011].pos.j=2
6139.7	OUT DEF: layer[0111].pos=(?,?)
6033.1	OUT DEF: layer[0111].pos.i={layer[011].pos.i - layer[011].pos.j}
5939.3	OUT DEF: layer[0111].pos.j={layer[0].pos.i - layer[01].size.j}
5904.2	OUT DEF: layer[0111].size=(?,?)
5833.6	OUT DEF: layer[0111].size.i=1
5798.6	IN  DEF: size=(?,?)
5763.6	IN  DEF: layer[0].pos=(?,?)
5662.9	IN  DEF: layer[0].pos.j=0
5627.9	IN  DEF: layer[0].size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].pos.i - 1},1) with size {layer[01].size} and color {layer[01].color} and mask full
  [011]: a rectangle at ({layer[0].pos.i - 2},2) with size {layer[011].size} and color {layer[011].color} and mask full
  [0111]: a rectangle at ({layer[011].pos.i - layer[011].pos.j},{layer[0].pos.i - layer[01].size.j}) with size (1,?) and color ? and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,0) with size (?,?) and color cyan and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 73.1 + 4084.6 = 4157.7
DL output with Mo: L = 121.4 + 1348.8 = 1470.2
DL input+output M: L = 194.5 + 5433.3 = 5627.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,7) and color black and layers
  [0]: a rectangle at (9,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (4,1) with size (1,6) and color grey and mask full
  [011]: a rectangle at (6,0) with size (1,5) and color pink and mask full
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
   (260.6 bits)
data: a background with size (10,7) and color black and layers
  [0]: a rectangle at (9,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (8,1) with size (1,6) and color grey and mask full
  [011]: a rectangle at (7,2) with size (1,5) and color pink and mask full
  [0111]: a rectangle at (6,3) with size (1,4) and color yellow and mask full
diff: 
delta: (3,6)=3  (4,5)=2  (4,6)=2  (5,4)=1  (5,5)=1  (5,6)=1 
   (118.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,7) and color black and layers
  [0]: a rectangle at (9,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (4,1) with size (1,6) and color grey and mask full
  [011]: a rectangle at (6,0) with size (1,5) and color pink and mask full
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,7) and color black and layers
  [0]: a rectangle at (9,0) with size (1,7) and color cyan and mask full
  [01]: a rectangle at (6,0) with size (1,5) and color pink and mask full
  [011]: a rectangle at (4,1) with size (1,6) and color grey and mask full
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,7) and color black and layers
  [0]: a rectangle at (6,0) with size (1,5) and color pink and mask full
  [01]: a rectangle at (9,0) with size (1,7) and color cyan and mask full
  [011]: a rectangle at (4,1) with size (1,6) and color grey and mask full
diff:   layer[0].color
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 38 wrong pixels (generated / expected)

TRAIN beb8660c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,4) and color black and layers
  [0]: a rectangle at (6,0) with size (1,4) and color cyan and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color red and mask full
  [011]: a rectangle at (4,1) with size (1,2) and color green and mask full
diff: 
delta: (0,3)=1 
   (88.7 bits)
data: a background with size (7,4) and color black and layers
  [0]: a rectangle at (6,0) with size (1,4) and color cyan and mask full
  [01]: a rectangle at (5,1) with size (1,3) and color red and mask full
  [011]: a rectangle at (4,2) with size (1,2) and color green and mask full
  [0111]: a rectangle at (3,3) with size (1,1) and color blue and mask full
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,4) and color black and layers
  [0]: a rectangle at (6,0) with size (1,4) and color cyan and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color red and mask full
  [011]: a rectangle at (4,1) with size (1,2) and color green and mask full
diff: 
delta: (0,3)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,4) and color black and layers
  [0]: a rectangle at (6,0) with size (1,4) and color cyan and mask full
  [01]: a rectangle at (4,1) with size (1,2) and color green and mask full
  [011]: a rectangle at (2,0) with size (1,3) and color red and mask full
diff: 
delta: (0,3)=1 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,4) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color red and mask full
  [01]: a rectangle at (6,0) with size (1,4) and color cyan and mask full
  [011]: a rectangle at (4,1) with size (1,2) and color green and mask full
diff:   layer[0].color
delta: (0,3)=1 
! 18 wrong pixels (generated / expected)

TRAIN beb8660c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (1,2) and color red and mask full
  [011]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
diff: 
delta:
   (59.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (1,2) and color red and mask full
  [011]: a rectangle at (0,2) with size (1,1) and color yellow and mask full
  [0111]: a rectangle at (0,0) with size (1,2) and color black and mask full
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (1,2) and color red and mask full
  [011]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
  [011]: a rectangle at (0,0) with size (1,2) and color red and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color red and mask full
  [01]: a rectangle at (2,0) with size (1,3) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (1,1) and color yellow and mask full
diff:   layer[0].color
delta:
! 8 wrong pixels (generated / expected)

TRAIN beb8660c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,8) and color black and layers
  [0]: a rectangle at (10,0) with size (1,8) and color cyan and mask full
  [01]: a rectangle at (6,0) with size (1,7) and color red and mask full
  [011]: a rectangle at (7,2) with size (1,6) and color green and mask full
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,8) and color black and layers
  [0]: a rectangle at (10,0) with size (1,8) and color cyan and mask full
  [01]: a rectangle at (7,2) with size (1,6) and color green and mask full
  [011]: a rectangle at (6,0) with size (1,7) and color red and mask full
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,8) and color black and layers
  [0]: a rectangle at (6,0) with size (1,7) and color red and mask full
  [01]: a rectangle at (10,0) with size (1,8) and color cyan and mask full
  [011]: a rectangle at (7,2) with size (1,6) and color green and mask full
diff:   layer[0].color
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 48 wrong pixels (generated / expected)

TEST beb8660c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1348.8 bits (1348.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-99] Checking task c0f76784.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 19059.9 = 19068.9
DL output with Mo: L = 9.0 + 26510.8 = 26519.7
DL input+output M: L = 17.9 + 45570.7 = 45588.6

# learning a model for train pairs
45588.6	
37248.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
29331.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24266.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19441.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16069.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
13483.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
12130.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 4914.4 = 4974.2
DL output with Mo: L = 76.0 + 7080.2 = 7156.2
DL input+output M: L = 135.8 + 11994.5 = 12130.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,7) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (2,2) with size (3,3) and color grey and mask 111101111
  [011]: a rectangle at (6,6) with size (4,4) and color grey and mask 1111100110011111
diff: 
delta:
   (167.6 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,7) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (6,6) with size (4,4) and color grey and mask full
  [011]: a rectangle at (1,8) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (2,2) with size (3,3) and color grey and mask full
diff: 
delta: (3,3)=6  (7,7)=7# (7,8)=7# (8,7)=7# (8,8)=7#
   (268.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,7) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (2,2) with size (3,3) and color grey and mask 111101111
  [011]: a rectangle at (6,6) with size (4,4) and color grey and mask 1111100110011111
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN c0f76784.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (4,6) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (7,1) with size (3,3) and color grey and mask 111101111
  [011]: a rectangle at (0,1) with size (4,4) and color grey and mask 1111100110011111
diff: 
delta:
   (167.6 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (4,6) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (0,1) with size (4,4) and color grey and mask full
  [011]: a rectangle at (5,7) with size (3,3) and color cyan and mask full
  [0111]: a rectangle at (7,1) with size (3,3) and color grey and mask full
diff: 
delta: (1,2)=7# (1,3)=7# (2,2)=7# (2,3)=7# (8,2)=6 
   (268.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (4,6) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (7,1) with size (3,3) and color grey and mask 111101111
  [011]: a rectangle at (0,1) with size (4,4) and color grey and mask 1111100110011111
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN c0f76784.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (7,4) with size (4,4) and color grey and mask 1111100110011111
  [011]: a rectangle at (8,5) with size (2,2) and color black and mask full
diff: 
delta:
   (156.3 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (2,2) with size (3,3) and color cyan and mask full
  [011]: a rectangle at (8,5) with size (2,2) and color orange and mask full
  [0111]: a rectangle at (7,4) with size (4,4) and color grey and mask full
diff: 
delta:
   (170.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (7,4) with size (4,4) and color grey and mask 1111100110011111
  [011]: a rectangle at (8,5) with size (2,2) and color black and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN c0f76784.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color grey and mask 1111110001100011000111111
  [01]: a rectangle at (4,8) with size (3,3) and color grey and mask 111101111
  [011]: a rectangle at (8,4) with size (4,4) and color grey and mask 1111100110011111
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TEST c0f76784.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7080.2 bits (7080.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-98] Checking task c1d99e64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 51077.4 = 51086.4
DL output with Mo: L = 9.0 + 51077.4 = 51086.4
DL input+output M: L = 17.9 + 102154.8 = 102172.7

# learning a model for train pairs
102172.7	
91487.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
82835.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
65486.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
57721.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
56510.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 17259.8 = 17319.6
DL output with Mo: L = 43.4 + 39147.9 = 39191.2
DL input+output M: L = 103.1 + 56407.7 = 56510.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,19) and color black and layers
  [0]: a rectangle at (0,9) with size (8,10) and color blue and mask 11110111010101111111100011010011111111111111111111010101000111011111101110101011
  [01]: a rectangle at (9,12) with size (3,7) and color blue and mask 111100110101001111111
  [011]: a rectangle at (0,0) with size (8,8) and color blue and mask 1111001101011001011010111110110111111101110011111111010111110001
diff: 
delta: (9,0)=1  (9,1)=1  (9,2)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,9)=1  (10,0)=1  (10,1)=1  (10,4)=1  (10,5)=1  (10,9)=1  (10,10)=1  (11,0)=1  (11,2)=1  (11,4)=1  (11,7)=1  (11,9)=1  (11,10)=1  (11,11)=1 
   (679.8 bits)
data: a background with size (12,19) and color blue and layers
  [0]: a rectangle at (3,9) with size (2,10) and color blue and mask full
  [01]: a rectangle at (8,0) with size (1,19) and color red and mask full
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,8)=2  (0,11)=0  (0,13)=0  (0,15)=0  (1,1)=0  (1,3)=0  (1,8)=2  (1,9)=0  (1,16)=0  (2,4)=0  (2,5)=0  (2,8)=2  (2,10)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,16)=0  (2,18)=0  (3,1)=0  (3,8)=2  (4,1)=0  (4,4)=0  (4,8)=2  (5,2)=0  (5,4)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,1)=0  (6,2)=0  (6,5)=0  (6,7)=0  (6,8)=2  (6,16)=0  (6,18)=0  (7,2)=0  (7,3)=0  (7,8)=2  (7,10)=0  (7,14)=0  (9,3)=0  (9,4)=0  (9,8)=2  (9,10)=0  (9,11)=0  (10,2)=0  (10,3)=0  (10,6)=0  (10,7)=0  (10,8)=2  (10,11)=0  (10,12)=0  (10,13)=0  (10,15)=0  (10,17)=0  (11,1)=0  (11,3)=0  (11,5)=0  (11,6)=0  (11,8)=2  (11,13)=0  (11,14)=0 
   (1422.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color black and layers
  [0]: a rectangle at (0,9) with size (8,10) and color blue and mask 11110111010101111111100011010011111111111111111111010101000111011111101110101011
  [01]: a rectangle at (9,12) with size (3,7) and color blue and mask 111100110101001111111
  [011]: a rectangle at (0,0) with size (8,8) and color blue and mask 1111001101011001011010111110110111111101110011111111010111110001
diff: 
delta: (9,0)=1  (9,1)=1  (9,2)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,9)=1  (10,0)=1  (10,1)=1  (10,4)=1  (10,5)=1  (10,9)=1  (10,10)=1  (11,0)=1  (11,2)=1  (11,4)=1  (11,7)=1  (11,9)=1  (11,10)=1  (11,11)=1 
! size mismatch, 10x10 instead of 12x19

TRAIN c1d99e64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (0,5) with size (10,5) and color cyan and mask 11111101111100111111010110001110011111111111011111
  [01]: a rectangle at (0,0) with size (12,4) and color cyan and mask 111110101011100100111101011111111101101100101111
  [011]: a rectangle at (0,11) with size (12,3) and color cyan and mask 10101010111110100111111011110111110
diff: 
delta: (11,5)=8  (11,6)=8  (11,7)=8  (11,8)=8  (11,9)=8 
   (358.7 bits)
data: a background with size (12,14) and color cyan and layers
  [0]: a rectangle at (0,4) with size (12,1) and color red and mask full
  [01]: a rectangle at (0,10) with size (12,1) and color red and mask full
diff: 
delta: (0,11)=0  (1,0)=0  (1,2)=0  (1,3)=0  (1,5)=0  (2,2)=0  (2,11)=0  (3,1)=0  (3,7)=0  (3,8)=0  (3,13)=0  (4,7)=0  (4,8)=0  (4,9)=0  (5,3)=0  (5,7)=0  (5,9)=0  (6,1)=0  (6,11)=0  (6,12)=0  (7,2)=0  (7,3)=0  (7,6)=0  (7,7)=0  (7,11)=0  (8,1)=0  (8,2)=0  (8,8)=0  (9,2)=0  (9,11)=0  (9,13)=0  (10,0)=0  (10,2)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,12)=0  (11,11)=0  (11,13)=0 
   (853.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  [0]: a rectangle at (0,5) with size (10,5) and color cyan and mask 11111101111100111111010110001110011111111111011111
  [01]: a rectangle at (0,0) with size (12,4) and color cyan and mask 111110101011100100111101011111111101101100101111
  [011]: a rectangle at (0,11) with size (12,3) and color cyan and mask 10101010111110100111111011110111110
diff: 
delta: (11,5)=8  (11,6)=8  (11,7)=8  (11,8)=8  (11,9)=8 
! size mismatch, 10x10 instead of 12x14

TRAIN c1d99e64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,15) and color black and layers
  [0]: a rectangle at (3,2) with size (9,13) and color green and mask 11101001011111011101111110111111110110101111101111110011010011100111001010101110110011111111110111111110011010110010
  [01]: a rectangle at (13,2) with size (4,13) and color green and mask 101010011011110011011111010011010110100111101101001
  [011]: a rectangle at (0,0) with size (16,1) and color green and mask full
diff: 
delta: (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,8)=3  (0,9)=3  (0,10)=3  (0,12)=3  (0,14)=3  (1,2)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,10)=3  (1,13)=3  (2,0)=0  (6,0)=0  (12,0)=0 
   (687.5 bits)
data: a background with size (17,15) and color green and layers
  [0]: a rectangle at (0,1) with size (17,1) and color red and mask full
  [01]: a rectangle at (0,0) with size (17,15) and color red and mask 10000000000000010000000000000010000000000000010111111111111111000000000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000000000010111111111111111000000000000010000000000000010
diff: 
delta: (0,7)=0  (0,11)=0  (0,13)=0  (1,3)=0  (1,7)=0  (1,9)=0  (1,11)=0  (1,12)=0  (1,14)=0  (3,2)=0  (3,4)=0  (3,5)=0  (3,8)=0  (3,10)=0  (3,13)=0  (3,14)=0  (4,10)=0  (5,8)=0  (5,9)=0  (5,12)=0  (6,0)=0  (6,3)=0  (6,5)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,14)=0  (7,2)=0  (7,6)=0  (7,7)=0  (7,9)=0  (7,12)=0  (7,13)=0  (8,7)=0  (8,13)=0  (9,2)=0  (9,5)=0  (9,14)=0  (10,8)=0  (10,12)=0  (11,5)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,14)=0  (13,3)=0  (13,4)=0  (13,6)=0  (13,9)=0  (13,14)=0  (14,2)=0  (14,4)=0  (14,7)=0  (14,9)=0  (14,12)=0  (14,13)=0  (15,2)=0  (15,8)=0  (15,11)=0  (15,12)=0  (16,0)=0  (16,4)=0  (16,7)=0  (16,8)=0  (16,10)=0  (16,12)=0  (16,14)=0 
   (1639.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color black and layers
  [0]: a rectangle at (3,2) with size (9,13) and color green and mask 11101001011111011101111110111111110110101111101111110011010011100111001010101110110011111111110111111110011010110010
  [01]: a rectangle at (13,2) with size (4,13) and color green and mask 101010011011110011011111010011010110100111101101001
  [011]: a rectangle at (0,0) with size (16,1) and color green and mask full
diff: 
delta: (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,8)=3  (0,9)=3  (0,10)=3  (0,12)=3  (0,14)=3  (1,2)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,10)=3  (1,13)=3  (2,0)=0  (6,0)=0  (12,0)=0 
! size mismatch, 10x10 instead of 17x15

TRAIN c1d99e64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color black and layers
  [0]: a rectangle at (3,0) with size (9,25) and color yellow and mask full
  [01]: a rectangle at (13,7) with size (7,14) and color yellow and mask 1101110111011111111111110101111110101011111101101011111011111111001011111011010111111110011011110
  [011]: a rectangle at (21,7) with size (6,14) and color yellow and mask 1111011111011010001101101011010111110001111001110000111011011011010111101000011101
diff: 
delta: (0,0)=4  (0,2)=4  (0,4)=4  (0,5)=4  (0,8)=4  (0,9)=4  (0,10)=4  (0,11)=4  (0,13)=4  (0,14)=4  (0,15)=4  (0,16)=4  (0,17)=4  (0,19)=4  (0,20)=4  (0,22)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,5)=4  (1,7)=4  (1,8)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,14)=4  (1,15)=4  (1,17)=4  (1,18)=4  (1,19)=4  (1,20)=4  (1,22)=4  (3,1)=0  (3,5)=0  (3,6)=0  (3,12)=0  (3,21)=0  (3,24)=0  (4,2)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,14)=0  (4,18)=0  (4,21)=0  (5,3)=0  (5,6)=0  (5,17)=0  (5,19)=0  (5,21)=0  (5,23)=0  (6,1)=0  (6,2)=0  (6,4)=0  (6,6)=0  (6,13)=0  (6,15)=0  (6,19)=0  (6,21)=0  (7,5)=0  (7,6)=0  (7,8)=0  (7,10)=0  (7,11)=0  (7,14)=0  (7,15)=0  (7,19)=0  (7,20)=0  (7,21)=0  (7,22)=0  (7,24)=0  (8,0)=0  (8,3)=0  (8,6)=0  (8,9)=0  (8,12)=0  (8,15)=0  (8,16)=0  (8,18)=0  (8,20)=0  (8,21)=0  (8,23)=0  (9,3)=0  (9,6)=0  (9,7)=0  (9,13)=0  (9,14)=0  (9,16)=0  (9,20)=0  (9,21)=0  (10,1)=0  (10,5)=0  (10,6)=0  (10,8)=0  (10,11)=0  (10,14)=0  (10,17)=0  (10,20)=0  (10,21)=0  (10,22)=0  (10,23)=0  (11,2)=0  (11,4)=0  (11,5)=0  (11,6)=0  (11,10)=0  (11,17)=0  (11,21)=0  (13,1)=4  (13,2)=4  (13,23)=4  (13,24)=4  (14,0)=4  (14,1)=4  (14,2)=4  (14,3)=4  (14,4)=4  (14,5)=4  (14,22)=4  (14,23)=4  (14,24)=4  (15,0)=4  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (15,22)=4  (15,24)=4  (16,1)=4  (16,2)=4  (16,3)=4  (16,4)=4  (16,5)=4  (16,22)=4  (16,23)=4  (17,1)=4  (17,2)=4  (17,3)=4  (17,4)=4  (17,23)=4  (17,24)=4  (18,0)=4  (18,1)=4  (18,2)=4  (18,4)=4  (18,5)=4  (19,0)=4  (19,1)=4  (19,3)=4  (19,4)=4  (19,5)=4  (19,23)=4  (19,24)=4  (21,0)=4  (21,1)=4  (21,2)=4  (21,3)=4  (21,5)=4  (21,22)=4  (21,23)=4  (21,24)=4  (22,1)=4  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,22)=4  (22,23)=4  (22,24)=4  (23,0)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,5)=4  (23,22)=4  (23,23)=4  (24,0)=4  (24,2)=4  (24,4)=4  (24,5)=4  (24,23)=4  (25,0)=4  (25,1)=4  (25,3)=4  (25,5)=4  (25,22)=4  (25,23)=4  (25,24)=4  (26,0)=4  (26,3)=4  (26,4)=4  (26,5)=4  (26,22)=4  (26,23)=4  (26,24)=4 
! size mismatch, 10x10 instead of 27x25

TEST c1d99e64.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 39147.9 bits (39147.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-97] Checking task c3e719e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2730.2 = 2739.2
DL output with Mo: L = 9.0 + 19632.1 = 19641.1
DL input+output M: L = 17.9 + 22362.3 = 22380.3

# learning a model for train pairs
22380.3	
18001.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16771.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15901.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15182.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
14825.7	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
14677.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14538.6	OUT DEF: layer[0].color={color}
14398.9	OUT DEF: layer[01111].color={layer[0].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color {color} and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 2564.7 = 2591.3
DL output with Mo: L = 91.9 + 11715.7 = 11807.6
DL input+output M: L = 118.5 + 14280.4 = 14398.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,1) with size (2,2) and color cyan and mask 1001
diff: 
delta: (0,2)=7# (1,0)=9# (2,0)=7# (2,1)=9#
   (109.4 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color green and mask 100000000010000000001000000000100000000010000000001000000000100000000010000000001
  [01]: a rectangle at (0,1) with size (2,2) and color cyan and mask 1101
  [011]: a rectangle at (1,0) with size (2,2) and color brown and mask full
  [0111]: a rectangle at (3,4) with size (2,2) and color cyan and mask full
  [01111]: a rectangle at (6,7) with size (2,2) and color cyan and mask full
diff: 
delta: (0,2)=7# (2,0)=7# (3,5)=7# (4,3)=9# (5,3)=7# (5,4)=9# (6,8)=7# (7,6)=9# (8,6)=7# (8,7)=9#
   (420.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,1) with size (2,2) and color cyan and mask 1001
diff: 
delta: (0,2)=7# (1,0)=9# (2,0)=7# (2,1)=9#
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,2) and color green and mask full
diff: 
delta: (0,1)=6 
   (58.4 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color cyan and mask 111111111100100100101101101111000000100000000101000000111000111100000100101000101
  [01]: a rectangle at (7,0) with size (1,8) and color green and mask full
  [011]: a rectangle at (6,1) with size (1,7) and color pink and mask full
  [0111]: a rectangle at (1,6) with size (7,2) and color green and mask full
  [01111]: a rectangle at (1,0) with size (1,2) and color green and mask full
diff: 
delta: (0,1)=6  (0,7)=6  (3,7)=6 
   (297.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (1,0) with size (1,2) and color green and mask full
diff: 
delta: (0,1)=6 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color green and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 111100101
diff: 
delta: (0,1)=6 
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (1,2) with size (2,1) and color cyan and mask full
diff: 
delta: (0,0)=6  (1,0)=4  (1,1)=6 
   (88.6 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,4) with size (1,5) and color brown and mask full
  [01]: a rectangle at (2,3) with size (1,5) and color brown and mask full
  [011]: a rectangle at (6,1) with size (1,5) and color brown and mask full
  [0111]: a rectangle at (8,0) with size (1,5) and color brown and mask full
  [01111]: a rectangle at (1,5) with size (2,4) and color cyan and mask full
diff: 
delta: (0,3)=6  (0,6)=6  (1,3)=4  (1,4)=6  (1,6)=4  (1,7)=6  (2,5)=8  (6,0)=6  (6,3)=6  (7,0)=4  (7,1)=6  (7,2)=8  (7,3)=4  (7,4)=6  (7,5)=8  (8,2)=8  (8,5)=8 
   (453.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (1,2) with size (2,1) and color cyan and mask full
diff: 
delta: (0,0)=6  (1,0)=4  (1,1)=6 
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 10100011
diff: 
delta: (1,1)=4  (2,0)=5#
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [0]: a rectangle at (0,2) with size (1,1) and color orange and mask full
diff: 
delta: (1,0)=7# (1,1)=4  (2,0)=5# (2,2)=7#
! size mismatch, 10x10 instead of 9x9

TEST c3e719e8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 11715.7 bits (11715.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-96] Checking task c3f564a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 123341.7 = 123350.7
DL output with Mo: L = 9.0 + 121387.9 = 121396.8
DL input+output M: L = 17.9 + 244729.6 = 244747.5

# learning a model for train pairs
244747.5	
228851.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
214660.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
200839.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
188580.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
178108.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 112852.0 = 112878.6
DL output with Mo: L = 76.0 + 65153.4 = 65229.4
DL input+output M: L = 102.6 + 178005.4 = 178108.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color red and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 1000010000100001000010000000001000010000000001000010000000001000010000100001000010000000001000010000000001000010000100001000010000100001000010000100001000010000100001000010000100001000010000000001000010000000001000010000000001000010000100001000010000100001
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=5# (0,7)=3  (0,8)=4  (0,9)=5# (0,12)=3  (0,13)=4  (0,14)=5# (1,1)=0  (1,2)=0  (1,3)=0  (1,6)=3  (1,7)=4  (1,8)=5# (1,11)=3  (1,12)=4  (1,13)=5# (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,5)=3  (2,6)=4  (2,7)=5# (2,10)=3  (2,11)=4  (2,12)=5# (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,6)=5# (3,9)=3  (3,10)=4  (3,11)=5# (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,5)=5# (4,8)=3  (4,9)=4  (4,10)=5# (4,13)=3  (4,14)=4  (4,15)=5# (5,2)=3  (5,3)=4  (5,4)=5# (5,7)=3  (5,8)=4  (5,9)=5# (5,12)=0  (5,13)=0  (5,14)=5# (6,1)=3  (6,2)=4  (6,3)=5# (6,6)=3  (6,7)=4  (6,8)=5# (6,11)=3  (6,12)=0  (6,13)=0  (7,0)=3  (7,1)=4  (7,2)=5# (7,5)=3  (7,6)=4  (7,7)=5# (7,10)=3  (7,11)=4  (7,12)=5# (7,15)=3  (8,0)=4  (8,1)=5# (8,4)=3  (8,5)=4  (8,6)=5# (8,9)=3  (8,10)=4  (8,11)=5# (8,14)=3  (8,15)=4  (9,0)=5# (9,3)=3  (9,4)=4  (9,5)=5# (9,8)=3  (9,9)=4  (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=0  (9,14)=4  (9,15)=5# (10,2)=3  (10,3)=4  (10,4)=5# (10,7)=3  (10,8)=4  (10,9)=5# (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,14)=5# (11,1)=3  (11,2)=4  (11,3)=5# (11,6)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (12,0)=3  (12,1)=4  (12,2)=5# (12,5)=3  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=3  (12,11)=4  (12,12)=5# (12,15)=3  (13,0)=4  (13,1)=5# (13,4)=3  (13,5)=4  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=4  (13,11)=5# (13,14)=3  (13,15)=4  (14,0)=5# (14,3)=3  (14,4)=4  (14,5)=5# (14,6)=0  (14,7)=0  (14,8)=0  (14,9)=0  (14,10)=5# (14,13)=3  (14,14)=4  (14,15)=5# (15,2)=3  (15,3)=4  (15,4)=5# (15,7)=3  (15,8)=4  (15,9)=5# (15,12)=3  (15,13)=4  (15,14)=5#
   (3541.1 bits)
data: a background with size (16,16) and color green and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 1000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001
  [01]: a rectangle at (0,0) with size (15,15) and color grey and mask 110001100011001100011000110011000110001100110001100011000100011000110001000110001100011001100011000110011000110001100110001100011000100011000110001000110001100011001100011000110011000110001100110001100011000100011000110001
  [011]: a rectangle at (1,1) with size (15,15) and color red and mask 100011000110001000111001110011001110011100111011100111001110111001110011100110011100111001000111001110011001110011100111011100111001110111001110011100110011100111001000111001110011001110011100111011100111001110111001110011100
  [0111]: a rectangle at (0,0) with size (14,14) and color yellow and mask 1111011110111111101111011110110111101111001011110111101101111011110111111101111011111110111101111011011110111100101111011110110111101111011111110111101111111011110111101101111011110010011100111001
diff: 
delta: (0,1)=2  (0,6)=2  (0,11)=2  (1,0)=2  (3,15)=4  (4,14)=4  (4,15)=5# (6,0)=2  (8,15)=4  (9,14)=4  (9,15)=5# (11,0)=2  (13,15)=4  (14,4)=4  (14,9)=4  (14,14)=4  (14,15)=5# (15,3)=4  (15,4)=5# (15,8)=4  (15,9)=5# (15,13)=4  (15,14)=5#
   (1538.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color red and layers
  [0]: a rectangle at (0,0) with size (16,16) and color blue and mask 1000010000100001000010000000001000010000000001000010000000001000010000100001000010000000001000010000000001000010000100001000010000100001000010000100001000010000100001000010000100001000010000000001000010000000001000010000000001000010000100001000010000100001
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=5# (0,7)=3  (0,8)=4  (0,9)=5# (0,12)=3  (0,13)=4  (0,14)=5# (1,1)=0  (1,2)=0  (1,3)=0  (1,6)=3  (1,7)=4  (1,8)=5# (1,11)=3  (1,12)=4  (1,13)=5# (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,5)=3  (2,6)=4  (2,7)=5# (2,10)=3  (2,11)=4  (2,12)=5# (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,6)=5# (3,9)=3  (3,10)=4  (3,11)=5# (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,5)=5# (4,8)=3  (4,9)=4  (4,10)=5# (4,13)=3  (4,14)=4  (4,15)=5# (5,2)=3  (5,3)=4  (5,4)=5# (5,7)=3  (5,8)=4  (5,9)=5# (5,12)=0  (5,13)=0  (5,14)=5# (6,1)=3  (6,2)=4  (6,3)=5# (6,6)=3  (6,7)=4  (6,8)=5# (6,11)=3  (6,12)=0  (6,13)=0  (7,0)=3  (7,1)=4  (7,2)=5# (7,5)=3  (7,6)=4  (7,7)=5# (7,10)=3  (7,11)=4  (7,12)=5# (7,15)=3  (8,0)=4  (8,1)=5# (8,4)=3  (8,5)=4  (8,6)=5# (8,9)=3  (8,10)=4  (8,11)=5# (8,14)=3  (8,15)=4  (9,0)=5# (9,3)=3  (9,4)=4  (9,5)=5# (9,8)=3  (9,9)=4  (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=0  (9,14)=4  (9,15)=5# (10,2)=3  (10,3)=4  (10,4)=5# (10,7)=3  (10,8)=4  (10,9)=5# (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,14)=5# (11,1)=3  (11,2)=4  (11,3)=5# (11,6)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (12,0)=3  (12,1)=4  (12,2)=5# (12,5)=3  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=3  (12,11)=4  (12,12)=5# (12,15)=3  (13,0)=4  (13,1)=5# (13,4)=3  (13,5)=4  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=4  (13,11)=5# (13,14)=3  (13,15)=4  (14,0)=5# (14,3)=3  (14,4)=4  (14,5)=5# (14,6)=0  (14,7)=0  (14,8)=0  (14,9)=0  (14,10)=5# (14,13)=3  (14,14)=4  (14,15)=5# (15,2)=3  (15,3)=4  (15,4)=5# (15,7)=3  (15,8)=4  (15,9)=5# (15,12)=3  (15,13)=4  (15,14)=5#
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (0,4) with size (10,10) and color red and mask 1000000001001000001001000001000000001000000001000000001000001001000001001000001001000001000
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,14)=3  (6,15)=4  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,13)=3  (7,14)=4  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,13)=4  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,12)=4  (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,11)=4  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,10)=4  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,9)=4  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,8)=4  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,7)=4  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,6)=4  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
   (3982.2 bits)
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color yellow and mask 1000001000001001000001000001001000001000001001000001000001000000001000001000000001000001000000001000001000001001000001000001001000001000001001000001000001000000001000001000000001000001000000001000001000001001000001000001001000001000001001000001000001000
  [01]: a rectangle at (0,0) with size (15,15) and color green and mask 11000011000011110000110000110100001100001100000011000011000000110000110000001100001100001011000011000011110000110000110100001100001100000011000011000000110000110000001100001100001011000011000011110000110000110100001100001100
  [011]: a rectangle at (1,1) with size (15,15) and color grey and mask 1100001100001011100011100011111000111000111110001110001110000011100011100000111000111000001110001110001011100011100011111000111000111110001110001110000011100011100000111000111000001110001110001011100011100011111000111000111
  [0111]: a rectangle at (0,0) with size (14,14) and color red and mask 1100111100111110011110011110001111001111000111100111100011110011110011111001111001111100111100111110011110011110001111001111000111100111100011110011110011111001111001111100111100111110001110001110
diff: 
delta: (0,0)=1  (0,4)=5# (0,6)=1  (0,10)=5# (0,12)=1  (1,5)=1  (1,11)=1  (2,4)=1  (2,10)=1  (3,3)=1  (3,9)=1  (3,15)=1  (4,0)=5# (4,2)=1  (4,8)=1  (4,14)=1  (4,15)=2  (5,1)=1  (5,7)=1  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,6)=1  (6,12)=1  (7,5)=1  (7,11)=1  (8,4)=1  (8,10)=1  (9,3)=1  (9,9)=1  (9,15)=1  (10,0)=5# (10,2)=1  (10,8)=1  (10,14)=1  (10,15)=2  (11,1)=1  (11,7)=1  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=1  (12,6)=1  (12,12)=1  (13,5)=1  (13,11)=1  (14,4)=1  (14,5)=2  (14,10)=1  (14,11)=2  (15,3)=1  (15,4)=2  (15,5)=3  (15,9)=1  (15,10)=2  (15,11)=3  (15,15)=1 
   (2203.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (0,4) with size (10,10) and color red and mask 1000000001001000001001000001000000001000000001000000001000001001000001001000001001000001000
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,14)=3  (6,15)=4  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,13)=3  (7,14)=4  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,13)=4  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,12)=4  (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,11)=4  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,10)=4  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,9)=4  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,8)=4  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,7)=4  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,6)=4  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (0,0) with size (16,16) and color red and mask 100000010000001100000010000001000000010000001000000010000001000000010000001000000000000001000000010000001000000010000001000000110000001000000100000001000000100000001000000000000001000000000000001000000100000001000000100000001000000100000011000000100000010
diff: 
delta: (0,0)=1  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,15)=3  (2,0)=3  (2,5)=1  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,14)=3  (2,15)=4  (3,0)=4  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (8,5)=7# (8,6)=1  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,15)=3  (9,0)=3  (9,5)=1  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,15)=7# (13,0)=7# (13,1)=1  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,10)=3  (13,15)=1  (14,0)=1  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,9)=3  (14,10)=4  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,15)=3 
   (3762.0 bits)
data: a background with size (16,16) and color pink and layers
  [0]: a rectangle at (0,0) with size (16,16) and color red and mask 100000010000001100000010000001000000010000001000000010000001000000010000001000000010000001000000010000001000000010000001000000110000001000000100000001000000100000001000000100000001000000100000001000000100000001000000100000001000000100000011000000100000010
  [01]: a rectangle at (0,0) with size (15,15) and color blue and mask 100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011000001100000110000011
  [011]: a rectangle at (1,1) with size (15,15) and color green and mask 110000011000001110000111000011000001110000111000011100001110000111000011100001110000111000011100001110000111000011100001110000111000011000001110000111000011100001110000111000011100001110000111000011100001110000111000011100001
  [0111]: a rectangle at (0,0) with size (14,14) and color orange and mask 1111000111100111100011110011110001111001111000111100011100011110000110001111000111000111100011100011110001111001111000111100111100011110011110001111000111000111100001100011110001110000111000011
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=5# (0,9)=3  (0,10)=4  (0,11)=5# (1,2)=4  (1,3)=5# (1,9)=4  (1,10)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,8)=4  (2,9)=5# (2,15)=4  (3,0)=4  (3,1)=5# (3,7)=4  (3,8)=5# (3,14)=4  (3,15)=5# (4,0)=5# (4,6)=4  (4,7)=5# (4,13)=4  (4,14)=5# (5,5)=4  (5,6)=5# (5,12)=4  (5,13)=5# (5,15)=7# (6,4)=4  (6,5)=5# (6,11)=4  (6,12)=5# (6,14)=7# (6,15)=1  (7,3)=4  (7,4)=5# (7,10)=4  (7,11)=5# (8,2)=4  (8,3)=5# (8,9)=4  (8,10)=5# (9,0)=3  (9,1)=4  (9,2)=5# (9,8)=4  (9,9)=5# (9,15)=4  (10,0)=4  (10,1)=5# (10,7)=4  (10,8)=5# (10,14)=4  (10,15)=5# (11,0)=5# (11,6)=4  (11,7)=5# (11,13)=4  (11,14)=5# (12,5)=4  (12,6)=5# (12,12)=4  (12,13)=5# (12,15)=7# (13,4)=4  (13,5)=5# (13,11)=4  (13,12)=5# (13,14)=7# (13,15)=1  (14,3)=4  (14,4)=5# (14,6)=7# (14,10)=4  (14,11)=5# (14,13)=7# (15,2)=4  (15,3)=5# (15,5)=7# (15,6)=1  (15,9)=4  (15,10)=5# (15,12)=7# (15,13)=1 
   (2772.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (0,0) with size (16,16) and color red and mask 100000010000001100000010000001000000010000001000000010000001000000010000001000000000000001000000010000001000000010000001000000110000001000000100000001000000100000001000000000000001000000000000001000000100000001000000100000001000000100000011000000100000010
diff: 
delta: (0,0)=1  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,15)=3  (2,0)=3  (2,5)=1  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,14)=3  (2,15)=4  (3,0)=4  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (8,5)=7# (8,6)=1  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,15)=3  (9,0)=3  (9,5)=1  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,15)=7# (13,0)=7# (13,1)=1  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,10)=3  (13,15)=1  (14,0)=1  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,9)=3  (14,10)=4  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,15)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  [0]: a rectangle at (2,2) with size (14,14) and color red and mask 10000000100001000000010000100000001000010000000100001000000010000100000001000000000000100000000000010000000000001000000000000100000000000010000000000001000000000000100000001000010000000100000
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,10)=3  (0,11)=4  (0,12)=5# (0,13)=6  (0,14)=7# (0,15)=8  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=8  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,14)=8  (1,15)=1  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=8  (2,6)=1  (2,8)=3  (2,9)=4  (2,10)=5# (2,11)=6  (2,12)=7# (2,13)=8  (2,14)=1  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=8  (3,5)=1  (3,7)=3  (3,8)=4  (3,9)=5# (3,10)=6  (3,11)=7# (3,12)=8  (3,13)=1  (3,15)=3  (4,0)=5# (4,1)=6  (4,6)=3  (4,7)=4  (4,8)=5# (4,9)=6  (4,10)=7# (4,11)=8  (4,12)=1  (4,14)=3  (4,15)=4  (5,0)=6  (5,1)=7# (5,9)=7# (5,10)=8  (5,11)=1  (5,13)=3  (5,14)=4  (5,15)=5# (6,0)=7# (6,1)=8  (6,9)=8  (6,10)=1  (6,12)=3  (6,13)=4  (6,14)=5# (6,15)=6  (7,0)=8  (7,1)=1  (7,9)=1  (7,11)=3  (7,12)=4  (7,13)=5# (7,14)=6  (7,15)=7# (8,0)=1  (8,1)=2  (8,2)=3  (8,3)=4  (8,4)=5# (8,10)=3  (8,11)=4  (8,12)=5# (8,13)=6  (8,14)=7# (8,15)=8  (9,0)=2  (9,1)=3  (9,2)=4  (9,3)=5# (9,4)=6  (9,5)=7# (9,6)=8  (9,7)=1  (9,9)=3  (9,10)=4  (9,11)=5# (9,12)=6  (9,13)=7# (9,14)=8  (9,15)=1  (10,0)=3  (10,1)=4  (10,2)=5# (10,3)=6  (10,4)=7# (10,5)=8  (10,6)=1  (10,8)=3  (10,9)=4  (10,10)=5# (10,11)=6  (10,12)=7# (10,13)=8  (10,14)=1  (11,0)=4  (11,1)=5# (11,2)=6  (11,3)=7# (11,4)=8  (11,5)=1  (11,7)=3  (11,8)=4  (11,9)=5# (11,10)=6  (11,11)=7# (11,12)=8  (11,13)=1  (11,15)=3  (12,0)=5# (12,1)=6  (12,2)=7# (12,3)=8  (12,4)=1  (12,6)=3  (12,9)=6  (12,10)=7# (12,11)=8  (12,12)=1  (12,14)=3  (12,15)=4  (13,0)=6  (13,1)=7# (13,2)=8  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=7# (13,10)=8  (13,11)=1  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=7# (14,1)=8  (14,2)=1  (14,4)=3  (14,5)=4  (14,6)=5# (14,7)=6  (14,8)=7# (14,9)=8  (14,10)=1  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=8  (15,1)=1  (15,3)=3  (15,4)=4  (15,5)=5# (15,6)=6  (15,7)=7# (15,8)=8  (15,9)=1  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=7#
! size mismatch, 10x10 instead of 16x16

TEST c3f564a4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 65153.4 bits (65153.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-95] Checking task c444b776.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13282.2 = 13291.1
DL output with Mo: L = 9.0 + 20971.0 = 20980.0
DL input+output M: L = 17.9 + 34253.2 = 34271.1

# learning a model for train pairs
34271.1	
29559.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24861.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20865.4	OUT DEF: layer[0]={layer[0]}
20427.1	OUT DEF: size={size}
20281.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17228.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16613.4	OUT DEF: layer[01]={layer[01]}
16466.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16373.0	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15763.6	OUT DEF: layer[011]={layer[011]}
15616.2	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
15438.0	OUT DEF: layer[0111].size={layer[011].size}
15329.9	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
15203.8	OUT DEF: layer[0111].mask={layer[011].mask}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: {layer[011]}
  [0111]: a rectangle at ? with size {layer[011].size} and color ? and mask {layer[011].mask}
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 5146.0 = 5205.8
DL output with Mo: L = 56.5 + 9941.4 = 9997.9
DL input+output M: L = 116.3 + 15087.4 = 15203.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [01]: a rectangle at (0,9) with size (19,1) and color yellow and mask full
  [011]: a rectangle at (12,2) with size (2,2) and color red and mask 110
diff: 
delta: (11,5)=7# (14,1)=3  (14,5)=3  (16,3)=8  (16,4)=7# (17,4)=8  (17,7)=3  (18,1)=7#
   (287.3 bits)
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [01]: a rectangle at (0,9) with size (19,1) and color yellow and mask full
  [011]: a rectangle at (12,2) with size (2,2) and color red and mask 110
  [0111]: a rectangle at (2,2) with size (2,2) and color red and mask 110
  [01111]: a rectangle at (2,12) with size (2,2) and color red and mask 110
diff: 
delta: (1,5)=7# (1,15)=7# (4,1)=3  (4,5)=3  (4,11)=3  (4,15)=3  (6,3)=8  (6,4)=7# (6,13)=8  (6,14)=7# (7,4)=8  (7,7)=3  (7,14)=8  (7,17)=3  (8,1)=7# (8,11)=7# (11,5)=7# (11,15)=7# (12,13)=2  (13,12)=2  (14,1)=3  (14,5)=3  (14,11)=3  (14,15)=3  (16,3)=8  (16,4)=7# (16,13)=8  (16,14)=7# (17,4)=8  (17,7)=3  (17,14)=8  (17,17)=3  (18,1)=7# (18,11)=7#
   (722.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [01]: a rectangle at (0,9) with size (19,1) and color yellow and mask full
  [011]: a rectangle at (12,2) with size (2,2) and color red and mask 110
diff: 
delta: (11,5)=7# (14,1)=3  (14,5)=3  (16,3)=8  (16,4)=7# (17,4)=8  (17,7)=3  (18,1)=7#
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [01]: a rectangle at (0,9) with size (19,1) and color yellow and mask full
  [011]: a rectangle at (16,3) with size (2,2) and color cyan and mask 1001
diff: 
delta: (11,5)=7# (12,3)=2  (13,2)=2  (14,1)=3  (14,5)=3  (16,4)=7# (17,7)=3  (18,1)=7#
! 42 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  [0]: a rectangle at (9,0) with size (1,19) and color yellow and mask full
  [01]: a rectangle at (12,2) with size (2,2) and color red and mask 110
  [011]: a rectangle at (0,9) with size (19,1) and color yellow and mask full
diff: 
delta: (11,5)=7# (14,1)=3  (14,5)=3  (16,3)=8  (16,4)=7# (17,4)=8  (17,7)=3  (18,1)=7#
! 58 wrong pixels (generated / expected)

TRAIN c444b776.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,9) and color black and layers
  [0]: a rectangle at (9,0) with size (1,9) and color yellow and mask full
  [01]: a rectangle at (7,5) with size (1,2) and color grey and mask full
  [011]: a rectangle at (6,1) with size (2,2) and color red and mask 110
diff: 
delta: (1,5)=5# (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
   (227.3 bits)
data: a background with size (19,9) and color black and layers
  [0]: a rectangle at (9,0) with size (1,9) and color yellow and mask full
  [01]: a rectangle at (7,5) with size (1,2) and color grey and mask full
  [011]: a rectangle at (6,1) with size (2,2) and color red and mask 110
  [0111]: a rectangle at (16,1) with size (2,2) and color red and mask 110
  [01111]: a rectangle at (17,5) with size (1,2) and color grey and mask full
diff: 
delta: (1,5)=5# (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2  (11,5)=5# (11,7)=2  (12,2)=1  (14,4)=1  (15,2)=1  (16,7)=2 
   (271.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  [0]: a rectangle at (9,0) with size (1,9) and color yellow and mask full
  [01]: a rectangle at (7,5) with size (1,2) and color grey and mask full
  [011]: a rectangle at (6,1) with size (2,2) and color red and mask 110
diff: 
delta: (1,5)=5# (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 20 wrong pixels (generated / expected)

TRAIN c444b776.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,29) and color black and layers
  [0]: a rectangle at (9,0) with size (1,29) and color yellow and mask full
  [01]: a rectangle at (0,9) with size (19,1) and color yellow and mask full
  [011]: a rectangle at (0,19) with size (19,1) and color yellow and mask full
diff: 
delta: (1,14)=3  (2,11)=2  (2,17)=2  (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 68 wrong pixels (generated / expected)

TEST c444b776.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9941.4 bits (9941.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-94] Checking task c59eb873.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2847.4 = 2856.3
DL output with Mo: L = 9.0 + 10771.7 = 10780.7
DL input+output M: L = 17.9 + 13619.1 = 13637.0

# learning a model for train pairs
13637.0	
9842.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7979.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7620.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7480.2	OUT DEF: layer[0].color={layer[0].color}
7342.2	OUT DEF: layer[01].color=red
7232.5	OUT DEF: color={color}
7135.7	IN  SHAPE at layer[01]: a point at ? with color ?
7065.0	OUT DEF: layer[01].mask=full
7030.0	OUT DEF: size=(?,?)
6814.3	OUT DEF: size.i={size.i + size.i}
6598.5	OUT DEF: size.j={size.j + size.j}
6563.5	OUT DEF: layer[0].pos=(?,?)
6455.6	OUT DEF: layer[0].pos.i={layer[0].pos.i + layer[0].pos.i}
6347.7	OUT DEF: layer[0].pos.j={layer[0].pos.j + layer[0].pos.j}
6312.7	OUT DEF: layer[0].size=(?,?)
6117.5	OUT DEF: layer[0].size.i={layer[0].size.i + layer[0].size.i}
5942.4	OUT DEF: layer[0].size.j={layer[0].size.j + layer[0].size.j}
5907.3	OUT DEF: layer[01].pos=(?,?)
5794.7	OUT DEF: layer[01].pos.j=0
5759.7	OUT DEF: layer[01].size=(?,?)
5620.6	OUT DEF: layer[01].size.i={layer[0].pos.j + 2}
5492.0	OUT DEF: layer[01].size.j=2
5457.0	IN  DEF: size=(?,?)
5421.9	IN  DEF: layer[0].pos=(?,?)
5386.9	IN  DEF: layer[0].size=(?,?)
5351.9	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i + size.i},{size.j + size.j}) and color {color} and layers
  [0]: a rectangle at ({layer[0].pos.i + layer[0].pos.i},{layer[0].pos.j + layer[0].pos.j}) with size ({layer[0].size.i + layer[0].size.i},{layer[0].size.j + layer[0].size.j}) and color {layer[0].color} and mask ?
  [01]: a rectangle at (?,0) with size ({layer[0].pos.j + 2},2) and color red and mask full
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a point at (?,?) with color ?

DL input  with Mi: L = 55.3 + 2203.5 = 2258.8
DL output with Mo: L = 119.5 + 2973.6 = 3093.1
DL input+output M: L = 174.8 + 5177.1 = 5351.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10111010
  [01]: a point at (0,2) with color blue
diff: 
delta: (2,0)=2 
   (71.8 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 1100001100111111111111001100001100
  [01]: a rectangle at (4,0) with size (2,2) and color red and mask full
diff: 
delta: (0,4)=1  (0,5)=1  (1,4)=1  (1,5)=1 
   (111.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10111010
  [01]: a point at (0,2) with color blue
diff: 
delta: (2,0)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,2) with size (1,1) and color blue and mask full
  [01]: a point at (2,0) with color red
diff: 
delta: (0,0)=0  (2,2)=0 
! 16 wrong pixels (generated / expected)

TRAIN c59eb873.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (2,2) and color blue and layers
  [0]: a rectangle at (1,0) with size (1,1) and color green and mask full
  [01]: a point at (0,0) with color red
diff: 
delta:
   (42.2 bits)
data: a background with size (4,4) and color blue and layers
  [0]: a rectangle at (2,0) with size (2,2) and color green and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color red and mask full
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color blue and layers
  [0]: a rectangle at (0,0) with size (1,1) and color red and mask full
  [01]: a point at (1,0) with color green
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color blue and layers
  [0]: a rectangle at (1,0) with size (1,1) and color green and mask full
  [01]: a point at (0,0) with color red
diff: 
delta:
correct output grid

TRAIN c59eb873.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,2) with size (4,2) and color green and mask 1110101
  [01]: a point at (1,1) with color blue
diff: 
delta: (0,0)=2  (1,0)=2  (3,3)=5#
   (106.4 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,4) with size (8,4) and color green and mask 110011111111110011001100110011
  [01]: a rectangle at (0,0) with size (4,2) and color red and mask full
diff: 
delta: (2,2)=1  (2,3)=1  (3,2)=1  (3,3)=1  (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
   (180.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,2) with size (4,2) and color green and mask 1110101
  [01]: a point at (1,1) with color blue
diff: 
delta: (0,0)=2  (1,0)=2  (3,3)=5#
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,2) with size (4,1) and color green and mask full
  [01]: a point at (1,1) with color blue
diff: 
delta: (0,0)=2  (1,0)=2  (2,3)=3  (3,3)=5#
! 12 wrong pixels (generated / expected)

TRAIN c59eb873.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (2,1) with size (3,1) and color grey and mask full
  [01]: a point at (0,3) with color orange
diff: 
delta: (0,0)=2  (0,4)=8  (1,0)=2  (1,1)=1  (1,2)=1  (2,2)=6  (2,3)=6  (3,0)=3  (3,2)=6 
! 34 wrong pixels (generated / expected)

TEST c59eb873.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2973.6 bits (2973.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-93] Checking task c8cbb738.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6764.0 = 6773.0
DL output with Mo: L = 9.0 + 5307.1 = 5316.1
DL input+output M: L = 17.9 + 12071.1 = 12089.1

# learning a model for train pairs
12089.1	
11431.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11343.1	OUT SHAPE at layer[01]: a point at ? with color ?
11205.1	OUT DEF: layer[01].color=blue
11137.9	IN  SHAPE at layer[0]: a point at ? with color ?
11068.8	IN  SHAPE at layer[01]: a point at ? with color ?
10998.0	IN  SHAPE at layer[011]: a point at ? with color ?
10925.3	IN  SHAPE at layer[0111]: a point at ? with color ?
10850.0	IN  SHAPE at layer[01111]: a point at ? with color ?
10770.6	IN  SHAPE at layer[011111]: a point at ? with color ?
10684.1	IN  SHAPE at layer[0111111]: a point at ? with color ?
10580.7	IN  SHAPE at layer[01111111]: a point at ? with color ?
10545.7	OUT DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a point at ? with color blue
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?
  [011111]: a point at ? with color ?
  [0111111]: a point at ? with color ?
  [01111111]: a point at ? with color ?

DL input  with Mi: L = 87.0 + 6061.6 = 6148.6
DL output with Mo: L = 42.7 + 4354.4 = 4397.1
DL input+output M: L = 129.7 + 10416.0 = 10545.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,11) and color green and layers
  [0]: a point at (0,7) with color yellow
  [01]: a point at (0,9) with color yellow
  [011]: a point at (2,4) with color blue
  [0111]: a point at (4,2) with color blue
  [01111]: a point at (4,6) with color blue
  [011111]: a point at (4,7) with color yellow
  [0111111]: a point at (4,9) with color yellow
  [01111111]: a point at (6,4) with color blue
diff: 
delta: (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
   (303.4 bits)
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,1) with size (3,3) and color green and mask full
  [01]: a point at (0,2) with color blue
diff: 
delta: (0,0)=2  (0,1)=4  (0,3)=4  (0,4)=2  (2,0)=1  (2,4)=1  (4,0)=2  (4,1)=4  (4,2)=1  (4,3)=4  (4,4)=2 
   (236.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color green and layers
  [0]: a point at (0,7) with color yellow
  [01]: a point at (0,9) with color yellow
  [011]: a point at (2,4) with color blue
  [0111]: a point at (4,2) with color blue
  [01111]: a point at (4,6) with color blue
  [011111]: a point at (4,7) with color yellow
  [0111111]: a point at (4,9) with color yellow
  [01111111]: a point at (6,4) with color blue
diff: 
delta: (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! size mismatch, 10x10 instead of 5x5

TRAIN c8cbb738.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color blue and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (1,3) with color cyan
  [011]: a point at (3,1) with color cyan
  [0111]: a point at (3,3) with color cyan
  [01111]: a point at (5,4) with color green
  [011111]: a point at (6,3) with color green
  [0111111]: a point at (6,5) with color green
  [01111111]: a point at (7,4) with color green
diff: 
delta:
   (146.0 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 10101010
  [01]: a point at (1,1) with color blue
diff: 
delta:
   (61.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color blue and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (1,3) with color cyan
  [011]: a point at (3,1) with color cyan
  [0111]: a point at (3,3) with color cyan
  [01111]: a point at (5,4) with color green
  [011111]: a point at (6,3) with color green
  [0111111]: a point at (6,5) with color green
  [01111111]: a point at (7,4) with color green
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN c8cbb738.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color yellow and layers
  [0]: a point at (1,2) with color blue
  [01]: a point at (1,6) with color blue
  [011]: a point at (5,2) with color blue
  [0111]: a point at (5,6) with color blue
  [01111]: a point at (5,9) with color orange
  [011111]: a point at (7,7) with color orange
  [0111111]: a point at (7,11) with color orange
  [01111111]: a point at (9,9) with color orange
diff: 
delta:
   (156.7 bits)
data: a background with size (5,5) and color orange and layers
  [0]: a rectangle at (0,0) with size (5,5) and color yellow and mask 101011111011101111101010
  [01]: a point at (0,0) with color blue
diff: 
delta: (0,4)=1  (4,0)=1  (4,4)=1 
   (137.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color yellow and layers
  [0]: a point at (1,2) with color blue
  [01]: a point at (1,6) with color blue
  [011]: a point at (5,2) with color blue
  [0111]: a point at (5,6) with color blue
  [01111]: a point at (5,9) with color orange
  [011111]: a point at (7,7) with color orange
  [0111111]: a point at (7,11) with color orange
  [01111111]: a point at (9,9) with color orange
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN c8cbb738.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color cyan and layers
  [0]: a point at (2,6) with color blue
  [01]: a point at (5,3) with color blue
  [011]: a point at (5,9) with color blue
  [0111]: a point at (6,11) with color red
  [01111]: a point at (6,17) with color red
  [011111]: a point at (8,6) with color blue
  [0111111]: a point at (8,11) with color red
  [01111111]: a point at (8,17) with color red
diff: 
delta: (9,3)=3  (9,9)=3  (10,14)=6  (10,16)=6  (15,3)=3  (15,9)=3  (16,14)=6  (16,16)=6 
! size mismatch, 10x10 instead of 7x7

TEST c8cbb738.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4354.4 bits (4354.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-92] Checking task c8f0f002.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4713.1 = 4722.1
DL output with Mo: L = 9.0 + 4713.1 = 4722.1
DL input+output M: L = 17.9 + 9426.2 = 9444.1

# learning a model for train pairs
9444.1	
8289.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7134.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5998.7	OUT DEF: layer[0]={layer[0]}
5585.8	OUT DEF: size={size}
5294.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5004.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4742.0	OUT DEF: layer[01].size={layer[01].size}
4506.4	OUT DEF: layer[01].pos={layer[01].pos}
4346.2	OUT DEF: layer[01].mask={layer[01].mask}
4106.7	OUT DEF: color={color}
3968.7	OUT DEF: layer[01].color=grey
3830.7	IN  DEF: layer[01].color=orange
3793.3	IN  DEF: color=blue
3655.3	IN  DEF: layer[0].color=cyan
3620.3	IN  DEF: size=(?,?)
3457.7	IN  DEF: size.i=3
3422.7	IN  DEF: layer[0].pos=(?,?)
3387.7	IN  DEF: layer[0].size=(?,?)
3352.7	IN  DEF: layer[01].pos=(?,?)
3317.7	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: {layer[0]}
  [01]: a rectangle at {layer[01].pos} with size {layer[01].size} and color grey and mask {layer[01].mask}
WHERE (Mi)
a background with size (3,?) and color blue and layers
  [0]: a rectangle at (?,?) with size (?,?) and color cyan and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color orange and mask ?

DL input  with Mi: L = 76.0 + 2389.3 = 2465.4
DL output with Mo: L = 30.8 + 821.5 = 852.3
DL input+output M: L = 106.8 + 3210.8 = 3317.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color blue and layers
  [0]: a rectangle at (0,5) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,2) with size (3,3) and color orange and mask 110011110
diff: 
delta: (0,1)=8  (0,2)=8  (2,0)=7#
   (102.9 bits)
data: a background with size (3,6) and color blue and layers
  [0]: a rectangle at (0,5) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,2) with size (3,3) and color grey and mask 110011110
diff: 
delta: (0,1)=8  (0,2)=8  (2,0)=5#
   (49.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color blue and layers
  [0]: a rectangle at (0,5) with size (3,1) and color cyan and mask full
  [01]: a rectangle at (0,2) with size (3,3) and color orange and mask 110011110
diff: 
delta: (0,1)=8  (0,2)=8  (2,0)=7#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color blue and layers
  [0]: a rectangle at (0,1) with size (1,2) and color cyan and mask full
  [01]: a rectangle at (0,2) with size (3,3) and color orange and mask 110011111
diff: 
delta: (0,5)=8  (1,5)=8  (2,0)=7# (2,5)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 110011001
  [01]: a rectangle at (0,2) with size (3,3) and color orange and mask 111011110
diff:   color  layer[0].color
delta: (1,4)=1  (2,0)=7#
! 2 wrong pixels (generated / expected)

TRAIN c8f0f002.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (3,4) and color orange and mask 100110100111
diff: 
delta:
   (51.9 bits)
data: a background with size (3,4) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (3,4) and color grey and mask 100110100111
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color blue and layers
  [0]: a rectangle at (1,1) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (3,4) and color orange and mask 100110100111
diff: 
delta:
correct output grid

TRAIN c8f0f002.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 110011001
  [01]: a rectangle at (1,0) with size (2,1) and color orange and mask full
diff: 
delta: (0,3)=7# (2,4)=7#
   (84.2 bits)
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 110011001
  [01]: a rectangle at (1,0) with size (2,1) and color grey and mask full
diff: 
delta: (0,3)=5# (2,4)=5#
   (32.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 110011001
  [01]: a rectangle at (1,0) with size (2,1) and color orange and mask full
diff: 
delta: (0,3)=7# (2,4)=7#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 110011001
  [01]: a rectangle at (0,3) with size (1,1) and color orange and mask full
diff: 
delta: (1,0)=7# (2,0)=7# (2,4)=7#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (3,3) and color cyan and mask 110011001
  [01]: a rectangle at (2,4) with size (1,1) and color orange and mask full
diff: 
delta: (0,3)=7# (1,0)=7# (2,0)=7#
! 3 wrong pixels (generated / expected)

TRAIN c8f0f002.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (1,0) with size (2,1) and color cyan and mask full
  [01]: a rectangle at (0,1) with size (3,4) and color orange and mask 10111101011
diff: 
delta: (2,4)=8 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (2,4) with size (1,1) and color cyan and mask full
  [01]: a rectangle at (0,1) with size (3,4) and color orange and mask 110111101011
diff: 
delta: (1,0)=8  (2,0)=8 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,1) with size (3,4) and color orange and mask 10111101011
  [01]: a rectangle at (1,0) with size (2,1) and color cyan and mask full
diff:   layer[01].color  layer[0].color
delta: (2,4)=8 
! 11 wrong pixels (generated / expected)

TEST c8f0f002.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 821.5 bits (821.5 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-91] Checking task c909285e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 274403.9 = 274412.9
DL output with Mo: L = 9.0 + 13446.6 = 13455.5
DL input+output M: L = 17.9 + 287850.5 = 287868.4

# learning a model for train pairs
287868.4	
216785.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
204754.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
197973.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
192572.1	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 179040.5 = 179116.5
DL output with Mo: L = 9.0 + 13446.6 = 13455.5
DL input+output M: L = 85.0 + 192487.1 = 192572.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color yellow and layers
  [0]: a rectangle at (0,0) with size (24,24) and color grey and mask
  [01]: a rectangle at (5,5) with size (7,7) and color green and mask 1111111100000110000011000001100000110000011111111
  [011]: a rectangle at (2,0) with size (1,23) and color red and mask full
  [0111]: a rectangle at (8,0) with size (1,23) and color red and mask full
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,3)=4  (2,7)=4  (2,15)=4  (2,19)=4  (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (8,3)=4  (8,7)=4  (8,15)=4  (8,19)=4  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
   (5488.5 bits)
data: a background with size (7,7) and color green and layers
diff: 
delta: (1,1)=0  (1,2)=4  (1,3)=2  (1,4)=8  (1,5)=0  (2,1)=4  (2,2)=4  (2,3)=4  (2,4)=4  (2,5)=4  (3,1)=2  (3,2)=4  (3,3)=2  (3,4)=2  (3,5)=2  (4,1)=8  (4,2)=4  (4,3)=2  (4,4)=8  (4,5)=8  (5,1)=0  (5,2)=4  (5,3)=2  (5,4)=8  (5,5)=0 
   (448.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color yellow and layers
  [0]: a rectangle at (0,0) with size (24,24) and color grey and mask
  [01]: a rectangle at (5,5) with size (7,7) and color green and mask 1111111100000110000011000001100000110000011111111
  [011]: a rectangle at (2,0) with size (1,23) and color red and mask full
  [0111]: a rectangle at (8,0) with size (1,23) and color red and mask full
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,3)=4  (2,7)=4  (2,15)=4  (2,19)=4  (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (8,3)=4  (8,7)=4  (8,15)=4  (8,19)=4  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (26,26) and color black and layers
  [0]: a rectangle at (0,0) with size (26,26) and color cyan and mask
  [01]: a rectangle at (2,2) with size (7,7) and color red and mask full
  [011]: a rectangle at (15,0) with size (1,26) and color green and mask full
  [0111]: a rectangle at (19,0) with size (1,26) and color green and mask full
diff: 
delta: (0,3)=3  (0,4)=1  (0,7)=3  (0,9)=1  (0,15)=3  (0,19)=3  (0,24)=1  (1,3)=3  (1,4)=1  (1,7)=3  (1,9)=1  (1,15)=3  (1,19)=3  (1,24)=1  (3,0)=3  (3,1)=3  (3,3)=3  (3,4)=3  (3,6)=3  (3,7)=3  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=3  (3,15)=3  (3,16)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,22)=3  (3,24)=3  (3,25)=3  (4,0)=1  (4,1)=1  (4,3)=3  (4,4)=1  (4,6)=1  (4,7)=3  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (6,3)=3  (6,4)=1  (6,6)=0  (6,7)=3  (6,9)=1  (6,15)=3  (6,19)=3  (6,24)=1  (7,0)=3  (7,1)=3  (7,3)=3  (7,4)=3  (7,6)=3  (7,7)=3  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,3)=3  (10,4)=1  (10,7)=3  (10,9)=1  (10,15)=3  (10,19)=3  (10,24)=1  (12,3)=3  (12,4)=1  (12,7)=3  (12,9)=1  (12,15)=3  (12,19)=3  (12,24)=1  (13,3)=3  (13,4)=1  (13,7)=3  (13,9)=1  (13,15)=3  (13,19)=3  (13,24)=1  (16,3)=3  (16,4)=1  (16,7)=3  (16,9)=1  (16,15)=3  (16,19)=3  (16,24)=1  (18,3)=3  (18,4)=1  (18,7)=3  (18,9)=1  (18,15)=3  (18,19)=3  (18,24)=1  (21,3)=3  (21,4)=1  (21,7)=3  (21,9)=1  (21,15)=3  (21,19)=3  (21,24)=1  (22,3)=3  (22,4)=1  (22,7)=3  (22,9)=1  (22,15)=3  (22,19)=3  (22,24)=1  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,3)=3  (25,4)=1  (25,7)=3  (25,9)=1  (25,15)=3  (25,19)=3  (25,24)=1 
   (4286.9 bits)
data: a background with size (7,7) and color red and layers
diff: 
delta: (1,1)=3  (1,2)=3  (1,3)=8  (1,4)=3  (1,5)=3  (2,1)=3  (2,2)=1  (2,3)=8  (2,4)=1  (2,5)=3  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (4,1)=3  (4,2)=1  (4,3)=8  (4,4)=0  (4,5)=3  (5,1)=3  (5,2)=3  (5,3)=8  (5,4)=3  (5,5)=3 
   (448.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color black and layers
  [0]: a rectangle at (0,0) with size (26,26) and color cyan and mask
  [01]: a rectangle at (2,2) with size (7,7) and color red and mask full
  [011]: a rectangle at (15,0) with size (1,26) and color green and mask full
  [0111]: a rectangle at (19,0) with size (1,26) and color green and mask full
diff: 
delta: (0,3)=3  (0,4)=1  (0,7)=3  (0,9)=1  (0,15)=3  (0,19)=3  (0,24)=1  (1,3)=3  (1,4)=1  (1,7)=3  (1,9)=1  (1,15)=3  (1,19)=3  (1,24)=1  (3,0)=3  (3,1)=3  (3,3)=3  (3,4)=3  (3,6)=3  (3,7)=3  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=3  (3,15)=3  (3,16)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,22)=3  (3,24)=3  (3,25)=3  (4,0)=1  (4,1)=1  (4,3)=3  (4,4)=1  (4,6)=1  (4,7)=3  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (6,3)=3  (6,4)=1  (6,6)=0  (6,7)=3  (6,9)=1  (6,15)=3  (6,19)=3  (6,24)=1  (7,0)=3  (7,1)=3  (7,3)=3  (7,4)=3  (7,6)=3  (7,7)=3  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,3)=3  (10,4)=1  (10,7)=3  (10,9)=1  (10,15)=3  (10,19)=3  (10,24)=1  (12,3)=3  (12,4)=1  (12,7)=3  (12,9)=1  (12,15)=3  (12,19)=3  (12,24)=1  (13,3)=3  (13,4)=1  (13,7)=3  (13,9)=1  (13,15)=3  (13,19)=3  (13,24)=1  (16,3)=3  (16,4)=1  (16,7)=3  (16,9)=1  (16,15)=3  (16,19)=3  (16,24)=1  (18,3)=3  (18,4)=1  (18,7)=3  (18,9)=1  (18,15)=3  (18,19)=3  (18,24)=1  (21,3)=3  (21,4)=1  (21,7)=3  (21,9)=1  (21,15)=3  (21,19)=3  (21,24)=1  (22,3)=3  (22,4)=1  (22,7)=3  (22,9)=1  (22,15)=3  (22,19)=3  (22,24)=1  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,3)=3  (25,4)=1  (25,7)=3  (25,9)=1  (25,15)=3  (25,19)=3  (25,24)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (28,28) and color green and layers
  [0]: a rectangle at (0,0) with size (28,28) and color grey and mask
  [01]: a rectangle at (8,0) with size (1,28) and color green and mask full
  [011]: a rectangle at (17,5) with size (7,7) and color pink and mask 1111111100000110000011000001100000110000011111111
  [0111]: a rectangle at (3,3) with size (23,2) and color cyan and mask full
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (14,3)=3  (14,4)=3  (15,0)=1  (15,1)=1  (15,3)=1  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (18,0)=0  (18,1)=0  (18,3)=1  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (20,3)=3  (20,4)=3  (21,0)=0  (21,1)=0  (21,3)=1  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (24,0)=8  (24,1)=8  (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
   (8128.7 bits)
data: a background with size (7,7) and color pink and layers
diff: 
delta: (1,1)=0  (1,2)=1  (1,3)=3  (1,4)=8  (1,5)=0  (2,1)=8  (2,2)=8  (2,3)=3  (2,4)=8  (2,5)=8  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (4,1)=0  (4,2)=1  (4,3)=3  (4,4)=8  (4,5)=0  (5,1)=0  (5,2)=1  (5,3)=3  (5,4)=8  (5,5)=0 
   (448.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color green and layers
  [0]: a rectangle at (0,0) with size (28,28) and color grey and mask
  [01]: a rectangle at (8,0) with size (1,28) and color green and mask full
  [011]: a rectangle at (17,5) with size (7,7) and color pink and mask 1111111100000110000011000001100000110000011111111
  [0111]: a rectangle at (3,3) with size (23,2) and color cyan and mask full
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (14,3)=3  (14,4)=3  (15,0)=1  (15,1)=1  (15,3)=1  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (18,0)=0  (18,1)=0  (18,3)=1  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (20,3)=3  (20,4)=3  (21,0)=0  (21,1)=0  (21,3)=1  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (24,0)=8  (24,1)=8  (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color green and layers
  [0]: a rectangle at (0,0) with size (24,24) and color yellow and mask
  [01]: a rectangle at (4,0) with size (1,23) and color green and mask full
  [011]: a rectangle at (14,14) with size (6,6) and color cyan and mask 111111101001111111101001101001111111
  [0111]: a rectangle at (0,15) with size (23,1) and color red and mask full
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=1  (0,3)=2  (0,6)=0  (0,7)=2  (0,8)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,16)=0  (0,18)=0  (0,20)=1  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=1  (1,3)=2  (1,6)=0  (1,7)=2  (1,8)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,16)=0  (1,18)=0  (1,20)=1  (1,21)=0  (1,22)=0  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,6)=1  (2,7)=2  (2,8)=1  (2,10)=1  (2,12)=1  (2,13)=1  (2,16)=1  (2,18)=1  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,13)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,21)=2  (3,22)=2  (6,0)=0  (6,1)=0  (6,2)=1  (6,3)=2  (6,6)=0  (6,7)=2  (6,8)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,16)=0  (6,18)=0  (6,20)=1  (6,21)=0  (6,22)=0  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,7)=2  (7,8)=2  (7,10)=2  (7,12)=2  (7,13)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,6)=1  (8,7)=2  (8,8)=1  (8,10)=1  (8,12)=1  (8,13)=1  (8,16)=1  (8,18)=1  (8,20)=1  (8,21)=1  (8,22)=1  (9,15)=3  (10,0)=0  (10,1)=0  (10,2)=1  (10,3)=2  (10,6)=0  (10,7)=2  (10,8)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,16)=0  (10,18)=0  (10,20)=1  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=1  (12,3)=2  (12,6)=0  (12,7)=2  (12,8)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,16)=0  (12,18)=0  (12,20)=1  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=1  (13,3)=2  (13,6)=0  (13,7)=2  (13,8)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,16)=0  (13,18)=0  (13,20)=1  (13,21)=0  (13,22)=0  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,6)=2  (15,7)=2  (15,8)=2  (15,10)=2  (15,12)=2  (15,13)=2  (15,16)=2  (15,18)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=0  (16,1)=0  (16,2)=1  (16,3)=2  (16,6)=0  (16,7)=2  (16,8)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,16)=0  (16,18)=0  (16,20)=1  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=1  (18,3)=2  (18,6)=0  (18,7)=2  (18,8)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,16)=0  (18,18)=0  (18,20)=1  (18,21)=0  (18,22)=0  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,6)=1  (20,7)=2  (20,8)=1  (20,10)=1  (20,12)=1  (20,13)=1  (20,16)=1  (20,18)=1  (20,20)=1  (20,21)=1  (20,22)=1  (21,0)=0  (21,1)=0  (21,2)=1  (21,3)=2  (21,6)=0  (21,7)=2  (21,8)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,16)=0  (21,18)=0  (21,20)=1  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=1  (22,3)=2  (22,6)=0  (22,7)=2  (22,8)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,16)=0  (22,18)=0  (22,20)=1  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 6x6

TEST c909285e.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 13446.6 bits (13446.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-90] Checking task c9e6f938.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1498.2 = 1507.1
DL output with Mo: L = 9.0 + 2728.7 = 2737.6
DL input+output M: L = 17.9 + 4226.8 = 4244.7

# learning a model for train pairs
4244.7	
3041.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2707.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2462.8	OUT DEF: layer[0].pos={layer[0].pos}
2322.8	OUT DEF: layer[0].color={layer[0].color}
2184.8	IN  DEF: layer[0].color=orange
2139.2	OUT DEF: color=black
2093.6	IN  DEF: color=black
2058.6	OUT DEF: size=(?,?)
1838.0	OUT DEF: size.j=6
1673.2	OUT DEF: size.i={size.i}
1638.1	OUT DEF: layer[0].size=(?,?)
1537.0	OUT DEF: layer[0].size.i={layer[0].size.i}
1502.0	IN  DEF: size=(?,?)
1339.4	IN  DEF: size.i=3
1176.8	IN  DEF: size.j=3
1141.8	IN  DEF: layer[0].pos=(?,?)
1106.8	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i},6) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size ({layer[0].size.i},?) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color orange and mask ?

DL input  with Mi: L = 44.3 + 515.1 = 559.4
DL output with Mo: L = 37.0 + 510.3 = 547.4
DL input+output M: L = 81.3 + 1025.4 = 1106.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color orange and mask 111001
diff: 
delta:
   (23.9 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,1) with size (3,4) and color orange and mask 111101101001
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color orange and mask 111001
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,1) with size (1,2) and color orange and mask full
diff: 
delta: (0,1)=7# (1,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,2) with size (2,1) and color orange and mask full
diff: 
delta: (0,1)=7# (2,1)=7#
! 4 wrong pixels (generated / expected)

TRAIN c9e6f938.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,2) and color orange and mask full
diff: 
delta:
   (14.8 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,1) with size (1,4) and color orange and mask full
diff: 
delta:
   (8.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,2) and color orange and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN c9e6f938.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color orange and mask full
diff: 
delta:
   (12.8 bits)
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color orange and mask full
diff: 
delta: (1,5)=7#
   (21.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color orange and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN c9e6f938.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color orange and mask 100010011
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color orange and mask full
diff: 
delta: (1,1)=7# (2,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,1) and color orange and mask full
diff: 
delta: (0,0)=7# (2,2)=7#
! 8 wrong pixels (generated / expected)

TEST c9e6f938.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 510.3 bits (510.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-89] Checking task c9f8e694.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 22095.4 = 22104.4
DL output with Mo: L = 9.0 + 24751.1 = 24760.0
DL input+output M: L = 17.9 + 46846.5 = 46864.4

# learning a model for train pairs
46864.4	
33125.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
27975.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21469.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19547.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17777.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17140.7	OUT DEF: layer[01].color={layer[0].color}
15536.1	OUT SHAPE at layer[010]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [010]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 6552.0 = 6595.4
DL output with Mo: L = 76.5 + 8864.2 = 8940.7
DL input+output M: L = 119.8 + 15416.2 = 15536.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (0,0) with size (12,12) and color black and mask 110010001110110010001110110010001110110011111110110011110010110011110010110011110010111111110010111111110010111111110010111111110010111111111111
  [01]: a rectangle at (1,0) with size (10,1) and color blue and mask full
diff: 
delta: (2,0)=2  (6,0)=2  (7,0)=2  (11,0)=2 
   (318.4 bits)
data: a background with size (12,12) and color red and layers
  [0]: a rectangle at (1,2) with size (5,2) and color blue and mask full
  [010]: a rectangle at (1,0) with size (10,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 110010001110110010001111110010001111110011111111110011110011110011110011110011111111111111111111111111111111111111111111111111111111111111111111
  [011]: a rectangle at (8,0) with size (3,10) and color blue and mask full
diff: 
delta: (2,0)=2  (2,2)=2  (2,3)=2  (5,8)=1  (5,9)=1  (6,0)=2  (7,0)=2 
   (434.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,0) with size (10,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 110010001110110010001111110010001111110011111111110011110011110011110011110011110011111111110011111111110011111111110011111111110011111111111111
diff: 
delta: (2,0)=2  (6,0)=2  (7,0)=2  (11,0)=2 
! size mismatch, 10x10 instead of 12x12

TRAIN c9f8e694.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (0,0) with size (12,12) and color black and mask 111110001110111110001110000000001110000000001110000000001110000000001110000001111110000001100000000001100000000001100000111111100000111111111111
  [01]: a rectangle at (1,0) with size (9,1) and color green and mask full
diff: 
delta: (3,0)=4  (4,0)=4  (6,0)=4  (10,0)=4  (11,0)=4 
   (336.8 bits)
data: a background with size (12,12) and color yellow and layers
  [0]: a rectangle at (7,4) with size (3,8) and color green and mask full
  [010]: a rectangle at (1,0) with size (2,5) and color green and mask full
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111110001110111110001110111111111110111111111110111111111110000000001110000001111110000001100000000001100000000001111111111111111111111111111111
  [011]: a rectangle at (5,0) with size (1,12) and color green and mask full
diff: 
delta: (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (2,11)=3  (7,0)=3  (8,0)=3  (9,0)=3 
   (452.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  [0]: a rectangle at (1,0) with size (9,1) and color green and mask full
  [01]: a rectangle at (0,0) with size (12,12) and color black and mask 111110001110111110001110000000001111000000001111000000001111000000001111000001111111000001100001000001100001000001100001111111100001111111111111
diff: 
delta: (3,0)=4  (4,0)=4  (6,0)=4  (10,0)=4  (11,0)=4 
! size mismatch, 10x10 instead of 12x12

TRAIN c9f8e694.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,2) with size (12,10) and color grey and mask 111011100011101110001110111000111000000011100001111110000111011111111101111111110111111000011111100001111110000111111
  [01]: a rectangle at (4,0) with size (4,1) and color orange and mask full
diff: 
delta: (0,0)=1  (1,0)=8  (2,0)=1  (3,0)=1  (8,0)=8  (9,0)=8  (10,0)=8  (11,0)=8 
! size mismatch, 10x10 instead of 12x12

TEST c9f8e694.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 8864.2 bits (8864.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-88] Checking task caa06a1f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20144.1 = 20153.1
DL output with Mo: L = 9.0 + 20110.8 = 20119.8
DL input+output M: L = 17.9 + 40254.9 = 40272.9

# learning a model for train pairs
40272.9	
24219.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15370.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8129.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7588.6	OUT DEF: size={size}
7048.8	OUT DEF: layer[0].size={size}
6749.0	OUT DEF: layer[0].pos={layer[0].pos}
6510.9	OUT DEF: color={layer[0].color}
6372.1	OUT DEF: layer[0].color={layer[01].color}
6301.4	IN  DEF: layer[01].mask=full
6266.4	IN  DEF: size=(?,?)
6231.4	IN  DEF: layer[0].pos=(?,?)
6104.2	IN  DEF: layer[0].pos.i=0
5977.0	IN  DEF: layer[0].pos.j=0
5942.0	IN  DEF: layer[0].size=(?,?)
5906.9	IN  DEF: layer[01].pos=(?,?)
5779.8	IN  DEF: layer[01].pos.i=0
5652.6	IN  DEF: layer[01].pos.j=0
5617.5	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at {layer[0].pos} with size {size} and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,0) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (0,0) with size (?,?) and color ? and mask full

DL input  with Mi: L = 77.2 + 3231.9 = 3309.1
DL output with Mo: L = 28.8 + 2279.7 = 2308.4
DL input+output M: L = 106.0 + 5511.6 = 5617.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (0,0) with size (7,7) and color pink and mask 1010101010101010101010101010101010101010101010101
  [01]: a rectangle at (0,0) with size (7,7) and color orange and mask full
diff: 
delta:
   (118.8 bits)
data: a background with size (11,11) and color pink and layers
  [0]: a rectangle at (0,0) with size (11,11) and color orange and mask 1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101
diff: 
delta:
   (123.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (0,0) with size (7,7) and color pink and mask 1010101010101010101010101010101010101010101010101
  [01]: a rectangle at (0,0) with size (7,7) and color orange and mask full
diff: 
delta:
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color green and layers
  [0]: a rectangle at (0,0) with size (7,7) and color orange and mask 101010101010101010101010101010101010101010101010
  [01]: a rectangle at (0,0) with size (7,7) and color pink and mask full
diff: 
delta:
! 61 wrong pixels (generated / expected)

TRAIN caa06a1f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color blue and layers
  [0]: a rectangle at (0,0) with size (7,7) and color pink and mask 1010101010101010101010101010101010101010101010101
  [01]: a rectangle at (0,0) with size (7,7) and color green and mask full
diff: 
delta:
   (117.0 bits)
data: a background with size (8,8) and color pink and layers
  [0]: a rectangle at (0,0) with size (8,8) and color green and mask 1010101001010101101010100101010110101010010101011010101001010101
diff: 
delta:
   (66.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  [0]: a rectangle at (0,0) with size (7,7) and color pink and mask 1010101010101010101010101010101010101010101010101
  [01]: a rectangle at (0,0) with size (7,7) and color green and mask full
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color blue and layers
  [0]: a rectangle at (0,0) with size (7,7) and color green and mask 101010101010101010101010101010101010101010101010
  [01]: a rectangle at (0,0) with size (7,7) and color pink and mask full
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color green and layers
  [0]: a rectangle at (0,0) with size (7,7) and color pink and mask 1010101010101010101010101010101010101010101010101
  [01]: a rectangle at (0,0) with size (8,8) and color blue and mask 1111111111010101101010101101010110101010110101011010101011010101
diff:   layer[01].mask
delta:
! 64 wrong pixels (generated / expected)

TRAIN caa06a1f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1010101010101010101010101
  [01]: a rectangle at (0,0) with size (5,5) and color yellow and mask full
diff: 
delta:
   (87.4 bits)
data: a background with size (6,6) and color grey and layers
  [0]: a rectangle at (0,0) with size (6,6) and color yellow and mask 101010010101101010010101101010010101
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1010101010101010101010101
  [01]: a rectangle at (0,0) with size (5,5) and color yellow and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,5) and color yellow and mask 101010101010101010101010
  [01]: a rectangle at (0,0) with size (5,5) and color grey and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color yellow and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1010101010101010101010101
  [01]: a rectangle at (0,0) with size (6,6) and color pink and mask 111111110101101010110101101010110101
diff:   layer[01].mask
delta:
! 36 wrong pixels (generated / expected)

TRAIN caa06a1f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  [0]: a rectangle at (12,0) with size (6,18) and color green and mask full
  [01]: a rectangle at (0,12) with size (18,6) and color green and mask full
diff:   layer[01].pos.j  layer[0].pos.i
delta: (0,1)=5# (0,2)=7# (0,4)=5# (0,5)=7# (0,7)=5# (0,8)=7# (0,10)=5# (0,11)=7# (1,0)=5# (1,1)=7# (1,3)=5# (1,4)=7# (1,6)=5# (1,7)=7# (1,9)=5# (1,10)=7# (2,1)=5# (2,2)=7# (2,4)=5# (2,5)=7# (2,7)=5# (2,8)=7# (2,10)=5# (2,11)=7# (3,0)=5# (3,1)=7# (3,3)=5# (3,4)=7# (3,6)=5# (3,7)=7# (3,9)=5# (3,10)=7# (4,1)=5# (4,2)=7# (4,4)=5# (4,5)=7# (4,7)=5# (4,8)=7# (4,10)=5# (4,11)=7# (5,0)=5# (5,1)=7# (5,3)=5# (5,4)=7# (5,6)=5# (5,7)=7# (5,9)=5# (5,10)=7# (6,1)=5# (6,2)=7# (6,4)=5# (6,5)=7# (6,7)=5# (6,8)=7# (6,10)=5# (6,11)=7# (7,0)=5# (7,1)=7# (7,3)=5# (7,4)=7# (7,6)=5# (7,7)=7# (7,9)=5# (7,10)=7# (8,1)=5# (8,2)=7# (8,4)=5# (8,5)=7# (8,7)=5# (8,8)=7# (8,10)=5# (8,11)=7# (9,0)=5# (9,1)=7# (9,3)=5# (9,4)=7# (9,6)=5# (9,7)=7# (9,9)=5# (9,10)=7# (10,1)=5# (10,2)=7# (10,4)=5# (10,5)=7# (10,7)=5# (10,8)=7# (10,10)=5# (10,11)=7# (11,0)=5# (11,1)=7# (11,3)=5# (11,4)=7# (11,6)=5# (11,7)=7# (11,9)=5# (11,10)=7#
! 324 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  [0]: a rectangle at (0,0) with size (18,18) and color green and mask 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000111111000000000000
  [01]: a rectangle at (0,0) with size (12,2) and color grey and mask 11001100110011001100110
diff:   layer[01].mask
delta: (0,2)=7# (0,4)=5# (0,5)=7# (0,7)=5# (0,8)=7# (0,10)=5# (0,11)=7# (1,1)=7# (1,3)=5# (1,4)=7# (1,6)=5# (1,7)=7# (1,9)=5# (1,10)=7# (2,2)=7# (2,4)=5# (2,5)=7# (2,7)=5# (2,8)=7# (2,10)=5# (2,11)=7# (3,1)=7# (3,3)=5# (3,4)=7# (3,6)=5# (3,7)=7# (3,9)=5# (3,10)=7# (4,2)=7# (4,4)=5# (4,5)=7# (4,7)=5# (4,8)=7# (4,10)=5# (4,11)=7# (5,1)=7# (5,3)=5# (5,4)=7# (5,6)=5# (5,7)=7# (5,9)=5# (5,10)=7# (6,2)=7# (6,4)=5# (6,5)=7# (6,7)=5# (6,8)=7# (6,10)=5# (6,11)=7# (7,1)=7# (7,3)=5# (7,4)=7# (7,6)=5# (7,7)=7# (7,9)=5# (7,10)=7# (8,2)=7# (8,4)=5# (8,5)=7# (8,7)=5# (8,8)=7# (8,10)=5# (8,11)=7# (9,1)=7# (9,3)=5# (9,4)=7# (9,6)=5# (9,7)=7# (9,9)=5# (9,10)=7# (10,2)=7# (10,4)=5# (10,5)=7# (10,7)=5# (10,8)=7# (10,10)=5# (10,11)=7# (11,1)=7# (11,3)=5# (11,4)=7# (11,6)=5# (11,7)=7# (11,9)=5# (11,10)=7#
! 216 wrong pixels (generated / expected)

TEST caa06a1f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2279.7 bits (2279.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-87] Checking task cbded52d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17334.8 = 17343.8
DL output with Mo: L = 9.0 + 18525.8 = 18534.8
DL input+output M: L = 17.9 + 35860.7 = 35878.6

# learning a model for train pairs
35878.6	
33734.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30126.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
28833.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
24711.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
23771.2	OUT DEF: layer[0]={layer[0]}
22151.4	OUT DEF: layer[01]={layer[01]}
21612.2	OUT DEF: size={size}
21412.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
21084.3	OUT SHAPE at layer[00]: a point at ? with color ?
20705.9	OUT DEF: layer[011].size={layer[0].size}
20566.8	OUT DEF: layer[011].color={layer[0].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a point at ? with color ?
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at ? with size {layer[0].size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 11884.5 = 11927.9
DL output with Mo: L = 44.3 + 8594.7 = 8638.9
DL input+output M: L = 87.6 + 20479.2 = 20566.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,3) with size (8,2) and color blue and mask full
  [01]: a rectangle at (0,6) with size (8,2) and color blue and mask full
diff: 
delta: (0,0)=1  (0,1)=4  (0,7)=4  (1,0)=1  (1,1)=1  (2,3)=0  (2,4)=0  (2,6)=0  (2,7)=0  (3,0)=1  (3,1)=1  (4,0)=2  (4,1)=1  (4,6)=2  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,0)=1  (6,1)=4  (7,0)=1  (7,1)=1 
   (462.8 bits)
data: a background with size (8,8) and color black and layers
  [00]: a point at (0,1) with color yellow
  [0]: a rectangle at (0,3) with size (8,2) and color blue and mask full
  [01]: a rectangle at (0,6) with size (8,2) and color blue and mask full
  [011]: a rectangle at (0,0) with size (8,2) and color blue and mask full
diff: 
delta: (0,4)=4  (0,7)=4  (2,0)=0  (2,1)=0  (2,3)=0  (2,4)=0  (2,6)=0  (2,7)=0  (3,1)=4  (4,0)=2  (4,3)=2  (4,6)=2  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,1)=4 
   (358.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,3) with size (8,2) and color blue and mask full
  [01]: a rectangle at (0,6) with size (8,2) and color blue and mask full
diff: 
delta: (0,0)=1  (0,1)=4  (0,7)=4  (1,0)=1  (1,1)=1  (2,3)=0  (2,4)=0  (2,6)=0  (2,7)=0  (3,0)=1  (3,1)=1  (4,0)=2  (4,1)=1  (4,6)=2  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,0)=1  (6,1)=4  (7,0)=1  (7,1)=1 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,3) with size (8,2) and color blue and mask full
  [01]: a rectangle at (0,0) with size (8,2) and color blue and mask full
diff: 
delta: (0,1)=4  (0,6)=1  (0,7)=4  (1,6)=1  (1,7)=1  (2,0)=0  (2,1)=0  (2,3)=0  (2,4)=0  (3,6)=1  (3,7)=1  (4,0)=2  (4,6)=2  (4,7)=1  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (6,1)=4  (6,6)=1  (6,7)=1  (7,6)=1  (7,7)=1 
! 27 wrong pixels (generated / expected)

TRAIN cbded52d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (6,0) with size (2,8) and color blue and mask full
diff: 
delta: (0,0)=1  (0,1)=1  (0,3)=7# (0,4)=1  (0,6)=1  (0,7)=1  (1,0)=1  (1,1)=3  (1,3)=1  (1,4)=1  (1,6)=1  (1,7)=3  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,2)=0  (6,3)=7# (6,5)=0  (7,2)=0  (7,5)=0  (7,7)=3 
   (462.8 bits)
data: a background with size (8,8) and color black and layers
  [00]: a point at (0,3) with color orange
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (6,0) with size (2,8) and color blue and mask full
  [011]: a rectangle at (0,0) with size (2,8) and color blue and mask full
diff: 
delta: (0,2)=0  (0,5)=0  (1,1)=3  (1,2)=0  (1,4)=3  (1,5)=0  (1,7)=3  (3,2)=0  (3,3)=7# (3,5)=0  (4,2)=0  (4,5)=0  (4,7)=3  (6,2)=0  (6,3)=7# (6,5)=0  (7,2)=0  (7,5)=0  (7,7)=3 
   (358.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (6,0) with size (2,8) and color blue and mask full
diff: 
delta: (0,0)=1  (0,1)=1  (0,3)=7# (0,4)=1  (0,6)=1  (0,7)=1  (1,0)=1  (1,1)=3  (1,3)=1  (1,4)=1  (1,6)=1  (1,7)=3  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,2)=0  (6,3)=7# (6,5)=0  (7,2)=0  (7,5)=0  (7,7)=3 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (0,0) with size (2,8) and color blue and mask full
diff: 
delta: (0,2)=0  (0,3)=7# (0,5)=0  (1,1)=3  (1,2)=0  (1,5)=0  (1,7)=3  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,0)=1  (6,1)=1  (6,3)=7# (6,4)=1  (6,6)=1  (6,7)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=1  (7,6)=1  (7,7)=3 
! 27 wrong pixels (generated / expected)

TRAIN cbded52d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color blue and layers
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (0,0) with size (8,8) and color black and mask 10010000100100111111111111111111111111111111110010010000100100
diff: 
delta: (3,2)=0  (3,5)=0  (4,0)=3  (4,2)=0  (4,5)=0  (4,6)=3 
   (262.9 bits)
data: a background with size (8,8) and color blue and layers
  [00]: a point at (4,0) with color green
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (0,0) with size (8,8) and color black and mask 10010000100100111111111111111111111111111111110010010000100100
  [011]: a rectangle at (0,0) with size (2,8) and color blue and mask full
diff: 
delta: (3,2)=0  (3,5)=0  (4,2)=0  (4,3)=3  (4,5)=0  (4,6)=3 
   (142.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (0,0) with size (8,8) and color black and mask 10010000100100111111111111111111111111111111110010010000100100
diff: 
delta: (3,2)=0  (3,5)=0  (4,0)=3  (4,2)=0  (4,5)=0  (4,6)=3 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (6,0) with size (2,8) and color blue and mask full
diff: 
delta: (0,2)=0  (0,5)=0  (1,2)=0  (1,5)=0  (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=1  (3,6)=1  (3,7)=1  (4,0)=3  (4,1)=1  (4,3)=1  (4,4)=1  (4,6)=3  (4,7)=1  (6,2)=0  (6,5)=0  (7,2)=0  (7,5)=0 
! 21 wrong pixels (generated / expected)

TRAIN cbded52d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (3,0) with size (2,8) and color blue and mask full
  [01]: a rectangle at (0,0) with size (2,8) and color blue and mask full
diff: 
delta: (0,2)=0  (0,5)=0  (1,1)=8  (1,2)=0  (1,5)=0  (1,7)=8  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,0)=6  (6,1)=1  (6,3)=1  (6,4)=1  (6,6)=6  (6,7)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=1  (7,6)=1  (7,7)=8 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,3) with size (8,2) and color blue and mask full
  [01]: a rectangle at (0,0) with size (8,2) and color blue and mask full
diff: 
delta: (0,6)=1  (0,7)=1  (1,1)=8  (1,6)=1  (1,7)=8  (2,0)=0  (2,1)=0  (2,3)=0  (2,4)=0  (3,6)=1  (3,7)=1  (4,6)=1  (4,7)=1  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (6,0)=6  (6,6)=6  (6,7)=1  (7,6)=1  (7,7)=8 
! 25 wrong pixels (generated / expected)

TEST cbded52d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 8594.7 bits (8594.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-86] Checking task cce03e0d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2602.0 = 2611.0
DL output with Mo: L = 9.0 + 8069.9 = 8078.9
DL input+output M: L = 17.9 + 10671.9 = 10689.9

# learning a model for train pairs
10689.9	
8716.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8345.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8000.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7666.7	OUT DEF: layer[01].size={layer[0].size}
7527.0	OUT DEF: layer[01].color={layer[0].color}
7389.0	IN  DEF: layer[0].color=blue
7287.0	IN  SHAPE at layer[00]: a point at ? with color ?
7241.4	OUT DEF: color=black
7206.4	OUT DEF: size=(?,?)
6951.8	OUT DEF: size.i=9
6697.3	OUT DEF: size.j=9
6662.3	OUT DEF: layer[0].pos=(?,?)
6528.6	OUT DEF: layer[0].pos.j={layer[00].pos.j}
6493.6	OUT DEF: layer[0].size=(?,?)
6458.6	OUT DEF: layer[01].pos=(?,?)
6423.5	IN  DEF: size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color black and layers
  [0]: a rectangle at (?,{layer[00].pos.j}) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size {layer[0].size} and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color blue and mask ?

DL input  with Mi: L = 42.7 + 1921.5 = 1964.2
DL output with Mo: L = 72.2 + 4387.2 = 4459.3
DL input+output M: L = 114.8 + 6308.7 = 6423.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 100011001
diff: 
delta:
   (55.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,0) with size (1,1) and color red and mask full
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 100011001
diff: 
delta:
   (36.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (1,0) with color red
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 100011001
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color blue
  [0]: a rectangle at (1,1) with size (1,1) and color blue and mask full
diff: 
delta: (1,0)=2  (2,2)=1 
! 8 wrong pixels (generated / expected)

TRAIN cce03e0d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (2,0) with color red
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
diff: 
delta: (0,2)=2 
   (63.7 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (6,0) with size (2,2) and color blue and mask 1110
  [01]: a rectangle at (0,6) with size (2,2) and color blue and mask 1110
diff: 
delta: (0,8)=2  (2,6)=2  (6,2)=2  (8,0)=2 
   (113.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,2) with color red
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
diff: 
delta: (2,0)=2 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (2,0) with color red
  [0]: a rectangle at (0,0) with size (2,2) and color blue and mask 1110
diff: 
delta: (0,2)=2 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,2) with color red
  [0]: a rectangle at (1,0) with size (1,2) and color blue and mask full
diff: 
delta: (0,1)=1  (2,0)=2 
! 16 wrong pixels (generated / expected)

TRAIN cce03e0d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [00]: a point at (1,0) with color black
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask 11001
diff: 
delta: (2,2)=0 
   (73.4 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color red and mask 1000000010000000101000001000000010000000101000001000001010000010101000101
  [01]: a rectangle at (0,1) with size (3,2) and color blue and mask 11111
diff: 
delta: (0,7)=1  (1,8)=1  (2,7)=1  (3,4)=1  (4,5)=1  (5,4)=1  (6,1)=1  (7,2)=1  (8,1)=1 
   (289.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [00]: a point at (1,0) with color black
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask 11001
diff: 
delta: (2,2)=0 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  [00]: a point at (2,2) with color black
  [0]: a rectangle at (0,1) with size (3,2) and color blue and mask 111001
diff: 
delta: (1,0)=0 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  [00]: a point at (1,0) with color black
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 1011101
diff:   layer[0].color
delta: (2,2)=0 
! 28 wrong pixels (generated / expected)

TRAIN cce03e0d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [00]: a point at (1,1) with color black
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 10011110
diff:   layer[0].color
delta: (2,2)=0 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  [00]: a point at (2,2) with color black
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 110001110
diff:   layer[0].color
delta: (1,1)=0 
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [00]: a point at (0,0) with color blue
  [0]: a rectangle at (1,2) with size (1,1) and color blue and mask full
diff: 
delta: (1,1)=0  (2,0)=1  (2,2)=0 
! 32 wrong pixels (generated / expected)

TEST cce03e0d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4387.2 bits (4387.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-85] Checking task cdecee7f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4670.5 = 4679.5
DL output with Mo: L = 9.0 + 3474.4 = 3483.4
DL input+output M: L = 17.9 + 8145.0 = 8162.9

# learning a model for train pairs
8162.9	
8092.0	OUT SHAPE at layer[0]: a point at ? with color ?
8018.4	OUT SHAPE at layer[01]: a point at ? with color ?
7941.5	OUT SHAPE at layer[011]: a point at ? with color ?
7860.3	OUT SHAPE at layer[0111]: a point at ? with color ?
7771.8	OUT SHAPE at layer[01111]: a point at ? with color ?
7668.2	OUT SHAPE at layer[011111]: a point at ? with color ?
7598.2	IN  SHAPE at layer[0]: a point at ? with color ?
7458.5	OUT DEF: layer[011111].color={layer[0].color}
7386.4	IN  SHAPE at layer[00]: a point at ? with color ?
7311.5	IN  SHAPE at layer[01]: a point at ? with color ?
7172.8	OUT DEF: layer[01111].color={layer[01].color}
7034.8	IN  DEF: layer[01].color=brown
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color {layer[01].color}
  [011111]: a point at ? with color {layer[0].color}
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a point at ? with color ?
  [01]: a point at ? with color brown

DL input  with Mi: L = 41.2 + 4282.2 = 4323.4
DL output with Mo: L = 69.7 + 2641.7 = 2711.4
DL input+output M: L = 110.8 + 6923.9 = 7034.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,1) with color blue
  [0]: a point at (2,4) with color pink
  [01]: a point at (7,9) with color brown
diff: 
delta: (4,0)=3  (5,6)=7# (8,2)=8 
   (118.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color green
  [01]: a point at (0,1) with color blue
  [011]: a point at (0,2) with color cyan
  [0111]: a point at (1,1) with color orange
  [01111]: a point at (1,0) with color brown
  [011111]: a point at (1,2) with color pink
diff: 
delta:
   (75.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,1) with color blue
  [0]: a point at (2,4) with color pink
  [01]: a point at (7,9) with color brown
diff: 
delta: (4,0)=3  (5,6)=7# (8,2)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN cdecee7f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,2) with color yellow
  [0]: a point at (1,9) with color red
  [01]: a point at (5,0) with color brown
diff: 
delta: (2,6)=8  (4,4)=6  (6,8)=5# (7,1)=3 
   (136.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color green
  [01]: a point at (0,2) with color yellow
  [011]: a point at (1,0) with color grey
  [0111]: a point at (1,1) with color cyan
  [01111]: a point at (0,0) with color brown
  [011111]: a point at (2,0) with color red
diff: 
delta: (1,2)=6 
   (91.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,2) with color yellow
  [0]: a point at (1,9) with color red
  [01]: a point at (5,0) with color brown
diff: 
delta: (2,6)=8  (4,4)=6  (6,8)=5# (7,1)=3 
! size mismatch, 10x10 instead of 3x3

TRAIN cdecee7f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,9) with color green
  [0]: a point at (1,2) with color grey
  [01]: a point at (1,5) with color brown
diff: 
delta: (2,8)=1  (3,1)=4  (4,7)=5# (5,4)=3  (8,0)=2  (8,6)=1 
   (172.9 bits)
data: a background with size (3,3) and color green and layers
  [0]: a point at (0,0) with color red
  [01]: a point at (0,1) with color yellow
  [011]: a point at (0,2) with color grey
  [0111]: a point at (1,0) with color blue
  [01111]: a point at (1,1) with color brown
  [011111]: a point at (2,0) with color grey
diff: 
delta: (2,1)=1 
   (97.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,9) with color green
  [0]: a point at (1,2) with color grey
  [01]: a point at (1,5) with color brown
diff: 
delta: (2,8)=1  (3,1)=4  (4,7)=5# (5,4)=3  (8,0)=2  (8,6)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN cdecee7f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (1,4) with color grey
  [0]: a point at (1,6) with color brown
  [01]: a point at (9,2) with color brown
diff: 
delta: (2,9)=1  (3,1)=2  (4,7)=6  (5,3)=3  (7,0)=5# (8,5)=4 
! size mismatch, 10x10 instead of 3x3

TEST cdecee7f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2641.7 bits (2641.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-84] Checking task ce22a75a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1697.5 = 1706.5
DL output with Mo: L = 9.0 + 11483.4 = 11492.4
DL input+output M: L = 17.9 + 13180.9 = 13198.8

# learning a model for train pairs
13198.8	
4191.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3817.5	OUT DEF: size={size}
3726.0	OUT DEF: layer[0].color=blue
3676.0	IN  SHAPE at layer[0]: a point at ? with color ?
3584.5	IN  DEF: layer[0].color=grey
3528.4	IN  SHAPE at layer[01]: a point at ? with color ?
3436.9	IN  DEF: layer[01].color=grey
3368.7	IN  SHAPE at layer[011]: a point at ? with color ?
3277.2	IN  DEF: layer[011].color=grey
3246.2	OUT DEF: color=black
3215.1	IN  DEF: color=black
3193.3	OUT DEF: layer[0].pos=(?,?)
3106.4	OUT DEF: layer[0].pos.i=0
3023.2	OUT DEF: layer[0].pos.j={layer[0].pos.j - 1}
3001.4	OUT DEF: layer[0].size=(?,?)
2828.9	OUT DEF: layer[0].size.i={size.i}
2677.1	OUT DEF: layer[0].size.j={layer[011].pos.j + 2}
2655.3	IN  DEF: size=(?,?)
2487.4	IN  DEF: size.i=9
2319.5	IN  DEF: size.j=9
2297.7	IN  DEF: layer[0].pos=(?,?)
2209.0	IN  DEF: layer[0].pos.i=1
2187.2	IN  DEF: layer[01].pos=(?,?)
2098.5	IN  DEF: layer[01].pos.i=4
2009.9	IN  DEF: layer[01].pos.j=4
1988.1	IN  DEF: layer[011].pos=(?,?)
1899.4	IN  DEF: layer[011].pos.i=7

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,{layer[0].pos.j - 1}) with size ({size.i},{layer[011].pos.j + 2}) and color blue and mask ?
WHERE (Mi)
a background with size (9,9) and color black and layers
  [0]: a point at (1,?) with color grey
  [01]: a point at (4,4) with color grey
  [011]: a point at (7,?) with color grey

DL input  with Mi: L = 75.9 + 372.4 = 448.3
DL output with Mo: L = 54.7 + 1396.4 = 1451.1
DL input+output M: L = 130.6 + 1768.8 = 1899.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,1) with color grey
  [01]: a point at (4,4) with color grey
  [011]: a point at (7,7) with color grey
diff: 
delta:
   (9.0 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,0) with size (9,9) and color blue and mask 111000000111000000111000000000111000000111000000111000000000111000000111000000111
diff: 
delta:
   (83.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,1) with color grey
  [01]: a point at (4,4) with color grey
  [011]: a point at (7,7) with color grey
diff: 
delta:
! 54 wrong pixels (generated / expected)

TRAIN ce22a75a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,4) with color grey
  [01]: a point at (4,4) with color grey
  [011]: a point at (7,4) with color grey
diff: 
delta: (7,7)=5#
   (28.3 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,3) with size (9,6) and color blue and mask 111111111111111111000111000111000111000111000111000111
diff: 
delta:
   (56.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,4) with color grey
  [01]: a point at (4,4) with color grey
  [011]: a point at (7,4) with color grey
diff: 
delta: (7,7)=5#
! 18 wrong pixels (generated / expected)

TRAIN ce22a75a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a point at (1,7) with color grey
  [01]: a point at (4,1) with color grey
  [011]: a point at (7,1) with color grey
diff:   layer[01].pos.j
delta: (4,7)=5#
! 27 wrong pixels (generated / expected)

TEST ce22a75a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1396.4 bits (1396.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-83] Checking task ce4f8723.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14917.0 = 14926.0
DL output with Mo: L = 9.0 + 2982.9 = 2991.9
DL input+output M: L = 17.9 + 17900.0 = 17917.9

# learning a model for train pairs
17917.9	
13106.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10262.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8574.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7995.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7438.1	OUT DEF: size={layer[0].size}
6907.2	OUT DEF: layer[0].size={layer[0].size}
6722.8	OUT DEF: layer[0].color=green
6538.4	IN  DEF: layer[011].color=yellow
6444.5	IN  DEF: layer[011].mask=full
6384.3	OUT DEF: color=black
6324.1	IN  DEF: color=black
6275.9	OUT DEF: layer[0].pos=(?,?)
6145.6	OUT DEF: layer[0].pos.i={layer[0].pos.j}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.j},?) with size {layer[0].size} and color green and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color yellow and mask full

DL input  with Mi: L = 58.3 + 5186.1 = 5244.3
DL output with Mo: L = 35.5 + 865.8 = 901.2
DL input+output M: L = 93.7 + 6051.8 = 6145.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 1100001111001111
  [01]: a rectangle at (0,0) with size (4,3) and color blue and mask 101010010011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta: (1,3)=1 
   (140.8 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 1101001111101111
diff: 
delta:
   (21.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 1100001111001111
  [01]: a rectangle at (0,0) with size (4,3) and color blue and mask 101010010011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta: (1,3)=1 
! 4 wrong pixels (generated / expected)

TRAIN ce4f8723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1011110010100111
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 1011111110001000
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
   (127.5 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 1011111110101111
diff: 
delta:
   (21.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1011110010100111
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 1011111110001000
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ce4f8723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1111101101010011
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 101001001001011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
   (127.5 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 1111101101011011
diff: 
delta:
   (21.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1111101101010011
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 101001001001011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ce4f8723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1010110110110101
  [01]: a rectangle at (5,0) with size (4,3) and color red and mask 100011100011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
   (122.7 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color green and mask 1110111111110111
diff: 
delta:
   (21.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color blue and mask 1010110110110101
  [01]: a rectangle at (5,0) with size (4,3) and color red and mask 100011100011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,3) and color red and mask 100011100011
  [01]: a rectangle at (0,0) with size (4,4) and color blue and mask 1010110110110101
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! size mismatch, 4x3 instead of 4x4

TRAIN ce4f8723.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (5,0) with size (4,4) and color red and mask 111101001000011
  [01]: a rectangle at (0,0) with size (4,3) and color blue and mask 101010101101
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,3) and color blue and mask 101010101101
  [01]: a rectangle at (5,0) with size (4,4) and color red and mask 111101001000011
  [011]: a rectangle at (4,0) with size (1,4) and color yellow and mask full
diff: 
delta:
! size mismatch, 4x3 instead of 4x4

TEST ce4f8723.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 865.8 bits (865.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-82] Checking task ce602527.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 42981.3 = 42990.2
DL output with Mo: L = 9.0 + 4574.0 = 4583.0
DL input+output M: L = 17.9 + 47555.3 = 47573.2

# learning a model for train pairs
47573.2	
33221.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
26472.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
22093.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
20137.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19572.8	OUT DEF: size={layer[011].size}
19159.2	OUT DEF: layer[0].size={layer[011].size}
18837.5	OUT DEF: layer[0].pos={layer[0].pos}
18520.0	OUT DEF: color={layer[0].color}
18335.1	OUT DEF: layer[0].color={layer[011].color}
18241.2	IN  DEF: layer[01].mask=full
18147.3	IN  DEF: layer[011].mask=full
18099.1	IN  DEF: size=(?,?)
18050.9	IN  DEF: layer[0].pos=(?,?)
17836.6	IN  DEF: layer[0].pos.j=0
17622.5	IN  DEF: layer[0].pos.i=0
17574.3	IN  DEF: layer[0].size=(?,?)
17526.0	IN  DEF: layer[01].pos=(?,?)
17477.8	IN  DEF: layer[01].size=(?,?)
17429.6	IN  DEF: layer[011].pos=(?,?)
17381.3	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[011].size} and color {layer[0].color} and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[011].size} and color {layer[011].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,0) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 96.1 + 16460.4 = 16556.5
DL output with Mo: L = 31.9 + 792.9 = 824.8
DL input+output M: L = 128.0 + 17253.3 = 17381.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color cyan and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1111001100110011111110011001100111111100111111111111111001111111111111110011001100111111100110011001111111000000000011111110000000000111111111111111111111111111110000011110000011101010111111011111011111111000001110101011110111011100000111100100111111111111111111111111111111111111111111111
  [01]: a rectangle at (2,11) with size (5,5) and color green and mask full
  [011]: a rectangle at (3,3) with size (5,5) and color red and mask full
diff: 
delta:
   (404.7 bits)
data: a background with size (5,5) and color blue and layers
  [0]: a rectangle at (0,0) with size (5,5) and color red and mask 1111110101100001010111111
diff: 
delta:
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color cyan and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1111001100110011111110011001100111111100111111111111111001111111111111110011001100111111100110011001111111000000000011111110000000000111111111111111111111111111110000011110000011101010111111011111011111111000001110101011110111011100000111100100111111111111111111111111111111111111111111111
  [01]: a rectangle at (2,11) with size (5,5) and color green and mask full
  [011]: a rectangle at (3,3) with size (5,5) and color red and mask full
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color cyan and layers
  [0]: a rectangle at (0,0) with size (17,17) and color blue and mask 1111001100110011111110011001100111111100111111111111111001111111111111110011001100111111100110011001111111000000000011111110000000000111111111111111111111111111110000011110000011101010111111011111011111111000001110101011110111011100000111100100111111111111111111111111111111111111111111111
  [01]: a rectangle at (3,3) with size (5,5) and color red and mask full
  [011]: a rectangle at (2,11) with size (5,5) and color green and mask full
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN ce602527.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color pink and layers
  [0]: a rectangle at (0,0) with size (18,18) and color cyan and mask 111111111111100000111111111111100000111111111111111001111111111111111001111111111111100000111110111111100000111100011111111001111110111111111001111100011111111111111110111111111111111111111111111111111111111110101111111111111100000111111111111110101111111111111111111111111111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (4,3) with size (3,5) and color green and mask full
  [011]: a rectangle at (8,11) with size (5,3) and color yellow and mask full
diff: 
delta:
   (437.7 bits)
data: a background with size (5,3) and color cyan and layers
  [0]: a rectangle at (0,0) with size (5,3) and color yellow and mask 10111010111010
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color pink and layers
  [0]: a rectangle at (0,0) with size (18,18) and color cyan and mask 111111111111100000111111111111100000111111111111111001111111111111111001111111111111100000111110111111100000111100011111111001111110111111111001111100011111111111111110111111111111111111111111111111111111111110101111111111111100000111111111111110101111111111111111111111111111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (4,3) with size (3,5) and color green and mask full
  [011]: a rectangle at (8,11) with size (5,3) and color yellow and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color pink and layers
  [0]: a rectangle at (0,0) with size (18,18) and color cyan and mask 111111111111100000111111111111100000111111111111111001111111111111111001111111111111100000111110111111100000111100011111111001111110111111111001111100011111111111111110111111111111111111111111111111111111111110101111111111111100000111111111111110101111111111111111111111111111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (8,11) with size (5,3) and color yellow and mask full
  [011]: a rectangle at (4,3) with size (3,5) and color green and mask full
diff: 
delta:
! size mismatch, 3x5 instead of 5x3

TRAIN ce602527.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,17) and color blue and layers
  [0]: a rectangle at (0,0) with size (19,17) and color red and mask 11111111111110000111111111111100001111111111111111111111111111111111111111111111100001111111111111000011111101111111111111100000111111111111010101111111111111111111111111111111111111111111111111111111111111111111110001111111111111101111111111111111000111111111111111101111111111111100011111111111111111111111111111111111111
  [01]: a rectangle at (10,8) with size (3,5) and color green and mask full
  [011]: a rectangle at (2,4) with size (5,3) and color cyan and mask full
diff: 
delta:
   (436.7 bits)
data: a background with size (5,3) and color red and layers
  [0]: a rectangle at (0,0) with size (5,3) and color cyan and mask 111100111001111
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color blue and layers
  [0]: a rectangle at (0,0) with size (19,17) and color red and mask 11111111111110000111111111111100001111111111111111111111111111111111111111111111100001111111111111000011111101111111111111100000111111111111010101111111111111111111111111111111111111111111111111111111111111111111110001111111111111101111111111111111000111111111111111101111111111111100011111111111111111111111111111111111111
  [01]: a rectangle at (2,4) with size (5,3) and color cyan and mask full
  [011]: a rectangle at (10,8) with size (3,5) and color green and mask full
diff: 
delta:
! size mismatch, 3x5 instead of 5x3
>> Trial 2
data: a background with size (19,17) and color blue and layers
  [0]: a rectangle at (0,0) with size (19,17) and color red and mask 11111111111110000111111111111100001111111111111111111111111111111111111111111111100001111111111111000011111101111111111111100000111111111111010101111111111111111111111111111111111111111111111111111111111111111111110001111111111111101111111111111111000111111111111111101111111111111100011111111111111111111111111111111111111
  [01]: a rectangle at (10,8) with size (3,5) and color green and mask full
  [011]: a rectangle at (2,4) with size (5,3) and color cyan and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ce602527.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,17) and color red and layers
  [0]: a rectangle at (0,0) with size (15,17) and color blue and mask 111111111111000001111111111110000011111111110000110111110001100001101111001001110000011111000111100000111111111111111111111111111111111111111111111111111111111110000111111111111101101111111111111000011111111111110110111111111111111111111111111111111111111
  [01]: a rectangle at (2,5) with size (4,4) and color cyan and mask full
  [011]: a rectangle at (9,8) with size (3,5) and color green and mask full
diff: 
delta:
   (366.9 bits)
data: a background with size (3,5) and color blue and layers
  [0]: a rectangle at (0,0) with size (3,5) and color green and mask 11101101101110
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color red and layers
  [0]: a rectangle at (0,0) with size (15,17) and color blue and mask 111111111111000001111111111110000011111111110000110111110001100001101111001001110000011111000111100000111111111111111111111111111111111111111111111111111111111110000111111111111101101111111111111000011111111111110110111111111111111111111111111111111111111
  [01]: a rectangle at (2,5) with size (4,4) and color cyan and mask full
  [011]: a rectangle at (9,8) with size (3,5) and color green and mask full
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color red and layers
  [0]: a rectangle at (0,0) with size (15,17) and color blue and mask 111111111111000001111111111110000011111111110000110111110001100001101111001001110000011111000111100000111111111111111111111111111111111111111111111111111111111110000111111111111101101111111111111000011111111111110110111111111111111111111111111111111111111
  [01]: a rectangle at (9,8) with size (3,5) and color green and mask full
  [011]: a rectangle at (2,5) with size (4,4) and color cyan and mask full
diff: 
delta:
! size mismatch, 4x4 instead of 3x5

TRAIN ce602527.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  [0]: a rectangle at (0,0) with size (18,18) and color green and mask 111111110011111111111111110011111111111111000000111111111111000000111111111111110011111111111111110011111111111111111111111111111111111111111111111111111111111111111111111111100011111111111111110111111111111111100011111111111111110111111110010111111111111110100111111111111110010111111111111111111111111111111111111111111111
  [01]: a rectangle at (2,9) with size (3,4) and color blue and mask full
  [011]: a rectangle at (5,2) with size (4,3) and color pink and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  [0]: a rectangle at (0,0) with size (18,18) and color green and mask 111111110011111111111111110011111111111111000000111111111111000000111111111111110011111111111111110011111111111111111111111111111111111111111111111111111111111111111111111111100011111111111111110111111111111111100011111111111111110111111110010111111111111110100111111111111110010111111111111111111111111111111111111111111111
  [01]: a rectangle at (5,2) with size (4,3) and color pink and mask full
  [011]: a rectangle at (2,9) with size (3,4) and color blue and mask full
diff: 
delta:
! size mismatch, 3x4 instead of 4x3

TEST ce602527.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 792.9 bits (792.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-81] Checking task ce9e57f2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11291.7 = 11300.7
DL output with Mo: L = 9.0 + 11291.7 = 11300.7
DL input+output M: L = 17.9 + 22583.4 = 22601.3

# learning a model for train pairs
22601.3	
15336.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12889.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9654.5	OUT DEF: layer[0]={layer[0]}
8092.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7454.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6905.1	OUT DEF: size={size}
6665.2	OUT DEF: color={color}
6430.9	IN  DEF: color=red
6292.9	OUT DEF: layer[011].color=cyan
6154.9	IN  DEF: layer[0].color=black
6084.3	OUT DEF: layer[01].mask=full
6013.6	OUT DEF: layer[011].mask=full
5978.6	OUT DEF: layer[01].pos=(?,?)
5852.1	OUT DEF: layer[01].pos.i=5
5817.0	OUT DEF: layer[01].size=(?,?)
5782.0	OUT DEF: layer[011].pos=(?,?)
5650.2	OUT DEF: layer[011].pos.j=1
5531.3	OUT DEF: layer[011].pos.i={layer[0].size.i - 3}
5496.3	OUT DEF: layer[011].size=(?,?)
5333.7	OUT DEF: layer[011].size.i=3
5298.7	IN  DEF: size=(?,?)
5044.2	IN  DEF: size.j=9
5009.2	IN  DEF: layer[0].pos=(?,?)
4875.6	IN  DEF: layer[0].pos.j=0
4749.1	IN  DEF: layer[0].pos.i=0
4714.0	IN  DEF: layer[0].size=(?,?)
4459.5	IN  DEF: layer[0].size.j=9

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: {layer[0]}
  [01]: a rectangle at (5,?) with size (?,?) and color ? and mask full
  [011]: a rectangle at ({layer[0].size.i - 3},1) with size (3,?) and color cyan and mask full
WHERE (Mi)
a background with size (?,9) and color red and layers
  [0]: a rectangle at (0,0) with size (?,9) and color black and mask ?

DL input  with Mi: L = 61.2 + 2728.1 = 2789.3
DL output with Mo: L = 81.1 + 1589.1 = 1670.2
DL input+output M: L = 142.3 + 4317.2 = 4459.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,9) and color red and layers
  [0]: a rectangle at (0,0) with size (7,9) and color black and mask 101010101101010101101010101111010101111110101111111101111111111
diff: 
delta:
   (81.2 bits)
data: a background with size (7,9) and color red and layers
  [0]: a rectangle at (0,0) with size (7,9) and color black and mask 101010101101010101101010101111010101111110101111111101111111111
  [01]: a rectangle at (5,3) with size (2,3) and color cyan and mask full
  [011]: a rectangle at (4,1) with size (3,1) and color cyan and mask full
diff: 
delta: (6,7)=8 
   (40.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color red and layers
  [0]: a rectangle at (0,0) with size (7,9) and color black and mask 101010101101010101101010101111010101111110101111111101111111111
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color red and layers
  [0]: a rectangle at (0,0) with size (8,9) and color black and mask 101010101101010101101010101101110101101110101101111101111111101111111111
diff: 
delta:
   (91.0 bits)
data: a background with size (8,9) and color red and layers
  [0]: a rectangle at (0,0) with size (8,9) and color black and mask 101010101101010101101010101101110101101110101101111101111111101111111111
  [01]: a rectangle at (5,5) with size (2,1) and color red and mask full
  [011]: a rectangle at (5,1) with size (3,7) and color cyan and mask full
diff: 
delta: (5,3)=2 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color red and layers
  [0]: a rectangle at (0,0) with size (8,9) and color black and mask 101010101101010101101010101101110101101110101101111101111111101111111111
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 101010101101010101101010101101011101101111101101111101101111101101111111111111111
diff: 
delta:
   (100.6 bits)
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 101010101101010101101010101101011101101111101101111101101111101101111111111111111
  [01]: a rectangle at (5,7) with size (4,1) and color cyan and mask full
  [011]: a rectangle at (6,1) with size (3,1) and color cyan and mask full
diff: 
delta: (7,5)=8  (8,3)=8  (8,5)=8 
   (75.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color red and layers
  [0]: a rectangle at (0,0) with size (9,9) and color black and mask 101010101101010101101010101101011101101111101101111101101111101101111111111111111
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color red and layers
  [0]: a rectangle at (0,0) with size (11,9) and color black and mask 101010101101010101101110101101110101101110101111110101111110101111110101111110101111111101111111111
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST ce9e57f2.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1589.1 bits (1589.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-80] Checking task cf98881b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27060.5 = 27069.5
DL output with Mo: L = 9.0 + 6162.1 = 6171.0
DL input+output M: L = 17.9 + 33222.6 = 33240.5

# learning a model for train pairs
33240.5	
27458.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23910.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
21729.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
19667.2	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
18067.9	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
17263.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15313.0	OUT DEF: layer[0]={layer[0]}
15082.1	IN  DEF: layer[0].color=yellow
14851.2	IN  DEF: layer[0111].color=red
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: {layer[0]}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color yellow and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color red and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 94.8 + 11340.3 = 11435.1
DL output with Mo: L = 14.8 + 3401.3 = 3416.1
DL input+output M: L = 109.7 + 14741.5 = 14851.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1111000100101010
  [01]: a rectangle at (1,10) with size (3,4) and color blue and mask 101101110010
  [011]: a rectangle at (0,5) with size (2,4) and color brown and mask 11000011
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (3,5)=9# (3,7)=9#
   (225.1 bits)
data: a background with size (4,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1111000100101010
diff: 
delta: (0,2)=0  (1,0)=0  (2,1)=1  (2,2)=1  (2,3)=0 
   (101.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1111000100101010
  [01]: a rectangle at (1,10) with size (3,4) and color blue and mask 101101110010
  [011]: a rectangle at (0,5) with size (2,4) and color brown and mask 11000011
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (3,5)=9# (3,7)=9#
! size mismatch, 10x10 instead of 4x4

TRAIN cf98881b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 110100111111
  [01]: a rectangle at (1,10) with size (3,4) and color blue and mask 10110100001
  [011]: a rectangle at (0,5) with size (2,3) and color brown and mask 11101
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
   (235.0 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 110100111111
diff: 
delta: (2,1)=1  (3,0)=1  (3,2)=9#
   (64.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color yellow and mask 110100111111
  [01]: a rectangle at (1,10) with size (3,4) and color blue and mask 10110100001
  [011]: a rectangle at (0,5) with size (2,3) and color brown and mask 11101
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
! size mismatch, 10x10 instead of 4x4

TRAIN cf98881b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1101101010100111
  [01]: a rectangle at (0,5) with size (4,4) and color brown and mask 111110001001011
  [011]: a rectangle at (0,10) with size (3,2) and color blue and mask 11010
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
   (244.7 bits)
data: a background with size (4,4) and color brown and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1101101010100111
diff: 
delta: (1,0)=0  (2,0)=1 
   (55.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1101101010100111
  [01]: a rectangle at (0,5) with size (4,4) and color brown and mask 111110001001011
  [011]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [0111]: a rectangle at (0,9) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,10) with size (3,2) and color blue and mask 11010
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! size mismatch, 10x10 instead of 4x4

TRAIN cf98881b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1110110110111000
  [01]: a rectangle at (2,10) with size (2,4) and color blue and mask 11111011
  [011]: a rectangle at (0,5) with size (4,4) and color brown and mask 10011001011000
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta:
   (193.3 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1110110110111000
diff: 
delta: (1,2)=9# (2,1)=9# (3,0)=1 
   (64.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 1110110110111000
  [01]: a rectangle at (2,10) with size (2,4) and color blue and mask 11111011
  [011]: a rectangle at (0,5) with size (4,4) and color brown and mask 10011001011000
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TRAIN cf98881b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 110111011110101
  [01]: a rectangle at (1,10) with size (3,2) and color blue and mask 101111
  [011]: a rectangle at (1,6) with size (3,3) and color brown and mask 10011100
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
   (236.0 bits)
data: a background with size (4,4) and color blue and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 110111011110101
diff: 
delta: (0,1)=0  (3,0)=0 
   (55.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color yellow and mask 110111011110101
  [01]: a rectangle at (1,10) with size (3,2) and color blue and mask 101111
  [011]: a rectangle at (1,6) with size (3,3) and color brown and mask 10011100
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! size mismatch, 10x10 instead of 4x4

TRAIN cf98881b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  [0]: a rectangle at (0,5) with size (4,4) and color brown and mask 1101111001110101
  [01]: a rectangle at (0,10) with size (4,4) and color blue and mask 1101101110011
  [011]: a rectangle at (0,0) with size (2,4) and color yellow and mask 10110100
  [0111]: a rectangle at (0,4) with size (4,1) and color red and mask full
  [01111]: a rectangle at (0,9) with size (4,1) and color red and mask full
diff:   layer[0].color
delta: (3,1)=4  (3,2)=4 
! size mismatch, 10x10 instead of 4x4

TEST cf98881b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3401.3 bits (3401.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-79] Checking task d037b0a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1652.7 = 1661.7
DL output with Mo: L = 9.0 + 3104.3 = 3113.3
DL input+output M: L = 17.9 + 4757.0 = 4775.0

# learning a model for train pairs
4775.0	
4238.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3868.5	OUT DEF: size={size}
3634.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3548.0	IN  SHAPE at layer[0]: a point at ? with color ?
3333.0	OUT DEF: layer[0].pos={layer[0].pos}
3193.0	OUT DEF: layer[0].color={layer[0].color}
3091.5	IN  SHAPE at layer[01]: a point at ? with color ?
2888.7	OUT DEF: layer[01].pos={layer[01].pos}
2749.3	OUT DEF: layer[01].color={layer[01].color}
2678.6	OUT DEF: layer[0].mask=full
2608.0	OUT DEF: layer[01].mask=full
2562.4	IN  DEF: color=black
2527.4	OUT DEF: layer[0].size=(?,?)
2363.0	OUT DEF: layer[0].size.i={size.i}
2292.3	OUT DEF: layer[0].size.j=1
2257.3	OUT DEF: layer[01].size=(?,?)
2128.7	OUT DEF: layer[01].size.i=2
2058.0	OUT DEF: layer[01].size.j=1
2023.0	IN  DEF: size=(?,?)
1860.4	IN  DEF: size.i=3
1697.8	IN  DEF: size.j=3
1662.8	IN  DEF: layer[0].pos=(?,?)
1575.2	IN  DEF: layer[0].pos.i=0
1540.2	IN  DEF: layer[01].pos=(?,?)
1452.5	IN  DEF: layer[01].pos.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size ({size.i},1) and color {layer[0].color} and mask full
  [01]: a rectangle at {layer[01].pos} with size (2,1) and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a point at (0,?) with color ?
  [01]: a point at (1,?) with color ?

DL input  with Mi: L = 45.6 + 775.1 = 820.7
DL output with Mo: L = 48.3 + 583.6 = 631.8
DL input+output M: L = 93.9 + 1358.6 = 1452.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color pink
  [01]: a point at (1,1) with color yellow
diff: 
delta: (2,0)=3 
   (31.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,2) with size (3,1) and color pink and mask full
  [01]: a rectangle at (1,1) with size (2,1) and color yellow and mask full
diff: 
delta: (2,0)=3 
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color pink
  [01]: a point at (1,1) with color yellow
diff: 
delta: (2,0)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color pink
  [01]: a point at (2,0) with color green
diff:   layer[01].pos.i
delta: (1,1)=4 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,0) with color green
  [01]: a point at (1,1) with color yellow
diff:   layer[0].pos.i
delta: (0,2)=6 
! 3 wrong pixels (generated / expected)

TRAIN d037b0a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color red
  [01]: a point at (1,0) with color orange
diff: 
delta: (1,2)=8 
   (31.2 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (0,1) with size (3,1) and color red and mask full
  [01]: a rectangle at (1,0) with size (2,1) and color orange and mask full
diff: 
delta: (0,0)=0  (0,2)=0 
   (39.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color red
  [01]: a point at (1,0) with color orange
diff: 
delta: (1,2)=8 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color red
  [01]: a point at (1,2) with color cyan
diff: 
delta: (1,0)=7#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color orange
  [01]: a point at (1,2) with color cyan
diff:   layer[0].pos.i
delta: (0,1)=2 
! 3 wrong pixels (generated / expected)

TRAIN d037b0a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color yellow
  [01]: a point at (1,1) with color red
diff: 
delta:
   (15.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,1) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (2,1) and color red and mask full
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color yellow
  [01]: a point at (1,1) with color red
diff: 
delta:
correct output grid

TRAIN d037b0a7.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color yellow
  [01]: a point at (0,2) with color cyan
diff:   layer[01].pos.i
delta: (2,1)=7#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color yellow
  [01]: a point at (2,1) with color orange
diff:   layer[01].pos.i
delta: (0,2)=8 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color cyan
  [01]: a point at (0,0) with color yellow
diff:   layer[01].pos.i
delta: (2,1)=7#
! 2 wrong pixels (generated / expected)

TEST d037b0a7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 583.6 bits (583.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-78] Checking task d06dbe63.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 851.2 = 860.1
DL output with Mo: L = 9.0 + 7767.6 = 7776.6
DL input+output M: L = 17.9 + 8618.8 = 8636.7

# learning a model for train pairs
8636.7	
5876.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4223.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
3806.6	OUT DEF: size={size}
3715.0	OUT DEF: layer[0].color=grey
3623.5	OUT DEF: layer[01].color=grey
3546.9	OUT SHAPE at layer[011]: a point at ? with color ?
3455.3	OUT DEF: layer[011].color=cyan
3380.1	IN  SHAPE at layer[0]: a point at ? with color ?
3144.5	OUT DEF: layer[011]={layer[0]}
3052.9	IN  DEF: layer[0].color=cyan
3021.9	OUT DEF: color=black
2990.9	IN  DEF: color=black
2969.1	OUT DEF: layer[0].pos=(?,?)
2868.2	OUT DEF: layer[0].pos.j={layer[0].pos.j}
2770.7	OUT DEF: layer[0].pos.i=0
2748.9	OUT DEF: layer[0].size=(?,?)
2615.3	OUT DEF: layer[0].size.i={layer[0].pos.i}
2482.4	OUT DEF: layer[0].size.j={layer[0].pos.i}
2460.6	OUT DEF: layer[01].pos=(?,?)
2366.0	OUT DEF: layer[01].pos.i={layer[0].pos.i + 1}
2344.2	OUT DEF: layer[01].size=(?,?)
2208.5	OUT DEF: layer[01].size.j=5
2186.7	IN  DEF: size=(?,?)
1998.6	IN  DEF: size.i=13
1810.6	IN  DEF: size.j=13
1788.8	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,{layer[0].pos.j}) with size ({layer[0].pos.i},{layer[0].pos.i}) and color grey and mask ?
  [01]: a rectangle at ({layer[0].pos.i + 1},?) with size (?,5) and color grey and mask ?
  [011]: {layer[0]}
WHERE (Mi)
a background with size (13,13) and color black and layers
  [0]: a point at (?,?) with color cyan

DL input  with Mi: L = 41.5 + 200.9 = 242.4
DL output with Mo: L = 78.5 + 1467.9 = 1546.4
DL input+output M: L = 120.0 + 1668.8 = 1788.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a point at (3,4) with color cyan
diff: 
delta:
   (10.0 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color grey and mask 1111100
  [01]: a rectangle at (4,0) with size (6,5) and color grey and mask 10000100111001001110010000
  [011]: a point at (3,4) with color cyan
diff: 
delta:
   (56.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a point at (3,4) with color cyan
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN d06dbe63.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a point at (7,6) with color cyan
diff: 
delta:
   (10.0 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (0,6) with size (7,7) and color grey and mask 1000011100001000011100001000011100001000000
  [01]: a rectangle at (8,2) with size (5,5) and color grey and mask 100111001001110010000
  [011]: a point at (7,6) with color cyan
diff: 
delta:
   (90.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a point at (7,6) with color cyan
diff: 
delta:
! 53 wrong pixels (generated / expected)

TRAIN d06dbe63.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a point at (5,5) with color cyan
diff: 
delta:
! 33 wrong pixels (generated / expected)

TEST d06dbe63.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1467.9 bits (1467.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-77] Checking task d07ae81c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 50089.7 = 50098.6
DL output with Mo: L = 9.0 + 60163.9 = 60172.9
DL input+output M: L = 17.9 + 110253.6 = 110271.5

# learning a model for train pairs
110271.5	
73291.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
42417.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
36039.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
30337.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27407.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
25648.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 4921.5 = 4981.3
DL output with Mo: L = 59.8 + 20607.4 = 20667.2
DL input+output M: L = 119.6 + 25528.9 = 25648.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,12) and color cyan and layers
  [0]: a rectangle at (0,3) with size (19,4) and color red and mask full
  [01]: a rectangle at (12,0) with size (4,12) and color red and mask full
  [011]: a rectangle at (2,0) with size (3,12) and color red and mask full
diff: 
delta: (5,4)=4  (8,1)=1 
   (178.5 bits)
data: a background with size (19,12) and color yellow and layers
  [0]: a rectangle at (0,0) with size (19,12) and color red and mask 1111000000001111000000001111000111011111111111101111111111110111111011111011111000001101000000001110000000001111000000001111000000000111000000001010000000001101000111111010111111110111011111101111101000001111000000001111000
  [01]: a rectangle at (0,7) with size (19,5) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (19,3) and color cyan and mask full
diff: 
delta: (0,9)=1  (1,0)=1  (1,8)=1  (2,1)=4  (2,7)=4  (3,2)=4  (7,0)=1  (7,2)=1  (8,1)=1  (8,7)=1  (9,0)=1  (9,2)=1  (9,8)=1  (10,9)=1  (11,10)=1  (12,11)=4  (14,7)=4  (15,8)=4  (16,9)=1  (17,10)=1  (18,11)=1 
   (775.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,12) and color cyan and layers
  [0]: a rectangle at (0,3) with size (19,4) and color red and mask full
  [01]: a rectangle at (12,0) with size (4,12) and color red and mask full
  [011]: a rectangle at (2,0) with size (3,12) and color red and mask full
diff: 
delta: (5,4)=4  (8,1)=1 
! size mismatch, 10x10 instead of 19x12

TRAIN d07ae81c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color green and layers
  [0]: a rectangle at (0,3) with size (12,6) and color blue and mask full
  [01]: a rectangle at (5,0) with size (3,14) and color blue and mask full
  [011]: a rectangle at (8,11) with size (1,1) and color cyan and mask full
diff: 
delta: (3,6)=2 
   (145.0 bits)
data: a background with size (12,14) and color red and layers
  [0]: a rectangle at (0,0) with size (12,14) and color blue and mask 111110000000011111100000000111111000000001111110001010111111101101110111110111111110111011110000010101100000000110111000000001010110000000001110100000000111110000
  [01]: a rectangle at (0,9) with size (12,5) and color green and mask full
  [011]: a rectangle at (0,0) with size (12,3) and color green and mask full
diff: 
delta: (0,9)=8  (6,9)=2  (6,13)=2  (7,2)=2  (7,10)=2  (7,12)=2  (8,1)=8  (8,11)=8  (9,0)=8  (9,10)=8  (9,12)=8  (10,9)=8  (10,13)=8 
   (552.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color green and layers
  [0]: a rectangle at (0,3) with size (12,6) and color blue and mask full
  [01]: a rectangle at (5,0) with size (3,14) and color blue and mask full
  [011]: a rectangle at (8,11) with size (1,1) and color cyan and mask full
diff: 
delta: (3,6)=2 
! size mismatch, 10x10 instead of 12x14

TRAIN d07ae81c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (0,10) with size (15,5) and color pink and mask full
  [01]: a rectangle at (0,2) with size (15,4) and color pink and mask full
  [011]: a rectangle at (5,7) with size (1,1) and color cyan and mask full
diff: 
delta: (8,4)=3  (10,12)=3 
   (168.6 bits)
data: a background with size (15,15) and color green and layers
  [0]: a rectangle at (0,10) with size (15,5) and color pink and mask 111101111101110101011101110101011101111111111111111111111111111101110111011
  [01]: a rectangle at (0,2) with size (15,4) and color pink and mask full
  [011]: a rectangle at (0,0) with size (15,10) and color blue and mask full
diff: 
delta: (0,2)=3  (1,3)=3  (2,4)=3  (3,5)=3  (3,9)=8  (4,0)=8  (4,6)=8  (4,8)=8  (5,1)=8  (5,7)=8  (6,2)=3  (6,6)=8  (6,8)=8  (7,3)=3  (7,5)=3  (7,9)=8  (8,4)=3  (9,3)=3  (9,5)=3  (10,2)=3  (10,6)=8  (11,1)=8  (11,7)=8  (12,0)=8  (12,8)=8  (13,9)=8  (14,8)=8 
   (733.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (0,10) with size (15,5) and color pink and mask full
  [01]: a rectangle at (0,2) with size (15,4) and color pink and mask full
  [011]: a rectangle at (5,7) with size (1,1) and color cyan and mask full
diff: 
delta: (8,4)=3  (10,12)=3 
! size mismatch, 10x10 instead of 15x15

TRAIN d07ae81c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color cyan and layers
  [0]: a rectangle at (0,3) with size (17,6) and color green and mask full
  [01]: a rectangle at (11,0) with size (4,19) and color green and mask full
  [011]: a rectangle at (4,0) with size (3,19) and color green and mask full
diff: 
delta: (0,10)=4  (4,6)=1  (12,14)=1 
! size mismatch, 10x10 instead of 17x19

TEST d07ae81c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 20607.4 bits (20607.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-76] Checking task d0f5fe59.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10277.1 = 10286.1
DL output with Mo: L = 9.0 + 1868.3 = 1877.2
DL input+output M: L = 17.9 + 12145.4 = 12163.3

# learning a model for train pairs
12163.3	
7626.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7212.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6839.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6700.4	OUT DEF: layer[0].color={layer[0].color}
6562.5	IN  DEF: layer[0].color=cyan
6516.8	OUT DEF: color=black
6481.8	OUT DEF: size=(?,?)
6446.8	OUT DEF: layer[0].pos=(?,?)
6364.2	OUT DEF: layer[0].pos.i=0
6281.6	OUT DEF: layer[0].pos.j=0
6246.6	OUT DEF: layer[0].size=(?,?)
6211.6	IN  DEF: size=(?,?)
6176.6	IN  DEF: layer[0].pos=(?,?)
6045.7	IN  DEF: layer[0].pos.i=3
5996.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5849.6	OUT DEF: layer[0].size.j={layer[01].pos.j}
5691.2	OUT DEF: size.j={layer[01].pos.j}
5533.1	OUT DEF: size.i={layer[01].pos.j}
5375.3	OUT DEF: layer[0].size.i={layer[01].pos.j}
5237.3	IN  DEF: layer[01].color=cyan
5166.6	IN  DEF: layer[01].mask=full
5131.6	IN  DEF: layer[0].size=(?,?)
5096.6	IN  DEF: layer[01].pos=(?,?)
5061.6	IN  DEF: layer[01].size=(?,?)
5026.6	IN  DEF: layer[011].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ({layer[01].pos.j},{layer[01].pos.j}) and color black and layers
  [0]: a rectangle at (0,0) with size ({layer[01].pos.j},{layer[01].pos.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (3,?) with size (?,?) and color cyan and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color cyan and mask full
  [011]: a rectangle at (?,?) with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 4517.3 = 4609.5
DL output with Mo: L = 57.4 + 359.7 = 417.1
DL input+output M: L = 149.6 + 4876.9 = 5026.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,10) and color cyan and layers
  [0]: a rectangle at (3,1) with size (1,3) and color cyan and mask full
  [01]: a rectangle at (7,4) with size (1,3) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (16,10) and color black and mask 1111111111111111111110011111111001110111111111000111111001111111111111111011111111111111111110011111111111111111111110111111111111111111001111111100111111111111
diff: 
delta:
   (257.4 bits)
data: a background with size (4,4) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color cyan and mask 1000010000100001
diff: 
delta:
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color cyan and mask 10111110110
  [01]: a rectangle at (6,4) with size (3,3) and color cyan and mask 100111110
  [011]: a rectangle at (10,1) with size (3,4) and color cyan and mask 10001111100
diff:   layer[01].mask  layer[0].pos.i
delta: (12,7)=8  (12,8)=8  (13,7)=8  (13,8)=8 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color cyan and mask 10111110110
  [01]: a rectangle at (10,1) with size (3,4) and color cyan and mask 10001111100
  [011]: a rectangle at (6,4) with size (3,3) and color cyan and mask 100111110
diff:   layer[01].mask  layer[0].pos.i
delta: (12,7)=8  (12,8)=8  (13,7)=8  (13,8)=8 
! size mismatch, 1x1 instead of 4x4
>> Trial 3
data: a background with size (16,10) and color black and layers
  [0]: a rectangle at (1,1) with size (4,3) and color cyan and mask 10111110110
  [01]: a rectangle at (12,7) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (6,4) with size (3,3) and color cyan and mask 100111110
diff:   layer[0].pos.i
delta: (10,3)=8  (10,4)=8  (11,1)=8  (11,2)=8  (11,3)=8  (12,3)=8 
! size mismatch, 7x7 instead of 4x4

TRAIN d0f5fe59.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,5) with size (3,4) and color cyan and mask 10111110100
  [01]: a rectangle at (8,3) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (3,3) and color cyan and mask 11111100
diff: 
delta:
   (108.0 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color cyan and mask 100010001
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,5) with size (3,4) and color cyan and mask 10111110100
  [01]: a rectangle at (8,3) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (3,3) and color cyan and mask 11111100
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (3,5) with size (3,4) and color cyan and mask 10111110100
  [01]: a rectangle at (1,1) with size (3,3) and color cyan and mask 11111100
  [011]: a rectangle at (8,3) with size (2,2) and color cyan and mask full
diff:   layer[01].mask
delta:
! size mismatch, 1x1 instead of 3x3

TRAIN d0f5fe59.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,12) and color black and layers
  [0]: a rectangle at (3,3) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (2,2) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (3,8) with size (3,2) and color cyan and mask 11101
diff: 
delta:
   (86.3 bits)
data: a background with size (2,2) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1001
diff: 
delta:
   (6.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,12) and color black and layers
  [0]: a rectangle at (2,2) with size (2,2) and color cyan and mask full
  [01]: a rectangle at (3,3) with size (2,2) and color cyan and mask full
  [011]: a rectangle at (3,8) with size (3,2) and color cyan and mask 11101
diff:   layer[0].pos.i
delta:
! size mismatch, 3x3 instead of 2x2
>> Trial 2
data: a background with size (8,12) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color cyan and mask 110111011
  [01]: a rectangle at (3,8) with size (3,1) and color cyan and mask full
  [011]: a rectangle at (4,8) with size (1,2) and color cyan and mask full
diff:   layer[0].pos.i
delta:
! size mismatch, 8x8 instead of 2x2

TRAIN d0f5fe59.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  [0]: a rectangle at (2,3) with size (3,3) and color cyan and mask 110111100
  [01]: a rectangle at (9,8) with size (2,3) and color cyan and mask 111011
  [011]: a rectangle at (1,8) with size (3,2) and color cyan and mask 111110
diff:   layer[01].mask  layer[0].pos.i
delta: (9,1)=8  (9,2)=8  (10,2)=8  (10,3)=8  (11,3)=8  (13,6)=8  (13,7)=8 
! size mismatch, 8x8 instead of 5x5

TEST d0f5fe59.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 359.7 bits (359.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-75] Checking task d10ecb37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20077.7 = 20086.7
DL output with Mo: L = 9.0 + 1684.2 = 1693.1
DL input+output M: L = 17.9 + 21761.9 = 21779.8

# learning a model for train pairs
21779.8	
19254.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18044.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
17163.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
16865.9	OUT DEF: size={layer[01].size}
16778.9	OUT SHAPE at layer[0]: a point at ? with color ?
16640.4	OUT DEF: layer[0].color={layer[011].color}
16537.5	OUT SHAPE at layer[01]: a point at ? with color ?
16399.1	OUT DEF: layer[01].color={color}
16328.5	IN  DEF: layer[011].mask=full
16263.4	IN  SHAPE at layer[010]: a point at ? with color ?
16228.4	OUT DEF: layer[0].pos=(?,?)
16193.4	OUT DEF: layer[01].pos=(?,?)
16125.6	OUT DEF: layer[01].pos.i={layer[0].pos.i}
16058.9	OUT DEF: layer[01].pos.j=1
16023.9	IN  DEF: size=(?,?)
15988.9	IN  DEF: layer[0].pos=(?,?)
15953.8	IN  DEF: layer[0].size=(?,?)
15918.8	IN  DEF: layer[010].pos=(?,?)
15790.4	IN  DEF: layer[010].pos.i=0
15755.4	IN  DEF: layer[01].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[01].size} and color ? and layers
  [0]: a point at (?,?) with color {layer[011].color}
  [01]: a point at ({layer[0].pos.i},1) with color {color}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [010]: a point at (0,?) with color ?
  [01]: a rectangle at (?,?) with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 94.5 + 14935.7 = 15030.2
DL output with Mo: L = 48.3 + 676.9 = 725.2
DL input+output M: L = 142.8 + 15612.6 = 15755.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,3) with size (2,2) and color green and mask full
  [010]: a point at (0,0) with color yellow
  [01]: a rectangle at (3,1) with size (2,2) and color green and mask 1001
  [011]: a rectangle at (2,1) with size (4,2) and color yellow and mask full
diff: 
delta: (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,5)=4  (2,0)=6  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,4)=4  (4,5)=3  (5,0)=3  (5,3)=6  (5,4)=6 
   (368.7 bits)
data: a background with size (2,2) and color pink and layers
  [0]: a point at (0,0) with color yellow
  [01]: a point at (1,1) with color black
diff: 
delta: (0,1)=3 
   (27.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,3) with size (2,2) and color green and mask full
  [010]: a point at (0,0) with color yellow
  [01]: a rectangle at (3,1) with size (2,2) and color green and mask 1001
  [011]: a rectangle at (2,1) with size (4,2) and color yellow and mask full
diff: 
delta: (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,5)=4  (2,0)=6  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,4)=4  (4,5)=3  (5,0)=3  (5,3)=6  (5,4)=6 
! 2 wrong pixels (generated / expected)

TRAIN d10ecb37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color yellow and layers
  [0]: a rectangle at (0,0) with size (8,8) and color red and mask 100101101111000111000010010110101001011011110001110000100101101
  [010]: a point at (0,4) with color grey
  [01]: a rectangle at (1,1) with size (2,2) and color grey and mask full
  [011]: a rectangle at (5,1) with size (2,2) and color grey and mask full
diff: 
delta: (0,7)=5# (3,4)=5# (3,7)=5# (4,4)=5# (4,7)=5# (7,4)=5# (7,7)=5#
   (304.5 bits)
data: a background with size (2,2) and color red and layers
  [0]: a point at (1,1) with color grey
  [01]: a point at (0,1) with color yellow
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color yellow and layers
  [0]: a rectangle at (0,0) with size (8,8) and color red and mask 100101101111000111000010010110101001011011110001110000100101101
  [010]: a point at (0,4) with color grey
  [01]: a rectangle at (1,1) with size (2,2) and color grey and mask full
  [011]: a rectangle at (5,1) with size (2,2) and color grey and mask full
diff: 
delta: (0,7)=5# (3,4)=5# (3,7)=5# (4,4)=5# (4,7)=5# (7,4)=5# (7,7)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color yellow and layers
  [0]: a rectangle at (0,0) with size (8,8) and color red and mask 100101101111000111000010010110101001011011110001110000100101101
  [010]: a point at (0,4) with color grey
  [01]: a rectangle at (1,1) with size (6,2) and color grey and mask full
  [011]: a rectangle at (3,4) with size (2,1) and color grey and mask full
diff: 
delta: (0,7)=5# (3,2)=4  (3,7)=5# (4,1)=4  (4,7)=5# (7,4)=5# (7,7)=5#
! size mismatch, 6x2 instead of 2x2

TRAIN d10ecb37.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,6) and color yellow and layers
  [0]: a rectangle at (1,3) with size (2,2) and color red and mask full
  [010]: a point at (0,0) with color green
  [01]: a rectangle at (5,3) with size (2,2) and color blue and mask full
  [011]: a rectangle at (9,3) with size (2,2) and color red and mask full
diff: 
delta: (0,1)=2  (0,2)=1  (0,3)=3  (0,5)=1  (1,0)=1  (1,5)=3  (2,0)=1  (2,1)=3  (2,2)=3  (3,1)=2  (3,2)=1  (3,4)=3  (3,5)=1  (4,1)=1  (4,2)=2  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (6,0)=2  (6,5)=3  (7,0)=3  (7,1)=1  (7,2)=2  (7,3)=3  (7,5)=2  (8,0)=3  (8,1)=2  (8,2)=1  (8,3)=3  (8,5)=1  (9,0)=1  (9,5)=3  (10,0)=1  (10,1)=3  (10,2)=3  (11,1)=2  (11,2)=1  (11,4)=3  (11,5)=1 
   (820.4 bits)
data: a background with size (2,2) and color green and layers
  [0]: a point at (0,1) with color red
  [01]: a point at (1,1) with color yellow
diff: 
delta: (1,0)=1 
   (27.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,6) and color yellow and layers
  [0]: a rectangle at (1,3) with size (2,2) and color red and mask full
  [010]: a point at (0,0) with color green
  [01]: a rectangle at (5,3) with size (2,2) and color blue and mask full
  [011]: a rectangle at (9,3) with size (2,2) and color red and mask full
diff: 
delta: (0,1)=2  (0,2)=1  (0,3)=3  (0,5)=1  (1,0)=1  (1,5)=3  (2,0)=1  (2,1)=3  (2,2)=3  (3,1)=2  (3,2)=1  (3,4)=3  (3,5)=1  (4,1)=1  (4,2)=2  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (6,0)=2  (6,5)=3  (7,0)=3  (7,1)=1  (7,2)=2  (7,3)=3  (7,5)=2  (8,0)=3  (8,1)=2  (8,2)=1  (8,3)=3  (8,5)=1  (9,0)=1  (9,5)=3  (10,0)=1  (10,1)=3  (10,2)=3  (11,1)=2  (11,2)=1  (11,4)=3  (11,5)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,6) and color yellow and layers
  [0]: a rectangle at (1,3) with size (2,2) and color red and mask full
  [010]: a point at (0,0) with color green
  [01]: a rectangle at (9,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (5,3) with size (2,2) and color blue and mask full
diff: 
delta: (0,1)=2  (0,2)=1  (0,3)=3  (0,5)=1  (1,0)=1  (1,5)=3  (2,0)=1  (2,1)=3  (2,2)=3  (3,1)=2  (3,2)=1  (3,4)=3  (3,5)=1  (4,1)=1  (4,2)=2  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (6,0)=2  (6,5)=3  (7,0)=3  (7,1)=1  (7,2)=2  (7,3)=3  (7,5)=2  (8,0)=3  (8,1)=2  (8,2)=1  (8,3)=3  (8,5)=1  (9,0)=1  (9,5)=3  (10,0)=1  (10,1)=3  (10,2)=3  (11,1)=2  (11,2)=1  (11,4)=3  (11,5)=1 
! 3 wrong pixels (generated / expected)

TRAIN d10ecb37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color red and layers
  [0]: a rectangle at (0,0) with size (4,8) and color brown and mask 10011001011001100110011010011001
  [010]: a point at (0,1) with color pink
  [01]: a rectangle at (1,3) with size (1,2) and color pink and mask full
  [011]: a rectangle at (3,2) with size (1,4) and color pink and mask full
diff: 
delta: (0,6)=6  (2,0)=6  (2,7)=6 
! size mismatch, 1x2 instead of 2x2
>> Trial 2
data: a background with size (4,8) and color red and layers
  [0]: a rectangle at (0,0) with size (4,8) and color brown and mask 10011001011001100110011010011001
  [010]: a point at (0,1) with color pink
  [01]: a rectangle at (3,2) with size (1,4) and color pink and mask full
  [011]: a rectangle at (1,3) with size (1,2) and color pink and mask full
diff: 
delta: (0,6)=6  (2,0)=6  (2,7)=6 
! size mismatch, 1x4 instead of 2x2

TEST d10ecb37.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 676.9 bits (676.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-74] Checking task d13f3404.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1802.0 = 1811.0
DL output with Mo: L = 9.0 + 7855.6 = 7864.6
DL input+output M: L = 17.9 + 9657.6 = 9675.6

# learning a model for train pairs
9675.6	
8892.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8126.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7331.2	OUT DEF: layer[01].mask=1100001100001100001100001
6594.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6511.2	IN  SHAPE at layer[0]: a point at ? with color ?
6236.1	OUT DEF: layer[0].pos={layer[0].pos}
6096.2	OUT DEF: layer[0].color={layer[0].color}
6002.7	IN  SHAPE at layer[01]: a point at ? with color ?
5883.6	IN  SHAPE at layer[011]: a point at ? with color ?
5838.0	OUT DEF: color=black
5792.4	IN  DEF: color=black
5757.4	OUT DEF: size=(?,?)
5536.8	OUT DEF: size.i=6
5316.2	OUT DEF: size.j=6
5281.2	OUT DEF: layer[0].size=(?,?)
5246.2	OUT DEF: layer[01].pos=(?,?)
5129.6	OUT DEF: layer[01].pos.j=1
5014.7	OUT DEF: layer[01].pos.i={layer[011].pos.j}
4979.7	OUT DEF: layer[01].size=(?,?)
4774.4	OUT DEF: layer[01].size.i=5
4569.0	OUT DEF: layer[01].size.j=5
4534.0	OUT DEF: layer[011].pos=(?,?)
4424.2	OUT DEF: layer[011].pos.j={layer[011].pos.j + layer[011].pos.j}
4315.0	OUT DEF: layer[011].pos.i={layer[011].pos.i - layer[011].pos.j}
4280.0	OUT DEF: layer[011].size=(?,?)
4245.0	IN  DEF: size=(?,?)
4082.4	IN  DEF: size.i=3
3919.8	IN  DEF: size.j=3
3884.8	IN  DEF: layer[0].pos=(?,?)
3849.8	IN  DEF: layer[01].pos=(?,?)
3762.2	IN  DEF: layer[01].pos.i=0
3727.2	IN  DEF: layer[011].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (6,6) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at ({layer[011].pos.j},1) with size (5,5) and color ? and mask 1100001100001100001100001
  [011]: a rectangle at ({layer[011].pos.i - layer[011].pos.j},{layer[011].pos.j + layer[011].pos.j}) with size (?,?) and color ? and mask ?
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a point at (?,?) with color ?
  [01]: a point at (0,?) with color ?
  [011]: a point at (?,?) with color ?

DL input  with Mi: L = 60.5 + 854.0 = 914.5
DL output with Mo: L = 144.1 + 2668.6 = 2812.7
DL input+output M: L = 204.6 + 3522.6 = 3727.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color pink
  [01]: a point at (0,1) with color blue
  [011]: a point at (1,0) with color green
diff: 
delta:
   (28.5 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color pink and mask 100000010000001000000100000010000001
  [01]: a rectangle at (0,1) with size (5,5) and color blue and mask 1100001100001100001100001
  [011]: a rectangle at (1,0) with size (5,5) and color green and mask 1000011000111000111000111
diff: 
delta:
   (103.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color pink
  [01]: a point at (0,1) with color blue
  [011]: a point at (1,0) with color green
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color blue
  [01]: a point at (0,0) with color pink
  [011]: a point at (1,0) with color green
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color green
  [01]: a point at (0,0) with color pink
  [011]: a point at (0,1) with color blue
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN d13f3404.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (0,1) with color yellow
  [011]: a point at (2,0) with color red
diff: 
delta:
   (28.5 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color cyan and mask 1000001000001000001000001
  [01]: a rectangle at (0,1) with size (5,5) and color yellow and mask 1100001100001100001100001
  [011]: a rectangle at (2,0) with size (4,4) and color red and mask 1000010010101101
diff: 
delta:
   (81.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color cyan
  [01]: a point at (0,1) with color yellow
  [011]: a point at (2,0) with color red
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,0) with color red
  [01]: a point at (0,1) with color yellow
  [011]: a point at (1,1) with color cyan
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color yellow
  [01]: a point at (1,1) with color cyan
  [011]: a point at (2,0) with color red
diff:   layer[01].pos.i
delta:
! 15 wrong pixels (generated / expected)

TRAIN d13f3404.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color blue
  [01]: a point at (0,2) with color pink
  [011]: a point at (1,1) with color green
diff: 
delta:
   (28.5 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (1,0) with size (5,5) and color blue and mask 1000001000001000001000001
  [01]: a rectangle at (1,1) with size (5,5) and color green and mask 1100001100001100001100001
  [011]: a rectangle at (0,2) with size (4,4) and color pink and mask 1011010100100001
diff: 
delta:
   (81.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,0) with color blue
  [01]: a point at (0,2) with color pink
  [011]: a point at (1,1) with color green
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (0,2) with color pink
  [011]: a point at (1,0) with color blue
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color pink
  [01]: a point at (1,0) with color blue
  [011]: a point at (1,1) with color green
diff:   layer[01].pos.i
delta:
! 14 wrong pixels (generated / expected)

TRAIN d13f3404.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,1) with color yellow
  [01]: a point at (0,2) with color green
  [011]: a point at (2,2) with color brown
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,2) with color brown
  [01]: a point at (0,2) with color green
  [011]: a point at (2,1) with color yellow
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,2) with color green
  [01]: a point at (2,1) with color yellow
  [011]: a point at (2,2) with color brown
diff:   layer[01].pos.i
delta:
! 19 wrong pixels (generated / expected)

TEST d13f3404.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2668.6 bits (2668.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-73] Checking task d22278a0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2545.2 = 2554.2
DL output with Mo: L = 9.0 + 39959.0 = 39968.0
DL input+output M: L = 17.9 + 42504.3 = 42522.2

# learning a model for train pairs
42522.2	
35539.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
28542.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
26252.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
25097.6	OUT SHAPE at layer[0110]: a point at ? with color ?
24321.1	OUT DEF: size={size}
24196.1	IN  SHAPE at layer[0]: a point at ? with color ?
24009.7	OUT DEF: layer[0].color={layer[0].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [0110]: a point at ? with color ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 19.9 + 2408.9 = 2428.9
DL output with Mo: L = 67.7 + 21513.1 = 21580.8
DL input+output M: L = 87.7 + 23922.0 = 24009.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,0) with color blue
diff: 
delta: (0,9)=2 
   (55.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color blue and mask 1111110000101111010010101
  [01]: a rectangle at (6,0) with size (1,5) and color blue and mask full
  [0110]: a point at (0,9) with color red
  [011]: a rectangle at (0,5) with size (5,5) and color red and mask 1111100001111010010110101
diff: 
delta: (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (8,9)=2 
   (427.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,0) with color blue
diff: 
delta: (0,9)=2 
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,9) with color red
diff: 
delta: (0,0)=1 
! 53 wrong pixels (generated / expected)

TRAIN d22278a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a point at (0,11) with color green
diff: 
delta: (11,0)=8 
   (57.6 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,5) with size (5,7) and color green and mask full
  [01]: a rectangle at (7,0) with size (5,5) and color cyan and mask 1010110100101111000011111
  [0110]: a point at (0,1) with color green
  [011]: a rectangle at (5,0) with size (1,5) and color cyan and mask full
diff: 
delta: (0,3)=3  (0,6)=0  (0,8)=0  (0,10)=0  (1,0)=8  (1,3)=3  (1,6)=0  (1,8)=0  (1,10)=0  (1,11)=0  (2,3)=3  (2,6)=0  (2,8)=0  (3,0)=8  (3,1)=8  (3,2)=8  (3,6)=0  (3,8)=0  (3,9)=0  (3,10)=0  (3,11)=0  (4,6)=0  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (7,6)=8  (8,6)=8  (8,9)=3  (8,10)=3  (8,11)=3  (9,6)=8  (9,8)=8  (10,6)=8  (10,8)=8  (10,11)=3  (11,6)=8  (11,8)=8  (11,10)=8 
   (868.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a point at (0,11) with color green
diff: 
delta: (11,0)=8 
! 67 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a point at (11,0) with color cyan
diff: 
delta: (0,11)=3 
! 67 wrong pixels (generated / expected)

TRAIN d22278a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a point at (0,0) with color red
diff: 
delta: (12,0)=4 
   (58.6 bits)
data: a background with size (13,13) and color yellow and layers
  [0]: a rectangle at (0,6) with size (6,7) and color red and mask full
  [01]: a rectangle at (0,0) with size (5,5) and color red and mask 1111110000101111010010101
  [0110]: a point at (12,0) with color yellow
  [011]: a rectangle at (0,0) with size (13,13) and color black and mask 101010101011010101010101101010101010000101010101111010101010000001010101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
diff: 
delta: (0,7)=0  (0,9)=0  (0,11)=0  (1,7)=0  (1,9)=0  (1,11)=0  (2,7)=0  (2,9)=0  (2,11)=0  (3,7)=0  (3,9)=0  (3,11)=0  (4,7)=0  (4,9)=0  (4,11)=0  (5,7)=0  (5,9)=0  (5,11)=0 
   (659.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a point at (0,0) with color red
diff: 
delta: (12,0)=4 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  [0]: a point at (12,0) with color yellow
diff: 
delta: (0,0)=2 
! 81 wrong pixels (generated / expected)

TRAIN d22278a0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a point at (0,0) with color blue
diff: 
delta: (0,6)=2  (6,0)=8 
   (69.1 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 111100101
  [01]: a rectangle at (0,4) with size (3,3) and color red and mask 111001101
  [0110]: a point at (6,0) with color cyan
  [011]: a rectangle at (4,0) with size (3,3) and color cyan and mask 101100111
diff: 
delta: (4,5)=2  (4,6)=2  (5,4)=8  (6,4)=8 
   (195.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a point at (0,0) with color blue
diff: 
delta: (0,6)=2  (6,0)=8 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a point at (0,6) with color red
diff: 
delta: (0,0)=1  (6,0)=8 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a point at (6,0) with color cyan
diff: 
delta: (0,0)=1  (0,6)=2 
! 25 wrong pixels (generated / expected)

TRAIN d22278a0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a point at (0,0) with color yellow
diff: 
delta: (16,0)=8  (16,16)=1 
! 126 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  [0]: a point at (16,0) with color cyan
diff: 
delta: (0,0)=4  (16,16)=1 
! 127 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,17) and color black and layers
  [0]: a point at (16,16) with color blue
diff: 
delta: (0,0)=4  (16,0)=8 
! 127 wrong pixels (generated / expected)

TEST d22278a0.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 21513.1 bits (21513.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-72] Checking task d23f8c26.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5114.6 = 5123.6
DL output with Mo: L = 9.0 + 1962.3 = 1971.3
DL input+output M: L = 17.9 + 7076.9 = 7094.8

# learning a model for train pairs
7094.8	
6665.4	OUT DEF: size={size}
6555.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6444.5	OUT SHAPE at layer[01]: a point at ? with color ?
6355.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6227.0	OUT DEF: layer[0].color={layer[0].color}
6156.0	OUT DEF: layer[0].mask={layer[0].mask}
6085.4	IN  DEF: layer[0].mask=full
6039.8	OUT DEF: color=black
5994.2	IN  DEF: color=black
5959.2	OUT DEF: layer[0].pos=(?,?)
5860.1	OUT DEF: layer[0].pos.i=0
5765.8	OUT DEF: layer[0].pos.j={layer[0].pos.j + layer[0].pos.i}
5730.8	OUT DEF: layer[0].size=(?,?)
5616.6	OUT DEF: layer[0].size.i={layer[0].pos.i + layer[0].size.i}
5545.9	OUT DEF: layer[0].size.j=1
5510.9	OUT DEF: layer[01].pos=(?,?)
5416.8	OUT DEF: layer[01].pos.j={layer[0].pos.j + layer[0].pos.i}
5381.7	IN  DEF: size=(?,?)
5346.7	IN  DEF: layer[0].pos=(?,?)
5311.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,{layer[0].pos.j + layer[0].pos.i}) with size ({layer[0].pos.i + layer[0].size.i},1) and color {layer[0].color} and mask {layer[0].mask}
  [01]: a point at (?,{layer[0].pos.j + layer[0].pos.i}) with color ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 37.6 + 4786.4 = 4824.1
DL output with Mo: L = 70.6 + 417.0 = 487.7
DL input+output M: L = 108.3 + 5203.4 = 5311.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
diff: 
delta: (0,0)=6  (1,1)=3  (1,2)=9# (2,0)=1 
   (87.1 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
  [01]: a point at (1,1) with color green
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color pink and mask full
diff: 
delta: (0,1)=4  (1,1)=3  (1,2)=9# (2,0)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color yellow and mask full
diff: 
delta: (0,0)=6  (1,1)=3  (1,2)=9# (2,0)=1 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,1) with size (1,1) and color green and mask full
diff: 
delta: (0,0)=6  (0,1)=4  (1,2)=9# (2,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN d23f8c26.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color green and mask full
diff: 
delta: (0,0)=8  (0,2)=3  (1,0)=8  (1,1)=6  (1,2)=5# (1,3)=6  (2,1)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
   (212.2 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,2) with size (3,1) and color green and mask full
  [01]: a point at (4,2) with color brown
diff: 
delta: (1,2)=5#
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color cyan and mask full
diff: 
delta: (0,2)=3  (1,1)=6  (1,2)=5# (1,3)=6  (2,0)=3  (2,1)=6  (2,2)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (2,1) and color pink and mask full
diff: 
delta: (0,0)=8  (0,2)=3  (1,0)=8  (1,2)=5# (1,3)=6  (2,0)=3  (2,2)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color green and mask full
diff: 
delta: (0,0)=8  (0,2)=3  (1,0)=8  (1,1)=6  (1,2)=5# (1,3)=6  (2,1)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 2 wrong pixels (generated / expected)

TRAIN d23f8c26.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,0)=3  (1,0)=3  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8  (4,3)=2  (4,4)=2 
   (179.3 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
  [01]: a point at (3,2) with color cyan
diff: 
delta:
   (8.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (4,3) with size (1,2) and color red and mask full
diff: 
delta: (0,0)=3  (0,2)=4  (1,0)=3  (1,2)=4  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color green and mask full
diff: 
delta: (0,2)=4  (1,2)=4  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8  (4,3)=2  (4,4)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,2) with size (2,1) and color yellow and mask full
diff: 
delta: (0,0)=3  (1,0)=3  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8  (4,3)=2  (4,4)=2 
! 1 wrong pixels (generated / expected)

TRAIN d23f8c26.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (5,3) with size (2,1) and color pink and mask full
diff: 
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (1,3)=8  (2,2)=3  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (6,1)=8  (6,5)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (1,3) with size (2,2) and color cyan and mask 1001
diff:   layer[0].mask
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (2,2)=3  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (5,3)=6  (6,1)=8  (6,3)=6  (6,5)=1 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (5,1) with size (2,2) and color cyan and mask 110
diff:   layer[0].mask
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (1,3)=8  (2,2)=3  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,3)=6  (6,3)=6  (6,5)=1 
! 6 wrong pixels (generated / expected)

TEST d23f8c26.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 417.0 bits (417.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-71] Checking task d2abd087.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14788.9 = 14797.8
DL output with Mo: L = 9.0 + 14788.9 = 14797.8
DL input+output M: L = 17.9 + 29577.7 = 29595.7

# learning a model for train pairs
29595.7	
23757.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
20961.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18696.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
16619.6	OUT DEF: layer[0].mask={layer[0].mask}
14801.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14213.7	OUT DEF: layer[01].color=red
13635.5	OUT DEF: size={size}
13580.6	OUT DEF: layer[0].size={layer[0].size}
13231.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12894.9	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
12576.7	OUT DEF: layer[0].pos={layer[0].pos}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask {layer[0].mask}
  [01]: a rectangle at ? with size ? and color red and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 8550.8 = 8594.1
DL output with Mo: L = 76.9 + 3905.7 = 3982.6
DL input+output M: L = 120.3 + 12456.4 = 12576.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,5) with size (3,3) and color grey and mask 10111110
  [01]: a rectangle at (2,2) with size (2,3) and color grey and mask full
diff: 
delta: (7,1)=5# (7,2)=5# (8,1)=5# (8,2)=5# (8,3)=5#
   (181.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,5) with size (3,3) and color red and mask 10111110
  [01]: a rectangle at (2,2) with size (2,3) and color red and mask full
  [011]: a rectangle at (7,1) with size (2,2) and color blue and mask full
  [0111]: a rectangle at (8,1) with size (1,3) and color blue and mask full
diff: 
delta:
   (84.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (2,3) and color grey and mask full
  [01]: a rectangle at (5,5) with size (3,3) and color grey and mask 10111110
diff: 
delta: (7,1)=5# (7,2)=5# (8,1)=5# (8,2)=5# (8,3)=5#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,5) with size (3,3) and color grey and mask 10111110
  [01]: a rectangle at (2,2) with size (2,3) and color grey and mask full
diff: 
delta: (7,1)=5# (7,2)=5# (8,1)=5# (8,2)=5# (8,3)=5#
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (6,5) with size (1,3) and color grey and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111000111101110011111111111110011111111111111111111100011111110001111111111111111111111
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN d2abd087.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111001100111100110011110011111101111111110110000111111111111101111000010001110011011111111
  [01]: a rectangle at (4,8) with size (2,1) and color grey and mask full
diff: 
delta:
   (189.6 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111001100111100110011110011111101111111110110000111111111111101111000010001110011011111111
  [01]: a rectangle at (1,0) with size (2,4) and color red and mask full
  [011]: a rectangle at (6,5) with size (3,2) and color red and mask full
  [0111]: a rectangle at (4,8) with size (2,1) and color blue and mask full
diff: 
delta:
   (91.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (4,8) with size (2,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111001100111100110011110011111111111111111110000111111111111101111000010001110011011111111
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111001100111100110011110011111101111111110110000111111111111101111000010001110011011111111
  [01]: a rectangle at (4,8) with size (2,1) and color grey and mask full
diff: 
delta:
! 99 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (1,6) with size (1,3) and color grey and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111001100111100110011110011111101111111110110000111111111111101111000011111110011011111111
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN d2abd087.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,1) with size (3,4) and color grey and mask 11011110010
  [01]: a rectangle at (0,0) with size (4,3) and color grey and mask 100100110111
diff: 
delta: (0,7)=5# (0,8)=5# (0,9)=5# (1,4)=5# (1,5)=5# (1,7)=5# (2,4)=5# (2,5)=5# (2,7)=5# (3,7)=5# (4,4)=5# (4,5)=5# (4,9)=5# (5,1)=5# (5,2)=5# (5,5)=5# (5,6)=5# (5,9)=5# (6,5)=5# (6,6)=5# (6,9)=5#
   (484.1 bits)
data: a background with size (10,10) and color blue and layers
  [0]: a rectangle at (7,1) with size (3,4) and color blue and mask 11011110010
  [01]: a rectangle at (4,4) with size (3,3) and color red and mask 110110011
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111111110111111111011111100101111111111101111011110100101111010010010001111000
  [0111]: a rectangle at (0,7) with size (4,3) and color red and mask full
diff: 
delta:
   (214.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,1) with size (3,4) and color grey and mask 11011110010
  [01]: a rectangle at (0,0) with size (4,3) and color grey and mask 100100110111
diff: 
delta: (0,7)=5# (0,8)=5# (0,9)=5# (1,4)=5# (1,5)=5# (1,7)=5# (2,4)=5# (2,5)=5# (2,7)=5# (3,7)=5# (4,4)=5# (4,5)=5# (4,9)=5# (5,1)=5# (5,2)=5# (5,5)=5# (5,6)=5# (5,9)=5# (6,5)=5# (6,6)=5# (6,9)=5#
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (4,3) and color grey and mask 100100110111
  [01]: a rectangle at (7,1) with size (3,4) and color grey and mask 11011110010
diff: 
delta: (0,7)=5# (0,8)=5# (0,9)=5# (1,4)=5# (1,5)=5# (1,7)=5# (2,4)=5# (2,5)=5# (2,7)=5# (3,7)=5# (4,4)=5# (4,5)=5# (4,9)=5# (5,1)=5# (5,2)=5# (5,5)=5# (5,6)=5# (5,9)=5# (6,5)=5# (6,6)=5# (6,9)=5#
! 36 wrong pixels (generated / expected)

TRAIN d2abd087.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (4,1) with size (2,4) and color grey and mask 11110011
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111100000111011111111101111111110111111111011111111111111111111001000011001110011100111001
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,5) with size (3,3) and color grey and mask 11110110
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111100000111011111111101111111110110000111011110011111111111111111000011111110011111111001
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,4) and color grey and mask 111101100110
  [01]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111100000111011111111101111111110110000111011110011111111111111001111111001111111100111111
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST d2abd087.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3905.7 bits (3905.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-70] Checking task d364b489.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2455.4 = 2464.3
DL output with Mo: L = 9.0 + 9036.1 = 9045.1
DL input+output M: L = 17.9 + 11491.5 = 11509.4

# learning a model for train pairs
11509.4	
11123.1	OUT DEF: size={size}
11078.2	IN  SHAPE at layer[0]: a point at ? with color ?
10986.6	IN  DEF: layer[0].color=blue
10938.8	IN  SHAPE at layer[01]: a point at ? with color ?
10847.3	IN  DEF: layer[01].color=blue
10796.1	IN  SHAPE at layer[011]: a point at ? with color ?
10704.6	IN  DEF: layer[011].color=blue
10647.9	IN  SHAPE at layer[0111]: a point at ? with color ?
10556.4	IN  DEF: layer[0111].color=blue
10487.9	IN  SHAPE at layer[01111]: a point at ? with color ?
10396.3	IN  DEF: layer[01111].color=blue
10358.5	OUT SHAPE at layer[0]: a point at ? with color ?
10048.3	OUT DEF: layer[0]={layer[0]}
10009.6	OUT SHAPE at layer[01]: a point at ? with color ?
9918.0	OUT DEF: layer[01].color=orange
9878.8	OUT SHAPE at layer[011]: a point at ? with color ?
9787.2	OUT DEF: layer[011].color=red
9747.7	OUT SHAPE at layer[0111]: a point at ? with color ?
9656.2	OUT DEF: layer[0111].color=pink
9616.4	OUT SHAPE at layer[01111]: a point at ? with color ?
9524.8	OUT DEF: layer[01111].color=cyan
9484.8	OUT SHAPE at layer[011111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a point at ? with color orange
  [011]: a point at ? with color red
  [0111]: a point at ? with color pink
  [01111]: a point at ? with color cyan
  [011111]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color blue
  [01]: a point at ? with color blue
  [011]: a point at ? with color blue
  [0111]: a point at ? with color blue
  [01111]: a point at ? with color blue

DL input  with Mi: L = 65.6 + 1670.9 = 1736.5
DL output with Mo: L = 68.3 + 7680.0 = 7748.3
DL input+output M: L = 133.9 + 9350.9 = 9484.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,6) with color blue
  [01]: a point at (3,9) with color blue
  [011]: a point at (5,3) with color blue
  [0111]: a point at (7,7) with color blue
  [01111]: a point at (9,1) with color blue
diff: 
delta:
   (73.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,6) with color blue
  [01]: a point at (1,5) with color orange
  [011]: a point at (0,6) with color red
  [0111]: a point at (1,7) with color pink
  [01111]: a point at (2,6) with color cyan
  [011111]: a point at (2,9) with color red
diff: 
delta: (3,8)=7# (3,9)=1  (4,3)=2  (4,9)=8  (5,2)=7# (5,3)=1  (5,4)=6  (6,3)=8  (6,7)=2  (7,6)=7# (7,7)=1  (7,8)=6  (8,1)=2  (8,7)=8  (9,0)=7# (9,1)=1  (9,2)=6 
   (366.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,6) with color blue
  [01]: a point at (3,9) with color blue
  [011]: a point at (5,3) with color blue
  [0111]: a point at (7,7) with color blue
  [01111]: a point at (9,1) with color blue
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN d364b489.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,5) with color blue
  [01]: a point at (2,0) with color blue
  [011]: a point at (3,9) with color blue
  [0111]: a point at (5,5) with color blue
  [01111]: a point at (8,2) with color blue
diff: 
delta: (9,9)=1 
   (93.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,5) with color blue
  [01]: a point at (0,4) with color orange
  [011]: a point at (1,0) with color red
  [0111]: a point at (0,6) with color pink
  [01111]: a point at (1,5) with color cyan
  [011111]: a point at (2,0) with color blue
diff: 
delta: (2,1)=6  (2,9)=2  (3,0)=8  (3,8)=7# (3,9)=1  (4,5)=2  (4,9)=8  (5,4)=7# (5,5)=1  (5,6)=6  (6,5)=8  (7,2)=2  (8,1)=7# (8,2)=1  (8,3)=6  (8,9)=2  (9,2)=8  (9,8)=7# (9,9)=1 
   (401.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,5) with color blue
  [01]: a point at (2,0) with color blue
  [011]: a point at (3,9) with color blue
  [0111]: a point at (5,5) with color blue
  [01111]: a point at (8,2) with color blue
diff: 
delta: (9,9)=1 
! 25 wrong pixels (generated / expected)

TRAIN d364b489.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (0,1) with color blue
  [01]: a point at (0,9) with color blue
  [011]: a point at (2,7) with color blue
  [0111]: a point at (3,3) with color blue
  [01111]: a point at (6,0) with color blue
diff: 
delta: (6,7)=1  (9,4)=1 
! 28 wrong pixels (generated / expected)

TEST d364b489.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7680.0 bits (7680.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-69] Checking task d406998b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8919.1 = 8928.1
DL output with Mo: L = 9.0 + 8919.1 = 8928.1
DL input+output M: L = 17.9 + 17838.2 = 17856.1

# learning a model for train pairs
17856.1	
15931.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13755.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13095.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12239.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11585.7	OUT DEF: size={size}
11178.8	OUT SHAPE at layer[00]: a point at ? with color ?
10366.8	OUT DEF: layer[0].size={layer[01].size}
10001.3	OUT DEF: layer[0].pos={layer[01].pos}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at {layer[01].pos} with size {layer[01].size} and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 4784.3 = 4827.7
DL output with Mo: L = 54.4 + 5119.2 = 5173.6
DL input+output M: L = 97.8 + 9903.5 = 10001.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,10) and color black and mask 101011011111011011010111011011
diff: 
delta:
   (107.2 bits)
data: a background with size (3,10) and color green and layers
  [00]: a point at (0,0) with color grey
  [0]: a rectangle at (0,0) with size (3,10) and color black and mask 101011011111011011010111011011
  [01]: a rectangle at (2,6) with size (1,3) and color grey and mask full
diff: 
delta: (0,2)=5# (1,4)=5#
   (118.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color grey and layers
  [0]: a rectangle at (0,0) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,10) and color black and mask 101011011111011011010111011011
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN d406998b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,12) and color grey and layers
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,12) and color black and mask 10111011011101101101110111010110111
diff: 
delta:
   (114.7 bits)
data: a background with size (3,12) and color grey and layers
  [00]: a point at (0,1) with color green
  [0]: a rectangle at (0,0) with size (3,12) and color black and mask 10111011011101101101110111010110111
  [01]: a rectangle at (2,5) with size (1,7) and color green and mask full
diff: 
delta: (0,3)=3  (1,7)=3 
   (127.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color grey and layers
  [0]: a rectangle at (0,1) with size (1,1) and color grey and mask full
  [01]: a rectangle at (0,0) with size (3,12) and color black and mask 10111011011101101101110111010110111
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN d406998b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,13) and color grey and layers
  [0]: a rectangle at (0,11) with size (2,2) and color grey and mask 1001
  [01]: a rectangle at (0,0) with size (3,13) and color black and mask 110101111010111101101011101111101011011
diff: 
delta:
   (126.4 bits)
data: a background with size (3,13) and color green and layers
  [00]: a point at (1,9) with color grey
  [0]: a rectangle at (0,0) with size (3,13) and color black and mask 110101111010101111101011101011101011011
  [01]: a rectangle at (0,5) with size (1,7) and color grey and mask full
diff: 
delta: (2,1)=5# (2,3)=5#
   (131.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color grey and layers
  [0]: a rectangle at (0,11) with size (2,2) and color grey and mask 1001
  [01]: a rectangle at (0,0) with size (3,13) and color black and mask 110101111010111101101011101111101011011
diff: 
delta:
! 39 wrong pixels (generated / expected)

TRAIN d406998b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,14) and color grey and layers
  [0]: a rectangle at (1,0) with size (2,2) and color grey and mask 1001
  [01]: a rectangle at (0,0) with size (3,14) and color black and mask 101111101101110110101110111111010101011011
diff: 
delta:
   (130.1 bits)
data: a background with size (3,14) and color grey and layers
  [00]: a point at (1,13) with color green
  [0]: a rectangle at (0,0) with size (3,14) and color black and mask 101111101101011110101110111011010101011011
  [01]: a rectangle at (0,5) with size (1,7) and color green and mask full
diff: 
delta: (2,1)=3  (2,3)=3 
   (134.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color grey and layers
  [0]: a rectangle at (1,0) with size (2,2) and color grey and mask 1001
  [01]: a rectangle at (0,0) with size (3,14) and color black and mask 101111101101110110101110111111010101011011
diff: 
delta:
! 42 wrong pixels (generated / expected)

TRAIN d406998b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color grey and mask 1001011000
  [01]: a rectangle at (0,7) with size (2,3) and color grey and mask 10101
diff: 
delta: (0,12)=5# (0,14)=5# (1,5)=5# (1,11)=5# (1,15)=5# (2,4)=5# (2,6)=5# (2,10)=5# (2,13)=5# (2,16)=5#
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,17) and color black and layers
  [0]: a rectangle at (0,0) with size (3,4) and color grey and mask 1001011000
  [01]: a rectangle at (1,4) with size (2,3) and color grey and mask 101010
diff: 
delta: (0,7)=5# (0,9)=5# (0,12)=5# (0,14)=5# (1,8)=5# (1,11)=5# (1,15)=5# (2,10)=5# (2,13)=5# (2,16)=5#
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,17) and color black and layers
  [0]: a rectangle at (0,7) with size (2,3) and color grey and mask 10101
  [01]: a rectangle at (0,0) with size (3,4) and color grey and mask 1001011000
diff: 
delta: (0,12)=5# (0,14)=5# (1,5)=5# (1,11)=5# (1,15)=5# (2,4)=5# (2,6)=5# (2,10)=5# (2,13)=5# (2,16)=5#
! 25 wrong pixels (generated / expected)

TEST d406998b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5119.2 bits (5119.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-68] Checking task d43fd935.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6634.5 = 6643.4
DL output with Mo: L = 9.0 + 10187.0 = 10196.0
DL input+output M: L = 17.9 + 16821.5 = 16839.4

# learning a model for train pairs
16839.4	
14864.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13535.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12232.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11419.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10841.6	OUT DEF: size={size}
10754.7	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
10661.8	OUT SHAPE at layer[01111]: a point at ? with color ?
10343.1	OUT DEF: layer[01].pos={layer[0].pos}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at {layer[0].pos} with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a point at ? with color ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 5314.0 = 5340.6
DL output with Mo: L = 84.5 + 4918.0 = 5002.4
DL input+output M: L = 111.0 + 10232.0 = 10343.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (2,2) and color green and mask full
diff: 
delta: (0,0)=1  (1,8)=6  (3,8)=1  (6,7)=6  (7,6)=6  (8,2)=6  (9,4)=1 
   (177.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,4) with size (1,5) and color blue and mask full
  [01]: a rectangle at (3,2) with size (2,2) and color green and mask full
  [011]: a rectangle at (5,2) with size (4,1) and color pink and mask full
  [0111]: a rectangle at (6,6) with size (2,2) and color pink and mask 110
  [01111]: a point at (0,0) with color blue
diff: 
delta: (1,8)=6  (9,4)=1 
   (159.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (2,2) and color green and mask full
diff: 
delta: (0,0)=1  (1,8)=6  (3,8)=1  (6,7)=6  (7,6)=6  (8,2)=6  (9,4)=1 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,6) with size (2,2) and color pink and mask 110
diff: 
delta: (0,0)=1  (1,8)=6  (3,2)=3  (3,3)=3  (3,8)=1  (4,2)=3  (4,3)=3  (8,2)=6  (9,4)=1 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color blue and mask full
diff: 
delta: (1,8)=6  (3,2)=3  (3,3)=3  (3,8)=1  (4,2)=3  (4,3)=3  (6,7)=6  (7,6)=6  (8,2)=6  (9,4)=1 
! 21 wrong pixels (generated / expected)

TRAIN d43fd935.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color green and mask full
diff: 
delta: (0,1)=7# (0,6)=8  (2,3)=7# (2,9)=8  (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
   (230.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,5) with size (6,1) and color orange and mask full
  [01]: a rectangle at (2,5) with size (2,2) and color green and mask full
  [011]: a rectangle at (0,6) with size (3,4) and color cyan and mask 111100010001
  [0111]: a rectangle at (2,3) with size (1,2) and color orange and mask full
  [01111]: a point at (0,1) with color orange
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,9)=7#
   (223.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color green and mask full
diff: 
delta: (0,1)=7# (0,6)=8  (2,3)=7# (2,9)=8  (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color orange and mask full
diff: 
delta: (0,6)=8  (2,3)=7# (2,5)=3  (2,6)=3  (2,9)=8  (3,5)=3  (3,6)=3  (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,6) with size (1,1) and color cyan and mask full
diff: 
delta: (0,1)=7# (2,3)=7# (2,5)=3  (2,6)=3  (2,9)=8  (3,5)=3  (3,6)=3  (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 28 wrong pixels (generated / expected)

TRAIN d43fd935.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (2,2) and color green and mask full
diff: 
delta: (1,4)=1  (2,1)=1  (5,9)=1  (9,1)=1 
   (123.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (5,1) and color blue and mask full
  [01]: a rectangle at (6,4) with size (2,2) and color green and mask full
  [011]: a rectangle at (2,1) with size (1,1) and color blue and mask full
  [0111]: a rectangle at (5,9) with size (1,1) and color blue and mask full
  [01111]: a point at (9,1) with color blue
diff: 
delta:
   (108.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (2,2) and color green and mask full
diff: 
delta: (1,4)=1  (2,1)=1  (5,9)=1  (9,1)=1 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (1,1) and color blue and mask full
diff: 
delta: (2,1)=1  (5,9)=1  (6,4)=3  (6,5)=3  (7,4)=3  (7,5)=3  (9,1)=1 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (1,1) and color blue and mask full
diff: 
delta: (1,4)=1  (5,9)=1  (6,4)=3  (6,5)=3  (7,4)=3  (7,5)=3  (9,1)=1 
! 19 wrong pixels (generated / expected)

TRAIN d43fd935.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,2) with size (2,2) and color green and mask full
diff: 
delta: (0,3)=2  (1,0)=2  (2,7)=2  (3,0)=6  (4,7)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,3) with size (1,1) and color red and mask full
diff: 
delta: (1,0)=2  (2,7)=2  (3,0)=6  (4,7)=6  (6,0)=6  (6,2)=3  (6,3)=3  (7,2)=3  (7,3)=3  (8,7)=2  (9,3)=6  (9,5)=6 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color red and mask full
diff: 
delta: (0,3)=2  (2,7)=2  (3,0)=6  (4,7)=6  (6,0)=6  (6,2)=3  (6,3)=3  (7,2)=3  (7,3)=3  (8,7)=2  (9,3)=6  (9,5)=6 
! 25 wrong pixels (generated / expected)

TEST d43fd935.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4918.0 bits (4918.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-67] Checking task d4469b4b.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13002.5 = 13011.5
DL output with Mo: L = 9.0 + 5692.5 = 5701.5
DL input+output M: L = 17.9 + 18695.0 = 18712.9

# learning a model for train pairs
18712.9	
10959.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8629.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
Stack overflow
Called from unknown location
Error: no learned model
=====================================
[-66] Checking task d4a91cb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1790.1 = 1799.1
DL output with Mo: L = 9.0 + 8505.5 = 8514.5
DL input+output M: L = 17.9 + 10295.7 = 10313.6

# learning a model for train pairs
10313.6	
5949.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5361.3	OUT DEF: size={size}
4789.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4651.1	OUT DEF: layer[0].color=yellow
4513.1	OUT DEF: layer[01].color=yellow
4418.1	OUT SHAPE at layer[011]: a point at ? with color ?
4280.1	OUT DEF: layer[011].color=cyan
4160.1	OUT SHAPE at layer[0111]: a point at ? with color ?
4022.1	OUT DEF: layer[0111].color=red
3928.6	IN  SHAPE at layer[0]: a point at ? with color ?
3597.2	OUT DEF: layer[011]={layer[0]}
3459.2	IN  DEF: layer[0].color=cyan
3341.0	IN  SHAPE at layer[01]: a point at ? with color ?
3010.6	OUT DEF: layer[0111]={layer[01]}
2872.6	IN  DEF: layer[01].color=red
2801.9	OUT DEF: layer[0].mask=full
2731.3	OUT DEF: layer[01].mask=full
2685.7	OUT DEF: color=black
2640.1	IN  DEF: color=black
2605.1	OUT DEF: layer[0].pos=(?,?)
2460.5	OUT DEF: layer[0].pos.j={layer[0].pos.j}
2425.5	OUT DEF: layer[0].size=(?,?)
2354.9	OUT DEF: layer[0].size.j=1
2319.8	OUT DEF: layer[01].pos=(?,?)
2181.3	OUT DEF: layer[01].pos.i={layer[01].pos.i}
2146.3	OUT DEF: layer[01].size=(?,?)
2075.6	OUT DEF: layer[01].size.i=1
2040.6	IN  DEF: size=(?,?)
2005.6	IN  DEF: layer[0].pos=(?,?)
1970.6	IN  DEF: layer[01].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (?,{layer[0].pos.j}) with size (?,1) and color yellow and mask full
  [01]: a rectangle at ({layer[01].pos.i},?) with size (1,?) and color yellow and mask full
  [011]: {layer[0]}
  [0111]: {layer[01]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color cyan
  [01]: a point at (?,?) with color red

DL input  with Mi: L = 44.8 + 1114.4 = 1159.2
DL output with Mo: L = 65.7 + 745.7 = 811.4
DL input+output M: L = 110.5 + 1860.1 = 1970.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  [0]: a point at (2,1) with color cyan
  [01]: a point at (8,9) with color red
diff: 
delta:
   (37.6 bits)
data: a background with size (10,12) and color black and layers
  [0]: a rectangle at (3,1) with size (6,1) and color yellow and mask full
  [01]: a rectangle at (8,1) with size (1,8) and color yellow and mask full
  [011]: a point at (2,1) with color cyan
  [0111]: a point at (8,9) with color red
diff: 
delta:
   (25.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  [0]: a point at (2,1) with color cyan
  [01]: a point at (8,9) with color red
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  [0]: a point at (8,9) with color red
  [01]: a point at (2,1) with color cyan
diff:   layer[01].color  layer[0].color
delta:
! 17 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,11) and color black and layers
  [0]: a point at (1,8) with color cyan
  [01]: a point at (5,1) with color red
diff: 
delta:
   (35.8 bits)
data: a background with size (8,11) and color black and layers
  [0]: a rectangle at (2,8) with size (4,1) and color yellow and mask full
  [01]: a rectangle at (5,2) with size (1,7) and color yellow and mask full
  [011]: a point at (1,8) with color cyan
  [0111]: a point at (5,1) with color red
diff: 
delta:
   (23.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  [0]: a point at (1,8) with color cyan
  [01]: a point at (5,1) with color red
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,11) and color black and layers
  [0]: a point at (5,1) with color red
  [01]: a point at (1,8) with color cyan
diff:   layer[01].color  layer[0].color
delta:
! 13 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  [0]: a point at (10,2) with color cyan
  [01]: a point at (1,8) with color red
diff: 
delta:
   (38.1 bits)
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (1,2) with size (9,1) and color yellow and mask full
  [01]: a rectangle at (1,2) with size (1,6) and color yellow and mask full
  [011]: a point at (10,2) with color cyan
  [0111]: a point at (1,8) with color red
diff: 
delta:
   (25.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  [0]: a point at (10,2) with color cyan
  [01]: a point at (1,8) with color red
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  [0]: a point at (1,8) with color red
  [01]: a point at (10,2) with color cyan
diff:   layer[01].color  layer[0].color
delta:
! 18 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  [0]: a point at (8,3) with color cyan
  [01]: a point at (2,11) with color red
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,13) and color black and layers
  [0]: a point at (2,11) with color red
  [01]: a point at (8,3) with color cyan
diff:   layer[01].color  layer[0].color
delta:
! 17 wrong pixels (generated / expected)

TEST d4a91cb9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 745.7 bits (745.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-65] Checking task d4f3cd78.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6911.2 = 6920.2
DL output with Mo: L = 9.0 + 13453.4 = 13462.4
DL input+output M: L = 17.9 + 20364.6 = 20382.5

# learning a model for train pairs
20382.5	
14707.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9360.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4213.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3527.5	OUT DEF: layer[0]={layer[0]}
3141.8	OUT DEF: size={size}
3050.2	OUT DEF: layer[01].color=cyan
2958.7	IN  DEF: layer[0].color=grey
2877.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
2786.1	OUT DEF: layer[011].color=cyan
2738.6	OUT DEF: layer[01].mask=full
2691.2	OUT DEF: layer[011].mask=full
2660.2	OUT DEF: color=black
2629.2	IN  DEF: color=black
2607.4	OUT DEF: layer[01].pos=(?,?)
2517.4	OUT DEF: layer[01].pos.j=3
2430.7	OUT DEF: layer[01].pos.i={layer[0].pos.i + 1}
2408.9	OUT DEF: layer[01].size=(?,?)
2285.5	OUT DEF: layer[01].size.j=4
2175.4	OUT DEF: layer[01].size.i={layer[0].size.i - layer[0].pos.j}
2153.6	OUT DEF: layer[011].pos=(?,?)
2063.7	OUT DEF: layer[011].pos.j=5
2041.9	OUT DEF: layer[011].size=(?,?)
1994.4	OUT DEF: layer[011].size.j=1
1972.6	IN  DEF: size=(?,?)
1799.0	IN  DEF: size.i=10
1625.3	IN  DEF: size.j=10
1603.5	IN  DEF: layer[0].pos=(?,?)
1511.9	IN  DEF: layer[0].pos.j=2
1490.1	IN  DEF: layer[0].size=(?,?)
1344.5	IN  DEF: layer[0].size.j=6

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].pos.i + 1},3) with size ({layer[0].size.i - layer[0].pos.j},4) and color cyan and mask full
  [011]: a rectangle at (?,5) with size (?,1) and color cyan and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,2) with size (?,6) and color grey and mask ?

DL input  with Mi: L = 56.7 + 943.9 = 1000.6
DL output with Mo: L = 85.0 + 258.9 = 343.8
DL input+output M: L = 141.7 + 1202.8 = 1344.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color grey and mask 110111100001100001100001100001111111
diff: 
delta:
   (50.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color grey and mask 110111100001100001100001100001111111
  [01]: a rectangle at (3,3) with size (4,4) and color cyan and mask full
  [011]: a rectangle at (3,5) with size (7,1) and color cyan and mask full
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,6) and color grey and mask 110111100001100001100001100001111111
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,2) with size (5,6) and color grey and mask 111111100001100001100001110111
diff: 
delta:
   (43.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,2) with size (5,6) and color grey and mask 111111100001100001100001110111
  [01]: a rectangle at (6,3) with size (3,4) and color cyan and mask full
  [011]: a rectangle at (0,5) with size (9,1) and color cyan and mask full
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,2) with size (5,6) and color grey and mask 111111100001100001100001110111
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (6,5) and color grey and mask 111111000100001100011000111111
diff:   layer[0].size.j
delta:
! 5 wrong pixels (generated / expected)

TEST d4f3cd78.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 258.9 bits (258.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-64] Checking task d511f180.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5475.5 = 5484.5
DL output with Mo: L = 9.0 + 5475.5 = 5484.5
DL input+output M: L = 17.9 + 10951.0 = 10968.9

# learning a model for train pairs
10968.9	
10413.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9858.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9459.1	OUT DEF: size={size}
9179.7	OUT DEF: layer[0].size={layer[0].size}
8950.3	OUT DEF: layer[0].pos={layer[0].pos}
8799.4	OUT DEF: layer[0].mask={layer[0].mask}
8726.0	OUT SHAPE at layer[01]: a point at ? with color ?
8649.1	OUT SHAPE at layer[011]: a point at ? with color ?
8511.1	OUT DEF: layer[011].color=red
8428.5	OUT SHAPE at layer[0111]: a point at ? with color ?
8333.9	OUT SHAPE at layer[01111]: a point at ? with color ?
8261.4	IN  SHAPE at layer[01]: a point at ? with color ?
7887.1	OUT DEF: layer[01]={layer[01]}
7811.4	IN  SHAPE at layer[011]: a point at ? with color ?
7437.9	OUT DEF: layer[0111]={layer[011]}
7356.7	IN  SHAPE at layer[0110]: a point at ? with color ?
6983.6	OUT DEF: layer[01111]={layer[0110]}
6890.4	IN  SHAPE at layer[01101]: a point at ? with color ?
6855.4	OUT DEF: layer[011].pos=(?,?)
6763.8	OUT DEF: layer[011].pos.i=2
6680.1	OUT DEF: layer[011].pos.j={layer[0].size.j - layer[0].pos.j}
6645.1	IN  DEF: size=(?,?)
6610.1	IN  DEF: layer[0].pos=(?,?)
6575.1	IN  DEF: layer[0].size=(?,?)
6540.1	IN  DEF: layer[01].pos=(?,?)
6448.4	IN  DEF: layer[01].pos.i=0
6356.7	IN  DEF: layer[01].pos.j=0
6321.7	IN  DEF: layer[0110].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color ? and mask {layer[0].mask}
  [01]: {layer[01]}
  [011]: a point at (2,{layer[0].size.j - layer[0].pos.j}) with color red
  [0111]: {layer[011]}
  [01111]: {layer[0110]}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a point at (0,0) with color ?
  [0110]: a point at (?,?) with color ?
  [01101]: a point at ? with color ?
  [011]: a point at ? with color ?

DL input  with Mi: L = 94.6 + 4148.7 = 4243.3
DL output with Mo: L = 70.9 + 2007.5 = 2078.4
DL input+output M: L = 165.5 + 6156.2 = 6321.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,4) and color grey and mask 11101011
  [01]: a point at (0,0) with color red
  [0110]: a point at (0,1) with color orange
  [01101]: a point at (1,2) with color pink
  [011]: a point at (1,4) with color yellow
diff: 
delta: (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
   (244.7 bits)
data: a background with size (5,5) and color grey and layers
  [0]: a rectangle at (1,0) with size (2,4) and color cyan and mask 11101011
  [01]: a point at (0,0) with color red
  [011]: a point at (2,4) with color red
  [0111]: a point at (1,4) with color yellow
  [01111]: a point at (0,1) with color orange
diff: 
delta: (1,2)=6  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=8  (4,2)=1  (4,3)=9# (4,4)=3 
   (159.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,4) and color grey and mask 11101011
  [01]: a point at (0,0) with color red
  [0110]: a point at (0,1) with color orange
  [01101]: a point at (1,2) with color pink
  [011]: a point at (1,4) with color yellow
diff: 
delta: (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,4) and color grey and mask 11101011
  [01]: a point at (0,0) with color red
  [0110]: a point at (0,1) with color orange
  [01101]: a point at (1,2) with color pink
  [011]: a point at (2,4) with color red
diff: 
delta: (1,4)=4  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (1,0) with size (2,4) and color grey and mask 11101011
  [01]: a point at (0,0) with color red
  [0110]: a point at (0,1) with color orange
  [01101]: a point at (1,2) with color pink
  [011]: a point at (3,2) with color yellow
diff: 
delta: (1,4)=4  (2,4)=2  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 21 wrong pixels (generated / expected)

TRAIN d511f180.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (2,1) and color grey and mask full
  [01]: a point at (0,0) with color green
  [0110]: a point at (0,2) with color blue
  [01101]: a point at (1,2) with color cyan
  [011]: a point at (2,2) with color brown
diff: 
delta: (2,0)=2 
   (93.1 bits)
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (2,1) and color cyan and mask full
  [01]: a point at (0,0) with color green
  [011]: a point at (2,0) with color red
  [0111]: a point at (2,2) with color brown
  [01111]: a point at (0,2) with color blue
diff: 
delta: (1,2)=5#
   (28.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (2,1) and color grey and mask full
  [01]: a point at (0,0) with color green
  [0110]: a point at (0,2) with color blue
  [01101]: a point at (1,2) with color cyan
  [011]: a point at (2,0) with color red
diff: 
delta: (2,2)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (2,1) and color grey and mask full
  [01]: a point at (0,0) with color green
  [0110]: a point at (0,2) with color blue
  [01101]: a point at (1,2) with color cyan
  [011]: a point at (2,2) with color brown
diff: 
delta: (2,0)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,1) with size (2,1) and color grey and mask full
  [01]: a point at (0,0) with color green
  [0110]: a point at (0,2) with color blue
  [01101]: a point at (2,0) with color red
  [011]: a point at (1,2) with color cyan
diff: 
delta: (2,2)=9#
! 6 wrong pixels (generated / expected)

TRAIN d511f180.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [01]: a point at (0,0) with color pink
  [0110]: a point at (0,2) with color green
  [01101]: a point at (2,2) with color red
  [011]: a point at (1,1) with color orange
diff: 
delta:
   (77.0 bits)
data: a background with size (3,3) and color cyan and layers
  [0]: a rectangle at (2,0) with size (1,2) and color grey and mask full
  [01]: a point at (0,0) with color pink
  [011]: a point at (2,2) with color red
  [0111]: a point at (1,1) with color orange
  [01111]: a point at (0,2) with color green
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [01]: a point at (0,0) with color pink
  [0110]: a point at (0,2) with color green
  [01101]: a point at (1,1) with color orange
  [011]: a point at (2,2) with color red
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [01]: a point at (0,0) with color pink
  [0110]: a point at (0,2) with color green
  [01101]: a point at (2,2) with color red
  [011]: a point at (1,1) with color orange
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (2,0) with size (1,2) and color cyan and mask full
  [01]: a point at (0,0) with color pink
  [0110]: a point at (1,1) with color orange
  [01101]: a point at (0,2) with color green
  [011]: a point at (2,2) with color red
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d511f180.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1011
  [01]: a point at (0,2) with color yellow
  [0110]: a point at (1,2) with color orange
  [01101]: a point at (2,1) with color orange
  [011]: a point at (2,2) with color blue
diff:   layer[01].pos.j
delta: (0,3)=5# (1,0)=3  (1,3)=5# (2,0)=3  (2,3)=9# (3,0)=6  (3,1)=4 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1011
  [01]: a point at (0,2) with color yellow
  [0110]: a point at (1,2) with color orange
  [01101]: a point at (2,1) with color orange
  [011]: a point at (2,3) with color brown
diff:   layer[01].pos.j
delta: (0,3)=5# (1,0)=3  (1,3)=5# (2,0)=3  (2,2)=1  (3,0)=6  (3,1)=4 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,2) and color cyan and mask 1011
  [01]: a point at (0,2) with color yellow
  [0110]: a point at (1,2) with color orange
  [01101]: a point at (2,1) with color orange
  [011]: a point at (3,0) with color pink
diff:   layer[01].pos.j
delta: (0,3)=5# (1,0)=3  (1,3)=5# (2,0)=3  (2,2)=1  (2,3)=9# (3,1)=4 
! 13 wrong pixels (generated / expected)

TEST d511f180.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2007.5 bits (2007.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-63] Checking task d5d6de2d.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10265.5 = 10274.4
DL output with Mo: L = 9.0 + 4071.8 = 4080.7
DL input+output M: L = 17.9 + 14337.2 = 14355.1

# learning a model for train pairs
14355.1	
7998.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5638.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4758.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4157.3	OUT DEF: size={size}
4019.3	OUT DEF: layer[0].color=green
3881.3	IN  DEF: layer[01].color=red
3810.6	OUT DEF: layer[0].mask=full
3765.0	OUT DEF: color=black
3719.4	IN  DEF: color=black
3684.4	OUT DEF: layer[0].pos=(?,?)
3546.5	OUT DEF: layer[0].pos.i={layer[01].pos.i + 1}
3408.5	OUT DEF: layer[0].pos.j={layer[01].pos.j + 1}
3373.5	OUT DEF: layer[0].size=(?,?)
3229.8	OUT DEF: layer[0].size.i={layer[01].size.i - 2}
3117.9	OUT DEF: layer[0].size.j={layer[01].size.j - 2}
3082.8	IN  DEF: size=(?,?)
3047.8	IN  DEF: layer[0].pos=(?,?)
3012.8	IN  DEF: layer[0].size=(?,?)
2977.8	IN  DEF: layer[01].pos=(?,?)
2942.8	IN  DEF: layer[01].size=(?,?)
2936.5	IN  DEF: layer[0].color=red

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[01].pos.i + 1},{layer[01].pos.j + 1}) with size ({layer[01].size.i - 2},{layer[01].size.j - 2}) and color green and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color red and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color red and mask ?

DL input  with Mi: L = 67.4 + 2606.1 = 2673.4
DL output with Mo: L = 67.3 + 195.8 = 263.1
DL input+output M: L = 134.7 + 2801.8 = 2936.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (5,4) with size (5,4) and color red and mask 11111001100110011111
diff: 
delta:
   (94.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,5) with size (3,2) and color green and mask full
diff: 
delta: (2,2)=3 
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,4) with size (5,4) and color red and mask 11111001100110011111
  [01]: a rectangle at (1,1) with size (3,3) and color red and mask 111101111
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (5,4) with size (5,4) and color red and mask 11111001100110011111
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (1,3) and color red and mask full
  [01]: a rectangle at (1,4) with size (4,3) and color red and mask 111101101111
diff: 
delta:
   (72.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,1) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,1) and color black and mask full
  [01]: a rectangle at (1,4) with size (4,3) and color red and mask full
diff:   layer[0].color
delta:
correct output grid

TRAIN d5d6de2d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,10) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,1) with size (5,5) and color red and mask 1111110001100011000111111
diff: 
delta:
   (93.4 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (1,1) with size (5,5) and color red and mask 1111110001100011000111111
  [01]: a rectangle at (7,10) with size (2,2) and color red and mask full
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (7,10) with size (2,2) and color red and mask full
  [01]: a rectangle at (1,1) with size (5,5) and color red and mask 1111110001100011000111111
diff: 
delta:
correct output grid

TRAIN d5d6de2d.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,1) with size (6,8) and color red and mask 111111111000000110000001100000011000000111111111
  [01]: a rectangle at (0,0) with size (3,3) and color red and mask 111101111
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 111101111
  [01]: a rectangle at (4,1) with size (6,8) and color red and mask 111111111000000110000001100000011000000111111111
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (25,25) and color black and layers
  [0]: a rectangle at (9,15) with size (4,9) and color red and mask 111111111100000001100000001111111111
  [01]: a rectangle at (18,1) with size (6,5) and color red and mask 111111000110001100011000111111
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (25,25) and color black and layers
  [0]: a rectangle at (18,1) with size (6,5) and color red and mask 111111000110001100011000111111
  [01]: a rectangle at (9,15) with size (4,9) and color red and mask 111111111100000001100000001111111111
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (25,25) and color black and layers
  [0]: a rectangle at (9,15) with size (4,9) and color red and mask 111111111100000001100000001111111111
  [01]: a rectangle at (1,1) with size (3,7) and color red and mask 111111110000011111111
diff: 
delta: (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2  (18,1)=2  (18,2)=2  (18,3)=2  (18,4)=2  (18,5)=2  (19,1)=2  (19,5)=2  (20,1)=2  (20,5)=2  (21,1)=2  (21,5)=2  (22,1)=2  (22,5)=2  (23,1)=2  (23,2)=2  (23,3)=2  (23,4)=2  (23,5)=2 
! 26 wrong pixels (generated / expected)

TEST d5d6de2d.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 195.8 bits (195.8 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-62] Checking task d631b094.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2098.8 = 2107.8
DL output with Mo: L = 9.0 + 649.0 = 657.9
DL input+output M: L = 17.9 + 2747.8 = 2765.7

# learning a model for train pairs
2765.7	
2341.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2023.1	OUT DEF: color={layer[0].color}
1962.9	IN  DEF: color=black
1914.7	OUT DEF: size=(?,?)
1820.8	OUT DEF: size.i=1
1772.6	IN  DEF: size=(?,?)
1555.0	IN  DEF: size.i=3
1337.5	IN  DEF: size.j=3
1289.3	IN  DEF: layer[0].pos=(?,?)
1241.1	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,?) and color {layer[0].color} and layers
WHERE (Mi)
a background with size (3,3) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 43.0 + 1000.3 = 1043.3
DL output with Mo: L = 13.2 + 184.6 = 197.8
DL input+output M: L = 56.2 + 1184.9 = 1241.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color blue and mask 1001
diff: 
delta:
   (25.4 bits)
data: a background with size (1,2) and color blue and layers
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color blue and mask 1001
diff: 
delta:
! size mismatch, 1x10 instead of 1x2

TRAIN d631b094.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask 100110
diff: 
delta:
   (28.6 bits)
data: a background with size (1,3) and color red and layers
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color red and mask 100110
diff: 
delta:
! size mismatch, 1x10 instead of 1x3
>> Trial 2
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 101110101
diff:   color
delta:
! size mismatch, 1x10 instead of 1x3

TRAIN d631b094.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color orange and mask full
diff: 
delta:
   (17.4 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color orange and mask full
diff: 
delta:
! size mismatch, 1x10 instead of 1x1
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,1) and color black and mask full
diff: 
delta: (0,1)=7#
! size mismatch, 1x10 instead of 1x1

TRAIN d631b094.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color cyan and mask 11110
diff: 
delta:
   (28.6 bits)
data: a background with size (1,4) and color cyan and layers
diff: 
delta:
   (6.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,2) and color cyan and mask 11110
diff: 
delta:
! size mismatch, 1x10 instead of 1x4

TRAIN d631b094.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 100101011
diff: 
delta:
! size mismatch, 1x10 instead of 1x5
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 11010100
diff:   color
delta:
! size mismatch, 1x10 instead of 1x5

TEST d631b094.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 184.6 bits (184.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-61] Checking task d687bc17.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27134.4 = 27143.4
DL output with Mo: L = 9.0 + 26406.4 = 26415.3
DL input+output M: L = 17.9 + 53540.8 = 53558.7

# learning a model for train pairs
53558.7	
47700.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
42262.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
36837.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
31402.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27296.3	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
23044.8	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 16240.1 = 16283.4
DL output with Mo: L = 76.0 + 6685.3 = 6761.3
DL input+output M: L = 119.4 + 22925.4 = 23044.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,1) with size (1,13) and color yellow and mask full
  [01]: a rectangle at (9,1) with size (1,13) and color cyan and mask full
diff: 
delta: (1,0)=2  (1,14)=3  (2,0)=2  (2,10)=3  (2,14)=3  (3,0)=2  (3,3)=2  (3,14)=3  (4,0)=2  (4,7)=7# (4,14)=3  (5,0)=2  (5,3)=3  (5,14)=3  (6,0)=2  (6,5)=8  (6,14)=3  (7,0)=2  (7,9)=4  (7,11)=2  (7,14)=3  (8,0)=2  (8,14)=3 
   (511.8 bits)
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,1) with size (2,13) and color yellow and mask 1000000001111111111111
  [01]: a rectangle at (9,1) with size (1,13) and color cyan and mask full
  [011]: a rectangle at (1,0) with size (8,2) and color red and mask 111010101110101
  [0111]: a rectangle at (1,13) with size (8,2) and color green and mask 1010101110101110
diff: 
delta: (8,5)=8 
   (229.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  [0]: a rectangle at (0,1) with size (1,13) and color yellow and mask full
  [01]: a rectangle at (9,1) with size (1,13) and color cyan and mask full
diff: 
delta: (1,0)=2  (1,14)=3  (2,0)=2  (2,10)=3  (2,14)=3  (3,0)=2  (3,3)=2  (3,14)=3  (4,0)=2  (4,7)=7# (4,14)=3  (5,0)=2  (5,3)=3  (5,14)=3  (6,0)=2  (6,5)=8  (6,14)=3  (7,0)=2  (7,9)=4  (7,11)=2  (7,14)=3  (8,0)=2  (8,14)=3 
! size mismatch, 10x10 instead of 10x15

TRAIN d687bc17.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,1) with size (1,10) and color blue and mask full
  [01]: a rectangle at (11,1) with size (1,10) and color orange and mask full
diff: 
delta: (1,0)=2  (1,11)=4  (2,0)=2  (2,9)=7# (2,11)=4  (3,0)=2  (3,7)=2  (3,11)=4  (4,0)=2  (4,4)=3  (4,11)=4  (5,0)=2  (5,11)=4  (6,0)=2  (6,8)=4  (6,11)=4  (7,0)=2  (7,11)=4  (8,0)=2  (8,3)=8  (8,11)=4  (9,0)=2  (9,5)=1  (9,8)=7# (9,11)=4  (10,0)=2  (10,11)=4 
   (581.5 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (10,1) with size (2,10) and color orange and mask 11111111110110000000
  [01]: a rectangle at (0,1) with size (2,10) and color blue and mask 100001111111111
  [011]: a rectangle at (1,0) with size (10,1) and color red and mask full
  [0111]: a rectangle at (1,11) with size (10,1) and color yellow and mask full
diff: 
delta: (3,1)=2  (6,10)=4 
   (228.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,1) with size (1,10) and color blue and mask full
  [01]: a rectangle at (11,1) with size (1,10) and color orange and mask full
diff: 
delta: (1,0)=2  (1,11)=4  (2,0)=2  (2,9)=7# (2,11)=4  (3,0)=2  (3,7)=2  (3,11)=4  (4,0)=2  (4,4)=3  (4,11)=4  (5,0)=2  (5,11)=4  (6,0)=2  (6,8)=4  (6,11)=4  (7,0)=2  (7,11)=4  (8,0)=2  (8,3)=8  (8,11)=4  (9,0)=2  (9,5)=1  (9,8)=7# (9,11)=4  (10,0)=2  (10,11)=4 
! size mismatch, 10x10 instead of 12x12

TRAIN d687bc17.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,11) and color black and layers
  [0]: a rectangle at (1,0) with size (12,1) and color yellow and mask full
  [01]: a rectangle at (1,10) with size (12,1) and color cyan and mask full
diff: 
delta: (0,1)=6  (0,2)=6  (0,3)=6  (0,4)=6  (0,5)=6  (0,6)=6  (0,7)=6  (0,8)=6  (0,9)=6  (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8  (13,1)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3 
   (530.7 bits)
data: a background with size (14,11) and color black and layers
  [0]: a rectangle at (1,9) with size (12,2) and color cyan and mask 101011111010101011101010
  [01]: a rectangle at (1,0) with size (12,1) and color yellow and mask full
  [011]: a rectangle at (0,1) with size (1,9) and color pink and mask full
  [0111]: a rectangle at (13,1) with size (1,9) and color green and mask full
diff: 
delta: (1,8)=6  (7,1)=4 
   (211.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,11) and color black and layers
  [0]: a rectangle at (1,0) with size (12,1) and color yellow and mask full
  [01]: a rectangle at (1,10) with size (12,1) and color cyan and mask full
diff: 
delta: (0,1)=6  (0,2)=6  (0,3)=6  (0,4)=6  (0,5)=6  (0,6)=6  (0,7)=6  (0,8)=6  (0,9)=6  (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8  (13,1)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3 
! size mismatch, 10x10 instead of 14x11

TRAIN d687bc17.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,17) and color black and layers
  [0]: a rectangle at (0,1) with size (1,15) and color yellow and mask full
  [01]: a rectangle at (13,1) with size (1,15) and color cyan and mask full
diff: 
delta: (1,0)=1  (1,16)=2  (2,0)=1  (2,7)=8  (2,12)=1  (2,16)=2  (3,0)=1  (3,3)=2  (3,14)=3  (3,16)=2  (4,0)=1  (4,16)=2  (5,0)=1  (5,6)=1  (5,10)=7# (5,13)=8  (5,16)=2  (6,0)=1  (6,16)=2  (7,0)=1  (7,4)=2  (7,16)=2  (8,0)=1  (8,16)=2  (9,0)=1  (9,5)=6  (9,8)=4  (9,14)=4  (9,16)=2  (10,0)=1  (10,3)=8  (10,11)=1  (10,16)=2  (11,0)=1  (11,16)=2  (12,0)=1  (12,16)=2 
! size mismatch, 10x10 instead of 14x17

TEST d687bc17.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6685.3 bits (6685.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-60] Checking task d6ad076f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 19914.8 = 19923.7
DL output with Mo: L = 9.0 + 26088.8 = 26097.8
DL input+output M: L = 17.9 + 46003.6 = 46021.5

# learning a model for train pairs
46021.5	
34804.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
23615.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16232.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10094.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6062.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5072.7	OUT DEF: layer[0]={layer[0]}
4132.1	OUT DEF: layer[01]={layer[01]}
3554.3	OUT DEF: size={size}
3416.3	OUT DEF: layer[011].color=cyan
3345.6	OUT DEF: layer[011].mask=full
3275.0	IN  DEF: layer[0].mask=full
3204.3	IN  DEF: layer[01].mask=full
3158.7	OUT DEF: color=black
3113.1	IN  DEF: color=black
3078.1	OUT DEF: layer[011].pos=(?,?)
2949.0	OUT DEF: layer[011].pos.i={layer[0].pos.i + 3}
2914.0	OUT DEF: layer[011].size=(?,?)
2878.9	IN  DEF: size=(?,?)
2615.6	IN  DEF: size.i=10
2352.3	IN  DEF: size.j=10
2317.3	IN  DEF: layer[0].pos=(?,?)
2282.3	IN  DEF: layer[0].size=(?,?)
2247.2	IN  DEF: layer[01].pos=(?,?)
2212.2	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at ({layer[0].pos.i + 3},?) with size (?,?) and color cyan and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 74.0 + 1606.3 = 1680.3
DL output with Mo: L = 51.8 + 480.2 = 532.0
DL input+output M: L = 125.8 + 2086.4 = 2212.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,4) and color red and mask full
  [01]: a rectangle at (7,0) with size (3,6) and color orange and mask full
diff: 
delta:
   (52.7 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,4) and color red and mask full
  [01]: a rectangle at (7,0) with size (3,6) and color orange and mask full
  [011]: a rectangle at (4,2) with size (3,2) and color cyan and mask full
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,0) with size (3,6) and color orange and mask full
  [01]: a rectangle at (1,1) with size (3,4) and color red and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (3,4) and color red and mask full
  [01]: a rectangle at (7,0) with size (3,6) and color orange and mask full
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN d6ad076f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (8,3) and color yellow and mask full
  [01]: a rectangle at (3,7) with size (5,3) and color pink and mask full
diff: 
delta:
   (54.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (8,3) and color yellow and mask full
  [01]: a rectangle at (3,7) with size (5,3) and color pink and mask full
  [011]: a rectangle at (4,4) with size (3,3) and color cyan and mask full
diff: 
delta:
   (15.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (8,3) and color yellow and mask full
  [01]: a rectangle at (3,7) with size (5,3) and color pink and mask full
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,7) with size (5,3) and color pink and mask full
  [01]: a rectangle at (1,1) with size (8,3) and color yellow and mask full
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN d6ad076f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,9) and color green and mask full
  [01]: a rectangle at (8,3) with size (2,6) and color brown and mask full
diff: 
delta:
   (53.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,9) and color green and mask full
  [01]: a rectangle at (8,3) with size (2,6) and color brown and mask full
  [011]: a rectangle at (3,4) with size (5,4) and color cyan and mask full
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (3,9) and color green and mask full
  [01]: a rectangle at (8,3) with size (2,6) and color brown and mask full
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,3) with size (2,6) and color brown and mask full
  [01]: a rectangle at (0,0) with size (3,9) and color green and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN d6ad076f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (8,4) and color blue and mask full
  [01]: a rectangle at (1,7) with size (6,3) and color red and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST d6ad076f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 480.2 bits (480.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-59] Checking task d89b689b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5029.6 = 5038.6
DL output with Mo: L = 9.0 + 2869.7 = 2878.7
DL input+output M: L = 17.9 + 7899.4 = 7917.3

# learning a model for train pairs
7917.3	
6601.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6022.9	OUT DEF: size={size}
5884.9	IN  DEF: layer[0].color=cyan
5806.3	IN  SHAPE at layer[01]: a point at ? with color ?
5721.7	IN  SHAPE at layer[011]: a point at ? with color ?
5626.7	IN  SHAPE at layer[0111]: a point at ? with color ?
5506.7	IN  SHAPE at layer[01111]: a point at ? with color ?
5428.7	OUT SHAPE at layer[0]: a point at ? with color ?
5111.2	OUT DEF: layer[0].pos={layer[0].pos}
5026.8	OUT SHAPE at layer[01]: a point at ? with color ?
4888.8	OUT DEF: layer[01].color={layer[01111].color}
4793.8	OUT SHAPE at layer[011]: a point at ? with color ?
4655.3	OUT DEF: layer[011].color={layer[011].color}
4535.2	OUT SHAPE at layer[0111]: a point at ? with color ?
4464.6	IN  DEF: layer[0].mask=full
4419.0	OUT DEF: color=black
4373.4	IN  DEF: color=black
4338.4	OUT DEF: layer[01].pos=(?,?)
4202.0	OUT DEF: layer[01].pos.j=5
4070.5	OUT DEF: layer[01].pos.i={layer[0].pos.i + 1}
4035.5	OUT DEF: layer[011].pos=(?,?)
4000.5	OUT DEF: layer[0111].pos=(?,?)
3965.5	IN  DEF: size=(?,?)
3702.2	IN  DEF: size.i=10
3438.8	IN  DEF: size.j=10
3403.8	IN  DEF: layer[0].pos=(?,?)
3368.8	IN  DEF: layer[0].size=(?,?)
3240.2	IN  DEF: layer[0].size.i=2
3111.5	IN  DEF: layer[0].size.j=2
3076.5	IN  DEF: layer[01].pos=(?,?)
2938.5	IN  DEF: layer[01].pos.i=0
2903.5	IN  DEF: layer[011].pos=(?,?)
2868.5	IN  DEF: layer[0111].pos=(?,?)
2833.4	IN  DEF: layer[01111].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a point at {layer[0].pos} with color ?
  [01]: a point at ({layer[0].pos.i + 1},5) with color {layer[01111].color}
  [011]: a point at (?,?) with color {layer[011].color}
  [0111]: a point at (?,?) with color ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (2,2) and color cyan and mask full
  [01]: a point at (0,?) with color ?
  [011]: a point at (?,?) with color ?
  [0111]: a point at (?,?) with color ?
  [01111]: a point at (?,?) with color ?

DL input  with Mi: L = 111.2 + 1811.1 = 1922.3
DL output with Mo: L = 75.3 + 835.9 = 911.2
DL input+output M: L = 186.4 + 2647.0 = 2833.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,8) with color orange
  [011]: a point at (8,1) with color yellow
  [0111]: a point at (3,1) with color pink
  [01111]: a point at (9,9) with color brown
diff: 
delta:
   (60.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a point at (4,4) with color pink
  [01]: a point at (5,5) with color brown
  [011]: a point at (5,4) with color yellow
  [0111]: a point at (4,5) with color orange
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,8) with color orange
  [011]: a point at (3,1) with color pink
  [0111]: a point at (8,1) with color yellow
  [01111]: a point at (9,9) with color brown
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,8) with color orange
  [011]: a point at (3,1) with color pink
  [0111]: a point at (9,9) with color brown
  [01111]: a point at (8,1) with color yellow
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,8) with color orange
  [011]: a point at (8,1) with color yellow
  [0111]: a point at (3,1) with color pink
  [01111]: a point at (9,9) with color brown
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d89b689b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,2) with color grey
  [011]: a point at (1,8) with color brown
  [0111]: a point at (8,1) with color red
  [01111]: a point at (6,9) with color blue
diff: 
delta:
   (60.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a point at (4,4) with color grey
  [01]: a point at (5,5) with color blue
  [011]: a point at (4,5) with color brown
  [0111]: a point at (5,4) with color red
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,2) with color grey
  [011]: a point at (1,8) with color brown
  [0111]: a point at (6,9) with color blue
  [01111]: a point at (8,1) with color red
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,2) with color grey
  [011]: a point at (1,8) with color brown
  [0111]: a point at (8,1) with color red
  [01111]: a point at (6,9) with color blue
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (0,2) with color grey
  [011]: a point at (6,9) with color blue
  [0111]: a point at (1,8) with color brown
  [01111]: a point at (8,1) with color red
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN d89b689b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color cyan and mask full
  [01]: a point at (0,3) with color blue
  [011]: a point at (0,9) with color yellow
  [0111]: a point at (6,9) with color pink
  [01111]: a point at (7,2) with color green
diff: 
delta:
   (60.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,5) with color blue
  [01]: a point at (3,5) with color green
  [011]: a point at (2,6) with color yellow
  [0111]: a point at (3,6) with color pink
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color cyan and mask full
  [01]: a point at (0,3) with color blue
  [011]: a point at (0,9) with color yellow
  [0111]: a point at (6,9) with color pink
  [01111]: a point at (7,2) with color green
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color cyan and mask full
  [01]: a point at (0,3) with color blue
  [011]: a point at (0,9) with color yellow
  [0111]: a point at (7,2) with color green
  [01111]: a point at (6,9) with color pink
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,5) with size (2,2) and color cyan and mask full
  [01]: a point at (0,3) with color blue
  [011]: a point at (6,9) with color pink
  [0111]: a point at (0,9) with color yellow
  [01111]: a point at (7,2) with color green
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d89b689b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (1,6) with color yellow
  [011]: a point at (3,1) with color green
  [0111]: a point at (8,8) with color orange
  [01111]: a point at (9,2) with color pink
diff:   layer[01].pos.i
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (1,6) with color yellow
  [011]: a point at (3,1) with color green
  [0111]: a point at (9,2) with color pink
  [01111]: a point at (8,8) with color orange
diff:   layer[01].pos.i
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,4) with size (2,2) and color cyan and mask full
  [01]: a point at (1,6) with color yellow
  [011]: a point at (8,8) with color orange
  [0111]: a point at (3,1) with color green
  [01111]: a point at (9,2) with color pink
diff:   layer[01].pos.i
delta:
! 5 wrong pixels (generated / expected)

TEST d89b689b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 835.9 bits (835.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-58] Checking task d8c310e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8036.0 = 8044.9
DL output with Mo: L = 9.0 + 14266.3 = 14275.3
DL input+output M: L = 17.9 + 22302.3 = 22320.2

# learning a model for train pairs
22320.2	
17222.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15139.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14417.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13770.1	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
13191.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12639.1	OUT DEF: size={size}
12334.4	OUT DEF: layer[0].pos={layer[011].pos}
12096.6	OUT DEF: color={layer[0].color}
11958.1	OUT DEF: layer[0].color={layer[011].color}
11819.8	OUT DEF: layer[01].color={color}
11749.1	OUT DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at {layer[011].pos} with size ? and color {layer[011].color} and mask full
  [01]: a rectangle at ? with size ? and color {color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 4533.1 = 4592.9
DL output with Mo: L = 46.6 + 7109.6 = 7156.2
DL input+output M: L = 106.4 + 11642.7 = 11749.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (3,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,4) with size (2,2) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,7) and color blue and mask full
diff: 
delta:
   (102.9 bits)
data: a background with size (5,15) and color red and layers
  [0]: a rectangle at (4,0) with size (1,1) and color blue and mask full
  [01]: a rectangle at (0,0) with size (4,15) and color black and mask 1001001001001111111111111111111111111111111111111111111111
diff: 
delta: (4,3)=1  (4,6)=1  (4,9)=1  (4,12)=1 
   (169.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (3,1) with size (2,2) and color red and mask full
  [01]: a rectangle at (3,4) with size (2,2) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,7) and color blue and mask full
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (3,1) with size (2,5) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,1) and color blue and mask full
  [011]: a rectangle at (4,6) with size (1,1) and color blue and mask full
diff: 
delta: (3,3)=0  (4,3)=1 
! 51 wrong pixels (generated / expected)

TRAIN d8c310e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (2,2) with size (3,1) and color red and mask full
  [01]: a rectangle at (2,6) with size (3,1) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,6) and color green and mask full
diff: 
delta: (4,3)=1  (4,7)=1 
   (138.3 bits)
data: a background with size (5,15) and color red and layers
  [0]: a rectangle at (4,0) with size (1,14) and color green and mask full
  [01]: a rectangle at (0,0) with size (4,15) and color black and mask 11101110111011011101110111011111111111111111111111111111111
diff: 
delta: (4,2)=2  (4,3)=1  (4,6)=2  (4,7)=1  (4,10)=2  (4,11)=1 
   (212.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (2,2) with size (3,1) and color red and mask full
  [01]: a rectangle at (4,0) with size (1,6) and color green and mask full
  [011]: a rectangle at (2,6) with size (3,1) and color red and mask full
diff: 
delta: (4,3)=1  (4,7)=1 
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (2,2) with size (3,1) and color red and mask full
  [01]: a rectangle at (2,6) with size (3,1) and color red and mask full
  [011]: a rectangle at (4,0) with size (1,6) and color green and mask full
diff: 
delta: (4,3)=1  (4,7)=1 
! 57 wrong pixels (generated / expected)

TRAIN d8c310e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (2,5) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (2,0) with size (3,1) and color yellow and mask full
  [011]: a rectangle at (4,2) with size (1,8) and color red and mask full
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
   (212.2 bits)
data: a background with size (5,15) and color yellow and layers
  [0]: a rectangle at (4,2) with size (1,2) and color red and mask full
  [01]: a rectangle at (0,0) with size (4,15) and color black and mask 100001100001100110011110011110111111111111111111111111111111
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (3,10)=3  (3,13)=3  (4,1)=3  (4,4)=3  (4,7)=3  (4,8)=2  (4,9)=2  (4,10)=3  (4,13)=3  (4,14)=2 
   (329.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (2,5) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (4,2) with size (1,8) and color red and mask full
  [011]: a rectangle at (2,0) with size (3,1) and color yellow and mask full
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (2,5) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (2,0) with size (3,1) and color yellow and mask full
  [011]: a rectangle at (4,2) with size (1,8) and color red and mask full
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 54 wrong pixels (generated / expected)

TRAIN d8c310e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  [0]: a rectangle at (3,1) with size (1,9) and color red and mask full
  [01]: a rectangle at (2,2) with size (3,1) and color red and mask full
  [011]: a rectangle at (3,0) with size (2,10) and color pink and mask full
diff: 
delta: (2,6)=2  (3,3)=0  (3,4)=6  (3,7)=0  (3,8)=6  (4,3)=3  (4,6)=2  (4,7)=3 
! 53 wrong pixels (generated / expected)

TEST d8c310e9.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7109.6 bits (7109.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-57] Checking task d90796e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4230.4 = 4239.4
DL output with Mo: L = 9.0 + 3242.7 = 3251.6
DL input+output M: L = 17.9 + 7473.1 = 7491.0

# learning a model for train pairs
7491.0	
7027.2	OUT DEF: size={size}
6948.9	OUT SHAPE at layer[0]: a point at ? with color ?
6860.3	OUT SHAPE at layer[01]: a point at ? with color ?
6787.7	IN  SHAPE at layer[0]: a point at ? with color ?
6380.6	OUT DEF: layer[0]={layer[0]}
6335.0	OUT DEF: color=black
6289.4	IN  DEF: color=black
6254.4	OUT DEF: layer[01].pos=(?,?)
6150.1	OUT DEF: layer[01].pos.i={size.i - size.j}
6115.1	IN  DEF: size=(?,?)
6080.0	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a point at ({size.i - size.j},?) with color ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color ?

DL input  with Mi: L = 27.4 + 4023.5 = 4050.8
DL output with Mo: L = 32.2 + 1997.1 = 2029.2
DL input+output M: L = 59.5 + 6020.5 = 6080.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,1) with color grey
diff: 
delta: (0,0)=3  (0,1)=2 
   (52.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,1) with color grey
  [01]: a point at (0,0) with color cyan
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color green
diff: 
delta: (0,1)=2  (2,1)=5#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,1) with color red
diff: 
delta: (0,0)=3  (2,1)=5#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,1) with color grey
diff: 
delta: (0,0)=3  (0,1)=2 
! 1 wrong pixels (generated / expected)

TRAIN d90796e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,6) and color black and layers
  [0]: a point at (0,0) with color grey
diff: 
delta: (1,2)=3  (1,3)=2  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
   (148.4 bits)
data: a background with size (7,6) and color black and layers
  [0]: a point at (0,0) with color grey
  [01]: a point at (1,2) with color cyan
diff: 
delta: (3,1)=8  (3,5)=2  (5,0)=5# (5,3)=3 
   (78.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
  [0]: a point at (0,0) with color grey
diff: 
delta: (1,2)=3  (1,3)=2  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,6) and color black and layers
  [0]: a point at (1,2) with color green
diff: 
delta: (0,0)=5# (1,3)=2  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,6) and color black and layers
  [0]: a point at (1,3) with color red
diff: 
delta: (0,0)=5# (1,2)=3  (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 8 wrong pixels (generated / expected)

TRAIN d90796e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [0]: a point at (1,0) with color green
diff: 
delta: (0,5)=2  (1,6)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
   (201.2 bits)
data: a background with size (7,7) and color black and layers
  [0]: a point at (1,0) with color green
  [01]: a point at (0,5) with color red
diff: 
delta: (1,6)=3  (2,0)=5# (2,3)=8  (5,0)=8  (5,5)=8  (6,3)=5#
   (113.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a point at (0,5) with color red
diff: 
delta: (1,0)=3  (1,6)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [0]: a point at (1,0) with color green
diff: 
delta: (0,5)=2  (1,6)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  [0]: a point at (1,6) with color green
diff: 
delta: (0,5)=2  (1,0)=3  (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 8 wrong pixels (generated / expected)

TRAIN d90796e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  [0]: a point at (0,4) with color red
diff: 
delta: (0,8)=5# (1,1)=2  (1,6)=3  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,9) and color black and layers
  [0]: a point at (0,8) with color grey
diff: 
delta: (0,4)=2  (1,1)=2  (1,6)=3  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,9) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta: (0,4)=2  (0,8)=5# (1,6)=3  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 13 wrong pixels (generated / expected)

TEST d90796e8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1997.1 bits (1997.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-56] Checking task d9f24cd1.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2455.4 = 2464.3
DL output with Mo: L = 9.0 + 12394.1 = 12403.1
DL input+output M: L = 17.9 + 14849.5 = 14867.4

# learning a model for train pairs
14867.4	
11953.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9029.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6139.9	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5753.5	OUT DEF: size={size}
5662.0	OUT DEF: layer[0].color=red
5570.4	OUT DEF: layer[01].color=red
5478.9	OUT DEF: layer[011].color=red
5422.1	OUT SHAPE at layer[0111]: a point at ? with color ?
5330.5	OUT DEF: layer[0111].color=grey
5261.8	OUT SHAPE at layer[01111]: a point at ? with color ?
5170.3	OUT DEF: layer[01111].color=grey
5122.9	OUT DEF: layer[01].mask=full
5075.4	OUT DEF: layer[011].mask=full
5030.5	IN  SHAPE at layer[0]: a point at ? with color ?
4810.0	OUT DEF: layer[0111]={layer[0]}
4718.5	IN  DEF: layer[0].color=grey
4671.7	IN  SHAPE at layer[01]: a point at ? with color ?
4452.3	OUT DEF: layer[01111]={layer[01]}
4360.7	IN  DEF: layer[01].color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color red and mask ?
  [01]: a rectangle at ? with size ? and color red and mask full
  [011]: a rectangle at ? with size ? and color red and mask full
  [0111]: {layer[0]}
  [01111]: {layer[01]}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color grey
  [01]: a point at ? with color grey

DL input  with Mi: L = 32.7 + 2155.3 = 2188.0
DL output with Mo: L = 68.1 + 2104.5 = 2172.7
DL input+output M: L = 100.9 + 4259.8 = 4360.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,6) with color grey
  [01]: a point at (5,2) with color grey
diff: 
delta: (9,1)=2  (9,4)=2  (9,6)=2 
   (98.7 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,6) with size (10,2) and color red and mask 1010101011110101010
  [01]: a rectangle at (0,1) with size (10,1) and color red and mask full
  [011]: a rectangle at (0,4) with size (10,1) and color red and mask full
  [0111]: a point at (3,6) with color grey
  [01111]: a point at (5,2) with color grey
diff: 
delta:
   (95.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,6) with color grey
  [01]: a point at (5,2) with color grey
diff: 
delta: (9,1)=2  (9,4)=2  (9,6)=2 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,6) with color grey
  [01]: a point at (9,1) with color red
diff:   layer[01].color
delta: (5,2)=5# (9,4)=2  (9,6)=2 
! 31 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,5) with color grey
  [01]: a point at (5,1) with color grey
diff: 
delta: (6,8)=5# (9,1)=2  (9,4)=2  (9,7)=2 
   (116.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (10,2) and color red and mask 1010111101010101010
  [01]: a rectangle at (0,4) with size (10,1) and color red and mask full
  [011]: a rectangle at (0,7) with size (10,1) and color red and mask full
  [0111]: a point at (3,5) with color grey
  [01111]: a point at (5,1) with color grey
diff: 
delta: (6,8)=5#
   (115.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,5) with color grey
  [01]: a point at (5,1) with color grey
diff: 
delta: (6,8)=5# (9,1)=2  (9,4)=2  (9,7)=2 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,5) with color grey
  [01]: a point at (6,8) with color grey
diff: 
delta: (5,1)=5# (9,1)=2  (9,4)=2  (9,7)=2 
! 36 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,7) with color grey
  [01]: a point at (4,1) with color grey
diff: 
delta: (6,4)=5# (9,1)=2  (9,4)=2  (9,8)=2 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,7) with color grey
  [01]: a point at (6,4) with color grey
diff: 
delta: (4,1)=5# (9,1)=2  (9,4)=2  (9,8)=2 
! 37 wrong pixels (generated / expected)

TEST d9f24cd1.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2104.5 bits (2104.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-55] Checking task d9fac9be.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17485.0 = 17494.0
DL output with Mo: L = 9.0 + 557.3 = 566.2
DL input+output M: L = 17.9 + 18042.3 = 18060.2

# learning a model for train pairs
18060.2	
13513.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11656.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11608.1	OUT DEF: size=(?,?)
11514.2	OUT DEF: size.i=1
11420.4	OUT DEF: size.j=1
11372.1	IN  DEF: size=(?,?)
11323.9	IN  DEF: layer[0].pos=(?,?)
11275.7	IN  DEF: layer[0].size=(?,?)
11058.2	IN  DEF: layer[0].size.i=3
11009.9	IN  DEF: layer[01].pos=(?,?)
10961.7	IN  DEF: layer[01].size=(?,?)
10930.3	IN  DEF: layer[0].size.j=3
10906.2	IN  SHAPE at layer[00]: a point at ? with color ?
10858.0	IN  DEF: layer[00].pos=(?,?)
10854.9	IN  DEF: layer[0].mask=full
10537.5	OUT DEF: color={layer[00].color}

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color {layer[00].color} and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [00]: a point at (?,?) with color ?
  [0]: a rectangle at (?,?) with size (3,3) and color ? and mask full
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 84.4 + 10440.3 = 10524.7
DL output with Mo: L = 12.8 + 0.0 = 12.8
DL input+output M: L = 97.2 + 10440.3 = 10537.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,9) and color red and layers
  [00]: a point at (2,2) with color red
  [0]: a rectangle at (1,1) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (5,9) and color black and mask 111011110101111111110111111111111111011011110
diff: 
delta:
   (124.9 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color red and layers
  [00]: a point at (0,0) with color red
  [0]: a rectangle at (1,1) with size (3,3) and color yellow and mask 111101111
  [01]: a rectangle at (0,0) with size (5,9) and color black and mask 111011110101111111110111011111111111011011111
diff:   layer[0].mask
delta:
correct output grid

TRAIN d9fac9be.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,9) and color cyan and layers
  [00]: a point at (3,6) with color cyan
  [0]: a rectangle at (2,5) with size (3,3) and color green and mask full
  [01]: a rectangle at (0,0) with size (7,9) and color black and mask 101110110111111011111111111111110110111111011111101111011111010
diff: 
delta: (3,3)=3  (6,0)=3 
   (183.3 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color cyan and layers
  [00]: a point at (0,0) with color cyan
  [0]: a rectangle at (2,5) with size (3,3) and color green and mask full
  [01]: a rectangle at (0,0) with size (7,9) and color black and mask 101110110111111011111111111111110110111111011111101111011111011
diff: 
delta: (3,3)=3  (3,6)=8  (6,0)=3 
correct output grid

TRAIN d9fac9be.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (11,9) and color black and layers
  [00]: a point at (0,0) with color blue
  [0]: a rectangle at (6,1) with size (3,3) and color red and mask full
  [01]: a rectangle at (0,1) with size (4,5) and color red and mask 1000101000001010001
diff: 
delta: (2,0)=2  (2,2)=1  (2,7)=1  (2,8)=1  (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
   (332.6 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  [00]: a point at (0,0) with color blue
  [0]: a rectangle at (6,1) with size (3,3) and color red and mask full
  [01]: a rectangle at (0,1) with size (4,5) and color red and mask 1000101000001010001
diff: 
delta: (2,0)=2  (2,2)=1  (2,7)=1  (2,8)=1  (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
correct output grid

TRAIN d9fac9be.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  [00]: a point at (0,1) with color cyan
  [0]: a rectangle at (7,3) with size (3,3) and color green and mask full
  [01]: a rectangle at (1,0) with size (3,4) and color green and mask 100001100001
diff: 
delta: (0,10)=3  (0,11)=8  (1,7)=8  (1,9)=3  (2,3)=8  (2,11)=8  (3,4)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,2)=3  (8,4)=8  (10,2)=3 
   (403.3 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  [00]: a point at (0,1) with color cyan
  [0]: a rectangle at (7,3) with size (3,3) and color green and mask full
  [01]: a rectangle at (1,0) with size (3,4) and color green and mask 100001100001
diff: 
delta: (0,10)=3  (0,11)=8  (1,7)=8  (1,9)=3  (2,3)=8  (2,11)=8  (3,4)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,2)=3  (8,4)=8  (10,2)=3 
correct output grid

TRAIN d9fac9be.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [00]: a point at (1,0) with color blue
  [0]: a rectangle at (5,7) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (7,3) with size (5,5) and color blue and mask 1000001110110100111000001
diff:   layer[0].size.j  layer[0].size.i
delta: (0,9)=1  (1,6)=4  (1,9)=1  (3,4)=1  (3,5)=4  (3,8)=4  (4,1)=4  (4,3)=1  (5,5)=1  (5,11)=1  (6,0)=1  (7,8)=4  (8,11)=4  (9,0)=4  (9,5)=4  (10,11)=4  (11,2)=4  (11,3)=4 
! 1 wrong pixels (generated / expected)

TEST d9fac9be.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-54] Checking task dae9d2b5.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6215.9 = 6224.9
DL output with Mo: L = 9.0 + 3339.0 = 3347.9
DL input+output M: L = 17.9 + 9554.9 = 9572.8

# learning a model for train pairs
9572.8	
8538.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7709.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7267.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6897.3	OUT DEF: color=pink
6665.7	OUT DEF: layer[0].color={color}
6434.8	IN  DEF: layer[01].color=green
6204.0	IN  DEF: layer[0].color=yellow
6129.2	IN  DEF: color=black
6067.8	OUT DEF: size=(?,?)
5793.6	OUT DEF: size.i={size.i}
5520.9	OUT DEF: size.j={size.i}
5459.4	OUT DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.i},{size.i}) and color pink and layers
  [0]: a rectangle at (?,?) with size ? and color {color} and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color yellow and mask ?
  [01]: a rectangle at ? with size ? and color green and mask ?

DL input  with Mi: L = 44.1 + 4168.3 = 4212.5
DL output with Mo: L = 43.4 + 1203.6 = 1246.9
DL input+output M: L = 87.5 + 5371.9 = 5459.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color yellow and mask 111
  [01]: a rectangle at (0,3) with size (2,2) and color green and mask 111
diff: 
delta: (2,5)=3 
   (80.3 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 11110100
diff: 
delta:
   (29.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color yellow and mask 111
  [01]: a rectangle at (0,3) with size (2,2) and color green and mask 111
diff: 
delta: (2,5)=3 
! 7 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (3,2) and color green and mask 10111
diff: 
delta: (0,2)=4  (2,2)=4 
   (93.7 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,1) with size (2,2) and color black and mask 111
diff: 
delta:
   (22.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (3,2) and color green and mask 10111
diff: 
delta: (0,2)=4  (2,2)=4 
! 5 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 11110100
  [01]: a rectangle at (0,3) with size (3,3) and color green and mask 100101010
diff: 
delta:
   (77.8 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (1,1) and color black and mask full
diff: 
delta:
   (14.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 11110100
  [01]: a rectangle at (0,3) with size (3,3) and color green and mask 100101010
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (1,1) and color green and mask full
diff: 
delta: (1,5)=3  (2,0)=4 
   (82.5 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 110011100
diff: 
delta:
   (29.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (1,2) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (1,1) and color green and mask full
diff: 
delta: (1,5)=3  (2,0)=4 
! 5 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color yellow and mask full
  [01]: a rectangle at (2,3) with size (1,2) and color green and mask full
diff: 
delta: (0,4)=3  (2,2)=4 
   (82.5 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,0) with size (2,3) and color black and mask 110101
diff: 
delta:
   (25.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (1,0) with size (1,1) and color yellow and mask full
  [01]: a rectangle at (2,3) with size (1,2) and color green and mask full
diff: 
delta: (0,4)=3  (2,2)=4 
! 4 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 10001110
  [01]: a rectangle at (0,3) with size (3,2) and color green and mask 11101
diff: 
delta:
! 6 wrong pixels (generated / expected)

TEST dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 1010100
  [01]: a rectangle at (0,3) with size (3,3) and color green and mask 1111010
diff: 
delta:
! 5 wrong pixels (generated / expected)

TEST dae9d2b5.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1203.6 bits (1203.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-53] Checking task db3e9e38.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1944.7 = 1953.7
DL output with Mo: L = 9.0 + 6791.7 = 6800.7
DL input+output M: L = 17.9 + 8736.5 = 8754.4

# learning a model for train pairs
8754.4	
6863.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
5837.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4908.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4309.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
3864.4	OUT DEF: layer[011].color={layer[0].color}
3317.0	OUT DEF: layer[0]={layer[0]}
2978.3	OUT DEF: size={size}
2810.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
2718.8	OUT DEF: layer[01].color=cyan
2627.3	OUT DEF: layer[0111].color=cyan
2535.7	IN  DEF: layer[0].color=orange
2487.9	OUT DEF: layer[01].mask={layer[0].mask}
2440.2	OUT DEF: layer[011].mask={layer[0].mask}
2392.4	OUT DEF: layer[0111].mask={layer[0].mask}
2345.0	IN  DEF: layer[0].mask=full
2314.0	OUT DEF: color=black
2282.9	IN  DEF: color=black
2261.1	OUT DEF: layer[01].pos=(?,?)
2182.7	OUT DEF: layer[01].pos.j={layer[0].pos.j - layer[0].size.j}
2105.2	OUT DEF: layer[01].pos.i={layer[0].pos.i}
2083.4	OUT DEF: layer[01].size=(?,?)
1971.7	OUT DEF: layer[01].size.i={layer[0].size.i - 1}
1864.1	OUT DEF: layer[01].size.j=3
1842.3	OUT DEF: layer[011].pos=(?,?)
1764.8	OUT DEF: layer[011].pos.i={layer[0].pos.i}
1688.5	OUT DEF: layer[011].pos.j={layer[0].pos.j - 2}
1666.7	OUT DEF: layer[011].size=(?,?)
1531.0	OUT DEF: layer[011].size.j=5
1441.4	OUT DEF: layer[011].size.i={layer[0].size.i - 2}
1419.6	OUT DEF: layer[0111].pos=(?,?)
1342.1	OUT DEF: layer[0111].pos.i={layer[0].pos.i}
1320.3	OUT DEF: layer[0111].size=(?,?)
1260.3	OUT DEF: layer[0111].size.i={size.i - layer[0].size.i}
1238.5	IN  DEF: size=(?,?)
1216.7	IN  DEF: layer[0].pos=(?,?)
1141.9	IN  DEF: layer[0].pos.i=0
1120.1	IN  DEF: layer[0].size=(?,?)
1072.6	IN  DEF: layer[0].size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at ({layer[0].pos.i},{layer[0].pos.j - layer[0].size.j}) with size ({layer[0].size.i - 1},3) and color cyan and mask {layer[0].mask}
  [011]: a rectangle at ({layer[0].pos.i},{layer[0].pos.j - 2}) with size ({layer[0].size.i - 2},5) and color {layer[0].color} and mask {layer[0].mask}
  [0111]: a rectangle at ({layer[0].pos.i},?) with size ({size.i - layer[0].size.i},?) and color cyan and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (0,?) with size (?,1) and color orange and mask full

DL input  with Mi: L = 40.9 + 529.0 = 569.9
DL output with Mo: L = 128.3 + 374.5 = 502.8
DL input+output M: L = 169.2 + 903.5 = 1072.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,3) with size (4,1) and color orange and mask full
diff: 
delta:
   (25.4 bits)
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,3) with size (4,1) and color orange and mask full
  [01]: a rectangle at (0,2) with size (3,3) and color cyan and mask full
  [011]: a rectangle at (0,1) with size (2,5) and color orange and mask full
  [0111]: a rectangle at (0,0) with size (1,7) and color cyan and mask full
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  [0]: a rectangle at (0,3) with size (4,1) and color orange and mask full
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN db3e9e38.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (0,2) with size (5,1) and color orange and mask full
diff: 
delta:
   (27.5 bits)
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (0,2) with size (5,1) and color orange and mask full
  [01]: a rectangle at (0,1) with size (4,3) and color cyan and mask full
  [011]: a rectangle at (0,0) with size (3,5) and color orange and mask full
  [0111]: a rectangle at (0,5) with size (2,1) and color cyan and mask full
diff: 
delta: (0,6)=7#
   (25.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  [0]: a rectangle at (0,2) with size (5,1) and color orange and mask full
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN db3e9e38.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (0,5) with size (7,1) and color orange and mask full
diff: 
delta:
! 11 wrong pixels (generated / expected)

TEST db3e9e38.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 374.5 bits (374.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-52] Checking task db93a21d.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29935.8 = 29944.8
DL output with Mo: L = 9.0 + 133281.7 = 133290.6
DL input+output M: L = 17.9 + 163217.5 = 163235.4

# learning a model for train pairs
163235.4	
117405.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
97299.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
77968.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
60752.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 12702.0 = 12728.5
DL output with Mo: L = 59.8 + 47964.1 = 48023.9
DL input+output M: L = 86.4 + 60666.0 = 60752.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,6) with size (2,2) and color brown and mask full
diff: 
delta: (7,1)=9# (7,2)=9# (8,1)=9# (8,2)=9#
   (123.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,6) with size (7,2) and color blue and mask full
  [01]: a rectangle at (6,0) with size (4,4) and color green and mask full
  [011]: a rectangle at (0,5) with size (3,4) and color green and mask full
diff: 
delta: (0,6)=9# (0,7)=9# (1,6)=9# (1,7)=9# (7,1)=9# (7,2)=9# (8,1)=9# (8,2)=9#
   (261.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,6) with size (2,2) and color brown and mask full
diff: 
delta: (7,1)=9# (7,2)=9# (8,1)=9# (8,2)=9#
! 46 wrong pixels (generated / expected)

TRAIN db93a21d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,8) with size (4,4) and color brown and mask full
diff: 
delta: (6,3)=9# (6,4)=9# (7,3)=9# (7,4)=9# (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
   (212.1 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (0,2) with size (12,13) and color green and mask 111000000000000100000000000010000000000111000000111101111111110010111111111001011000011111101100001100000110000110000011000011000001111111100000111111110000
  [01]: a rectangle at (8,8) with size (7,4) and color blue and mask full
  [011]: a rectangle at (2,8) with size (4,4) and color brown and mask full
diff: 
delta: (6,3)=9# (6,4)=9# (7,3)=9# (7,4)=9# (9,3)=1  (9,4)=1  (9,13)=9# (9,14)=9# (10,3)=1  (10,4)=1  (10,13)=9# (10,14)=9# (11,3)=1  (11,4)=1  (12,3)=1  (12,4)=1  (12,13)=1  (12,14)=1  (13,3)=1  (13,4)=1  (13,13)=1  (13,14)=1  (14,3)=1  (14,4)=1  (14,13)=1  (14,14)=1 
   (782.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,8) with size (4,4) and color brown and mask full
diff: 
delta: (6,3)=9# (6,4)=9# (7,3)=9# (7,4)=9# (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15

TRAIN db93a21d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (12,6) with size (6,6) and color brown and mask full
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9# (6,15)=9# (6,16)=9# (6,17)=9# (6,18)=9# (7,15)=9# (7,16)=9# (7,17)=9# (7,18)=9# (8,15)=9# (8,16)=9# (8,17)=9# (8,18)=9# (9,15)=9# (9,16)=9# (9,17)=9# (9,18)=9#
   (460.9 bits)
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (4,3) with size (16,17) and color green and mask 111111111111000001111111111110000011100000011100000111000000111000001110000001110000011100000011100000111000000111000001110000001111111111111111111111111111111111111100001111111111111000011000000000010000110000000000100001100000000001111111000000001111111110000000010
  [01]: a rectangle at (12,6) with size (6,6) and color brown and mask full
  [011]: a rectangle at (12,15) with size (8,4) and color blue and mask full
diff: 
delta: (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (3,1)=3  (3,2)=9# (3,3)=9# (3,4)=3  (4,1)=3  (4,2)=9# (4,3)=9# (5,1)=3  (5,2)=3  (6,2)=1  (6,3)=1  (6,15)=9# (6,16)=9# (6,17)=9# (6,18)=9# (7,2)=1  (7,3)=1  (7,15)=9# (7,16)=9# (7,17)=9# (7,18)=9# (8,2)=1  (8,3)=1  (8,15)=9# (8,16)=9# (8,17)=9# (8,18)=9# (9,2)=1  (9,15)=9# (9,16)=9# (9,17)=9# (9,18)=9# (10,2)=1  (11,2)=1  (12,2)=1  (13,2)=1  (14,2)=1  (15,2)=1  (16,2)=1  (17,2)=1  (18,2)=1  (19,2)=1 
   (1321.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (12,6) with size (6,6) and color brown and mask full
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9# (6,15)=9# (6,16)=9# (6,17)=9# (6,18)=9# (7,15)=9# (7,16)=9# (7,17)=9# (7,18)=9# (8,15)=9# (8,16)=9# (8,17)=9# (8,18)=9# (9,15)=9# (9,16)=9# (9,17)=9# (9,18)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color brown and layers
  [0]: a rectangle at (0,0) with size (20,20) and color black and mask 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000111111111111110000001111111111111100000011111111111111000000111111110000110000001111111100001100000011111111000011111111111111110000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000111111111111111100001111111
diff: 
delta:
   (474.0 bits)
data: a background with size (20,20) and color blue and layers
  [0]: a rectangle at (6,11) with size (12,9) and color green and mask full
  [01]: a rectangle at (6,0) with size (8,8) and color green and mask full
  [011]: a rectangle at (0,0) with size (6,20) and color black and mask full
diff: 
delta: (0,5)=3  (0,6)=3  (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (0,11)=3  (0,12)=3  (1,5)=3  (1,6)=3  (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9# (1,11)=3  (1,12)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (2,11)=3  (2,12)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,7)=1  (4,8)=1  (4,9)=1  (4,10)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (8,2)=9# (8,3)=9# (8,4)=9# (8,5)=9# (9,2)=9# (9,3)=9# (9,4)=9# (9,5)=9# (9,14)=9# (9,15)=9# (9,16)=9# (9,17)=9# (9,18)=9# (9,19)=9# (10,2)=9# (10,3)=9# (10,4)=9# (10,5)=9# (10,14)=9# (10,15)=9# (10,16)=9# (10,17)=9# (10,18)=9# (10,19)=9# (11,2)=9# (11,3)=9# (11,4)=9# (11,5)=9# (11,14)=9# (11,15)=9# (11,16)=9# (11,17)=9# (11,18)=9# (11,19)=9# (12,14)=9# (12,15)=9# (12,16)=9# (12,17)=9# (12,18)=9# (12,19)=9# (13,14)=9# (13,15)=9# (13,16)=9# (13,17)=9# (13,18)=9# (13,19)=9# (14,0)=0  (14,1)=0  (14,6)=0  (14,14)=9# (14,15)=9# (14,16)=9# (14,17)=9# (14,18)=9# (14,19)=9# (15,0)=0  (15,1)=0  (15,6)=0  (16,0)=0  (16,1)=0  (16,6)=0  (17,0)=0  (17,1)=0  (17,6)=0  (18,0)=0  (18,1)=0  (18,6)=0  (18,11)=0  (18,12)=0  (18,13)=0  (19,0)=0  (19,1)=0  (19,6)=0  (19,11)=0  (19,12)=0  (19,13)=0 
   (2431.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color brown and layers
  [0]: a rectangle at (0,0) with size (20,20) and color black and mask 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000111111111111110000001111111111111100000011111111111111000000111111110000110000001111111100001100000011111111000011111111111111110000111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000111111111111111100001111111
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  [0]: a rectangle at (16,21) with size (6,6) and color brown and mask full
diff: 
delta: (2,16)=9# (2,17)=9# (2,18)=9# (2,19)=9# (3,16)=9# (3,17)=9# (3,18)=9# (3,19)=9# (4,16)=9# (4,17)=9# (4,18)=9# (4,19)=9# (5,16)=9# (5,17)=9# (5,18)=9# (5,19)=9# (7,9)=9# (7,10)=9# (7,11)=9# (7,12)=9# (8,9)=9# (8,10)=9# (8,11)=9# (8,12)=9# (9,9)=9# (9,10)=9# (9,11)=9# (9,12)=9# (10,9)=9# (10,10)=9# (10,11)=9# (10,12)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30

TEST db93a21d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 47964.1 bits (47964.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-51] Checking task dbc1a6ce.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7624.2 = 7633.2
DL output with Mo: L = 9.0 + 19608.4 = 19617.3
DL input+output M: L = 17.9 + 27232.6 = 27250.5

# learning a model for train pairs
27250.5	
21581.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19460.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18688.4	OUT DEF: size={size}
18011.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
17623.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17250.8	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
16546.6	OUT DEF: layer[0111].mask={layer[0].mask}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask {layer[0].mask}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 7327.4 = 7353.9
DL output with Mo: L = 74.1 + 9118.6 = 9192.6
DL input+output M: L = 100.6 + 16445.9 = 16546.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,3) with size (1,1) and color blue and mask full
diff: 
delta: (1,8)=1  (4,1)=1  (4,7)=1  (6,1)=1  (8,6)=1  (9,3)=1 
   (154.0 bits)
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (1,1) with size (8,6) and color cyan and mask 100000100000100000101111110000100000100000100
  [01]: a rectangle at (4,1) with size (3,1) and color blue and mask full
  [011]: a rectangle at (0,3) with size (10,1) and color blue and mask full
  [0111]: a rectangle at (1,8) with size (1,1) and color blue and mask full
diff: 
delta: (4,7)=1  (8,6)=1 
   (199.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,9) and color black and mask 111110111110111111111111111111111101111111111101111101111111111111111111011111111111110111
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (0,4) with size (1,1) and color blue and mask full
diff: 
delta: (0,9)=1  (2,4)=1  (2,8)=1  (3,2)=1  (7,0)=1  (7,7)=1  (9,6)=1 
   (174.7 bits)
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (0,4) with size (3,5) and color cyan and mask 11100000111110
  [01]: a rectangle at (7,1) with size (1,6) and color cyan and mask full
  [011]: a rectangle at (0,4) with size (3,1) and color blue and mask full
  [0111]: a rectangle at (7,0) with size (1,8) and color blue and mask full
diff: 
delta: (0,9)=1  (2,8)=1  (3,2)=1  (9,6)=1 
   (206.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (0,4) with size (1,1) and color blue and mask full
diff: 
delta: (0,9)=1  (2,4)=1  (2,8)=1  (3,2)=1  (7,0)=1  (7,7)=1  (9,6)=1 
! 26 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,6) with size (1,1) and color blue and mask full
diff: 
delta: (0,11)=1  (2,10)=1  (4,5)=1  (5,1)=1  (5,9)=1  (6,6)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
   (270.4 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,2) with size (7,9) and color cyan and mask 11100000101111111100010000100010000000010000000010000111100000
  [01]: a rectangle at (9,4) with size (3,5) and color cyan and mask 11101000101110
  [011]: a rectangle at (9,4) with size (3,1) and color blue and mask full
  [0111]: a rectangle at (9,8) with size (3,1) and color blue and mask full
diff: 
delta: (0,6)=1  (0,11)=1  (2,10)=1  (4,5)=1  (5,1)=1  (5,9)=1  (6,6)=1  (6,10)=1  (7,2)=1 
   (369.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,9) with size (2,2) and color blue and mask 1001
diff: 
delta: (0,6)=1  (0,11)=1  (2,10)=1  (4,5)=1  (5,1)=1  (6,6)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
! 46 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,9) and color blue and layers
  [0]: a rectangle at (0,0) with size (8,9) and color black and mask 111111110111111111101111011111011111111111110110101111111111111111101101
diff: 
delta:
   (133.7 bits)
data: a background with size (8,9) and color blue and layers
  [0]: a rectangle at (5,3) with size (1,4) and color cyan and mask full
  [01]: a rectangle at (0,2) with size (3,4) and color cyan and mask 100001000011
  [011]: a rectangle at (4,0) with size (3,1) and color cyan and mask full
  [0111]: a rectangle at (0,0) with size (8,9) and color black and mask 111111110111111111101111011111011111111111110110101111111111111111101101
diff: 
delta:
   (136.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color blue and layers
  [0]: a rectangle at (0,0) with size (8,9) and color black and mask 111111110111111111101111011111011111111111110110101111111111111111101101
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  [0]: a rectangle at (8,10) with size (2,2) and color blue and mask 1001
diff: 
delta: (0,7)=1  (0,10)=1  (0,14)=1  (1,2)=1  (2,10)=1  (3,19)=1  (4,9)=1  (5,1)=1  (6,6)=1  (7,1)=1  (10,13)=1  (12,9)=1  (14,6)=1  (14,14)=1  (16,1)=1  (18,1)=1  (18,3)=1 
! 79 wrong pixels (generated / expected)

TEST dbc1a6ce.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 9118.6 bits (9118.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-50] Checking task dc0a314f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 101873.0 = 101882.0
DL output with Mo: L = 9.0 + 7630.2 = 7639.1
DL input+output M: L = 17.9 + 109503.2 = 109521.1

# learning a model for train pairs
109521.1	
87201.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
75591.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
69414.4	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
67012.8	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
63478.7	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
61043.8	IN  SHAPE at layer[011111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
  [011111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 108.2 + 53296.4 = 53404.6
DL output with Mo: L = 9.0 + 7630.2 = 7639.1
DL input+output M: L = 117.2 + 60926.6 = 61043.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color red and layers
  [0]: a rectangle at (0,4) with size (16,3) and color grey and mask full
  [01]: a rectangle at (5,9) with size (5,5) and color green and mask full
  [011]: a rectangle at (0,9) with size (16,3) and color grey and mask full
  [0111]: a rectangle at (1,11) with size (14,4) and color pink and mask full
  [01111]: a rectangle at (4,0) with size (8,3) and color grey and mask full
  [011111]: a rectangle at (5,7) with size (6,2) and color cyan and mask full
diff: 
delta: (0,1)=1  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,14)=1  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,10)=6  (1,12)=1  (1,15)=1  (2,1)=6  (2,2)=1  (2,3)=6  (2,13)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,14)=1  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,13)=5# (4,14)=5# (4,15)=6  (5,1)=6  (5,4)=8  (5,5)=8  (5,15)=5# (6,14)=5# (6,15)=5# (7,0)=6  (7,1)=2  (7,2)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,14)=2  (8,15)=6  (9,14)=5# (9,15)=5# (10,1)=6  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,13)=5# (10,15)=5# (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,13)=5# (11,14)=5# (11,15)=6  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,14)=1  (13,1)=6  (13,2)=1  (13,3)=6  (13,13)=1  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,10)=6  (14,12)=1  (14,15)=1  (15,1)=1  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,14)=1 
   (2259.1 bits)
data: a background with size (5,5) and color grey and layers
diff: 
delta: (0,1)=8  (0,2)=8  (0,3)=2  (1,3)=2  (2,0)=8  (2,1)=8  (2,2)=7# (2,3)=2  (2,4)=2  (3,0)=8  (3,1)=8  (3,2)=7# (3,3)=2  (3,4)=2  (4,3)=2 
   (264.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color red and layers
  [0]: a rectangle at (0,4) with size (16,3) and color grey and mask full
  [01]: a rectangle at (5,9) with size (5,5) and color green and mask full
  [011]: a rectangle at (0,9) with size (16,3) and color grey and mask full
  [0111]: a rectangle at (1,11) with size (14,4) and color pink and mask full
  [01111]: a rectangle at (4,0) with size (8,3) and color grey and mask full
  [011111]: a rectangle at (5,7) with size (6,2) and color cyan and mask full
diff: 
delta: (0,1)=1  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,14)=1  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,10)=6  (1,12)=1  (1,15)=1  (2,1)=6  (2,2)=1  (2,3)=6  (2,13)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,14)=1  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,13)=5# (4,14)=5# (4,15)=6  (5,1)=6  (5,4)=8  (5,5)=8  (5,15)=5# (6,14)=5# (6,15)=5# (7,0)=6  (7,1)=2  (7,2)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,14)=2  (8,15)=6  (9,14)=5# (9,15)=5# (10,1)=6  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,13)=5# (10,15)=5# (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,13)=5# (11,14)=5# (11,15)=6  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,14)=1  (13,1)=6  (13,2)=1  (13,3)=6  (13,13)=1  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,10)=6  (14,12)=1  (14,15)=1  (15,1)=1  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,14)=1 
! size mismatch, 10x10 instead of 5x5

TRAIN dc0a314f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color cyan and layers
  [0]: a rectangle at (0,0) with size (16,16) and color orange and mask 110000110000000010100101000000000101101000000000001001000000110001011010001110101011110101010101010000101010001011000011010000101100001101000101010000101010101010111101010111000101000000110000001000000000000001010000000000001010000000000000110000000000
  [01]: a rectangle at (0,0) with size (16,16) and color red and mask 111111110000000010111101000000011111111110000010111001110100111111011011111110111111111111011111011001101111111011011011011111101101101101111111011001101111101111111111110111111101000001110010111000000100000111110000000000001011000000000000111100000000
  [011]: a rectangle at (0,3) with size (5,5) and color green and mask full
  [0111]: a rectangle at (12,0) with size (4,16) and color brown and mask full
  [01111]: a rectangle at (0,12) with size (4,4) and color brown and mask 111110110110110
  [011111]: a rectangle at (0,0) with size (4,3) and color brown and mask 110011101110
diff: 
delta: (1,10)=1  (3,8)=1  (5,1)=1  (5,14)=1  (7,3)=1  (7,12)=1  (8,3)=1  (8,12)=1  (10,1)=1  (10,14)=1  (12,0)=8  (12,7)=1  (12,8)=1  (12,15)=8  (13,2)=8  (13,13)=8  (14,1)=8  (14,5)=1  (14,10)=1  (14,14)=8  (15,0)=8  (15,3)=8  (15,12)=8  (15,15)=8 
   (1251.4 bits)
data: a background with size (5,5) and color red and layers
diff: 
delta: (0,0)=8  (0,1)=7# (0,2)=7# (1,0)=9# (1,1)=7# (1,2)=1  (1,3)=7# (2,2)=7# (2,4)=7# (3,0)=9# (3,3)=7# (3,4)=1  (4,2)=7# (4,3)=8  (4,4)=7#
   (264.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color cyan and layers
  [0]: a rectangle at (0,0) with size (16,16) and color orange and mask 110000110000000010100101000000000101101000000000001001000000110001011010001110101011110101010101010000101010001011000011010000101100001101000101010000101010101010111101010111000101000000110000001000000000000001010000000000001010000000000000110000000000
  [01]: a rectangle at (0,0) with size (16,16) and color red and mask 111111110000000010111101000000011111111110000010111001110100111111011011111110111111111111011111011001101111111011011011011111101101101101111111011001101111101111111111110111111101000001110010111000000100000111110000000000001011000000000000111100000000
  [011]: a rectangle at (0,3) with size (5,5) and color green and mask full
  [0111]: a rectangle at (12,0) with size (4,16) and color brown and mask full
  [01111]: a rectangle at (0,12) with size (4,4) and color brown and mask 111110110110110
  [011111]: a rectangle at (0,0) with size (4,3) and color brown and mask 110011101110
diff: 
delta: (1,10)=1  (3,8)=1  (5,1)=1  (5,14)=1  (7,3)=1  (7,12)=1  (8,3)=1  (8,12)=1  (10,1)=1  (10,14)=1  (12,0)=8  (12,7)=1  (12,8)=1  (12,15)=8  (13,2)=8  (13,13)=8  (14,1)=8  (14,5)=1  (14,10)=1  (14,14)=8  (15,0)=8  (15,3)=8  (15,12)=8  (15,15)=8 
! size mismatch, 10x10 instead of 5x5

TRAIN dc0a314f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color grey and layers
  [0]: a rectangle at (0,0) with size (16,16) and color brown and mask 111001110000000010011001000000001000000100000000010000100000111010111101011110010011110010011000110110110001010011100111001001001110011100101000110110110001100100111100100111100000010101110000000000100000000000000001000000000000000100000000000001110000
  [01]: a rectangle at (0,7) with size (5,5) and color green and mask full
  [011]: a rectangle at (13,0) with size (3,16) and color grey and mask full
  [0111]: a rectangle at (1,1) with size (3,14) and color yellow and mask full
  [01111]: a rectangle at (0,0) with size (2,16) and color red and mask full
  [011111]: a rectangle at (10,4) with size (2,8) and color pink and mask full
diff: 
delta: (0,2)=5# (0,13)=5# (1,1)=5# (1,5)=5# (1,6)=2  (1,14)=5# (2,2)=5# (2,5)=2  (2,6)=5# (2,13)=5# (3,0)=2  (3,4)=5# (3,6)=5# (3,15)=2  (4,5)=6  (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (6,1)=2  (6,6)=7# (6,9)=7# (6,14)=2  (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (9,1)=2  (9,6)=7# (9,9)=7# (9,14)=2  (10,2)=2  (10,13)=2  (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,7)=2  (12,8)=2  (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,1)=4  (13,3)=4  (13,5)=2  (13,10)=2  (13,12)=4  (13,14)=4  (14,0)=2  (14,2)=4  (14,3)=4  (14,6)=2  (14,9)=2  (14,12)=4  (14,13)=4  (14,15)=2  (15,0)=2  (15,1)=2  (15,3)=2  (15,12)=2  (15,14)=2  (15,15)=2 
   (1819.1 bits)
data: a background with size (5,5) and color brown and layers
diff: 
delta: (0,0)=5# (0,1)=5# (1,2)=2  (1,3)=5# (2,0)=5# (2,1)=5# (2,2)=5# (2,3)=2  (3,0)=2  (3,1)=2  (3,2)=5# (3,4)=5# (4,3)=6 
   (233.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  [0]: a rectangle at (0,0) with size (16,16) and color brown and mask 111001110000000010011001000000001000000100000000010000100000111010111101011110010011110010011000110110110001010011100111001001001110011100101000110110110001100100111100100111100000010101110000000000100000000000000001000000000000000100000000000001110000
  [01]: a rectangle at (0,7) with size (5,5) and color green and mask full
  [011]: a rectangle at (13,0) with size (3,16) and color grey and mask full
  [0111]: a rectangle at (1,1) with size (3,14) and color yellow and mask full
  [01111]: a rectangle at (0,0) with size (2,16) and color red and mask full
  [011111]: a rectangle at (10,4) with size (2,8) and color pink and mask full
diff: 
delta: (0,2)=5# (0,13)=5# (1,1)=5# (1,5)=5# (1,6)=2  (1,14)=5# (2,2)=5# (2,5)=2  (2,6)=5# (2,13)=5# (3,0)=2  (3,4)=5# (3,6)=5# (3,15)=2  (4,5)=6  (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (6,1)=2  (6,6)=7# (6,9)=7# (6,14)=2  (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (9,1)=2  (9,6)=7# (9,9)=7# (9,14)=2  (10,2)=2  (10,13)=2  (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,7)=2  (12,8)=2  (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,1)=4  (13,3)=4  (13,5)=2  (13,10)=2  (13,12)=4  (13,14)=4  (14,0)=2  (14,2)=4  (14,3)=4  (14,6)=2  (14,9)=2  (14,12)=4  (14,13)=4  (14,15)=2  (15,0)=2  (15,1)=2  (15,3)=2  (15,12)=2  (15,14)=2  (15,15)=2 
! size mismatch, 10x10 instead of 5x5

TRAIN dc0a314f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color red and layers
  [0]: a rectangle at (0,0) with size (16,16) and color grey and mask 1101011111101011100111000011100100101001100101001101101111011011011100000000111011000000000000111001000000001001101000000000110110100000000011011000000000001001110000000000001101100000000011101101101111011011001010011001010010011100001110011101011111101011
  [01]: a rectangle at (4,8) with size (5,5) and color green and mask full
  [011]: a rectangle at (4,4) with size (8,7) and color brown and mask 110000111100101101011111111111111111101011111001111000
  [0111]: a rectangle at (0,0) with size (3,16) and color red and mask full
  [01111]: a rectangle at (9,4) with size (3,8) and color pink and mask full
  [011111]: a rectangle at (14,1) with size (1,14) and color red and mask full
diff: 
delta: (2,3)=8  (2,12)=8  (3,2)=8  (3,13)=8  (4,4)=4  (4,5)=6  (4,6)=6  (5,4)=6  (5,5)=6  (6,4)=6  (6,6)=6  (11,4)=4  (11,11)=4  (12,2)=8  (12,13)=8  (13,3)=8  (13,12)=8 
! size mismatch, 10x10 instead of 5x5

TEST dc0a314f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7630.2 bits (7630.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-49] Checking task dc1df850.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1925.5 = 1934.5
DL output with Mo: L = 9.0 + 6904.8 = 6913.8
DL input+output M: L = 17.9 + 8830.3 = 8848.3

# learning a model for train pairs
8848.3	
5419.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4940.0	OUT DEF: size={size}
4771.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4677.9	IN  SHAPE at layer[0]: a point at ? with color ?
4539.9	IN  DEF: layer[0].color=red
4469.2	OUT DEF: layer[01].mask=full
4421.2	OUT DEF: layer[0].color=blue
4375.6	IN  DEF: color=black
4340.6	OUT DEF: layer[0].pos=(?,?)
4230.7	OUT DEF: layer[0].pos.i=0
4195.6	OUT DEF: layer[0].size=(?,?)
4035.6	OUT DEF: layer[0].size.j={size.i - layer[0].pos.i}
4000.6	OUT DEF: layer[01].pos=(?,?)
3897.9	OUT DEF: layer[01].pos.i={size.i - 3}
3862.9	OUT DEF: layer[01].size=(?,?)
3827.9	IN  DEF: size=(?,?)
3792.9	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at (0,?) with size (?,{size.i - layer[0].pos.i}) and color blue and mask ?
  [01]: a rectangle at ({size.i - 3},?) with size (?,?) and color ? and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a point at (?,?) with color red

DL input  with Mi: L = 28.7 + 1558.8 = 1587.4
DL output with Mo: L = 82.1 + 2123.3 = 2205.5
DL input+output M: L = 110.8 + 3682.1 = 3792.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [0]: a point at (0,0) with color red
diff: 
delta: (1,3)=2  (3,1)=6 
   (55.5 bits)
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (3,5) and color blue and mask 111001011111110
  [01]: a rectangle at (2,0) with size (3,5) and color black and mask full
diff: 
delta: (3,1)=6 
   (72.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [0]: a point at (0,0) with color red
diff: 
delta: (1,3)=2  (3,1)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [0]: a point at (1,3) with color red
diff: 
delta: (0,0)=2  (3,1)=6 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  [0]: a point at (3,1) with color pink
diff:   layer[0].color
delta: (0,0)=2  (1,3)=2 
! 14 wrong pixels (generated / expected)

TRAIN dc1df850.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a point at (6,2) with color red
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
   (80.1 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,6) with size (2,2) and color blue and mask full
  [01]: a rectangle at (5,1) with size (3,3) and color blue and mask full
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8  (6,2)=2 
   (104.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a point at (0,7) with color red
diff: 
delta: (2,3)=3  (4,6)=8  (6,2)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a point at (6,2) with color red
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  [0]: a point at (2,3) with color green
diff:   layer[0].color
delta: (0,7)=2  (4,6)=8  (6,2)=2 
! 29 wrong pixels (generated / expected)

TRAIN dc1df850.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,5) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
   (20.3 bits)
data: a background with size (4,5) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 111101111
  [01]: a rectangle at (1,1) with size (1,1) and color red and mask full
diff: 
delta:
   (34.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,5) and color black and layers
  [0]: a point at (1,1) with color red
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc1df850.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,2) with color red
diff: 
delta: (0,8)=7# (3,7)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,7) with color red
diff: 
delta: (0,8)=7# (1,2)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a point at (7,5) with color red
diff: 
delta: (0,8)=7# (1,2)=2  (3,7)=2  (5,1)=7# (9,9)=5#
! 33 wrong pixels (generated / expected)

TEST dc1df850.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2123.3 bits (2123.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-48] Checking task dc433765.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3634.7 = 3643.7
DL output with Mo: L = 9.0 + 3634.7 = 3643.7
DL input+output M: L = 17.9 + 7269.4 = 7287.3

# learning a model for train pairs
7287.3	
6187.0	OUT DEF: size={size}
5953.6	OUT SHAPE at layer[0]: a point at ? with color ?
5629.8	OUT DEF: layer[0].color=green
5337.4	OUT SHAPE at layer[01]: a point at ? with color ?
5013.7	OUT DEF: layer[01].color=yellow
4780.5	IN  SHAPE at layer[0]: a point at ? with color ?
4153.9	OUT DEF: layer[01]={layer[0]}
3830.2	IN  DEF: layer[0].color=yellow
3539.0	IN  SHAPE at layer[00]: a point at ? with color ?
3215.3	IN  DEF: layer[00].color=green
3111.4	OUT DEF: color=black
3007.4	IN  DEF: color=black
2919.5	OUT DEF: layer[0].pos=(?,?)
2831.7	IN  DEF: size=(?,?)
2743.8	IN  DEF: layer[00].pos=(?,?)
2655.9	IN  DEF: layer[0].pos=(?,?)
2655.0	OUT DEF: layer[0].color={layer[00].color}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a point at (?,?) with color {layer[00].color}
  [01]: {layer[0]}
WHERE (Mi)
a background with size (?,?) and color black and layers
  [00]: a point at (?,?) with color green
  [0]: a point at (?,?) with color yellow

DL input  with Mi: L = 44.8 + 2057.9 = 2102.7
DL output with Mo: L = 26.5 + 525.8 = 552.3
DL input+output M: L = 71.3 + 2583.7 = 2655.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color green
  [0]: a point at (2,2) with color yellow
diff: 
delta:
   (22.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (2,2) with color yellow
diff: 
delta:
   (5.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color green
  [0]: a point at (2,2) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (2,2) with color yellow
  [0]: a point at (0,0) with color green
diff:   layer[0].color  layer[00].color
delta:
! 3 wrong pixels (generated / expected)

TRAIN dc433765.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,3) and color black and layers
  [00]: a point at (1,0) with color green
  [0]: a point at (1,2) with color yellow
diff: 
delta:
   (25.6 bits)
data: a background with size (5,3) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (1,2) with color yellow
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  [00]: a point at (1,0) with color green
  [0]: a point at (1,2) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,3) and color black and layers
  [00]: a point at (1,2) with color yellow
  [0]: a point at (1,0) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  [00]: a point at (2,1) with color green
  [0]: a point at (2,4) with color yellow
diff: 
delta:
   (28.5 bits)
data: a background with size (5,5) and color black and layers
  [0]: a point at (2,2) with color green
  [01]: a point at (2,4) with color yellow
diff: 
delta:
   (7.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  [00]: a point at (2,1) with color green
  [0]: a point at (2,4) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  [00]: a point at (2,4) with color yellow
  [0]: a point at (2,1) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  [00]: a point at (1,1) with color green
  [0]: a point at (4,4) with color yellow
diff: 
delta:
   (32.4 bits)
data: a background with size (7,7) and color black and layers
  [0]: a point at (2,2) with color green
  [01]: a point at (4,4) with color yellow
diff: 
delta:
   (8.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [00]: a point at (1,1) with color green
  [0]: a point at (4,4) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  [00]: a point at (4,4) with color yellow
  [0]: a point at (1,1) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (7,2) with color green
  [0]: a point at (2,2) with color yellow
diff: 
delta:
   (36.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a point at (6,2) with color green
  [01]: a point at (2,2) with color yellow
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (7,2) with color green
  [0]: a point at (2,2) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color yellow
  [0]: a point at (7,2) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [00]: a point at (2,3) with color green
  [0]: a point at (8,3) with color yellow
diff: 
delta:
   (37.6 bits)
data: a background with size (11,11) and color black and layers
  [0]: a point at (3,3) with color green
  [01]: a point at (8,3) with color yellow
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [00]: a point at (2,3) with color green
  [0]: a point at (8,3) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [00]: a point at (8,3) with color yellow
  [0]: a point at (2,3) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,2) with color green
  [0]: a point at (2,0) with color yellow
diff: 
delta:
   (22.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a point at (1,1) with color green
  [01]: a point at (2,0) with color yellow
diff: 
delta:
   (5.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,2) with color green
  [0]: a point at (2,0) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (2,0) with color yellow
  [0]: a point at (0,2) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [00]: a point at (2,3) with color green
  [0]: a point at (8,3) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  [00]: a point at (8,3) with color yellow
  [0]: a point at (2,3) with color green
diff:   layer[0].color  layer[00].color
delta:
! 4 wrong pixels (generated / expected)

TEST dc433765.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [00]: a point at (2,2) with color green
  [0]: a point at (0,0) with color yellow
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [00]: a point at (0,0) with color yellow
  [0]: a point at (2,2) with color green
diff:   layer[0].color  layer[00].color
delta:
! 2 wrong pixels (generated / expected)

TEST dc433765.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 525.8 bits (525.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-47] Checking task ddf7fa4f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18677.5 = 18686.5
DL output with Mo: L = 9.0 + 18677.5 = 18686.5
DL input+output M: L = 17.9 + 37355.1 = 37373.0

# learning a model for train pairs
37373.0	
25336.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19034.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14976.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11739.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
11161.5	OUT DEF: size={size}
10768.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9602.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 5030.2 = 5090.0
DL output with Mo: L = 59.9 + 4452.6 = 4512.5
DL input+output M: L = 119.7 + 9482.7 = 9602.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,4) with size (4,4) and color grey and mask full
  [01]: a rectangle at (4,1) with size (5,2) and color grey and mask full
  [011]: a rectangle at (7,7) with size (3,3) and color grey and mask full
diff: 
delta: (0,2)=2  (0,5)=6  (0,9)=8 
   (169.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,4) with size (4,4) and color pink and mask full
  [01]: a rectangle at (4,1) with size (5,2) and color red and mask full
  [011]: a rectangle at (7,7) with size (3,3) and color cyan and mask full
diff: 
delta: (0,2)=2  (0,5)=6  (0,9)=8 
   (149.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,4) with size (4,4) and color grey and mask full
  [01]: a rectangle at (4,1) with size (5,2) and color grey and mask full
  [011]: a rectangle at (7,7) with size (3,3) and color grey and mask full
diff: 
delta: (0,2)=2  (0,5)=6  (0,9)=8 
! 42 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,4) and color grey and mask full
  [01]: a rectangle at (2,7) with size (4,3) and color grey and mask full
  [011]: a rectangle at (7,3) with size (2,4) and color grey and mask full
diff: 
delta: (0,1)=1  (0,5)=4  (0,8)=7#
   (169.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,4) and color blue and mask full
  [01]: a rectangle at (2,7) with size (4,3) and color orange and mask full
  [011]: a rectangle at (7,3) with size (2,4) and color yellow and mask full
diff: 
delta: (0,1)=1  (0,5)=4  (0,8)=7#
   (150.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (4,4) and color grey and mask full
  [01]: a rectangle at (2,7) with size (4,3) and color grey and mask full
  [011]: a rectangle at (7,3) with size (2,4) and color grey and mask full
diff: 
delta: (0,1)=1  (0,5)=4  (0,8)=7#
! 42 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (3,3) and color grey and mask full
  [01]: a rectangle at (3,7) with size (2,3) and color grey and mask full
  [011]: a rectangle at (2,1) with size (3,2) and color grey and mask full
diff: 
delta: (0,1)=1  (0,5)=6  (0,8)=7#
   (164.7 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (3,3) and color pink and mask full
  [01]: a rectangle at (3,7) with size (2,3) and color orange and mask full
  [011]: a rectangle at (2,1) with size (3,2) and color blue and mask full
diff: 
delta: (0,1)=1  (0,5)=6  (0,8)=7#
   (145.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,3) with size (3,3) and color grey and mask full
  [01]: a rectangle at (3,7) with size (2,3) and color grey and mask full
  [011]: a rectangle at (2,1) with size (3,2) and color grey and mask full
diff: 
delta: (0,1)=1  (0,5)=6  (0,8)=7#
! 27 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (4,5) and color grey and mask full
  [01]: a rectangle at (2,8) with size (7,2) and color grey and mask full
  [011]: a rectangle at (7,0) with size (2,4) and color grey and mask full
diff: 
delta: (0,0)=3  (0,4)=6  (0,8)=9#
! 48 wrong pixels (generated / expected)

TEST ddf7fa4f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4452.6 bits (4452.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-46] Checking task de1cd16c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 128083.6 = 128092.5
DL output with Mo: L = 9.0 + 557.3 = 566.2
DL input+output M: L = 17.9 + 128640.8 = 128658.8

# learning a model for train pairs
128658.8	
72207.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
26220.2	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10484.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10375.8	IN  DEF: layer[0].mask=full
10058.4	OUT DEF: color={layer[0].color}
9964.5	IN  DEF: layer[01].mask=full
9870.7	IN  DEF: layer[011].mask=full
9822.4	OUT DEF: size=(?,?)
9728.5	OUT DEF: size.i=1
9634.7	OUT DEF: size.j=1
9586.4	IN  DEF: size=(?,?)
9538.2	IN  DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color {layer[0].color} and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size ? and color ? and mask full
  [01]: a rectangle at ? with size ? and color ? and mask full
  [011]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 66.1 + 9459.3 = 9525.4
DL output with Mo: L = 12.8 + 0.0 = 12.8
DL input+output M: L = 78.9 + 9459.3 = 9538.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,13) and color black and layers
  [0]: a rectangle at (7,0) with size (10,8) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (7,8) and color yellow and mask full
  [011]: a rectangle at (7,8) with size (10,5) and color blue and mask full
diff: 
delta: (2,3)=6  (2,10)=6  (4,5)=6  (10,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
   (260.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,13) and color black and layers
  [0]: a rectangle at (7,0) with size (10,8) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (7,8) and color yellow and mask full
  [011]: a rectangle at (7,8) with size (10,5) and color blue and mask full
diff: 
delta: (2,3)=6  (2,10)=6  (4,5)=6  (10,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
correct output grid

TRAIN de1cd16c.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (16,15) and color cyan and layers
  [0]: a rectangle at (0,7) with size (9,8) and color red and mask full
  [01]: a rectangle at (4,2) with size (1,1) and color blue and mask full
  [011]: a rectangle at (0,0) with size (9,7) and color green and mask full
diff: 
delta: (1,10)=1  (1,13)=1  (3,9)=1  (6,11)=1  (12,11)=1  (13,6)=1 
   (237.5 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color green and layers
  [0]: a rectangle at (9,0) with size (7,15) and color cyan and mask full
  [01]: a rectangle at (0,7) with size (9,8) and color red and mask full
  [011]: a rectangle at (4,2) with size (1,1) and color blue and mask full
diff: 
delta: (1,10)=1  (1,13)=1  (3,9)=1  (6,11)=1  (12,11)=1  (13,6)=1 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color black and layers
  [0]: a rectangle at (8,7) with size (8,10) and color pink and mask full
  [01]: a rectangle at (0,7) with size (8,10) and color grey and mask full
  [011]: a rectangle at (0,0) with size (8,7) and color blue and mask full
diff: 
delta: (1,1)=4  (3,3)=4  (5,11)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
   (284.3 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color black and layers
  [0]: a rectangle at (0,7) with size (8,10) and color grey and mask full
  [01]: a rectangle at (8,7) with size (8,10) and color pink and mask full
  [011]: a rectangle at (0,0) with size (8,7) and color blue and mask full
diff: 
delta: (1,1)=4  (3,3)=4  (5,11)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (16,19) and color blue and layers
  [0]: a rectangle at (9,7) with size (7,12) and color yellow and mask full
  [01]: a rectangle at (4,11) with size (1,1) and color red and mask full
  [011]: a rectangle at (0,7) with size (9,12) and color cyan and mask full
diff: 
delta: (13,9)=2  (14,12)=2 
   (164.1 bits)
data: a background with size (1,1) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color blue and layers
  [0]: a rectangle at (0,7) with size (9,12) and color cyan and mask full
  [01]: a rectangle at (13,9) with size (1,1) and color red and mask full
  [011]: a rectangle at (9,7) with size (7,12) and color yellow and mask full
diff: 
delta: (4,11)=2  (14,12)=2 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,19) and color cyan and layers
  [0]: a rectangle at (0,0) with size (16,7) and color blue and mask full
  [01]: a rectangle at (9,7) with size (7,12) and color yellow and mask full
  [011]: a rectangle at (4,11) with size (1,1) and color red and mask full
diff: 
delta: (13,9)=2  (14,12)=2 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color green and layers
  [0]: a rectangle at (4,9) with size (14,10) and color cyan and mask full
  [01]: a rectangle at (4,0) with size (8,9) and color red and mask full
  [011]: a rectangle at (12,0) with size (6,9) and color blue and mask full
diff: 
delta: (1,7)=4  (5,1)=4  (5,7)=4  (7,4)=4  (8,2)=4  (9,6)=4  (9,14)=4  (11,12)=4  (14,14)=4  (15,4)=4  (16,1)=4 
! 1 wrong pixels (generated / expected)

TEST de1cd16c.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-45] Checking task ded97339.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3411.9 = 3420.9
DL output with Mo: L = 9.0 + 8591.1 = 8600.1
DL input+output M: L = 17.9 + 12003.1 = 12021.0

# learning a model for train pairs
12021.0	
7410.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6831.7	OUT DEF: size={size}
6266.2	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6128.2	OUT DEF: layer[0].color=cyan
5990.2	OUT DEF: layer[01].color=cyan
5915.7	IN  SHAPE at layer[0]: a point at ? with color ?
5596.4	OUT DEF: layer[0].pos={layer[0].pos}
5458.4	IN  DEF: layer[0].color=cyan
5387.8	OUT DEF: layer[01].mask=full
5342.2	OUT DEF: color=black
5296.5	IN  DEF: color=black
5261.5	OUT DEF: layer[0].size=(?,?)
5226.5	OUT DEF: layer[01].pos=(?,?)
5191.5	OUT DEF: layer[01].size=(?,?)
5120.9	OUT DEF: layer[01].size.j=1
5085.8	IN  DEF: size=(?,?)
4822.5	IN  DEF: size.i=10
4559.2	IN  DEF: size.j=10
4524.2	IN  DEF: layer[0].pos=(?,?)
4522.2	OUT DEF: layer[0].color={layer[0].color}
4520.5	OUT DEF: layer[01].color={layer[0].color}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at (?,?) with size (?,1) and color {layer[0].color} and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a point at (?,?) with color cyan

DL input  with Mi: L = 40.0 + 2525.8 = 2565.8
DL output with Mo: L = 50.4 + 1904.3 = 1954.7
DL input+output M: L = 90.4 + 4430.1 = 4520.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,1) with color cyan
diff: 
delta: (3,6)=8  (7,4)=8  (9,6)=8 
   (66.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (1,6) and color cyan and mask full
  [01]: a rectangle at (3,6) with size (7,1) and color cyan and mask full
diff: 
delta: (7,4)=8 
   (48.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,1) with color cyan
diff: 
delta: (3,6)=8  (7,4)=8  (9,6)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,6) with color cyan
diff: 
delta: (3,1)=8  (7,4)=8  (9,6)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a point at (7,4) with color cyan
diff: 
delta: (3,1)=8  (3,6)=8  (9,6)=8 
! 17 wrong pixels (generated / expected)

TRAIN ded97339.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (6,5) with color cyan
diff: 
delta: (1,7)=8  (3,2)=8  (6,9)=8  (8,2)=8 
   (84.2 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,5) with size (1,5) and color cyan and mask full
  [01]: a rectangle at (3,2) with size (6,1) and color cyan and mask full
diff: 
delta: (1,7)=8 
   (48.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,7) with color cyan
diff: 
delta: (3,2)=8  (6,5)=8  (6,9)=8  (8,2)=8 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,2) with color cyan
diff: 
delta: (1,7)=8  (6,5)=8  (6,9)=8  (8,2)=8 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a point at (6,5) with color cyan
diff: 
delta: (1,7)=8  (3,2)=8  (6,9)=8  (8,2)=8 
! 14 wrong pixels (generated / expected)

TRAIN ded97339.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color cyan
diff: 
delta: (1,5)=8  (4,1)=8  (7,5)=8  (7,9)=8  (9,2)=8 
   (102.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (7,9) and color cyan and mask 111110000000010000000010000000010001000010001000010001000011111
  [01]: a rectangle at (9,2) with size (1,1) and color cyan and mask full
diff: 
delta:
   (93.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color cyan
diff: 
delta: (1,5)=8  (4,1)=8  (7,5)=8  (7,9)=8  (9,2)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,5) with color cyan
diff: 
delta: (1,1)=8  (4,1)=8  (7,5)=8  (7,9)=8  (9,2)=8 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a point at (4,1) with color cyan
diff: 
delta: (1,1)=8  (1,5)=8  (7,5)=8  (7,9)=8  (9,2)=8 
! 23 wrong pixels (generated / expected)

TRAIN ded97339.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a point at (1,1) with color cyan
diff: 
delta: (2,3)=8  (3,7)=8  (5,1)=8  (8,4)=8  (8,7)=8 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a point at (2,3) with color cyan
diff: 
delta: (1,1)=8  (3,7)=8  (5,1)=8  (8,4)=8  (8,7)=8 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a point at (3,7) with color cyan
diff: 
delta: (1,1)=8  (2,3)=8  (5,1)=8  (8,4)=8  (8,7)=8 
! 17 wrong pixels (generated / expected)

TEST ded97339.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1904.3 bits (1904.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-44] Checking task e179c5f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1047.2 = 1056.1
DL output with Mo: L = 9.0 + 5651.1 = 5660.0
DL input+output M: L = 17.9 + 6698.3 = 6716.2

# learning a model for train pairs
6716.2	
3635.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3163.8	OUT DEF: size={size}
2692.5	OUT DEF: layer[0].size={size}
2458.2	OUT DEF: color=blue
2320.2	OUT DEF: layer[0].color=cyan
2202.5	IN  SHAPE at layer[0]: a point at ? with color ?
2064.5	IN  DEF: layer[0].color=blue
2018.9	IN  DEF: color=black
1983.9	OUT DEF: layer[0].pos=(?,?)
1845.5	OUT DEF: layer[0].pos.i={layer[0].pos.j}
1759.6	OUT DEF: layer[0].pos.j={layer[0].pos.j}
1724.6	IN  DEF: size=(?,?)
1461.3	IN  DEF: size.i=10
1426.3	IN  DEF: layer[0].pos=(?,?)
1288.3	IN  DEF: layer[0].pos.i=9
1205.7	IN  DEF: layer[0].pos.j=0
1201.6	OUT DEF: color={layer[0].color}

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[0].color} and layers
  [0]: a rectangle at ({layer[0].pos.j},{layer[0].pos.j}) with size {size} and color cyan and mask ?
WHERE (Mi)
a background with size (10,?) and color black and layers
  [0]: a point at (9,0) with color blue

DL input  with Mi: L = 38.5 + 161.4 = 199.9
DL output with Mo: L = 32.0 + 969.7 = 1001.7
DL input+output M: L = 70.6 + 1131.0 = 1201.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,2) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
   (4.3 bits)
data: a background with size (10,2) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,2) and color cyan and mask 10011001100110011001
diff: 
delta:
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
   (5.5 bits)
data: a background with size (10,3) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,3) and color cyan and mask 110101011101110101011101110101
diff: 
delta:
   (32.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
   (6.3 bits)
data: a background with size (10,4) and color blue and layers
  [0]: a rectangle at (0,0) with size (10,4) and color cyan and mask 1110110110110111101111011110110110110111
diff: 
delta:
   (42.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  [0]: a point at (9,0) with color blue
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST e179c5f4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 969.7 bits (969.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-43] Checking task e21d9049.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2759.4 = 2768.3
DL output with Mo: L = 9.0 + 9806.8 = 9815.8
DL input+output M: L = 17.9 + 12566.2 = 12584.1

# learning a model for train pairs
12584.1	
12168.3	OUT DEF: size={size}
12079.7	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12005.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11346.5	OUT DEF: layer[0]={layer[0]}
11271.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10614.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9959.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
9759.7	OUT DEF: layer[01].size={layer[0].size}
9631.9	OUT DEF: layer[01].mask={layer[0].mask}
9540.4	OUT DEF: layer[01].color=cyan
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size {layer[0].size} and color cyan and mask {layer[0].mask}
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 2652.5 = 2679.0
DL output with Mo: L = 61.7 + 6799.7 = 6861.4
DL input+output M: L = 88.3 + 9452.1 = 9540.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (3,1) with size (2,2) and color green and mask 110
diff: 
delta: (2,2)=8  (4,0)=8  (4,2)=2 
   (111.4 bits)
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (3,1) with size (2,2) and color green and mask 110
  [01]: a rectangle at (4,2) with size (2,2) and color cyan and mask 110
  [011]: a rectangle at (1,2) with size (10,1) and color red and mask full
  [0111]: a rectangle at (4,0) with size (1,10) and color cyan and mask full
diff: 
delta: (0,2)=3  (2,2)=8  (4,4)=3  (4,5)=2  (4,7)=3  (4,8)=2  (4,10)=3  (6,2)=3  (8,2)=8  (9,2)=3  (11,2)=8 
   (278.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (3,1) with size (2,2) and color green and mask 110
diff: 
delta: (2,2)=8  (4,0)=8  (4,2)=2 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (2,2) with size (1,1) and color cyan and mask full
diff: 
delta: (3,2)=3  (4,0)=8  (4,1)=3  (4,2)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,11) and color black and layers
  [0]: a rectangle at (3,2) with size (1,1) and color green and mask full
diff: 
delta: (2,2)=8  (4,0)=8  (4,1)=3  (4,2)=2 
! 25 wrong pixels (generated / expected)

TRAIN e21d9049.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (6,7) with size (2,2) and color red and mask 1001
diff: 
delta: (4,8)=4  (5,8)=8  (6,8)=3  (6,9)=8  (6,10)=4 
   (153.9 bits)
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (6,7) with size (2,2) and color red and mask 1001
  [01]: a rectangle at (5,8) with size (2,2) and color cyan and mask 1001
  [011]: a rectangle at (6,2) with size (1,9) and color yellow and mask full
  [0111]: a rectangle at (0,8) with size (13,1) and color yellow and mask full
diff: 
delta: (1,8)=8  (2,8)=3  (3,8)=2  (6,0)=3  (6,1)=8  (6,3)=2  (6,4)=3  (6,5)=8  (6,8)=3  (6,11)=2  (6,12)=3  (6,13)=8  (9,8)=8  (10,8)=3  (11,8)=2  (13,8)=8  (14,8)=3 
   (401.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (5,8) with size (2,2) and color cyan and mask 1001
diff: 
delta: (4,8)=4  (6,7)=2  (6,8)=3  (6,10)=4  (7,8)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (6,7) with size (2,2) and color red and mask 1001
diff: 
delta: (4,8)=4  (5,8)=8  (6,8)=3  (6,9)=8  (6,10)=4 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color black and layers
  [0]: a rectangle at (4,8) with size (1,1) and color yellow and mask full
diff: 
delta: (5,8)=8  (6,7)=2  (6,8)=3  (6,9)=8  (6,10)=4  (7,8)=2 
! 31 wrong pixels (generated / expected)

TRAIN e21d9049.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,5) with size (2,2) and color yellow and mask 110
diff: 
delta: (6,6)=2  (6,7)=3  (6,8)=1  (7,6)=3  (8,6)=1 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (6,6) with size (2,2) and color green and mask 110
diff: 
delta: (5,6)=4  (6,5)=4  (6,6)=2  (6,8)=1  (8,6)=1 
! 41 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  [0]: a rectangle at (5,6) with size (1,1) and color yellow and mask full
diff: 
delta: (6,5)=4  (6,6)=2  (6,7)=3  (6,8)=1  (7,6)=3  (8,6)=1 
! 42 wrong pixels (generated / expected)

TEST e21d9049.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6799.7 bits (6799.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-42] Checking task e26a3af2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 80063.5 = 80072.5
DL output with Mo: L = 9.0 + 73171.1 = 73180.1
DL input+output M: L = 17.9 + 153234.7 = 153252.6

# learning a model for train pairs
153252.6	
119709.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
92531.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
68699.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
48682.3	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
38796.6	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
37704.9	OUT DEF: layer[01]={layer[01]}
37065.9	OUT DEF: size={size}
36749.0	OUT DEF: layer[0].pos={layer[0].pos}
36609.7	OUT DEF: color={color}
36470.7	OUT DEF: layer[0].color={layer[0].color}
36400.0	OUT DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size ? and color {layer[0].color} and mask full
  [01]: {layer[01]}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 23031.6 = 23091.4
DL output with Mo: L = 30.6 + 13278.0 = 13308.6
DL input+output M: L = 90.4 + 36309.6 = 36400.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,17) and color red and layers
  [0]: a rectangle at (0,0) with size (13,5) and color blue and mask 10101111111111110110101111111101111110100111011111101101010011111
  [01]: a rectangle at (0,8) with size (13,4) and color green and mask full
  [011]: a rectangle at (0,4) with size (13,4) and color cyan and mask full
diff: 
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,0)=4  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
   (906.5 bits)
data: a background with size (13,17) and color red and layers
  [0]: a rectangle at (0,0) with size (13,5) and color blue and mask full
  [01]: a rectangle at (0,8) with size (13,4) and color green and mask full
diff: 
delta: (0,5)=8  (0,6)=8  (0,7)=8  (1,5)=8  (1,6)=8  (1,7)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,5)=8  (6,6)=8  (6,7)=8  (7,5)=8  (7,6)=8  (7,7)=8  (8,5)=8  (8,6)=8  (8,7)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,5)=8  (10,6)=8  (10,7)=8  (11,5)=8  (11,6)=8  (11,7)=8  (12,5)=8  (12,6)=8  (12,7)=8 
   (758.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color red and layers
  [0]: a rectangle at (0,0) with size (13,5) and color blue and mask 10101111111111110110101111111101111110100111011111101101010011111
  [01]: a rectangle at (0,8) with size (13,4) and color green and mask full
  [011]: a rectangle at (0,4) with size (13,4) and color cyan and mask full
diff: 
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,0)=4  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
! 100 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,17) and color red and layers
  [0]: a rectangle at (0,0) with size (13,5) and color blue and mask 10101111111111110110101111111101111110100111011111101101010011111
  [01]: a rectangle at (0,4) with size (13,4) and color cyan and mask full
  [011]: a rectangle at (0,8) with size (13,4) and color green and mask full
diff: 
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,0)=4  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
! 113 wrong pixels (generated / expected)

TRAIN e26a3af2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,14) and color blue and layers
  [0]: a rectangle at (0,5) with size (13,7) and color cyan and mask 101111111111101101010110101011101001111100011111001111101111110110101011101101111110111011
  [01]: a rectangle at (0,0) with size (13,5) and color red and mask full
  [011]: a rectangle at (5,10) with size (2,1) and color grey and mask full
diff: 
delta: (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,8)=5# (9,11)=3  (10,4)=5# (10,6)=2  (10,8)=5# (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
   (653.5 bits)
data: a background with size (13,14) and color blue and layers
  [0]: a rectangle at (0,5) with size (13,6) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (13,5) and color red and mask full
diff: 
delta:
   (18.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color grey and layers
  [0]: a rectangle at (0,5) with size (13,7) and color cyan and mask 101111111111101101010110101011101001111100011111001111101111110110101011101101111110111011
  [01]: a rectangle at (0,0) with size (13,5) and color red and mask full
  [011]: a rectangle at (0,11) with size (13,3) and color blue and mask full
diff: 
delta: (0,7)=1  (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
! 113 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,14) and color grey and layers
  [0]: a rectangle at (0,5) with size (13,7) and color cyan and mask 101111111111101101010110101011101001111100011111001111101111110110101011101101111110111011
  [01]: a rectangle at (0,11) with size (13,3) and color blue and mask full
  [011]: a rectangle at (0,0) with size (13,5) and color red and mask full
diff: 
delta: (0,7)=1  (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
! 139 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,14) and color blue and layers
  [0]: a rectangle at (0,5) with size (13,7) and color cyan and mask 101111111111101101010110101011101001111100011111001111101111110110101011101101111110111011
  [01]: a rectangle at (0,0) with size (13,5) and color red and mask full
  [011]: a rectangle at (5,10) with size (2,1) and color grey and mask full
diff: 
delta: (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,8)=5# (9,11)=3  (10,4)=5# (10,6)=2  (10,8)=5# (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
! 74 wrong pixels (generated / expected)

TRAIN e26a3af2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color green and layers
  [0]: a rectangle at (4,0) with size (6,14) and color orange and mask full
  [01]: a rectangle at (10,0) with size (3,14) and color cyan and mask full
  [011]: a rectangle at (13,0) with size (2,14) and color blue and mask full
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
   (743.1 bits)
data: a background with size (15,14) and color green and layers
  [0]: a rectangle at (4,0) with size (6,14) and color orange and mask full
  [01]: a rectangle at (10,0) with size (3,14) and color cyan and mask full
diff: 
delta: (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,11)=1  (13,12)=1  (13,13)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (14,4)=1  (14,5)=1  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,11)=1  (14,12)=1  (14,13)=1 
   (550.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color green and layers
  [0]: a rectangle at (4,0) with size (6,14) and color orange and mask full
  [01]: a rectangle at (10,0) with size (3,14) and color cyan and mask full
  [011]: a rectangle at (13,0) with size (2,14) and color blue and mask full
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 108 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color green and layers
  [0]: a rectangle at (4,0) with size (6,14) and color orange and mask full
  [01]: a rectangle at (13,0) with size (2,14) and color blue and mask full
  [011]: a rectangle at (10,0) with size (3,14) and color cyan and mask full
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 122 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color cyan and layers
  [0]: a rectangle at (4,0) with size (6,14) and color orange and mask full
  [01]: a rectangle at (0,0) with size (4,14) and color green and mask full
  [011]: a rectangle at (13,0) with size (2,14) and color blue and mask full
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 108 wrong pixels (generated / expected)

TRAIN e26a3af2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (6,0) with size (5,15) and color cyan and mask 110111011111111111101111111111011101111101111111111110111110001000000000000
  [01]: a rectangle at (3,0) with size (4,15) and color red and mask full
  [011]: a rectangle at (11,0) with size (2,15) and color yellow and mask full
diff: 
delta: (0,0)=6  (0,3)=5# (1,1)=4  (1,4)=9# (1,9)=5# (2,0)=5# (2,4)=4  (3,0)=7# (3,5)=6  (3,7)=9# (3,10)=4  (3,12)=4  (4,2)=9# (4,4)=1  (4,8)=3  (4,11)=8  (4,13)=7# (5,1)=5# (5,4)=5# (5,5)=6  (5,6)=6  (5,10)=3  (5,12)=5# (6,10)=6  (7,6)=9# (8,10)=7# (8,14)=9# (9,10)=4  (10,8)=5# (11,6)=7# (11,7)=3  (11,13)=2  (12,2)=7# (12,10)=8  (13,0)=3  (13,1)=3  (13,3)=9# (13,4)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=8  (14,1)=6  (14,2)=3  (14,3)=3  (14,4)=8  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,11)=3  (14,12)=3  (14,13)=3  (14,14)=3 
! 120 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color blue and layers
  [0]: a rectangle at (6,0) with size (5,15) and color cyan and mask 110111011111111111101111111111011101111101111111111110111110001000000000000
  [01]: a rectangle at (11,0) with size (2,15) and color yellow and mask full
  [011]: a rectangle at (3,0) with size (4,15) and color red and mask full
diff: 
delta: (0,0)=6  (0,3)=5# (1,1)=4  (1,4)=9# (1,9)=5# (2,0)=5# (2,4)=4  (3,0)=7# (3,5)=6  (3,7)=9# (3,10)=4  (3,12)=4  (4,2)=9# (4,4)=1  (4,8)=3  (4,11)=8  (4,13)=7# (5,1)=5# (5,4)=5# (5,5)=6  (5,6)=6  (5,10)=3  (5,12)=5# (6,10)=6  (7,6)=9# (8,10)=7# (8,14)=9# (9,10)=4  (10,8)=5# (11,6)=7# (11,7)=3  (11,13)=2  (12,2)=7# (12,10)=8  (13,0)=3  (13,1)=3  (13,3)=9# (13,4)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=8  (14,1)=6  (14,2)=3  (14,3)=3  (14,4)=8  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,11)=3  (14,12)=3  (14,13)=3  (14,14)=3 
! 148 wrong pixels (generated / expected)

TEST e26a3af2.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 13278.0 bits (13278.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-41] Checking task e3497940.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13259.9 = 13268.9
DL output with Mo: L = 9.0 + 6614.6 = 6623.6
DL input+output M: L = 17.9 + 19874.6 = 19892.5

# learning a model for train pairs
19892.5	
15538.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12712.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11209.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10588.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10198.3	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
9938.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9800.1	IN  DEF: layer[0].color=grey
9729.5	IN  DEF: layer[0].mask=full
9683.9	IN  DEF: color=black
9613.2	IN  DEF: layer[011].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color grey and mask full
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask full
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 73.5 + 6002.5 = 6076.0
DL output with Mo: L = 43.4 + 3493.9 = 3537.2
DL input+output M: L = 116.9 + 9496.4 = 9613.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (4,2) with size (4,2) and color green and mask 10101011
  [011]: a rectangle at (6,5) with size (1,3) and color green and mask full
  [0111]: a rectangle at (3,5) with size (1,2) and color yellow and mask full
diff: 
delta: (2,3)=4  (3,3)=4 
   (167.0 bits)
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (4,1) with size (4,3) and color green and mask 100111100110
  [01]: a rectangle at (2,2) with size (2,2) and color yellow and mask 1110
diff: 
delta:
   (89.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (4,2) with size (4,2) and color green and mask 10101011
  [011]: a rectangle at (6,5) with size (1,3) and color green and mask full
  [0111]: a rectangle at (3,5) with size (1,2) and color yellow and mask full
diff: 
delta: (2,3)=4  (3,3)=4 
! size mismatch, 10x10 instead of 10x4

TRAIN e3497940.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (1,3) with size (8,1) and color red and mask full
  [011]: a rectangle at (4,5) with size (1,3) and color red and mask full
  [0111]: a rectangle at (7,1) with size (1,5) and color red and mask full
diff: 
delta: (2,5)=2  (2,6)=6  (5,2)=6  (5,3)=6  (5,5)=6  (7,3)=0 
   (233.8 bits)
data: a background with size (10,4) and color red and layers
  [0]: a rectangle at (5,2) with size (1,2) and color pink and mask full
  [01]: a rectangle at (0,0) with size (10,4) and color black and mask 1111011100010111111100010111001101111111
diff: 
delta: (2,2)=6 
   (139.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (1,3) with size (8,1) and color red and mask full
  [011]: a rectangle at (4,5) with size (1,3) and color red and mask full
  [0111]: a rectangle at (7,1) with size (1,5) and color red and mask full
diff: 
delta: (2,5)=2  (2,6)=6  (5,2)=6  (5,3)=6  (5,5)=6  (7,3)=0 
! size mismatch, 10x10 instead of 10x4

TRAIN e3497940.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (2,2) with size (3,2) and color cyan and mask 111010
  [011]: a rectangle at (5,5) with size (1,2) and color cyan and mask full
  [0111]: a rectangle at (6,3) with size (2,1) and color cyan and mask full
diff: 
delta: (1,5)=7# (4,1)=7# (8,5)=8  (8,6)=7#
   (199.4 bits)
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (2,2) with size (7,2) and color cyan and mask 10101011111010
  [01]: a rectangle at (1,3) with size (1,1) and color orange and mask full
diff: 
delta: (4,1)=7# (8,2)=7#
   (119.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (2,2) with size (3,2) and color cyan and mask 111010
  [011]: a rectangle at (5,5) with size (1,2) and color cyan and mask full
  [0111]: a rectangle at (6,3) with size (2,1) and color cyan and mask full
diff: 
delta: (1,5)=7# (4,1)=7# (8,5)=8  (8,6)=7#
! size mismatch, 10x10 instead of 10x4

TRAIN e3497940.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  [0]: a rectangle at (0,4) with size (10,1) and color grey and mask full
  [01]: a rectangle at (3,1) with size (1,7) and color blue and mask full
  [011]: a rectangle at (5,5) with size (1,3) and color blue and mask full
  [0111]: a rectangle at (4,3) with size (1,4) and color pink and mask full
diff: 
delta: (1,3)=1  (2,3)=1  (2,5)=1  (3,8)=6  (6,3)=1  (7,3)=1  (7,5)=1  (7,6)=6  (8,5)=6 
! size mismatch, 10x10 instead of 10x4

TEST e3497940.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 3493.9 bits (3493.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-40] Checking task e40b9e2f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5563.7 = 5572.7
DL output with Mo: L = 9.0 + 8236.6 = 8245.5
DL input+output M: L = 17.9 + 13800.3 = 13818.3

# learning a model for train pairs
13818.3	
10541.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8060.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7292.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6713.8	OUT DEF: size={size}
6307.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6167.6	OUT DEF: layer[0].color={layer[0].color}
6028.1	OUT DEF: layer[01].color={layer[01].color}
5982.5	OUT DEF: color=black
5936.9	IN  DEF: color=black
5901.9	OUT DEF: layer[0].pos=(?,?)
5763.2	OUT DEF: layer[0].pos.i={layer[0].pos.i}
5631.1	OUT DEF: layer[0].pos.j={layer[01].pos.j - 1}
5596.1	OUT DEF: layer[0].size=(?,?)
5561.1	OUT DEF: layer[01].pos=(?,?)
5424.7	OUT DEF: layer[01].pos.i=3
5389.7	OUT DEF: layer[01].size=(?,?)
5354.7	IN  DEF: size=(?,?)
5091.3	IN  DEF: size.i=10
4828.0	IN  DEF: size.j=10
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i},{layer[01].pos.j - 1}) with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at (3,?) with size (?,?) and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 57.4 + 2019.3 = 2076.7
DL output with Mo: L = 70.4 + 2680.9 = 2751.3
DL input+output M: L = 127.8 + 4700.2 = 4828.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (4,3) and color orange and mask 10101010010
  [01]: a rectangle at (4,3) with size (4,4) and color yellow and mask 1000011101110111
diff: 
delta:
   (90.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (5,5) and color orange and mask 10000100110110010000100
  [01]: a rectangle at (3,2) with size (5,5) and color yellow and mask 1010101110111110111010101
diff: 
delta:
   (87.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (4,4) and color yellow and mask 1000010100100101
  [01]: a rectangle at (3,3) with size (4,3) and color orange and mask 111111111010
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (4,3) and color orange and mask 10101010010
  [01]: a rectangle at (4,3) with size (4,4) and color yellow and mask 1000011101110111
diff: 
delta:
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,3) with size (4,4) and color yellow and mask 1000010100100101
  [01]: a rectangle at (3,4) with size (4,1) and color orange and mask full
diff: 
delta: (5,3)=7# (5,5)=7#
! 19 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (4,2) with size (3,2) and color pink and mask 101111
diff: 
delta:
   (58.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (3,1) with size (4,4) and color pink and mask 100011111100011
diff: 
delta: (3,4)=3  (6,1)=3  (6,4)=3 
   (99.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,2) with size (3,2) and color pink and mask 101111
  [01]: a rectangle at (3,1) with size (1,1) and color green and mask full
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (1,1) and color green and mask full
  [01]: a rectangle at (4,2) with size (3,2) and color pink and mask 101111
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,6) with size (1,1) and color brown and mask full
  [01]: a rectangle at (3,3) with size (3,3) and color cyan and mask full
diff: 
delta:
   (53.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,2) with size (1,1) and color brown and mask full
  [01]: a rectangle at (3,3) with size (3,3) and color cyan and mask full
diff: 
delta: (2,6)=9# (6,2)=9# (6,6)=9#
   (81.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (2,6) with size (1,1) and color brown and mask full
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,6) with size (1,1) and color brown and mask full
  [01]: a rectangle at (3,3) with size (3,3) and color cyan and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (3,6) and color black and mask full
diff: 
delta: (2,6)=9#
! 15 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (3,5) and color green and mask 101110100010111
  [01]: a rectangle at (2,3) with size (4,3) and color red and mask 111111111010
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,3) with size (4,3) and color red and mask 10101010010
  [01]: a rectangle at (3,1) with size (3,5) and color green and mask 111111110011111
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (3,5) and color green and mask 101110100010111
  [01]: a rectangle at (2,4) with size (4,1) and color red and mask full
diff: 
delta: (4,3)=2  (4,5)=2 
! 30 wrong pixels (generated / expected)

TEST e40b9e2f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2680.9 bits (2680.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-39] Checking task e48d4e1a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16125.5 = 16134.5
DL output with Mo: L = 9.0 + 14531.5 = 14540.5
DL input+output M: L = 17.9 + 30657.1 = 30675.0

# learning a model for train pairs
30675.0	
22462.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14369.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11328.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8286.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
7516.4	OUT DEF: size={size}
6844.7	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6341.0	OUT DEF: layer[0].size={layer[0].size}
5837.3	OUT DEF: layer[01].size={layer[01].size}
5651.7	OUT DEF: layer[0].color={layer[0].color}
5466.2	OUT DEF: layer[01].color={layer[01].color}
5372.3	OUT DEF: layer[0].mask=full
5187.9	IN  DEF: layer[011].color=grey
5094.0	OUT DEF: layer[01].mask=full
5000.2	IN  DEF: layer[0].mask=full
4906.3	IN  DEF: layer[01].mask=full
4812.4	IN  DEF: layer[011].mask=full
4752.2	OUT DEF: color=black
4692.0	IN  DEF: color=black
4643.8	OUT DEF: layer[0].pos=(?,?)
4459.2	OUT DEF: layer[0].pos.j={layer[0].pos.j}
4281.6	OUT DEF: layer[0].pos.i={layer[0].pos.i + layer[011].size.i}
4233.4	OUT DEF: layer[01].pos=(?,?)
4048.8	OUT DEF: layer[01].pos.i={layer[01].pos.i}
3872.4	OUT DEF: layer[01].pos.j={layer[01].pos.j - layer[011].size.i}
3824.1	IN  DEF: size=(?,?)
3471.2	IN  DEF: size.i=10
3118.2	IN  DEF: size.j=10
3069.9	IN  DEF: layer[0].pos=(?,?)
2885.5	IN  DEF: layer[0].pos.j=0
2837.3	IN  DEF: layer[0].size=(?,?)
2484.3	IN  DEF: layer[0].size.j=10
2390.4	IN  DEF: layer[0].size.i=1
2342.2	IN  DEF: layer[01].pos=(?,?)
2157.7	IN  DEF: layer[01].pos.i=0
2109.5	IN  DEF: layer[01].size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at ({layer[0].pos.i + layer[011].size.i},{layer[0].pos.j}) with size {layer[0].size} and color {layer[0].color} and mask full
  [01]: a rectangle at ({layer[01].pos.i},{layer[01].pos.j - layer[011].size.i}) with size {layer[01].size} and color {layer[01].color} and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,0) with size (1,10) and color ? and mask full
  [01]: a rectangle at (0,?) with size (?,?) and color ? and mask full
  [011]: a rectangle at ? with size ? and color grey and mask full

DL input  with Mi: L = 98.0 + 1940.9 = 2039.0
DL output with Mo: L = 70.5 + 0.0 = 70.5
DL input+output M: L = 168.6 + 1940.9 = 2109.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,0) with size (1,10) and color red and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color red and mask full
  [011]: a rectangle at (0,9) with size (2,1) and color grey and mask full
diff: 
delta:
   (48.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,0) with size (1,10) and color red and mask full
  [01]: a rectangle at (0,1) with size (10,1) and color red and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,0) with size (1,10) and color red and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color red and mask full
  [011]: a rectangle at (0,9) with size (2,1) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color yellow and mask full
  [011]: a rectangle at (0,9) with size (3,1) and color grey and mask full
diff: 
delta:
   (49.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,0) with size (1,10) and color yellow and mask full
  [01]: a rectangle at (0,0) with size (10,1) and color yellow and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color yellow and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color yellow and mask full
  [011]: a rectangle at (0,9) with size (3,1) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (1,10) and color pink and mask full
  [01]: a rectangle at (0,6) with size (10,1) and color pink and mask full
  [011]: a rectangle at (0,9) with size (3,1) and color grey and mask full
diff: 
delta:
   (49.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,0) with size (1,10) and color pink and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color pink and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (1,10) and color pink and mask full
  [01]: a rectangle at (0,6) with size (10,1) and color pink and mask full
  [011]: a rectangle at (0,9) with size (3,1) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,10) and color green and mask full
  [01]: a rectangle at (0,4) with size (10,1) and color green and mask full
  [011]: a rectangle at (0,9) with size (1,1) and color grey and mask full
diff: 
delta:
   (46.4 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color green and mask full
  [01]: a rectangle at (0,3) with size (10,1) and color green and mask full
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,10) and color green and mask full
  [01]: a rectangle at (0,4) with size (10,1) and color green and mask full
  [011]: a rectangle at (0,9) with size (1,1) and color grey and mask full
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,0) with size (1,10) and color cyan and mask full
  [01]: a rectangle at (0,5) with size (10,1) and color cyan and mask full
  [011]: a rectangle at (0,9) with size (2,1) and color grey and mask full
diff: 
delta:
correct output grid

TEST e48d4e1a.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-38] Checking task e5062a87.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 23221.8 = 23230.8
DL output with Mo: L = 9.0 + 25049.9 = 25058.9
DL input+output M: L = 17.9 + 48271.7 = 48289.7

# learning a model for train pairs
48289.7	
35836.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
27243.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22946.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19497.9	OUT DEF: layer[0]={layer[0]}
17066.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15995.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14808.8	OUT DEF: layer[01]={layer[01]}
14231.0	OUT DEF: size={size}
14093.0	OUT DEF: layer[011].color=red
13955.0	IN  DEF: layer[0].color=grey
13909.4	OUT DEF: color=black
13863.8	IN  DEF: color=black
13828.8	OUT DEF: layer[011].pos=(?,?)
13793.8	OUT DEF: layer[011].size=(?,?)
13607.1	OUT DEF: layer[011].size.j=4
13363.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at (?,?) with size (?,4) and color red and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color grey and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 42.8 + 8119.0 = 8161.8
DL output with Mo: L = 63.7 + 5137.6 = 5201.3
DL input+output M: L = 106.5 + 13256.6 = 13363.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 111011100001111101000110000010001110
  [01]: a rectangle at (0,6) with size (7,4) and color grey and mask 10110001001010010010011110
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (7,9)=5# (8,0)=5# (8,3)=5# (8,6)=5# (8,8)=5# (8,9)=5# (9,3)=5# (9,4)=5# (9,7)=5# (9,8)=5#
   (452.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 111011100001111101000110000010001110
  [01]: a rectangle at (0,6) with size (7,4) and color grey and mask 10110001001010010010011110
  [011]: a rectangle at (5,5) with size (5,4) and color red and mask 100101011011101101
  [0111]: a rectangle at (0,5) with size (4,5) and color red and mask 11101111101111111110
diff: 
delta: (6,1)=2  (7,0)=2  (7,1)=5# (7,2)=2  (7,3)=5# (7,4)=5# (7,9)=5# (8,0)=5# (8,1)=2  (8,3)=5# (8,6)=5# (8,8)=5# (8,9)=5# (9,3)=5# (9,4)=5# (9,7)=5# (9,8)=5#
   (399.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 111011100001111101000110000010001110
  [01]: a rectangle at (0,6) with size (7,4) and color grey and mask 10110001001010010010011110
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (7,9)=5# (8,0)=5# (8,3)=5# (8,6)=5# (8,8)=5# (8,9)=5# (9,3)=5# (9,4)=5# (9,7)=5# (9,8)=5#
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color grey and mask 111011100001111101000110000010001110
  [01]: a rectangle at (7,6) with size (3,4) and color grey and mask 11011011000
diff: 
delta: (0,6)=2  (0,7)=5# (0,8)=5# (0,9)=5# (1,5)=2  (1,6)=5# (1,7)=2  (1,9)=5# (2,6)=2  (2,8)=5# (3,7)=5# (3,9)=5# (4,8)=5# (5,8)=5# (5,9)=5# (6,7)=5# (7,1)=5# (7,3)=5# (7,4)=5# (8,0)=5# (8,3)=5# (9,3)=5# (9,4)=5#
! 43 wrong pixels (generated / expected)

TRAIN e5062a87.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111101011101010110101100111001101111110000010000111010011111100011101100101111111100001011010011110
  [01]: a rectangle at (5,1) with size (1,4) and color red and mask full
diff: 
delta:
   (179.0 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111101011101010110101100111001101111110000010000111010011111100011101100101111111100001011010011110
  [01]: a rectangle at (5,1) with size (1,4) and color red and mask full
  [011]: a rectangle at (5,6) with size (1,4) and color red and mask full
  [0111]: a rectangle at (0,3) with size (5,6) and color black and mask full
diff: 
delta:
   (48.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111101011101010110101100111001101111110000010000111010011111100011101100101111111100001011010011110
  [01]: a rectangle at (5,1) with size (1,4) and color red and mask full
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,1) with size (1,6) and color grey and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111101011101010110101100111001101111110000010000111010011111100011101100101111111100001011010011110
diff: 
delta: (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2 
! 11 wrong pixels (generated / expected)

TRAIN e5062a87.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1001000001010101111001010001111111010010100101011110111000011100110101111011010110111011111111101111
  [01]: a rectangle at (7,7) with size (3,2) and color red and mask full
diff: 
delta:
   (180.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1001000001010101111001010001111111010010100101011110111000011100110101111011010110111011111111101111
  [01]: a rectangle at (7,7) with size (3,2) and color red and mask full
  [011]: a rectangle at (2,1) with size (6,4) and color red and mask full
  [0111]: a rectangle at (3,6) with size (1,2) and color black and mask full
diff: 
delta: (6,2)=0 
   (65.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1001000001010101111001010001111111010010100101011110111000011100110101111011010110111011111111101111
  [01]: a rectangle at (7,7) with size (3,2) and color red and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1001000001010101111001010001111111010010100101011110111000011100110101111011010110111011111111101111
  [01]: a rectangle at (7,7) with size (3,1) and color red and mask full
diff: 
delta: (9,8)=2 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1001000001010101111001010001111111010010100101011110111000011100110101111011010110111011111111101111
  [01]: a rectangle at (9,7) with size (1,2) and color red and mask full
diff: 
delta: (7,7)=2  (8,7)=2 
! 14 wrong pixels (generated / expected)

TRAIN e5062a87.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 10010101000111001100011111101110001100111000001110000111001110111100001011110010111101110111101110
  [01]: a rectangle at (4,5) with size (3,2) and color red and mask full
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,1) with size (1,6) and color grey and mask full
  [01]: a rectangle at (0,0) with size (10,10) and color grey and mask 10010101000111001100011111101110001100111000001110000111001110111100001011110010111101110111101110
diff: 
delta: (4,5)=2  (4,6)=2  (5,5)=2  (5,6)=2  (6,5)=2  (6,6)=2 
! 20 wrong pixels (generated / expected)

TEST e5062a87.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5137.6 bits (5137.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-37] Checking task e509e548.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20893.1 = 20902.1
DL output with Mo: L = 9.0 + 20893.1 = 20902.1
DL input+output M: L = 17.9 + 41786.2 = 41804.2

# learning a model for train pairs
41804.2	
36482.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
32836.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
29407.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27176.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
25293.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24657.5	OUT DEF: size={size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 13653.0 = 13696.4
DL output with Mo: L = 59.6 + 10901.5 = 10961.1
DL input+output M: L = 103.0 + 24554.6 = 24657.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,21) and color black and layers
  [0]: a rectangle at (9,0) with size (5,4) and color green and mask 11110010001000100110
  [01]: a rectangle at (4,12) with size (4,3) and color green and mask 111001001111
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (3,3)=3  (3,6)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (5,3)=3  (10,16)=3  (10,17)=3  (11,17)=3  (12,16)=3  (12,17)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (14,6)=3  (15,6)=3  (15,15)=3  (15,16)=3  (15,17)=3  (16,15)=3  (16,17)=3  (17,2)=3  (17,15)=3  (17,17)=3  (18,1)=3  (18,2)=3  (18,17)=3 
   (799.3 bits)
data: a background with size (19,21) and color black and layers
  [0]: a rectangle at (9,0) with size (5,4) and color red and mask 11110010001000100110
  [01]: a rectangle at (4,12) with size (4,3) and color pink and mask 111001001111
  [011]: a rectangle at (15,15) with size (4,3) and color pink and mask 100101101111
diff: 
delta: (0,17)=1  (0,18)=1  (1,18)=1  (2,18)=1  (3,3)=2  (3,6)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,3)=2  (10,16)=6  (10,17)=6  (11,17)=6  (12,16)=6  (12,17)=6  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (14,6)=1  (15,6)=1  (17,2)=1  (18,1)=1  (18,2)=1 
   (663.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  [0]: a rectangle at (9,0) with size (5,4) and color green and mask 11110010001000100110
  [01]: a rectangle at (4,12) with size (4,3) and color green and mask 111001001111
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (3,3)=3  (3,6)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (5,3)=3  (10,16)=3  (10,17)=3  (11,17)=3  (12,16)=3  (12,17)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (14,6)=3  (15,6)=3  (15,15)=3  (15,16)=3  (15,17)=3  (16,15)=3  (16,17)=3  (17,2)=3  (17,15)=3  (17,17)=3  (18,1)=3  (18,2)=3  (18,17)=3 
! 55 wrong pixels (generated / expected)

TRAIN e509e548.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color green and layers
  [0]: a rectangle at (0,0) with size (1,3) and color green and mask full
  [01]: a rectangle at (0,0) with size (10,11) and color black and mask 11111100011111111110111111111101111111100000111111111111011011111110110111111101101110111000011101111111111111
diff: 
delta:
   (201.6 bits)
data: a background with size (10,11) and color black and layers
  [0]: a rectangle at (1,6) with size (4,4) and color pink and mask 1001100110011111
  [01]: a rectangle at (6,0) with size (4,5) and color red and mask 11100001000010011111
  [011]: a rectangle at (0,0) with size (3,3) and color blue and mask 100100111
diff: 
delta:
   (140.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color green and layers
  [0]: a rectangle at (0,0) with size (1,3) and color green and mask full
  [01]: a rectangle at (0,0) with size (10,11) and color black and mask 11111100011111111110111111111101111111100000111111111111011011111110110111111101101110111000011101111111111111
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN e509e548.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color green and mask 11111100010000100001
  [01]: a rectangle at (7,5) with size (4,3) and color green and mask 101101111100
diff: 
delta: (1,9)=3  (2,9)=3  (2,10)=3  (2,11)=3  (11,0)=3  (11,1)=3  (11,2)=3  (12,2)=3  (12,9)=3  (12,11)=3  (13,9)=3  (13,10)=3  (13,11)=3 
   (364.4 bits)
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color pink and mask 11111100010000100001
  [01]: a rectangle at (7,5) with size (4,3) and color red and mask 101101111100
  [011]: a rectangle at (12,9) with size (2,3) and color pink and mask 111101
diff: 
delta: (1,9)=1  (2,9)=1  (2,10)=1  (2,11)=1  (11,0)=1  (11,1)=1  (11,2)=1  (12,2)=1 
   (286.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,5) and color green and mask 11111100010000100001
  [01]: a rectangle at (7,5) with size (4,3) and color green and mask 101101111100
diff: 
delta: (1,9)=3  (2,9)=3  (2,10)=3  (2,11)=3  (11,0)=3  (11,1)=3  (11,2)=3  (12,2)=3  (12,9)=3  (12,11)=3  (13,9)=3  (13,10)=3  (13,11)=3 
! 33 wrong pixels (generated / expected)

TRAIN e509e548.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  [0]: a rectangle at (6,9) with size (3,4) and color green and mask 111110001110
  [01]: a rectangle at (4,3) with size (3,5) and color green and mask 111110100011000
diff: 
delta: (0,1)=3  (0,3)=3  (0,12)=3  (1,1)=3  (1,3)=3  (1,12)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,12)=3  (2,13)=3  (2,14)=3  (3,12)=3  (3,14)=3  (4,14)=3  (10,11)=3  (11,1)=3  (11,2)=3  (11,3)=3  (11,4)=3  (11,5)=3  (11,6)=3  (11,11)=3  (12,6)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,6)=3 
! 46 wrong pixels (generated / expected)

TEST e509e548.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 10901.5 bits (10901.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-36] Checking task e50d258f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29504.8 = 29513.8
DL output with Mo: L = 9.0 + 3072.7 = 3081.7
DL input+output M: L = 17.9 + 32577.5 = 32595.4

# learning a model for train pairs
32595.4	
25250.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
18460.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15713.0	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
15532.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15353.6	IN  DEF: layer[0].mask=full
14914.9	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
14677.4	OUT DEF: color={layer[0111].color}
14539.4	IN  DEF: layer[0].color=cyan
14468.7	IN  DEF: layer[011].mask=full
14398.1	IN  DEF: layer[0111].mask=full
14331.0	IN  SHAPE at layer[00]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color {layer[0111].color} and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color cyan and mask full
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask full
  [0111]: a rectangle at ? with size ? and color ? and mask full

DL input  with Mi: L = 83.9 + 11583.0 = 11666.9
DL output with Mo: L = 28.2 + 2635.9 = 2664.1
DL input+output M: L = 112.1 + 14218.9 = 14331.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color blue
  [0]: a rectangle at (6,3) with size (4,6) and color cyan and mask full
  [01]: a rectangle at (0,6) with size (5,4) and color cyan and mask full
  [011]: a rectangle at (3,3) with size (1,1) and color red and mask full
  [0111]: a rectangle at (1,1) with size (4,4) and color cyan and mask full
diff: 
delta: (1,7)=2  (1,8)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
   (291.3 bits)
data: a background with size (5,4) and color cyan and layers
  [0]: a rectangle at (1,1) with size (1,2) and color red and mask full
diff: 
delta: (3,1)=2  (3,2)=1 
   (71.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color blue
  [0]: a rectangle at (6,3) with size (4,6) and color cyan and mask 111101110101110111111111
  [01]: a rectangle at (0,6) with size (5,4) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (4,4) and color cyan and mask full
  [0111]: a rectangle at (7,6) with size (1,1) and color red and mask full
diff:   layer[0].mask
delta: (1,7)=2  (1,8)=2  (3,3)=2  (3,7)=2  (3,8)=1  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x10 instead of 5x4
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (2,2) with color blue
  [0]: a rectangle at (6,3) with size (4,6) and color cyan and mask 111101110101110111111111
  [01]: a rectangle at (0,6) with size (5,4) and color cyan and mask full
  [011]: a rectangle at (1,1) with size (4,4) and color cyan and mask full
  [0111]: a rectangle at (8,6) with size (1,1) and color blue and mask full
diff:   layer[0].mask
delta: (1,7)=2  (1,8)=2  (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (9,4)=1 
! size mismatch, 10x10 instead of 5x4

TRAIN e50d258f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color cyan
  [0]: a rectangle at (1,5) with size (7,5) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (5,4) and color blue and mask 100111100011011111
  [011]: a rectangle at (1,0) with size (4,4) and color cyan and mask full
  [0111]: a rectangle at (7,1) with size (3,3) and color red and mask full
diff: 
delta: (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,3)=1  (9,2)=1  (9,3)=8 
   (532.1 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,1) with size (2,2) and color blue and mask 110
diff: 
delta: (0,0)=8  (2,2)=8 
   (71.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color cyan
  [0]: a rectangle at (1,5) with size (7,5) and color cyan and mask 1001101001011101001011111010110110
  [01]: a rectangle at (0,0) with size (5,4) and color blue and mask 100111100011011111
  [011]: a rectangle at (1,0) with size (4,4) and color cyan and mask full
  [0111]: a rectangle at (5,5) with size (3,4) and color blue and mask full
diff:   layer[0].mask
delta: (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,6)=1  (4,7)=2  (4,9)=2  (7,1)=8  (7,2)=2  (7,3)=2  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color cyan
  [0]: a rectangle at (1,5) with size (7,5) and color cyan and mask 1001101001011101001011111010110110
  [01]: a rectangle at (0,0) with size (5,4) and color blue and mask 100111100011011111
  [011]: a rectangle at (5,5) with size (3,4) and color blue and mask full
  [0111]: a rectangle at (1,0) with size (4,4) and color cyan and mask full
diff:   layer[0].mask
delta: (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,6)=1  (4,7)=2  (4,9)=2  (7,1)=8  (7,2)=2  (7,3)=2  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color cyan
  [0]: a rectangle at (1,5) with size (7,5) and color cyan and mask 1001101001011101001011111010110110
  [01]: a rectangle at (0,0) with size (5,4) and color blue and mask full
  [011]: a rectangle at (5,5) with size (3,4) and color blue and mask full
  [0111]: a rectangle at (7,1) with size (3,3) and color red and mask full
diff:   layer[0].mask
delta: (1,1)=8  (1,5)=1  (1,8)=1  (2,0)=8  (2,1)=2  (2,2)=8  (2,6)=1  (2,8)=2  (3,3)=8  (3,9)=1  (4,0)=8  (4,2)=8  (4,3)=8  (4,6)=1  (4,7)=2  (4,9)=2  (7,1)=8  (7,9)=2  (8,3)=1  (9,2)=1  (9,3)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN e50d258f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,0) with color red
  [0]: a rectangle at (0,0) with size (6,4) and color cyan and mask full
  [01]: a rectangle at (3,6) with size (6,4) and color cyan and mask 101111100111110110110110
  [011]: a rectangle at (3,6) with size (5,1) and color blue and mask full
  [0111]: a rectangle at (4,8) with size (5,1) and color blue and mask full
diff: 
delta: (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1 
   (335.0 bits)
data: a background with size (6,4) and color blue and layers
  [0]: a rectangle at (0,0) with size (6,4) and color cyan and mask 110101010111111010111110
diff: 
delta: (0,0)=2  (3,3)=2  (4,1)=2 
   (120.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,0) with color red
  [0]: a rectangle at (0,0) with size (6,4) and color cyan and mask 110101010111111010111111
  [01]: a rectangle at (3,6) with size (6,4) and color cyan and mask 101111100111110110110110
  [011]: a rectangle at (3,6) with size (5,1) and color blue and mask full
  [0111]: a rectangle at (4,8) with size (5,1) and color blue and mask full
diff:   layer[0].mask
delta: (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1 
! size mismatch, 10x10 instead of 6x4

TRAIN e50d258f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,0) with color red
  [0]: a rectangle at (0,0) with size (4,4) and color cyan and mask 1111010010111111
  [01]: a rectangle at (1,6) with size (6,3) and color cyan and mask full
  [011]: a rectangle at (7,3) with size (2,2) and color blue and mask 1001
  [0111]: a rectangle at (6,1) with size (3,4) and color cyan and mask full
diff:   layer[011].mask  layer[0].mask
delta: (1,2)=1  (1,6)=2  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,6)=2  (3,7)=1  (4,8)=2  (5,6)=2  (5,8)=1  (6,1)=1  (6,2)=2  (6,4)=2  (6,6)=1  (8,1)=1  (8,2)=2 
! size mismatch, 10x10 instead of 6x3

TEST e50d258f.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2635.9 bits (2635.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-35] Checking task e6721834.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 89949.4 = 89958.4
DL output with Mo: L = 9.0 + 14846.8 = 14855.8
DL input+output M: L = 17.9 + 104796.2 = 104814.1

# learning a model for train pairs
104814.1	
37421.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
30689.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24405.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
21214.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20323.0	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
19723.7	OUT DEF: size={layer[0].size}
19325.8	OUT DEF: layer[01].size={layer[01].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size {layer[01].size} and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 14882.5 = 14942.3
DL output with Mo: L = 45.6 + 4337.9 = 4383.5
DL input+output M: L = 105.4 + 19220.4 = 19325.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,17) and color black and layers
  [0]: a rectangle at (0,0) with size (15,17) and color cyan and mask 111111111111111111111111111111111111111111111111111111111111110000111100000111100001111000001111000011110000011110000111111111111100001111111111111111111111111110000000111111111100000001111111111111111111111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (4,2) with size (2,7) and color blue and mask full
  [011]: a rectangle at (8,4) with size (3,11) and color blue and mask full
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
   (959.4 bits)
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (9,2) with size (5,4) and color blue and mask full
  [01]: a rectangle at (1,8) with size (2,7) and color blue and mask full
diff: 
delta: (1,11)=2  (2,9)=2  (2,13)=2  (9,4)=3  (10,3)=3  (12,3)=3  (13,4)=3 
   (192.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,17) and color black and layers
  [0]: a rectangle at (0,0) with size (15,17) and color cyan and mask 111111111111111111111111111111111111111111111111111111111111110000111100000111100001111000001111000011110000011110000111111111111100001111111111111111111111111110000000111111111100000001111111111111111111111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (8,4) with size (3,11) and color blue and mask full
  [011]: a rectangle at (4,2) with size (2,7) and color blue and mask full
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 61 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,17) and color black and layers
  [0]: a rectangle at (0,0) with size (15,17) and color cyan and mask 111111111111111111111111111111111111111111111111111111111111110000111100000111100001111000001111000011110000011110000111111111111100001111111111111111111111111110000000111111111100000001111111111111111111111111111111111111111111111111111111111111111111111
  [01]: a rectangle at (4,2) with size (2,7) and color blue and mask full
  [011]: a rectangle at (8,4) with size (3,11) and color blue and mask full
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 48 wrong pixels (generated / expected)

TRAIN e6721834.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,20) and color pink and layers
  [0]: a rectangle at (0,10) with size (11,10) and color blue and mask full
  [01]: a rectangle at (8,4) with size (3,4) and color green and mask full
  [011]: a rectangle at (2,2) with size (4,3) and color green and mask full
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
   (287.5 bits)
data: a background with size (11,10) and color blue and layers
  [0]: a rectangle at (0,5) with size (4,3) and color green and mask full
  [01]: a rectangle at (6,1) with size (3,4) and color green and mask full
diff: 
delta: (1,5)=8  (1,7)=8  (6,4)=2  (7,2)=2 
   (132.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color pink and layers
  [0]: a rectangle at (0,10) with size (11,10) and color blue and mask full
  [01]: a rectangle at (8,4) with size (3,4) and color green and mask full
  [011]: a rectangle at (2,2) with size (4,3) and color green and mask full
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 110 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color pink and layers
  [0]: a rectangle at (0,10) with size (11,10) and color blue and mask full
  [01]: a rectangle at (2,2) with size (4,3) and color green and mask full
  [011]: a rectangle at (8,4) with size (3,4) and color green and mask full
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 110 wrong pixels (generated / expected)

TRAIN e6721834.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,16) and color cyan and layers
  [0]: a rectangle at (0,0) with size (10,8) and color yellow and mask full
  [01]: a rectangle at (1,9) with size (4,3) and color blue and mask full
  [011]: a rectangle at (7,10) with size (2,3) and color blue and mask full
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
   (241.4 bits)
data: a background with size (10,8) and color yellow and layers
  [0]: a rectangle at (8,0) with size (2,3) and color blue and mask full
  [01]: a rectangle at (1,4) with size (4,3) and color blue and mask full
diff: 
delta: (2,4)=2  (4,4)=2  (8,2)=6 
   (109.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color cyan and layers
  [0]: a rectangle at (0,0) with size (10,8) and color yellow and mask full
  [01]: a rectangle at (1,9) with size (4,3) and color blue and mask full
  [011]: a rectangle at (7,10) with size (2,3) and color blue and mask full
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color cyan and layers
  [0]: a rectangle at (0,0) with size (10,8) and color yellow and mask full
  [01]: a rectangle at (7,10) with size (2,3) and color blue and mask full
  [011]: a rectangle at (1,9) with size (4,3) and color blue and mask full
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 80 wrong pixels (generated / expected)

TRAIN e6721834.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,12) and color red and layers
  [0]: a rectangle at (0,0) with size (12,12) and color yellow and mask full
  [01]: a rectangle at (15,3) with size (3,5) and color cyan and mask full
  [011]: a rectangle at (20,6) with size (3,5) and color cyan and mask full
diff: 
delta: (3,7)=1  (4,8)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (19,1)=8  (19,2)=8  (20,1)=1  (20,2)=8  (20,8)=1  (21,1)=8  (21,2)=8  (21,6)=1  (22,1)=8  (22,2)=8  (22,8)=1 
! 144 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,12) and color cyan and layers
  [0]: a rectangle at (0,0) with size (12,12) and color yellow and mask full
  [01]: a rectangle at (12,0) with size (12,12) and color red and mask 111111111111100000111001100000111001100000111001111111111001111111111111111100000111111100000111111100000111111111111111111111111111111111111111
  [011]: a rectangle at (20,7) with size (3,1) and color cyan and mask full
diff: 
delta: (3,7)=1  (4,8)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (20,1)=1  (20,8)=1  (21,6)=1  (22,8)=1 
! 144 wrong pixels (generated / expected)

TEST e6721834.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4337.9 bits (4337.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-34] Checking task e73095fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 37898.5 = 37907.4
DL output with Mo: L = 9.0 + 47126.9 = 47135.9
DL input+output M: L = 17.9 + 85025.4 = 85043.3

# learning a model for train pairs
85043.3	
55978.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
27140.0	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19003.6	OUT DEF: layer[0]={layer[0]}
14626.3	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12983.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12333.4	OUT DEF: size={size}
11857.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
11719.1	OUT DEF: layer[01].color=yellow
11581.1	OUT DEF: layer[011].color=yellow
11443.1	IN  DEF: layer[0].color=grey
11372.5	OUT DEF: layer[01].mask=full
11301.8	OUT DEF: layer[011].mask=full
11231.2	OUT DEF: layer[0111].mask=full
11185.6	OUT DEF: color=black
11140.0	IN  DEF: color=black
11105.0	OUT DEF: layer[01].pos=(?,?)
11069.9	OUT DEF: layer[01].size=(?,?)
11034.9	OUT DEF: layer[011].pos=(?,?)
10999.9	OUT DEF: layer[011].size=(?,?)
10837.3	OUT DEF: layer[011].size.i=3
10802.3	OUT DEF: layer[0111].pos=(?,?)
10767.3	OUT DEF: layer[0111].size=(?,?)
10732.3	IN  DEF: size=(?,?)
10697.3	IN  DEF: layer[0].pos=(?,?)
10537.2	IN  DEF: layer[0].pos.j=0
10388.5	IN  DEF: layer[0].pos.i=0
10353.5	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: a rectangle at (?,?) with size (?,?) and color yellow and mask full
  [011]: a rectangle at (?,?) with size (3,?) and color yellow and mask full
  [0111]: a rectangle at (?,?) with size (?,?) and color ? and mask full
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (0,0) with size (?,?) and color grey and mask ?

DL input  with Mi: L = 45.8 + 8199.4 = 8245.2
DL output with Mo: L = 89.6 + 2018.7 = 2108.3
DL input+output M: L = 135.4 + 10218.1 = 10353.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,19) and color black and layers
  [0]: a rectangle at (0,0) with size (12,19) and color grey and mask 1000000100000000000100000010000000000010000001000000000011110000100000011111001001111000000000100100100100000000011110010010000011000100001001000000100010000100100011011111111110011111001000100001111000111100010000000000000
diff: 
delta:
   (270.9 bits)
data: a background with size (12,19) and color black and layers
  [0]: a rectangle at (0,0) with size (12,19) and color grey and mask 1000000100000000000100000010000000000010000001000000000011110000100000011111001001111000000000100100100100000000011110010010000011000100001001000000100010000100100011011111111110011111001000100001111000111100010000000000000
  [01]: a rectangle at (2,6) with size (5,2) and color yellow and mask full
  [011]: a rectangle at (1,18) with size (3,1) and color yellow and mask full
  [0111]: a rectangle at (6,12) with size (2,2) and color yellow and mask full
diff: 
delta: (2,0)=4 
   (79.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color black and layers
  [0]: a rectangle at (0,0) with size (12,19) and color grey and mask 1000000100000000000100000010000000000010000001000000000011110000100000011111001001111000000000100100100100000000011110010010000011000100001001000000100010000100100011011111111110011111001000100001111000111100010000000000000
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN e73095fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (0,0) with size (13,16) and color grey and mask 100000000000000011111100000000001000000000000000100000110000001111100001000000100010000111111110001000010010001000100011001000111110000000100000100000000010000010000000001000001000000000100000100000
diff: 
delta:
   (250.4 bits)
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (0,0) with size (13,16) and color grey and mask 100000000000000011111100000000001000000000000000100000110000001111100001000000100010000111111110001000010010001000100011001000111110000000100000100000000010000010000000001000001000000000100000100000
  [01]: a rectangle at (5,4) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (5,15) with size (3,1) and color yellow and mask full
  [0111]: a rectangle at (0,0) with size (4,5) and color black and mask full
diff: 
delta:
   (62.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (0,0) with size (13,16) and color grey and mask 100000000000000011111100000000001000000000000000100000110000001111100001000000100010000111111110001000010010001000100011001000111110000000100000100000000010000010000000001000001000000000100000100000
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN e73095fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (0,0) with size (15,17) and color grey and mask 10000001000000001111000010000000010010000100000000100111111111110001111000010000000001000000100000000010000011110000000100000100100000001000001001000011111000010011110100010000111100011000100000100000010001111111111110111110000010000000000000000100000
diff: 
delta:
   (298.6 bits)
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (0,0) with size (15,17) and color grey and mask 10000001000000001111000010000000010010000100000000100111111111110001111000010000000001000000100000000010000011110000000100000100100000001000001001000011111000010011110100010000111100011000100000100000010001111111111110111110000010000000000000000100000
  [01]: a rectangle at (2,12) with size (3,3) and color yellow and mask full
  [011]: a rectangle at (5,4) with size (3,2) and color yellow and mask full
  [0111]: a rectangle at (11,11) with size (2,2) and color yellow and mask full
diff: 
delta:
   (60.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (0,0) with size (15,17) and color grey and mask 10000001000000001111000010000000010010000100000000100111111111110001111000010000000001000000100000000010000011110000000100000100100000001000001001000011111000010011110100010000111100011000100000100000010001111111111110111110000010000000000000000100000
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN e73095fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (0,0) with size (16,18) and color grey and mask 10000111000000000010000101000000000010000111000000000010000010011110001111100010010010001000100010110011111000111111010010001111100000011110000010000000000100000010000000000100000010000000000100000010000111111111111111111100000000000010000111000000000010000000000000000010000000
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST e73095fd.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2018.7 bits (2018.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-33] Checking task e76a88a6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11687.1 = 11696.0
DL output with Mo: L = 9.0 + 11687.1 = 11696.0
DL input+output M: L = 17.9 + 23374.2 = 23392.1

# learning a model for train pairs
23392.1	
18834.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17196.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15824.6	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14480.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13133.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11861.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10936.1	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
10149.3	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
9559.8	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 76.0 + 3126.9 = 3202.9
DL output with Mo: L = 92.2 + 6264.7 = 6356.9
DL input+output M: L = 168.2 + 9391.6 = 9559.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,6) with size (3,3) and color grey and mask full
  [01]: a rectangle at (7,2) with size (3,3) and color grey and mask full
  [011]: a rectangle at (2,1) with size (2,3) and color yellow and mask 111110
  [0111]: a rectangle at (1,1) with size (2,3) and color red and mask full
diff: 
delta:
   (143.9 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (2,3) and color yellow and mask 111110
  [01]: a rectangle at (5,6) with size (2,3) and color yellow and mask 111110
  [011]: a rectangle at (8,2) with size (2,3) and color yellow and mask full
  [0111]: a rectangle at (1,1) with size (2,3) and color red and mask full
  [01111]: a rectangle at (4,6) with size (2,3) and color red and mask full
diff: 
delta: (7,2)=2  (7,3)=2  (7,4)=2  (8,2)=2 
   (251.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,6) with size (3,3) and color grey and mask full
  [01]: a rectangle at (7,2) with size (3,3) and color grey and mask full
  [011]: a rectangle at (2,1) with size (2,3) and color yellow and mask 111110
  [0111]: a rectangle at (1,1) with size (2,3) and color red and mask full
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN e76a88a6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,6) with size (3,4) and color grey and mask full
  [01]: a rectangle at (5,4) with size (3,4) and color grey and mask full
  [011]: a rectangle at (2,1) with size (2,4) and color cyan and mask 11101011
  [0111]: a rectangle at (1,1) with size (2,4) and color pink and mask full
diff: 
delta: (3,1)=6 
   (168.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (1,9) and color cyan and mask full
  [01]: a rectangle at (6,4) with size (2,4) and color cyan and mask 11101011
  [011]: a rectangle at (0,6) with size (2,4) and color pink and mask full
  [0111]: a rectangle at (5,4) with size (2,4) and color pink and mask full
  [01111]: a rectangle at (1,1) with size (1,4) and color pink and mask full
diff: 
delta: (1,6)=8  (1,7)=8  (1,9)=8  (2,3)=6  (2,5)=0  (2,6)=6  (3,1)=6  (3,2)=8  (3,3)=8  (3,4)=8  (7,4)=6 
   (375.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,6) with size (3,4) and color grey and mask full
  [01]: a rectangle at (5,4) with size (3,4) and color grey and mask full
  [011]: a rectangle at (2,1) with size (2,4) and color cyan and mask 11101011
  [0111]: a rectangle at (1,1) with size (2,4) and color pink and mask full
diff: 
delta: (3,1)=6 
! 39 wrong pixels (generated / expected)

TRAIN e76a88a6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,6) with size (4,3) and color grey and mask full
  [01]: a rectangle at (5,2) with size (4,3) and color grey and mask full
  [011]: a rectangle at (6,7) with size (4,3) and color grey and mask full
  [0111]: a rectangle at (0,1) with size (3,3) and color yellow and mask full
diff: 
delta: (1,1)=1  (2,1)=1  (2,3)=1  (3,1)=1  (3,2)=1  (3,3)=1 
! 50 wrong pixels (generated / expected)

TEST e76a88a6.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6264.7 bits (6264.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-32] Checking task e8593010.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14810.7 = 14819.6
DL output with Mo: L = 9.0 + 14810.7 = 14819.6
DL input+output M: L = 17.9 + 29621.3 = 29639.3

# learning a model for train pairs
29639.3	
19572.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17671.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13553.2	OUT DEF: layer[0]={layer[0]}
12293.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11520.6	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
10942.3	OUT DEF: size={size}
10414.9	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
10236.9	OUT DEF: layer[0111].color=blue
10002.6	OUT DEF: color=red
9864.6	OUT DEF: layer[01].color=blue
9719.3	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
9581.3	IN  DEF: layer[0].color=grey
9497.5	OUT DEF: color=red
9359.5	OUT DEF: layer[011].color=green
9221.5	OUT DEF: layer[01111].color=green
9150.8	OUT DEF: layer[01].mask=full
9080.2	OUT DEF: layer[011].mask=full
9009.5	OUT DEF: layer[0111].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color red and layers
  [0]: {layer[0]}
  [01]: a rectangle at ? with size ? and color blue and mask full
  [011]: a rectangle at ? with size ? and color green and mask full
  [0111]: a rectangle at ? with size ? and color blue and mask full
  [01111]: a rectangle at ? with size ? and color green and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color grey and mask ?

DL input  with Mi: L = 27.9 + 4586.9 = 4614.8
DL output with Mo: L = 84.9 + 4309.9 = 4394.7
DL input+output M: L = 112.8 + 8896.8 = 9009.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101111110011111111111111111110111001110010111101011110011110101111011010011111011111111001011101111
diff: 
delta:
   (152.9 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101111110011111111111111111110111001110010111101011110011110101111011010011111011111111001011101111
  [01]: a rectangle at (1,0) with size (2,2) and color blue and mask full
  [011]: a rectangle at (0,4) with size (1,5) and color green and mask full
  [0111]: a rectangle at (2,6) with size (2,2) and color blue and mask full
  [01111]: a rectangle at (3,2) with size (3,1) and color green and mask full
diff: 
delta: (5,7)=3  (9,0)=3  (9,7)=3 
   (141.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 101111110011111111111111111110111001110010111101011110011110101111011010011111011111111001011101111
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN e8593010.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1011111100011011111011011111110100101100111110111110111111111111011101100101111101111101001110011111
diff: 
delta:
   (152.9 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1011111100011011111011011111110100101100111110111110111111111111011101100101111101111101001110011111
  [01]: a rectangle at (6,6) with size (2,2) and color blue and mask full
  [011]: a rectangle at (1,9) with size (8,1) and color green and mask full
  [0111]: a rectangle at (8,0) with size (2,2) and color blue and mask full
  [01111]: a rectangle at (4,8) with size (6,1) and color green and mask full
diff: 
delta: (1,3)=3  (3,1)=3  (8,6)=3 
   (144.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1011111100011011111011011111110100101100111110111110111111111111011101100101111101111101001110011111
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN e8593010.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111111011110101110111111101111111011011010111101101011001111111101101101101010110111100111011101100
diff: 
delta:
   (152.9 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111111011110101110111111101111111011011010111101101011001111111101101101101010110111100111011101100
  [01]: a rectangle at (1,2) with size (4,3) and color blue and mask full
  [011]: a rectangle at (2,5) with size (7,1) and color green and mask full
  [0111]: a rectangle at (0,8) with size (3,1) and color blue and mask full
  [01111]: a rectangle at (8,1) with size (2,2) and color green and mask full
diff: 
delta: (0,4)=3  (7,3)=3  (8,7)=3 
   (145.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 1111111011110101110111111101111111011011010111101101011001111111101101101101010110111100111011101100
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN e8593010.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color grey and mask 100101111111011110001111110111011111011001011011011101111101111111001101111101110101101111100111110
diff: 
delta:
! 18 wrong pixels (generated / expected)

TEST e8593010.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4309.9 bits (4309.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-31] Checking task e8dc4411.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6423.9 = 6432.9
DL output with Mo: L = 9.0 + 13888.3 = 13897.2
DL input+output M: L = 17.9 + 20312.2 = 20330.1

# learning a model for train pairs
20330.1	
17212.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14206.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10878.7	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10247.3	OUT DEF: size={size}
9705.3	IN  SHAPE at layer[00]: a point at ? with color ?
9566.2	OUT DEF: layer[01].color={layer[00].color}
9427.4	OUT DEF: layer[0].color={color}
9289.4	IN  DEF: layer[0].color=black
9254.4	OUT DEF: layer[0].pos=(?,?)
9103.9	OUT DEF: layer[0].pos.j=0
9068.9	OUT DEF: layer[0].size=(?,?)
9033.9	OUT DEF: layer[01].pos=(?,?)
8998.9	OUT DEF: layer[01].size=(?,?)
8963.9	IN  DEF: size=(?,?)
8928.9	IN  DEF: layer[00].pos=(?,?)
8893.8	IN  DEF: layer[0].pos=(?,?)
8858.8	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at (?,0) with size (?,?) and color {color} and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color {layer[00].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [00]: a point at (?,?) with color ?
  [0]: a rectangle at (?,?) with size (?,?) and color black and mask ?

DL input  with Mi: L = 56.6 + 2438.3 = 2494.9
DL output with Mo: L = 65.2 + 6298.8 = 6363.9
DL input+output M: L = 121.8 + 8737.0 = 8858.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,14) and color cyan and layers
  [00]: a point at (5,6) with color red
  [0]: a rectangle at (3,3) with size (3,3) and color black and mask 10101010
diff: 
delta:
   (74.4 bits)
data: a background with size (12,14) and color cyan and layers
  [0]: a rectangle at (8,0) with size (4,7) and color cyan and mask full
  [01]: a rectangle at (5,5) with size (7,8) and color red and mask 10100011010100110010101100010111000010100000010100000010
diff: 
delta: (3,4)=0  (4,3)=0  (4,5)=0  (5,4)=0 
   (192.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color cyan and layers
  [00]: a point at (5,6) with color red
  [0]: a rectangle at (3,3) with size (3,3) and color black and mask 10101010
diff: 
delta:
! 160 wrong pixels (generated / expected)

TRAIN e8dc4411.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,15) and color blue and layers
  [00]: a point at (7,4) with color green
  [0]: a rectangle at (5,5) with size (3,3) and color black and mask 10111010
diff: 
delta:
   (75.3 bits)
data: a background with size (13,15) and color blue and layers
  [0]: a rectangle at (0,0) with size (9,3) and color blue and mask full
  [01]: a rectangle at (7,0) with size (6,6) and color green and mask 11000101001110010100111111010111
diff: 
delta: (5,6)=0  (6,5)=0  (6,6)=0  (6,7)=0  (7,6)=0 
   (190.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color blue and layers
  [00]: a point at (7,4) with color green
  [0]: a rectangle at (5,5) with size (3,3) and color black and mask 10111010
diff: 
delta:
! 186 wrong pixels (generated / expected)

TRAIN e8dc4411.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,16) and color yellow and layers
  [00]: a point at (4,11) with color cyan
  [0]: a rectangle at (5,6) with size (5,5) and color black and mask 1101111011001001101111011
diff: 
delta:
   (94.1 bits)
data: a background with size (12,16) and color black and layers
  [0]: a rectangle at (0,0) with size (12,16) and color yellow and mask 111111111111111111111111111111111111100100111111111110010011111111111110111111111111100100111111111110010011111100100111111111110010011111111111110111111111111100100111111111110010011111111111
  [01]: a rectangle at (0,11) with size (5,5) and color cyan and mask full
diff: 
delta:
   (247.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color yellow and layers
  [00]: a point at (4,11) with color cyan
  [0]: a rectangle at (5,6) with size (5,5) and color black and mask 1101111011001001101111011
diff: 
delta:
! 171 wrong pixels (generated / expected)

TRAIN e8dc4411.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color green and layers
  [00]: a point at (5,3) with color pink
  [0]: a rectangle at (6,4) with size (3,3) and color black and mask 101010101
diff: 
delta:
! 280 wrong pixels (generated / expected)

TEST e8dc4411.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6298.8 bits (6298.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-30] Checking task e9614598.json: 2 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1180.6 = 1189.6
DL output with Mo: L = 9.0 + 2994.8 = 3003.8
DL input+output M: L = 17.9 + 4175.4 = 4193.4

# learning a model for train pairs
4193.4	
3174.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2788.1	OUT DEF: size={size}
2569.6	OUT DEF: layer[0].mask=10111010
2478.1	OUT DEF: layer[0].color=green
2418.4	OUT SHAPE at layer[01]: a point at ? with color ?
2326.8	OUT DEF: layer[01].color=blue
2250.2	OUT SHAPE at layer[011]: a point at ? with color ?
2158.6	OUT DEF: layer[011].color=blue
2100.0	IN  SHAPE at layer[0]: a point at ? with color ?
1879.6	OUT DEF: layer[01]={layer[0]}
1788.0	IN  DEF: layer[0].color=blue
1712.9	IN  SHAPE at layer[00]: a point at ? with color ?
1493.5	OUT DEF: layer[011]={layer[00]}
1401.9	IN  DEF: layer[00].color=blue
1370.9	OUT DEF: color=black
1339.9	IN  DEF: color=black
1318.1	OUT DEF: layer[0].pos=(?,?)
1228.1	OUT DEF: layer[0].pos.i=3
1206.3	OUT DEF: layer[0].size=(?,?)
1098.6	OUT DEF: layer[0].size.i=3
991.0	OUT DEF: layer[0].size.j=3
969.2	IN  DEF: size=(?,?)
795.5	IN  DEF: size.i=10
621.8	IN  DEF: size.j=10
600.0	IN  DEF: layer[00].pos=(?,?)
578.2	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (3,?) with size (3,3) and color green and mask 10111010
  [01]: {layer[0]}
  [011]: {layer[00]}
WHERE (Mi)
a background with size (10,10) and color black and layers
  [00]: a point at (?,?) with color blue
  [0]: a point at (?,?) with color blue

DL input  with Mi: L = 56.1 + 371.5 = 427.6
DL output with Mo: L = 57.8 + 92.9 = 150.7
DL input+output M: L = 113.8 + 464.4 = 578.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (4,1) with color blue
  [0]: a point at (4,7) with color blue
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,3) with size (3,3) and color green and mask 10111010
  [01]: a point at (4,7) with color blue
  [011]: a point at (4,1) with color blue
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (4,1) with color blue
  [0]: a point at (4,7) with color blue
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e9614598.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color blue
  [0]: a point at (8,3) with color blue
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (3,3) and color green and mask 10111010
  [01]: a point at (8,3) with color blue
  [011]: a point at (0,3) with color blue
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [00]: a point at (0,3) with color blue
  [0]: a point at (8,3) with color blue
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN e9614598.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [00]: a point at (3,1) with color blue
  [0]: a point at (3,11) with color blue
diff:   size.j  size.i
delta:
! 10 wrong pixels (generated / expected)

TEST e9614598.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  [00]: a point at (0,3) with color blue
  [0]: a point at (6,3) with color blue
diff:   size.j
delta:
! 10 wrong pixels (generated / expected)

TEST e9614598.json/2: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 92.9 bits (92.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-29] Checking task e98196ab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14127.8 = 14136.8
DL output with Mo: L = 9.0 + 7653.5 = 7662.4
DL input+output M: L = 17.9 + 21781.3 = 21799.2

# learning a model for train pairs
21799.2	
16799.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16181.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15382.5	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15173.6	OUT SHAPE at layer[00]: a point at ? with color ?
14875.9	OUT DEF: layer[0].color={color}
14737.9	IN  DEF: layer[0].color=grey
14667.0	OUT DEF: layer[01].mask={layer[0].mask}
14596.3	IN  DEF: layer[0].mask=full
14531.0	IN  SHAPE at layer[01]: a point at ? with color ?
14464.8	IN  SHAPE at layer[011]: a point at ? with color ?
14397.7	IN  SHAPE at layer[0111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color {color} and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask {layer[0].mask}
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color grey and mask full
  [01]: a point at ? with color ?
  [011]: a point at ? with color ?
  [0111]: a point at ? with color ?

DL input  with Mi: L = 56.4 + 8671.9 = 8728.3
DL output with Mo: L = 53.1 + 5616.3 = 5669.4
DL input+output M: L = 109.5 + 14288.2 = 14397.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (0,5) with color cyan
  [011]: a point at (2,3) with color cyan
  [0111]: a point at (2,7) with color cyan
diff: 
delta: (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
   (240.8 bits)
data: a background with size (5,11) and color blue and layers
  [00]: a point at (0,5) with color cyan
  [0]: a rectangle at (0,0) with size (5,11) and color black and mask 11111110011011111011111011101111111010111111111111111
  [01]: a rectangle at (2,3) with size (1,5) and color cyan and mask full
diff: 
delta: (4,1)=8  (4,9)=8 
   (186.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (0,5) with color cyan
  [011]: a point at (2,3) with color cyan
  [0111]: a point at (2,7) with color cyan
diff: 
delta: (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (0,1) with color green
  [011]: a point at (0,5) with color green
  [0111]: a point at (0,9) with color green
diff: 
delta: (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
   (295.1 bits)
data: a background with size (5,11) and color orange and layers
  [00]: a point at (2,3) with color green
  [0]: a rectangle at (0,0) with size (5,11) and color black and mask 111011110011111111111110111010111101111111000111011101
  [01]: a rectangle at (0,1) with size (1,9) and color green and mask full
diff: 
delta: (2,8)=3  (4,1)=3 
   (187.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (0,1) with color green
  [011]: a point at (0,5) with color green
  [0111]: a point at (0,9) with color green
diff: 
delta: (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (1,1) with color blue
  [011]: a point at (1,9) with color blue
  [0111]: a point at (3,2) with color blue
diff: 
delta: (1,3)=1  (1,4)=1  (1,6)=1  (2,6)=1  (3,4)=1  (3,7)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
   (331.3 bits)
data: a background with size (5,11) and color blue and layers
  [00]: a point at (0,0) with color red
  [0]: a rectangle at (0,0) with size (5,11) and color black and mask 101110111011101101011111101111111011010010101111011111
  [01]: a rectangle at (4,0) with size (1,9) and color red and mask full
diff: 
delta: (0,5)=2  (0,10)=2 
   (187.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (1,1) with color blue
  [011]: a point at (1,9) with color blue
  [0111]: a point at (3,2) with color blue
diff: 
delta: (1,3)=1  (1,4)=1  (1,6)=1  (2,6)=1  (3,4)=1  (3,7)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  [0]: a rectangle at (5,0) with size (1,11) and color grey and mask full
  [01]: a point at (0,10) with color orange
  [011]: a point at (1,8) with color orange
  [0111]: a point at (2,6) with color orange
diff: 
delta: (1,2)=7# (1,3)=7# (3,1)=7# (3,3)=7# (3,10)=7# (4,6)=7# (6,0)=6  (6,4)=6  (6,6)=6  (7,10)=6  (8,0)=6  (8,4)=6  (8,10)=6  (9,9)=6  (10,0)=6  (10,3)=6 
! size mismatch, 10x10 instead of 5x11

TEST e98196ab.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5616.3 bits (5616.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-28] Checking task e9afcf9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2276.3 = 2285.3
DL output with Mo: L = 9.0 + 2276.3 = 2285.3
DL input+output M: L = 17.9 + 4552.6 = 4570.5

# learning a model for train pairs
4570.5	
3246.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
2203.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
1927.9	OUT DEF: layer[0].mask=101010010101
1664.5	OUT DEF: size={size}
1402.2	OUT DEF: layer[0].size={size}
1242.0	OUT DEF: color={color}
1090.4	OUT DEF: layer[0].pos={layer[0].pos}
996.9	OUT DEF: layer[0].color={layer[0].color}
949.4	IN  DEF: layer[0].mask=full
927.6	IN  DEF: size=(?,?)
782.0	IN  DEF: size.j=6
696.5	IN  DEF: size.i=2
674.7	IN  DEF: layer[0].pos=(?,?)
597.2	IN  DEF: layer[0].pos.j=0
549.7	IN  DEF: layer[0].pos.i=0
527.9	IN  DEF: layer[0].size=(?,?)
382.3	IN  DEF: layer[0].size.j=6
334.8	IN  DEF: layer[0].size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at {layer[0].pos} with size {size} and color {layer[0].color} and mask 101010010101
WHERE (Mi)
a background with size (2,6) and color ? and layers
  [0]: a rectangle at (0,0) with size (1,6) and color ? and mask full

DL input  with Mi: L = 47.4 + 252.2 = 299.6
DL output with Mo: L = 35.2 + 0.0 = 35.2
DL input+output M: L = 82.6 + 252.2 = 334.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,6) and color brown and layers
  [0]: a rectangle at (0,0) with size (1,6) and color green and mask full
diff: 
delta:
   (12.6 bits)
data: a background with size (2,6) and color brown and layers
  [0]: a rectangle at (0,0) with size (2,6) and color green and mask 101010010101
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color brown and layers
  [0]: a rectangle at (0,0) with size (1,6) and color green and mask full
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (2,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,6) and color yellow and mask full
diff: 
delta:
   (12.6 bits)
data: a background with size (2,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (2,6) and color yellow and mask 101010010101
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color cyan and layers
  [0]: a rectangle at (0,0) with size (1,6) and color yellow and mask full
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  [0]: a rectangle at (0,0) with size (1,6) and color pink and mask full
diff: 
delta:
correct output grid

TEST e9afcf9a.json/1: 1 1st (SUCCESS)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-27] Checking task ea32f347.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10982.7 = 10991.7
DL output with Mo: L = 9.0 + 10982.7 = 10991.7
DL input+output M: L = 17.9 + 21965.5 = 21983.4

# learning a model for train pairs
21983.4	
17544.6	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
14258.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11965.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10780.1	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9640.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8454.3	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
7684.3	OUT DEF: size={size}
7235.1	OUT DEF: layer[0].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 4167.4 = 4227.2
DL output with Mo: L = 60.6 + 2947.3 = 3007.9
DL input+output M: L = 120.4 + 7114.7 = 7235.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (6,1) and color grey and mask full
  [01]: a rectangle at (2,4) with size (5,1) and color grey and mask full
  [011]: a rectangle at (4,7) with size (3,1) and color grey and mask full
diff: 
delta:
   (104.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (6,1) and color blue and mask full
  [01]: a rectangle at (2,4) with size (5,1) and color yellow and mask full
  [011]: a rectangle at (4,7) with size (3,1) and color red and mask full
diff: 
delta:
   (73.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,1) with size (6,1) and color grey and mask full
  [01]: a rectangle at (2,4) with size (5,1) and color grey and mask full
  [011]: a rectangle at (4,7) with size (3,1) and color grey and mask full
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,4) with size (5,1) and color grey and mask full
  [01]: a rectangle at (1,1) with size (6,1) and color grey and mask full
  [011]: a rectangle at (4,7) with size (3,1) and color grey and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN ea32f347.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (6,1) and color grey and mask full
  [01]: a rectangle at (3,1) with size (4,1) and color grey and mask full
  [011]: a rectangle at (5,7) with size (2,1) and color grey and mask full
diff: 
delta:
   (102.5 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (6,1) and color blue and mask full
  [01]: a rectangle at (3,1) with size (4,1) and color yellow and mask full
  [011]: a rectangle at (5,7) with size (2,1) and color red and mask full
diff: 
delta:
   (72.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,4) with size (6,1) and color grey and mask full
  [01]: a rectangle at (3,1) with size (4,1) and color grey and mask full
  [011]: a rectangle at (5,7) with size (2,1) and color grey and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (4,1) and color grey and mask full
  [01]: a rectangle at (1,4) with size (6,1) and color grey and mask full
  [011]: a rectangle at (5,7) with size (2,1) and color grey and mask full
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN ea32f347.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,6) and color grey and mask full
  [01]: a rectangle at (3,7) with size (5,1) and color grey and mask full
  [011]: a rectangle at (7,2) with size (1,3) and color grey and mask full
diff: 
delta:
   (104.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,6) and color blue and mask full
  [01]: a rectangle at (3,7) with size (5,1) and color yellow and mask full
  [011]: a rectangle at (7,2) with size (1,3) and color red and mask full
diff: 
delta:
   (73.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,0) with size (1,6) and color grey and mask full
  [01]: a rectangle at (3,7) with size (5,1) and color grey and mask full
  [011]: a rectangle at (7,2) with size (1,3) and color grey and mask full
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,7) with size (5,1) and color grey and mask full
  [01]: a rectangle at (2,0) with size (1,6) and color grey and mask full
  [011]: a rectangle at (7,2) with size (1,3) and color grey and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN ea32f347.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,7) with size (7,1) and color grey and mask full
  [01]: a rectangle at (5,1) with size (1,5) and color grey and mask full
  [011]: a rectangle at (2,1) with size (1,4) and color grey and mask full
diff: 
delta:
   (105.6 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,7) with size (7,1) and color blue and mask full
  [01]: a rectangle at (5,1) with size (1,5) and color yellow and mask full
  [011]: a rectangle at (2,1) with size (1,4) and color red and mask full
diff: 
delta:
   (74.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,7) with size (7,1) and color grey and mask full
  [01]: a rectangle at (5,1) with size (1,5) and color grey and mask full
  [011]: a rectangle at (2,1) with size (1,4) and color grey and mask full
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,1) with size (1,5) and color grey and mask full
  [01]: a rectangle at (1,7) with size (7,1) and color grey and mask full
  [011]: a rectangle at (2,1) with size (1,4) and color grey and mask full
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN ea32f347.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,4) with size (1,6) and color grey and mask full
  [01]: a rectangle at (8,0) with size (1,5) and color grey and mask full
  [011]: a rectangle at (1,3) with size (3,1) and color grey and mask full
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (8,0) with size (1,5) and color grey and mask full
  [01]: a rectangle at (5,4) with size (1,6) and color grey and mask full
  [011]: a rectangle at (1,3) with size (3,1) and color grey and mask full
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST ea32f347.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2947.3 bits (2947.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-26] Checking task ea786f4a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1208.7 = 1217.7
DL output with Mo: L = 9.0 + 4927.3 = 4936.3
DL input+output M: L = 17.9 + 6136.1 = 6154.0

# learning a model for train pairs
6154.0	
3475.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3026.5	OUT DEF: size={size}
2577.6	OUT DEF: layer[0].size={size}
2437.0	OUT DEF: layer[0].color={color}
2320.7	IN  SHAPE at layer[0]: a point at ? with color ?
2182.7	IN  DEF: layer[0].color=black
2137.1	OUT DEF: color=black
2102.1	OUT DEF: layer[0].pos=(?,?)
1998.2	OUT DEF: layer[0].pos.i=0
1894.3	OUT DEF: layer[0].pos.j=0
1859.3	IN  DEF: size=(?,?)
1824.2	IN  DEF: layer[0].pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at (0,0) with size {size} and color {color} and mask ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a point at (?,?) with color black

DL input  with Mi: L = 30.5 + 860.5 = 891.0
DL output with Mo: L = 33.6 + 899.7 = 933.2
DL input+output M: L = 64.1 + 1760.1 = 1824.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  [0]: a point at (1,1) with color black
diff: 
delta:
   (24.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color blue and mask 10101010
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  [0]: a point at (1,1) with color black
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN ea786f4a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  [0]: a point at (2,2) with color black
diff: 
delta:
   (29.2 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color red and mask 111010101110111010101110
diff: 
delta:
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  [0]: a point at (2,2) with color black
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN ea786f4a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color green and layers
  [0]: a point at (3,3) with color black
diff: 
delta:
   (32.1 bits)
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color green and mask 111110101110111010111110111110101110111010111110
diff: 
delta:
   (51.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color green and layers
  [0]: a point at (3,3) with color black
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN ea786f4a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color pink and layers
  [0]: a point at (5,5) with color black
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST ea786f4a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 899.7 bits (899.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-25] Checking task eb281b96.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7638.5 = 7647.5
DL output with Mo: L = 9.0 + 26614.6 = 26623.6
DL input+output M: L = 17.9 + 34253.2 = 34271.1

# learning a model for train pairs
34271.1	
12652.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7296.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7065.9	OUT DEF: layer[0].pos={layer[0].pos}
6972.4	OUT DEF: layer[0].color={layer[0].color}
6941.4	OUT DEF: color=black
6910.3	IN  DEF: color=black
6888.5	OUT DEF: size=(?,?)
6678.5	OUT DEF: size.j={size.j}
6656.7	OUT DEF: layer[0].size=(?,?)
6447.0	OUT DEF: layer[0].size.j={layer[0].size.j}
6425.2	IN  DEF: size=(?,?)
6222.4	IN  DEF: size.j=17
6200.6	IN  DEF: layer[0].pos=(?,?)
6094.5	IN  DEF: layer[0].pos.j=0
6035.1	IN  DEF: layer[0].pos.i=0
6013.3	IN  DEF: layer[0].size=(?,?)
5810.6	IN  DEF: layer[0].size.j=17

# Learned model:
CONSTRUCT (Mo)
a background with size (?,{size.j}) and color black and layers
  [0]: a rectangle at {layer[0].pos} with size (?,{layer[0].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (?,17) and color black and layers
  [0]: a rectangle at (0,0) with size (?,17) and color ? and mask ?

DL input  with Mi: L = 58.0 + 1565.6 = 1623.6
DL output with Mo: L = 32.9 + 4154.1 = 4187.0
DL input+output M: L = 90.9 + 5719.7 = 5810.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,17) and color black and layers
  [0]: a rectangle at (0,0) with size (3,17) and color cyan and mask 100010001000100010101010101010101000100010001000100
diff: 
delta:
   (68.9 bits)
data: a background with size (9,17) and color black and layers
  [0]: a rectangle at (0,0) with size (9,17) and color cyan and mask 1000100010001000101010101010101010001000100010001010101010101010100010001000100010001010101010101010100010001000100010101010101010101000100010001000100
diff: 
delta:
   (172.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  [0]: a rectangle at (0,0) with size (3,17) and color cyan and mask 100010001000100010101010101010101000100010001000100
diff: 
delta:
! size mismatch, 10x17 instead of 9x17

TRAIN eb281b96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,17) and color black and layers
  [0]: a rectangle at (0,0) with size (4,17) and color red and mask 10001000100010001010101010101010100101010101010101000100010001000100
diff: 
delta:
   (87.6 bits)
data: a background with size (13,17) and color black and layers
  [0]: a rectangle at (0,0) with size (13,17) and color red and mask 100010001000100010101010101010100101010101010101010001000100010001010101010101010100101010101010101000100010001000100010101010101010100101010101010101010001000100010001010101010101010100101010101010101000100010001000100
diff: 
delta:
   (242.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,17) and color black and layers
  [0]: a rectangle at (0,0) with size (4,17) and color red and mask 10001000100010001010101010101010100101010101010101000100010001000100
diff: 
delta:
! size mismatch, 10x17 instead of 13x17

TRAIN eb281b96.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,17) and color black and layers
  [0]: a rectangle at (0,0) with size (5,17) and color green and mask 1000100010001000101010101010101010010101010101010100101010101010101000100010001000100
diff: 
delta:
! size mismatch, 10x17 instead of 17x17

TEST eb281b96.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 4154.1 bits (4154.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-24] Checking task eb5a1d5d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 137479.0 = 137487.9
DL output with Mo: L = 9.0 + 6546.3 = 6555.3
DL input+output M: L = 17.9 + 144025.3 = 144043.2

# learning a model for train pairs
144043.2	
32323.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
29009.7	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
28216.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27977.0	OUT DEF: color={color}
27837.3	OUT DEF: layer[01].color={layer[0].color}
27766.3	OUT DEF: layer[0].mask={layer[0].mask}
27695.3	OUT DEF: layer[01].mask={layer[0].mask}
27624.7	IN  DEF: layer[0].mask=full
27589.7	OUT DEF: size=(?,?)
27554.6	OUT DEF: layer[0].pos=(?,?)
27450.7	OUT DEF: layer[0].pos.i=2
27415.7	OUT DEF: layer[0].size=(?,?)
27380.7	OUT DEF: layer[01].pos=(?,?)
27276.8	OUT DEF: layer[01].pos.i=1
27172.9	OUT DEF: layer[01].pos.j=1
27137.9	OUT DEF: layer[01].size=(?,?)
27102.9	IN  DEF: size=(?,?)
27067.9	IN  DEF: layer[0].pos=(?,?)
27032.9	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color {color} and layers
  [0]: a rectangle at (2,?) with size (?,?) and color ? and mask {layer[0].mask}
  [01]: a rectangle at (1,1) with size (?,?) and color {layer[0].color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 39.5 + 25552.5 = 25592.0
DL output with Mo: L = 71.4 + 1369.5 = 1440.9
DL input+output M: L = 110.9 + 26922.0 = 27032.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,27) and color cyan and layers
  [0]: a rectangle at (2,3) with size (16,18) and color green and mask full
diff: 
delta: (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2  (10,11)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,10)=2  (11,11)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,10)=2  (13,11)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,11)=2 
   (806.7 bits)
data: a background with size (5,5) and color cyan and layers
  [0]: a rectangle at (2,2) with size (1,1) and color red and mask full
  [01]: a rectangle at (1,1) with size (3,3) and color green and mask full
diff: 
delta:
   (37.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,27) and color cyan and layers
  [0]: a rectangle at (2,3) with size (16,18) and color green and mask full
diff: 
delta: (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2  (10,11)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,10)=2  (11,11)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,10)=2  (13,11)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,11)=2 
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (23,27) and color green and layers
  [0]: a rectangle at (0,0) with size (23,27) and color cyan and mask
diff:   layer[0].mask
delta: (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2  (10,11)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,10)=2  (11,11)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,10)=2  (13,11)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,11)=2 
! size mismatch, 10x10 instead of 5x5

TRAIN eb5a1d5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,25) and color grey and layers
  [0]: a rectangle at (3,4) with size (13,15) and color pink and mask full
diff: 
delta:
   (67.1 bits)
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (2,0) with size (1,3) and color grey and mask full
  [01]: a rectangle at (1,1) with size (1,1) and color pink and mask full
diff: 
delta:
   (31.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color grey and layers
  [0]: a rectangle at (3,4) with size (13,15) and color pink and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN eb5a1d5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,22) and color green and layers
  [0]: a rectangle at (3,3) with size (14,14) and color cyan and mask full
diff: 
delta: (5,5)=2  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=2  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=2  (9,5)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (9,12)=2  (9,13)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2  (10,11)=2  (10,12)=2  (10,13)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,10)=2  (11,11)=2  (11,12)=2  (11,13)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (12,12)=2  (12,13)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=2 
   (1681.5 bits)
data: a background with size (7,7) and color green and layers
  [0]: a rectangle at (2,2) with size (3,3) and color red and mask full
  [01]: a rectangle at (1,1) with size (5,5) and color cyan and mask full
diff: 
delta: (3,3)=1 
   (68.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color green and layers
  [0]: a rectangle at (3,3) with size (14,14) and color cyan and mask full
diff: 
delta: (5,5)=2  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=2  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=2  (9,5)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (9,12)=2  (9,13)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2  (10,11)=2  (10,12)=2  (10,13)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,10)=2  (11,11)=2  (11,12)=2  (11,13)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (12,12)=2  (12,13)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=2 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (21,22) and color cyan and layers
  [0]: a rectangle at (0,0) with size (21,22) and color green and mask 111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000001111111100000000000000111111110000000000000011111111000000000000001111111100000000000000111111110000000000000011111111000000000000001111111100000000000000111111110000000000000011111111000000000000001111111100000000000000111111110000000000000011111111000000000000001111111100000000000000111111111111111111111111111111111111111111111111111111111111111111111
diff:   layer[0].mask
delta: (5,5)=2  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,5)=2  (6,6)=2  (6,7)=2  (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=2  (7,5)=2  (7,6)=2  (7,7)=2  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=2  (9,5)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (9,12)=2  (9,13)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (10,10)=2  (10,11)=2  (10,12)=2  (10,13)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (11,10)=2  (11,11)=2  (11,12)=2  (11,13)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=2  (12,12)=2  (12,13)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=2 
! size mismatch, 10x10 instead of 7x7

TRAIN eb5a1d5d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,27) and color red and layers
  [0]: a rectangle at (5,3) with size (19,20) and color blue and mask 11111111111111111111111111111111111111111111111111111111111111100000000000000111111000000000000001111110000000000000011111100000000000000111111000000000000001111110000000000000011111100000000000000111111000000000000001111110000000000000011111100000000000000111111000000000000001111110000000000000011111100000000000000111111000000000000001111111111111111111111111111111111111111111
diff:   layer[0].mask
delta: (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=3  (7,15)=3  (7,16)=3  (7,17)=3  (7,18)=3  (7,19)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (8,14)=3  (8,15)=3  (8,16)=3  (8,17)=3  (8,18)=3  (8,19)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,17)=3  (9,18)=3  (9,19)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,18)=3  (10,19)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=8  (11,10)=8  (11,11)=8  (11,16)=8  (11,17)=8  (11,18)=3  (11,19)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=8  (12,10)=8  (12,11)=8  (12,16)=8  (12,17)=8  (12,18)=3  (12,19)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=8  (13,10)=8  (13,11)=8  (13,16)=8  (13,17)=8  (13,18)=3  (13,19)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=8  (14,10)=8  (14,11)=8  (14,16)=8  (14,17)=8  (14,18)=3  (14,19)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=3  (15,19)=3  (16,6)=3  (16,7)=3  (16,8)=3  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8  (16,18)=3  (16,19)=3  (17,6)=3  (17,7)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=3  (17,12)=3  (17,13)=3  (17,14)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (18,6)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,11)=3  (19,12)=3  (19,13)=3  (19,14)=3  (19,15)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3  (20,6)=3  (20,7)=3  (20,8)=3  (20,9)=3  (20,10)=3  (20,11)=3  (20,12)=3  (20,13)=3  (20,14)=3  (20,15)=3  (20,16)=3  (20,17)=3  (20,18)=3  (20,19)=3 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (26,27) and color blue and layers
  [0]: a rectangle at (0,0) with size (26,27) and color red and mask
diff:   layer[0].mask
delta: (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=3  (7,15)=3  (7,16)=3  (7,17)=3  (7,18)=3  (7,19)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (8,14)=3  (8,15)=3  (8,16)=3  (8,17)=3  (8,18)=3  (8,19)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,17)=3  (9,18)=3  (9,19)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,18)=3  (10,19)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=8  (11,10)=8  (11,11)=8  (11,16)=8  (11,17)=8  (11,18)=3  (11,19)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=8  (12,10)=8  (12,11)=8  (12,16)=8  (12,17)=8  (12,18)=3  (12,19)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=8  (13,10)=8  (13,11)=8  (13,16)=8  (13,17)=8  (13,18)=3  (13,19)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=8  (14,10)=8  (14,11)=8  (14,16)=8  (14,17)=8  (14,18)=3  (14,19)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,18)=3  (15,19)=3  (16,6)=3  (16,7)=3  (16,8)=3  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8  (16,18)=3  (16,19)=3  (17,6)=3  (17,7)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=3  (17,12)=3  (17,13)=3  (17,14)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (18,6)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,11)=3  (19,12)=3  (19,13)=3  (19,14)=3  (19,15)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3  (20,6)=3  (20,7)=3  (20,8)=3  (20,9)=3  (20,10)=3  (20,11)=3  (20,12)=3  (20,13)=3  (20,14)=3  (20,15)=3  (20,16)=3  (20,17)=3  (20,18)=3  (20,19)=3 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (26,27) and color red and layers
  [0]: a rectangle at (7,6) with size (14,14) and color green and mask 1111111111111111111111111111111111111111111111111111111111000000000111110000000001111100000000011111000000000111110000000001111100000000011111000000000111111111111111111111111111111111111111111111
diff:   layer[0].mask
delta: (5,3)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,13)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (5,19)=1  (5,20)=1  (5,21)=1  (5,22)=1  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (6,19)=1  (6,20)=1  (6,21)=1  (6,22)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,20)=1  (7,21)=1  (7,22)=1  (8,3)=1  (8,4)=1  (8,5)=1  (8,20)=1  (8,21)=1  (8,22)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,20)=1  (9,21)=1  (9,22)=1  (10,3)=1  (10,4)=1  (10,5)=1  (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,20)=1  (10,21)=1  (10,22)=1  (11,3)=1  (11,4)=1  (11,5)=1  (11,9)=8  (11,10)=8  (11,11)=8  (11,16)=8  (11,17)=8  (11,20)=1  (11,21)=1  (11,22)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,9)=8  (12,10)=8  (12,11)=8  (12,16)=8  (12,17)=8  (12,20)=1  (12,21)=1  (12,22)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,9)=8  (13,10)=8  (13,11)=8  (13,16)=8  (13,17)=8  (13,20)=1  (13,21)=1  (13,22)=1  (14,3)=1  (14,4)=1  (14,5)=1  (14,9)=8  (14,10)=8  (14,11)=8  (14,16)=8  (14,17)=8  (14,20)=1  (14,21)=1  (14,22)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (15,20)=1  (15,21)=1  (15,22)=1  (16,3)=1  (16,4)=1  (16,5)=1  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8  (16,20)=1  (16,21)=1  (16,22)=1  (17,3)=1  (17,4)=1  (17,5)=1  (17,20)=1  (17,21)=1  (17,22)=1  (18,3)=1  (18,4)=1  (18,5)=1  (18,20)=1  (18,21)=1  (18,22)=1  (19,3)=1  (19,4)=1  (19,5)=1  (19,20)=1  (19,21)=1  (19,22)=1  (20,3)=1  (20,4)=1  (20,5)=1  (20,20)=1  (20,21)=1  (20,22)=1  (21,3)=1  (21,4)=1  (21,5)=1  (21,6)=1  (21,7)=1  (21,8)=1  (21,9)=1  (21,10)=1  (21,11)=1  (21,12)=1  (21,13)=1  (21,14)=1  (21,15)=1  (21,16)=1  (21,17)=1  (21,18)=1  (21,19)=1  (21,20)=1  (21,21)=1  (21,22)=1  (22,3)=1  (22,4)=1  (22,5)=1  (22,6)=1  (22,7)=1  (22,8)=1  (22,9)=1  (22,10)=1  (22,11)=1  (22,12)=1  (22,13)=1  (22,14)=1  (22,15)=1  (22,16)=1  (22,17)=1  (22,18)=1  (22,19)=1  (22,20)=1  (22,21)=1  (22,22)=1  (23,3)=1  (23,4)=1  (23,5)=1  (23,6)=1  (23,7)=1  (23,8)=1  (23,9)=1  (23,10)=1  (23,11)=1  (23,12)=1  (23,13)=1  (23,14)=1  (23,15)=1  (23,16)=1  (23,17)=1  (23,18)=1  (23,19)=1  (23,20)=1  (23,21)=1  (23,22)=1 
! size mismatch, 10x10 instead of 9x9

TEST eb5a1d5d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1369.5 bits (1369.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-23] Checking task ec883f72.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13134.3 = 13143.3
DL output with Mo: L = 9.0 + 15407.7 = 15416.6
DL input+output M: L = 17.9 + 28542.0 = 28559.9

# learning a model for train pairs
28559.9	
21906.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15291.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
12975.1	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10665.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8402.5	OUT DEF: layer[0]={layer[0]}
7398.2	OUT DEF: layer[01]={layer[01]}
6665.7	OUT DEF: size={size}
6153.2	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5967.6	OUT DEF: layer[011].color={layer[01].color}
5873.8	IN  DEF: layer[01].mask=full
5813.6	OUT DEF: color=black
5753.4	IN  DEF: color=black
5705.2	OUT DEF: layer[011].pos=(?,?)
5637.5	OUT DEF: layer[011].pos.j={layer[0].pos.j + layer[0].size.j}
5589.2	OUT DEF: layer[011].size=(?,?)
5411.1	OUT DEF: layer[011].size.i={layer[01].size.i}
5234.1	OUT DEF: layer[011].size.j={layer[01].size.i}
5185.9	IN  DEF: size=(?,?)
5137.7	IN  DEF: layer[0].pos=(?,?)
5089.4	IN  DEF: layer[0].size=(?,?)
5041.2	IN  DEF: layer[01].pos=(?,?)
4993.0	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: {layer[0]}
  [01]: {layer[01]}
  [011]: a rectangle at (?,{layer[0].pos.j + layer[0].size.j}) with size ({layer[01].size.i},{layer[01].size.i}) and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 63.7 + 3714.5 = 3778.2
DL output with Mo: L = 52.6 + 1162.2 = 1214.8
DL input+output M: L = 116.3 + 4876.7 = 4993.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color brown and mask 1111100010001000
  [01]: a rectangle at (0,0) with size (2,2) and color green and mask full
diff: 
delta:
   (79.5 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color brown and mask 1111100010001000
  [01]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [011]: a rectangle at (4,4) with size (2,2) and color green and mask 1001
diff: 
delta:
   (10.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (4,4) and color brown and mask 1111100010001000
  [01]: a rectangle at (0,0) with size (2,2) and color green and mask full
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (2,2) and color green and mask full
  [01]: a rectangle at (0,0) with size (4,4) and color brown and mask 1111100010111011
diff:   layer[01].mask
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (3,0) with size (1,4) and color brown and mask full
  [01]: a rectangle at (0,0) with size (2,2) and color green and mask full
diff: 
delta: (0,3)=9# (1,3)=9# (2,3)=9#
! 9 wrong pixels (generated / expected)

TRAIN ec883f72.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,2) with size (3,5) and color cyan and mask 111111000110001
  [01]: a rectangle at (0,4) with size (1,1) and color pink and mask full
diff: 
delta:
   (77.6 bits)
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,2) with size (3,5) and color cyan and mask 111111000110001
  [01]: a rectangle at (0,4) with size (1,1) and color pink and mask full
  [011]: a rectangle at (3,7) with size (1,1) and color pink and mask full
diff: 
delta: (3,1)=6  (4,0)=6 
   (43.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,2) with size (3,5) and color cyan and mask 111111000110001
  [01]: a rectangle at (0,4) with size (1,1) and color pink and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,4) with size (1,1) and color pink and mask full
  [01]: a rectangle at (0,2) with size (3,5) and color cyan and mask 111111000110101
diff:   layer[01].mask
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  [0]: a rectangle at (0,3) with size (2,3) and color black and mask full
  [01]: a rectangle at (0,2) with size (3,5) and color cyan and mask full
diff: 
delta: (0,4)=6 
! 7 wrong pixels (generated / expected)

TRAIN ec883f72.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,1) with size (4,6) and color yellow and mask 100001100001100001111111
  [01]: a rectangle at (7,3) with size (2,2) and color red and mask full
diff: 
delta:
   (93.4 bits)
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,1) with size (4,6) and color yellow and mask 100001100001100001111111
  [01]: a rectangle at (7,3) with size (2,2) and color red and mask full
  [011]: a rectangle at (3,7) with size (2,2) and color red and mask 110
diff: 
delta: (4,0)=2 
   (30.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,1) with size (4,6) and color yellow and mask 100001100001100001111111
  [01]: a rectangle at (7,3) with size (2,2) and color red and mask full
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (7,3) with size (2,2) and color red and mask full
  [01]: a rectangle at (5,1) with size (4,6) and color yellow and mask 101101101101100001111111
diff:   layer[01].mask
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (6,2) with size (3,4) and color black and mask full
  [01]: a rectangle at (5,1) with size (4,6) and color yellow and mask full
diff: 
delta: (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
! 18 wrong pixels (generated / expected)

TRAIN ec883f72.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,0) with size (7,6) and color grey and mask 100000100000100000100000100000100000111111
  [01]: a rectangle at (7,0) with size (5,4) and color yellow and mask full
diff: 
delta:
   (120.9 bits)
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,0) with size (7,6) and color grey and mask 100000100000100000100000100000100000111111
  [01]: a rectangle at (7,0) with size (5,4) and color yellow and mask full
  [011]: a rectangle at (0,6) with size (5,5) and color yellow and mask 100010001000100010000
diff: 
delta:
   (32.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,0) with size (7,6) and color grey and mask 100000100000100000100000100000100000111111
  [01]: a rectangle at (7,0) with size (5,4) and color yellow and mask full
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (7,0) with size (5,4) and color yellow and mask full
  [01]: a rectangle at (5,0) with size (7,6) and color grey and mask 101111101111101111101111101111100000111111
diff:   layer[01].mask
delta:
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (7,0) with size (5,4) and color yellow and mask full
  [01]: a rectangle at (5,5) with size (7,1) and color grey and mask full
diff: 
delta: (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5#
! 50 wrong pixels (generated / expected)

TRAIN ec883f72.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,4) with size (5,6) and color green and mask 111111100001100001100001100001
  [01]: a rectangle at (0,6) with size (3,2) and color yellow and mask full
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,6) with size (3,2) and color yellow and mask full
  [01]: a rectangle at (0,4) with size (5,6) and color green and mask 111111100001101101101101101101
diff:   layer[01].mask
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (0,5) with size (4,4) and color black and mask full
  [01]: a rectangle at (0,4) with size (5,6) and color green and mask full
diff: 
delta: (0,6)=4  (0,7)=4  (1,6)=4  (1,7)=4  (2,6)=4  (2,7)=4 
! 22 wrong pixels (generated / expected)

TEST ec883f72.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1162.2 bits (1162.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-22] Checking task ecdecbb3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13616.3 = 13625.2
DL output with Mo: L = 9.0 + 24453.5 = 24462.4
DL input+output M: L = 17.9 + 38069.7 = 38087.7

# learning a model for train pairs
38087.7	
28535.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22365.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16772.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12694.9	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
9940.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9302.7	OUT DEF: size={size}
9114.8	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 3334.8 = 3378.2
DL output with Mo: L = 75.9 + 5660.8 = 5736.6
DL input+output M: L = 119.2 + 8995.6 = 9114.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (6,0) with size (1,13) and color cyan and mask full
  [01]: a rectangle at (2,2) with size (1,1) and color red and mask full
diff: 
delta: (10,8)=2 
   (98.6 bits)
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (5,0) with size (3,13) and color cyan and mask 111000111011110111110110001110001110
  [01]: a rectangle at (2,2) with size (5,1) and color red and mask full
  [011]: a rectangle at (8,8) with size (3,1) and color red and mask full
  [0111]: a rectangle at (6,8) with size (1,1) and color red and mask full
diff: 
delta:
   (156.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (6,0) with size (1,13) and color cyan and mask full
  [01]: a rectangle at (2,2) with size (1,1) and color red and mask full
diff: 
delta: (10,8)=2 
! 35 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (0,3) with size (13,1) and color cyan and mask full
  [01]: a rectangle at (0,14) with size (13,1) and color cyan and mask full
diff: 
delta: (4,8)=2 
   (108.3 bits)
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (0,2) with size (13,3) and color cyan and mask 10010010010010010010111101111010010010
  [01]: a rectangle at (0,13) with size (13,3) and color cyan and mask 10010010010010010010111101111010010010
  [011]: a rectangle at (4,3) with size (1,1) and color red and mask full
  [0111]: a rectangle at (4,3) with size (1,12) and color red and mask full
diff: 
delta:
   (206.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  [0]: a rectangle at (0,3) with size (13,1) and color cyan and mask full
  [01]: a rectangle at (0,14) with size (13,1) and color cyan and mask full
diff: 
delta: (4,8)=2 
! 50 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,12) and color black and layers
  [0]: a rectangle at (7,0) with size (1,12) and color cyan and mask full
  [01]: a rectangle at (13,0) with size (1,12) and color cyan and mask full
diff: 
delta: (2,8)=2  (10,4)=2 
   (126.6 bits)
data: a background with size (17,12) and color black and layers
  [0]: a rectangle at (6,0) with size (3,12) and color cyan and mask 1110111000111011101111001110111000
  [01]: a rectangle at (12,0) with size (3,12) and color cyan and mask 111000111111101111000000111000
  [011]: a rectangle at (7,4) with size (7,1) and color red and mask full
  [0111]: a rectangle at (2,8) with size (6,1) and color red and mask full
diff: 
delta:
   (203.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  [0]: a rectangle at (7,0) with size (1,12) and color cyan and mask full
  [01]: a rectangle at (13,0) with size (1,12) and color cyan and mask full
diff: 
delta: (2,8)=2  (10,4)=2 
! 53 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  [0]: a rectangle at (0,4) with size (17,1) and color cyan and mask full
  [01]: a rectangle at (0,12) with size (17,1) and color cyan and mask full
diff: 
delta: (1,15)=2  (2,1)=2  (8,8)=2  (14,16)=2 
! 80 wrong pixels (generated / expected)

TEST ecdecbb3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5660.8 bits (5660.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-21] Checking task ed36ccf7.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2956.1 = 2965.0
DL output with Mo: L = 9.0 + 2956.1 = 2965.0
DL input+output M: L = 17.9 + 5912.2 = 5930.1

# learning a model for train pairs
5930.1	
4888.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3847.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3354.2	OUT DEF: size={size}
3034.7	OUT DEF: color={color}
2848.3	OUT DEF: layer[0].color={layer[0].color}
2663.8	IN  DEF: layer[0].color=black
2615.6	OUT DEF: layer[0].pos=(?,?)
2500.7	OUT DEF: layer[0].pos.j={layer[0].pos.i}
2452.5	OUT DEF: layer[0].size=(?,?)
2269.6	OUT DEF: layer[0].size.i={layer[0].size.j}
2106.6	OUT DEF: layer[0].size.j={layer[0].size.i}
2058.4	IN  DEF: size=(?,?)
1840.9	IN  DEF: size.i=3
1623.4	IN  DEF: size.j=3
1575.1	IN  DEF: layer[0].pos=(?,?)
1526.9	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at (?,{layer[0].pos.i}) with size ({layer[0].size.j},{layer[0].size.i}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (3,3) and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color black and mask ?

DL input  with Mi: L = 46.2 + 1113.2 = 1159.4
DL output with Mo: L = 38.4 + 329.2 = 367.5
DL input+output M: L = 84.5 + 1442.4 = 1526.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (1,2) and color black and mask full
diff: 
delta:
   (22.7 bits)
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (2,1) and color black and mask full
diff: 
delta:
   (5.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,1) with size (1,2) and color black and mask full
diff: 
delta:
correct output grid

TRAIN ed36ccf7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,0) with size (2,3) and color black and mask 100111
diff: 
delta:
   (31.9 bits)
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (0,1) with size (3,2) and color black and mask 10111
diff: 
delta:
   (11.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,0) with size (2,3) and color black and mask 100111
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,0) with size (1,3) and color black and mask full
diff: 
delta: (2,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  [0]: a rectangle at (1,2) with size (2,1) and color black and mask full
diff: 
delta: (1,0)=0  (1,1)=0 
! 2 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (2,2) and color black and mask full
diff: 
delta:
   (24.7 bits)
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (1,0) with size (2,2) and color black and mask full
diff: 
delta:
   (5.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  [0]: a rectangle at (0,0) with size (2,2) and color black and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 111100100
diff:   layer[0].color
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,0) with size (1,3) and color brown and mask full
diff:   layer[0].color
delta: (0,2)=9# (1,2)=9#
! 2 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,2) and color black and mask 11110
diff: 
delta:
   (31.9 bits)
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (2,3) and color black and mask 110011
diff: 
delta:
   (11.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (0,0) with size (3,2) and color black and mask 11110
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color red and mask 111010
diff:   layer[0].color
delta: (0,0)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  [0]: a rectangle at (1,0) with size (1,2) and color black and mask full
diff: 
delta: (0,1)=0  (2,0)=0 
! 4 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (1,0) with size (2,3) and color grey and mask 110001
diff:   layer[0].color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  [0]: a rectangle at (0,0) with size (3,3) and color black and mask 1110111
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (2,1) with size (1,2) and color grey and mask full
diff:   layer[0].color
delta: (1,0)=5#
! 1 wrong pixels (generated / expected)

TEST ed36ccf7.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 329.2 bits (329.2 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-20] Checking task ef135b50.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20155.1 = 20164.0
DL output with Mo: L = 9.0 + 24567.9 = 24576.9
DL input+output M: L = 17.9 + 44723.0 = 44740.9

# learning a model for train pairs
44740.9	
29524.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22054.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
17032.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
15177.5	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14599.2	OUT DEF: size={size}
14359.4	OUT DEF: color={color}
14125.1	IN  DEF: color=red
13985.4	OUT DEF: layer[011].color={layer[0].color}
13754.7	OUT DEF: layer[01].color={layer[0].color}
13612.4	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
12606.9	OUT DEF: color={color}
12468.9	IN  DEF: layer[0].color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {color} and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [011]: a rectangle at ? with size ? and color {layer[0].color} and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color red and layers
  [0]: a rectangle at ? with size ? and color black and mask ?

DL input  with Mi: L = 32.5 + 4543.2 = 4575.7
DL output with Mo: L = 73.7 + 7819.5 = 7893.2
DL input+output M: L = 106.3 + 12362.7 = 12468.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111100111111110011110011001111001100111100111111110011110001001111000111111100011111111111111111111
diff: 
delta:
   (151.4 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (3,3) with size (2,4) and color brown and mask full
  [01]: a rectangle at (8,5) with size (2,5) and color black and mask full
  [011]: a rectangle at (0,0) with size (10,10) and color black and mask 1111100111111110011110000001111000000111100111111110011110001001111000111111100011111111111111111111
  [0111]: a rectangle at (6,5) with size (2,2) and color brown and mask full
diff: 
delta:
   (214.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111100111111110011110011001111001100111100111111110011110001001111000111111100011111111111111111111
diff: 
delta:
! 73 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,7) with size (5,2) and color red and mask full
diff:   color  layer[0].color
delta: (2,0)=2  (2,1)=2  (2,2)=2  (3,0)=2  (3,1)=2  (3,2)=2  (4,0)=2  (4,1)=2  (4,2)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2  (9,3)=2  (9,4)=2 
! 43 wrong pixels (generated / expected)

TRAIN ef135b50.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 111111000010011111111001111111100111000110011100011111110001111100000111110011111111001111111100
diff: 
delta:
   (151.4 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (2,2) with size (2,5) and color brown and mask full
  [01]: a rectangle at (4,0) with size (6,7) and color black and mask 11111100001111100111110011100001111111111
  [011]: a rectangle at (0,2) with size (2,8) and color black and mask full
  [0111]: a rectangle at (6,5) with size (2,5) and color black and mask full
diff: 
delta: (5,5)=9# (5,6)=9# (8,5)=9#
   (215.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 111111000010011111111001111111100111000110011100011111110001111100000111110011111111001111111100
diff: 
delta:
! 68 wrong pixels (generated / expected)

TRAIN ef135b50.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 111110000010001000001000100000100011111110001111111000111111100010000111111000000001100000000111111
diff: 
delta:
   (151.4 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (3,5) with size (6,3) and color red and mask full
  [01]: a rectangle at (4,0) with size (3,5) and color black and mask full
  [011]: a rectangle at (2,4) with size (4,6) and color black and mask full
  [0111]: a rectangle at (0,0) with size (1,6) and color black and mask full
diff: 
delta: (1,4)=9# (1,5)=9# (3,4)=9# (6,8)=9# (7,4)=9# (7,8)=9# (8,4)=9# (8,8)=9# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=0 
   (351.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 111110000010001000001000100000100011111110001111111000111111100010000111111000000001100000000111111
diff: 
delta:
! 48 wrong pixels (generated / expected)

TRAIN ef135b50.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (10,10) and color black and mask 1111111111111111111111111100011000010001100001000111111100010000110001000011111100001110001111111000
diff: 
delta:
! 63 wrong pixels (generated / expected)

TEST ef135b50.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7819.5 bits (7819.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-19] Checking task f15e1fac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3746.0 = 3755.0
DL output with Mo: L = 9.0 + 25946.4 = 25955.4
DL input+output M: L = 17.9 + 29692.5 = 29710.4

# learning a model for train pairs
29710.4	
14351.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11726.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
11106.9	OUT DEF: size={size}
10986.7	OUT DEF: layer[01].color=cyan
10913.3	IN  SHAPE at layer[0]: a point at ? with color ?
10775.3	IN  DEF: layer[0].color=cyan
10697.9	IN  SHAPE at layer[01]: a point at ? with color ?
10559.9	IN  DEF: layer[01].color=cyan
10477.2	IN  SHAPE at layer[011]: a point at ? with color ?
10339.2	IN  DEF: layer[011].color=red
10247.6	IN  SHAPE at layer[0111]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color cyan and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color cyan
  [01]: a point at ? with color cyan
  [011]: a point at ? with color red
  [0111]: a point at ? with color ?

DL input  with Mi: L = 53.4 + 2961.6 = 3015.1
DL output with Mo: L = 44.3 + 7188.3 = 7232.6
DL input+output M: L = 97.7 + 10149.9 = 10247.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,12) and color black and layers
  [0]: a point at (0,1) with color cyan
  [01]: a point at (0,5) with color cyan
  [011]: a point at (4,0) with color red
  [0111]: a point at (0,7) with color cyan
diff: 
delta: (0,9)=8  (10,0)=2 
   (114.3 bits)
data: a background with size (17,12) and color black and layers
  [0]: a rectangle at (0,5) with size (17,7) and color cyan and mask 10101001010100101010010101001010100101010010101000101010010101001010100101010010101001010100010101001010100101010010101
  [01]: a rectangle at (0,1) with size (17,3) and color cyan and mask 100100100100100100100010010010010010010001001001001
diff: 
delta: (4,0)=2  (10,0)=2 
   (281.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  [0]: a point at (0,1) with color cyan
  [01]: a point at (0,5) with color cyan
  [011]: a point at (4,0) with color red
  [0111]: a point at (0,7) with color cyan
diff: 
delta: (0,9)=8  (10,0)=2 
! 72 wrong pixels (generated / expected)

TRAIN f15e1fac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  [0]: a point at (0,2) with color cyan
  [01]: a point at (0,6) with color cyan
  [011]: a point at (3,9) with color red
  [0111]: a point at (7,9) with color red
diff: 
delta: (11,9)=2 
   (90.8 bits)
data: a background with size (14,10) and color black and layers
  [0]: a rectangle at (0,3) with size (14,4) and color cyan and mask 10001000100100010001000100100010001000100100010001000
  [01]: a rectangle at (0,0) with size (11,3) and color cyan and mask 1001001001010010010010100100100
diff: 
delta: (3,9)=2  (7,9)=2  (11,9)=2 
   (213.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  [0]: a point at (0,2) with color cyan
  [01]: a point at (0,6) with color cyan
  [011]: a point at (3,9) with color red
  [0111]: a point at (7,9) with color red
diff: 
delta: (11,9)=2 
! 32 wrong pixels (generated / expected)

TRAIN f15e1fac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a point at (2,0) with color cyan
  [01]: a point at (6,0) with color cyan
  [011]: a point at (11,4) with color red
  [0111]: a point at (9,0) with color cyan
diff: 
delta: (11,8)=2 
   (91.1 bits)
data: a background with size (12,12) and color red and layers
  [0]: a rectangle at (0,0) with size (12,12) and color black and mask 111011101111111111111111111111110000111100001111000011111111111111110000111100001111000011111111111111111111111111110000111100001111000011111111
  [01]: a rectangle at (0,0) with size (10,12) and color cyan and mask full
diff: 
delta:
   (223.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a point at (2,0) with color cyan
  [01]: a point at (6,0) with color cyan
  [011]: a point at (11,4) with color red
  [0111]: a point at (9,0) with color cyan
diff: 
delta: (11,8)=2 
! 42 wrong pixels (generated / expected)

TRAIN f15e1fac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  [0]: a point at (2,16) with color cyan
  [01]: a point at (5,16) with color cyan
  [011]: a point at (11,2) with color red
  [0111]: a point at (8,16) with color cyan
diff: 
delta: (10,16)=8  (11,6)=2  (11,11)=2 
! 72 wrong pixels (generated / expected)

TEST f15e1fac.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 7188.3 bits (7188.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-18] Checking task f1cefba8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 73797.3 = 73806.3
DL output with Mo: L = 9.0 + 79564.5 = 79573.5
DL input+output M: L = 17.9 + 153361.8 = 153379.8

# learning a model for train pairs
153379.8	
104510.5	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
64640.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
35281.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
24812.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
20546.7	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 43.4 + 4534.1 = 4577.5
DL output with Mo: L = 59.8 + 15909.4 = 15969.2
DL input+output M: L = 103.1 + 20443.6 = 20546.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,13) and color black and layers
  [0]: a rectangle at (4,3) with size (9,7) and color red and mask full
  [01]: a rectangle at (2,1) with size (13,11) and color cyan and mask full
diff: 
delta: (3,7)=2  (6,10)=2  (13,4)=2 
   (159.9 bits)
data: a background with size (19,13) and color black and layers
  [0]: a rectangle at (2,1) with size (13,11) and color cyan and mask 11111111111111111111111100100101111001001011110010010111100100101111001001011110010010111111111111111001001011110010010111111111111111111111111
  [01]: a rectangle at (7,3) with size (6,7) and color red and mask full
  [011]: a rectangle at (4,3) with size (2,7) and color red and mask full
diff: 
delta: (0,4)=2  (0,7)=2  (1,4)=2  (1,7)=2  (6,0)=2  (6,12)=2  (15,4)=2  (15,7)=2  (16,4)=2  (16,7)=2  (17,4)=2  (17,7)=2  (18,4)=2  (18,7)=2 
   (545.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,13) and color black and layers
  [0]: a rectangle at (4,3) with size (9,7) and color red and mask full
  [01]: a rectangle at (2,1) with size (13,11) and color cyan and mask full
diff: 
delta: (3,7)=2  (6,10)=2  (13,4)=2 
! size mismatch, 10x10 instead of 19x13

TRAIN f1cefba8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (5,4) with size (6,9) and color yellow and mask 10000011111111011111111111111111011111111000000100
  [01]: a rectangle at (4,2) with size (8,12) and color blue and mask full
diff: 
delta:
   (151.9 bits)
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (4,2) with size (8,12) and color blue and mask full
  [01]: a rectangle at (0,6) with size (15,1) and color yellow and mask full
  [011]: a rectangle at (0,8) with size (15,1) and color yellow and mask full
diff: 
delta: (6,4)=4  (6,5)=4  (6,7)=4  (6,9)=4  (6,10)=4  (6,11)=4  (7,0)=4  (7,1)=4  (7,14)=4  (7,15)=4  (7,16)=4  (8,4)=4  (8,5)=4  (8,7)=4  (8,9)=4  (8,10)=4  (8,11)=4  (9,4)=4  (9,5)=4  (9,7)=4  (9,9)=4  (9,10)=4  (9,11)=4 
   (571.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  [0]: a rectangle at (5,4) with size (6,9) and color yellow and mask 10000011111111011111111111111111011111111000000100
  [01]: a rectangle at (4,2) with size (8,12) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 15x17

TRAIN f1cefba8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (5,6) with size (8,8) and color green and mask full
  [01]: a rectangle at (3,4) with size (12,12) and color red and mask full
diff: 
delta: (4,11)=3  (8,5)=3 
   (141.6 bits)
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (3,4) with size (12,12) and color red and mask 111111111111111111111111110010000011110010000011110010000011110010000011111111111111110010000011110010000011110010000011111111111111111111111111
  [01]: a rectangle at (5,6) with size (8,5) and color green and mask full
  [011]: a rectangle at (5,12) with size (8,2) and color green and mask full
diff: 
delta: (0,11)=3  (1,11)=3  (2,11)=3  (8,0)=3  (8,1)=3  (8,2)=3  (8,3)=3  (8,16)=3  (8,17)=3  (15,11)=3 
   (473.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  [0]: a rectangle at (5,6) with size (8,8) and color green and mask full
  [01]: a rectangle at (3,4) with size (12,12) and color red and mask full
diff: 
delta: (4,11)=3  (8,5)=3 
! size mismatch, 10x10 instead of 16x18

TRAIN f1cefba8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  [0]: a rectangle at (5,3) with size (9,10) and color cyan and mask full
  [01]: a rectangle at (3,1) with size (13,14) and color blue and mask full
diff: 
delta: (4,6)=8  (4,10)=8  (9,2)=8 
! size mismatch, 10x10 instead of 19x18

TEST f1cefba8.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 15909.4 bits (15909.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-17] Checking task f25fbde4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3877.9 = 3886.9
DL output with Mo: L = 9.0 + 10118.9 = 10127.9
DL input+output M: L = 17.9 + 13996.8 = 14014.8

# learning a model for train pairs
14014.8	
6780.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4756.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4616.8	OUT DEF: layer[0].color={layer[0].color}
4478.8	IN  DEF: layer[0].color=yellow
4433.2	OUT DEF: color=black
4387.6	IN  DEF: color=black
4352.6	OUT DEF: size=(?,?)
4127.6	OUT DEF: size.i={layer[0].size.i + layer[0].size.i}
3902.6	OUT DEF: size.j={layer[0].size.j + layer[0].size.j}
3867.6	OUT DEF: layer[0].pos=(?,?)
3749.1	OUT DEF: layer[0].pos.i=0
3630.7	OUT DEF: layer[0].pos.j=0
3595.7	OUT DEF: layer[0].size=(?,?)
3368.3	OUT DEF: layer[0].size.i={layer[0].size.i + layer[0].size.i}
3140.9	OUT DEF: layer[0].size.j={layer[0].size.j + layer[0].size.j}
3105.9	IN  DEF: size=(?,?)
2851.4	IN  DEF: size.i=9
2596.9	IN  DEF: size.j=9
2561.9	IN  DEF: layer[0].pos=(?,?)
2526.9	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ({layer[0].size.i + layer[0].size.i},{layer[0].size.j + layer[0].size.j}) and color black and layers
  [0]: a rectangle at (0,0) with size ({layer[0].size.i + layer[0].size.i},{layer[0].size.j + layer[0].size.j}) and color {layer[0].color} and mask ?
WHERE (Mi)
a background with size (9,9) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color yellow and mask ?

DL input  with Mi: L = 50.6 + 1015.3 = 1065.9
DL output with Mo: L = 71.3 + 1389.7 = 1461.0
DL input+output M: L = 121.9 + 2404.9 = 2526.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,1) with size (3,4) and color yellow and mask 11011110110
diff: 
delta:
   (35.1 bits)
data: a background with size (6,8) and color black and layers
  [0]: a rectangle at (0,0) with size (6,8) and color yellow and mask 1111000011110011111111111111110011110000111100
diff: 
delta:
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,1) with size (3,4) and color yellow and mask 11011110110
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,2) with size (3,2) and color yellow and mask full
diff: 
delta: (3,1)=4  (3,4)=4 
! size mismatch, 6x4 instead of 6x8
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (3,1) with size (1,4) and color yellow and mask full
diff: 
delta: (2,2)=4  (2,3)=4  (4,2)=4  (4,3)=4 
! size mismatch, 2x8 instead of 6x8

TRAIN f25fbde4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,3) with size (3,3) and color yellow and mask 100011010
diff: 
delta:
   (31.3 bits)
data: a background with size (6,6) and color black and layers
  [0]: a rectangle at (0,0) with size (6,6) and color yellow and mask 110000110000001111001111001100001100
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,3) with size (3,3) and color yellow and mask 100011010
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (2,3) with size (1,2) and color yellow and mask full
diff: 
delta: (1,4)=4  (3,5)=4 
! size mismatch, 2x4 instead of 6x6
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,4) with size (2,1) and color yellow and mask full
diff: 
delta: (2,3)=4  (3,5)=4 
! size mismatch, 4x2 instead of 6x6

TRAIN f25fbde4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,1) with size (4,3) and color yellow and mask 110010011010
diff: 
delta:
   (35.1 bits)
data: a background with size (8,6) and color black and layers
  [0]: a rectangle at (0,0) with size (8,6) and color yellow and mask 111100111100001100001100001111001111001100001100
diff: 
delta:
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,1) with size (4,3) and color yellow and mask 110010011010
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (4,2) with size (4,1) and color yellow and mask full
diff: 
delta: (5,1)=4  (7,3)=4 
! size mismatch, 8x2 instead of 8x6
>> Trial 3
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (5,1) with size (1,2) and color yellow and mask full
diff: 
delta: (4,2)=4  (6,2)=4  (7,2)=4  (7,3)=4 
! size mismatch, 2x4 instead of 8x6

TRAIN f25fbde4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  [0]: a rectangle at (1,3) with size (3,5) and color yellow and mask 10101010101010
diff: 
delta:
! 32 wrong pixels (generated / expected)

TEST f25fbde4.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1389.7 bits (1389.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-16] Checking task f25ffba3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4245.4 = 4254.3
DL output with Mo: L = 9.0 + 8021.3 = 8030.3
DL input+output M: L = 17.9 + 12266.7 = 12284.6

# learning a model for train pairs
12284.6	
9597.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
8497.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7436.9	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6681.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
6088.7	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5756.3	OUT DEF: size={size}
5476.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5318.4	OUT DEF: color={layer[011].color}
5225.8	OUT DEF: layer[0].color={layer[0].color}
5133.7	OUT DEF: layer[011].color={layer[01].color}
5041.8	OUT DEF: layer[01].color={color}
4994.3	OUT DEF: layer[0].mask=full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color {layer[011].color} and layers
  [0]: a rectangle at ? with size ? and color {layer[0].color} and mask full
  [01]: a rectangle at ? with size ? and color {color} and mask ?
  [011]: a rectangle at ? with size ? and color {layer[01].color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 2221.6 = 2281.4
DL output with Mo: L = 62.1 + 2650.8 = 2712.9
DL input+output M: L = 121.9 + 4872.4 = 4994.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,3) with size (5,1) and color brown and mask full
  [01]: a rectangle at (6,2) with size (4,1) and color green and mask full
  [011]: a rectangle at (8,0) with size (2,1) and color red and mask full
diff: 
delta: (9,1)=4 
   (113.6 bits)
data: a background with size (10,4) and color red and layers
  [0]: a rectangle at (0,3) with size (10,1) and color brown and mask full
  [01]: a rectangle at (1,0) with size (8,3) and color black and mask 10011011111111011011010
  [011]: a rectangle at (0,2) with size (10,1) and color green and mask full
diff: 
delta: (0,1)=4  (9,1)=4 
   (132.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,3) with size (5,1) and color brown and mask full
  [01]: a rectangle at (6,2) with size (4,1) and color green and mask full
  [011]: a rectangle at (8,0) with size (2,1) and color red and mask full
diff: 
delta: (9,1)=4 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,3) with size (5,1) and color brown and mask full
  [01]: a rectangle at (8,0) with size (2,1) and color red and mask full
  [011]: a rectangle at (6,2) with size (4,1) and color green and mask full
diff: 
delta: (9,1)=4 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (6,2) with size (4,1) and color green and mask full
  [01]: a rectangle at (5,3) with size (5,1) and color brown and mask full
  [011]: a rectangle at (8,0) with size (2,1) and color red and mask full
diff: 
delta: (9,1)=4 
! 38 wrong pixels (generated / expected)

TRAIN f25ffba3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,3) with size (5,1) and color red and mask full
  [01]: a rectangle at (7,1) with size (3,2) and color cyan and mask 101001
  [011]: a rectangle at (8,0) with size (2,2) and color green and mask 1110
diff: 
delta:
   (108.5 bits)
data: a background with size (10,4) and color green and layers
  [0]: a rectangle at (0,3) with size (10,1) and color red and mask full
  [01]: a rectangle at (1,0) with size (8,3) and color black and mask 1101111111111111101001
  [011]: a rectangle at (0,2) with size (10,1) and color cyan and mask full
diff: 
delta: (2,1)=8  (7,1)=8 
   (132.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,3) with size (5,1) and color red and mask full
  [01]: a rectangle at (8,0) with size (2,2) and color green and mask 1110
  [011]: a rectangle at (7,1) with size (3,2) and color cyan and mask 111101
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,3) with size (5,1) and color red and mask full
  [01]: a rectangle at (7,1) with size (3,2) and color cyan and mask 101001
  [011]: a rectangle at (8,0) with size (2,2) and color green and mask 1110
diff: 
delta:
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (8,0) with size (2,2) and color green and mask 1110
  [01]: a rectangle at (5,3) with size (5,1) and color red and mask full
  [011]: a rectangle at (7,1) with size (3,2) and color cyan and mask 111101
diff: 
delta:
! 31 wrong pixels (generated / expected)

TRAIN f25ffba3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,1) with size (5,1) and color blue and mask full
  [01]: a rectangle at (6,0) with size (4,1) and color orange and mask full
  [011]: a rectangle at (7,2) with size (2,2) and color green and mask 1101
diff: 
delta: (9,2)=4  (9,3)=4 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (5,1) with size (5,1) and color blue and mask full
  [01]: a rectangle at (7,2) with size (2,2) and color green and mask 1101
  [011]: a rectangle at (6,0) with size (4,1) and color orange and mask full
diff: 
delta: (9,2)=4  (9,3)=4 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  [0]: a rectangle at (6,0) with size (4,1) and color orange and mask full
  [01]: a rectangle at (5,1) with size (5,1) and color blue and mask full
  [011]: a rectangle at (7,2) with size (2,2) and color green and mask 1101
diff: 
delta: (9,2)=4  (9,3)=4 
! 32 wrong pixels (generated / expected)

TEST f25ffba3.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2650.8 bits (2650.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-15] Checking task f2829549.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12896.3 = 12905.3
DL output with Mo: L = 9.0 + 3709.4 = 3718.3
DL input+output M: L = 17.9 + 16605.7 = 16623.6

# learning a model for train pairs
16623.6	
13930.8	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11985.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
10536.2	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
9340.1	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9109.2	IN  DEF: layer[011].color=blue
8878.4	IN  DEF: layer[0].color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color grey and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color blue and mask ?

DL input  with Mi: L = 62.4 + 6293.7 = 6356.1
DL output with Mo: L = 26.6 + 2495.7 = 2522.3
DL input+output M: L = 89.0 + 8789.3 = 8878.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (4,3) and color grey and mask 11101001001
  [01]: a rectangle at (0,0) with size (2,2) and color orange and mask 111
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta:
   (104.0 bits)
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (0,1) with size (4,2) and color green and mask 10011110
diff: 
delta:
   (49.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (4,3) and color grey and mask 11101001001
  [01]: a rectangle at (0,0) with size (2,2) and color orange and mask 111
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 4x3

TRAIN f2829549.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (2,4) with size (2,2) and color grey and mask 1101
  [01]: a rectangle at (2,0) with size (2,3) and color orange and mask 110011
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
   (147.3 bits)
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color green and mask 100111100
diff: 
delta:
   (50.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (2,0) with size (2,3) and color orange and mask 110011
  [01]: a rectangle at (2,4) with size (2,2) and color grey and mask 1101
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff:   layer[0].color
delta: (0,0)=7# (0,1)=7# (0,4)=5#
! size mismatch, 10x10 instead of 4x3

TRAIN f2829549.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color grey and mask 11110001
  [01]: a rectangle at (0,1) with size (4,2) and color orange and mask 10011011
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta:
   (106.2 bits)
data: a background with size (4,3) and color green and layers
  [0]: a rectangle at (0,0) with size (4,3) and color black and mask 100011110111
diff: 
delta:
   (60.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (3,3) and color grey and mask 11110001
  [01]: a rectangle at (0,1) with size (4,2) and color orange and mask 10011011
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta:
! size mismatch, 10x10 instead of 4x3

TRAIN f2829549.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (2,3) and color grey and mask 111011
  [01]: a rectangle at (0,0) with size (3,3) and color orange and mask 10011101
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta: (3,4)=5# (3,6)=5#
   (138.0 bits)
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (2,0) with size (2,3) and color green and mask 10101
diff: 
delta:
   (46.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (2,3) and color grey and mask 111011
  [01]: a rectangle at (0,0) with size (3,3) and color orange and mask 10011101
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta: (3,4)=5# (3,6)=5#
! size mismatch, 10x10 instead of 4x3

TRAIN f2829549.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (4,3) and color grey and mask 111111001010
  [01]: a rectangle at (3,0) with size (1,3) and color orange and mask full
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta: (0,0)=7# (1,2)=7#
   (133.9 bits)
data: a background with size (4,3) and color black and layers
  [0]: a rectangle at (0,1) with size (2,2) and color green and mask 110
diff: 
delta:
   (43.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (4,3) and color grey and mask 111111001010
  [01]: a rectangle at (3,0) with size (1,3) and color orange and mask full
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta: (0,0)=7# (1,2)=7#
! size mismatch, 10x10 instead of 4x3

TRAIN f2829549.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  [0]: a rectangle at (0,4) with size (4,3) and color grey and mask 111001011010
  [01]: a rectangle at (1,0) with size (1,3) and color orange and mask full
  [011]: a rectangle at (0,3) with size (4,1) and color blue and mask full
diff: 
delta: (3,0)=7#
! size mismatch, 10x10 instead of 4x3

TEST f2829549.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2495.7 bits (2495.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-14] Checking task f35d900a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4132.8 = 4141.8
DL output with Mo: L = 9.0 + 37591.8 = 37600.7
DL input+output M: L = 17.9 + 41724.6 = 41742.5

# learning a model for train pairs
41742.5	
36952.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
32158.0	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
27355.4	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
22899.5	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
22025.9	OUT DEF: size={size}
21575.2	OUT SHAPE at layer[00]: a point at ? with color ?
21467.9	IN  SHAPE at layer[0]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [00]: a point at ? with color ?
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 19.9 + 4014.2 = 4034.1
DL output with Mo: L = 84.5 + 17349.2 = 17433.7
DL input+output M: L = 104.4 + 21363.4 = 21467.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  [0]: a point at (2,1) with color red
diff: 
delta: (2,6)=3  (8,1)=3  (8,6)=2 
   (98.5 bits)
data: a background with size (14,14) and color black and layers
  [00]: a point at (2,1) with color red
  [0]: a rectangle at (1,0) with size (3,3) and color green and mask full
  [01]: a rectangle at (1,5) with size (3,3) and color red and mask full
  [011]: a rectangle at (7,0) with size (3,3) and color red and mask full
  [0111]: a rectangle at (7,5) with size (3,3) and color green and mask full
diff: 
delta: (2,3)=5# (2,4)=5# (2,6)=3  (4,1)=5# (4,6)=5# (6,1)=5# (6,6)=5# (8,1)=3  (8,3)=5# (8,4)=5# (8,6)=2 
   (352.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  [0]: a point at (2,1) with color red
diff: 
delta: (2,6)=3  (8,1)=3  (8,6)=2 
! 46 wrong pixels (generated / expected)

TRAIN f35d900a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,14) and color black and layers
  [0]: a point at (3,2) with color blue
diff: 
delta: (3,10)=8  (14,2)=8  (14,10)=1 
   (100.2 bits)
data: a background with size (17,14) and color black and layers
  [00]: a point at (3,2) with color blue
  [0]: a rectangle at (2,1) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (2,9) with size (3,3) and color blue and mask full
  [011]: a rectangle at (13,1) with size (3,3) and color blue and mask full
  [0111]: a rectangle at (13,9) with size (3,3) and color cyan and mask full
diff: 
delta: (3,4)=5# (3,6)=5# (3,8)=5# (3,10)=8  (5,2)=5# (5,10)=5# (7,2)=5# (7,10)=5# (10,2)=5# (10,10)=5# (12,2)=5# (12,10)=5# (14,2)=8  (14,4)=5# (14,6)=5# (14,8)=5# (14,10)=1 
   (470.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  [0]: a point at (3,2) with color blue
diff: 
delta: (3,10)=8  (14,2)=8  (14,10)=1 
! 54 wrong pixels (generated / expected)

TRAIN f35d900a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,16) and color black and layers
  [0]: a point at (3,2) with color red
diff: 
delta: (3,13)=4  (13,2)=4  (13,13)=2 
   (101.4 bits)
data: a background with size (17,16) and color black and layers
  [00]: a point at (3,2) with color red
  [0]: a rectangle at (2,1) with size (3,3) and color yellow and mask full
  [01]: a rectangle at (2,12) with size (3,3) and color red and mask full
  [011]: a rectangle at (12,1) with size (3,3) and color red and mask full
  [0111]: a rectangle at (12,12) with size (3,3) and color yellow and mask full
diff: 
delta: (3,4)=5# (3,6)=5# (3,9)=5# (3,11)=5# (3,13)=4  (5,2)=5# (5,13)=5# (7,2)=5# (7,13)=5# (9,2)=5# (9,13)=5# (11,2)=5# (11,13)=5# (13,2)=4  (13,4)=5# (13,6)=5# (13,9)=5# (13,11)=5# (13,13)=2 
   (513.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  [0]: a point at (3,2) with color red
diff: 
delta: (3,13)=4  (13,2)=4  (13,13)=2 
! 56 wrong pixels (generated / expected)

TRAIN f35d900a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (17,16) and color black and layers
  [0]: a point at (3,4) with color green
diff: 
delta: (3,12)=8  (8,4)=8  (8,12)=3 
   (101.4 bits)
data: a background with size (17,16) and color black and layers
  [00]: a point at (3,4) with color green
  [0]: a rectangle at (2,3) with size (3,3) and color cyan and mask full
  [01]: a rectangle at (2,11) with size (3,3) and color green and mask full
  [011]: a rectangle at (7,3) with size (3,3) and color green and mask full
  [0111]: a rectangle at (7,11) with size (3,3) and color cyan and mask full
diff: 
delta: (3,6)=5# (3,8)=5# (3,10)=5# (3,12)=8  (5,4)=5# (5,12)=5# (6,4)=5# (6,12)=5# (8,4)=8  (8,6)=5# (8,8)=5# (8,10)=5# (8,12)=3 
   (398.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  [0]: a point at (3,4) with color green
diff: 
delta: (3,12)=8  (8,4)=8  (8,12)=3 
! 50 wrong pixels (generated / expected)

TRAIN f35d900a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  [0]: a point at (4,2) with color yellow
diff: 
delta: (4,12)=1  (15,2)=1  (15,12)=4 
! 56 wrong pixels (generated / expected)

TEST f35d900a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 17349.2 bits (17349.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-13] Checking task f5b8619d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1415.6 = 1424.6
DL output with Mo: L = 9.0 + 18337.5 = 18346.5
DL input+output M: L = 17.9 + 19753.1 = 19771.1

# learning a model for train pairs
19771.1	
14198.9	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10457.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8657.0	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
8487.3	OUT DEF: layer[01].color=cyan
8349.3	OUT DEF: layer[011].color=cyan
8250.6	IN  SHAPE at layer[0]: a point at ? with color ?
8176.5	OUT SHAPE at layer[00]: a point at ? with color ?
7747.9	OUT DEF: layer[00]={layer[0]}
7669.6	OUT SHAPE at layer[001]: a point at ? with color ?
7529.9	OUT DEF: layer[001].color={layer[0].color}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [00]: {layer[0]}
  [001]: a point at ? with color {layer[0].color}
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color cyan and mask ?
  [011]: a rectangle at ? with size ? and color cyan and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 19.9 + 1305.9 = 1325.9
DL output with Mo: L = 74.2 + 6129.9 = 6204.1
DL input+output M: L = 94.1 + 7435.8 = 7529.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color red
diff: 
delta: (2,2)=2 
   (41.6 bits)
data: a background with size (6,6) and color black and layers
  [00]: a point at (0,0) with color red
  [001]: a point at (0,3) with color red
  [0]: a rectangle at (0,2) with size (6,2) and color cyan and mask full
  [01]: a rectangle at (0,5) with size (5,1) and color cyan and mask full
  [011]: a rectangle at (1,0) with size (5,1) and color cyan and mask full
diff: 
delta: (2,2)=2  (2,5)=2  (3,0)=2  (3,3)=2  (5,2)=2  (5,5)=2 
   (202.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  [0]: a point at (0,0) with color red
diff: 
delta: (2,2)=2 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  [0]: a point at (2,2) with color red
diff: 
delta: (0,0)=2 
! size mismatch, 10x10 instead of 6x6

TRAIN f5b8619d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  [0]: a point at (0,1) with color grey
diff: 
delta: (4,0)=5# (4,5)=5#
   (66.9 bits)
data: a background with size (12,12) and color black and layers
  [00]: a point at (0,1) with color grey
  [001]: a point at (0,7) with color grey
  [0]: a rectangle at (0,5) with size (12,3) and color cyan and mask full
  [01]: a rectangle at (0,0) with size (12,2) and color cyan and mask full
  [011]: a rectangle at (0,11) with size (12,1) and color cyan and mask full
diff: 
delta: (4,0)=5# (4,5)=5# (4,6)=5# (4,11)=5# (6,1)=5# (6,7)=5# (10,0)=5# (10,5)=5# (10,6)=5# (10,11)=5#
   (310.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  [0]: a point at (0,1) with color grey
diff: 
delta: (4,0)=5# (4,5)=5#
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (6,6) and color black and layers
  [0]: a point at (4,0) with color grey
diff: 
delta: (0,1)=5# (4,5)=5#
! size mismatch, 10x10 instead of 12x12
>> Trial 3
data: a background with size (6,6) and color black and layers
  [0]: a point at (4,5) with color grey
diff: 
delta: (0,1)=5# (4,0)=5#
! size mismatch, 10x10 instead of 12x12

TRAIN f5b8619d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,2) and color black and layers
  [0]: a point at (0,1) with color yellow
diff: 
delta:
   (22.0 bits)
data: a background with size (4,4) and color black and layers
  [00]: a point at (0,1) with color yellow
  [001]: a point at (0,3) with color yellow
  [0]: a rectangle at (2,1) with size (1,1) and color yellow and mask full
  [01]: a rectangle at (1,1) with size (3,1) and color cyan and mask full
  [011]: a rectangle at (1,3) with size (3,1) and color cyan and mask full
diff: 
delta: (2,3)=4 
   (100.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color black and layers
  [0]: a point at (0,1) with color yellow
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TRAIN f5b8619d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  [0]: a point at (0,2) with color green
diff: 
delta: (2,3)=3  (3,0)=3 
! size mismatch, 10x10 instead of 8x8
>> Trial 2
data: a background with size (4,4) and color black and layers
  [0]: a point at (2,3) with color green
diff: 
delta: (0,2)=3  (3,0)=3 
! size mismatch, 10x10 instead of 8x8
>> Trial 3
data: a background with size (4,4) and color black and layers
  [0]: a point at (3,0) with color green
diff: 
delta: (0,2)=3  (2,3)=3 
! size mismatch, 10x10 instead of 8x8

TEST f5b8619d.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6129.9 bits (6129.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-12] Checking task f76d97a5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4054.6 = 4063.6
DL output with Mo: L = 9.0 + 3924.5 = 3933.4
DL input+output M: L = 17.9 + 7979.1 = 7997.0

# learning a model for train pairs
7997.0	
5976.2	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4020.5	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
3409.6	OUT DEF: layer[0].mask={layer[0].mask}
2980.8	OUT DEF: size={size}
2558.8	OUT DEF: layer[0].size={layer[0].size}
2314.6	OUT DEF: layer[0].pos={layer[0].pos}
2175.4	OUT DEF: layer[0].color={color}
2037.4	IN  DEF: layer[0].color=grey
1991.8	OUT DEF: color=black
1956.8	IN  DEF: size=(?,?)
1921.7	IN  DEF: layer[0].pos=(?,?)
1822.7	IN  DEF: layer[0].pos.i=0
1787.7	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color black and layers
  [0]: a rectangle at {layer[0].pos} with size {layer[0].size} and color {color} and mask {layer[0].mask}
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,?) with size (?,?) and color grey and mask ?

DL input  with Mi: L = 44.7 + 1721.1 = 1765.8
DL output with Mo: L = 21.9 + 0.0 = 21.9
DL input+output M: L = 66.6 + 1721.1 = 1787.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10111010
diff: 
delta:
   (44.2 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color yellow and mask 10111010
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  [0]: a rectangle at (0,0) with size (3,3) and color grey and mask 10111010
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000111000011000011000011
diff: 
delta:
   (66.8 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color pink and mask 1000111000011000011000011
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000111000011000011000011
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color brown and layers
  [0]: a rectangle at (0,1) with size (5,4) and color grey and mask 11000010000101100001
diff: 
delta:
   (61.2 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,1) with size (5,4) and color brown and mask 11000010000101100001
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color brown and layers
  [0]: a rectangle at (0,1) with size (5,4) and color grey and mask 11000010000101100001
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  [0]: a rectangle at (0,0) with size (5,5) and color green and mask 1100010111010011110110111
diff:   layer[0].color
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color green and layers
  [0]: a rectangle at (1,0) with size (4,5) and color grey and mask 111010001011000010
diff:   layer[0].pos.i
delta: (0,3)=5#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color green and layers
  [0]: a rectangle at (4,0) with size (1,3) and color grey and mask full
diff:   layer[0].pos.i
delta: (0,3)=5# (1,1)=5# (2,1)=5# (2,2)=5# (2,4)=5# (3,3)=5#
! 6 wrong pixels (generated / expected)

TEST f76d97a5.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-11] Checking task f8a8fe49.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14654.9 = 14663.8
DL output with Mo: L = 9.0 + 14654.9 = 14663.8
DL input+output M: L = 17.9 + 29309.7 = 29327.7

# learning a model for train pairs
29327.7	
25799.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22242.6	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
18714.2	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
15157.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
13668.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12179.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 6030.2 = 6090.0
DL output with Mo: L = 59.8 + 6030.2 = 6090.0
DL input+output M: L = 119.6 + 12060.4 = 12179.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,4) with size (2,7) and color red and mask 10000011111111
  [01]: a rectangle at (10,4) with size (2,7) and color red and mask 11111111000001
  [011]: a rectangle at (6,6) with size (2,3) and color grey and mask 101111
diff: 
delta: (9,7)=5#
   (172.3 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,4) with size (2,7) and color red and mask 10000011111111
  [01]: a rectangle at (10,4) with size (2,7) and color red and mask 11111111000001
  [011]: a rectangle at (1,6) with size (2,3) and color grey and mask 111101
diff: 
delta: (13,7)=5#
   (172.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,4) with size (2,7) and color red and mask 10000011111111
  [01]: a rectangle at (10,4) with size (2,7) and color red and mask 11111111000001
  [011]: a rectangle at (6,6) with size (2,3) and color grey and mask 101111
diff: 
delta: (9,7)=5#
! size mismatch, 10x10 instead of 15x15

TRAIN f8a8fe49.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (8,2) and color red and mask 1101010101010111
  [01]: a rectangle at (3,9) with size (8,2) and color red and mask 1110101010101011
  [011]: a rectangle at (5,8) with size (4,1) and color grey and mask full
diff: 
delta: (5,5)=5# (6,6)=5# (7,6)=5# (8,5)=5#
   (228.8 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (8,2) and color red and mask 1101010101010111
  [01]: a rectangle at (3,9) with size (8,2) and color red and mask 1110101010101011
  [011]: a rectangle at (5,12) with size (4,1) and color grey and mask full
diff: 
delta: (5,1)=5# (6,0)=5# (7,0)=5# (8,1)=5#
   (228.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (8,2) and color red and mask 1101010101010111
  [01]: a rectangle at (3,9) with size (8,2) and color red and mask 1110101010101011
  [011]: a rectangle at (5,8) with size (4,1) and color grey and mask full
diff: 
delta: (5,5)=5# (6,6)=5# (7,6)=5# (8,5)=5#
! size mismatch, 10x10 instead of 15x15

TRAIN f8a8fe49.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (5,2) and color red and mask 1101010111
  [01]: a rectangle at (4,5) with size (3,2) and color grey and mask 101101
  [011]: a rectangle at (3,9) with size (5,2) and color red and mask 1110101011
diff: 
delta: (4,8)=5# (5,8)=5# (6,8)=5#
   (201.9 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (5,2) and color red and mask 1101010111
  [01]: a rectangle at (4,0) with size (3,2) and color grey and mask 11110
  [011]: a rectangle at (3,9) with size (5,2) and color red and mask 1110101011
diff: 
delta: (4,12)=5# (5,12)=5# (6,12)=5#
   (201.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (5,2) and color red and mask 1101010111
  [01]: a rectangle at (4,5) with size (3,2) and color grey and mask 101101
  [011]: a rectangle at (3,9) with size (5,2) and color red and mask 1110101011
diff: 
delta: (4,8)=5# (5,8)=5# (6,8)=5#
! size mismatch, 10x10 instead of 15x15

TRAIN f8a8fe49.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (4,4) with size (2,7) and color red and mask 10000011111111
  [01]: a rectangle at (10,4) with size (2,7) and color red and mask 11111111000001
  [011]: a rectangle at (6,5) with size (2,5) and color grey and mask 11111110
diff: 
delta: (9,6)=5# (9,7)=5# (9,8)=5#
! size mismatch, 10x10 instead of 15x15

TEST f8a8fe49.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 6030.2 bits (6030.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-10] Checking task f8b3ba0a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 36576.6 = 36585.6
DL output with Mo: L = 9.0 + 1812.2 = 1821.1
DL input+output M: L = 17.9 + 38388.8 = 38406.7

# learning a model for train pairs
38406.7	
36163.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
34632.0	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
33293.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
31577.8	IN  SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
30540.8	IN  SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a rectangle at ? with size ? and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 92.2 + 28627.4 = 28719.6
DL output with Mo: L = 9.0 + 1812.2 = 1821.1
DL input+output M: L = 101.1 + 30439.6 = 30540.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (11,1) with size (1,11) and color blue and mask full
  [01]: a rectangle at (1,4) with size (1,8) and color blue and mask full
  [011]: a rectangle at (7,4) with size (1,8) and color blue and mask full
  [0111]: a rectangle at (3,1) with size (1,5) and color blue and mask full
  [01111]: a rectangle at (3,7) with size (1,5) and color yellow and mask full
diff: 
delta: (1,1)=3  (1,2)=3  (1,6)=0  (1,9)=0  (3,3)=0  (3,9)=0  (5,1)=1  (5,2)=1  (5,4)=4  (5,5)=4  (5,7)=1  (5,8)=1  (5,10)=1  (5,11)=1  (7,1)=2  (7,2)=2  (7,6)=0  (7,9)=0  (9,1)=1  (9,2)=1  (9,4)=2  (9,5)=2  (9,7)=1  (9,8)=1  (9,10)=1  (9,11)=1  (11,3)=0  (11,6)=0  (11,9)=0 
   (713.4 bits)
data: a background with size (3,1) and color yellow and layers
diff: 
delta: (1,0)=2  (2,0)=3 
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (11,1) with size (1,11) and color blue and mask full
  [01]: a rectangle at (1,4) with size (1,8) and color blue and mask full
  [011]: a rectangle at (7,4) with size (1,8) and color blue and mask full
  [0111]: a rectangle at (3,1) with size (1,5) and color blue and mask full
  [01111]: a rectangle at (3,7) with size (1,5) and color yellow and mask full
diff: 
delta: (1,1)=3  (1,2)=3  (1,6)=0  (1,9)=0  (3,3)=0  (3,9)=0  (5,1)=1  (5,2)=1  (5,4)=4  (5,5)=4  (5,7)=1  (5,8)=1  (5,10)=1  (5,11)=1  (7,1)=2  (7,2)=2  (7,6)=0  (7,9)=0  (9,1)=1  (9,2)=1  (9,4)=2  (9,5)=2  (9,7)=1  (9,8)=1  (9,10)=1  (9,11)=1  (11,3)=0  (11,6)=0  (11,9)=0 
! size mismatch, 10x10 instead of 3x1

TRAIN f8b3ba0a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (11,1) with size (1,14) and color cyan and mask full
  [01]: a rectangle at (1,4) with size (1,11) and color cyan and mask full
  [011]: a rectangle at (7,1) with size (1,14) and color cyan and mask full
  [0111]: a rectangle at (5,4) with size (1,11) and color cyan and mask full
  [01111]: a rectangle at (9,1) with size (1,11) and color cyan and mask full
diff: 
delta: (1,1)=6  (1,2)=6  (1,6)=0  (1,9)=0  (1,12)=0  (3,1)=8  (3,2)=8  (3,4)=8  (3,5)=8  (3,7)=2  (3,8)=2  (3,10)=6  (3,11)=6  (3,13)=8  (3,14)=8  (5,1)=1  (5,2)=1  (5,6)=0  (5,7)=1  (5,8)=1  (5,9)=0  (5,12)=0  (7,3)=0  (7,4)=1  (7,5)=1  (7,6)=0  (7,9)=0  (7,12)=0  (9,3)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=0  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
   (919.1 bits)
data: a background with size (3,1) and color pink and layers
diff: 
delta: (1,0)=1  (2,0)=2 
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (11,1) with size (1,14) and color cyan and mask full
  [01]: a rectangle at (1,4) with size (1,11) and color cyan and mask full
  [011]: a rectangle at (7,1) with size (1,14) and color cyan and mask full
  [0111]: a rectangle at (5,4) with size (1,11) and color cyan and mask full
  [01111]: a rectangle at (9,1) with size (1,11) and color cyan and mask full
diff: 
delta: (1,1)=6  (1,2)=6  (1,6)=0  (1,9)=0  (1,12)=0  (3,1)=8  (3,2)=8  (3,4)=8  (3,5)=8  (3,7)=2  (3,8)=2  (3,10)=6  (3,11)=6  (3,13)=8  (3,14)=8  (5,1)=1  (5,2)=1  (5,6)=0  (5,7)=1  (5,8)=1  (5,9)=0  (5,12)=0  (7,3)=0  (7,4)=1  (7,5)=1  (7,6)=0  (7,9)=0  (7,12)=0  (9,3)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=0  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
! size mismatch, 10x10 instead of 3x1

TRAIN f8b3ba0a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,10) and color green and layers
  [0]: a rectangle at (1,1) with size (1,8) and color green and mask full
  [01]: a rectangle at (3,4) with size (1,5) and color green and mask full
  [011]: a rectangle at (9,4) with size (1,5) and color red and mask full
  [0111]: a rectangle at (0,0) with size (13,10) and color black and mask 1111111111100100100111111111111111111001111111111110010010011111111111100100100111111111111111111001111111111111111111111111111111
  [01111]: a rectangle at (5,4) with size (3,2) and color cyan and mask full
diff: 
delta: (1,3)=0  (1,6)=0  (3,1)=1  (3,2)=1  (3,6)=0  (9,6)=0  (11,1)=2  (11,2)=2 
   (462.0 bits)
data: a background with size (3,1) and color cyan and layers
diff: 
delta: (0,0)=2  (2,0)=1 
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,10) and color green and layers
  [0]: a rectangle at (1,1) with size (1,8) and color green and mask full
  [01]: a rectangle at (3,4) with size (1,5) and color green and mask full
  [011]: a rectangle at (9,4) with size (1,5) and color red and mask full
  [0111]: a rectangle at (0,0) with size (13,10) and color black and mask 1111111111100100100111111111111111111001111111111110010010011111111111100100100111111111111111111001111111111111111111111111111111
  [01111]: a rectangle at (5,4) with size (3,2) and color cyan and mask full
diff: 
delta: (1,3)=0  (1,6)=0  (3,1)=1  (3,2)=1  (3,6)=0  (9,6)=0  (11,1)=2  (11,2)=2 
! size mismatch, 10x10 instead of 3x1

TRAIN f8b3ba0a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color blue and layers
  [0]: a rectangle at (5,4) with size (1,8) and color blue and mask full
  [01]: a rectangle at (1,1) with size (1,11) and color blue and mask full
  [011]: a rectangle at (7,1) with size (1,11) and color blue and mask full
  [0111]: a rectangle at (3,10) with size (1,2) and color red and mask full
  [01111]: a rectangle at (0,0) with size (13,13) and color black and mask 1111111111111100100100100111111111111111001001001001111111111111111111111111111111111111111111111111100111111111111111111001001001111111111111111111111111111111111111111
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,4)=2  (3,5)=2  (5,1)=2  (5,2)=2  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,4)=8  (9,5)=8  (9,10)=4  (9,11)=4  (11,4)=8  (11,5)=8 
   (768.2 bits)
data: a background with size (3,1) and color cyan and layers
diff: 
delta: (1,0)=2  (2,0)=4 
   (45.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color blue and layers
  [0]: a rectangle at (5,4) with size (1,8) and color blue and mask full
  [01]: a rectangle at (1,1) with size (1,11) and color blue and mask full
  [011]: a rectangle at (7,1) with size (1,11) and color blue and mask full
  [0111]: a rectangle at (3,10) with size (1,2) and color red and mask full
  [01111]: a rectangle at (0,0) with size (13,13) and color black and mask 1111111111111100100100100111111111111111001001001001111111111111111111111111111111111111111111111111100111111111111111111001001001111111111111111111111111111111111111111
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,4)=2  (3,5)=2  (5,1)=2  (5,2)=2  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,4)=8  (9,5)=8  (9,10)=4  (9,11)=4  (11,4)=8  (11,5)=8 
! size mismatch, 10x10 instead of 3x1

TRAIN f8b3ba0a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  [0]: a rectangle at (9,4) with size (1,8) and color red and mask full
  [01]: a rectangle at (1,1) with size (1,11) and color red and mask full
  [011]: a rectangle at (7,1) with size (1,11) and color red and mask full
  [0111]: a rectangle at (13,1) with size (1,11) and color red and mask full
  [01111]: a rectangle at (5,4) with size (1,5) and color red and mask full
diff: 
delta: (1,3)=0  (1,4)=4  (1,5)=4  (1,6)=0  (1,9)=0  (3,1)=1  (3,2)=1  (3,4)=2  (3,5)=2  (3,7)=4  (3,8)=4  (3,10)=2  (3,11)=2  (5,1)=8  (5,2)=8  (5,6)=0  (5,10)=8  (5,11)=8  (7,3)=0  (7,6)=0  (7,7)=1  (7,8)=1  (7,9)=0  (9,1)=4  (9,2)=4  (9,6)=0  (9,9)=0  (11,1)=2  (11,2)=2  (11,4)=1  (11,5)=1  (11,7)=2  (11,8)=2  (11,10)=4  (11,11)=4  (13,3)=0  (13,6)=0  (13,7)=4  (13,8)=4  (13,9)=0 
! size mismatch, 10x10 instead of 3x1

TEST f8b3ba0a.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1812.2 bits (1812.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-9] Checking task f8c80d96.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10543.7 = 10552.7
DL output with Mo: L = 9.0 + 23109.8 = 23118.7
DL input+output M: L = 17.9 + 33653.5 = 33671.4

# learning a model for train pairs
33671.4	
18138.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10242.9	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
9156.1	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
8577.9	OUT DEF: size={size}
8507.2	OUT DEF: layer[01].mask=full
8439.2	OUT DEF: layer[0].color=grey
8393.6	IN  DEF: color=black
8358.6	OUT DEF: layer[0].pos=(?,?)
8323.6	OUT DEF: layer[0].size=(?,?)
8288.6	OUT DEF: layer[01].pos=(?,?)
8253.5	OUT DEF: layer[01].size=(?,?)
8218.5	IN  DEF: size=(?,?)
7955.2	IN  DEF: size.i=10
7691.9	IN  DEF: size.j=10
7656.9	IN  DEF: layer[0].pos=(?,?)
7621.8	IN  DEF: layer[0].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at (?,?) with size (?,?) and color grey and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full
WHERE (Mi)
a background with size (10,10) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 49.9 + 1929.9 = 1979.8
DL output with Mo: L = 61.6 + 5580.4 = 5642.0
DL input+output M: L = 111.5 + 7510.3 = 7621.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (6,6) and color cyan and mask 101010101011101000101111100000111111
diff: 
delta:
   (67.2 bits)
data: a background with size (10,10) and color cyan and layers
  [0]: a rectangle at (1,0) with size (9,9) and color grey and mask 101010101101010100101010111101010000101011111101000000101111111100000000111111111
  [01]: a rectangle at (8,0) with size (1,2) and color cyan and mask full
diff: 
delta:
   (138.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,0) with size (6,6) and color cyan and mask 101010101011101000101111100000111111
diff: 
delta:
! 98 wrong pixels (generated / expected)

TRAIN f8c80d96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,4) with size (6,6) and color blue and mask 111111000001000001111001001001001001
diff: 
delta:
   (67.2 bits)
data: a background with size (10,10) and color grey and layers
  [0]: a rectangle at (0,2) with size (8,8) and color grey and mask 1111111111111111000000111111101111111011000110111101101111011011
  [01]: a rectangle at (0,1) with size (9,9) and color blue and mask full
diff: 
delta:
   (131.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,4) with size (6,6) and color blue and mask 111111000001000001111001001001001001
diff: 
delta:
! 98 wrong pixels (generated / expected)

TRAIN f8c80d96.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (4,7) and color red and mask 1111111100000110111011010101
diff: 
delta:
   (58.5 bits)
data: a background with size (10,10) and color red and layers
  [0]: a rectangle at (0,0) with size (5,9) and color grey and mask 111111111100000001101111101101000101101010101
  [01]: a rectangle at (6,0) with size (1,10) and color grey and mask full
diff: 
delta: (8,0)=5# (8,1)=5# (8,2)=5# (8,3)=5# (8,4)=5# (8,5)=5# (8,6)=5# (8,7)=5# (8,8)=5# (8,9)=5#
   (288.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,1) with size (4,7) and color red and mask 1111111100000110111011010101
diff: 
delta:
! 98 wrong pixels (generated / expected)

TRAIN f8c80d96.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,6) and color yellow and mask 111111100000100000100111100100100100100111100000100000111111
diff: 
delta:
! 98 wrong pixels (generated / expected)

TEST f8c80d96.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5580.4 bits (5580.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-8] Checking task f8ff0b80.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12505.8 = 12514.8
DL output with Mo: L = 9.0 + 1359.1 = 1368.1
DL input+output M: L = 17.9 + 13865.0 = 13882.9

# learning a model for train pairs
13882.9	
9724.4	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7309.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
5926.9	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
5788.9	IN  DEF: layer[01].color=red
5551.1	OUT DEF: color={layer[011].color}
5505.5	IN  DEF: color=black
5470.5	OUT DEF: size=(?,?)
5307.9	OUT DEF: size.i=3
5237.3	OUT DEF: size.j=1
5202.2	IN  DEF: size=(?,?)
4923.7	IN  DEF: size.i=12
4645.1	IN  DEF: size.j=12
4610.1	IN  DEF: layer[0].pos=(?,?)
4575.0	IN  DEF: layer[0].size=(?,?)
4540.0	IN  DEF: layer[01].pos=(?,?)
4505.0	IN  DEF: layer[01].size=(?,?)
4342.4	IN  DEF: layer[01].size.i=3
4307.4	IN  DEF: layer[011].pos=(?,?)
4272.4	IN  DEF: layer[011].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,1) and color {layer[011].color} and layers
WHERE (Mi)
a background with size (12,12) and color black and layers
  [0]: a rectangle at (?,?) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (3,?) and color red and mask ?
  [011]: a rectangle at (?,?) with size (?,?) and color ? and mask ?

DL input  with Mi: L = 106.3 + 3304.1 = 3410.3
DL output with Mo: L = 16.0 + 846.1 = 862.1
DL input+output M: L = 122.2 + 4150.2 = 4272.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 1111001100110
  [01]: a rectangle at (6,3) with size (3,4) and color red and mask 1011110110
  [011]: a rectangle at (2,8) with size (3,3) and color cyan and mask 100011010
diff: 
delta:
   (112.6 bits)
data: a background with size (3,1) and color cyan and layers
diff: 
delta: (0,0)=3  (1,0)=2 
   (28.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 1111001100110
  [01]: a rectangle at (6,3) with size (3,4) and color red and mask 1011110110
  [011]: a rectangle at (2,8) with size (3,3) and color cyan and mask 100011010
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color green and mask 1111001100110
  [01]: a rectangle at (2,8) with size (3,3) and color cyan and mask 100011010
  [011]: a rectangle at (6,3) with size (3,4) and color red and mask 1011110110
diff:   layer[01].color
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (6,3) with size (3,4) and color red and mask 1011110110
  [01]: a rectangle at (2,8) with size (3,3) and color cyan and mask 100011010
  [011]: a rectangle at (1,1) with size (4,4) and color green and mask 1111001100110
diff:   layer[01].color
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,7) with size (4,4) and color blue and mask 10110001111011
  [01]: a rectangle at (7,2) with size (3,2) and color red and mask 101110
  [011]: a rectangle at (8,8) with size (3,3) and color orange and mask 110111100
diff: 
delta:
   (104.6 bits)
data: a background with size (3,1) and color orange and layers
diff: 
delta: (0,0)=1  (2,0)=2 
   (28.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,7) with size (4,4) and color blue and mask 10110001111011
  [01]: a rectangle at (7,2) with size (3,2) and color red and mask 101110
  [011]: a rectangle at (8,8) with size (3,3) and color orange and mask 110111100
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (1,7) with size (4,4) and color blue and mask 10110001111011
  [01]: a rectangle at (8,8) with size (3,3) and color orange and mask 110111100
  [011]: a rectangle at (7,2) with size (3,2) and color red and mask 101110
diff:   layer[01].color
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (2,8) with size (3,2) and color blue and mask 111101
  [01]: a rectangle at (1,1) with size (3,4) and color red and mask 11111100100
  [011]: a rectangle at (7,3) with size (4,5) and color yellow and mask 10111111111111100
diff: 
delta:
   (113.1 bits)
data: a background with size (3,1) and color yellow and layers
diff: 
delta: (1,0)=2  (2,0)=1 
   (28.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (7,3) with size (4,5) and color yellow and mask 10111111111111100
  [01]: a rectangle at (1,1) with size (3,4) and color red and mask 11111100100
  [011]: a rectangle at (2,8) with size (3,2) and color blue and mask 111101
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (7,3) with size (4,5) and color yellow and mask 10111111111111100
  [01]: a rectangle at (2,8) with size (3,2) and color blue and mask 111101
  [011]: a rectangle at (1,1) with size (3,4) and color red and mask 11111100100
diff:   layer[01].color
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (8,5) with size (4,4) and color pink and mask 100110101100100
  [01]: a rectangle at (5,3) with size (2,3) and color blue and mask 111110
  [011]: a rectangle at (1,1) with size (2,2) and color green and mask 1110
diff:   layer[01].color  layer[01].size.i
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  [0]: a rectangle at (5,3) with size (2,3) and color blue and mask 111110
  [01]: a rectangle at (1,1) with size (2,2) and color green and mask 1110
  [011]: a rectangle at (8,5) with size (4,4) and color pink and mask 100110101100100
diff:   layer[01].color  layer[01].size.i
delta:
! 2 wrong pixels (generated / expected)

TEST f8ff0b80.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 846.1 bits (846.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-7] Checking task f9012d9b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8134.7 = 8143.6
DL output with Mo: L = 9.0 + 796.6 = 805.5
DL input+output M: L = 17.9 + 8931.3 = 8949.2

# learning a model for train pairs
8949.2	
4917.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
4285.5	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
4027.8	OUT DEF: size={layer[01].size}
3957.1	IN  DEF: layer[01].mask=full
3922.1	IN  DEF: size=(?,?)
3887.1	IN  DEF: layer[0].pos=(?,?)
3779.1	IN  DEF: layer[0].pos.i=0
3671.0	IN  DEF: layer[0].pos.j=0
3636.0	IN  DEF: layer[0].size=(?,?)
3601.0	IN  DEF: layer[01].pos=(?,?)
3566.0	IN  DEF: layer[01].size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[01].size} and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  [0]: a rectangle at (0,0) with size (?,?) and color ? and mask ?
  [01]: a rectangle at (?,?) with size (?,?) and color ? and mask full

DL input  with Mi: L = 71.4 + 2946.8 = 3018.2
DL output with Mo: L = 10.2 + 537.6 = 547.8
DL input+output M: L = 81.6 + 3484.4 = 3566.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (5,5) and color blue and mask 100011100010101111101010
  [01]: a rectangle at (3,0) with size (2,2) and color black and mask full
diff: 
delta:
   (88.4 bits)
data: a background with size (2,2) and color blue and layers
diff: 
delta: (1,0)=2 
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (5,5) and color blue and mask 100011100010101111101010
  [01]: a rectangle at (3,0) with size (2,2) and color black and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color red and layers
  [0]: a rectangle at (0,0) with size (5,5) and color blue and mask 100011100010101111101010
  [01]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
! size mismatch, 1x1 instead of 2x2

TRAIN f9012d9b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,4) and color pink and mask 101101001011010
  [01]: a rectangle at (0,0) with size (1,1) and color cyan and mask full
diff: 
delta: (0,2)=0 
   (89.1 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  [0]: a rectangle at (0,0) with size (4,4) and color pink and mask 101101001011010
  [01]: a rectangle at (0,0) with size (1,1) and color cyan and mask full
diff: 
delta: (0,2)=0 
! 1 wrong pixels (generated / expected)

TRAIN f9012d9b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (0,0) with size (7,7) and color grey and mask 100001111101001000100100111111101001000100100
  [01]: a rectangle at (5,5) with size (2,2) and color black and mask full
diff: 
delta:
   (117.2 bits)
data: a background with size (2,2) and color grey and layers
diff: 
delta: (1,1)=2 
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (0,0) with size (7,7) and color grey and mask 100001111101001000100100111111101001000100100
  [01]: a rectangle at (5,5) with size (2,2) and color black and mask full
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (0,0) with size (7,7) and color grey and mask 100001111101001000100100111111101001000100100
  [01]: a rectangle at (6,0) with size (1,2) and color red and mask full
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
! size mismatch, 1x2 instead of 2x2

TRAIN f9012d9b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  [0]: a rectangle at (0,0) with size (7,7) and color cyan and mask 1101101101101101101101101101000101100001100001101
  [01]: a rectangle at (1,0) with size (4,4) and color blue and mask full
diff: 
delta: (0,1)=1  (3,4)=1  (4,6)=1  (5,2)=1  (5,5)=1  (6,1)=1  (6,4)=1 
! size mismatch, 4x4 instead of 3x3
>> Trial 2
data: a background with size (7,7) and color blue and layers
  [0]: a rectangle at (0,0) with size (7,7) and color cyan and mask 1101101101101101101101101101000101100001100001101
  [01]: a rectangle at (0,1) with size (1,1) and color blue and mask full
diff: 
delta: (0,4)=0  (0,5)=0  (0,6)=0  (1,4)=0  (1,5)=0  (1,6)=0  (2,4)=0  (2,5)=0  (2,6)=0 
! size mismatch, 1x1 instead of 3x3

TEST f9012d9b.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 537.6 bits (537.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-6] Checking task fafffa47.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7978.8 = 7987.8
DL output with Mo: L = 9.0 + 2618.7 = 2627.6
DL input+output M: L = 17.9 + 10597.5 = 10615.4

# learning a model for train pairs
10615.4	
8469.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
7083.4	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
6830.3	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
6599.5	OUT DEF: layer[0].color=red
6368.6	IN  DEF: layer[0].color=brown
6137.7	IN  DEF: layer[01].color=blue
6063.0	OUT DEF: color=black
5988.2	IN  DEF: color=black
5926.8	OUT DEF: size=(?,?)
5652.6	OUT DEF: size.j={size.j}
5379.9	OUT DEF: size.i={size.j}
5318.4	OUT DEF: layer[0].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ({size.j},{size.j}) and color black and layers
  [0]: a rectangle at (?,?) with size ? and color red and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color brown and mask ?
  [01]: a rectangle at ? with size ? and color blue and mask ?

DL input  with Mi: L = 44.1 + 3875.1 = 3919.3
DL output with Mo: L = 37.6 + 1361.5 = 1399.1
DL input+output M: L = 81.7 + 5236.7 = 5318.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 111110110
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 111100010
diff: 
delta:
   (77.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (2,1) and color red and mask full
diff: 
delta:
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 111110110
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 111100010
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN fafffa47.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 100110101
  [01]: a rectangle at (3,0) with size (3,1) and color blue and mask full
diff: 
delta: (3,2)=1 
   (82.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color red and mask full
diff: 
delta: (2,1)=2 
   (30.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 100110101
  [01]: a rectangle at (3,0) with size (3,1) and color blue and mask full
diff: 
delta: (3,2)=1 
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 1101010
  [01]: a rectangle at (4,2) with size (1,1) and color blue and mask full
diff: 
delta: (5,0)=1 
   (79.6 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color red and mask 110010101
diff: 
delta:
   (29.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 1101010
  [01]: a rectangle at (4,2) with size (1,1) and color blue and mask full
diff: 
delta: (5,0)=1 
! 5 wrong pixels (generated / expected)

TRAIN fafffa47.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 10111100
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 100110001
diff: 
delta:
   (77.8 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,1) with size (1,1) and color red and mask full
diff: 
delta: (2,0)=2 
   (30.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,0) with size (3,3) and color brown and mask 10111100
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 100110001
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color brown and mask 111101
  [01]: a rectangle at (4,0) with size (2,3) and color blue and mask 101111
diff: 
delta:
   (69.5 bits)
data: a background with size (3,3) and color black and layers
  [0]: a rectangle at (0,0) with size (1,1) and color red and mask full
diff: 
delta: (0,2)=2 
   (30.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,1) with size (3,2) and color brown and mask 111101
  [01]: a rectangle at (4,0) with size (2,3) and color blue and mask 101111
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  [0]: a rectangle at (0,2) with size (3,1) and color brown and mask full
  [01]: a rectangle at (3,0) with size (3,3) and color blue and mask 1010110
diff: 
delta: (0,0)=9# (2,0)=9#
! 4 wrong pixels (generated / expected)

TEST fafffa47.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1361.5 bits (1361.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-5] Checking task fcb5c309.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 31025.0 = 31034.0
DL output with Mo: L = 9.0 + 11070.1 = 11079.1
DL input+output M: L = 17.9 + 42095.1 = 42113.0

# learning a model for train pairs
42113.0	
31529.3	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
22872.6	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
16624.6	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
14893.5	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
14383.7	OUT DEF: size={layer[0].size}
14245.3	OUT DEF: layer[0].color={color}
14177.7	IN  SHAPE at layer[0111]: a point at ? with color ?
13940.1	OUT DEF: color={layer[0111].color}
13871.6	IN  SHAPE at layer[01111]: a point at ? with color ?
13801.8	IN  SHAPE at layer[0110]: a point at ? with color ?
13730.2	IN  SHAPE at layer[01101]: a point at ? with color ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {layer[0].size} and color {layer[0111].color} and layers
  [0]: a rectangle at ? with size ? and color {color} and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [0110]: a point at ? with color ?
  [01101]: a point at ? with color ?
  [011]: a rectangle at ? with size ? and color ? and mask ?
  [0111]: a point at ? with color ?
  [01111]: a point at ? with color ?

DL input  with Mi: L = 97.7 + 12094.1 = 12191.8
DL output with Mo: L = 32.4 + 1506.0 = 1538.4
DL input+output M: L = 130.1 + 13600.1 = 13730.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,0) with size (7,7) and color red and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (3,10) with size (4,3) and color red and mask 111101101111
  [0110]: a point at (0,4) with color yellow
  [01101]: a point at (0,12) with color yellow
  [011]: a rectangle at (9,9) with size (2,2) and color yellow and mask 110
  [0111]: a point at (4,1) with color yellow
  [01111]: a point at (6,4) with color yellow
diff: 
delta: (9,4)=4  (12,4)=4  (12,11)=4 
   (305.6 bits)
data: a background with size (7,7) and color yellow and layers
  [0]: a rectangle at (1,1) with size (5,5) and color black and mask 1111110111111111111011111
diff: 
delta:
   (52.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  [0]: a rectangle at (2,0) with size (7,7) and color red and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (3,10) with size (4,3) and color red and mask 111101101111
  [0110]: a point at (0,4) with color yellow
  [01101]: a point at (0,12) with color yellow
  [011]: a rectangle at (9,9) with size (2,2) and color yellow and mask 110
  [0111]: a point at (4,1) with color yellow
  [01111]: a point at (6,4) with color yellow
diff: 
delta: (9,4)=4  (12,4)=4  (12,11)=4 
! 25 wrong pixels (generated / expected)

TRAIN fcb5c309.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (2,8) with size (6,7) and color blue and mask 111111110000011000001100000110000011111111
  [01]: a rectangle at (7,1) with size (5,6) and color blue and mask 111111100001100001100001111111
  [0110]: a point at (0,13) with color green
  [01101]: a point at (1,4) with color green
  [011]: a rectangle at (11,10) with size (2,2) and color green and mask 1110
  [0111]: a point at (2,3) with color green
  [01111]: a point at (3,11) with color green
diff: 
delta: (4,1)=3  (4,5)=3  (5,6)=3  (5,9)=3  (5,11)=3  (9,5)=3  (11,0)=3  (12,0)=3  (12,7)=3 
   (436.8 bits)
data: a background with size (6,7) and color green and layers
  [0]: a rectangle at (1,1) with size (4,5) and color black and mask 11111110101111111011
diff: 
delta:
   (46.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  [0]: a rectangle at (2,8) with size (6,7) and color blue and mask 111111110000011000001100000110000011111111
  [01]: a rectangle at (7,1) with size (5,6) and color blue and mask 111111100001100001100001111111
  [0110]: a point at (0,13) with color green
  [01101]: a point at (1,4) with color green
  [011]: a rectangle at (11,10) with size (2,2) and color green and mask 1110
  [0111]: a point at (2,3) with color green
  [01111]: a point at (3,11) with color green
diff: 
delta: (4,1)=3  (4,5)=3  (5,6)=3  (5,9)=3  (5,11)=3  (9,5)=3  (11,0)=3  (12,0)=3  (12,7)=3 
! 19 wrong pixels (generated / expected)

TRAIN fcb5c309.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (1,1) with size (7,7) and color green and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (3,10) with size (5,4) and color green and mask 11111001100110011111
  [0110]: a point at (0,8) with color red
  [01101]: a point at (1,10) with color red
  [011]: a rectangle at (10,3) with size (4,3) and color green and mask 111101101111
  [0111]: a point at (2,3) with color red
  [01111]: a point at (2,5) with color red
diff: 
delta: (4,8)=2  (4,12)=2  (5,3)=2  (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
   (467.1 bits)
data: a background with size (7,7) and color red and layers
  [0]: a rectangle at (1,1) with size (5,5) and color black and mask 111111101111111111110101
diff: 
delta:
   (52.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  [0]: a rectangle at (1,1) with size (7,7) and color green and mask 1111111100000110000011000001100000110000011111111
  [01]: a rectangle at (3,10) with size (5,4) and color green and mask 11111001100110011111
  [0110]: a point at (0,8) with color red
  [01101]: a point at (1,10) with color red
  [011]: a rectangle at (10,3) with size (4,3) and color green and mask 111101101111
  [0111]: a point at (2,3) with color red
  [01111]: a point at (2,5) with color red
diff: 
delta: (4,8)=2  (4,12)=2  (5,3)=2  (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
! 23 wrong pixels (generated / expected)

TRAIN fcb5c309.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  [0]: a rectangle at (1,4) with size (8,8) and color blue and mask 1111111110000001100000011000000110000001100000011000000111111111
  [01]: a rectangle at (11,10) with size (5,6) and color blue and mask 111111100001100001100001111111
  [0110]: a point at (0,14) with color cyan
  [01101]: a point at (2,6) with color cyan
  [011]: a rectangle at (2,0) with size (3,3) and color blue and mask 111101111
  [0111]: a point at (2,8) with color cyan
  [01111]: a point at (6,6) with color cyan
diff: 
delta: (2,12)=8  (3,12)=8  (3,14)=8  (4,14)=8  (6,16)=8  (7,9)=8  (8,13)=8  (9,1)=8  (10,5)=8  (11,1)=8  (13,5)=8  (13,11)=8  (13,13)=8  (14,3)=8  (14,4)=8  (14,7)=8  (16,8)=8  (16,9)=8  (16,16)=8 
! 34 wrong pixels (generated / expected)

TEST fcb5c309.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 1506.0 bits (1506.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-4] Checking task fcc82909.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5743.3 = 5752.2
DL output with Mo: L = 9.0 + 12136.7 = 12145.7
DL input+output M: L = 17.9 + 17880.0 = 17897.9

# learning a model for train pairs
17897.9	
14801.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
13506.4	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
12927.5	OUT DEF: size={size}
12537.8	OUT SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
12150.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
11932.1	OUT SHAPE at layer[0111]: a rectangle at ? with size ? and color ? and mask ?
11702.2	OUT SHAPE at layer[01111]: a rectangle at ? with size ? and color ? and mask ?
10842.3	OUT DEF: layer[011]={layer[0]}
10563.3	OUT DEF: layer[0111].size={layer[0].size}
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size {size} and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: {layer[0]}
  [0111]: a rectangle at ? with size {layer[0].size} and color ? and mask ?
  [01111]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 26.6 + 5337.2 = 5363.7
DL output with Mo: L = 77.8 + 5121.7 = 5199.5
DL input+output M: L = 104.4 + 10458.8 = 10563.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (1,2) and color brown and mask full
diff: 
delta: (3,1)=6  (3,2)=6  (5,5)=8  (5,6)=4  (6,5)=7# (6,6)=7#
   (157.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (7,5) with size (3,2) and color green and mask full
  [01]: a rectangle at (4,1) with size (2,2) and color green and mask full
  [011]: a rectangle at (2,1) with size (1,2) and color brown and mask full
  [0111]: a rectangle at (3,1) with size (1,2) and color pink and mask full
  [01111]: a rectangle at (6,5) with size (1,2) and color orange and mask full
diff: 
delta: (5,5)=8  (5,6)=4 
   (139.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (2,1) with size (1,2) and color brown and mask full
diff: 
delta: (3,1)=6  (3,2)=6  (5,5)=8  (5,6)=4  (6,5)=7# (6,6)=7#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,1) with size (1,2) and color pink and mask full
diff: 
delta: (2,1)=9# (2,2)=9# (5,5)=8  (5,6)=4  (6,5)=7# (6,6)=7#
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,5) with size (1,2) and color orange and mask full
diff: 
delta: (2,1)=9# (2,2)=9# (3,1)=6  (3,2)=6  (5,5)=8  (5,6)=4 
! 20 wrong pixels (generated / expected)

TRAIN fcc82909.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (2,2) and color yellow and mask 1001
diff: 
delta: (1,3)=8  (2,2)=9# (4,6)=2  (4,7)=1  (5,6)=1  (5,7)=2 
   (163.3 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (3,2) and color green and mask full
  [01]: a rectangle at (6,6) with size (2,2) and color green and mask full
  [011]: a rectangle at (1,2) with size (2,2) and color yellow and mask 1001
  [0111]: a rectangle at (4,6) with size (2,2) and color blue and mask 110
  [01111]: a rectangle at (4,6) with size (2,2) and color red and mask full
diff: 
delta: (1,3)=8  (2,2)=9#
   (145.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,2) with size (2,2) and color yellow and mask 1001
diff: 
delta: (1,3)=8  (2,2)=9# (4,6)=2  (4,7)=1  (5,6)=1  (5,7)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,6) with size (2,2) and color blue and mask 110
diff: 
delta: (1,2)=4  (1,3)=8  (2,2)=9# (2,3)=4  (4,6)=2  (5,7)=2 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (4,6) with size (2,2) and color red and mask 1001
diff: 
delta: (1,2)=4  (1,3)=8  (2,2)=9# (2,3)=4  (4,7)=1  (5,6)=1 
! 20 wrong pixels (generated / expected)

TRAIN fcc82909.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,4) with size (2,2) and color pink and mask full
diff: 
delta: (1,2)=2  (1,3)=4  (1,6)=9# (1,7)=8  (2,2)=6  (2,3)=7# (2,6)=8  (2,7)=9# (5,4)=7#
   (213.1 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (3,2) with size (6,4) and color green and mask 110011000011001100110011
  [01]: a rectangle at (3,6) with size (2,2) and color green and mask full
  [011]: a rectangle at (5,4) with size (2,2) and color pink and mask full
  [0111]: a rectangle at (1,6) with size (2,2) and color cyan and mask 110
  [01111]: a rectangle at (1,6) with size (2,2) and color brown and mask full
diff: 
delta: (1,2)=2  (1,3)=4  (2,2)=6  (2,3)=7# (5,4)=7#
   (227.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,4) with size (2,2) and color pink and mask full
diff: 
delta: (1,2)=2  (1,3)=4  (1,6)=9# (1,7)=8  (2,2)=6  (2,3)=7# (2,6)=8  (2,7)=9# (5,4)=7#
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (5,4) with size (2,2) and color pink and mask 1110
diff: 
delta: (1,2)=2  (1,3)=4  (1,6)=9# (1,7)=8  (2,2)=6  (2,3)=7# (2,6)=8  (2,7)=9# (5,4)=7#
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (6,4) with size (1,2) and color pink and mask full
diff: 
delta: (1,2)=2  (1,3)=4  (1,6)=9# (1,7)=8  (2,2)=6  (2,3)=7# (2,6)=8  (2,7)=9# (5,4)=7# (5,5)=6 
! 30 wrong pixels (generated / expected)

TRAIN fcc82909.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color blue and mask full
diff: 
delta: (1,6)=2  (1,7)=9# (2,0)=2  (2,6)=1  (2,7)=6  (3,3)=4  (3,4)=7# (4,3)=8  (4,4)=4 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (2,2) and color blue and mask 1011
diff: 
delta: (1,6)=2  (1,7)=9# (2,0)=2  (2,6)=1  (2,7)=6  (3,3)=4  (3,4)=7# (4,3)=8  (4,4)=4 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (1,0) with size (1,2) and color blue and mask full
diff: 
delta: (1,6)=2  (1,7)=9# (2,0)=2  (2,1)=1  (2,6)=1  (2,7)=6  (3,3)=4  (3,4)=7# (4,3)=8  (4,4)=4 
! 32 wrong pixels (generated / expected)

TEST fcc82909.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 5121.7 bits (5121.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-3] Checking task feca6190.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2080.4 = 2089.4
DL output with Mo: L = 9.0 + 19885.5 = 19894.5
DL input+output M: L = 17.9 + 21965.9 = 21983.8

# learning a model for train pairs
21983.8	
20270.4	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
19454.8	OUT SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
19281.3	IN  SHAPE at layer[0]: a point at ? with color ?
19048.5	OUT DEF: layer[0].color={layer[0].color}
18973.8	OUT DEF: color=black
18899.0	IN  DEF: color=black
18837.5	OUT DEF: size=(?,?)
18776.1	OUT DEF: layer[0].pos=(?,?)
18553.2	OUT DEF: layer[0].pos.i={layer[0].pos.j}
18380.6	OUT DEF: layer[0].pos.j={layer[0].pos.j}
18319.1	OUT DEF: layer[0].size=(?,?)
18257.7	OUT DEF: layer[01].pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  [0]: a rectangle at ({layer[0].pos.j},{layer[0].pos.j}) with size (?,?) and color {layer[0].color} and mask ?
  [01]: a rectangle at (?,?) with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color black and layers
  [0]: a point at ? with color ?

DL input  with Mi: L = 18.1 + 1823.1 = 1841.2
DL output with Mo: L = 60.0 + 16356.5 = 16416.5
DL input+output M: L = 78.1 + 18179.6 = 18257.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,0) with color blue
diff: 
delta: (0,2)=7#
   (36.8 bits)
data: a background with size (10,10) and color black and layers
  [0]: a rectangle at (0,0) with size (10,10) and color blue and mask 1000000001000000001000000001000000001000000001000000001000000001000000001000000001000000000
  [01]: a rectangle at (2,2) with size (8,8) and color orange and mask 100000010000001010000101000010100001010000101000010100000
diff: 
delta:
   (236.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,0) with color blue
diff: 
delta: (0,2)=7#
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,2) with color orange
diff: 
delta: (0,0)=1 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,1) with color black
diff: 
delta: (0,0)=1  (0,2)=7#
! 21 wrong pixels (generated / expected)

TRAIN feca6190.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,2) with color red
diff: 
delta:
   (21.5 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (2,2) with size (3,3) and color red and mask 1010100
  [01]: a rectangle at (4,3) with size (1,2) and color black and mask full
diff: 
delta:
   (58.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,2) with color red
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN feca6190.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,2) with color pink
diff: 
delta: (0,0)=4  (0,4)=8 
   (51.2 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (2,2) with size (13,13) and color pink and mask 1000000000001000000000001000000000001000000000001000000000001000000000001000000000001000000000001000000000001000000000001000000000001000000000001000000000000
  [01]: a rectangle at (4,4) with size (11,11) and color cyan and mask 100000000010000000001010000000101000000010100000001010000000101000000010100000001010000000101000000010100000000
diff: 
delta: (0,14)=4  (1,13)=4  (2,12)=4  (3,11)=4  (4,10)=4  (5,9)=4  (6,8)=4  (7,7)=4  (8,6)=4  (9,5)=4  (10,4)=4  (11,3)=4  (12,2)=4  (13,1)=4  (14,0)=4 
   (658.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,0) with color yellow
diff: 
delta: (0,2)=6  (0,4)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,2) with color pink
diff: 
delta: (0,0)=4  (0,4)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,4) with color cyan
diff: 
delta: (0,0)=4  (0,2)=6 
! size mismatch, 10x10 instead of 15x15

TRAIN feca6190.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,3) with color cyan
diff: 
delta: (0,1)=9# (0,4)=4 
   (51.2 bits)
data: a background with size (15,15) and color black and layers
  [0]: a rectangle at (3,3) with size (12,12) and color cyan and mask 1000000000010000000000100000000001000000000010000000000100000000001000000000010000000000100000000001000000000010000000000100000000000
  [01]: a rectangle at (4,4) with size (11,11) and color yellow and mask 100000000011000000001100000000110000000011000000001100000000110000000011000000001100000000110000000011000000000
diff: 
delta: (1,14)=9# (2,13)=9# (3,12)=9# (4,11)=9# (5,10)=9# (6,9)=9# (7,8)=9# (8,7)=9# (9,6)=9# (10,5)=9# (11,4)=9# (12,3)=9# (13,2)=9# (14,1)=9#
   (614.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,1) with color brown
diff: 
delta: (0,3)=8  (0,4)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,3) with color cyan
diff: 
delta: (0,1)=9# (0,4)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,4) with color yellow
diff: 
delta: (0,1)=9# (0,3)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN feca6190.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,1) with color yellow
diff: 
delta:
   (21.5 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (1,1) with size (4,4) and color yellow and mask 1001001001000
  [01]: a rectangle at (4,2) with size (1,3) and color black and mask full
diff: 
delta:
   (68.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,1) with color yellow
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (1,5) and color black and layers
  [0]: a point at (0,0) with color black
diff: 
delta: (0,1)=4 
! size mismatch, 10x10 instead of 5x5

TRAIN feca6190.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color brown and layers
  [0]: a point at (0,1) with color pink
diff:   color
delta: (0,0)=0  (0,2)=7# (0,3)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (1,5) and color brown and layers
  [0]: a point at (0,2) with color orange
diff:   color
delta: (0,0)=0  (0,1)=6  (0,3)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (1,5) and color brown and layers
  [0]: a point at (0,3) with color cyan
diff:   color
delta: (0,0)=0  (0,1)=6  (0,2)=7#
! size mismatch, 10x10 instead of 20x20

TEST feca6190.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 16356.5 bits (16356.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-2] Checking task ff28f65a.json: 8 train, 3 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16251.5 = 16260.5
DL output with Mo: L = 9.0 + 4410.2 = 4419.2
DL input+output M: L = 17.9 + 20661.7 = 20679.6

# learning a model for train pairs
20679.6	
11112.0	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
10319.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
Stack overflow
Called from unknown location
Error: no learned model
=====================================
[-1] Checking task ff805c23.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 205171.1 = 205180.0
DL output with Mo: L = 9.0 + 4076.6 = 4085.6
DL input+output M: L = 17.9 + 209247.7 = 209265.6

# learning a model for train pairs
209265.6	
133600.1	IN  SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
117288.8	IN  SHAPE at layer[01]: a rectangle at ? with size ? and color ? and mask ?
101544.6	IN  SHAPE at layer[011]: a rectangle at ? with size ? and color ? and mask ?
99661.8	OUT SHAPE at layer[0]: a rectangle at ? with size ? and color ? and mask ?
99616.2	OUT DEF: color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color black and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
WHERE (Mi)
a background with size ? and color ? and layers
  [0]: a rectangle at ? with size ? and color ? and mask ?
  [01]: a rectangle at ? with size ? and color ? and mask ?
  [011]: a rectangle at ? with size ? and color ? and mask ?

DL input  with Mi: L = 59.8 + 97399.3 = 97459.1
DL output with Mo: L = 24.7 + 2132.5 = 2157.2
DL input+output M: L = 84.5 + 99531.7 = 99616.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color red and mask
  [01]: a rectangle at (0,0) with size (6,6) and color green and mask 111100111011111011100111011111011110
  [011]: a rectangle at (18,0) with size (6,6) and color green and mask 11110011111100111111011111011111100
diff: 
delta: (0,18)=1  (0,19)=1  (0,20)=1  (0,21)=1  (0,22)=1  (1,18)=1  (1,19)=1  (1,20)=1  (1,21)=1  (1,22)=1  (1,23)=3  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=3  (3,18)=1  (3,19)=1  (3,20)=1  (3,21)=1  (3,22)=1  (3,23)=3  (4,18)=1  (4,19)=1  (4,20)=1  (4,21)=1  (4,22)=1  (4,23)=3  (5,18)=3  (5,19)=3  (5,20)=3  (5,21)=3  (18,18)=3  (18,19)=3  (18,20)=3  (18,21)=3  (19,18)=3  (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,22)=3  (20,23)=3  (21,18)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (2008.9 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color green and mask 1011110111110011111011110
diff: 
delta:
   (71.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (0,0) with size (24,24) and color red and mask
  [01]: a rectangle at (0,0) with size (6,6) and color green and mask 111100111011111011100111011111011110
  [011]: a rectangle at (18,0) with size (6,6) and color green and mask 11110011111100111111011111011111100
diff: 
delta: (0,18)=1  (0,19)=1  (0,20)=1  (0,21)=1  (0,22)=1  (1,18)=1  (1,19)=1  (1,20)=1  (1,21)=1  (1,22)=1  (1,23)=3  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=3  (3,18)=1  (3,19)=1  (3,20)=1  (3,21)=1  (3,22)=1  (3,23)=3  (4,18)=1  (4,19)=1  (4,20)=1  (4,21)=1  (4,22)=1  (4,23)=3  (5,18)=3  (5,19)=3  (5,20)=3  (5,21)=3  (18,18)=3  (18,19)=3  (18,20)=3  (18,21)=3  (19,18)=3  (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,22)=3  (20,23)=3  (21,18)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (6,6) with size (12,12) and color pink and mask 111111111111110111111011100101100000111111100000110111100000111110000000111110000000110111111011111111111111100101101001110111111011111111111111
  [01]: a rectangle at (0,6) with size (6,12) and color cyan and mask 101110011101101001100101000101101000111011110111101000000101011011110110
  [011]: a rectangle at (18,6) with size (6,12) and color cyan and mask 11011110110101000000101111011110111000101101000101001100101101110011101
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,5)=3  (0,18)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,2)=3  (1,4)=3  (1,19)=3  (1,21)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,18)=3  (2,19)=3  (2,20)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,23)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,20)=3  (4,21)=3  (4,22)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,5)=3  (5,18)=3  (5,20)=3  (5,21)=3  (5,23)=3  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,0)=8  (7,2)=8  (7,21)=8  (7,23)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=8  (8,5)=8  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,3)=8  (9,5)=8  (9,18)=8  (9,20)=8  (10,0)=8  (10,2)=8  (10,5)=8  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,2)=8  (12,3)=8  (12,4)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,2)=8  (13,5)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,18)=8  (13,21)=8  (13,23)=8  (14,3)=8  (14,5)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,18)=8  (14,20)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,4)=8  (15,5)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,0)=8  (16,2)=8  (16,21)=8  (16,23)=8  (17,1)=8  (17,2)=8  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,0)=3  (18,2)=3  (18,3)=3  (18,5)=3  (18,18)=3  (18,20)=3  (18,21)=3  (18,23)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=3  (20,2)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,21)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=3  (21,4)=3  (21,5)=3  (21,18)=3  (21,19)=3  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,2)=3  (22,4)=3  (22,19)=3  (22,21)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,5)=3  (23,18)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (4486.7 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color pink and mask 100111111110111111111111
diff: 
delta:
   (71.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (6,6) with size (12,12) and color pink and mask 111111111111110111111011100101100000111111100000110111100000111110000000111110000000110111111011111111111111100101101001110111111011111111111111
  [01]: a rectangle at (0,6) with size (6,12) and color cyan and mask 101110011101101001100101000101101000111011110111101000000101011011110110
  [011]: a rectangle at (18,6) with size (6,12) and color cyan and mask 11011110110101000000101111011110111000101101000101001100101101110011101
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,5)=3  (0,18)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,2)=3  (1,4)=3  (1,19)=3  (1,21)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,18)=3  (2,19)=3  (2,20)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,23)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,20)=3  (4,21)=3  (4,22)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,5)=3  (5,18)=3  (5,20)=3  (5,21)=3  (5,23)=3  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,0)=8  (7,2)=8  (7,21)=8  (7,23)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=8  (8,5)=8  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,3)=8  (9,5)=8  (9,18)=8  (9,20)=8  (10,0)=8  (10,2)=8  (10,5)=8  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,2)=8  (12,3)=8  (12,4)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,2)=8  (13,5)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,18)=8  (13,21)=8  (13,23)=8  (14,3)=8  (14,5)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,18)=8  (14,20)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,4)=8  (15,5)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,0)=8  (16,2)=8  (16,21)=8  (16,23)=8  (17,1)=8  (17,2)=8  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,0)=3  (18,2)=3  (18,3)=3  (18,5)=3  (18,18)=3  (18,20)=3  (18,21)=3  (18,23)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=3  (20,2)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,21)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=3  (21,4)=3  (21,5)=3  (21,18)=3  (21,19)=3  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,2)=3  (22,4)=3  (22,19)=3  (22,21)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,5)=3  (23,18)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (2,2) with size (17,20) and color grey and mask 100000001001000010010100000000101001000011100000011100000110011000001110011010110011111111001101110010010110100100110100111110011111001001001111100111110010110010010110100100111011001111111100110101100111011011100110000011100110011100001001010011110010100100001001000010010000000000110000110000000000001011110100000000001001100110010000
  [01]: a rectangle at (15,10) with size (5,5) and color blue and mask full
  [011]: a rectangle at (0,0) with size (6,6) and color green and mask 101010011011110011000111111111011110
diff: 
delta: (0,6)=5# (0,7)=5# (0,8)=5# (0,11)=5# (0,12)=5# (0,15)=5# (0,16)=5# (0,17)=5# (0,19)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,6)=5# (1,7)=5# (1,16)=5# (1,17)=5# (1,18)=3  (1,19)=3  (1,20)=3  (1,21)=3  (1,22)=3  (1,23)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,18)=3  (3,19)=3  (3,22)=3  (3,23)=3  (4,19)=3  (4,20)=3  (4,22)=3  (4,23)=3  (5,18)=3  (5,20)=3  (5,22)=3  (6,0)=5# (6,1)=5# (6,22)=5# (6,23)=5# (7,0)=5# (7,1)=5# (7,22)=5# (7,23)=5# (8,0)=5# (8,23)=5# (11,0)=5# (11,23)=5# (12,0)=5# (12,23)=5# (15,0)=5# (15,23)=5# (16,0)=5# (16,1)=5# (16,22)=5# (16,23)=5# (17,0)=5# (17,1)=5# (17,22)=5# (17,23)=5# (18,1)=3  (18,3)=3  (18,5)=3  (18,18)=3  (18,20)=3  (18,22)=3  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,8)=5# (19,9)=5# (19,15)=5# (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,4)=3  (20,5)=3  (20,8)=5# (20,10)=5# (20,11)=5# (20,12)=5# (20,13)=5# (20,15)=5# (20,18)=3  (20,19)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,6)=5# (21,9)=5# (21,10)=5# (21,13)=5# (21,14)=5# (21,17)=5# (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,6)=5# (22,7)=5# (22,16)=5# (22,17)=5# (22,18)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,6)=5# (23,7)=5# (23,8)=5# (23,11)=5# (23,12)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (3244.3 bits)
data: a background with size (5,5) and color black and layers
  [0]: a rectangle at (0,0) with size (5,5) and color grey and mask 1000010000011110011010110
diff: 
delta:
   (71.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  [0]: a rectangle at (2,2) with size (17,20) and color grey and mask 100000001001000010010100000000101001000011100000011100000110011000001110011010110011111111001101110010010110100100110100111110011111001001001111100111110010110010010110100100111011001111111100110101100111011011100110000011100110011100001001010011110010100100001001000010010000000000110000110000000000001011110100000000001001100110010000
  [01]: a rectangle at (15,10) with size (5,5) and color blue and mask full
  [011]: a rectangle at (0,0) with size (6,6) and color green and mask 101010011011110011000111111111011110
diff: 
delta: (0,6)=5# (0,7)=5# (0,8)=5# (0,11)=5# (0,12)=5# (0,15)=5# (0,16)=5# (0,17)=5# (0,19)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,6)=5# (1,7)=5# (1,16)=5# (1,17)=5# (1,18)=3  (1,19)=3  (1,20)=3  (1,21)=3  (1,22)=3  (1,23)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,18)=3  (3,19)=3  (3,22)=3  (3,23)=3  (4,19)=3  (4,20)=3  (4,22)=3  (4,23)=3  (5,18)=3  (5,20)=3  (5,22)=3  (6,0)=5# (6,1)=5# (6,22)=5# (6,23)=5# (7,0)=5# (7,1)=5# (7,22)=5# (7,23)=5# (8,0)=5# (8,23)=5# (11,0)=5# (11,23)=5# (12,0)=5# (12,23)=5# (15,0)=5# (15,23)=5# (16,0)=5# (16,1)=5# (16,22)=5# (16,23)=5# (17,0)=5# (17,1)=5# (17,22)=5# (17,23)=5# (18,1)=3  (18,3)=3  (18,5)=3  (18,18)=3  (18,20)=3  (18,22)=3  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,8)=5# (19,9)=5# (19,15)=5# (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,4)=3  (20,5)=3  (20,8)=5# (20,10)=5# (20,11)=5# (20,12)=5# (20,13)=5# (20,15)=5# (20,18)=3  (20,19)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,6)=5# (21,9)=5# (21,10)=5# (21,13)=5# (21,14)=5# (21,17)=5# (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,6)=5# (22,7)=5# (22,16)=5# (22,17)=5# (22,18)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,6)=5# (23,7)=5# (23,8)=5# (23,11)=5# (23,12)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color yellow and layers
  [0]: a rectangle at (6,6) with size (12,12) and color cyan and mask full
  [01]: a rectangle at (6,0) with size (12,24) and color green and mask full
  [011]: a rectangle at (0,6) with size (24,12) and color green and mask full
diff: 
delta: (0,3)=0  (0,5)=0  (0,6)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,17)=0  (0,18)=0  (0,20)=0  (1,4)=0  (1,10)=0  (1,13)=0  (1,19)=0  (2,2)=0  (2,4)=0  (2,5)=0  (2,8)=0  (2,9)=0  (2,14)=0  (2,15)=0  (2,18)=0  (2,19)=0  (2,21)=0  (3,0)=0  (3,3)=0  (3,8)=0  (3,9)=0  (3,14)=0  (3,15)=0  (3,20)=0  (3,23)=0  (4,1)=0  (4,2)=0  (4,6)=0  (4,7)=0  (4,10)=0  (4,13)=0  (4,16)=0  (4,17)=0  (4,21)=0  (4,22)=0  (5,0)=0  (5,2)=0  (5,5)=0  (5,6)=0  (5,17)=0  (5,18)=0  (5,21)=0  (5,23)=0  (6,0)=0  (6,4)=0  (6,5)=0  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,18)=0  (6,19)=0  (6,23)=0  (7,4)=0  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=0  (7,19)=0  (8,2)=0  (8,3)=0  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=0  (8,20)=0  (8,21)=0  (9,2)=0  (9,3)=0  (9,7)=0  (9,8)=0  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=0  (9,16)=0  (9,20)=0  (9,21)=0  (10,0)=0  (10,1)=0  (10,4)=0  (10,7)=0  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,16)=0  (10,19)=0  (10,22)=0  (10,23)=0  (11,0)=0  (11,8)=0  (11,15)=0  (11,23)=0  (12,0)=0  (12,8)=0  (12,15)=0  (12,23)=0  (13,0)=0  (13,1)=0  (13,4)=0  (13,7)=0  (13,10)=0  (13,13)=0  (13,16)=0  (13,19)=0  (13,22)=0  (13,23)=0  (14,2)=0  (14,3)=0  (14,7)=0  (14,8)=0  (14,15)=0  (14,16)=0  (14,20)=0  (14,21)=0  (15,2)=0  (15,3)=0  (15,9)=0  (15,11)=0  (15,12)=0  (15,14)=0  (15,20)=0  (15,21)=0  (16,4)=0  (16,9)=0  (16,10)=0  (16,13)=0  (16,14)=0  (16,19)=0  (17,0)=0  (17,4)=0  (17,5)=0  (17,18)=0  (17,19)=0  (17,23)=0  (18,0)=0  (18,2)=0  (18,5)=0  (18,6)=0  (18,17)=0  (18,18)=0  (18,21)=0  (18,23)=0  (19,1)=0  (19,2)=0  (19,6)=0  (19,7)=0  (19,10)=0  (19,13)=0  (19,16)=0  (19,17)=0  (19,21)=0  (19,22)=0  (20,0)=0  (20,3)=0  (20,8)=0  (20,9)=0  (20,14)=0  (20,15)=0  (20,20)=0  (20,23)=0  (21,2)=0  (21,4)=0  (21,5)=0  (21,8)=0  (21,9)=0  (21,14)=0  (21,15)=0  (21,18)=0  (21,19)=0  (21,21)=0  (22,4)=0  (22,10)=0  (22,13)=0  (22,19)=0  (23,3)=0  (23,5)=0  (23,6)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,13)=0  (23,17)=0  (23,18)=0  (23,20)=0 
! size mismatch, 10x10 instead of 5x5

TEST ff805c23.json/1: 0 - (FAILURE)

# Performance measures on task
bits-train-error = 2132.5 bits (2132.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00


## performance measures averaged over 400 tasks
bits-train-error = 3346319.4 bits (8365.8 bits/task)
acc-train-micro = 34.58 tasks (8.65%)
acc-train-macro = 28.00 tasks (7.00%)
acc-train-mrr = 0.08
acc-test-micro = 19.50 tasks (4.88%)
acc-test-macro = 19.00 tasks (4.75%)
acc-test-mrr = 0.05

// Profiling...
#calls	#calls/s	Time (s)	Percentage	Section
//      2795	  330105.1	    0.0	  0.0%	Grid.diff
//     69156	  942102.8	    0.1	  0.0%	Model2.eval_template
//      4516	   49341.7	    0.1	  0.0%	Model2.write_grid
//    109240	  736863.4	    0.1	  0.0%	Model2.dl_model_data
//    115222	  610421.8	    0.2	  0.0%	Model2.apply_grid_refinement
//   1195169	  800523.6	    1.5	  0.0%	Model2.parse_grid
//   5858191	 1965009.0	    3.0	  0.0%	Model2.find_defs
//     13204	     567.9	   23.3	  0.3%	Model2.defs_refinements
//      6605	     282.9	   23.3	  0.3%	Model2.model_refinements
//      1662	      52.6	   31.6	  0.4%	Model2.apply_model
// 111669224	 1935329.2	   57.7	  0.7%	Grid.majority_colors
//  33801741	  396224.1	   85.3	  1.1%	Grid.rectangles_of_part
//   8838228	   91936.7	   96.1	  1.2%	Grid.split_part
//    613556	    4380.0	  140.1	  1.7%	Grid.rectangles
//  32556158	   84717.7	  384.3	  4.7%	Model2.parse_shape
//   1195178	    2840.4	  420.8	  5.2%	Grid.segment_by_color
//    116022	      15.3	 7592.6	 93.6%	Model2.read_grid_pairs
//   1195178	     156.9	 7617.7	 93.9%	Model2.read_grid
//       400	       0.0	 8080.9	 99.6%	Model2.learn_model
//       400	       0.0	 8112.7	100.0%	Test.print_learned_model
